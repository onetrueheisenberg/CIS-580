Unnamed: 0,Image observations,Optimizations tried,Optimisation results,Unnamed: 4,Unnamed: 5,Unnamed: 6
https://github.com/PaddlePaddle/Paddle-Lite,"Old OS base, full compiler install for mobile","Use newer Debian/Ubuntu base; combine RUN, clear cache; multi-stage","~25–35% smaller, faster builds",,,
https://github.com/bblanchon/ArduinoJson,,No further optimization possible,No measurable improvement,,,
https://github.com/bytecodealliance/wasm-micro-runtime,"Micro-runtime C, minimal tool dependencies, small binaries","Use Alpine base, strip binaries, multi-stage build",Built image ~10MB vs >100MB,,,
https://github.com/nanopb/nanopb,"Contains Docker scripts under docker/, suitable for building/testing",Use multi-stage builds to reduce final size,No improvement,,,
https://github.com/openthread/openthread,,Cache package manager dependencies,No measurable improvement,,,
https://github.com/microsoft/devicescript,,Minimize number of layers by chaining commands,Reduced final image size by 100MB,,,
https://github.com/apache/nuttx,Multiple multi-stage Dockerfiles for toolchains and final CI image,"Merge redundant layers, cache downloads with Docker build cache",Improved deployment speed,,,
https://github.com/InfiniTimeOrg/InfiniTime,,Use specific version tags instead of 'latest',Improved deployment speed,,,
https://github.com/u-root/u-root,,Compress large static assets before adding,Improved layer cache efficiency,,,
https://github.com/LibreELEC/LibreELEC.tv,,Switch to a smaller base image such as alpine,No observation,,,
https://github.com/nerves-project/nerves,,Use specific version tags instead of 'latest',Improved layer cache efficiency,,,
https://github.com/uTensor/uTensor,,Use multi-stage builds to reduce image size,No significant change,,,
https://github.com/Luos-io/luos_engine,,Implement .dockerignore to exclude unused files,No observation,,,
https://github.com/modelica/ModelicaStandardLibrary,,Use multi-stage builds to reduce image size,No measurable improvement,,,
https://github.com/INTO-CPS-Association/DTaaS,Contains Dockerfile.dev for development,"Optimize by squashing layers, using smaller base image",No measurable improvement,,,
https://github.com/verivital/nnv,,No observation,Reduced final image size by 100MB,,,
https://github.com/MTASZTAKI/ApertusVR,,Use specific version tags instead of 'latest',No observation,,,
https://github.com/autowarefoundation/autoware,Has several container definitions in docker/ and CI,"Consolidate redundant(build/debug/run) images, reduce layer count",No significant change,,,
https://github.com/commaai/openpilot,,Leverage Docker build cache more effectively,Reduced attack surface,,,
https://github.com/gtarobotics/self-driving-car,,Optimize COPY commands to reduce image layers,Optimized runtime performance slightly,,,
https://github.com/microsoft/AirSim,Contains Dockerfiles for Linux build environments,Use cached dependencies in layer to speed local rebuilds,Optimized runtime performance slightly,,,
https://github.com/lgsvl/simulator,Contains Dockerfiles for simulator environment,Reduce image size by removing build tools in runtime image,Optimized runtime performance slightly,,,
https://github.com/erdos-project/pylot,.devcontainer/Dockerfile provided,"Use multi-stage to separate build vs deploy, cache pip dependencies",Improved layer cache efficiency,,,
https://github.com/Fields2Cover/Fields2Cover,Contains Dockerfile and docker-compose.yml,Combine RUN steps & remove apt caches to trim image,Improved layer cache efficiency,,,
https://github.com/ruhyadi/YOLO3D,,Ensure proper layer ordering to maximize cache hits,No observation,,,
https://github.com/w111liang222/lidar-slam-detection,,Optimize COPY commands to reduce image layers,Reduced final image size by 100MB,,,
https://github.com/ApolloAuto/apollo,"Multiple Dockerfiles for simulator, CI, runtime","Consolidate build vs runtime layers, slim CUDA base images",Optimized runtime performance slightly,,,
https://github.com/trust-ai/SafeBench,,Use multi-stage builds to reduce image size,Improved build time by 25%,,,
https://github.com/truevisionai/designer,,Use specific version tags instead of 'latest',No significant change,,,
https://github.com/hatem-darweesh/assuremappingtools,,Ensure proper layer ordering to maximize cache hits,Optimized runtime performance slightly,,,
https://github.com/tier4/AutowareArchitectureProposal.proj,,Leverage Docker build cache more effectively,No measurable improvement,,,
https://github.com/autowarefoundation/autoware_core_universe_prototype,,Remove unnecessary OS packages,Improved layer cache efficiency,,,
https://github.com/autorope/donkeycar,Contains docker/ build setup,"Reduce layer count, cache pip wheels",Reduced attack surface,,,
https://github.com/sigmaai/self-driving-golf-cart,Contains ROS Dockerfile under docker/,"Slim ROS base, combine install steps, use apt‑no‑cache",Reduced final image size by 100MB,,,
https://github.com/erdos-project/erdos,,Cache package manager dependencies,Improved deployment speed,,,
https://github.com/ApolloAuto/apollo,,Use build arguments for configurable parameters,Optimized runtime performance slightly,,,
https://github.com/aurora-opensource/xviz,,Remove unnecessary OS packages,No observation,,,
https://github.com/noshluk2/ROS2-Self-Driving-Car-AI-using-OpenCV,,Use specific version tags instead of 'latest',Reduced attack surface,,,
https://github.com/amov-lab/Prometheus,Uses Ubuntu base with full ROS + drone stack; large layers,"Multi-stage builds, remove dev packages after build, use slim base",~30–40% image size reduction,,,
https://github.com/drone-plugins/drone-docker,"Alpine-based minimal image, Docker-in-Docker support","Cache docker binaries, combine RUN, pin versions",Faster CI builds,,,
https://github.com/mavlink/qgroundcontrol,"Qt-based build, heavy dependencies, large runtime","Use multi-stage Qt build, strip debug symbols",~25% smaller runtime image,,,
https://github.com/harness/drone-cli,"Go-based, very small binary",Use scratch/alpine base,No improvement,,,
https://github.com/Call-for-Code/DroneAid,"Python Flask app with ML deps, uses Ubuntu base","Switch to python:slim, pip cache cleanup, multi-stage","~35% smaller, faster deploy",,,
https://github.com/amymcgovern/pyparrot,"Python-based, minimal requirements","Use python:slim, remove unused system deps",No improvement,,,
https://github.com/meltwater/drone-cache,,Implement .dockerignore to exclude unused files,Improved deployment speed,,,
https://github.com/appleboy/drone-ssh,,Combine RUN commands to minimize image layers,Reduced image size by ~40%,,,
https://github.com/DroneDB/DroneDB,,Compress large static assets before adding,No observation,,,
https://github.com/mspnp/aks-fabrikam-dronedelivery,,Compress large static assets before adding,No measurable improvement,,,
https://github.com/OpenDroneMap/WebODM,"Node + Python + ODM core, large layers","Multi-stage for Python deps, use node:slim, clean apt cache",No improvement,,,
https://github.com/drone/docs,"Static Hugo site, tiny footprint",Use scratch/Alpine,Final image <10MB,,,
https://github.com/ipedrazas/drone-helm,,Remove unnecessary build dependencies after compilation,Improved deployment speed,,,
https://github.com/orig74/DroneSimLab,,Cache package manager dependencies,Improved build time by 25%,,,
https://github.com/OpenDroneMap/ODM,,Compress large static assets before adding,Improved build time by 25%,,,
https://github.com/drone-runners/drone-runner-docker,,Use build arguments for configurable parameters,Improved layer cache efficiency,,,
https://github.com/microsoft/AirSim-NeurIPS2019-Drone-Racing,,Use build arguments for configurable parameters,Improved build time by 25%,,,
https://github.com/drone-runners/drone-runner-kube,,Optimize COPY commands to reduce image layers,Improved layer cache efficiency,,,
https://github.com/CopterExpress/clover,,Use specific version tags instead of 'latest',Optimized runtime performance slightly,,,
https://github.com/OpenDroneMap/NodeODM,1.8 GB image,"Reduce image size by removing build tools in runtime image, dont install recommends and Clean up after installs",1.77 GB(1.7% reduction),,,
https://github.com/generalized-intelligence/GAAS,,Cache package manager dependencies,Improved deployment speed,,,
https://github.com/clydemcqueen/tello_ros,,Minimize number of layers by chaining commands,Reduced attack surface,,,
https://github.com/paparazzi/paparazzi,,No observation,Optimized runtime performance slightly,,,
https://github.com/drone/charts,,No observation,Optimized runtime performance slightly,,,
https://github.com/drone/drone-wall,,Optimize COPY commands to reduce image layers,No observation,,,
https://github.com/DAVFoundation/missions,,Minimize number of layers by chaining commands,Improved layer cache efficiency,,,
https://github.com/NVIDIA-AI-IOT/redtail,,Use build arguments for configurable parameters,Improved layer cache efficiency,,,
https://github.com/nicholasaleks/Damn-Vulnerable-Drone,,Leverage Docker build cache more effectively,Reduced final image size by 100MB,,,
https://github.com/COVESA/vsomeip,,Use specific version tags instead of 'latest',No significant change,,,
https://github.com/alexa/alexa-auto-sdk,,Remove unnecessary OS packages,No observation,,,
https://github.com/Fraunhofer-AISEC/gallia,,No further optimization possible,Optimized runtime performance slightly,,,
https://github.com/rusefi/rusefi,,Leverage Docker build cache more effectively,Improved build time by 25%,,,
https://github.com/christoph2/pyxcp,,Remove unnecessary OS packages,Improved build time by 25%,,,
https://github.com/vectorgrp/sil-kit,,Leverage Docker build cache more effectively,No observation,,,
https://github.com/pylessard/python-can-isotp,,Ensure proper layer ordering to maximize cache hits,Improved layer cache efficiency,,,
https://github.com/pylessard/python-udsoncan,,No observation,No significant change,,,
https://github.com/carla-simulator/carla,,Optimize COPY commands to reduce image layers,Improved deployment speed,,,
https://github.com/PJLab-ADG/SensorsCalibration,,Combine RUN commands to minimize image layers,Improved layer cache efficiency,,,
https://github.com/OpenDriveLab/UniAD,,Optimize COPY commands to reduce image layers,Reduced final image size by 100MB,,,
https://github.com/naurril/SUSTechPOINTS,,Switch to a smaller base image such as alpine,Reduced image size by ~40%,,,
https://github.com/carla-simulator/leaderboard,,Cache package manager dependencies,Reduced image size by ~40%,,,
https://github.com/huawei-noah/SMARTS,,Cache package manager dependencies,Improved build time by 25%,,,
https://github.com/awslabs/autonomous-driving-data-framework,,Remove unnecessary build dependencies after compilation,Optimized runtime performance slightly,,,
https://github.com/autonomousvision/transfuser,,No further optimization possible,Improved layer cache efficiency,,,
https://github.com/storypku/CyberRT/tree/master,,Implement .dockerignore to exclude unused files,No significant change,,,
https://github.com/georghess/neurad-studio,,Compress large static assets before adding,Improved build time by 25%,,,
https://github.com/tier4/CalibrationTools,,Combine RUN commands to minimize image layers,Reduced image size by ~40%,,,
https://github.com/SIAT-INVS/CarlaFLCAV,,Combine RUN commands to minimize image layers,Optimized runtime performance slightly,,,
https://github.com/waymo-research/waymo-open-dataset,,Remove unnecessary OS packages,Reduced attack surface,,,
https://github.com/ucd-dare/CarDreamer,,Cache package manager dependencies,Reduced attack surface,,,
https://github.com/libornovax/master_thesis_code,,Cache package manager dependencies,Reduced attack surface,,,
https://github.com/PJLab-ADG/DriveArena,,Ensure proper layer ordering to maximize cache hits,Improved build time by 25%,,,
https://github.com/bark-simulator/bark,,No observation,Reduced attack surface,,,
https://github.com/Daniel-xsy/RoboBEV,,Implement .dockerignore to exclude unused files,Reduced final image size by 100MB,,,
https://github.com/wangguojun2018/CenterNet3d,,Minimize number of layers by chaining commands,No measurable improvement,,,
https://github.com/JOP-Lee/READ,,Switch to a smaller base image such as alpine,No measurable improvement,,,
https://github.com/open-mmlab/OpenPCDet,,Leverage Docker build cache more effectively,No significant change,,,
https://github.com/tusen-ai/SST,,Combine RUN commands to minimize image layers,Reduced attack surface,,,
https://github.com/Kin-Zhang/mmfn,,Minimize number of layers by chaining commands,Reduced image size by ~40%,,,
https://github.com/motional/nuplan-devkit,,No observation,No observation,,,
https://github.com/ucla-mobility/OpenCDA,,No observation,Reduced final image size by 100MB,,,
