Project,PNumber,CreatedAt,ClosedAt,isMerged,MergedAt,MergedCommit,nFiles,nCommits,Commits,Labels,Title,Body
nasa/fprime,1,2017-07-12T15:42:26Z,2017-07-14T17:56:01Z,False,none,c52841a36aefafa3e75b829c46d219b58ea24888,1,1,671e71d8bfbd1f8980e904d3b9798dd1752127d9,,Fix spelling,
nasa/fprime,2,2017-07-14T19:02:44Z,2017-07-15T04:50:45Z,True,2017-07-15T04:50:45Z,8f72e038498dbb79d907dc83e9e9854ba249a486,1,1,1761322733f562fa9f39d1e8cbf0ad6389993602,,Fix spelling,Alright  trying this again on the devel branch.
nasa/fprime,4,2018-03-16T17:43:47Z,2018-03-16T17:53:15Z,True,2018-03-16T17:53:15Z,fa3ec799b9125f72ccecd90383d7207d381bf927,126,47,6299639b52ae32b76ad3b4280196aa8a93f4f3cc e2477af71899593bcaa36c598af3daee63c28177 ab688490c3357d3933d4e4939007a5c9c25c02e5 2ab32d783009e64f19a3ec4a464a92cdb34ecc66 33cd3016b5656a2748001a9dec3e58985d48b07c e86992544a1c800627a0d0648d6358a4f3fe696f 2747f922785724ae59b798c1095e0addca51f2a0 1d8aab96ad88d3654cce5ecb06e30fae863f171f 664e7a62478e7a6720cf187cd6462c6141db6e7b 3e64c1baa9c6d0430b62881c407b2db2e2d23fe9 6dc5e58350936ec600f44431c79adcd2090f196e 6b6454b6d29db69d63dd3c292014b5b8a446a259 3098d1fd90268e1152adbf1ec89795875341b9d7 a7b07bec1a0a4e78ac26f183a697130b03d398b1 9b721d8a6ceb9c63cfed631204bedb01affe7cc7 1e7e09a4e1d3efb336c02ffab003b0a6ed112e56 92511ca30955a1b3d84b7e3eadefb905003e56db 25d7ca487f0efa2c1283bcf4da75ff71e6f696df 926a36403f3a991f633f89f9907419e864f310f8 771e117f12167989bbab82d616ec6a7ec6dcf1d8 fe23f8d88a0b8ac9d7cbd877e010fb8661719835 d57cae54fa51acad1130b269c1e0376447011856 000bc504a945c80c84211bd461f1208c1aebc5b6 7789b9c9de412590fe0cb93af747fabe8cfd70c7 8bfa4fe59210952261898bb86b3e237e79488113 a881265564f475af5698b578d66d7ec3a3ad9386 82e0e41a68d204bbd9538e23a295165179660f9b 862a8326d7122e252c5253a8114e51b7423eb6ce 7940dfc251c05019cf84038b5fadd0b063c423a2 5a494fe1b182166caa6adf2ff6634c173150f90e 7376e14397bfd2dd41ec18de2c9f88b41dc965e9 138bd2144b0042b110bcde50e4a69c9fb305a364 c3dfaddbf16029f9e7e8f4d57157f67a96a38009 e3ed378b669b927e4c9acea90a7ffb285a8a1d7c b9262ddbae6621e781c82e464b884b05f7b5f147 66b9a9f66f78f493a04a7137382a94737e903197 62feacbdbd34230bce6f5db81bb92e7920b4f54d f7c6fca4d68b4549888afe359cc1f767a8f34271 5c6808d2b8e4e4728d5998b6bb43a11feff1a56c e61949a721b2d6c9dab10ee3d90590e441bf93c5 f27846d90eef239b7105e5595479bcf4b3686599 8626ab4df9b897b578712238e860ec84a4664d2d e32904be097f3d9d4589d38d45a80287d98212da 61f31d529c101b1db3868418535dc0a50ecc7ecd ac952e532c8ff666fb03ed6cbadc85b9cba4efb6 fa801d45f7bcf4f740f7e6fa2ee39c41dd1349bd da585e417d888ab841fe32062f3cb5fe66975882,,Merge RPI Demo,
nasa/fprime,6,2018-05-12T04:18:06Z,2018-07-30T17:18:48Z,True,2018-07-30T17:18:48Z,a35796fa07aa9d90549931d4976d0ad70b4ec14a,7,23,efc7c739fd7c6936b3eb23608676dc1521d55049 0071dcb33614ccb194b92dae8930a2c38187b9b0 1c6252c2ebacc5729a36977717c022e6c70d7041 aa0bafa6e3ac79f182a73dfc11f16df0f6737ce0 36e9942ee4147789023d5482eeaca83b1ec1e3cd 7fb2e8f6a332cabc8e0d93b7c64c53750a09eb72 85b3e0ae37b6e5eb2edb872d2bb8af79076918f2 1ed8f4d3eba2eee5bb799ba067f174fa3d62895e 965a38b973e6387876e33b2625525a460b50c449 55414d2eb2a00f9df444487b13756211d8264379 7cf9f33ed3abe9f98819f7131908072f230c04fa a22b8308208bbe0e38938fdfa8ddaffa878e8466 55b4be58f6c4d13e7d31094203dd09e464be73be b6762664bb33148164234833e8c064cb41ba0b14 91c34ffbc74c8971faa1d29b47342ba346a561e7 15d28e18dfdc08c6848e33f81827842314057fdd 2ba2e8ca22a2a09f37a573e665fc706b2bb90b75 78a01af9d70fa45a33aafe5c12d924c2df7e1cf0 84b08852e8a60a5f2b7cec23aed945046df2fd52 49859fe10a94cc67333a06b8378386b525ca7c2a 512888ce399780e904a8f4a59a6a3ec0a4fd894d ce79f3a6dfcb3796f990a09b7342e34f7b451cb1 7564dede3841bac4f5d85f25c98e1a446f855e32,,lestarch landing page getting started guide readme pointing to documentation,This pull request adds a GitHub pages webpage that gives basic information on F'. It also adds in a getting started tutorial that walks new users through creating a component in F' and wiring into a new topology.    Finally  it updates the README.md file to point to this documentation  and other available F' documentation.    The sample webpage can be viewed here: https://lestarch.github.io/fprime/    Note: the README.md file is updated in a way that the new links will not work until this request is merged  and GitHub pages is turned on.
nasa/fprime,9,2018-07-31T16:46:44Z,2018-07-31T17:23:52Z,True,2018-07-31T17:23:52Z,9880945b074fd2baf2f20381e6c6e9309ddfd1d8,1,2,ace4f08d49c934573ec758e76bda5948b338c0f7 e530749f0c40e9071381327fcbb53d8caae11b18,,lestarch updating README md per request,This updates the README.md because we couldn't get the webpage up.
nasa/fprime,11,2018-08-09T21:48:05Z,2018-08-10T00:54:22Z,True,2018-08-10T00:54:22Z,13f49126ae38d209166250f3d8a1ed2f2f535c7a,1,1,6be5da40b20b5f1ca7f99abe26150c214a1f8b32,,mstarch adding getting started back to navagation,When ready  we can release getting-started by merging this PR.
nasa/fprime,8,2018-07-30T18:10:31Z,2018-08-11T02:29:13Z,False,none,23b761187146f3ca2d1aa59e04a491eaccd59250,1,1,daee5b088189e8ad24202a5af83688dcdc937932,,Typo on paragraph 03 05,
nasa/fprime,15,2019-01-01T19:33:18Z,2019-01-23T05:24:19Z,True,2019-01-23T05:24:19Z,26c41e7b6dbb1df7711cbfa5d5ae1837b92b50a5,1,2,907a9df03c8e8d01ddaca9a1d30a4ba5beb5c10a 78470f861e56c0e4686fa5c98de94fa5f00ebaa5,,Tutorial Suggestions,I made a few suggestions to the tutorial to address some of the questions / roadblocks I hit while implementing MathComponent
nasa/fprime,24,2019-03-01T20:52:47Z,2019-03-01T21:42:34Z,False,none,96691fae79afeaf1719f5a542b88035036acce3f,17,3,0df0456c5912c1f478691e58fb69ba719c59223e 2e5c0e9eae710fd10ff56a166e2cdbe252d24b77 b3df726a67c5cdffbe978c475240ff0674dc5974,,TCSHardwareController,I completed steps 2.1 and 2.2 in the tutorial found here: https://github.com/nasa/fprime/blob/master/docs/Tutorials/MathComponent/Tutorial.md#21-port-definition
nasa/fprime,30,2019-03-20T19:12:54Z,2019-03-26T01:20:25Z,True,2019-03-26T01:20:25Z,3eed3d109c0ad9741018b256564c1b87cc09b50a,1,1,e417c757eb1acd612fab24d5fa0054156f250d9e,,lestarch fixing GPIO number in README 29,This should fix the wrong GPIO number in the README  as can be seen in #29  the topology uses pin 21.
nasa/fprime,35,2019-05-11T00:17:50Z,2019-05-11T00:18:33Z,False,none,8ba68857afaedb714e306354fad302d18b51d7f9,3826,593,79e22c83aa19204652e8f7fc7801ca01accc0a2b 1938dac97d5cd85e53795a065a11594e9f65983a 4f4da8b5d0068629b52d02b3105805438125c120 f366065dfac407bc355d1e4bcdf107bc30fe2a89 d36c1e124feb275ca6750616f30c8254c2cf1a58 cac47cbab58663a34a20edfe85e82871e96ecf61 3c48b2e81b054b31196ea0a64b06a1a691039652 9da105487cd118e4c2e51864363fd468d5c09092 8165194a5d5cd644b37a9d2e36f6f33eb62825b7 ff6a6d9182ecf6b29dce7aad05df3a30b7bbca1c 18dd82a171f402951bd5ff080db544c6954c9b20 b52e1d68d4392cfdb839fcfe2f64f3edee4f15e5 6a9e0f336945720d91231748bfc8c0c11be61ad4 108f2e7c5aff40480adf3309610a50259a86646e e80aee4dde5642c8e9eb11140909a76a25f20a7a d3feeed5beb851ca5c75eeac578cb876b986801d f83ad02e9990bdf854d68646c120b7884a25a23c a6bdf22a68329e2097c6324afcd062e29a466011 4dbe2b48220e53aacb39e71fb9a1053623aa5edb f65dcaa323a1bfa02bdd3b106a98b9db15afc6e9 576fcec41d14f46a4abb975fd7d5e53bd41a21c1 a2ecd034493b060843681974a8db252b14ac3bcd a9fe2c5a0fc3bc99dff3b75c7af5884cf85b3742 c3ce733b1b495253484f0dc4157dbe7925fd8b47 82bb28a32f3c3434d8d97c4accc5209c37f076fa 22d0b3e24e0ea569a753f6777cd7d36d84890be3 af836596ece96cc1174b08c065bbdbe2e425e49b 938127293edb3d9b4599c55801e7ed286d7390f6 a3899ba3a4126012942611bd6f19364cd11e5c80 d1fd5812bd9e9d111606499e2ef02de78e2f235e 74fa0b9887da3e3bc66b12bdc953a16aed9ce077 a868ca308d7c311489b4840f75e2fd9904eb1973 9384370798999c51b7d483bef7160c25c86129a1 a6c90773e59adcc46fbf0e9f926decf36758cff4 48f1eeddea0237404dbeabd974941b94b25f8551 e4c1874c564769d3230c95d1cc0a8a9692911400 6f19682053faa3e4373224c9b570c0e63d4f86d9 84afa1b95e88429358d0f85e01a4d426a1bb32c7 7b74c8d45e6d91e7c702b0be9517a1640653d059 880dbd0251644b0813574690ea104801e7b207ea b4f8b996ce88eac83a0fa7c22b1ca5399c84175f 92f13e941f069fda1b0ec5f15b19babb52153f9b cefd6b81ea8e6fb04d729dd06d8d7816070fb1f0 9bef23c569c65aae28ca5a81097c1b461f68e25e 718e758bc3913c6b3ad20572967e856e90a745c0 00ad0a66f7eb2658d5769006936cf2233c4208a5 f37c72a5d11bfb1ed5565283f53a47f12de9de74 204756dc11c1105583885e57d3fcb130a1b5de2e 65d174b0f43f3868f5985aca65459c8f6daeb112 edaf2404ac2d1e481bfdb2de1e3a0f04d73dbde0 483938e0ff9b7b83248846e96ef3db231dc017bc 4a5c8551731e22f95a1034d9e707bebb2845f3d0 d0ff6ce96875d9ea0c2b81a1e012ea1bcc6a0ace 8a6c51e0b1f55eaa0efed7b0bd7861ece6562dbe 23db63d02eb0f460a000e1ccc6fd6619907a6e9c b6259f6214d13fe0e761a6506a9509c5eab39732 36ea58fb50b63b8a370b4a4da71d7a57e7b82536 7883fad57ab1899be5e7de688a85157af00b343d c6e76f20be51f214926bc7dc7b23322a3377a936 230904061fe73ad983e559064aab04c03feab5c3 6b08af36f655bff64c2cf2ffd2642cc72c4008b2 ba91d850e54200abf7fc7a49fdeaf0744f0859a4 f4eae8f8a6d43149b092180463acc5364c703706 df08463f093c7009fe3edb252c42b1e5de22909b 0399861d4ed0f59d55f76becf109266617193fc6 7279db3b3c4c1a7064721a909ec6935eaa24499d 3bd67ede6a7bdaa58307b78a2b7322c3ed648e91 80e4b14b421638c244aab8e2499aac88fdbd0e2f cc975488da68c1a28bdf0a798e86e72ee780f825 8e950a2b435a9effd5100c9529cd75571c5ebde3 7c64c011d7a0b56f7c1b5f5489d6dbbd6ce2aa38 d1593125b2050546d70e1f204077c2ce9efce5d1 438d3e25b8d43d5eda1047bc5d96694c57b9edaf 99c012b24bb71e24f66d99226f93ead6f4ba0d4c 464f8347192155dbc21f6382295cc25cbb10a5df 5c4a7f285a8b893f406ada8bb6104113fb742e3e 0e5066b6bff746ed349a4d8f18c6f685697e2646 7c2c502e3c138839ac30b1c1043c70f87733a38b 3f033e59c9ac50d67fdd742ab33987cb8b263cbc 4b4a617c4ff5d1d6939ab758106a5d39b060f18b d32b77d565a5e4d943a0bc155eff2a40a5eb2a10 2f2ee53aa7172981752df2861de08a61539e2242 f98894067a10beb8af939d64b27ad8a76beb0a32 ce85e68956747a6dd39d3edcb3e67d0cba0f41ff 597dc30cd115233e556238093e944cf286025f45 239b2a7ee680ba31effde2c249b65ee55005118c 43d7a3a8a17d812697bf8c07c9e361fd128f0556 a549355acff2216c31073b351d348ecd22ac9918 7c525a8f12fe32d7929ce6f7a06a8bdc913a0751 d16a19bd0bb292453e69ea28aca6e047bb8a39c4 c8ea31335c891cb7ca77ef80436f2baa9b11a07a c72b750c45da768671b9ea99f44bb5b76c3e0b77 d836f8e999d3d3329d3de29e4b23f78c2b1e4d9c 33c39c94a01f899715cf4fe9ab4460d3dbb33edd 0867a770d30670aaf947252a42f42c966265aea6 4ff0499b8bfcf00db64830de8403d9b3e8e6ba86 e171ccde0c75fd0aa62b45bbb55b8e3978ea880a 7b454110ec9982f25d89d7d677b80b7344c525aa e74f575ae73723ee5d75d4f322ddd5ce8f11ec67 f19c3f61d642a9f03912d1cdef9b7fa2aaf2e040 e42d0d9760543a4611afabfc9004008a65d65ac6 b10badb7d61b8659e488f772d070068a7c5c2e9e 7963b031cf26d4736358514e2f5302db12d2d964 fa128fac7f1f87fcd2b4ce0e2216f01a94019d97 2e0988b2fe441321045a8463bcf14f0a953a6f98 ad760d5b891b79cf76c0a4c39a384b07e5c658c5 102424b035149122798330dc25ceb247a24f2c88 58bd7c3d71fd8c323f6ca2376e0ecbbd378e420d 79f5295d4cb78fff737d22f49fc39e5bd8c060e4 3ff018b1cfdc5960a2188e21b5586fe0326fa267 c6d4b2d282099aae0cca1c156c13ec016baa6df4 51ce78dbef4152db949f0c6930ac852151fa9d88 2f19543bf3a965ce971392877dfe872d679d1b0c c8b86dfb7e5bedd3f02623b70dae067c83983b0a 50daaebde3c9db8b2afe27b8a74e5bfbf107c84b b95e29a59546655dfd52630c069addceb33be2a7 36d279e414406bc341d73039df37a52a57d0d40c 75eaa09e505152311d37992b256db84ccf5b4e86 faf0eec2689bd843a937700c0ac185fb28fb3038 ebae2d6a0ad2f4a7cdf7532cfbdba9dd49650673 54f9591086f9b44d522702ae6e4cfe71f3729e0b 411ba7f143bd448365c23f524669656c63b1613f d21a814ca83383ffc5b910128f0ef9c2e8ffb8ab 62bacdaf521dbf4ea3893dd8220f3313d522acfe 990f84f1404d110cd1c287b36683689306a64c61 b91128aea64e4b7ef32feb4a93db6f9e4e90b240 5bc3972249a8fbd8e2ba726f8fa25bf5a7073b66 f61e767f60ae6a552497ceadfd0bf6a6f79e2771 21189bbd9f1b5b79652666fd60444878cead4725 d5b6b37eb22ed1a848ceb42668ea6ab1ddda4110 d3f976b9ba70c239fbb0fd3a7c025746aff74455 d0c79e6b5532669707956f64ceeb178849acd3fa e1225e4d4fbdebc10ecc3db03015c481243b7988 861356dc048b32f18f4d47869239964d0d3b2c90 caa32bdade4e325c31211954b6b18741ac4e9439 aad26a6fdf6a1593b51a4a9b70129c73e806fe19 3710adc3dc4699bfe4eb607edb863870e362ba69 c2538c951dcd9b9dd271343190cfa7d36189a454 db8f76b7517d5e597a21078b92ffeced407bcc98 1af79179eae2f355197288e179a08191083aa958 83a8a945a83a470eca154d5d7ff6a4a02ead7807 bf03e6e2166e99c855696ff7172da6f7c8ce6440 3cd0e4ffde4be0db74f58c2ed401e4fb2c46ff42 8e4051436524f0771ff8f61dad9d134662b326a7 c7a09e9e405852b6caf3a824eb7f7114a3ff9e70 bb40fe440b752fcb82b238fbfdf3e68d04e8dc09 f4c910fc3950dc17bcc27201f9e4f081c999a8f6 1f73aaf566262034252030b3465ee6d6a79373d1 6c13fb2c04aed973cc9d2c53e834d1d00e69defe 055137706ac464a3d145843562c7dd6b3f2a6746 382b47968a10794866bf71399eb7425ce322b4fb 5a503524a676a7cbcf79bf09e9f2879db7b9574f bd6bf7da2cf6360231fccdefd55388af79b14efd 8d15d4c04f362636aae8713bbd86990da6347529 148088cd9a69749bd13345752ddbf91a8962ea5b b3ecf86f79c5f7b423bc42b7ef5a526422336858 c1959adc085f9395b1ffd7e2b7095dd9b9c186c1 6a59a209dd7803906c1513dc5b196c8c6468aa60 c6019daea9f96169cb6d862d9f7ad50a9db13477 069c3733b4b23a92b2e34b5e71d313a9d3897c89 c48a18bd675027a18da600a998fd1f35d366ecd3 f744a29d6628c4da4ca2c0b83c164d1ead5004a2 fa239f9b1f98371505f6410f57dc28e0081aeb9a ec6b592065d7612cf66fedabfed207ad79f27c23 c80631e6895e65267aab4baf5c34f0c4388219e6 ae368e2ef7f6d49568b9858040ef260ae07642fc 07ebb79137111ff3997014403afe923c94f38b3b bcac39710a6bea9cfe994861446a4fe11c9fa2c2 56948936b249c332b450e3a12a83f1204f11282d db85da01022ecd1c390ec0b738767f8a6a61ed4a c3598b75183080feb72ee782c5304cfaad8ba227 17c611bf5292cb157db15a337346a43e04a9e3e1 230cf66dc06397649bdcefa4905f286fb06f301b 1563ed7ba38b50d453503ebe86927e9be8bd2b06 5384f7fe031c584df16dbc50d9ac157b337a6cd1 1d093359822c64c3f8068110f00c16a6792c178f b332c7e14befe8d7277b2246bad07b72725e4b55 349ea7c854bcd5e998a73bb04566c933385814da 9104a38be3c31fe7f993b032a88995be9a4a863c 6ef370c7e14f606e5c5e35d4502c86b78c46289f 2bad4300f291bed70518f955f01084c214976d8b 136af07edd5e5c27c71dd4e33796177a1f44e665 3d082d65bc64079815eb5e4168e1ebaf099d1351 ed8a1b4dc00ab384bd31c6ba0effa4f87672a083 97973500018c2b4daaa001bb9c26e6ffc48900c2 d06fb5d0239e812c069f281907f7671621aec63f a068d526847dccb25ed5b3f1a6d106c0a47f4e57 08444e3774a4f6c5650c729a08dae89fac0cc530 285d2eb94766cb69427e01256f3223ed3f165af4 1fcc655d0243f8e20288dd3fca7ae02ec62321a6 107e442544654b19e5bf5b6ce47418875eff4e26 32ce53019ed225e233f5c362274ac04201e55451 55cc1697549cbbd543dc26cda230dd651e423c7e f36ef2c93ceafc7a2079bdbab25eebba5e82c67c 73bb672c29859ac62a4e50d91479ce9d3b0dfb03 274fde53ae6a061472945003554bedebfe4422d6 db344f52e4bfa8bd500b542b069e5e262fadc7a6 a06d82763e8e85dd3d5ecfe39b119fea72f211c5 f03ba87f8848089667973159a0b8627999f5e9f8 6dee47c1203bff3a271e3e8d4720f6e28bdc6821 e8b8f08242ba684cfd3ea4dc2ddd87ab338ac2d9 28e93e4f59641d04f98e9ae5a007b8f7dbe016c0 b0cac8a22edebc6546aeff25daf22ae334b25997 40427f79e02f6cb072422fbee0452b2920d83f87 be7cfbaad9723f6d6238756dd4c82fe5ca84cc50 40e2988a6bf35572cea001a14c97a4b37120e7d8 0f3404cb10e195b4a185a6815af69f4f4552955c d49ee6a30b53602d06602e3faebc427886d55ef3 1c8f1cb2ce38a6fbd61ff7891aac032b531a669c acaa67d19e05c9f6a2ce0c392cf9a20e8092321c 04ddc471f511e5f4fb98f98f9f8eb5474f196a06 efbde12dc44fd380822fc922b2a78fbdf58fbedb ba0d237dca18a6453fda0115067e899a148c51d6 88fd849899a1738e421521da1399b1332cec53f7 5cf09573014f3eb45d39d142ab14e88a70aaf8b4 5c6f44defb2b508218bcbb7efed349aa7c151de6 74167e0b14a5b68a95244cc45955d7c7b221381c 9788f5e28c4fdc800911911a6495a2056072b487 4b2901eb0ef22d43b1973070b1ec46b46326d139 42f4a90676e8031b94cf5ce4c9914c2bffead5f1 bb180e10f012faf33378b178645aa79211e033c2 d699eb5beb27c41b499c8668d3e069a56b7f928d 3b532250287733864cca3fa418c5c544b95af91e 4f794c4da1bb0bd0092de1280b847f330e0f44e5 082e46685e3efa60fc1e6813d56864c833383a07 88c755fe8153578c25ee09227fa8e17d3cd6537e a8caf9885c7c010ef37c481315d99c67c25b1f11 013e750e12cd0909d8c80d6659814d0a7fff601c 92ebfcdf88f7fc578a9a14e1a300ddb8037dc703 fffbd132e2ce331460af2a77acee1bd71e66ec3a 537f949f606860a8ae72f04e9c091190f0ed0f83 d217b659e334a154a2ef5c5bdd1dc6ab5bbaf39a cd5504fff11ceeb3ad03ec652230107353c29e8b b19ab8a685ba58a3b199b6d72a538c31bc55b76f 9be7aa0dda0cffe3d483906b58fde21f2db285ab 874a9622f3024d492c9f6abebf7918d81bcb61d4 122e34de04991d479b6635d3e2f4217f3fda2d91 df67c06e997472e3e864bff3dba1602f12b809ea ffeec9b2a0e0e9cb1414a311e9fc4a03065d64b7 0184923d968d65c3fbebfa48ef88465a8dc1ac99 f90e91192ab44b6223ef94034a0a20438a220d24 27e526c77f889cfe7a39364e5f9cee44ecd037d3 58bb50d7989cab4fd30cf4e3f4276e3fd4ef187d 5d36c9fea4ced39acc52bad5d0dddf6464bf5f23 2e2b2b9922731e31f8c5a76eba526bcab3936e78 6dd6158f4b427d848769e04ad3e880d13ac48c38 a770d45babaa8d3598abf020b6c3102c0527c1f8 9a45bdf8bf0c429a836d2db99c4a60ce2991975f 39664662231dc04144db06af865aea379b2bd630 6db38711fe024f8f92085b7bea645099fcc6b8b5,,OpenSource Delivery of Release 1 2,This is the delivery of Release-1.2 code into the open-source branch 'devel'.
nasa/fprime,37,2019-05-18T03:31:56Z,2019-05-24T17:32:53Z,True,2019-05-24T17:32:53Z,e16d875fb128b5efdf897367934f4035ba7ecbac,16,5,5f8c6bed3df3ce46daf25534a3e76759e60c5b18 ce4c84e4f9b2c0877f5716ce0238a8654236b5da 4b3a00d389596016dc9e207935ace65a4466651c f340d31707eb77789e270ca5e97b32dc9b5f8572 b078446b5de95f4508b14968a0f2684efb75cbaf,,CMake RPI Demo Updates,I've made the following modifications:    1. Added if/else statements into `Os/CMakeLists.txt` to support compiling on other platforms + cross-compiling with the Raspberry Pi  2. Added CMake compile capabilities to the components in `Drv`/`Svc/LinuxTimer` and the `RPI` demo application  3. Updated the RPI demo application documentation to include a small snippet about compiling & cross-compiling using CMake    This is one of my first times working with CMake so I'd love advice on how to optimize some of the `CMakeLists.txt` files  especially the one in `Os` which contains a lot of repetitive includes between the various platforms  
nasa/fprime,65,2019-08-07T22:54:34Z,2019-09-03T18:11:59Z,True,2019-09-03T18:11:59Z,0cab90e238cff1b50c20f1e148a44cf8827a5bf8,1,1,5248bb40ba2da162fce07129e8f298b77ab9eb59,,Fixed small issue with apostrophe,
nasa/fprime,56,2019-06-27T17:42:20Z,2019-09-03T18:14:34Z,True,2019-09-03T18:14:34Z,0982c146b8b020bf32880f08c81916a6c14ac7fe,1,1,53d06ee55d75957d7a77623642ea33d6f340df70,,Fixed reference to seqgen py issue 25 ,* fixed the outdated reference location of seqgen.py in compile_ref_sequence.sh 
nasa/fprime,70,2019-09-03T14:19:50Z,2019-09-03T18:46:17Z,True,2019-09-03T18:46:17Z,b76d405e937bc0ca4e33fa7a81bbe50edc42786c,4,3,37e3aa49ea4218a2c44204a6ea6bc24cb75988b6 0cc87b08bbd9674e9b70db9cd0ab1c68854e5dea b79dcd07b3b0f842a6e494ffd90626bb16b850c1,,GDS Stripchart Fixes,I've been experimenting with the Ref application  and ran across a few issues in the Stripchart section of GDS (TK Implementation).     Here's the issues and steps taken to fix them:     - Stripchart was not getting any message data.    - Add message passing in the channel listener. A StripChartListener comment said it should be called from there.    - The "Channel Telemetry Filter Selection" GUI was cutting off buttons.     - Expand the window vertically to 450px.    - Clicking the Settings button caused an unhanded exception.    -  A config field "stripchart_update_rate" wasn't initialized. Added the field and removed a duplicate field.      - Clicking the Save All button caused an unhanded exception.     - Fixed the loop that gathered the graphs. It was digging too deeply into the data structure.    - Canvas.show() is depreciated.    - Followed TK's warning and switched to canvas.draw().      Also  I don't see any contribution guidelines for this repository. Please let me know if you need any more information  would like to split the PR  create issues  switch target branches  etc. 
nasa/fprime,79,2019-09-15T16:43:48Z,2019-09-16T17:00:03Z,True,2019-09-16T17:00:03Z,9fb16332d83926b909fa218398be18d76bba52e0,3,5,83ba36fbea56c59e110e85e37b5582a3ac43eb75 0cac7c03128a44e65b0e742a391d2166a155f97b 5248bb40ba2da162fce07129e8f298b77ab9eb59 0cab90e238cff1b50c20f1e148a44cf8827a5bf8 a70f751de932ba6eae77b6fa8c40a9a5ae1e535e,,Update README md,readme typo: was just looking over the project  and ran into this
nasa/fprime,82,2019-09-17T23:58:26Z,2019-09-18T00:09:50Z,True,2019-09-18T00:09:50Z,ac93ce6d519da2640773610c798f26f026aa8efa,1,1,a3167c7e899906c40f06b96e9391edb5264f9afc,,don t try to commit build directories,This change adds the standard cmake ``build`` or ``build-and_some_other_stuff`` formatted folders to the ``.gitignore``  which makes it harder to accidentally commit artifacts back into the repository.    Most people who are even marginally familiar with the cmake build process  even if all they have done is just build and install a project  use this convention.  This is a convenience to avoid having to sort through a large number of files in your git status for files that actually need to be committed.
nasa/fprime,80,2019-09-16T12:05:41Z,2019-09-18T23:00:46Z,False,none,1c2875ffd685948c39e06683ed32b13d43dff09c,5,3,8896e49e04f00d8b2d49e40d499a0fd3f7d999f6 71f6106864fe7874f3bd30452feaf3696ad14c5b 3e6d3b80b1e6e74d10ba4da24ba9175e61c5d3d0,,Updates to raspberry pi tutorial,Updates after completing fprime raspberry pi tutorial  changes to work with new file locations  bash shell  and general clarifications.    Confirmed working with a fresh install of desktop Raspian buster on a raspberry pi 3.
nasa/fprime,83,2019-09-18T20:56:02Z,2019-09-19T21:46:38Z,False,none,ec8e574e7fe6c543742ce934da91dd5c4bad14e7,5,10,dd9af6a21bd96589594952a4143caa13b01f34a7 5de78932b76b27121e81c22200521c6dab832437 aba45ade1209df8cec47fb8b2b9a6685fcc78c2e c1e846d4ce5c24c0fff12c48eb1a950bddc3e3be 9b1a0212fd388dd6421fc75a28ab215e17f3a2e2 2c1559e4039f88b2f72564785814615a928c4b1f feadc92b6897fab66972e26771fa934ee62dc712 bb4a909e577fc7fc3c9f1cd603c856acf5bace69 c3332053e1992ea1b502422d28bcc0c2161a30da 1d566f6f850116451e44e85426cb4084ce0afe78,,Devel,Working updates for local build raspberry pi tutorial with some conditions:  after `make rebuild_rpi`  you have to go to the `Gds/src/` directory to run (`../../RPI/scripts/run_rpi.sh`) because spawning the lxterminal for the app doesn't maintain environment variables (namely `PYTHONPATH`) from the previous terminal. If you spawn from `Gds/src/` then your new terminal will have the `appwrapper` module in its path.    If you run in gnome-terminal  environment variables are kept in a spawned terminal  but I think this is the exception just from messing around with my mac/lxterminal on ubuntu. To maintain the environment variables and keep everything isolated  you may want to `printenv > ~/env.temp`  then source that file from the spawned window  then delete the file.    Minor update to the `run_deployment.py` file as a `proc.returncode` of `0` is a success. A few other clean ups just to make things easier.    
nasa/fprime,90,2019-11-01T19:27:36Z,2019-11-01T19:58:23Z,False,none,8043ea278a0dba7bfb7e0e1fadf84c22ea018fcd,1,1,a4b95ac7f2a0253221e6e7d637fc600430592264,, WIP fix validation call from cmake,Resolves #89   Also remove trailing white spaces. 
nasa/fprime,91,2019-11-01T20:14:08Z,2019-11-01T20:34:29Z,True,2019-11-01T20:34:29Z,29c206780cc21f3fde121bc631eeb4657734ea5d,1,1,57ce861ba0516e7ca3372981874ba248faf690c6,,specifiy python version for enum34 dep,Since `enum` is part of python for newer versions  checking for `enum34` breaks the cmake process if you have a newer python version. This PR ensures `enum34` is checked for only if it pertains to the correct python version  specifically python <= 3.4.    Resolves #89 
nasa/fprime,92,2019-11-01T20:36:24Z,2019-11-01T20:36:31Z,True,2019-11-01T20:36:31Z,e31410ea2122a3048f7da4f2b7e4f3a4299bd86a,1,1,57ce861ba0516e7ca3372981874ba248faf690c6,,specifiy python version for enum34 dep,Merging into devel also.
nasa/fprime,96,2019-11-18T22:51:14Z,2019-11-18T23:17:38Z,True,2019-11-18T23:17:38Z,ac30af112317caa2c52d96f5a9c5065369a37fed,243,128,de5101afb93e4330453ca8fb6082a706bf6be8dd 3c616410d21cb4c05ace92539f1318d25c30a8d9 94726a7c730e8c6f297d9c937d7dce82e6d8422d b38a22cd44dc160bfbb4ff359e31a8020b52a73f c42f8ac7a0176721997ba8ab051d366de075cc5f 20edd5023c14ac6e9d9cdcceb4f6528113be495b 3b31d1cfaf7aaed0ea67557f937e3c6781c8ab0e fcbc0cfcbab3866cd520ec5216cf94362a11cf4d 545dfb402420f6f4d34e6bdf66f16e25683fda12 eb516e0bb345cf7a91532f6f7b97123bfeba845f 1e9a41ec751c1fc07d92d521ee91b1e8d0e86064 e978c69d1ede5978b15a879f8df6e62ceb42e1ce 3cadfcfb9b3ac6f39cc4897f11485673e4c6fc76 9d2cb9438410b97679e984ed0daaa442ec92cd1c f198982f34dc0498002b30b282d518517edbbcea 0135c464bfbee8118110fff2fd16b656ecef3239 b1bd950f9ad516defa0805fe0b8c2130ff087ad9 f8bb287bd6c817eac4227c55f452ce2da3068285 1a840c4acb6fcf3f7d73db09957d09ff8f4bb67b 6392edf8e9913b410f4122489687632ea982206c cdcf03375e55f694de72e5a5ddfc0c446a0c4402 c6435f9b929b7bff152005de532ebbfaf42d399c c02cbc7703b2b5bf70e6562392d6e6320c28a4c2 4825c5f1004dc03bed164c75ac71e10197ce67ac c0214413203031635dd25987d83bf2c9fc6b4375 a30b9e7768391ff9eb0958860baec0fce8bdd10a 75ad978e10d5ddec4662ca8b4abd4e4821d63008 4b06d467b2153cdf81efd8130f5338189875d959 61ec89a8687241435b9eaf2cb89ed6fe0be19d73 2a1eb9fda11691ca371a093ee5fcecb72d922200 bbedf194b2628366e1debc0efdf01f819ea5ef2c 29a35b4724ff4dbf066c88b2a2925eec460227f0 d2969e9fe0c01b5620c0d1b3345977840f87fc5b a8fb7eb8899bd3e82f57d7bf0c8c48af9d881f7e 9d4dd8ae29978c0ffa0fd43ca3e93f77f526d54d f66ff0c34c8dfc9f2b5b0bdb3fc5b48181d58608 d6ece463ea6b11cb8be47d251ff09ffae3bff284 4b2605127540f55931264d39f41a6db9aab93051 69dbef0184977e2328c76ba5ce189622416cd7c8 b41aa1c8b7e2b24c0c0534ca4404d976aa99e5b7 7ed1e75d399f011373a622fd9ae927dac78704bb e8e22f601198672596e4df15aca9ed374829a035 983987ab153a123ed2f3d5b547354b0e48603a2d b0f35db6ae3347dc1a50ab4ce5354941edb0d61a 957aed6521fcdef5ba12efd3d3412b7829cbc7c4 e5193718a75df03cb44fb211d240c03e3c546e5c 4e7546f6065359729eef88e0f76e1ba2738f96ce 20fc9019b8db82969530a1918dbc2975b7d7a416 6b1780c568c0c107fb095187005cd4e5549476c5 53549c6220b7b5e6cec39fbda75ca03d1a3d9151 1170dfc7d55e9e0e42c047b2af29aee8c946b732 e41440a385455cd690b4b33187b137e24658e27a 6d9687a4c23e5aeef326a0b1cd04938d33fa8c24 287c15704d3035c2cbb4f81905e74ebe7d48f25d 5d9d584cbf46d6d21c5372b9f2f3d3b52530d77e eb28973a3a637331ba33ec77627092a76e3ad447 6c4325ffbcb41ef90d5128d5e33e1c8a83193b72 7fc5a783a76016ef0fe8514e7b8a19d8d21b5e80 e94332cd6b3afd3f46d2e0c7fc17764f4953e3c4 11e79da24f6c1d71bbaed9bdba4eab464a9f8c92 b2a90b833454a4a3d5edece2786e058c2d155c55 a62c5011e22fb0482d21212ca33373caba0eeb5a 8390db23764ae129326130412e292d8e7cd51cb9 c457fad23b01dbf9e8f0a0174875337938242a8a be73e75f99c8c69887c458c8ea46106b36004b08 d62b974db6cd4cea402e8699ecab2906bb537d5a 3206e68dba436d5662e6131e776b636eff3d3f6f 92e5ac31d966c0946943b4d503303b0f258507eb a5db9fa4d0c37e25e73a9b46e18815d2e7e90e26 2bef131bf9f27b4ca2dd0c3b2eb6e65614bca6fc 48a4a44ac288e5dad9df46f800c8ddb16e0744d1 834c8b9666b441bae88f0255450fc2ed8f466fc9 b89b068ef3acc501620652a30a47d11f31168677 7860b548571ffb973697e9363023020f448e9219 2a0410dbf410ab34d72e45630420b26b5d740142 db2f66fd2c6ceb6709c8bba4ca002adb2e59efea 921b581dcd2a40b943d62c28ab48d14cec0566ba 17d4db54ebab40167b3fd2596cc4d8811e70b517 788c21312da838310c44995245788fee79840e33 5b0013bce129d2a1fcc70316680f0fce52d90ec8 c2026706c631c7064620e04d27fd447d0f6523a8 1ed4ff7e8e8758bcee5fdc039b6aa9369681e687 a111c71e73487a9b845040625bfeb0169e5b7157 f54b2fff218ac4ef3e118f440ae2201373049dd5 717f5f2d130f9340e9312976be309b86430c3f16 9417a8e412b000d5834e617d790b34d5d8442f62 484f68577d4819745b3eac753881bcd3232db967 597f00972ab11b111f90b032cb15fbc476cab650 38403ecd2fc0686425b6ba133529bd1c0ef59a68 1dbbff7e1c6974ec124ab01662c324818aa9a815 01a06f328d875f38a4bbb3f2e71f08cf24b70aea 8057a09a5d8d97c50bf3ed9c7c40413e2a717fcc 4fb578406de64a8e63ae54ef9912bf25c37fa625 2c3f739767721714cae4d1385adf7a73e24ee96b 55e6ce2525654969e2c9ee3ff313b07382ee7f47 c732a2d34de69d8df156466e3ff5535c452b51a4 924a6a332af5b671ec68f55f1548badd4cb54d24 29c206780cc21f3fde121bc631eeb4657734ea5d 497c1a7eb57192be8b3c38ca26ffe2dcc23ac9a1 7dcf8e5af000986a1054171600e0f07c3601c917 97166ab0becc9e95580d04e3e17e019c41fcc0bf 2e78407e27bf06627dbce5421b737df34518b99a a737ecfb419e5941039f8b56781e6a804dc7e7f8 2be3b1892450e8c58252ba88d6f231d666b5e9e7 6fc1d580d95ff9a9048fd44606f868972e7eca37 8b49e8194feae4340549bb39d923a453c8b1f532 bbcca9dfb1fd6cb2d585cf841fd3d55f368bca16 a186ea4c34500b41d79f8bcedaec09f8e8d59536 cebf54b83086225d6dbd807e470d7fa116fbfb42 3fc3de1d842e85b746223b48651ea55e11adc086 b61a9e286910d5068cba91c085b749b008fd7c1b 1278bbb8d2b50b9fb8f18939e7bc0580de32ceeb bd48bcee8678476ace755e0d788c5142e3d027bc 4e1ca6cd066126833137c43a6a43aeab42b1b58b fb12cb9999ae9d2152529aa89de37cafb853f8fa e0a17ca533f2a0702113ebe8b86a5c98c2545dc8 d0b98fc00789799d47c8edd4c801a39f73562161 bb766514d1d01fdff70b848cec73a8a51bbc8638 007c59f95f0b333a7153713f25bf34dacc206b9e 01ff1649469369cc8f8fc48b6e3a77d54d2bcd59 6cc871610d036afe310f42b5367a898d131307da 1da3784ea4c65717d9083c1461921c1c59a37a98 5f286973b887a7dc580300e126d51249575f5510 2a9ed1cdc06ad2297f95d23d641219a72dae3d0d a988e64caa895d2600b205207341e6352c9ee7e3 a28d1d814c5872456a25db1405a06d1e4f6e6775 562592c6fc4ea2c7e6a80666bbb13aee1b49fa8e 0b6fb749b26c11dfecc1b954a080e89b52c67d8a,,Release 1 3,This is the code being released as F´ 1.3.
nasa/fprime,94,2019-11-02T00:03:34Z,2019-11-18T23:06:43Z,True,2019-11-18T23:06:43Z,562592c6fc4ea2c7e6a80666bbb13aee1b49fa8e,1,2,497c1a7eb57192be8b3c38ca26ffe2dcc23ac9a1 1278bbb8d2b50b9fb8f18939e7bc0580de32ceeb,,Cheetah compile py3 fix,This allows template code generation to occur using a system installation of `python-cheetah3`.   We check if we are using python 2 or if we not using a system install of python  i.e. if we are using a venv. If that is satisfied then we use `cheetah-compile`. Else if we are using a system install of python3 then we use `cheetah-compile3`. This fixes build issues on Arch and Debian based systems.    One caveat is that if you are building `fprime` with python 3 outside a venv/virtualenv then you cannot use `pip`'s version of `cheetah3`. This is fine though  since using pip at the system wide level is not recommend in the first place. It should only be used in virtualenvs or at the user install level.    Confirmed with both system wide python3 install and virtualenv python3 install. Have not tested with python2  but I am sure it works.    Note: I could not think of a better way to check if the python interpreter was not a system one besides checking if the path starts at `/usr`. There is a CMake variable `Python_FIND_VIRTUALENV`  but that only works if you are already inside a virtualenv  defeating the purpose of the check in our case.    Resolves: #93 
nasa/fprime,97,2019-11-19T22:34:23Z,2019-11-22T18:11:59Z,True,2019-11-22T18:11:59Z,c35ab7ee882e2de906e731d525573b6aba560c9e,942,688,8a4343e2d808ef9d6a3d5074d7c5a05f2c483d33 7e51d972f4ef01aaa6c42b932a878985cc27208f eb090bfe01af02d856a38b11fb0dcf45e1f7b14b 01241a47aa7c7ed05cb757e48b22b12fb9b40ae2 335020b5b9039583fb2836bdf52221f170c0f679 737f3703fa19ce9ccf99204fcad22400b0fd88c8 499bd5990dcf6e4d3eba5203bbda9f308db6375a 4dde587626b4af807af20e8ba1eb6f48afbce4fa 221b7dc2f805dfb4bf2c781f60fd8824a4301ce5 1623f7ac5d803fa4bd594af69fe1c6e08e9c5b01 e7891ee1187d6b1cf3182ffb5b5d6df67d72ee52 fa2d246e67200788c7995e23deae32aafa1f4fc7 ccf03a17436257ee2236e76e36b379fc8ebb9a8f 66c61e7f6eeeced771755825d09a1071c67eeec0 44c267007af8036a1af998f4a9dfe24ad1646a98 27a18a9cf363114b6341a37604ac4dd30d802ee1 cda31fdd9d8891d1b377f2bcd7f973d8acc56a0f 6087113eb1dc1d71f3ba08134b7e071619ea4655 b71dbc3e278b0d9edc52e6ebc679311cd6b309fd 154532786c0e6ba92d8d65d5518c41906fb3aa9e eed0e3275f5a3f11ef2976a59847209f4c5be207 6ee4ec25bbf6bbc4893654eff9fcc9f0d3404cca 7992b278f67c65f6ee0c1eee1028c35a26901e88 d53532599576c9c533040632290ee44dc9b82066 9b943040f48e84575166c6cb75fc3e358053efb3 709b9ff33ee7c2c746cb3e8b9a76641430d69cf4 022c158396765b0f9b44af61d804a9385f5e29a4 5ce5069b083f209ed9ab04fb622bcc12a54bb793 d00a3e0d3c783bd9b81ca9b7a1a6a1fef706c14f e5de706a5b3d77748e0c2d890130e7cc4393997b 210b7b043381bb009701b60d57f944246ba7389e 71f0ede50f4be1c138b6fcd921e2b6e04b131af1 84094f8fc8954d08c32dc9202a1f9c1bbc01c0c9 e29d0deb060ef2cd38ddb6b190bb20fdd5404fe5 e279dfaac9154464c1d44e7beddf2417e14ec871 6cd4c8007a7f562d5b0b616eb494270ac5c7b95d 6c215fe905b001c5cc0a4f179c4f2a1bdf9510eb 7b82914a8089d96173cc987d9636ecb224f5890d b5562f0eaf625505c2ec95d2aa0cbecb03c79a39 297fc68523254258981b2a7e69ea429aa0ae6daa 5d752002e3c8b73a67887c03aaa2fab9ebb1c5a5 4113a17a1273bd4a47bcc7a92259242d2b98fed9 717cb2883e775a64a91f8647c1e956cf887bcb2b 7b72ff25d24a0e70f484497984512754f8168621 d5aee67c732730db405d1e786b6ed45af9a22565 39e9ba71f60b6af0a9cb3ec186c3a2efbd898c47 122b69a770408634e5792c1fc0a1819f18ea746e 0bcf30e74a3fbc7c6e9844a6c7e5c7bd06017d19 c970bdaba773b9feec4148be8656afe01352a78d 2e51acb127a25d2e688a4c9e28a2df4f85475779 1ce900079158a159eea793d845c56d85e2a69701 02584c094a13793698c81b5e7f319999237e6534 393bfe99f9f3908d180cfd382f2751205ade430e 9b4466879bbf2fd5adc3c8b45001d43a61c6be9f 37df2f42b65fd1f2454f88791ab520a598f28ca5 0437e8c3694bea007db79ed3d52c07ae81f80f19 9aeaf615f3f92759489201ae05f953a36126c3b2 ccaec3774d17ba2230e2d635e390ef6b3bea0973 c278108f39eb828c88b6b7fc49f2eebb646a6da0 a7dc83cf38c7fcfa1f6a97793dda3f8e4eba520d 5d279a54ef1b397f272252e8780d1dc90c61362f 90c9f5bbdea8daf0dfaa51652f39f3aff3447b61 f71911a92ea34d44e38c36e4d5351b0a4d78acf4 a9d8042d5fdf6e8bb1a89362b0c777171a419b7f 0bd007446217de55b9bd7a06f4e7bac240b628f6 b29feaf2844d34e680c73fc556a8304bf4a60506 b918a4810f475df3cf73de68699423262acb422a a0c8590fd97aa2a0ace977cd80cab3b57c342e7f 875c946533f88a74c8d720cffcc8fcbfda47569f 0ec314bb258c6b032a6dd2bf122e4587bd4ac7b0 c35c507e8faa604e22a2d3d28fa2046c353104bd 9e788966fcb2c2b5893da8c56ea6a8e01a1d855d a19bcbbccfc9be7600fcc893a38ca7145ebc313c a9e9835bd752016541e13f7726e90ff7d2b61ed8 2db57f2f0a9b0fbbd179ad95672943205c132f86 ca089a4be6248bf70edb10f43ff613a0d0ea0d24 a3540d1379f77d77047adb029cbe5d9189040dfa 58c1db86a887063ba75e7da91f081c00e62c4bef 46cfc5137d193832630fdc47aa96474ff4ab7a71 2df5fe29b7edbe818a85fb2c37ab1d6c46d9ed6b 717bc6fab85c53680108fc961cad6338e779816f 6a956f72d0208884e39c44512c879676409b1397 535ca67c585b1af5d8718f4851e807746b3f558a 7db2a44cf4b270939b2d7a6b6841157a6ab2cf38 665a0306d48e0060b39ebb485af1bc226644746c 034497741b0f3d7599d7281e8ed428581a4d19ab 6f63528ab03eddbc50379d41ea97bf0d829428e3 bbaef5d1dbe65fa7d7647482a73504edb01e7e79 e2906d7ba9fa3a1b512d883f68b47e4e067b13da 7367e8fe8ccbf343f2278532bc281b06e36132bd 307c1d2c06fef3ae588ed6e742cd199ab459d15a 0fc8a3aa50f5e741fa287a5b2e19123e079bfc3b a6893c2f067a88837e01d49a344b8aae7db275a0 53e23b8cef0cde970030f58d03dffcc0a81bec52 021b3443f5fe0710fecd3801ac1080bec080bbae c4274349c4e0555beb703789f3fafe942723a248 2cfa72befd54a678df614cca053c963b84fc81d0 80d58b9cb4de2a3cfa82a27e3c2d695f154f9c9c 2ed28419409bec9c8724a93bdcb735c3666ca734 f8ca09699ea17eef25cdecfd5bab1f569c06a533 d99c7919a79d732100e289c61707e867082395b6 b3ee5f86f77ddf952a27ba534de73b502c5213e1 e978c69d1ede5978b15a879f8df6e62ceb42e1ce 3cadfcfb9b3ac6f39cc4897f11485673e4c6fc76 9d2cb9438410b97679e984ed0daaa442ec92cd1c 73cd5f1dc0e3294ec74a89bf828677e9a3d05d02 4abf0d6a6be36d343d39657b2065e262a34bc5f3 8ed40d97383d86b31adbd229a458dc67c49627e3 8ab7a7aa6dce74a3d054b363aef5c8fcb1f65d37 e44b3f7ba08fcf73407d2f523f7e053825482287 6d19f41f98eb5ab749bfd2a9885ff4474fd10a6a b3b8359775b9935268e44d397fd016b5b4f6f4c1 8377060e45a0321e55c4deb5b21d0d22e6b8f419 f198982f34dc0498002b30b282d518517edbbcea 0135c464bfbee8118110fff2fd16b656ecef3239 8b07fcd7d0149834f68b78c36426021c16765732 b238c77d28b70004ddbabd8d12161ee1d7dc0c6d fcdb5dd4b035ec047c1802c3bad0c7b7feff193a a124a05049c61ff80687743d8f5167a998b14296 b77db053c0821d178734b6211e1a47c1362b156d 01f31867db062c4ea5b6b35b94a27a5acf83ba59 db14672dc38600c27e821144e6946c5668c56bfa 685e441b527f79a791298df554696f7fbf1994bf bfe4ebd23fdeffac9dfd25e873e37b5db2c63892 b1bd950f9ad516defa0805fe0b8c2130ff087ad9 37e3aa49ea4218a2c44204a6ea6bc24cb75988b6 0cc87b08bbd9674e9b70db9cd0ab1c68854e5dea b79dcd07b3b0f842a6e494ffd90626bb16b850c1 f8bb287bd6c817eac4227c55f452ce2da3068285 1a840c4acb6fcf3f7d73db09957d09ff8f4bb67b 0982c146b8b020bf32880f08c81916a6c14ac7fe b76d405e937bc0ca4e33fa7a81bbe50edc42786c 6392edf8e9913b410f4122489687632ea982206c cdcf03375e55f694de72e5a5ddfc0c446a0c4402 c6435f9b929b7bff152005de532ebbfaf42d399c 85ddf9985ee0ebd17c4ea9d848d479111f9ceadd c9786572f517de65486d29550ba825bdfb3e4077 c02cbc7703b2b5bf70e6562392d6e6320c28a4c2 4825c5f1004dc03bed164c75ac71e10197ce67ac c0214413203031635dd25987d83bf2c9fc6b4375 a30b9e7768391ff9eb0958860baec0fce8bdd10a 75ad978e10d5ddec4662ca8b4abd4e4821d63008 a70f751de932ba6eae77b6fa8c40a9a5ae1e535e 4e311edb824460972f9a3c09fe669f543830d71d 9fb16332d83926b909fa218398be18d76bba52e0 04e06631b360e916a57d4ee59e44206c52fda279 4b06d467b2153cdf81efd8130f5338189875d959 61ec89a8687241435b9eaf2cb89ed6fe0be19d73 2a1eb9fda11691ca371a093ee5fcecb72d922200 bbedf194b2628366e1debc0efdf01f819ea5ef2c 29a35b4724ff4dbf066c88b2a2925eec460227f0 d2969e9fe0c01b5620c0d1b3345977840f87fc5b a8fb7eb8899bd3e82f57d7bf0c8c48af9d881f7e 9d4dd8ae29978c0ffa0fd43ca3e93f77f526d54d bbdf7006f2cd29742ef951af8fb09c95560dead4 f66ff0c34c8dfc9f2b5b0bdb3fc5b48181d58608 d6ece463ea6b11cb8be47d251ff09ffae3bff284 4b2605127540f55931264d39f41a6db9aab93051 69dbef0184977e2328c76ba5ce189622416cd7c8 b41aa1c8b7e2b24c0c0534ca4404d976aa99e5b7 a3167c7e899906c40f06b96e9391edb5264f9afc ac93ce6d519da2640773610c798f26f026aa8efa 7ed1e75d399f011373a622fd9ae927dac78704bb e8e22f601198672596e4df15aca9ed374829a035 983987ab153a123ed2f3d5b547354b0e48603a2d b0f35db6ae3347dc1a50ab4ce5354941edb0d61a 957aed6521fcdef5ba12efd3d3412b7829cbc7c4 e5193718a75df03cb44fb211d240c03e3c546e5c 4e7546f6065359729eef88e0f76e1ba2738f96ce 20fc9019b8db82969530a1918dbc2975b7d7a416 6b1780c568c0c107fb095187005cd4e5549476c5 53549c6220b7b5e6cec39fbda75ca03d1a3d9151 1170dfc7d55e9e0e42c047b2af29aee8c946b732 e41440a385455cd690b4b33187b137e24658e27a 6d9687a4c23e5aeef326a0b1cd04938d33fa8c24 287c15704d3035c2cbb4f81905e74ebe7d48f25d 5d9d584cbf46d6d21c5372b9f2f3d3b52530d77e eb28973a3a637331ba33ec77627092a76e3ad447 6c4325ffbcb41ef90d5128d5e33e1c8a83193b72 7fc5a783a76016ef0fe8514e7b8a19d8d21b5e80 e94332cd6b3afd3f46d2e0c7fc17764f4953e3c4 11e79da24f6c1d71bbaed9bdba4eab464a9f8c92 b2a90b833454a4a3d5edece2786e058c2d155c55 a62c5011e22fb0482d21212ca33373caba0eeb5a 8390db23764ae129326130412e292d8e7cd51cb9 c457fad23b01dbf9e8f0a0174875337938242a8a be73e75f99c8c69887c458c8ea46106b36004b08 d62b974db6cd4cea402e8699ecab2906bb537d5a 3206e68dba436d5662e6131e776b636eff3d3f6f 92e5ac31d966c0946943b4d503303b0f258507eb a5db9fa4d0c37e25e73a9b46e18815d2e7e90e26 2bef131bf9f27b4ca2dd0c3b2eb6e65614bca6fc 48a4a44ac288e5dad9df46f800c8ddb16e0744d1 834c8b9666b441bae88f0255450fc2ed8f466fc9 b89b068ef3acc501620652a30a47d11f31168677 7860b548571ffb973697e9363023020f448e9219 2a0410dbf410ab34d72e45630420b26b5d740142 db2f66fd2c6ceb6709c8bba4ca002adb2e59efea 921b581dcd2a40b943d62c28ab48d14cec0566ba 17d4db54ebab40167b3fd2596cc4d8811e70b517 788c21312da838310c44995245788fee79840e33 5b0013bce129d2a1fcc70316680f0fce52d90ec8 c2026706c631c7064620e04d27fd447d0f6523a8 1ed4ff7e8e8758bcee5fdc039b6aa9369681e687 a111c71e73487a9b845040625bfeb0169e5b7157 f54b2fff218ac4ef3e118f440ae2201373049dd5 717f5f2d130f9340e9312976be309b86430c3f16 9417a8e412b000d5834e617d790b34d5d8442f62 484f68577d4819745b3eac753881bcd3232db967 597f00972ab11b111f90b032cb15fbc476cab650 38403ecd2fc0686425b6ba133529bd1c0ef59a68 1dbbff7e1c6974ec124ab01662c324818aa9a815 01a06f328d875f38a4bbb3f2e71f08cf24b70aea 8057a09a5d8d97c50bf3ed9c7c40413e2a717fcc 4fb578406de64a8e63ae54ef9912bf25c37fa625 2c3f739767721714cae4d1385adf7a73e24ee96b 55e6ce2525654969e2c9ee3ff313b07382ee7f47 c732a2d34de69d8df156466e3ff5535c452b51a4 924a6a332af5b671ec68f55f1548badd4cb54d24 e31410ea2122a3048f7da4f2b7e4f3a4299bd86a 7dcf8e5af000986a1054171600e0f07c3601c917 97166ab0becc9e95580d04e3e17e019c41fcc0bf 2e78407e27bf06627dbce5421b737df34518b99a a737ecfb419e5941039f8b56781e6a804dc7e7f8 2be3b1892450e8c58252ba88d6f231d666b5e9e7 6fc1d580d95ff9a9048fd44606f868972e7eca37 8b49e8194feae4340549bb39d923a453c8b1f532 bbcca9dfb1fd6cb2d585cf841fd3d55f368bca16 a186ea4c34500b41d79f8bcedaec09f8e8d59536 cebf54b83086225d6dbd807e470d7fa116fbfb42 3fc3de1d842e85b746223b48651ea55e11adc086 b61a9e286910d5068cba91c085b749b008fd7c1b bd48bcee8678476ace755e0d788c5142e3d027bc 4e1ca6cd066126833137c43a6a43aeab42b1b58b fb12cb9999ae9d2152529aa89de37cafb853f8fa e0a17ca533f2a0702113ebe8b86a5c98c2545dc8 d0b98fc00789799d47c8edd4c801a39f73562161 bb766514d1d01fdff70b848cec73a8a51bbc8638 007c59f95f0b333a7153713f25bf34dacc206b9e 01ff1649469369cc8f8fc48b6e3a77d54d2bcd59 6cc871610d036afe310f42b5367a898d131307da 1da3784ea4c65717d9083c1461921c1c59a37a98 5f286973b887a7dc580300e126d51249575f5510 2a9ed1cdc06ad2297f95d23d641219a72dae3d0d a988e64caa895d2600b205207341e6352c9ee7e3 a28d1d814c5872456a25db1405a06d1e4f6e6775 0b6fb749b26c11dfecc1b954a080e89b52c67d8a ac30af112317caa2c52d96f5a9c5065369a37fed 033446d74afa1f066c429616d72e41752fecd99f f443df8ac86daa5f8d1857a9213e14d24de228a3,,Release 1 3,
nasa/fprime,106,2019-12-02T15:47:08Z,2019-12-02T16:35:30Z,True,2019-12-02T16:35:30Z,830e2a83965e9bfd0f20188c40148e5946d8f993,1,1,5d80ceaf7378c6500282e96486a424fb90273092,,Fix typo in README,
nasa/fprime,105,2019-12-02T15:46:51Z,2019-12-02T16:38:39Z,False,none,e8156a123329f04cbca21119aef16f0bc7cbc24f,1,1,7b67e1cd0adf35f9d1e7ab2cc794a9a834c48f7e,, Fix Dockerfile path issues,
nasa/fprime,108,2019-12-02T16:40:22Z,2019-12-02T18:02:16Z,True,2019-12-02T18:02:16Z,d947dc5b6e40eb1d571920564ae8e11dfd9cffa6,1,1,4424639746d5a10494ef9a724f80a79c5ec4cc59,,Fix Dockerfile path issues,
nasa/fprime,117,2019-12-12T18:44:50Z,2019-12-12T18:44:56Z,True,2019-12-12T18:44:56Z,79dc70184fde2a457a2f70eb185e3a36bdb82671,2,5,c35ab7ee882e2de906e731d525573b6aba560c9e 5d80ceaf7378c6500282e96486a424fb90273092 830e2a83965e9bfd0f20188c40148e5946d8f993 4424639746d5a10494ef9a724f80a79c5ec4cc59 d947dc5b6e40eb1d571920564ae8e11dfd9cffa6,,Pulling Documentation fixes from master to Devel,
nasa/fprime,77,2019-09-11T18:42:38Z,2019-09-17T17:04:38Z,True,2019-09-17T17:04:38Z,bbdf7006f2cd29742ef951af8fb09c95560dead4,644,526,f895c657b2e93f1fe8a3684717b7b99c3ad815dd c9978f92cbdbfee32c69656cace7d54196436574 b2b1c681773f6fc02ef95aab12df8c61d91d7856 ddadcdd7673281443d8c2b15360a716ec06053bf a39bf387ac06f04a88290000ff8e7b23d26dfab4 310b8a1c8da5a86bd4c5cec747a5dd55756a5f24 a2ec5f10d98808a611044b8924184c76395b7774 1cf6001c9cc7466465149a98dfadc38ce667cb31 f448e303cff5d28874d581c390236bc550bbe0ef 3f15ec71476675f80e58bcd9cd416384c0a82d88 a4ca8cfd9e3a6c65c82cd339872f5e3aff73b1fe 89dcdf95ee89e4f7a0077a456c7265524d68dfe2 9bc0bf01ac152c7188c269926512f574db228c89 4b7c8e334206b25f65dace0254b63c2d1647b658 adcfb57be05a4324b26a4a5268f89940772777db c44748b0d210924a77bb68c8fdb53c00b4f131a6 a62edf284fa87b24d268c15a57981750a2bd1565 83901274766dacf9e8ffa01ab5a1222d4085bfa5 485575541996453dbe8f7a110d3358713c283bd7 c58c74f7de1788902ce035543124b94138d2012f 382e3da55b8292c4da8121cb524ebcdc8d56eb7f 0046a8834061552cd8b1c79fdc4c59aabf0b6a68 dc9ae1ee2411ba6374d7e04d5aaa20811d6530bc 9be184da232ae453f2d86bc218a2d57c4c645dd5 978a0df2a952acb656061143db316e78e73c9249 77d9e33c1fe10374c67759a5dda838b6a6bbbc86 fadd02a2dec22ad2d3f63f486c01bd70fd4a4241 d67da8a74788396338b64a67c27fec255d7de58a e8b4110d6a7ba9f87a2400fa3f8bae09c2653011 1a088a4c7bd31de3fc7540f636f940143c2723ae 7f4e9cd99290dbb683669481de5e525361e24051 e33139c54f2b3caae416cdfcd778c1d8726d7656 5284ce6b3a17bf5ffaa7f06794df86da2c02eadd 67bdac60da939d9cc82ac45969d5460072accdbf d5a893864afd663445f3ee416e03fb1df704b7e6 5c87cf5f67ddb99e306176a681d81653e31d0cec 502c7c79f170e9f38d770aa6e0f0d58769acb2b3 020082a9d5efc84528bbbd2e0431e8773bc84aa2 46fa61b1db1a9c589b74daeeae8c47c6e59eddd8 53dd49e19b59ab24034dc304864de30030379cce 3bbd258b5c4fd480345e1577e5f2cee096763205 390102c36757ef78a733b0fe44400158b42deae4 9e69f7dde872a6568e203ba2a728a41a5275d799 e895f8881e74cdebf0e3a951c4b91985e2b5ea95 16723d2f36c88501b076fc71ed093e6defc7a70e bc9757702a5b5bbe76ed2367e2212922c4350f9c e35c9e1969bdad5914996a808b97b6761ac01e38 736381e94bd08a7ba6c59967fd6e6b2693ef1d0a 09d6dfba2da71e4bc16f0896fc80864e9e48e788 9ce07187d3a586c6912ab07d443352321f2cde56 a64475437469cacebdada17a04b986379ac8fd13 d9c73bb1e986e70397699dd587ac7ede67f93ecb 8f86b47eb7a09c7981f4502562df5969072daea4 a120c98ad10b48508c732c46b1e78520f9020e68 fd62aca9e12b9480ef1fd7bb8474f1498ef26341 d087487cee2825eb5df0cdddcd97eafddf5523eb 7a19f18fcd45cf5f7e76c4b14e23124fefadf49b 7cb2f9240e54091de5ae03365ba5f9e7842d4681 ec4b442306238b3cc4b8377ce6dceb666518146c 09b3945bd3b0aefbe2e446c903abea566a9dd2e9 069329cd8c6c496de90ecb517952e3a362d3fd3e fe29c2d1bb4e0003deb00d50304342be064ce6d6 33ef9965b1ec709dc8c878c38973a249f946eaa9 fef41d237ff745656b24f74d399e36ffcafac352 a8c8c288ee91c5a0311e8a31b8ca51fc8dd78d94 a446ffd5a7406f003369689423284e3f70d62094 9bfbe67a166de6c7563e86ff0a986393d0a84bdf dd13458d0600f19076d3e20f4c8f0bec9e7e22be febcbdac33270a7420e8e2aca9dcca8d1188a2e2 53172e26d5de8108ba0a5438684a2a8dbd32f207 913328353a9ee33e987aba25259a87238863190d 23cd90a4e43d7bc2e1e3c36489c4c1bbc3f6763d cb1b9587b869039df0c227d6ca9a53e9ac9ca131 a204b7380246ed1a366d8525c597ee49c5a95254 4563817979ed25a332fd84cd9ce53cacf561a995 bbab1bbee6a0f0173792eaf8fa6907a8eeb71c61 2905fd5da9a6e0fb722619da948be5ccc56c5a37 99e0971dd50318bc2fb3ff51cc8ee629709643b6 66c7739fec646a24c8af3e2e7e04fc23960de396 ccd64de9ef94fbe3b85f62849dcbc50bdf08a2ea b309fcd934b1196c549138d23c468ca68d8d18f1 51dbc451410c65089b5b730afa640d0debe5877a 3435d912a1e80a772f35d4b6d5e61d0d45c99640 a08df3278d5ab2eb515246aeecb6d3c1f63e8064 0cb60c124dd5702387f004cec7c25247bda08951 027fbb8180ab238c606c43b232a5b35b0ebaddda fc065c0655e6881a139f422e8561191b3b4b6058 2fe5ffd73b0b4b5385a976898dbadee0966054a8 d7f44b839cc63012ca82fc1f3d7d627c2740baa7 df490bb9ce7d503df19bd3fe1e68748df606c2f3 b7493eeb179d346eaf09f2f59216b01211a4cc97 63908e9192abbc5d2f79b9fc01ed746fe72dd5a2 357960f4fcf41244b926e79a364745ed48f2500e 0455798ea4819b94749cad2616513b565fd45080 5bb8aa3c019ea783cd28d308e91047bd96a2a88f 8bf5541bf59fbe2b6c0df7ddbfd6c07f4aba2974 9b5ab9b4c2c250464ee8be6dd2fceb5d0ae04373 682e85184a057137614f6e11be51e6cf3f48b17c 3447760ebe1d584be67e2ec78acd6a1ca7b8bdab c47fd52cc7423275484eb1f30049779e2ac1d156 f8f5bb9e2a991ff8f05fed60fe697beda567c3f6 34a904d6bb148a0b93a0b052eebd386b212e970a 83707855d206a45f632155c289c32ab75e2bf0d4 dae0b43fd5754b26137e49152d5823b5532f35ad d7cb9eb6ca9e277f3798508265b6ede8af388037 f7a27eb940006c7512ec8e4b6657c09923fa4346 2fc42ee008072a690641dbbf46bc504cd1e64d02 db24fdeeec98c013e8a43ba7f0a1baecc617697a f3520ff130b3cf2a33eae219be6c60e10de6b769 a51119d193b4cbfa67c72033afa26da02bd5e2da 0af75cc09a2e3eaab4a27f2ae3d21edda52bf270 80fa01826911696466e4de2aacce8def2aaf59bc fce8a0a5b3c7896f326b95215aaab2e298ec54da d0309a9e265b8650ca6be03b9132dfdc682e0622 fc0be3d63500823e01b8a620489a93726d71539e 237942df223205962cee8864053a914d78ce287e e3b8bcf10ec21e0a12e2cb8227faf8f7a799e0d4 035d0a537610ce815a0328c5593c80f8cca9f85d 978385ec48d7ca2c7714729afb8d223098453e96 7cbc0cdc6e8839908c34b50b86b3d10c424fe6f4 089b3f41dbb95497f8ec7e7280306751c717e245 a1672dd908eb219a8be58d5a1f4e86653a283a70 bf837b5bbc31b082b3db77a1b5e538d26dabda6f a400eb480306e4e11b32ca8747df2c0db70189f8 f7a113b93a43f721e8bf8673c7b934b65aedf157 03b0d601e8e7fa8031e38d4026231333e0ef3ad8 117e5c7942fd7685ccd11bfcbf94857399a37c44 99f4fde434c3e321593dee04565881faf0b9c30b 8a4343e2d808ef9d6a3d5074d7c5a05f2c483d33 7e51d972f4ef01aaa6c42b932a878985cc27208f eb090bfe01af02d856a38b11fb0dcf45e1f7b14b 01241a47aa7c7ed05cb757e48b22b12fb9b40ae2 335020b5b9039583fb2836bdf52221f170c0f679 737f3703fa19ce9ccf99204fcad22400b0fd88c8 499bd5990dcf6e4d3eba5203bbda9f308db6375a 4dde587626b4af807af20e8ba1eb6f48afbce4fa 221b7dc2f805dfb4bf2c781f60fd8824a4301ce5 1623f7ac5d803fa4bd594af69fe1c6e08e9c5b01 e7891ee1187d6b1cf3182ffb5b5d6df67d72ee52 fa2d246e67200788c7995e23deae32aafa1f4fc7 ccf03a17436257ee2236e76e36b379fc8ebb9a8f 66c61e7f6eeeced771755825d09a1071c67eeec0 44c267007af8036a1af998f4a9dfe24ad1646a98 27a18a9cf363114b6341a37604ac4dd30d802ee1 cda31fdd9d8891d1b377f2bcd7f973d8acc56a0f 6087113eb1dc1d71f3ba08134b7e071619ea4655 b71dbc3e278b0d9edc52e6ebc679311cd6b309fd 154532786c0e6ba92d8d65d5518c41906fb3aa9e eed0e3275f5a3f11ef2976a59847209f4c5be207 6ee4ec25bbf6bbc4893654eff9fcc9f0d3404cca 7992b278f67c65f6ee0c1eee1028c35a26901e88 d53532599576c9c533040632290ee44dc9b82066 9b943040f48e84575166c6cb75fc3e358053efb3 709b9ff33ee7c2c746cb3e8b9a76641430d69cf4 022c158396765b0f9b44af61d804a9385f5e29a4 5ce5069b083f209ed9ab04fb622bcc12a54bb793 d00a3e0d3c783bd9b81ca9b7a1a6a1fef706c14f e5de706a5b3d77748e0c2d890130e7cc4393997b 210b7b043381bb009701b60d57f944246ba7389e 71f0ede50f4be1c138b6fcd921e2b6e04b131af1 84094f8fc8954d08c32dc9202a1f9c1bbc01c0c9 e29d0deb060ef2cd38ddb6b190bb20fdd5404fe5 e279dfaac9154464c1d44e7beddf2417e14ec871 6cd4c8007a7f562d5b0b616eb494270ac5c7b95d 6c215fe905b001c5cc0a4f179c4f2a1bdf9510eb 7b82914a8089d96173cc987d9636ecb224f5890d b5562f0eaf625505c2ec95d2aa0cbecb03c79a39 297fc68523254258981b2a7e69ea429aa0ae6daa 5d752002e3c8b73a67887c03aaa2fab9ebb1c5a5 4113a17a1273bd4a47bcc7a92259242d2b98fed9 717cb2883e775a64a91f8647c1e956cf887bcb2b 7b72ff25d24a0e70f484497984512754f8168621 d5aee67c732730db405d1e786b6ed45af9a22565 39e9ba71f60b6af0a9cb3ec186c3a2efbd898c47 122b69a770408634e5792c1fc0a1819f18ea746e 0bcf30e74a3fbc7c6e9844a6c7e5c7bd06017d19 c970bdaba773b9feec4148be8656afe01352a78d 2e51acb127a25d2e688a4c9e28a2df4f85475779 1ce900079158a159eea793d845c56d85e2a69701 02584c094a13793698c81b5e7f319999237e6534 393bfe99f9f3908d180cfd382f2751205ade430e 9b4466879bbf2fd5adc3c8b45001d43a61c6be9f 37df2f42b65fd1f2454f88791ab520a598f28ca5 0437e8c3694bea007db79ed3d52c07ae81f80f19 9aeaf615f3f92759489201ae05f953a36126c3b2 ccaec3774d17ba2230e2d635e390ef6b3bea0973 c278108f39eb828c88b6b7fc49f2eebb646a6da0 a7dc83cf38c7fcfa1f6a97793dda3f8e4eba520d 5d279a54ef1b397f272252e8780d1dc90c61362f 90c9f5bbdea8daf0dfaa51652f39f3aff3447b61 f71911a92ea34d44e38c36e4d5351b0a4d78acf4 a9d8042d5fdf6e8bb1a89362b0c777171a419b7f 0bd007446217de55b9bd7a06f4e7bac240b628f6 b29feaf2844d34e680c73fc556a8304bf4a60506 b918a4810f475df3cf73de68699423262acb422a a0c8590fd97aa2a0ace977cd80cab3b57c342e7f 875c946533f88a74c8d720cffcc8fcbfda47569f 0ec314bb258c6b032a6dd2bf122e4587bd4ac7b0 c35c507e8faa604e22a2d3d28fa2046c353104bd 9e788966fcb2c2b5893da8c56ea6a8e01a1d855d a19bcbbccfc9be7600fcc893a38ca7145ebc313c a9e9835bd752016541e13f7726e90ff7d2b61ed8 2db57f2f0a9b0fbbd179ad95672943205c132f86 ca089a4be6248bf70edb10f43ff613a0d0ea0d24 a3540d1379f77d77047adb029cbe5d9189040dfa 58c1db86a887063ba75e7da91f081c00e62c4bef 46cfc5137d193832630fdc47aa96474ff4ab7a71 2df5fe29b7edbe818a85fb2c37ab1d6c46d9ed6b 717bc6fab85c53680108fc961cad6338e779816f 6a956f72d0208884e39c44512c879676409b1397 535ca67c585b1af5d8718f4851e807746b3f558a 7db2a44cf4b270939b2d7a6b6841157a6ab2cf38 665a0306d48e0060b39ebb485af1bc226644746c 034497741b0f3d7599d7281e8ed428581a4d19ab 6f63528ab03eddbc50379d41ea97bf0d829428e3 bbaef5d1dbe65fa7d7647482a73504edb01e7e79 e2906d7ba9fa3a1b512d883f68b47e4e067b13da 7367e8fe8ccbf343f2278532bc281b06e36132bd 307c1d2c06fef3ae588ed6e742cd199ab459d15a 0fc8a3aa50f5e741fa287a5b2e19123e079bfc3b a6893c2f067a88837e01d49a344b8aae7db275a0 53e23b8cef0cde970030f58d03dffcc0a81bec52 021b3443f5fe0710fecd3801ac1080bec080bbae c4274349c4e0555beb703789f3fafe942723a248 2cfa72befd54a678df614cca053c963b84fc81d0 80d58b9cb4de2a3cfa82a27e3c2d695f154f9c9c 2ed28419409bec9c8724a93bdcb735c3666ca734 f8ca09699ea17eef25cdecfd5bab1f569c06a533 d99c7919a79d732100e289c61707e867082395b6 b3ee5f86f77ddf952a27ba534de73b502c5213e1 73cd5f1dc0e3294ec74a89bf828677e9a3d05d02 4abf0d6a6be36d343d39657b2065e262a34bc5f3 8ed40d97383d86b31adbd229a458dc67c49627e3 8ab7a7aa6dce74a3d054b363aef5c8fcb1f65d37 e44b3f7ba08fcf73407d2f523f7e053825482287 6d19f41f98eb5ab749bfd2a9885ff4474fd10a6a b3b8359775b9935268e44d397fd016b5b4f6f4c1 8377060e45a0321e55c4deb5b21d0d22e6b8f419 8b07fcd7d0149834f68b78c36426021c16765732 b238c77d28b70004ddbabd8d12161ee1d7dc0c6d fcdb5dd4b035ec047c1802c3bad0c7b7feff193a a124a05049c61ff80687743d8f5167a998b14296 b77db053c0821d178734b6211e1a47c1362b156d 01f31867db062c4ea5b6b35b94a27a5acf83ba59 db14672dc38600c27e821144e6946c5668c56bfa 685e441b527f79a791298df554696f7fbf1994bf bfe4ebd23fdeffac9dfd25e873e37b5db2c63892 85ddf9985ee0ebd17c4ea9d848d479111f9ceadd c9786572f517de65486d29550ba825bdfb3e4077 04e06631b360e916a57d4ee59e44206c52fda279,,lestarch submitting the previewed work to Nasa devel,These changes are:    1. New HTMLGUI  2. Better CMake  3. I and T Test API  4. Refactored implgen
nasa/fprime,52,2019-06-12T20:48:34Z,2019-06-12T21:03:58Z,True,2019-06-12T21:03:58Z,10e57d8115cd3289a8cfa4764cb8b03e0a2a64b5,105,1,6cf5861fe43b660e0eca550d5b92a92dcc9baa42,,mstarch moving OpenMCT integration to separate repository,This removes OpenMCT.  It is being moved here: https://github.com/fprime-community/fprime-openmct-integration  
nasa/fprime,42,2019-05-29T16:59:24Z,2019-05-29T19:52:40Z,True,2019-05-29T19:52:40Z,0cac7c03128a44e65b0e742a391d2166a155f97b,1,1,83ba36fbea56c59e110e85e37b5582a3ac43eb75,,lestarch fixing the BSON security vulnerability,This fixes the vulnerability in the `master` branch.
nasa/fprime,41,2019-05-29T16:56:19Z,2019-05-29T19:52:21Z,True,2019-05-29T19:52:21Z,44ab4bfb3969f901f66a0e1b7b49df04abbfe23a,1,1,4ac3fa4ff144d9a0b4814c1095c5f396d756511d,bug,lestarch fixing the BSON security vulnerability,This fixes the BSON security issue on the devel branch.
nasa/fprime,36,2019-05-11T00:24:11Z,2019-05-13T17:34:31Z,True,2019-05-13T17:34:31Z,44bc57574daaac8d455b60912f664e6c57d487d9,3877,558,6fad65130025077f7342a8872411589cc13e5fa0 01cc26d559339a840e6e81538546610cbba5d37d 187365e2d297b3c72c811a97a1708f66036b19f7 bf296e2d028efa3d7e25a6e4abea6bfa75c612c8 00e1186f01ed82c21a55d8558bbe2a4c42bf9640 30dd94ba698244b8ef20d196f785b0093f3541a5 8d1463bc8e1c640ef02a84b01ec35b499082e3ce e3d1211e6aa538dd94a944b6f10042e933b686d6 262a7a34d448c84196e0e3eeb3f286c78d8b3c5a a3284fba82039bbfd39bf1454c8209c1f18faa07 e8ba4b4224828006bd715333d216d1085811a620 fdeb58d26c5b075bfec6031f2b3feb57c66a15da 4ac776558b47e67867d3485f2d88f70dc4e1bfc2 f29d4ec26fed42f1a7eef0d985b1f91ba6468f92 cb4d6155a5a73abfea7ed660ebd01c29ddddd229 8ec940da1253a02936d62099881b3ec05c55cc1d 0d1a55aada033cc108775ab602699ac7bd8021bb 500d0248f134a1c6a8944d6ecae51ead6293b1c1 fbe8b43b7477635f9ce7ba576747e460a7cfaad2 33c208e70efe959f0adfbe1be51f8b466ad1022c c3d3cb143c97b7f9741d2412d308b0941b5ed273 d3ae0b1e0f9bd23fc7abab9a427eb575d5435b60 42c8ae78ed2a88a739618bcc54f164f69326ab1a 61a5d853187e8e91c1722350306d42508db9ae97 311e47b04f29f049fddbb154c76e613f1039986e 942e832418ddef760bdd721f598a40ad056f4310 1e4651bd702251fb9a1d7406511b141822978040 9af7bc97f7944635954e8b50530b5f4fa96e08e4 39789f58e1e004388edc71505fb39bf0ae6845c4 1fabc4565b687f174c1e6f87a586efa31d1aaccd 4bdb2847afc3cd3d44b2decd1dcb879034120960 913680eb465d7d38a2b8ca8a464505678125cf71 9a5369b0b54a6eca9b63e9cf7f45ef28ea308c2c e22e0010a8916ba2500c0023824c188b368cd272 c203c3861cbb59aa9354a374a8f98cee426e8014 79e22c83aa19204652e8f7fc7801ca01accc0a2b 1938dac97d5cd85e53795a065a11594e9f65983a 4f4da8b5d0068629b52d02b3105805438125c120 f366065dfac407bc355d1e4bcdf107bc30fe2a89 d36c1e124feb275ca6750616f30c8254c2cf1a58 cac47cbab58663a34a20edfe85e82871e96ecf61 3c48b2e81b054b31196ea0a64b06a1a691039652 9da105487cd118e4c2e51864363fd468d5c09092 8165194a5d5cd644b37a9d2e36f6f33eb62825b7 ff6a6d9182ecf6b29dce7aad05df3a30b7bbca1c 18dd82a171f402951bd5ff080db544c6954c9b20 b52e1d68d4392cfdb839fcfe2f64f3edee4f15e5 6a9e0f336945720d91231748bfc8c0c11be61ad4 108f2e7c5aff40480adf3309610a50259a86646e e80aee4dde5642c8e9eb11140909a76a25f20a7a d3feeed5beb851ca5c75eeac578cb876b986801d f83ad02e9990bdf854d68646c120b7884a25a23c a6bdf22a68329e2097c6324afcd062e29a466011 4dbe2b48220e53aacb39e71fb9a1053623aa5edb f65dcaa323a1bfa02bdd3b106a98b9db15afc6e9 576fcec41d14f46a4abb975fd7d5e53bd41a21c1 a2ecd034493b060843681974a8db252b14ac3bcd a9fe2c5a0fc3bc99dff3b75c7af5884cf85b3742 c3ce733b1b495253484f0dc4157dbe7925fd8b47 82bb28a32f3c3434d8d97c4accc5209c37f076fa 22d0b3e24e0ea569a753f6777cd7d36d84890be3 af836596ece96cc1174b08c065bbdbe2e425e49b 938127293edb3d9b4599c55801e7ed286d7390f6 a3899ba3a4126012942611bd6f19364cd11e5c80 d1fd5812bd9e9d111606499e2ef02de78e2f235e 74fa0b9887da3e3bc66b12bdc953a16aed9ce077 a868ca308d7c311489b4840f75e2fd9904eb1973 9384370798999c51b7d483bef7160c25c86129a1 a6c90773e59adcc46fbf0e9f926decf36758cff4 48f1eeddea0237404dbeabd974941b94b25f8551 e4c1874c564769d3230c95d1cc0a8a9692911400 6f19682053faa3e4373224c9b570c0e63d4f86d9 84afa1b95e88429358d0f85e01a4d426a1bb32c7 7b74c8d45e6d91e7c702b0be9517a1640653d059 880dbd0251644b0813574690ea104801e7b207ea b4f8b996ce88eac83a0fa7c22b1ca5399c84175f 92f13e941f069fda1b0ec5f15b19babb52153f9b cefd6b81ea8e6fb04d729dd06d8d7816070fb1f0 9bef23c569c65aae28ca5a81097c1b461f68e25e 718e758bc3913c6b3ad20572967e856e90a745c0 00ad0a66f7eb2658d5769006936cf2233c4208a5 f37c72a5d11bfb1ed5565283f53a47f12de9de74 204756dc11c1105583885e57d3fcb130a1b5de2e 65d174b0f43f3868f5985aca65459c8f6daeb112 edaf2404ac2d1e481bfdb2de1e3a0f04d73dbde0 483938e0ff9b7b83248846e96ef3db231dc017bc 4a5c8551731e22f95a1034d9e707bebb2845f3d0 d0ff6ce96875d9ea0c2b81a1e012ea1bcc6a0ace 8a6c51e0b1f55eaa0efed7b0bd7861ece6562dbe 23db63d02eb0f460a000e1ccc6fd6619907a6e9c b6259f6214d13fe0e761a6506a9509c5eab39732 36ea58fb50b63b8a370b4a4da71d7a57e7b82536 7883fad57ab1899be5e7de688a85157af00b343d c6e76f20be51f214926bc7dc7b23322a3377a936 230904061fe73ad983e559064aab04c03feab5c3 6b08af36f655bff64c2cf2ffd2642cc72c4008b2 ba91d850e54200abf7fc7a49fdeaf0744f0859a4 f4eae8f8a6d43149b092180463acc5364c703706 df08463f093c7009fe3edb252c42b1e5de22909b 0399861d4ed0f59d55f76becf109266617193fc6 7279db3b3c4c1a7064721a909ec6935eaa24499d 3bd67ede6a7bdaa58307b78a2b7322c3ed648e91 80e4b14b421638c244aab8e2499aac88fdbd0e2f cc975488da68c1a28bdf0a798e86e72ee780f825 8e950a2b435a9effd5100c9529cd75571c5ebde3 7c64c011d7a0b56f7c1b5f5489d6dbbd6ce2aa38 d1593125b2050546d70e1f204077c2ce9efce5d1 438d3e25b8d43d5eda1047bc5d96694c57b9edaf 99c012b24bb71e24f66d99226f93ead6f4ba0d4c 464f8347192155dbc21f6382295cc25cbb10a5df 5c4a7f285a8b893f406ada8bb6104113fb742e3e 0e5066b6bff746ed349a4d8f18c6f685697e2646 7c2c502e3c138839ac30b1c1043c70f87733a38b 3f033e59c9ac50d67fdd742ab33987cb8b263cbc 4b4a617c4ff5d1d6939ab758106a5d39b060f18b d32b77d565a5e4d943a0bc155eff2a40a5eb2a10 2f2ee53aa7172981752df2861de08a61539e2242 f98894067a10beb8af939d64b27ad8a76beb0a32 ce85e68956747a6dd39d3edcb3e67d0cba0f41ff 597dc30cd115233e556238093e944cf286025f45 239b2a7ee680ba31effde2c249b65ee55005118c 43d7a3a8a17d812697bf8c07c9e361fd128f0556 a549355acff2216c31073b351d348ecd22ac9918 7c525a8f12fe32d7929ce6f7a06a8bdc913a0751 d16a19bd0bb292453e69ea28aca6e047bb8a39c4 c8ea31335c891cb7ca77ef80436f2baa9b11a07a c72b750c45da768671b9ea99f44bb5b76c3e0b77 d836f8e999d3d3329d3de29e4b23f78c2b1e4d9c 33c39c94a01f899715cf4fe9ab4460d3dbb33edd 0867a770d30670aaf947252a42f42c966265aea6 4ff0499b8bfcf00db64830de8403d9b3e8e6ba86 e171ccde0c75fd0aa62b45bbb55b8e3978ea880a 7b454110ec9982f25d89d7d677b80b7344c525aa e74f575ae73723ee5d75d4f322ddd5ce8f11ec67 f19c3f61d642a9f03912d1cdef9b7fa2aaf2e040 e42d0d9760543a4611afabfc9004008a65d65ac6 b10badb7d61b8659e488f772d070068a7c5c2e9e 7963b031cf26d4736358514e2f5302db12d2d964 fa128fac7f1f87fcd2b4ce0e2216f01a94019d97 2e0988b2fe441321045a8463bcf14f0a953a6f98 ad760d5b891b79cf76c0a4c39a384b07e5c658c5 102424b035149122798330dc25ceb247a24f2c88 58bd7c3d71fd8c323f6ca2376e0ecbbd378e420d 79f5295d4cb78fff737d22f49fc39e5bd8c060e4 3ff018b1cfdc5960a2188e21b5586fe0326fa267 c6d4b2d282099aae0cca1c156c13ec016baa6df4 51ce78dbef4152db949f0c6930ac852151fa9d88 2f19543bf3a965ce971392877dfe872d679d1b0c c8b86dfb7e5bedd3f02623b70dae067c83983b0a 50daaebde3c9db8b2afe27b8a74e5bfbf107c84b b95e29a59546655dfd52630c069addceb33be2a7 36d279e414406bc341d73039df37a52a57d0d40c 75eaa09e505152311d37992b256db84ccf5b4e86 faf0eec2689bd843a937700c0ac185fb28fb3038 ebae2d6a0ad2f4a7cdf7532cfbdba9dd49650673 54f9591086f9b44d522702ae6e4cfe71f3729e0b 411ba7f143bd448365c23f524669656c63b1613f d21a814ca83383ffc5b910128f0ef9c2e8ffb8ab 62bacdaf521dbf4ea3893dd8220f3313d522acfe 990f84f1404d110cd1c287b36683689306a64c61 b91128aea64e4b7ef32feb4a93db6f9e4e90b240 5bc3972249a8fbd8e2ba726f8fa25bf5a7073b66 f61e767f60ae6a552497ceadfd0bf6a6f79e2771 21189bbd9f1b5b79652666fd60444878cead4725 d5b6b37eb22ed1a848ceb42668ea6ab1ddda4110 d3f976b9ba70c239fbb0fd3a7c025746aff74455 d0c79e6b5532669707956f64ceeb178849acd3fa e1225e4d4fbdebc10ecc3db03015c481243b7988 861356dc048b32f18f4d47869239964d0d3b2c90 caa32bdade4e325c31211954b6b18741ac4e9439 aad26a6fdf6a1593b51a4a9b70129c73e806fe19 3710adc3dc4699bfe4eb607edb863870e362ba69 c2538c951dcd9b9dd271343190cfa7d36189a454 db8f76b7517d5e597a21078b92ffeced407bcc98 1af79179eae2f355197288e179a08191083aa958 83a8a945a83a470eca154d5d7ff6a4a02ead7807 bf03e6e2166e99c855696ff7172da6f7c8ce6440 3cd0e4ffde4be0db74f58c2ed401e4fb2c46ff42 8e4051436524f0771ff8f61dad9d134662b326a7 c7a09e9e405852b6caf3a824eb7f7114a3ff9e70 bb40fe440b752fcb82b238fbfdf3e68d04e8dc09 f4c910fc3950dc17bcc27201f9e4f081c999a8f6 1f73aaf566262034252030b3465ee6d6a79373d1 6c13fb2c04aed973cc9d2c53e834d1d00e69defe 055137706ac464a3d145843562c7dd6b3f2a6746 382b47968a10794866bf71399eb7425ce322b4fb 5a503524a676a7cbcf79bf09e9f2879db7b9574f bd6bf7da2cf6360231fccdefd55388af79b14efd 8d15d4c04f362636aae8713bbd86990da6347529 148088cd9a69749bd13345752ddbf91a8962ea5b b3ecf86f79c5f7b423bc42b7ef5a526422336858 c1959adc085f9395b1ffd7e2b7095dd9b9c186c1 6a59a209dd7803906c1513dc5b196c8c6468aa60 c6019daea9f96169cb6d862d9f7ad50a9db13477 069c3733b4b23a92b2e34b5e71d313a9d3897c89 c48a18bd675027a18da600a998fd1f35d366ecd3 f744a29d6628c4da4ca2c0b83c164d1ead5004a2 fa239f9b1f98371505f6410f57dc28e0081aeb9a ec6b592065d7612cf66fedabfed207ad79f27c23 c80631e6895e65267aab4baf5c34f0c4388219e6 ae368e2ef7f6d49568b9858040ef260ae07642fc 07ebb79137111ff3997014403afe923c94f38b3b bcac39710a6bea9cfe994861446a4fe11c9fa2c2 56948936b249c332b450e3a12a83f1204f11282d db85da01022ecd1c390ec0b738767f8a6a61ed4a c3598b75183080feb72ee782c5304cfaad8ba227 17c611bf5292cb157db15a337346a43e04a9e3e1 230cf66dc06397649bdcefa4905f286fb06f301b 1563ed7ba38b50d453503ebe86927e9be8bd2b06 5384f7fe031c584df16dbc50d9ac157b337a6cd1 1d093359822c64c3f8068110f00c16a6792c178f b332c7e14befe8d7277b2246bad07b72725e4b55 349ea7c854bcd5e998a73bb04566c933385814da 9104a38be3c31fe7f993b032a88995be9a4a863c 6ef370c7e14f606e5c5e35d4502c86b78c46289f 2bad4300f291bed70518f955f01084c214976d8b 136af07edd5e5c27c71dd4e33796177a1f44e665 3d082d65bc64079815eb5e4168e1ebaf099d1351 ed8a1b4dc00ab384bd31c6ba0effa4f87672a083 97973500018c2b4daaa001bb9c26e6ffc48900c2 d06fb5d0239e812c069f281907f7671621aec63f a068d526847dccb25ed5b3f1a6d106c0a47f4e57 08444e3774a4f6c5650c729a08dae89fac0cc530 285d2eb94766cb69427e01256f3223ed3f165af4 1fcc655d0243f8e20288dd3fca7ae02ec62321a6 107e442544654b19e5bf5b6ce47418875eff4e26 32ce53019ed225e233f5c362274ac04201e55451 55cc1697549cbbd543dc26cda230dd651e423c7e f36ef2c93ceafc7a2079bdbab25eebba5e82c67c 73bb672c29859ac62a4e50d91479ce9d3b0dfb03 274fde53ae6a061472945003554bedebfe4422d6 db344f52e4bfa8bd500b542b069e5e262fadc7a6 a06d82763e8e85dd3d5ecfe39b119fea72f211c5 f03ba87f8848089667973159a0b8627999f5e9f8 28e93e4f59641d04f98e9ae5a007b8f7dbe016c0 b0cac8a22edebc6546aeff25daf22ae334b25997 40427f79e02f6cb072422fbee0452b2920d83f87 be7cfbaad9723f6d6238756dd4c82fe5ca84cc50 40e2988a6bf35572cea001a14c97a4b37120e7d8 0f3404cb10e195b4a185a6815af69f4f4552955c d49ee6a30b53602d06602e3faebc427886d55ef3 1c8f1cb2ce38a6fbd61ff7891aac032b531a669c acaa67d19e05c9f6a2ce0c392cf9a20e8092321c 04ddc471f511e5f4fb98f98f9f8eb5474f196a06 9788f5e28c4fdc800911911a6495a2056072b487 4b2901eb0ef22d43b1973070b1ec46b46326d139 42f4a90676e8031b94cf5ce4c9914c2bffead5f1 3b532250287733864cca3fa418c5c544b95af91e 4f794c4da1bb0bd0092de1280b847f330e0f44e5 082e46685e3efa60fc1e6813d56864c833383a07,,OpenSource Delivery of Release 1 2,This delivers Release-1.2 to F Prime `devel` branch.
nasa/fprime,18,2019-02-09T19:36:18Z,2019-02-09T23:34:28Z,True,2019-02-09T23:34:28Z,888b6d6bf17dd76fdb77d5bea63653b0e07745a8,23,2,65332504a4a994aece5b1f99f520430260457dd4 5f5bb42e5a05305b0cf6ea2f617e5c0eaa770465,,Update better magic plugin,This is a push of an updated MagicDraw plugin for F´.  This is an attempt to help with issue: #17 and issue #14.    This version has been tested on the following MagicDraw versions:    1. MD 18.0 SP 6 for Mac  2. MD 18.5 SP 3 for Mac/Win        
nasa/fprime,128,2020-01-15T18:00:12Z,2020-01-22T21:46:04Z,True,2020-01-22T21:46:04Z,9a52bebd5e280d65670770c3f0510bd247d326a9,35,27,2a1efdca7e9afcc910c581633d8895ad894412df fc06ce0f04c5bbf4322bffadaba2b91daf93fb9a 7b85f30fa581a1c34d7ed81a1e45dd850f82d8bb abaf03644ff2518fd629be77b4e9903edfbd427f 4511e53b1ae1199beacb5b10e5cae216c1c6ea09 7f623e0ac84531ea0b39fe85e4a4da2797829f41 d617397ecb5fa92c2671acb06301ac885fe98036 b50ec2e598be4b31f5c3db6204c5c0595e4e332f 3e49b9992e211e2eee8e1a853cd415f88bdbf16c 925fe88d809d1be369edc5b51860c5d426a74cd2 1ea91448b3aabc4aa31ccb468ed64e1a47f9bff3 eef0606c8374b793db0ae226262b5f9c6ed66e33 2398099c8964b79333bd889da5852541667bc058 d5062925b19fc704906b121945fa186f65b6c67a 4a7efbc189f2b26068f15264fc3887a27cb77954 9a96e6b5a323d9552b5fd69d2dd99d91fbfe8cac 37c4dcc86979af602b7493db7f58ffd5e3f18b14 78081fa3c1825dce7adc69c703034a0df99a843a d3f37938483d57dac608a7f61d6a6bd336d287ce d360870df42b07f70075951dfa0ff21464782223 83e810ba6497d613b0afa74d79dce40f0cb74e6a 091f4eb2c51abaad7bf5fa10b9df7510704b1094 5506ffe675ea2cc10a36f0a0f1997efc4c8e8edc 39a520b125f2356665dd6c5244c1a1cc4ddfbed9 fcf889908f61f694b69af773b02009d6f823343c fc342ebe522aa98691e271f16e748defb4855213 67f6157bc270eb8b6d14a3197735a24eb41f47c2,,lestarch rewritten documentation,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| 2020-01-05 |  |**_Submitter_**| @lestarch |  |**_Originating Project/Creator_**| F´ |  |**_Base Branch_**| devel |  |**_Short Description_**| Rewritten documentation for F´ and Tutorials |  |**_Effected Component_**| Documentation  |  |**_Effected Architectures(s)_**|   |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| n/a |  |**_Build Checked (y/n)_**| n/a  |  |**_Unit Tests Run (y/n)_**| n/a  |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    Updates  F´ documentation.    ## Rationale    `fprime-util` has been added as the recommended path-forward to build and develop with F´. This updates the documentation.     ## Testing Recommendations    None  
nasa/fprime,45,2019-05-31T19:39:57Z,2019-05-31T19:57:32Z,True,2019-05-31T19:57:31Z,ec8dae83cc9636b2d57385b5406cc886c0a01355,1,1,6b56f02596ae7e48320526010e378786b54abbf9,,lestarch adding gds ini per suggestion by rdaruwala,Adding missing gds.ini
nasa/fprime,53,2019-06-17T23:01:31Z,2019-09-03T18:24:12Z,False,none,0fe9817ef39a05b70bec5765fb0b39925890c427,3,2,5bbd12586d838660a3356bb85e3b0d6459f395f4 9a93bf79ac964695aaced67bc3e42be2d0b5ada8,,mstarch adds tcp server binary better logging ,@timcanham this adds a run_tcpserver script for running the server independently.  It also prints the log file should an error occur at the startup of the server.
nasa/fprime,125,2020-01-09T00:30:45Z,2020-01-09T15:14:46Z,True,2020-01-09T15:14:46Z,86643c5332d533d927bcff0608df43573d3bd092,2,2,a6e0adfb2b575e3fff87ee07dc9d32208ac4a2cf 24bf80f2c6210f1b2647ccbbde116141f7d2240d,,lestarch making linux UART driver work on Darwin,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| 2020-01-08 |  |**_Submitter_**| @lestarch |  |**_Originating Project/Creator_**| NASA-JPL Maintainers |  |**_Base Branch_**| devel |  |**_Short Description_**| Working OSX UART |  |**_Effected Component_**| LinuxSerialDriver  |  |**_Effected Architectures(s)_**| Darwin  Linux  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| n/a |  |**_Build Checked (y/n)_**| y |  |**_Unit Tests Run (y/n)_**| n Note: UT requires some real serial port |  |**_Documentation Included (y/n)_**| n/a |    ---  ## Change Description    This makes UART compile for Mac OSX and Darwin.  That way Darwin is not just stubbed out  but a functional UART.     ## Rationale    UART for Darwin  easy win!    ## Testing Recommendations    Tested in the GPS demo.  Everything is as expected.    ## Future Work    Repair the UT for all systems.
nasa/fprime,118,2019-12-12T20:51:13Z,2019-12-31T00:01:58Z,True,2019-12-31T00:01:58Z,e0411957f32ce1bca0a7f23f58ea98a36475bf60,3,1,17e663d6167acf6a08d6a88882648223316d078d,enhancement,lestarch installation and utility bug fixes,This adds quick fixes for installation and running on fresh systems.  Namely it does the following:    1. `fprime-util` checks for `cmake` before trying to run.  Corrects a confusing error when cmake is not installed.    2. Fixes python 2.7 install to fix scipy errors.
nasa/fprime,121,2020-01-07T21:21:12Z,2020-01-22T21:13:07Z,True,2020-01-22T21:13:07Z,7f59c667fb5cf89363f1125cb3ce9d686932c0e1,15,8,edca23ea343e7845d0b222ebd29c6b084c729df2 dad1d7d3b18588b40460fdcc413d7dbf70743423 4e23c9e70f3145c54e690a1ee8a19dc4173470f1 b6bf80612edc223aefb0aaba3439087f5db041e9 8950a88cc2dde28860da6dedf80098d79399af58 7e38c07bfa017562dc5af3b026c06b62a2d3e15f 809e5d6f38abf94974bfb460caf8ed46c47e9bc1 051c72621ee253a60fd3355dd7871d3cf457aa3e,enhancement,Add In Better Socket Handling in Gds,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| 2020-01-09 |  |**_Submitter_**| @lestarch |  |**_Originating Project/Creator_**| NASA-JPL Maintainers |  |**_Base Branch_**| devel |  |**_Short Description_**| Improvments and Bug Fixes for `fprime-util` |  |**_Effected Component_**| `fprime-util`  |  |**_Effected Architectures(s)_**| Darwin  Linux  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| n/a |  |**_Build Checked (y/n)_**| y |  |**_Unit Tests Run (y/n)_**| n |  |**_Documentation Included (y/n)_**| n/a |    ---  ## Change Description    Makes  a better `fprime-util` and a better `fprime-gds`.    ## Rationale    `fprime-util` needs to be usable. This work improved it during tutorial rewrites.    ## Testing Recommendations    None  
nasa/fprime,99,2019-11-22T16:05:02Z,2019-11-22T16:05:14Z,True,2019-11-22T16:05:14Z,f443df8ac86daa5f8d1857a9213e14d24de228a3,1,1,033446d74afa1f066c429616d72e41752fecd99f,,mstarch updating contributor list,
nasa/fprime,130,2020-01-24T21:14:40Z,2020-01-24T21:15:04Z,True,2020-01-24T21:15:04Z,ec1609ef144c0f1748955ff082a270e705abdb76,10,9,0d430935dc0a0f7c5500364885467aa2d27aacdf 8d3de65de2662364ffb3fc14d808c8ff7b5708e2 7a5d927c0869bab0d935e5e4aa59d9ffa3b04100 6489834930de6778c52f71bfd114121278d9f615 f76e79a0b6e149dd9c6510650ec621eff833d4ef 7790515045708b3fe169ea8c75e2f7ab38c4aad0 40ac9f4ae6bf9bdda2891d191cbd158d2538f253 0a9ac14a85416f11cb6a1c266d08fcd2c4b7d4f7 b2ef756bf464653ae6977186ee9bcc633214fadb,,lestarch delivering 1 3 1 code,
nasa/fprime,131,2020-01-24T21:15:18Z,2020-01-24T21:15:24Z,True,2020-01-24T21:15:24Z,2d038261091b9566fc6fdbd0633ac225f66976d4,0,1,ec1609ef144c0f1748955ff082a270e705abdb76,,Merge pull request 130 from LeStarch master,lestarch: delivering 1.3.1 code
nasa/fprime,133,2020-01-27T22:59:06Z,2020-01-27T22:59:29Z,True,2020-01-27T22:59:29Z,98aabd6f8b7aa851073a65f8f42d95af6877c658,1,2,2d038261091b9566fc6fdbd0633ac225f66976d4 ae8a2a43a39d0e8a1908a82b48106467357d6cba,,lestarch pulling in minor typo fix,
nasa/fprime,140,2020-02-15T00:30:21Z,2020-02-15T19:37:42Z,True,2020-02-15T19:37:42Z,f9edbc5050311dda2f41b76c458eec77886655ab,1,1,085a9cf20c49dac65f3d127b3ec0f88f2fd47c64,,mstarch adding documentation on fprime util ,Not done yet  in progress.
nasa/fprime,154,2020-03-04T21:51:33Z,2020-03-06T16:30:30Z,True,2020-03-06T16:30:30Z,15c5fcbc41065336c88133f1517f7a8715c7a3e6,1,1,10251169ccb03d22861b87d5dc3b2966c30b252d,,Fix uninformative exception in TopoFactory py,Fix blank exception thrown while reading Topology file
nasa/fprime,159,2020-03-08T20:53:07Z,2020-03-08T20:53:38Z,False,none,edf0a47d894940176dd925f01735701dd5f7cf19,1,1,9141f07a014541334de1c5677d3cf6c238f67705,,Fix incorrect path to rpi cross compiler,Fixes an extra slash at the end of the path to RPi cross compiler in raspberrypi.cmake toolchain
nasa/fprime,157,2020-03-06T02:45:31Z,2020-03-09T19:12:22Z,True,2020-03-09T19:12:22Z,d6d2b8dd3ed16a766e876aa3d6405e2e46fd3383,1,2,0071d2143624316bec470ad19dd49c18730a6eae 6eede6f5d7f7423c091462c9cd6ee45ef7170ed4,,Fix missing RD_UartMsgOut in RPI Demo,In the RPI demo  the event `RD_UartMsgOut` is defined the XML  but never called (issue #156). Updated RpiDemoComponentImpl.cpp to actually log this event in `RD_SendString_cmdHandler`.
nasa/fprime,116,2019-12-06T15:49:12Z,2020-03-09T19:44:45Z,True,2020-03-09T19:44:45Z,de098859578f2ef816c7d763b49aba811ac4d343,4,6,c35ab7ee882e2de906e731d525573b6aba560c9e 5d80ceaf7378c6500282e96486a424fb90273092 830e2a83965e9bfd0f20188c40148e5946d8f993 4424639746d5a10494ef9a724f80a79c5ec4cc59 d947dc5b6e40eb1d571920564ae8e11dfd9cffa6 674d422b63be0d0e7e31cc826fbc3507ae016ba6,,Move CMake builds to python3,When calling the python command there is no guarantee that your script will run with Python 3.  Therefore  explicitly call python3 for cross-platform support.    This PR only touches the scripts called by the Ref deployment in the CMake flow.
nasa/fprime,160,2020-03-08T20:53:21Z,2020-03-09T18:51:36Z,True,2020-03-09T18:51:36Z,554cb8948de6122ddc7ef1f7b496bbf8f9551ced,1,1,9141f07a014541334de1c5677d3cf6c238f67705,,Fix incorrect path to rpi cross compiler,
nasa/fprime,87,2019-10-21T01:14:00Z,2020-03-24T02:22:24Z,False,none,441caaef78434525d268348036d2b8703d414f03,14,2,10251169ccb03d22861b87d5dc3b2966c30b252d 1114982b301336f0bcd2ee897b7d1c0a7dc2ed50,,Add I2C component and unit test,Add LinuxI2CDriver component and a unit test for it    Unit test depends on having hardware attached. This unit test was developed and run while using the ArduCam multiplexer here: https://www.arducam.com/arducam-multi-camera-multiplexer-raspberry-pi-4-application/. Which is at address 0x70. In order to be run successfully  a device at address 0x70 must be attached or reads and writes will obviously fail.
nasa/fprime,165,2020-04-03T06:45:51Z,2020-04-03T18:09:01Z,True,2020-04-03T18:09:01Z,0eb1487ca93a1dfa1474fcce96afcd8cda0faf9b,4,4,8797898716a7a82566c6eaf33158389ba88c35da 0a45a6493ae02b5a40ccb6007f1cd358faa7d4f5 1773723df31320c75348a8a0ee054661bfffd6c5 821be10872d62afcecd3967bf7e74ca5c0561cc0,,fix some python syntax errors and warnings,Hey guys  I'm back! This PR contains just a couple of fixes to fix python compilation.  The print statement is a syntax error on python 3 and the literal comparisons are syntax warnings.  Amazing job on the new release by the way!
nasa/fprime,115,2019-12-06T15:39:53Z,2020-04-30T19:35:51Z,True,2020-04-30T19:35:51Z,d72b82975ee832e814215f7798c6c83fe0a59a15,8,10,c35ab7ee882e2de906e731d525573b6aba560c9e 5d80ceaf7378c6500282e96486a424fb90273092 830e2a83965e9bfd0f20188c40148e5946d8f993 4424639746d5a10494ef9a724f80a79c5ec4cc59 d947dc5b6e40eb1d571920564ae8e11dfd9cffa6 dce6fad244fc179cc76404468dc961cb97f78072 5a158944b8b106643aaac4fe7b637d826c7b9eea aebe07aae3ef4fd319df4692f380a211148b1f87 cff1b9938083da7e98154982008eff4146639691 03ad1ac3d81eebe78c5aacb6f6c96a5b39994aae,,Add RTEMS5 support,The RTEMS platform file definition can be further discussed. Its current implementation is something that is tied to our internal build system.    I'm not sure why `netinet/in.h` needed to be included explicitly in `SocketIpDriverComponentImpl.hpp`.    For direct sync  I found some POSIX tailoring documentation for RTEMS 4 which said `O_DSYNC` is not implemented  but I couldn't find documentation to reflect that for RTEMS 5 as well.    I'm unsure whether `TaskDelay` is a good choice for `Svc/LinuxTimer`.    This PR doesn't add any support for RTEMS5 in the current build system. It only touches the CMake build system.
nasa/fprime,175,2020-05-26T17:14:02Z,2020-05-26T17:17:21Z,True,2020-05-26T17:17:20Z,f28c92e31d58e7e44bff09ad57d574ca5d5e91c7,458,174,dce6fad244fc179cc76404468dc961cb97f78072 5a158944b8b106643aaac4fe7b637d826c7b9eea aebe07aae3ef4fd319df4692f380a211148b1f87 cff1b9938083da7e98154982008eff4146639691 03ad1ac3d81eebe78c5aacb6f6c96a5b39994aae 674d422b63be0d0e7e31cc826fbc3507ae016ba6 98aabd6f8b7aa851073a65f8f42d95af6877c658 849666872269c89e4318fd926bb5b34d566c949a 29036fb00c043a494171b5aa195d305aadfdf7bb b19a5ee67a838b0b16cdbe87182f502d70bd5467 ced97f043044493ec0dedd61128a52144e926ce4 35b4baeb8d288380c29a3d3b2284368c6625e782 71f4a89e0e80054a8aedb62777f329af822b1394 f83815aa5bcbac74788844f45d046dba49ee7f1a 085a9cf20c49dac65f3d127b3ec0f88f2fd47c64 fab8162d30b8b6ae142569026f2945df122c0674 f9edbc5050311dda2f41b76c458eec77886655ab 17d4c5e072fc28b47549f5f739471ada165dc95f 12a3fd7cb3da2bfaf0497113181a0bc87a13d847 8e7ab6a23c40f24c4f3df5e86c83db834acbc164 9a83191f4b4611c4f2052eba16dcb4cd400e7f20 dec4229c36368825e03d8e5a23093733a530e66b c82ed1c2c0b277d115b8cc5bc3d9995899b6bfc4 5e0b856b1f08c35c074bc35f22572ee9f7df8098 b336dcd6448e6e7413e9627f68e46d2ceb2fc157 cd75695d4c70dc106702c17808aad42b4fb623fc 1145375c9104681b21be282316d473a7304ddc94 c91b9c2ad469490a6a7a626555384b1805909d11 f708b19a3d53c17241e119b47386294d99d535fe dd6a67f874aebd35d730bd2e61ae7b9ae9dfd5a7 3a7bf0117d53c3fd5ad94b7eca51cd34a7cdbb26 113856fc18e07491a4bea72410e31b5cb3c22e82 f212fdc4766c27bc338fca6d7f1b7019d475cd34 08dc0c0a8050420ee2954600e445d5348d94da99 097d2c0372abc4b9168d128ef213f9e761e0d097 7b3515545ca50fe74689cc609754b480ab3ec317 8469299059886c938ad218e695908a2fbfd6eb98 f317125c6265bd3882973aa14d5080ccb70e2abc 03c7d156434af90070d835474cead278596eeff4 457afbb57bcb8fc63186e145029bb6b164db3c49 144d9c7d29a9a58285c0566394f2e83e9fa8040e bc4b28f7c0e4d6a5cd819b640aae607de954bbcc 5880ab6b178acd66d0e08476fd59b8530a0af058 588b130bc63099b31dfa3d40546e25550157db89 7df8d2d4f83e8f3eefcc5b0b53e75f430f9fb9a0 d2dbf7ec83bd61e2dcb5a8acc4e6ebaf4e1fb659 32825108d76fffb11cc234815d2c9764c506f80a b5bb77f047b7242981d7f38e12ab12f566a143a9 ce041e09f625dac133abe10532ec8ba27b1e3373 3eefbe3cdb3bfa32dd21baab4bf817c5fe992809 f4788d621b7a27a4b3c4ab27c9e50f988199e39c 0a8b49424785742b7867afd8341f3cb2c1086990 ec34298334d1b8080cb808c1457f505a85004fc9 8c8c88fcf0b1495b10a02f7d59f4277c4c1c2cfd 05b213b1025c7ead0740f862d24cf65fc028eefb 05fff3724004bf3387d3d3dbeee751c18f63607e 73799d327e09b75073ce2d7a0964fd893708b9a9 bf1db59c78a43ecadcba2eafe56769f5595645d8 3c8fe23c01ed70b66faabc3e8e482526a9dfa0cf cd750cef15c70000b160526b84821030328ebac8 0bd92223e49734efb3680ad09491c78efe7dd083 f61691e974d59f68f2ad060dd358eee4d1247b95 2f68cd98bcee9da866176874575db483f14b0f3d 4c37785da51af6a4b9027a238f24099a8c3ae47d 39d6ebc845a8be947018527f231a084ec4edfd57 16464d525aa3603012a181e3a74e6e44c06ed6bb a4fce35ae4cd323a2e291e76950df4e1629cf0a4 bbc6011b9efed6eb41f0b96c9b2a0b177ef8e045 16f884c5c1ae8b768e19278b0b838a8982b7c5e7 3d21e72acb03a752864623465ba0b683bbd516d4 b2a0c31eb8573c98e2222cec09435e70b4dc15f2 c627bef86bc9b162f36ce9b1280e278fd53c2b5b 69c3e9a4e46c07e4aeb3168489ce7ef5abca4388 a31e105625a82aa855a887bb38234e12b5b7a8e7 5bfe5d3fa12011306f2787826e3a1241eebacc75 418e3587418abc8d19071e8529fd15c5a7c83ac1 ceb3abc42ce4c5c847d5a8ed264968e77d9727dc 0ef93cc17701532f96caa5214a486718a7046c8e 10251169ccb03d22861b87d5dc3b2966c30b252d 0071d2143624316bec470ad19dd49c18730a6eae 6eede6f5d7f7423c091462c9cd6ee45ef7170ed4 15c5fcbc41065336c88133f1517f7a8715c7a3e6 9141f07a014541334de1c5677d3cf6c238f67705 7a7ba5158d2575c1ee2d79e19660f933d7d5e985 554cb8948de6122ddc7ef1f7b496bbf8f9551ced d6d2b8dd3ed16a766e876aa3d6405e2e46fd3383 a98bf5feb67993264ec17c64463295091bbc8e77 acf884eb4a70b4e3669d0e145dfe613c608655ee de098859578f2ef816c7d763b49aba811ac4d343 f5fd61149778d68f66d1e9639a1ac8ce6c5249e3 f7f03b3b95a89c90d63ee6d3dc8d3bab152c4210 31a7f1f9aa82b2d66d6413423c29dffa9304da3a c23f2494cd8c8b277aa2db97bd6ad2d35d278568 73cd277cc02a0e2f0e53573281cea0505b99df1d 7f90f7705bcd24b6c571dc99196788044097ce7b f2d500f62eaa41911d52ff91aec19c2527daa5b4 b32bb366bd259e13b55334d30b7420d9534fceeb ebd923ef1f89d9833f6d2182d0b96b9ff91bc3b1 ac303975f75f2cfa2f8a60cf07dacf0eaf514e27 2305d1b09af2309d1216b16b7d764bfb5d8eeb5d aa27c8fcd48760ef246614a1778849309f90808a 119c1458fd03b32914a0b22efb31934c91f404a7 6a717cece150cdb454071487eeb3969cdd211bb0 87155169cad18c3ed79a9a1d2d5548e6c4ddee7f a92cf533a8375a8b21197313e7aa21c797c5923f 543f2303f47dbc350ab3a6dd8439da440a78c4f2 ca24980477f3af1111a8546c1fe27262e76f97e1 fa099cf71ddae639444eded155c888102edb83a3 774b5242bfdd0e89aef607175050c6fa7c453134 208fe6ed090eae077406624e823908b32836a8f5 01f5ee6ab2aca384608d98e085dbf29c3d6a9682 fa53aa1eecec7f9bb498772ce7120b2152838e07 21cc33227b34fa7716cea55e896783bba75dc97d d78570d66008e5278f218b69c6a81c7eb124964a 5fd3749c2bb74750edf4f7afd22f732a83a09475 08d4611d4373225bf1437a7eca9e72ebaa54c603 da5bfe6527606f821a5ec5a67391612b50ba40f2 83e218ab42ae9719d26f251bffa548941c48f6bb d0babf4f8a49486947874f34620225e355444216 c81553068a32926f93fb89d46c87ccb1c8408786 907193340b3a9b13d3f8dfe2f73ac74d7432943e a1de4527a816a6e6d28dd5a94af8c1c885e4ee26 33377bbfb896b55e890be8afba68058a151ef60c b88f97d5e850472fe235ec9cc48c277cc7a23e63 b5893bc9147ed78b25e22d1ddcd369ec8e97c269 ae9476011b5c205a20576db58499b37d6f4209ff 47e1656c90aa91046a8758972c1951b8daa5db03 ae406535da2f0388c0d074b5bb3a08eaabe1e3d8 57c6448efa17702d82829cd322c15b9f580f2cfa 3dd9ac98f9679283de52d99cc2e5a23fff1c27f6 61183fc9d0e27d7e6f2566e31341f0f582b3c517 639c52311210dd2478cf8089e7e2d2998ed596aa 90b7d4df5a6f15a7af266ca9bffe4963f57ca9ad 2d860a8990b2d0ad1812671e2e502d3364d507e0 32c37e302d7cdffa313da17fd3fb33f39027f8a2 95fe2afb320083a9ccb75cca0ed5367958f0f63f ec8c93921b9b6fbbc9027a3f1f417520fa97cc09 fb5ede94db6bc0f16e3be0b48d800b49ae5e8416 26d04d413dbbdf1afc71be3674d9cbd8336b4e30 7848e3b777b5231a2aa0ec459c8365ad7f8393ca 84ea3dfcdbd03d6435832d51c0f6c1ed299fafd8 97e26db5c950aa88824eae2d453fee91ffea5454 2dde68086dcd2020fd7884a64f48f5bb42d4c2df 8f8897c374e8f3da24eec3e13b254866f65859f5 0a45a6493ae02b5a40ccb6007f1cd358faa7d4f5 1773723df31320c75348a8a0ee054661bfffd6c5 821be10872d62afcecd3967bf7e74ca5c0561cc0 8ede0ebc6995fb21bb9d21201d4a0b59e50e8be5 91a54292e39ea12efd37869f2c52a080ba1bbe4a 405bc9d4e40c24f1a572acb637f242c52a3cc169 0eb1487ca93a1dfa1474fcce96afcd8cda0faf9b e326382ba2d3d0e3f965a9c0984ff9ade0ed404a 7b979681b32ba43c3ec6b7b87287a21c650a8ebb 3af7756879f648bdaa07463726d67e540e1d67a7 679c2854ea3def8aede4af8e01afb82f5fd11c7f bf4211748b34a910d0d3f4aca00a6116b25edb93 e57c0ef89fa1cd877f9cdba46bdd4e7a455184fb 595effa66c261ec57e45cb43d5de3ecdce31ef85 d6b640839f12526b39ea5b3b931272b48a4c6e9b 8e19ffb1a64d1d41352eabcd6efb89bc841086d5 352c59773ed57e378672e94376d615f352875740 305a4638c7526995ecc27ad7831c547fb258b214 09ad97704a6dcd5b5895b1b592e07db9c4ab7585 a14f0641cebc3db496ab5c65743f4414c2ea2e8e 0ec6c69553accc1d6d860cdfbe15b260336e04ed 40b6152d11c92fef72b91416b328b961b032de9f e6ff61a4c5ace061b6da6d21f88669bd0be6f274 9415b229698d1807d08efc0ff3f7f292683ea428 e3edce5008bd81ec0b8fbae616f5fa08abc7f282 d72b82975ee832e814215f7798c6c83fe0a59a15 718d6a5b873756c11c83f694a0dce6d7be8242a4 cdc842ec3713282d7296a82bf65bbb1c8d4e5512 93a15e89cc28648affbd9fb1c84dc83a2d955346 92632ef6cef52359e8dc5862cbbcc5a836dd1b69,,Changes for release 1 4 and tutorial fixes,
nasa/fprime,169,2020-04-30T18:13:44Z,2020-05-05T21:33:05Z,True,2020-05-05T21:33:05Z,cdc842ec3713282d7296a82bf65bbb1c8d4e5512,1,1,e3edce5008bd81ec0b8fbae616f5fa08abc7f282,,initialized serializable_type __val on initialization,Fixed initialization of serializable_type  which caused issues in the MathComponent tutorial
nasa/fprime,179,2020-06-09T00:49:31Z,2020-06-09T03:11:04Z,True,2020-06-09T03:11:04Z,5685660140dd837edc0cee3466571302e5060d64,63,45,0d50ce19439796cf714b77a18ec5bc61fc50ba15 0c60edda95da50b3fa7704959ea0a243c4c5083a 38593d881c548035f2dd05551b28a1f412d18e08 0b3df6677ddd91f981f272ed9b6bd115638c8fdf a947da94d4e683b3c9a560310dc70b3167af82f0 f28c92e31d58e7e44bff09ad57d574ca5d5e91c7 dde31ce24da3818496f458060acd9df6886e31ea a36fd700aeba9e22b75f8c4cd79605d5c85001b6 b6c9dfd735ea910ee8fa61446a5ad1243f5e6c32 1d60d08b0ddee91ded71faa9c26ef0774b0902e6 926c219e151ee04f340241a85e0ee00513036d66 36a343d90260af63d4f078841f483ca345e5d0f1 828786df8fe4c3b5938463b1be69c43addc329ac 8f939eba21a18b5c2b276c1fcbb9bf02e215a873 457eddaff120f15a8ee9a9847516e9f8850b34b0 83b090676f723040983229cc72472cf55312285f e59f6deae83bdef67851048942faa4978ed1632a 0c890c1e11ac1f255a3c742dc6d10a4f1699fec5 dc184d9d1257de685db5b90fd66c6d7b911560a8 5db58a9af966207296f268c4d76cc8b38776dfb5 a4fc39c4658eab232d8dc527868e05b894f1ea7b 1adf07f7d9728260403a3b7b4281d812f101be11 8beb60b973dd2d40b5b6cb6a7f0475ee5edc2820 49beee7b7c3cba51824f61f748db0dab22cc4738 d7c35cea4245f673f04e06fd8a739adbe6885a45 f422a40cadc7874a7de1db74ee3e5e4b4014b496 78cab8f25143fbdb59b7a94525717eea9f1c9a19 070a44b9e99695bd9000a611bf73f7a8f49362c5 df6a7b17b2a2cc604069839c5a04ee8143b35d30 618cd0398dd76954a6a4c7adad180d8be6a85ae3 e65f60ca03acb6d17eab982ea1d1009a223debf5 648c5bf2a08fde512829c228ed142cc15bf71207 d8a2b7781a08b56b55786b37c87f9717db860d1e 8d008c98ae99ac22115f3fe8fcde7fa18e46e539 888508fcfb5aae86318c4a8e7e23790e4f0bb5ff 428c191d323dc014403492cce20a5c866df38cf1 d6aa48c3744fefcb9c22029a947c3fc6428dc650 8eddbe5e9b6945d15e1f6e808baedd7f040723ab 2ac1c92ac3e69e3bdde5c8a69a0daf03f8a03eaa 03a3c92b9d4d1386fd80c2265527c7ac3d60e3c1 7db6fc25c8a688aac54861a5ef3e718c8adbfdb8 9aee9b5551b19c6dfb579d1eb3b7e15b4968d5a5 f0cbc6ebaa8b26b67eae1c3d9c1f0cf55a9a8208 4f5e6e61ef58541c3927063129510e5470002481 d2580458864e3f7034f9386bb182183c8921c972,,lestarch GitHub Actions Based CI,This PR adds in CI through GitHub Actions.  This will allow all future PRs to be auto-checked.
nasa/fprime,183,2020-06-16T20:30:24Z,2020-06-16T20:43:15Z,False,none,523711c0e146b8403adc854ca95763da0a9f084d,150,4,a4a4304970f1ad454a86964c0b7f0f87086fa822 54221ae73c181ef4ef93e4ae0bc51474bf19e115 7d71837f2a0f99b8cf9e739ae65f199aaf41b7ba 315cd5d965795ef0a331bc2b717bba152f28b440,,mstarch reformatting python using Python s black formatter from hunterpaulson,
nasa/fprime,184,2020-06-16T20:57:11Z,2020-06-17T20:32:27Z,True,2020-06-17T20:32:27Z,bd5e5c1e8e2b0bc46651c75376aab89802d6e56b,150,5,a4a4304970f1ad454a86964c0b7f0f87086fa822 54221ae73c181ef4ef93e4ae0bc51474bf19e115 7d71837f2a0f99b8cf9e739ae65f199aaf41b7ba 315cd5d965795ef0a331bc2b717bba152f28b440 2a47bb9a29902ba47c24d0bbc005c73330941bf8,,hpaulson Reformat Fw Python and Gds code with Black,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| 2020-06-16 |  |**_Submitter_**| @hunterpaulson |  |**_Originating Project/Creator_**| fprime |  |**_Base Branch_**| devel |  |**_Short Description_**| Reformats python code with black formatter |  |**_Effected Component_**| /Fw/Python and /Gds/ |  |**_Effected Architectures(s)_**| Posix |  |**_Related Issue(s)_**| n/a |  |**_Has Unit Tests (y/n)_**| n/a |  |**_Build Checked (y/n)_**| y |  |**_Unit Tests Run (y/n)_**| n/a |  |**_Documentation Included (y/n)_**| n/a |    ---  ## Change Description  Formats python code in the /Fw/Python and /Gds/ directory using the black formatter. No functionality was changed. Only made stuff (white space  quotes  line length  etc) consistent  ## Rationale  Makes the python code more consistent and readable. Also closer to PEP8 without being too picky.  ## Testing Recommendations  Please report if this breaks anything  ## Future Work  Run pylint and fix Errors and warnings it finds
nasa/fprime,188,2020-06-23T18:33:24Z,2020-06-25T17:12:07Z,True,2020-06-25T17:12:07Z,adedab3871a022cd4604028d6ff9295e7e1af8fa,3,3,3415f7dd731895aa73e9063a5cf6991afa6da441 de456f49acf8cece8bf0e4a882eb8ccbb593fdca 7fa0b59f09467c076ed56c4700602c2c43951021,,Pre commit hook for black and python development guidelines,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| 2020-06-23 |  |**_Submitter_**| @hunterpaulson |  |**_Originating Project/Creator_**| F' |  |**_Base Branch_**| devel |  |**_Short Description_**| Adds Pre-commit hook for black and details how to use it  |  |**_Effected Component_**| Python code developed in the future |  |**_Effected Architectures(s)_**| Posix |  |**_Related Issue(s)_**| n/a |  |**_Has Unit Tests (y/n)_**| n/a |  |**_Build Checked (y/n)_**| y |  |**_Unit Tests Run (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description  Adds pre-commit hooks to fprime. Currently the only pre-commit we run is an automatic python formatter (black). The instructions to install and run pre-commit hooks are in the Python development guide. They run automatically on modified files when you commit anything. These files are currently restricted to the /Fw/Python and Gds/ directories since we don't want to format other python code.    The python development guide also tells users how to run pytest and pylama.    ## Rationale  We want to force people to format their python code so that it is consistent with the rest of F'.    ## Testing Recommendations  Commit some python code in Fw/Python/ and Gds/  Or if you want to test without committing you can stage some files and then run  ```bash  pre-commit run black  ```  This is how I verified that only staged files within Fw/Python/ and Gds/ were formatted.     ## Future Work  Add other pre-commit hooks that accomplish other useful purposes.
nasa/fprime,187,2020-06-18T23:52:13Z,2020-06-25T17:03:45Z,True,2020-06-25T17:03:45Z,9a97c45b3bb5ccc8fa7334d124459f61bd5c2b00,7,4,56e847117431700bc6a7fed4f8f93df545f72820 7aba67dc7eed5907685b5ae2f375c0f7c304b53b 39bff7a45917866a0612de2911712d7c189d26c6 fef9acf60552972290d6578c7d02143e04b064aa,,Pylama on CI,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| 2020-06-18 |  |**_Submitter_**| @hunterpaulson |  |**_Originating Project/Creator_**| FPrime |  |**_Base Branch_**| devel |  |**_Short Description_**| Runs Python Static Analysis on the CI system |  |**_Effected Component_**| /mk/ci and .github/actions |  |**_Effected Architectures(s)_**| n/a |  |**_Related Issue(s)_**| n/a |  |**_Has Unit Tests (y/n)_**| y |  |**_Build Checked (y/n)_**| y |  |**_Unit Tests Run (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description  Performs Static analysis on the Python code in the /Fw/Python and the /Gds/ directories. Currently it does not fail if it detects errors  it warns the user and continues.  ## Rationale  We want to force people to write good  clean python code.  ## Testing Recommendations  Check the CI logs to see how many errors we have  ## Future Work  Fix the errors that pylama finds so that eventually we can cause CI to fail when it detects errors
nasa/fprime,181,2020-06-10T17:00:58Z,2020-06-10T21:21:18Z,True,2020-06-10T21:21:18Z,4658f2e6ded822723c20b6a7b6ad13c0cbcc29b8,9,27,46498140d5ced50dedd93aa399c89614051d5a4f 4fc7a882f5f5928652138d6ae535a03dd9da224c b833b342a79484958a0c915e928c9d1b38f49abf ba4e289cf9d9c68c96de82cf85e5545a45235bfe 2bfac9319bfdd36ce8f41690beec8fb6a76e3191 711a405853ec1cc6deb63a4ac957fbaab74c1018 97510102a575e5e60bff42ea13a2a88d0469eeee b90cb0699aba4002dfba34bfa9f16b4a70ffc28d efc7aea1821ffdaa22af3f18dc194f7292e60cf1 6a463b894ce65ad11b83b6d13ed6effc0df97bdb 750b3fccea6c315d81dabf77a094d9e7b538ac59 e35e6c86307a1af30dfb31ed2895e5f798d208dc 540dbbcdbe7178a229e22dd189b7129e559dd048 411e4502b42f5d6e72624dc98492284f62a0dbbd d0bcfaeaf8b17727fce3d01154374322cff03681 14943eff8e16d7fbbafa89c35844aaab67fc8f40 46992fb1cc879829e395f07041c8c7dda7078d47 ecd4f8ee8e8dff637285f05bc28c929a495cb990 af40318eee85c58f1bc76a3de6d93d0b0047d457 24febab68c62919730a8d55f26a9f2d1f13e567e b13a6b127886d6f4ed57dfb0ab61a81775155586 04290757e1cafd5ac65c92d47893e1d327abcd63 f3850e48dd35b23a0770d82293a743d16bce1b3b 4e15fa7c64d45dc0b4ea25b1c94021e600caa57f 4c34172a8c5344b9bc345b7421dc3dbad2e0ff6e be8e08c437ba2d4b7f3e606e250eeec47e1efd0c f0bdf31b2b182fa5384835847171d67adf9831b0,,Valgrind on Integration Tests ,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| 2020-06-10 |  |**_Submitter_**| @hunterpaulson |  |**_Originating Project/Creator_**| F' Infrastructure |  |**_Base Branch_**| devel |  |**_Short Description_**| Runs Valgrind on Integration Tests upon pull request |  |**_Effected Component_**| mk/ci |  |**_Effected Architectures(s)_**| Linux  Darwin  Posix |  |**_Related Issue(s)_**| #462 #257 |  |**_Has Unit Tests (y/n)_**| y |  |**_Build Checked (y/n)_**| y |  |**_Unit Tests Run (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description  Refactored the execution of the gds in fputil.bash so that it runs with Valgrind to track memory leaks.   Fixed the memory leaks detected by Valgrind.     1. Deallocated buffer in Ref/Top/Topology.cpp  2. Deallocated the threads of the components in Ref/Top/Topology.cpp by creating and calling a function to call pthread_join(thread  NULL) in the ActiveComponentBase     ## Rationale  Leaking memory on a spacecraft is very bad.  1. Buffer was never explicitly deallocated so it leaked memory.  2. There are two types of pthreads. Detached and Joinable. Detached threads free themselves as soon as the thread terminates so that its ID and resources can be reused. Joinable threads stay in memory waiting to be joined to other threads using pthread_join(). Since fprime is multithreaded we must use joinable threads. The way do deallocate Joinable threads is to call pthread_join(thread  NULL).   ## Testing Recommendations  Insert memory leaks within components within the Ref app and check the ci-logs*/gds-logs/valgrind.log to make sure that valgrind detected the leak.  ## Future Work  Run valgrind on the the UnitTest Suite
nasa/fprime,185,2020-06-16T21:03:06Z,2020-06-29T21:39:12Z,True,2020-06-29T21:39:12Z,ca587c16aa1aca012882a44c6bbdf263082077e5,23,57,984ce01e123c9559da1c0d777493256410226999 c277aac62fb800d9167155d6f69aeba848a64795 da99deaadc1843aaeee0aeac7abb279aa58663a8 0142777c9ab2cc5dc9321a5a5850045fc4b01746 8165fdf7711d234677e1ea919e16cfde32a47243 03c3295ea774ea8d5aa52a634ebafc52201675a1 b7e30dbc805ab79bb9c04560066ca6c92b84d01e 9e462810baa0a40b88e7e6e9afaf5997ee0aca54 d7514f2e73d1f969cd3d933c8f789114e36c8261 94715c28aa9b7004993cbb46e5e42905db2fe550 0835de463a30b7f05b04b799d533272f26449da5 435c54d119c8bbd28fa5497cbd0bfea3f3cb6753 c027c22c7e6023748c9393e752ae012e90d8624c 903601472c06f2f3c49dcf1968ee5c2c6b79e890 544a8fcc1997bd8d35a8e1bcb13bac894fdd5c8d c6bde921f2f7a86026e16f8348aec322ef2700be 48749ee06cde1aec9bf2990e042171206311b65b 6166eb77c19423f5034a1a663a2b075aa2595409 3c5f800e3adc74f9b09d766e808bd02f0d09cba6 aee93e2b10cda55b5e148ecb7e5a8645c0e50d4a e4a12ab6223278a75c3640f641bb1bedb11ee145 0d8ecc50259086a066833a3f17da92af25d229f1 21deb3da9ce92bf3ecffd531b93ffa825c12d3e5 826325e854ebc438d799451ce78a8046ae01861c 604d7ccd00660185c0b8fe0f84ffdde544027ee5 4cad154c44f8a8623e2a69d24b218253bd11e538 0ff1c73bcc36010b227c8bb36aed7af5d403e36b a9c77c5fbbd8827b3031cba3f5056d75d0350f81 bc7fa459526a78acb7b6ae3da24eae4fc8e7270c 6114b8690e7104406a2be258ec92b7400109ff5c e3c27e84ebf991a8fef2195d318846066a6c1326 2eceab0e2a1925467da3db127ff940de1f46992a 3451ec6b90aa08624594d6fe91c6d924ef2e4a23 bbe36a625e23e08516caec96e182f3536e414eb5 336f20af9384d6b9ef4b2046c594a2e3e18ccf67 e10c585239c2ca28c8f95fc40188b17440326036 0b15b64b6a20e1c0c17d408e8702edf543d3183e e2ff0ccc5ff1cd0b9c2cb57370141ec7541830fa 73cd1327a801df114a9a7c67c4d584073b22e771 80693a4e746b65fddb671cf4e2dbc51a1b6028c1 2f58429d2ff8bf327ad4a0b9e4b50f9d4c80eb98 ccc8d3ce146f427b9999758649f55be2ab42f96d 4eb54fb582699a4d05647a55750c0817854adbc8 49e6e997624da14daf8ac2cb22acdbf26810beb0 c80cdba29937f5226f42189cb74f1dd6b0205f2f 12dfd618f5fb58a8a0ac2d4a536313e559afa4d7 cd3f9014efa3fcdcf9eb83227069849e5363fd86 ab07f033175445b2beafa2ce2b395c9d1480d673 f726d9031699200d39153ee19b15cfb555194bfa d8cf4de90e624c1fc450a907a58dceb9af7ed2f3 576b68ca625b98acb4a52b8753bba9f2a7af54df 33746ad195ad3815cb82e6dc6e6e0c19d2b14a65 45b19526caffe8d7779fd14ace543573b4406901 1580dc7836f4c85fd9987879126d96b00c953699 6c70d96476fc416ab68de26b7917d12795b6534e e3b59cc4e21e3f465553b8fd7a82b6dccca14397 8a1779d5e3b0caf7c603ad712c699e9ce0ade370,,Feature fprime gds cli,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| June 16th  2020 |  |**_Submitter_**| Jake Deerin (JHDeerin) |  |**_Originating Project/Creator_**| F' |  |**_Base Branch_**| `devel` |  |**_Short Description_**| Added basic-functionality CLI tool for interacting with the GDS |  |**_Affected Component_**| GDS |  |**_Affected Architectures(s)_**| *N/A*  |  |**_Related Issue(s)_**|  *N/A* |  |**_Has Unit Tests (y/n)_**| y (but only ~30% coverage  if that) |  |**_Build Checked (y/n)_**| y |  |**_Unit Tests Run (y/n)_**| y |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description    This adds a functional command-line interface tool that developers can use to interact with the GDS  viewing telemetry data  events  and available commands  and sending commands through the GDS. **This tool is functional but not complete  and all interfaces/output formats are subject to change.**    After cloning  the tool can be installed and used as follows:    1. `cd` into the `Gds` folder  2. Run `python setup.py install`  3. Run `fprime-cli -h` to run the tool and view the help menu for further instructions    ## Rationale    A CLI for the GDS would be a useful supplement to the existing GUI  making testing easier over the network or in other situations where it can be tedious to set up a GUI  as well as providing developers who prefer the command line an alternate option. Interfacing with the existing UNIX tool suite allows for massive flexibility when handling GDS output.    ## Testing Recommendations    - A cursory check of the tool's coding style/organization should be done to ensure the tool will remain straightforward to maintain as F' evolves.  - More unit tests should be added to `Gds/tests/fprime_gds/common/gds_cli` to cover the remaining commands and ensure functionality is working and stable.  - Furthermore  brief UX testing is recommended to ensure the tool meets developer needs  isn't missing important tools  and is optimized for ease-of-use with the most important functions.    ## Future Work    - Tuning the output format to be usable by testers is important for the tool to actually be useful.  - Specifying the dictionary location each time is annoying; being able to keep this as an option while having a configuration file/etc. to set a default project location would alleviate this.  - Adding quality-of-life features like tab completion  manual warning limits  colored output  etc. would also be helpful if time permits.  - Due to having to connect to the API anew for each command  CLI performance is somewhat sluggish; finding a way around this would be nice.
nasa/fprime,189,2020-07-01T16:22:16Z,2020-07-09T19:58:23Z,True,2020-07-09T19:58:23Z,329e3d5a858fa5b3d349450a866a9e0b5f5c2c6f,5,4,e1dacabb02889e0d2bb0a55e9c2ce48c9ed85e6b c15829e1508c5404ed92a656b421d66607800900 29b25097bad2bb876c714ee5f631177a3368dc2f 8516434b624cc95765deea5cceef86f81981ea59,,Fix gds cli missing events,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| 7/1/2020 |  |**_Submitter_**| JHDeerin |  |**_Originating Project/Creator_**| fprime|  |**_Base Branch_**| devel |  |**_Short Description_**| Fixed a bug in the GDS CLI where some data wasn't printed |  |**_Effected Component_**| GDS CLI |  |**_Effected Architectures(s)_**| N/A |  |**_Related Issue(s)_**| N/A |  |**_Has Unit Tests (y/n)_**| y |  |**_Build Checked (y/n)_**| y |  |**_Unit Tests Run (y/n)_**| y |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description    Fixed a bug where the GDS CLI would miss some events by adding a new predicate type (for comparing another predicate against a `SysData` object's `TimeType`) and wrapping the time-updating check in `base_commands.py` in this predicate  making the comparisons valid.    I also updated some broken unit tests for the GDS CLI while I was at it (a previous commit had added a flag that wasn't represented in the parsing tests)  and created a few new ones to make sure this change worked.    ## Rationale    This bug was originally reported by Aadil Rizvi  who noticed an issue when doing the following:    1. `cd` into the `Ref` folder and run it normally via `fprime-gds`  2. In another terminal  run the command `fprime-cli events`  3. Send a `cmdDisp.CMD_NO_OP` command to the GDS  4. Note that the GUI Events window shows 3 new events after sending this command  but only 1 of them is printed in the terminal    After debugging  it seems this error was caused in `base_commands.py` by creating a `predicates.greater_than` that expected to be passed in a `TimeType`  when the Test API actually passed in `SysData` objects to this predicate  meaning there was an invalid comparison occurring (which didn't throw an error for some reason  possibly because of the implementation of `__ge__` on `TimeType`). The new predicate wraps this comparison by only using `SysData.get_time()`  making the comparison valid.    Keeping information parity between the CLI tools and the GUI is clearly important to avoid getting confusing  contradictory outputs  and to make sure test results stay consistent regardless of which tool is used. Doubly-so when this difference in output was clearly a bug.    ## Testing Recommendations    Besides running the unit tests  follow the above bug-reproducing steps and verify the console/GUI output now matches. Check the `channel` output for similar issues.    ## Future Work    N/A (Assuming the bug is truly fixed)
nasa/fprime,190,2020-07-07T18:27:21Z,2020-07-10T21:34:10Z,True,2020-07-10T21:34:10Z,14aed426dedc6fc40a089e5e02a283c8c23e10c7,74,16,8ccf622629f8f3c30797fb84ec5a6fe1f931ddc6 53676ee6b68e13cff86006a9a7f4b83fa08944d2 3fbf687d44dba41fd8dd9af7cf1bbf6b80eb4831 80f75d0cdfdb76a79744d26f4e85790c97a154a8 9f8bb10dc89cce744462a5af7fc4270c0102f050 18f02e54eacfd2f375ca02eb9f2495e8ef425a30 07ccd3d62e741eba1be4858adf44cd0356817699 14908ff1768189eb653b4c56c0345e4f0ac668fe 9b426bb76f05d0138fd2e88fd1d7e4432f037b3a 38482be7bc119960fe4e63bfd6f59cd4f01c2c9c cfc40b92beb9e08ca1144cd1025cb2ce46aad15d 9ae9dbbac169c7aa8b8e98d2297810095d2ce334 62387c9fb4916e125621685aacb5344223c7c9be 9ce6807974a4a65e713f98cf9bf6b71cacac60e6 c2fac38c1c38d5890f06083c66a6a8429a33cb0c 22beb86adf55bbef10705ea3f08eb7d68de89bef,,Fix pylint issues,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| 2020-07-07 |  |**_Submitter_**| @hunterpaulson |  |**_Originating Project/Creator_**| fprime |  |**_Base Branch_**| devel |  |**_Short Description_**| Fixes python issues highlighted by pylint |  |**_Effected Component_**| Fw/Python and Gds |  |**_Effected Architectures(s)_**| Posix |  |**_Related Issue(s)_**| n/a |  |**_Has Unit Tests (y/n)_**| y |  |**_Build Checked (y/n)_**| y |  |**_Unit Tests Run (y/n)_**| y |  |**_Documentation Included (y/n)_**| n/a |    ---  ## Change Description  Fixes hundreds of little pylint errors and warnings within the fprime python code base. Pretty much every python file within Fw/Python and the Gds had some sort of warning. Many of these were wildcard import issues and naming issues where variables were redefining private ones.  ## Rationale  We are trying to improve our python code quality. Currently our python code has the second lowest rating of D on [lgtm](https://lgtm.com/projects/g/nasa/fprime/). Meaning that we are in the bottom 5-25 percentile when compared to projects of similar size.  ## Testing Recommendations  A couple new pytests were created and updated so you can run those as well as anything else that runs python code.  ## Future Work  This fixes a majority of the original 902 issues. However there are still many more that should be resolved.
nasa/fprime,191,2020-07-14T18:59:36Z,2020-07-15T18:35:04Z,True,2020-07-15T18:35:04Z,0c13d47dba32f63b735d3fea267cc594e0543f3a,36,10,db0c6346f0352ea2727755cb7fbdb462dff915b9 e4cfe76e298c89f200dd4dd12cbf0d8c5253ddab 5ec1566869234b56d25d2d064f28b543b5da48fe 363086e49d292d4e2c5f630bb5c1f5caa7c196df c9515a799c239f609112ab2680a8d4894f6a376e 3e619eb8736333e5cba32b0f1409735a5693ef72 13e0a3f39dde280284932ea1c8db4d4a64d60486 0268f27916405751cd15749227511383a4471b60 c74e03f489da84b5623222f2453139ad1337b67e 7573e3cf90b307a09726b9e14e477231f26b94e7,,Performs automatic semmle analysis on all pull requests,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| 2020-07-14 |  |**_Submitter_**| @hunterpaulson |  |**_Originating Project/Creator_**| FPrime |  |**_Base Branch_**| devel |  |**_Short Description_**| Adds lgtm to fprime  which automatically performs semmle on all PR's |  |**_Effected Component_**| all |  |**_Effected Architectures(s)_**| n/a |  |**_Related Issue(s)_**| n/a |  |**_Has Unit Tests (y/n)_**| n/a |  |**_Build Checked (y/n)_**| y |  |**_Unit Tests Run (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description  LGTM.com (Looks good to me) is an external tool that can be configured to run semmle on our code. Currently it is configured to run on C/C++  Python  and JavaScript code. Before a pull request is merged it checks to make sure no new isses were introduced to the code as well as keeping track of older issues that have been fixed. All of the issues semmle finds can be found on [LGTM.com](https://lgtm.com/projects/g/nasa/fprime/alerts/?mode=list)  ## Rationale  Now we can be aware of issues as soon as they are introduced as well as track our progress of fixing current issues.  ## Testing Recommendations  Introduce a new issue  ## Future Work  Fix the outstanding issues.
nasa/fprime,163,2020-03-24T02:24:19Z,2020-07-15T19:32:23Z,False,none,4a624cfd888ec2e6b12a31af2a6d9942473a06e7,13,1,1114982b301336f0bcd2ee897b7d1c0a7dc2ed50,,Implement LinuxI2CDriver,Happy to add a unit test for this  could you point me in the direction of the new documentation for the unit test framework?
nasa/fprime,192,2020-07-16T15:08:39Z,2020-07-21T18:20:50Z,True,2020-07-21T18:20:50Z,b362da5b5641d30eafe92f29b063a1212296f2a8,24,37,698227c9d5cf48ce5b644b17d9455cddfb6b0abb 799333343228e2a595ae97ac42a42f6402c4db34 5e53e64639752461941c4a14f14bdb8fcd5c313a ab6254e9fa454a93774b371e408676a752fbf99b be1a51f3c13d246a479543f2a6019b689ff0a4f4 d688163e4fd25418befcf5075589403e0cc4b654 932edacf3635e7c5c1f9fa3a7b71e1f8d64ba2ec 9df7edade56950069e45358b7b14e787353ab2bb a8abf7d4f9bfd09f71e3d4d9dd62f213b51da9e1 588c985df21cdda7d9650ae4fd9bd68bba25416f 4ac034fecec268a728de98016970d26af3af3702 de9ebd7b2d0975d213829bb9b8a2ffdedc69bf3a 212bec58778ed3c95f9865c72a756d166b44b098 64b4de9d054da5f72e2d8161204b6fe4a660b345 7a5a28c53e2174e3da5cb59f95ab3b2c67df9ae6 36e404eb7f72f28edacc10c22a4e7dbe29223f0a f4bb51683adb2b35db0a0c5dc4eb6aabe4ff2898 beaf64079488b03d6e6d0db41bb9b4f0723985a1 50dbde0eb930c193628563708fec7865141d98fe 780907b4e38879a9aca3468deed9307404b21e80 bc3a53d2df160a173e616e9459a806073619e09f 720a86997003c214c78bd84cd19462b573efa35a 66b3642775fc412ccbeec41ad64306b303c04c87 26bb7b36808fa873014c9a00fb479b8628f03b52 169a6030c0fa42363c441b91cdb75ae52676895e 799a49e419f7b7429308da32c4a96284269a39bc 9258efdda0e19451f471ed02b2297a1d577bdf4d a7723be3186b1658add2ba07e4d1338261a96d75 d6c17351b6de6eb7927cfe6aa7260787e1fdfdc7 6e49777c392147165b65c59647b586fc6746da28 e7671f02f8f0c48f4650378488acaca21dc7f90e e68ff84b228ca80062b9a82de2dfbf613f0e7509 dee791c1945db42cbda925c24683adce35528a81 95f0bff9350a970d3d842169e09895cd9ef71f42 f417527d871786a290ef798bf4027c49f1caf3b0 f24c317e6e7700d4df318931161618f60525ffbb 507ed154e5dbee20e46bea728782b0b6d1a20141,,Feature gds gui dashboard,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| July 16th  2020 |  |**_Submitter_**| JHDeerin |  |**_Originating Project/Creator_**| fprime |  |**_Base Branch_**| devel |  |**_Short Description_**| Adds a user-configurable dashboard to the GDS GUI |  |**_Effected Component_**| GDS GUI |  |**_Effected Architectures(s)_**| N/A |  |**_Related Issue(s)_**| N/A |  |**_Has Unit Tests (y/n)_**| n |  |**_Build Checked (y/n)_**| y |  |**_Unit Tests Run (y/n)_**| N/A |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    Adds a user-configurable dashboard to the GDS GUI  letting users customize the components they want to use via XML configuration files. Additionally  made several existing GUI components for displaying events/commands/channels more configurable through properties  and incorporated a refactor by @LeStarch to consolidate shared data and make multiple individual component instances possible.    ## Rationale    Setting up a GUI for particular tasks is useful for testing  where only a subset of events/channels/etc. are of interest and having to flip back and forth between multiple tabs quickly becomes tedious. Lettings users put all this information on a single screen is helpful for efficiency in general when working with the GDS  and tailoring displays to fit their needs is helpful for users to focus.    ## Testing Recommendations    Hand off to several team members (particularly Tim) and get their feedback on any missing/buggy/awkward functionality with the dashboard itself  as well as with the configuration XML language  that they have concerns with.    ## Future Work    - Add support for Uplink/Downlink components  - Refactor similar component functionality (e.g. near-identical behavior for `fields`/`itemsShown` on events/channels/command-history components) into shared files  - Add additional configuration options  or remove unnecessary ones  per user feedback  - Add additional useful components (e.g. 2D plotting  command sequences  etc.)
nasa/fprime,195,2020-07-20T22:43:46Z,2020-07-21T18:44:05Z,True,2020-07-21T18:44:05Z,2bc2e25237441dac26387122eb59a462a5c7a345,9,5,ace4f784839e176ecc9ec9956ea32565ae083612 e5d207e53c5af384e1fac0715275b3ef67c9b88b 4441cf8f49b7049480d288543fe0a8fe3c8ac580 28b8f7aad762ae1fbc85fb4c711e0f1b504a9d65 861d82d48886a2a4d9f23f251a74e304eedd7139,,Pylama Fixes for GDS CLI,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| July 20th  2020 |  |**_Submitter_**| JHDeerin |  |**_Originating Project/Creator_**| fprime |  |**_Base Branch_**| devel |  |**_Short Description_**| Fixes pylama warnings/errors raised for the GDS CLI code |  |**_Effected Component_**| GDS CLI |  |**_Effected Architectures(s)_**| N/A |  |**_Related Issue(s)_**| N/A |  |**_Has Unit Tests (y/n)_**| N/A |  |**_Build Checked (y/n)_**| y |  |**_Unit Tests Run (y/n)_**| y |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description    Fixes several warnings raised by the pylama linter suite with the existing GDS CLI code by removing unused modules  renaming variables  deleting unnecessary tests  and refactoring where methods were being called in `fprime_cli.py`  `base_commands.py`  and `command_send.py`. In 3 cases where the pylinter suite conflicted with other dependencies' code styles (i.e. pytest and argcomplete)  the linter's warnings were disabled in the relevant portions of the code.    Additionally  several pylama errors reported in other modules were addressed where a fix seemed clear and straightforward.    ## Rationale    Following pylama's recommendations helps keep our python codebase consistent and free from obvious errors.    ## Testing Recommendations    Re-run unit tests for the GDS CLI; continue to watch for bugs when using the CLI tool during daily use.    ## Future Work    - Continue following pylama recommendations  - Review refactor to command implementation code for maintainability concerns/points of confusion
nasa/fprime,198,2020-07-23T17:59:36Z,2020-07-28T16:09:47Z,True,2020-07-28T16:09:47Z,557b04c056c65eadd9bd13c9b10c627ed92f5eaa,2,2,7dc5b12d1a333c9370e615465614423f5ac48aeb 70560897b56dc3037dc966c99751b708b1cc8a05,,hpaulson fails all of CI if any part of script fails,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| 07-23-2020 |  |**_Submitter_**| @hunterpaulson |  |**_Originating Project/Creator_**| FPrime |  |**_Base Branch_**| devel |  |**_Short Description_**| Fails CI if one check fails |  |**_Effected Component_**| CI |  |**_Effected Architectures(s)_**| n/a |  |**_Related Issue(s)_**| n/a |  |**_Has Unit Tests (y/n)_**| y |  |**_Build Checked (y/n)_**| y |  |**_Unit Tests Run (y/n)_**| y |  |**_Documentation Included (y/n)_**| n/a |    ---  ## Change Description    ## Rationale    ## Testing Recommendations    ## Future Work
nasa/fprime,199,2020-07-23T19:37:53Z,2020-07-29T18:59:29Z,True,2020-07-29T18:59:29Z,9481bde1235a930c0b7d62cedf676691315f117e,12,4,909d934daed2999e7205eee3ab3eb8d09b7d8a34 724a553988d2c9045cafaae1bb17fa4575836fcf b12465f5df0343ace3bd9533488dabff8b0db19b 9e8c5d04c2667677cfa2e2a41bfa77ecf008d7ab,,GDS CLI Documentation,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| 7/23/2020|  |**_Submitter_**| JHDeerin|  |**_Originating Project/Creator_**| fprime|  |**_Base Branch_**| devel|  |**_Short Description_**| Adds documentation for the GDS CLI feature|  |**_Effected Component_**|  N/A|  |**_Effected Architectures(s)_**| N/A|  |**_Related Issue(s)_**|  N/A|  |**_Has Unit Tests (y/n)_**|  N/A|  |**_Build Checked (y/n)_**|  N/A|  |**_Unit Tests Run (y/n)_**|  N/A|  |**_Documentation Included (y/n)_**|  y|    ---  ## Change Description    Adds 2 files to the F' `docs` folder (1st in the general folder  2nd in `Gds/docs`):    - `GDS_CLI_USER_GUIDE.md`  which users can read to learn how to use the GDS CLI tool for themselves      - The audience here is expected to be familiar with F' in general and have a working knowledge of the GDS  but no prior experience with the GDS CLI  - `GDS_CLI_DEV_GUIDE.md`  which provides helpful information about how the GDS CLI tool is built for future developers working on it    ## Rationale    Proper documentation is critical to teaching users how to use the different parts of F'  and can be important time-savers for developers seeking to understand a system if written properly.    ## Testing Recommendations    - Read through the documents and make sure they're clear  concise  readable  and have no critical information missing. If possible  have someone unfamiliar with the GDS CLI read through this and get their feedback/confusion.  - Confirm developer documentation is actually useful; note any information you would've liked to see that's currently missing  or anything that seems like cruft  - Make sure documents (especially the User Guide) aren't unprofessional in tone  - Confirm included images are sufficiently compressed and their file sizes acceptable    ## Future Work    - Keep these documents updated with major changes to the GDS CLI  - Add troubleshooting tips to the user document as needed  - If necessary  add missing information and remove confusing/unnecessary segments
nasa/fprime,194,2020-07-18T21:55:49Z,2020-07-28T16:10:19Z,False,none,04d9e884848ebbd634176e157089395451f2b0ab,6,2,448092d24e861549f3fbc98962b1c53f152a339f 98f1e27ed7bac63eabf4fbea6e895e16efa16cb2,,lestarch fixing bugs in Gds layer,
nasa/fprime,182,2020-06-12T06:43:36Z,2020-06-16T20:45:57Z,True,2020-06-16T20:45:57Z,5e6209886ec24cfa86654c3d0c9016287d14b46a,2,1,a8caa1131bf04d17d2ad057986c0a576be4a41a3,,Update float argument handling,Fix for issue: #173     There is still a bit of an issue with validating input in the HTML browser  but it doesn't prevent sending commands....just highlights them wrong.  Will look into this next.
nasa/fprime,43,2019-05-30T23:02:37Z,2019-05-31T05:19:55Z,True,2019-05-31T05:19:54Z,b7d69d6895c75e4ceef29f4e026ea820bf8a3960,10,2,1120370ae937af9486120636467ae4985aa1b3a6 51df62236cf48755e53afbd2fbd729ace458dfc6,,lestarch adding no app cross compile runs scripts to RPI and removin ,This fixes the RPI scripts to work with the new run_deployment script. This only only adds the cross-compile scripts.
nasa/fprime,166,2020-04-08T20:21:54Z,2020-05-05T21:32:44Z,True,2020-05-05T21:32:44Z,718d6a5b873756c11c83f694a0dce6d7be8242a4,441,130,849666872269c89e4318fd926bb5b34d566c949a 29036fb00c043a494171b5aa195d305aadfdf7bb b19a5ee67a838b0b16cdbe87182f502d70bd5467 35b4baeb8d288380c29a3d3b2284368c6625e782 71f4a89e0e80054a8aedb62777f329af822b1394 17d4c5e072fc28b47549f5f739471ada165dc95f 12a3fd7cb3da2bfaf0497113181a0bc87a13d847 8e7ab6a23c40f24c4f3df5e86c83db834acbc164 9a83191f4b4611c4f2052eba16dcb4cd400e7f20 dec4229c36368825e03d8e5a23093733a530e66b c82ed1c2c0b277d115b8cc5bc3d9995899b6bfc4 5e0b856b1f08c35c074bc35f22572ee9f7df8098 b336dcd6448e6e7413e9627f68e46d2ceb2fc157 cd75695d4c70dc106702c17808aad42b4fb623fc 1145375c9104681b21be282316d473a7304ddc94 c91b9c2ad469490a6a7a626555384b1805909d11 dd6a67f874aebd35d730bd2e61ae7b9ae9dfd5a7 3a7bf0117d53c3fd5ad94b7eca51cd34a7cdbb26 113856fc18e07491a4bea72410e31b5cb3c22e82 f212fdc4766c27bc338fca6d7f1b7019d475cd34 08dc0c0a8050420ee2954600e445d5348d94da99 097d2c0372abc4b9168d128ef213f9e761e0d097 7b3515545ca50fe74689cc609754b480ab3ec317 8469299059886c938ad218e695908a2fbfd6eb98 f317125c6265bd3882973aa14d5080ccb70e2abc 03c7d156434af90070d835474cead278596eeff4 457afbb57bcb8fc63186e145029bb6b164db3c49 144d9c7d29a9a58285c0566394f2e83e9fa8040e bc4b28f7c0e4d6a5cd819b640aae607de954bbcc 5880ab6b178acd66d0e08476fd59b8530a0af058 588b130bc63099b31dfa3d40546e25550157db89 7df8d2d4f83e8f3eefcc5b0b53e75f430f9fb9a0 d2dbf7ec83bd61e2dcb5a8acc4e6ebaf4e1fb659 32825108d76fffb11cc234815d2c9764c506f80a b5bb77f047b7242981d7f38e12ab12f566a143a9 ce041e09f625dac133abe10532ec8ba27b1e3373 3eefbe3cdb3bfa32dd21baab4bf817c5fe992809 f4788d621b7a27a4b3c4ab27c9e50f988199e39c 0a8b49424785742b7867afd8341f3cb2c1086990 ec34298334d1b8080cb808c1457f505a85004fc9 8c8c88fcf0b1495b10a02f7d59f4277c4c1c2cfd 05b213b1025c7ead0740f862d24cf65fc028eefb 05fff3724004bf3387d3d3dbeee751c18f63607e 73799d327e09b75073ce2d7a0964fd893708b9a9 bf1db59c78a43ecadcba2eafe56769f5595645d8 3c8fe23c01ed70b66faabc3e8e482526a9dfa0cf cd750cef15c70000b160526b84821030328ebac8 0bd92223e49734efb3680ad09491c78efe7dd083 f61691e974d59f68f2ad060dd358eee4d1247b95 4c37785da51af6a4b9027a238f24099a8c3ae47d 39d6ebc845a8be947018527f231a084ec4edfd57 a31e105625a82aa855a887bb38234e12b5b7a8e7 5bfe5d3fa12011306f2787826e3a1241eebacc75 418e3587418abc8d19071e8529fd15c5a7c83ac1 ceb3abc42ce4c5c847d5a8ed264968e77d9727dc 0ef93cc17701532f96caa5214a486718a7046c8e 7a7ba5158d2575c1ee2d79e19660f933d7d5e985 a98bf5feb67993264ec17c64463295091bbc8e77 acf884eb4a70b4e3669d0e145dfe613c608655ee f5fd61149778d68f66d1e9639a1ac8ce6c5249e3 f7f03b3b95a89c90d63ee6d3dc8d3bab152c4210 31a7f1f9aa82b2d66d6413423c29dffa9304da3a 73cd277cc02a0e2f0e53573281cea0505b99df1d 7f90f7705bcd24b6c571dc99196788044097ce7b f2d500f62eaa41911d52ff91aec19c2527daa5b4 ebd923ef1f89d9833f6d2182d0b96b9ff91bc3b1 ac303975f75f2cfa2f8a60cf07dacf0eaf514e27 2305d1b09af2309d1216b16b7d764bfb5d8eeb5d aa27c8fcd48760ef246614a1778849309f90808a 119c1458fd03b32914a0b22efb31934c91f404a7 6a717cece150cdb454071487eeb3969cdd211bb0 87155169cad18c3ed79a9a1d2d5548e6c4ddee7f a92cf533a8375a8b21197313e7aa21c797c5923f 543f2303f47dbc350ab3a6dd8439da440a78c4f2 ca24980477f3af1111a8546c1fe27262e76f97e1 fa099cf71ddae639444eded155c888102edb83a3 774b5242bfdd0e89aef607175050c6fa7c453134 208fe6ed090eae077406624e823908b32836a8f5 01f5ee6ab2aca384608d98e085dbf29c3d6a9682 fa53aa1eecec7f9bb498772ce7120b2152838e07 21cc33227b34fa7716cea55e896783bba75dc97d d78570d66008e5278f218b69c6a81c7eb124964a 5fd3749c2bb74750edf4f7afd22f732a83a09475 08d4611d4373225bf1437a7eca9e72ebaa54c603 da5bfe6527606f821a5ec5a67391612b50ba40f2 83e218ab42ae9719d26f251bffa548941c48f6bb d0babf4f8a49486947874f34620225e355444216 c81553068a32926f93fb89d46c87ccb1c8408786 907193340b3a9b13d3f8dfe2f73ac74d7432943e 33377bbfb896b55e890be8afba68058a151ef60c b88f97d5e850472fe235ec9cc48c277cc7a23e63 b5893bc9147ed78b25e22d1ddcd369ec8e97c269 ae9476011b5c205a20576db58499b37d6f4209ff 47e1656c90aa91046a8758972c1951b8daa5db03 ae406535da2f0388c0d074b5bb3a08eaabe1e3d8 57c6448efa17702d82829cd322c15b9f580f2cfa 3dd9ac98f9679283de52d99cc2e5a23fff1c27f6 61183fc9d0e27d7e6f2566e31341f0f582b3c517 639c52311210dd2478cf8089e7e2d2998ed596aa 90b7d4df5a6f15a7af266ca9bffe4963f57ca9ad 2d860a8990b2d0ad1812671e2e502d3364d507e0 32c37e302d7cdffa313da17fd3fb33f39027f8a2 95fe2afb320083a9ccb75cca0ed5367958f0f63f ec8c93921b9b6fbbc9027a3f1f417520fa97cc09 fb5ede94db6bc0f16e3be0b48d800b49ae5e8416 26d04d413dbbdf1afc71be3674d9cbd8336b4e30 7848e3b777b5231a2aa0ec459c8365ad7f8393ca 84ea3dfcdbd03d6435832d51c0f6c1ed299fafd8 97e26db5c950aa88824eae2d453fee91ffea5454 2dde68086dcd2020fd7884a64f48f5bb42d4c2df 8f8897c374e8f3da24eec3e13b254866f65859f5 8ede0ebc6995fb21bb9d21201d4a0b59e50e8be5 91a54292e39ea12efd37869f2c52a080ba1bbe4a 405bc9d4e40c24f1a572acb637f242c52a3cc169 e326382ba2d3d0e3f965a9c0984ff9ade0ed404a 7b979681b32ba43c3ec6b7b87287a21c650a8ebb 3af7756879f648bdaa07463726d67e540e1d67a7 679c2854ea3def8aede4af8e01afb82f5fd11c7f bf4211748b34a910d0d3f4aca00a6116b25edb93 e57c0ef89fa1cd877f9cdba46bdd4e7a455184fb 595effa66c261ec57e45cb43d5de3ecdce31ef85 8e19ffb1a64d1d41352eabcd6efb89bc841086d5 352c59773ed57e378672e94376d615f352875740 305a4638c7526995ecc27ad7831c547fb258b214 09ad97704a6dcd5b5895b1b592e07db9c4ab7585 a14f0641cebc3db496ab5c65743f4414c2ea2e8e 0ec6c69553accc1d6d860cdfbe15b260336e04ed 40b6152d11c92fef72b91416b328b961b032de9f e6ff61a4c5ace061b6da6d21f88669bd0be6f274 9415b229698d1807d08efc0ff3f7f292683ea428,,lestarch release 1 4 prep,This PR brings in changes for release 1.4.  It acts as the initial export of the code.
nasa/fprime,164,2020-03-27T22:00:18Z,2020-04-03T22:40:45Z,True,2020-04-03T22:40:44Z,d6b640839f12526b39ea5b3b931272b48a4c6e9b,3,1,a1de4527a816a6e6d28dd5a94af8c1c885e4ee26,,lestarch baremetal compilation fixes,This corrects the setting of the FW_BAREMETAL_SCHEDULER flag.  @SterlingPeet this is the fix is suggested.    For those following the Teensyduino toolchain  you'll need to add `<DEFINES>` to your toolchain file as seen here: https://github.com/LeStarch/fprime/commit/46f756594f1e3ac71b2bf9602d7a0841dbc32fb5
nasa/fprime,161,2020-03-09T21:25:08Z,2020-03-09T22:35:11Z,True,2020-03-09T22:35:11Z,b32bb366bd259e13b55334d30b7420d9534fceeb,1,1,c23f2494cd8c8b277aa2db97bd6ad2d35d278568,,lestarch fixing bad error message Fixes nasa fprime 74,
nasa/fprime,152,2020-03-03T23:13:19Z,2020-03-03T23:29:29Z,True,2020-03-03T23:29:29Z,c627bef86bc9b162f36ce9b1280e278fd53c2b5b,5,2,bbc6011b9efed6eb41f0b96c9b2a0b177ef8e045 b2a0c31eb8573c98e2222cec09435e70b4dc15f2,,lestarch formalizing Python 3 5 support Other versions are end of life resolves nasa fprime 103,This moves our requirement to Python 3.5+.  This is consistent with Python's end-of-lifed packages.    See: https://devguide.python.org/#status-of-python-branches
nasa/fprime,151,2020-03-03T22:46:18Z,2020-03-03T23:26:48Z,True,2020-03-03T23:26:48Z,3d21e72acb03a752864623465ba0b683bbd516d4,2,1,a4fce35ae4cd323a2e291e76950df4e1629cf0a4,,lestarch adding ini dependency to autocode calls fixes nasa fprime 71,
nasa/fprime,129,2020-01-23T22:43:18Z,2020-01-23T23:49:54Z,True,2020-01-23T23:49:54Z,9faae7daaba154896756ed5fdabb7d68beca27ec,15,16,30e1271c6fb6248bfa19efa1603c7a7e6ac54dfb fba02c4ce7b2005d2ae796c5477a49219e96020c 3fdd8eb6fbb61ffa9b21ab8cb52fa591f3580fb6 ea0254dadd427c42191d4236f4f877b6ce72b27c b415e3c04ebfd8242c11f1d39870a66a052eb94d 723e3c5ef289437dc241526f6b82bf09cdb49c24 4ca32e4cde6f225b9591d8b92c828de205ce026b 67bfa4ad3410fd59b985860b4e1fe246f9b038d8 50a0cd579d32a337b033ab3d2ae7a97c0a116915 8dc2f21b9827c635c396168bbe186c3e03ddfc82 9c498b69a31872d7a20a906d45e5013ed1d1a30a 191e73be68cae4d728daded2f9fe9dccf5b8d7be dff00357a987ada1c26f6963ee53a365054c70f2 5544b5d67e451a194607eacc509485c0c34d4eb4 a7d83f4433fdaa4ee98d7a92c7665a696e809c09 858ba38b03f974fee250033f959a38109e4da2f3,,lestarch better webpage,Updates the webpage and links.
nasa/fprime,119,2019-12-30T23:59:41Z,2019-12-31T01:06:48Z,True,2019-12-31T01:06:48Z,94d96597cb1f7786847a39c66d062bc5c48a3339,2,3,e49108e91a5df6c7ec0bdb712903d344d9efd3c4 27c0d8a39ea7f76c80d384be18780ae179dbe017 4a151bb056f595a0db63f8bfe1e5dbf2481dd828,,lestarch fixing several bugs with fprime util ,This fixes several minor bugs in the `fprime-util`. This includes the following bugs:    1. Cleaning up error when an invalid Toolchain is used  2. Fixing the ability to supply a non-CWD directory to `generate`  3. Better error printing from CMake.
nasa/fprime,174,2020-05-26T17:00:39Z,2020-05-26T17:11:30Z,True,2020-05-26T17:11:30Z,92632ef6cef52359e8dc5862cbbcc5a836dd1b69,1,1,93a15e89cc28648affbd9fb1c84dc83a2d955346,,lestarch fixing wrong file names in math tutorial,
nasa/fprime,178,2020-06-04T20:47:30Z,2020-06-09T03:10:37Z,True,2020-06-09T03:10:37Z,a47bbb781218cbec0cbbd3553f15692dbad483ba,45,21,f28c92e31d58e7e44bff09ad57d574ca5d5e91c7 dde31ce24da3818496f458060acd9df6886e31ea a36fd700aeba9e22b75f8c4cd79605d5c85001b6 b6c9dfd735ea910ee8fa61446a5ad1243f5e6c32 1d60d08b0ddee91ded71faa9c26ef0774b0902e6 926c219e151ee04f340241a85e0ee00513036d66 36a343d90260af63d4f078841f483ca345e5d0f1 828786df8fe4c3b5938463b1be69c43addc329ac 8f939eba21a18b5c2b276c1fcbb9bf02e215a873 457eddaff120f15a8ee9a9847516e9f8850b34b0 83b090676f723040983229cc72472cf55312285f e59f6deae83bdef67851048942faa4978ed1632a 0c890c1e11ac1f255a3c742dc6d10a4f1699fec5 dc184d9d1257de685db5b90fd66c6d7b911560a8 5db58a9af966207296f268c4d76cc8b38776dfb5 a4fc39c4658eab232d8dc527868e05b894f1ea7b 78cab8f25143fbdb59b7a94525717eea9f1c9a19 070a44b9e99695bd9000a611bf73f7a8f49362c5 618cd0398dd76954a6a4c7adad180d8be6a85ae3 648c5bf2a08fde512829c228ed142cc15bf71207 d8a2b7781a08b56b55786b37c87f9717db860d1e,,Fixes in preparation for release 1 4 1,
nasa/fprime,202,2020-08-06T16:43:43Z,2020-08-06T16:53:53Z,False,none,920da3c10f50715527c7902612cb91f7e118f9b2,1,3,a5812ffa503acbba44b14fa432d24288934c8686 d25f7336915d03a0f7d8f68d145b597aa3b453fe 28979340c26ac1018a36789c67d17952429d5bb8,,Docker update,Allows docker to begin with the fprime-venv launched.  fprime-util displays the expected message and in opt/fprime/Ref the generate and build commands can be run.  
nasa/fprime,203,2020-08-06T17:26:33Z,2020-08-06T21:20:07Z,True,2020-08-06T21:20:07Z,dee24b0970ebb091117a44da4898764b7785ee63,2,6,a5812ffa503acbba44b14fa432d24288934c8686 d25f7336915d03a0f7d8f68d145b597aa3b453fe 28979340c26ac1018a36789c67d17952429d5bb8 725cec66e2d93d1bdae1cf706c9eaab133638873 7935f57caa7078fc5c3a144bbf31649863d0d5b2 bbce27c3da0d85c71128811a117bb2b3c54b8089,,Docker update venv,Allows docker to begin with the fprime-venv launched. fprime-util displays the expected message and in opt/fprime/Ref the generate and build commands can be run.
nasa/fprime,196,2020-07-21T03:11:25Z,2020-07-22T20:17:42Z,True,2020-07-22T20:17:42Z,84ae6f15f9a4373a58cf5cec6d1a0d22147eb96f,1,2,7ff71be7c6faaff1db39c00ed18b77d8dad7f678 7fb1062cf428962a496315f41eccda92ebaf0ae4,,adding included enum parsing for topology dictionary,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| July 20th  2020 |  |**_Submitter_**| sommercharles |  |**_Originating Project/Creator_**| fprime |  |**_Base Branch_**| devel |  |**_Short Description_**| Adds parsing of included XML enum for topology dictionary |  |**_Effected Component_**| GDS XML Dictionary |  |**_Effected Architectures(s)_**| Linux |  |**_Related Issue(s)_**| #193 |  |**_Has Unit Tests (y/n)_**| n |  |**_Build Checked (y/n)_**| y |  |**_Unit Tests Run (y/n)_**| n |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description    This adds included XML enums (*EnumAi.xml) to be parsed and added to the enums element when generating the topology dictionary (*TopologyAppDictionary.xml).    ## Rationale    This fixes the issue where imported enums types were referenced in the topology dictionary but not described in the topology dictionary enums element  causing `Parsing error: Could not find type Namespace::enumName` when starting GDS.    ## Testing Recommendations    Should implement an enum inclusion in a tutorial or else to showcase this works.  Fprime master branch Ref project compiles and runs fine with this.    ## Future Work    Write a unit test?  Will open a new issue for non inclusion of generated autocoded enum header when importing and using an XML enum directly in a component (as opposed to through a serializable).
nasa/fprime,209,2020-09-14T19:02:15Z,2020-10-08T23:15:43Z,True,2020-10-08T23:15:43Z,0614af9bbd3866c7e6973f38ff3eca89956bd076,1,1,30c6f4f35653edf1eddc3b13948130b0329b4f57,,added none checks for finding highest ID described in,Fixes issue described in #207 
nasa/fprime,210,2020-09-16T01:40:28Z,2020-10-08T23:19:33Z,True,2020-10-08T23:19:33Z,c512c35b67a09c7d6f9911e4bf401ac141847b50,1,1,531bb74994c161ed0f620cf829450bff8d3ff6b0,,fixed key checks to reference correct dictionary,I was getting errors about command_elem being referenced before assigned. Looking at the check I think they were referencing the wrong dictionary. This fixed my errors  does this look like a good fix?
nasa/fprime,216,2020-10-22T17:57:36Z,2020-10-22T18:16:20Z,True,2020-10-22T18:16:20Z,58ed1630c77ded661bff1b56fd1685f650d41a32,4808,928,28dff6c6b5b1ab5cbb74c062f989e0be6384a86b 6762418590bcdaa2c392faf0f5943f0aa306a0c3 ae746a5ddd1b3a67663e94cae463cf03197fadf1 a6e8d869493b9e187241da5e0514f665baa0727a 84cae3647d7dd34e07759d5fea528bc09add8510 8b35d1a321e48dec0ddca5bf91c2972d281556c3 22d9ea06d573eec61678fec5ef84f911abdd64fe f9c939afbf1a7c2b0982c1eb66994fe537216974 e8c7b4341dc562d60e72e6d33f837bda26cc4ce1 025de94515a8781ec2fd9d081cea2dbe0a2b31f9 39857261932109027a05c16982495a26a76e5175 012e5f3a3314bab03fd17373cc6a1f96a4a5ac9e e860380bfe65f15b61f6177afc4a79954194bc57 ced9b067f17cdb19c697689ef03f2cde1458e647 e51aa12b2d88fa258802b3e839be6dd8b92180ea 167e0538224f009b275c1fdf6503b0002024c0f2 c140eba906335de415bd4dfc186d6d3b43e05880 61d5f5b4e33f7cdcaee8f89d31aea9e0c4c87e7b 662ac4cf00d27867dcaa138b4b4a03fae4db5e5e aa07f83ff2ed800a1cc4c4afc5189fcc46376409 b15b9bc870d3b317dc7dfa9deafdef9c70f245f3 a521fe8da784b7f998e1b85b976f40bfa0f717a6 c53f276ce289efaa9f4608d9f00710e0347b56bc 9dc7a91fbb7a7756d3de2fa268a81286042ce887 ec3e496b78ef70ccb733febee39a319de968c23b c0242c89a4486649130510bb15c52163b155a21a b4294bb3ca822e26b9d04341aef6c094ec69255f 85a7dccc7331bc792a523d79fd5089b977b22ab3 6e272f48dabb5c3788c127d6501c795c816b7558 3169d98dd0ea4a92c0ae5f09971db16dd04c5906 f8f0bc5c95eb82169bf0d139f773242122d1be4e 2b3319ae030baa82928230c9be47382d24125ff8 6dc9b3416efb9cf8d97f4704fc7dd784efe1e30d 35eda3408e350d080e53cf763d6c1ca581edb2f4 ad4300edec4b27b9d702ceb660efb968da4bfb9a 10e334b1cef32aa570f395bb44ad71a11b5005f1 1d92d3dfc90a71ab1e0068e500cf21c12fad0a82 c7a1f5b44d71dd88e38cdcea6dea2c5865bbd1b5 ca67153d3fe12869113eb170c3d0249e3b36e107 6d749dbdfc59b4075b13b96efa7ae349b6663ada e529c6054dfd705381256887295b53c65a2a8742 cb51600aa14daea7df32afbf074f668bd84dea04 8a446aad5e0d51b1ea2b90c7087182dd4e06184c c4d994364682c0625ec26e21797c1eafb3f8524a dd7a9a26f3996d9e96adf55f026f6deb0e9abbad e8e881923ba980bdc6571099ce5f8e2b0acf97c0 f41b4fef4cacc7d2af6cad5179a13b677c119ca7 f01f4f2073c3f0a6f40c5a6a985735c75afa68f1 7b53e9669c2a140a3bbc9ca1603301bfa218d4a5 928b1272f3f128568cdd904c74b8d40dc6ea0eff 3ad704ddc616784e132f90501604976950da5931 44bf81f2d820425e3022e9470ebb8073f8d35b8d 580bc73fe15880a4542d9eaabdff808c2dd22321 246d5743fa32d41b0cee3eb875448c6cf4481772 12f7a635720c53406605b2a9ea1fb509d86f1697 98e7d39802b3d03f9e7ff1de42066cba8bcd2d9c 3d6a9e8ee40c04d6bf8bc36f0559a4f396691738 9394aa2a2bc4541f45198b94938722dafcd6639e b175787830828465812d15d340153ac4a51f74c4 7a654fc7afb05839af129e95cec877e1af541589 b9675055f43f7ff38d20474afba37d4c85368263 73e1a7670cdccd95afc9f8dcc4725fc29749a1ea 5fadb790b2e1b7b507d28f8dbe317eb8f43ed12b 0cd944575a765f25ef4384d74120a82ac6fe0fcc 0d3e15352742d56e464e459fc117aaa048d7c3e8 367d95584f581ac02cd5ad223302dde069c3cd97 890cf27c92b4f07301fd3bb2ddca2286cd525b54 87e517b1dc681fdd26da63e40d8d36d6de93e871 30c6f4f35653edf1eddc3b13948130b0329b4f57 003cbfd44a504369ba2baf102fd717e298c607c6 d15d860e62288e67c1ba172c74118dfdbd7a638f 531bb74994c161ed0f620cf829450bff8d3ff6b0 6db8d96078b1ee178d3a37ea11ca31cb31a4658e 29074e482784905acdac17f9e11a721943a41940 48d7be9043bd6023ae427a1699a9cf1ab5ab2ee6 b0726091f63fde3711c1635c7d80f5b3e11a603e 388e5a4537833e6d08882a76e88a764e8ea707f7 dcdfa283f7fdede83b7c28e3879ce7ee7b87f724 35177027876182d167b34fc13817617ee35540ff bbf6c6489869f6f3d62aa2d914f898b89c3bb6c7 0070992d81656b8b83edcd0f2a707f023bfe58b1 28adfa37fadbc3cc5d2e4b12fbac0bee18634754 8780e9d8a8e004c3a6cbfbaa3abec5d93d94bd3a 201af67aeabf1a1dafe791b977bb9ff4f4a4bda4 c72e061d957a79aebee98bcfce087c6b37f292a8 dcc0316b25cc565cd99db68d8eba920840a35387 eb83a43d41dea873adb09fe7b6e4a0086f1d70c7 800bd57c3fadfb4111c4e9bac6ff7d63086e1dd1 e2b3fa356cdeb7dd94b7c34fdcb44f254bb8bc56 516adb89940556bc940a0f47e066ae496f6c0d17 dca24aea44b719e08a746f87e7571531e12fc070 a00f7fdff3f26ec8a89706a80a67f00df02fa275 cce9dcc9c21325376442ae52ac55e7eda1b55eab 0d9d34aba87bb245c467d2be98e0d27eae14106e 3d49cde96ee5c198e04dd0d9e708b22919d1adf5 3244099405aa993f996a839cf3fd7e04303588b3 51157a0562be2fc3082292cf6d2c03deecb4b825 fe49e309985fd22933bfd89ccea3e4732c89ceff b0e0ab52532e1565b9b70315b12f5821d95d0015 79201affa8768c1a6b632594bfb83d9d02c4d49f d04867170ea8141ea4b2d24fb5e7f80009564782 1f93e3e9ccc99c505dcda63158a5f1ea9d18724e 6d1f724bb9ecd6cf1c77999c0233e72cef10807a c1c2f47f5537d2f8009c0243066d1198ac6c5d77 3c75a4e0e2e96e43219f6c0435aea9896738c25f 7c6b7347e92aa56d0d00a10a27bccbafde3f721c 2c62547d0707029c46649471e435b5711cd150a0 4b9461c057c6afec24ffce14e0f77a1aa01169a1 82c54cc613fc077ba9a83d08d046656a7b081c90 0bfd091330bd83407138acb0d1e221ac48dc1d0d 6ff9e59fe82c16b8978f1a073f255adb4c4b14dc 81500354b5e41b7796142d2c2b8202b80cfa24a6 02e2b9dfa7294c68e1edc82c7061ddd0acc46415 90b4c3f9a56975271a3eff9027a0a4e13f2e5f3e 9e3c761c9c71512099c46eb86b45e60efc891c85 071a2341fc2496454b84db17285b4b3b79e49245 bac0f7d3b022e0454124aa839486f91f77494b2f 87388ebb0534609a114861f802e11b2a52817072 30a8ef19bea625cc737c2c11b796b87ad69e3f83 12c78605d81b530eff3ae469e2abe100227a27e8 5640b8d24a931e8876b97a4ac379e63c893589e4 28109ae1fec584f8804ca4f6130a55a7d9c8e72a 8c80efd6efcfbbc8f132fb326913d63a6f40490c 01841c2438605dd844f9d4c1b2d43543a10c33a2 066e66f177b2ab1138a107ef3049f1ca679260b7 b0cc0cdcf1da1804adde7aac89c99c081dd91700 bca140506f50aca46541fe3b0fe42e0872dce6c6 43a55e1200fd2fdab074831336abe9e0e4c666c8 0ff1ce99b4798d5c66a942372b206bb0359b0163 a7aebd35310575b5c087778f93704b827b046f4a 2fc972a39bb35156e7f929a7fbeabdd327d14609 72c89245a63d360917f0798aaab2ab2e221b8a4f 3afc9acc7759635e00bb44c62d45e5495bbe2486 b3c95819edecae459480e10d8c91582dcc5a60e6 ff9a0bda7d7217b1849cef81274d867948515be9 3749ddcc618c62e01bc06071bd13a728fde3316d 2b5481b2a02b28f649b4cfc487f44d9d8a85ac17 0488863429c4689b769f25795b184542d2eeaf9d f747af8a782224796fe1df284af54d7becf7d391 bab3fd6ffd28d174376d6acd21e27c550f207d80 d5c3cbf6c25e4cf9567c2c82a30fb40cb8fe11c6 d0d241ebc858284e388451c12882cd865085d159 7cd0f1be867e8ec07e7b4d3f07da460b98f7b606 705968a4998584a6e824d3d6f37b13ce54cc7f45 1587202f0354012fba65e3ed624139d1663f8c20 4d8ed1cbab5cbf77dc369203bcb9e9df588f0a23 e4c11631790aa80767c528195b34132a2e828b2a 21f1ef3bab3092fc108f5b0bbf4e9d508f3cb614 5505268b600d38a75616b0b1bf44be2d09a313a2 e0168eed387e90f2d1ec0613be845b6d3845346a 53ea47fa5489c033f8759b9f14ea4bf3b0cbef89 f3749c502e5f3ed63464440bc0a383b0975f6e8d 13542cd6d99dbd62de0c1ba8e2d4b088626d9d8b 283f16467a48a15f14d40758c4fb0d6cdf414df5 a67206f9884bc5cac22623a4f50ac472b4c1087d 8eea39a429e4f9324ef58dd70d26cf8fabcceed8 ee3d659e2865aca215422cc5c03fe0e69dcdaed1 4506f4c90710d197de489bf82a87d11ec1d63eff 647a32250dc61c2ebe08ddce37f56374d69ad6a7 074dde039f88561dc67707870727793e0d5214cd 98c18fdb05123be0643d58db2353a6edf94c0671 40f1fc46d25dc04c7b510fa374241c19834ea05c 3179c2d84b5461ca079183b736ba85b772837f2f 0faa1af6af78647a8649545724bcda458e0c9398 b8826ed84854f9f05ac0b477621a725075085ea4 053fe23adaad788af41d5090a5417062b9fcf17c 04971a5ad01b90a8bedf2daa23fbad9a185d8102 b20b462a20f4b3f60f5432b17365ba4acab49c69 81cf15a1a31081a3cc80cd45d154a274284bc609 e23a5994b9f27b8e0ae06b56591e913253555191 4a64181d5d5c5592ba3f6a010241ab2f308f9f46 0973987c4f2a7f9a8eac03b3dbb2b9ccec8c7525 d35f04867aa27d11303ae0424cb596a0d1448b05 f0511eff14dbcaf46ae6b26498af1574ea6ecfc8 b5c4711e101694f3679e3387639e9dd1d92cb887 8a3a100cf37c314047c533f194a4fedfd46f5964 ac869669fce8f114bb9a47ef0113c9d297e7eff6 43afee9b3ea623ed84d276e9aa73872d75e736f5 44f66a9b44e1b084050345393aab032e024763db 7f623192447a8a5c1bf62eb61c44999d91fea0f8 8d1a01b99c371d445ea511b1d886a2bf342ac53f 9ddd31775b529f9658565b420c0c7068af9f8b46 d7d47f9b044dd5f8c8ade18f6a4c178c38f9e7a7 705d7a8a22c3b07078aebe8ec3d329bc70b329c2 369affff1d6b930f9c99c7b298780a99de3fdb56 fceb565a0fd4d303b44c3a40a577538e09d4106f 431f979062a47a14c39b1372a643c7b196200923 ece01ba1c733b849675fba7f6024fdaef3ea61d7 994ea31dd3e71f273838adefe0bee31c59bddf3c 3cccd731d914886a7f9ed2f56541c94987bc8a49 1edf6f0352774aa87b765bd67835dcaf6e9e0847 7f795b64dda37873cd0e373b357d347fb8407d1f 4b91d36643f0619324878d21a7a695b6b1ef1ae2 9b38163198f28d935e6a5008d25c89557c99563a f25d83561eb28bb09640d0a2b26314e734708261 eddc97d74f6e3f76ff9631961b9e82b598bbc346 1c4e2d2d1764c95fe0366239dad671ce21f9fcfa 7042b38ef578fe96e30fff9ccdde000fdea334b2 0614af9bbd3866c7e6973f38ff3eca89956bd076 c512c35b67a09c7d6f9911e4bf401ac141847b50 9f4da01e7d4fe06352d7a161578252167c4c7070 3403bc3504306d21c639b4ce295af4850fdd0115 8bf9f2fff5df20981c7c3f6c50d8c48ea91e5240 a2c44a479f179d71d4de4782422f10c9f3e9ffc3 0c0ffd4e0c79dcf3d9703ded1a313c4ea88e0453 7680602c10f709df4002b971f9d62ae739c71aa6 2d5d68f664b15dd726b0e1c8a8cf21dfbe4619d6 98e0148d4a9302234b17ed0befe29816fd8d9f53 5e02fe7ec4586ddd27231ea50767d8cf7ee35b07 7361a835ee4e363e71ced30e47481f99154bcdd0 a02620ae141d3ca7d4d935a92e049668273d3173 f9dc77406e147529ba44bfcd6b7966cd7728d01e 725abcddc61584d49ad9c9f477ea4b5999fc358f 95e6990c4f87b11044a7b60e52378bf6e1ee7650 36a8df689a7ac22c98d166a168d7c1fe1c650ae8 b9edf4c68686edb2e69c3f735740d38abe412063 3cbcf8ed6999d328440c5811afc5772269954360 5a0b69574a318601ccf1008db6dfb08c98677f5c 94f5cbc18f8009cee439e4511dbb9b0766479c3f 3fb8ca134403418d7ff73f4ecb1beb4b07a164a3 01dd99f1d01fff35d310629fac5c0df13d79a361 3300e68f160e98eab801b63acf7f9a956c6b0555 8948359beb34f93945d91a1eaafc43a688077c14 7ac1c6d5d398eab41524486bc0fd89af9fda2149 67dad6144304f939b8cf27ba9a3087f109b10b1f 92df0828978ebd0b0b0601b3d9844353886e4c82 d8372ad574b0214ba6b83be0fc12b63bdbef1a11 a4adc3174468425a7f44986f49d60df07bc9cee8 b2371918127c4737e54cb5c36a5cb247e1955d30 3ea3800f6991a7bc83c1b659d8884058a666dd71 9a64ceb0cd5aa284a7d3a59aa9dc719b82943e62 8f1204ac679c8392e85e2c6d22596e067cbcfa74 83c98be48b41d7f628c7c4ade1f1470e7825e0e5 26bf870cee93bb9699cb81be1f379efc0ff4f0fc ba7d9b14b282e93a69f82624efe1bc5a681899ba 32969bb5ee6cee3535b1c205bec52b0731836eb7 322a96afb01f992fb176b422b872d596f4995c92 d80acdc901b2386a1ce4525751580d16583a116b 88ca34ec9dcb8a5db8460198f278cfc0897c37c9 7128610df67bc00ad0515e725a3b3a744173d898 d41eea28a0803fd04af9099f98e6b8e24716abeb 20fc0590515226ada08eb6cb641f0164ad1677af 43121102ef5f7db401ee8b6c9847ce36b0b97513 ff6df5e0643d1a9689b8f88dcde36f8811462be9 60d374e782c37b1fee8b30a0117083a8b02a8a52 8bed7c04e483bc1294400837048f5a6127ea731f 5f7625805b2227601818f879c6ec0bba2e5f7125 6a9beaebfa60fa65676de2502c454026c034eced 047eebb9c2da107d2ddfebbd4d332977091ae698 68fecef4f152c6de70b188863eb5e02329e3a18b,,Release 1 5 0 to master,
nasa/fprime,219,2020-10-22T20:22:02Z,2020-10-22T22:03:21Z,True,2020-10-22T22:03:21Z,8d6b2273a179de5fe1219ef368454a98b9dc0f08,2,2,94b234929aa603a3eeca9a2d8298c2ba090e9d43 6e702b31f51b8b375a2f3d2e4049ee6109af6222,,lestarch hotfix 1 5 1 PR,
nasa/fprime,214,2020-10-21T04:57:06Z,2020-10-23T05:07:36Z,False,none,650f3c70dc4fac2c2ce2b2a6f203f95a0259679d,1,1,088d8dc072668e8325e23c262d2b025c7bbc2f6a,,Allow GroundInterface and QueuedComponentBase to work with FW_OBJECT_NAMES disabled,There are currently a couple of issues which cause F Prime to not compile when FW_OBJECT_NAMES is disabled. I have patched 2 issues below.    GroundInterfaceComponent currently has a malformed constructor definition when FW_OBJECT_NAMES is disabled. The first commit patches this issue.    QueuedComponentBase tries to call `Os::Queue::getNumQueues()` without using an object  which is not allowed and leads to this error:    >error: cannot call member function 'NATIVE_INT_TYPE Os::Queue::getNumQueues()' without object    The second commit fixes this issue by calling `getNumQueues()` via the `m_queue` object.
nasa/fprime,223,2020-10-25T00:02:07Z,2020-10-26T16:29:29Z,True,2020-10-26T16:29:29Z,5193495087e5c6afb69a636b725c8734c8c8704c,1,3,58ed1630c77ded661bff1b56fd1685f650d41a32 8d6b2273a179de5fe1219ef368454a98b9dc0f08 2486d3d309e860566ebb7dab9ba1800fb954c5ff,,Regex correction,Changed regex pattern in fprime build utility file
nasa/fprime,224,2020-10-26T16:30:09Z,2020-10-26T17:52:12Z,True,2020-10-26T17:52:12Z,820e4350711f15973961a177ea10230cebc06c6d,1,2,2486d3d309e860566ebb7dab9ba1800fb954c5ff 5193495087e5c6afb69a636b725c8734c8c8704c,,Hotfix 1 5 2 Fixes CMake D argument pass through for paths,
nasa/fprime,225,2020-10-26T17:58:41Z,2020-10-26T18:35:32Z,True,2020-10-26T18:35:32Z,ff3c3886a5aaa5e3b0530036e01ae4df10cb6c8a,1,1,ac1f70ffad2b1cd6e05a24abc3d921a06ec54a9d,,lestarch bumping python package version,The Fw python package was edited for this hotfix  so the version needs to be updated.
nasa/fprime,226,2020-10-26T18:35:52Z,2020-10-26T20:37:57Z,True,2020-10-26T20:37:57Z,dfd74ee63f5395d6e3f33fb9d87097d19ae47539,1,2,ac1f70ffad2b1cd6e05a24abc3d921a06ec54a9d ff3c3886a5aaa5e3b0530036e01ae4df10cb6c8a,,Devel,
nasa/fprime,228,2020-10-27T00:23:40Z,2020-10-27T00:47:59Z,True,2020-10-27T00:47:59Z,b5d7367ffbebc777ae7df2524aa64e5778fecbb6,1,2,57f56f34cbf92fd831d7a284de7eb78033c9930d c1b8cf7c2d49375be32d0de64c5f972ba37af20e,,Devel,
nasa/fprime,232,2020-11-05T17:48:27Z,2020-11-05T18:08:30Z,True,2020-11-05T18:08:30Z,b905cddff759d6661e55cbfb4261efc5adc4a8b2,1,4,820e4350711f15973961a177ea10230cebc06c6d dfd74ee63f5395d6e3f33fb9d87097d19ae47539 b5d7367ffbebc777ae7df2524aa64e5778fecbb6 927fc1f8601bf5d3e5a98085bcd079e2094078ad,,Strict aliasing issue,Reverting these lines of code to the NASA-v1.3.1 version. The NASA-v1.5.2 version generates strict-aliasing issues when compiling.
nasa/fprime,234,2020-11-05T18:46:25Z,2020-11-06T20:54:12Z,True,2020-11-06T20:54:11Z,9bf02f0badb87d21ff849ea5b456145a68fc4605,3,4,0940abaa536b24f8f7e4199e5014222ae90b7541 e0e96cc594e99f6c650aedd57c69dfb9d05551bc dedce164f7f16d6c7f5d6e846f246e42dddadf7f 8e5fd5a7096ba9d54a05e077374871ffeef83241,,Master,Pulling in 1.5.3 changes.
nasa/fprime,244,2020-11-11T00:13:51Z,2020-11-11T16:39:53Z,True,2020-11-11T16:39:53Z,2ff8b10c055fed997d1766e773de069852e273a5,4,1,fdcfa13a57d5f6a8890cd8798025f609079a321c,bug,Fix unit test autocode for serial ports,Autocoder was skipping generating TestBase code for output serial ports  if there were not other typed output ports.    Also renables test that was broken due to this bug.
nasa/fprime,242,2020-11-10T01:47:31Z,2020-11-12T17:12:09Z,True,2020-11-12T17:12:09Z,85cdb255e4214e4901a00dd1d461aec57eb1f4da,27,1,20b5f2950c5f264a1be3d47e0e94a69518d7aeca,,Packaged build artifacts into artifacts directory,Currently  `fprime-util install` installs files into a variety of different  locations  which makes it difficult to archive all the build artifacts.    Now  `fprime-util install` has been removed and `fprime-util build`  automatically ensures all build artifacts are installed into the location  provided by the `install_dest` settings option  which defaults to `build-artifacts`.    It has the following structure:    - <PLATFORM>/bin: deployment binaries  - <PLATFORM>/lib/static: deployment static libraries  - <PLATFORM>/dict: command dictionary  autogenerated html command     channel  and event documentation    The GDS has also been updated to automatically use the settings.ini file to look  into the artifacts directory to find the deployment application and dictionary.    Resolves #236
nasa/fprime,246,2020-11-12T02:17:41Z,2020-11-12T17:12:36Z,True,2020-11-12T17:12:35Z,fb1777c0e7f9078a1dd88224ae42a29f6ce03fd3,3,1,a66a8268c452ba585534fd40224d32dd31af6283,,Update fprime configuration documentation,Resolves #230
nasa/fprime,248,2020-11-13T00:58:31Z,2020-11-13T01:24:06Z,True,2020-11-13T01:24:06Z,8693a16aedf2abedb79509dbbca1d24733746a0e,1,1,761e3337f6c4d0de602ad4d6c1a28df29237e1b9,,mstarch repairing LGTM configuration,This moves just the LGTM fix to master such that the C++ build is reworked.
nasa/fprime,256,2020-11-15T04:31:26Z,2020-11-15T04:34:38Z,False,none,29eae884521e1dfc97e764bdbfc0ace022e46e4c,1,1,0d6a58d502e274f44935599d3b165f1ec4544dbd,,incorrect MR 1,`$(nproc || printf '%s\n' 1)"` will return total number of cpu thread(s) if it returns `0` else `1`.
nasa/fprime,257,2020-11-15T04:36:59Z,2020-11-15T04:43:59Z,False,none,2068249652669a7755f76e8f2264e7212c614008,1,1,1bb68a717f9119de50aac37e9766aa75e45bcaf6,,incorrect MR 2,`"$(nproc || printf '%s\n' 1)"` will return total number of cpu thread(s) if it returns `0` else `1`.
nasa/fprime,253,2020-11-13T22:13:30Z,2020-11-16T18:34:29Z,False,none,968ee6564ae4958985b8f555c7afd75f13803c18,2,1,86d19d5da90ff16e61fd18ffea533ab35cad0134,,Create module source and dependency graph during generation,During cmake generation  every module will generate two file - a source file list and a dependency list.    These files can then be used by the metrics tool to generate source lines of code (SLOC) reports.    The SLOC tool will look for executable modules (denoted by ending in `_exe`). It will then start at the executable and generate a report by walking all the executables dependencies.    The tool will generate a per-module and overall SLOC report with the following data.    - Total lines of code  - Lines of xml code  - Lines of user-written C++ code (comments excluded)  - Lines of F' generated C++ code (comments excluded) (as matched by `*Ac.cpp|hpp`)  - Lines of code per file.    This needs a cmake unit test  but I wanted to get the design reviewed before writing tests.  
nasa/fprime,267,2020-11-24T19:18:31Z,2020-11-24T20:55:55Z,True,2020-11-24T20:55:55Z,b2d651f74fae90fdd8dbe6d60e35c2c532989bb0,3,1,53b9adc09f655a4c60d410387aa408da465df96a,,Remove unused autogenerated enum python classes,These were used by the GDS at one point  but now the GDS just creates  enums from the dictionary description  rather than use the autogenerated  python classes.    Resolves #240
nasa/fprime,270,2020-11-24T21:49:47Z,2020-11-25T00:38:37Z,True,2020-11-25T00:38:37Z,22a032e5f98bbe4c91a91b88ec756aa567db7588,11,1,ee27162a445aaf43ee316951ce5cffc39daa1e5b,,Fix clang compiler warnings,Fixes a variety of compiler warnings and causes running  `fprime build --all` and `fprime check --all` on macOs Catalina  to compile with the `-Wall` compiler flag added.
nasa/fprime,274,2020-11-25T21:52:48Z,2020-11-30T16:36:09Z,True,2020-11-30T16:36:09Z,1373081481b207855d586f2ed4fac696b7195264,1,2,f337ca1f6e8277e95a41f3c96c6eeae75f68471f 567e8e7e2e49840dd8be5a999b177c69be4d2444,,GDS Catch exception after failure to detect deployment,
nasa/fprime,276,2020-11-30T17:50:40Z,2020-11-30T18:43:49Z,True,2020-11-30T18:43:49Z,7adb33e732a9cb7176cb6f0add8061bc197cc108,6,1,d3810251f5494b9ca7b9a49933f674bf16055d82,,fprime util fix path argument,Because `settings.py` was explicitly using the `cwd`  setting the path manually on the command line didn't change where fprime-util looked for the framework path. 
nasa/fprime,266,2020-11-24T18:58:19Z,2020-11-30T22:27:00Z,True,2020-11-30T22:27:00Z,8e634e2b9f5f9b135bcc44f891b585360bb7a4cc,2,1,38350ca7d31b759f2d00f787081cc423466f9b5c,,Fix dictionary target dependencies,The dictonary target wasn't depending on the topology xml file   so changes to the topology weren't causing the dictionary to rebuild.    The autocoding step also generates dictionaries as a side affect of  generating the topology autocode (might be worth considering if we can  somehow combine these steps so we don't have to run the topology autocoder  twice). This could sometimes run after the dictionary generation step   leading to leftover dictionary files in the source tree. Adding a dependency  on the modules autocoded files (including the autocoded topology files)  ensures that this step always runs after the topology autocode step  and can properly clean up.
nasa/fprime,281,2020-11-30T21:37:09Z,2020-11-30T22:28:03Z,True,2020-11-30T22:28:03Z,56efe9e29aa49b93af7c787d1443982802fe00df,1,1,c81643713088461dd5537585bcbee98df706b2a0,,GDS Supply cwd when attempting to load settings ini,Fixes regression introduced in #276
nasa/fprime,286,2020-12-01T02:00:10Z,2020-12-01T02:27:58Z,True,2020-12-01T02:27:58Z,f12efa95355c47388d6026c249b57720ca13b40b,2,1,84e7d89720468d9be60a5a652aebc0c90e262b64,,mstarch adding MD discontinuation document,This fixes a request to document a starting point for MagicDraw support and note its discontinuation in the open source project.
nasa/fprime,289,2020-12-01T02:23:38Z,2020-12-01T02:27:28Z,True,2020-12-01T02:27:28Z,a0f2a1376e35b216b4f8fd7234123ee220dbfb69,1,1,ee79d7b96526db0fd7c77920403d4dd041af620b,,Update GDS readme to point to user s guide,
nasa/fprime,288,2020-12-01T02:16:52Z,2020-12-01T02:59:28Z,True,2020-12-01T02:59:28Z,1e667e215f369290fdbd85362c4d19654c6fde8f,1,1,d8bdebdbb886b234d8c6a3b20eaec80cd717987c,,mstarch fixing GDS typo,
nasa/fprime,291,2020-12-01T15:14:55Z,2020-12-01T15:15:45Z,False,none,35ef700ce5692f209ac5f7cad533bf9d02283eb6,8,5,b6be5be766a4918fea9a75b35f97236b10201551 97f4ddc2e77cc2e8feea5d6ffffd031cc611481a 3aace79bba8cbab63bb336f91fe03fb7e9062fb3 13f62cbf9f6ea64af64b642b0f895171aa0e0a0c d1d1b75f3c6c82b032592ebcf72cd1f3f94d3aaf,,Topo health,
nasa/fprime,293,2020-12-02T01:53:40Z,2020-12-02T18:09:31Z,True,2020-12-02T18:09:31Z,566ab7247417f37396cdbb51ce569e62ae479fab,3,1,788870172961e267bdbfb64a2c56335747f2a9fd,,Fix GCC Compiler Warnings,I also enable '-Wall -Werror' on the root fprime project  which is only used  by CI and fprime developers to ensure that compiler warnings aren't accidentally  introduced in the future
nasa/fprime,296,2020-12-02T21:45:51Z,2020-12-03T00:13:34Z,True,2020-12-03T00:13:34Z,b951a178385629b297335c07929e6f2fc6c8190a,1,1,8cad67492a6c05713c887d2772198adfb83b4c5d,,Fix a typo in guide,
nasa/fprime,302,2020-12-04T10:18:02Z,2020-12-07T17:46:12Z,True,2020-12-07T17:46:12Z,85ee785ffb4aa8dd50009d741cd3643443e5040e,1,1,ecdf3a1798d7be99c20684dae3e8305f8672ce37,,Bugfix GDS logging function call,  ## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**|2020.12.07 |  |**_Submitter_**|[@jonathanmichel](https://github.com/jonathanmichel) |  |**_Originating Project/Creator_**| |  |**_Base Branch_**|devel |  |**_Short Description_**| Python log format error bugfix |  |**_Affected Component_**| GDS simulator |  |**_Affected Architectures(s)_**| - |  |**_Related Issue(s)_**| - |  |**_Has Unit Tests (y/n)_**| n |  |**_Build Checked (y/n)_**| y |  |**_Unit Tests Run (y/n)_**| n |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description  Function call change to fix error when running GDS    ## Rationale  Bugfix `TypeError: %d format: a number is required  not tupple` in [Updown.py:195](https://github.com/nasa/fprime/blob/d224c98e19345a089d8503d1cbd8714ac3cd8b94/Gds/src/fprime_gds/common/communication/updown.py#L195) when uplink error printing with GDS.     ## Testing Recommendations  Start GDS without an F' application runnig and try to send a command.    ## Future Work  No future work expected based on this request.  
nasa/fprime,301,2020-12-04T02:34:03Z,2020-12-04T03:57:18Z,True,2020-12-04T03:57:18Z,d224c98e19345a089d8503d1cbd8714ac3cd8b94,1,1,d0938b4aa24303f6eba46e9c44604fbd0091e5ea,,cmake Only disable Wstringop truncation on GCC,This is a GCC only warning and it was causing Apple Clang to complain it was an unknown warning.
nasa/fprime,262,2020-11-17T00:50:59Z,2020-11-17T01:47:10Z,True,2020-11-17T01:47:10Z,6953af2aa8cc64881f31e1542f754193e0d4775f,1,1,363da95b5b6eb792617018e7910f756d0f48362e,,lestarch adding LGTM badges to the readme,
nasa/fprime,136,2020-02-06T19:12:24Z,2020-03-03T22:05:00Z,True,2020-03-03T22:05:00Z,16464d525aa3603012a181e3a74e6e44c06ed6bb,1,1,ced97f043044493ec0dedd61128a52144e926ce4,,lestarch cleaner CMake install documentation,Update to CMake install documentation.
nasa/fprime,127,2020-01-15T17:42:34Z,2020-01-21T01:59:58Z,True,2020-01-21T01:59:58Z,8bf18c13f183754c72e234e6cf4e31e3c7569bb3,1,1,a298d1875096141a14e710b5d32325bfff06596c,,lestarch autocoder requirements rewrite fixes 126,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| 2020-01-15 |  |**_Submitter_**| @LeStarch  |  |**_Originating Project/Creator_**| F´ |  |**_Base Branch_**| devel |  |**_Short Description_**| Fix #126  |  |**_Effected Component_**|AC README |  |**_Effected Architectures(s)_**|  |  |**_Related Issue(s)_**| #126  |  |**_Has Unit Tests (y/n)_**|  |  |**_Build Checked (y/n)_**|  |  |**_Unit Tests Run (y/n)_**|  |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    Fix the AC README per #126.    ## Rationale    It is currently wrong.    ## Testing Recommendations    None.    ## Future Work    None.
nasa/fprime,139,2020-02-14T17:02:33Z,2020-02-15T19:36:35Z,True,2020-02-15T19:36:35Z,fab8162d30b8b6ae142569026f2945df122c0674,1,1,f83815aa5bcbac74788844f45d046dba49ee7f1a,,lestarch this adds troublshooting to the INSTALL guide ,@timcanham what do you think of these additions?  Issues we saw from JPLers and others trying to install are now covered in this new section.    Do you think this is ok to tack-on at the end of the document?
nasa/fprime,19,2019-02-09T23:54:21Z,2019-02-09T23:54:34Z,False,none,2830bfe945292cdc6c093e93739a98347b21e6b9,9,2,1bb35071dead0567645d06970da58ddf2fe59a02 3fc8ed966cc609bc7a70d0c7a86f8b47fcdd8276,,Feature raspian cross,
nasa/fprime,20,2019-02-09T23:54:54Z,2019-02-21T00:14:52Z,True,2019-02-21T00:14:52Z,abeb741265277afa9117a90684ea2fa7c3c91a18,9,2,1bb35071dead0567645d06970da58ddf2fe59a02 3fc8ed966cc609bc7a70d0c7a86f8b47fcdd8276,,Feature raspian cross,
nasa/fprime,149,2020-02-20T22:22:17Z,2020-03-01T20:48:01Z,True,2020-03-01T20:48:01Z,2f68cd98bcee9da866176874575db483f14b0f3d,1,1,f708b19a3d53c17241e119b47386294d99d535fe,,mstarch minor clarification for GPS tutorial,This clarifies some items in the GPS tutorial.
nasa/fprime,153,2020-03-03T23:17:48Z,2020-03-03T23:30:24Z,True,2020-03-03T23:30:24Z,69c3e9a4e46c07e4aeb3168489ce7ef5abca4388,1,1,16f884c5c1ae8b768e19278b0b838a8982b7c5e7,,lestarch updating GDS README for the HTML and new wrapper,
nasa/fprime,180,2020-06-09T03:54:16Z,2020-06-17T20:33:32Z,True,2020-06-17T20:33:32Z,de2e42157067ca8043d1ce764a000fa510ca8d48,1,1,828af31aa4a5eadb491094cbd9d35d2fd2f293f5,,lestarch adding tutorial remove orphaned files,
nasa/fprime,146,2020-02-18T21:27:03Z,2020-03-03T22:03:45Z,False,none,9f1421f1584b7b6e4e9bbf4a551d4ca0fe957fff,1,2,236aaa0e142e9a18980d3b7d9a619f30c3b13ca4 3ccbd652730e7199ddcddd26a42880b0530a9a8f,,Documentation fprime util,Better FP utility docs.
nasa/fprime,304,2020-12-08T20:29:14Z,2020-12-09T18:06:56Z,True,2020-12-09T18:06:56Z,c4d06c167ee8d6464b5da20d4b58a955c2dbe5b1,5,1,24d6ab2db9fdaf38a96ae23fc7aa0651347cdc08,,Separate fprime util generate for different build types,As part of this  I got rid of the `--build-type` flag and instead had the build type default to RELEASE unless the `--ut` flag is passed  in which case the build type is set to TESTING. This should allow us to add a `--debug` flag in the future and support a DEBUG build type.    This plays a little strangely with the fprime-util cmake targets. I thought about having the cmake targets use the global build type  but ran into some obstacles:    - Most targets only make sense for a single build type. I.E. `check` will only run on TESTING build types.  - Even for targets that make sense to run in multiple build types  I.E. build  by using the global build type we lose the ability to show all the potential target configurations in `fprime-util info`. So if you listed targets you'd only see `build` and not `build` + `build --ut`.    Instead  I figured the simplest solution was to never use the global build type when building a cmake target. Instead  every cmake target has a specific build type it can run against (as opposed to a list as before). The downside of this is that we have to specifically to list every potential target and build type configuration  but due to the limited number of build types and the fact that most targets only run against a single build type I don't see this as a major obstacle.    Resolves #295
nasa/fprime,307,2020-12-09T21:06:16Z,2020-12-10T06:06:50Z,True,2020-12-10T06:06:49Z,c486a0252651f3642968eacd99dbe8ff5fbb817f,1,1,c2e875aa276b7385ea2d38c09dadb73fda90086e,,Fix fprime util info problems,- Display a warning instead of erroring if a build cache was missing.  - Rename build artifact directory to build cache to avoid confusion with build artifacts.    Resolves #305
nasa/fprime,306,2020-12-09T18:28:06Z,2020-12-10T17:47:44Z,True,2020-12-10T17:47:44Z,b1b0f306d73219017b121ea98aadebf3dce8cbfc,3,6,00e6a0c4de099cf1efaf8b585c22bf2ce6888168 c2783c4209c94b6db813dbc9b1c0ec8d8195f0fa 57b24a15d8304935cf0e80c086b97553089cc0a2 78b140fe99dce7a6ed7ba7718a0e9dd6c896122a 74329ea14b31e5a64315735330a63b5c97498e46 827bbb36574d3bdbc9354766209eac054b183449,,lestarch add in issue templates,Adds in PR/bug/feature templates for creating issues and PRs!!
nasa/fprime,313,2020-12-10T22:38:16Z,2020-12-11T01:58:02Z,True,2020-12-11T01:58:02Z,a18a2829c32e37a5b85e8501c6454fbc80f04a0b,1,1,e04d1757ae67c25c846a24f0b8c9c2965bf651a9,,Fix behavior of force flag with fprime util purge,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| fprime-util |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**| Resolves #310  |  |**_Has Unit Tests (y/n)_**| n/a |  |**_Builds Without Errors (y/n)_**| y  |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| n/a |    ---  ## Change Description    We were accidentally checking for confirmation before the force flag  so we were always  prompting for confirmation.    Thanks @jonathanmichel!    ## Rationale    Fixes `fprime-util --force`    ## Testing/Review Recommendations    N/A    ## Future Work    We should add integration tests to cover the CLI. See #311  
nasa/fprime,315,2020-12-11T00:23:53Z,2020-12-15T01:12:56Z,True,2020-12-15T01:12:55Z,a53aef1446b67062447b1bdbdb1bc8960a54210a,2,1,d296e428c0ba15c55002dd7644eb5bb777832c35,,Fix fprime util deployment flag and remove build cache flag,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| fprime-util |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**| Resolves #285 |  |**_Has Unit Tests (y/n)_**| n/a |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    - Fixes fprime-util `--deployment` flag  - Removed fprime-util `--build-cache` flag    ## Rationale    `--build-cache` is a very advanced option  users are better off using a combination of the `--deployment` and `--path` flags to automatically select a build cache instead. Users who want to use a custom build cache can directly use cmake.     ## Testing/Review Recommendations    Manually verify that the `--deployment` flag works.    ## Future Work    None  
nasa/fprime,318,2020-12-17T23:53:51Z,2020-12-21T23:00:41Z,True,2020-12-21T23:00:41Z,5e4666737fac148884b4254df91cecc32d1c6c79,16,1,3d73695493c29d780c0284c72f887f02eeeedb27,,Improve argument less port autocoder tests,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Autocoder  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y  |  |**_Builds Without Errors (y/n)_**| y  |  |**_Unit Tests Pass (y/n)_**| y  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    There's been reports of the autocoder failing to generate valid c++ for  ports without arguments. This improves the existing test case for argument-  less ports to validate that the autocoder correctly generates code for these  ports.    ## Rationale    Properly validate autocoder functionality.    ## Testing/Review Recommendations    None    ## Future Work    None
nasa/fprime,319,2020-12-21T19:59:05Z,2020-12-21T23:02:20Z,True,2020-12-21T23:02:20Z,447ccaac2153b81f87079665c25798cb8f999116,15,1,d1ae119f2126cc4e3070faf89a2541451720e23d,,Fix Autocoder UT Test Case,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Autocoder Tests  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description    This test case wasn't being run previously.  This test case uses the MathSender component to test that all the autogenerated GTest assertions work properly.    ## Rationale    I was going to add additional unit test tests to this test case  realized it was broken and fixed it up  then decided that the test cases I'm writing probably belong on their own test case so that I don't have to add unrelated functionality to the  MathSender component.    ## Testing/Review Recommendations    None    ## Future Work    None
nasa/fprime,317,2020-12-16T02:53:52Z,2020-12-22T16:15:03Z,True,2020-12-22T16:15:03Z,08b535ca79fb82e3e98802337cab5c4bd4782411,20,1,bd0da2b5d838ecb7841eb3cd23290331a15de166,,FileDownlink Add file downlink queue and SendFile port,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| FileDownlink  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y  |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y  |    ---  ## Change Description    SendFile now adds files to a file downlink queue. FileDownlink automatically pulls and downlinks files from the queue   allowing users to queue up a list of files to downlink.    A SendFile port was added  allowing components to add files to the file downlink queue. When a file downlink initated by a port completes  a notification is broadcast on the FileComplete port  allowing components to react when files they requested were downlinked.    In order to prevent a queue of files from saturating the communication link  a cooldown state was added  allowing users to specify a delay between when a file downlink completes and the next one begins.    ## Rationale    It can be useful to allow components to initiate a file downlink. Previously file downlink only supported downlinking a single file at a time. If multiple components tried to downlink files  one would get a busy error message. In order to support multiple components well  we either needed to add error and retry handling to every component enqueuing files  or allow queuing filles to filedownlink.    ## Testing/Review Recommendations    - There's no less that a half dozen string types file names go through  I'm a little concerned that the size restrictions on a particular type may cause problems.  - I only added a single new test  a test where a file is downlinked via a port  verifying that the file was transfered and a FileComplete message was sent. I feel this is sufficient  but if anybody thinks of test cases that would be valuable to cover let me know.    ## Future Work    None
nasa/fprime,324,2021-01-07T06:08:56Z,2021-01-07T18:16:52Z,True,2021-01-07T18:16:52Z,ef9c56bf7aaaa8184cc8e8006360fd2e8f251cac,1,1,eef7b30183a5b49dfba395b7941a5e89c146fdd5,,Update fprime gds option and path being used in INSTALL md,## Change Description    It's just an update to the INSTALL.md file. `fprime-gds -g html -d <path to fprime checkout>/Ref` does not work. The option -d doesn't exist  I'm currently using -r instead. Additionally  the path I've used to successfully run the gds has been <path to prime checkout>/Ref/build-artifacts.
nasa/fprime,328,2021-01-08T20:07:30Z,2021-01-08T23:10:57Z,True,2021-01-08T23:10:56Z,1bf9c2c7a6097bb29ee2fc689275d8de9526fe7f,1,1,cba8f9d5154d15fbebb9216580d4cf2673232c70,,Fix fprime util impl for components including serializables,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Autocoder |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**| Fixes #327 |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Components including serializable types would explode include paths when running 'fprime-util impl'  Since impl doesn't need include paths for serialized components  we can remove this  logic from the ComponentWriter class.    ## Rationale    This was introduced in another autocoder bugfix  #309  to fix importing components from other directories.  The ComponentVisitor was updated for this new functionality  but the ComponentWriter  a duplicated copy of  the same class wasn't updated  since it wasn't using this field. It turns out that even though the attribute wasn't  used by the ComponentWriter it was still calculated.    Instead of trying to keep the two files in sync  which is easy to forget  I think it's better to strip out unused logic  from the ComponentWriter class. In the future we should consider re-combining the visitor and writer classes.    ## Testing/Review Recommendations    1. With devel branch  run `fprime-util impl` in Ref/SignalGen and confirm an exception.  2. Re-run `fprime-util impl` with these changes in Ref/SignalGen and confirm successful template generation.    ## Future Work    A total autocoder refactor... :cry:
nasa/fprime,258,2020-11-15T04:47:10Z,2021-01-09T15:43:33Z,True,2021-01-09T15:43:33Z,c40759e00a4676d4bf2fc79f42b360a7580a9426,1,1,924ca13b36510a1321db3297c3e2b6b2ca030f96,,Replace 32 with total cpu thread s ,`"$(nproc || printf '%s\n' 1)"` will return total number of cpu thread(s) if it returns `0` else `1`.
nasa/fprime,330,2021-01-11T17:06:48Z,2021-01-11T17:59:48Z,True,2021-01-11T17:59:48Z,f4c10c6a00d8f423f54c08e9d818658184e9b1b2,2,1,698e2dd4676e4f7c4fb37e68f2c14f25e1c0c8c2,,fix Updated failing Framer UT,## Change Description    Framer component ports were renamed for consistency which caused the UT  to break. "bufferReturn" is renamed "bufferDeallocate"  "allocate" is renamed to “framedAllocate”.  Framer UT is updated now and tests pass.
nasa/fprime,326,2021-01-08T00:45:18Z,2021-01-12T21:44:14Z,True,2021-01-12T21:44:14Z,23ea27c53b4a4375a755dc7fb73012acf93828ea,4,1,4665efb407be450ecf27afe6c1c6802ebf550170,,Add FixedLengthString Fw type,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description  Added a new type to be used a a fixed length string.  The length of the string can be modified by changing the constant FW_FIXED_LENGTH_STRING_SIZE in config/FpConfig.hpp      ## Rationale  This new type was inspired by the EightyCharString but with the ability to change a single constant to change the size.  We plan to use this for file paths but can be used for other strings.    ## Testing/Review Recommendations  The code is simply a rename of the EightCharString but the only change is the size of the string is defined in a #define.    ## Future Work    None.  
nasa/fprime,333,2021-01-12T20:47:32Z,2021-01-12T21:44:46Z,True,2021-01-12T21:44:46Z,fff0fe15f0f7069cda31e1a33426f588ac017a26,2,1,95972b3c77ac1922e95d84dc8bafdf52a9618ba0,,fix Borken GroundInterface UT,## Change Description    Ports readBufferReturn  Log  LogText  Time were added to GroundInterface  causing UT to break. UT is fix and tests pass now.
nasa/fprime,334,2021-01-13T07:28:32Z,2021-01-13T16:46:28Z,True,2021-01-13T16:46:28Z,d90819bb1abeabb0043abc75e89b8fc819da00ed,4,1,02f574222a6f80275117910fa018f2ad09828965,,add Deframer UT,## Change Description    Created Deframer UT
nasa/fprime,336,2021-01-19T08:10:34Z,2021-01-19T20:12:32Z,False,none,1db0486d3e5bb30641d92f078fab01eb430917b4,1,1,190abe47521d1ae929dfabf115aa37c5980a2d3d,,update fixes 335,## Change Description    Failing issue of generate_docs.bash when generating doxygen and sphinx is resolved.     1. The script will use a temporary folder name with a prefix that is used by fprime-util build.   2. Sphinx dependency packages are checked before attempting to run sphinx.
nasa/fprime,337,2021-01-19T20:23:12Z,2021-01-19T22:01:30Z,True,2021-01-19T22:01:30Z,accf524fe6aed7cd4c189d80ae6742b8bec6ff20,2,2,13f32d1e10a7973b7c7a04b5cda7f427fbfaa4d4 ee71e271d7fa8b78b252703018650b7a9e2881aa,,update fixes 335,Failing issue of generate_docs.bash when generating doxygen and sphinx is resolved.  The script will use a temporary folder name with a prefix that is used by fprime-util build.    
nasa/fprime,338,2021-01-22T00:09:35Z,2021-01-25T21:09:02Z,True,2021-01-25T21:09:02Z,e1eafe53fb4d512549fd138d610a48c00da55e8f,38,34,0deaff45310efd402ee88b420283d50af16641e2 7889ac317c4449ea201ea3aac15c2e4b22f4641b dadbe4aaf559ee76710baaf3d0dc792093d99e12 596f2cd934590869d905921f0f2bbbe4c309b225 924ca13b36510a1321db3297c3e2b6b2ca030f96 f1d042a795d3bf30960bdac05f58bc901f94f9c0 54b01badb5086ba4d54c72285ee344a6b265e3b1 5f35e41b9e886d6bdebfbcea55444e3c9ba2ca39 a415962620b86159a5849f6dbab73de562d27512 64350f8f5dab23c42bd3e514219c9341fd94e3c8 ad1a1ad454ca0251575124181ed1bc1fe26e220b c14c5ce63129f64a7197203281f28e8eb63a2671 3996c0eac37a7e84dc5c7e3612a95fca7e7fbe28 5ea0d598e568d287be35d579dc145c3ab25f0769 1039960dad4e090921b51a9b80e340d85e32bdd9 774c55e3df739d91b8b4ca218f330bdd542f05a9 0bb750e301821e18ab587476ad7f9c4d25bff012 821102cc05c258f4aa0a6b418e6db482474473f9 1fcf1375155c7860dee32af982f2ed2c5272b84c eef7b30183a5b49dfba395b7941a5e89c146fdd5 ef9c56bf7aaaa8184cc8e8006360fd2e8f251cac cba8f9d5154d15fbebb9216580d4cf2673232c70 1bf9c2c7a6097bb29ee2fc689275d8de9526fe7f c40759e00a4676d4bf2fc79f42b360a7580a9426 8f1829a09eb7ce5722071b537d390d63ca65bf4b 70c53d2a032f1f2ecdc7ee74ff725a1dfa3bde96 da8f3518f4c483391f6f9869ff72f1089b98e629 9b07926957e00023753a258abfe390863cc0ffb9 5b37e13943b292e44a30e5610e874d68dfc2ff41 5eb8b38c8536914617f3949650bba04c88c79f44 23932f5bfe6dc8bd22a7093ad08c08d00045f657 5d80195c4aae105e7b297a17b2d783c0eb04c0e9 4a9fa7ad8ee533291632e0d9d8d1a90cfddb3474 1b5e8daf944bdadaf4059950a79dff939a8b22cc,enhancement,Update ground prototype,| | |  |:---|:---|  |**_Originating Project/Creator_**| Fprime |  |**_Affected Component_**|  BufferManager See: Svc/BufferManager/docs/sdd.md |  |**_Affected Architectures(s)_**|  All |  |**_Related Issue(s)_**| - |  |**_Has Unit Tests (y/n)_**| Y |  |**_Builds Without Errors (y/n)_**| Y |  |**_Unit Tests Pass (y/n)_**| Y  |  |**_Documentation Included (y/n)_**|  Y |    ---  ## Change Description    Reviewed and merged BufferManager update Pull request #283    ## Rationale    See https://github.com/nasa/fprime/pull/283#issue-529887123    ## Testing/Review Recommendations    All BufferManager UT tests passed. CodeSonar static code analyzer was run and no significant issue was found in BufferManger impl. code.    ## Future Work    The following is list of discussions  and issue comments for future work  https://github.com/nasa/fprime/pull/283#discussion_r533802384  https://github.com/nasa/fprime/pull/283#discussion_r533862652  https://github.com/nasa/fprime/pull/283#pullrequestreview-542474363  https://github.com/nasa/fprime/pull/283#issuecomment-737471143    
nasa/fprime,345,2021-01-30T09:58:20Z,2021-02-01T17:42:22Z,True,2021-02-01T17:42:22Z,97883e50982a1275383a721f6c8a1c4c2aa1433e,29,21,e43e0b374692084979c44585e1b94ab0c454373f bd329272b1b0d6c9392e3b152ad0d74d34e0b25a 8cbc53654c5c5c6d22561eccf30b3ceea95cd537 c21b5c3d507cfac07cb3abe17c31e3cc765875ce aa06503fcf6a2b60e701b20cb5fd73864d49800d eb8f8442ebf9d56f295eadea8d200519a358e718 dadd119b09b5efe3b33025033ab637a6ca10d48d b913a575d1dcb314f441fdd9c394a475e61c3094 8bed570010f4448d0051d6c1f28d7bbe2929d0c9 47e468a0c27c949fab83c7f6f1d8dfb2a78da0b2 1b7ce886e090d8bc3d0e62b8d82c2a2d72ad15fb fa69f7d9559586d3fd909a523c54574b24025482 75b20391f4201e6241f42c119daf4eee990eac3a f876506f4a6f31c41aecedde7c00a8970c69551e 6206adda7163c1b074f15002b3e7643a175e66f1 564121ed76078f3685f188c9b9ca5da6383e97d6 9510b8040ad6a6dc620052566ac331c3fa2748ac 84db7d085481d85de3cc47bd670c80651b20a7f2 c23da94e2a9423e93b12ddd03776af6e4158d740 7937fb30f9d0c13bcc9a3851b7d823e18580ca49 2d4344b3a43c6e003a76b34cf9c7d83c923163ea,,Update ground prototype,| | |  |:---|:---|  |**_Originating Project/Creator_**| Fprime |  |**_Affected Component_**| fprime/Drv/ByteStreamDriverModel<br>fprime/Drv/TcpServer<br>fprime/Drv/TcpClient <br>fprime/Drv/Udp<br>fprime/Svc/GenericHub<br>fprime/Svc/GenericRepeater<br>fprime/Svc/Framer<br>fprime/Svc/Deframer<br>fprime/Svc/Framing |  |**_Affected Architectures(s)_**|  - |  |**_Related Issue(s)_**| Tcp Socket Stability |  |**_Has Unit Tests (y/n)_**| Y |  |**_Builds Without Errors (y/n)_**|  Y |  |**_Unit Tests Pass (y/n)_**|  Y |  |**_Documentation Included (y/n)_**|  Y |    ---  ## Change Description    Documentation of above components have been updated. Any encountered UT issues are also fixed.    ## Future Work    Need to stabilize the socket disconnection and re-connection code.  
nasa/fprime,346,2021-02-01T22:59:54Z,2021-02-02T01:35:33Z,False,none,e6d4aa5447c13b9d41c8a9dd530c6869ff969e25,193,87,0deaff45310efd402ee88b420283d50af16641e2 7889ac317c4449ea201ea3aac15c2e4b22f4641b dadbe4aaf559ee76710baaf3d0dc792093d99e12 596f2cd934590869d905921f0f2bbbe4c309b225 f1d042a795d3bf30960bdac05f58bc901f94f9c0 54b01badb5086ba4d54c72285ee344a6b265e3b1 5f35e41b9e886d6bdebfbcea55444e3c9ba2ca39 a415962620b86159a5849f6dbab73de562d27512 64350f8f5dab23c42bd3e514219c9341fd94e3c8 ad1a1ad454ca0251575124181ed1bc1fe26e220b c14c5ce63129f64a7197203281f28e8eb63a2671 3996c0eac37a7e84dc5c7e3612a95fca7e7fbe28 5ea0d598e568d287be35d579dc145c3ab25f0769 1039960dad4e090921b51a9b80e340d85e32bdd9 774c55e3df739d91b8b4ca218f330bdd542f05a9 0bb750e301821e18ab587476ad7f9c4d25bff012 821102cc05c258f4aa0a6b418e6db482474473f9 31e9c1b2eb717b7c0bed64c3be710d70115ccef6 6310c50bf18c0753b3eb45873f2ce5af384ebeef c507c4ab5fa3367999ee1251186d70fe4922a3ed 694ed1effc859f2ef1e59651ef558a4789381da1 1ec45150484041964d047578e5664d5bf4098254 91b3ddb533ff6916efae0d70e7d1ebf1e4b9ec63 f925dcbad497e8f6621c352d75d1ca0cd5415783 9ca1089c769a95b692df7044cd610b8674adee25 12f3700ac6ae37b580e715af5cca84cdfe7165f3 ae564e08992293b52b8e0841d16bcf1f53eee6dc bf5d6e5ca1a0835540a8e2a7e0575fedd8d881c1 2d62980c4cc2217a8cd7ebf765fc0c8774b2d4d4 26f7600da45689da8f9d57f03e3d9456a657846e 1fcf1375155c7860dee32af982f2ed2c5272b84c da8dac3388b25de32aaf2a09fe19fc9c6355cb8d ce73358020030931cb9370809d4f16b692ab6aa2 0ac132c8225dfabb3e60890d11323d4ac85fe9cc a98a47c5d3085700b6a5d135ec416dd4c210a2aa e8ae850ede66c4af45e5586658704268d6a9ba17 9ed8a1c2a44bb8ac5ed6395d6f18f3a0c3820904 81be6243fe6e8b20e23a46e0ef2e7b2e4e4956f6 698e2dd4676e4f7c4fb37e68f2c14f25e1c0c8c2 f4c10c6a00d8f423f54c08e9d818658184e9b1b2 1d6005744ed46ecedd5fa10f6ba7f9e9287b651a 8f1829a09eb7ce5722071b537d390d63ca65bf4b 70c53d2a032f1f2ecdc7ee74ff725a1dfa3bde96 9b6fed9374ce6cb3c8490b2c118ca3ff8d1471cd da8f3518f4c483391f6f9869ff72f1089b98e629 9b07926957e00023753a258abfe390863cc0ffb9 5b37e13943b292e44a30e5610e874d68dfc2ff41 5eb8b38c8536914617f3949650bba04c88c79f44 95972b3c77ac1922e95d84dc8bafdf52a9618ba0 fff0fe15f0f7069cda31e1a33426f588ac017a26 02f574222a6f80275117910fa018f2ad09828965 d90819bb1abeabb0043abc75e89b8fc819da00ed 55b0fb85ee7b422f0b380e8afc5cc47f19eff394 0d54085637b8b23dd85b55cff35458f8215de001 261ae546d93feb779536bee393caeb8c5140167d 13f32d1e10a7973b7c7a04b5cda7f427fbfaa4d4 ee71e271d7fa8b78b252703018650b7a9e2881aa accf524fe6aed7cd4c189d80ae6742b8bec6ff20 23932f5bfe6dc8bd22a7093ad08c08d00045f657 5d80195c4aae105e7b297a17b2d783c0eb04c0e9 4a9fa7ad8ee533291632e0d9d8d1a90cfddb3474 1b5e8daf944bdadaf4059950a79dff939a8b22cc e1eafe53fb4d512549fd138d610a48c00da55e8f e43e0b374692084979c44585e1b94ab0c454373f bd329272b1b0d6c9392e3b152ad0d74d34e0b25a 8cbc53654c5c5c6d22561eccf30b3ceea95cd537 c21b5c3d507cfac07cb3abe17c31e3cc765875ce aa06503fcf6a2b60e701b20cb5fd73864d49800d eb8f8442ebf9d56f295eadea8d200519a358e718 dadd119b09b5efe3b33025033ab637a6ca10d48d b913a575d1dcb314f441fdd9c394a475e61c3094 8bed570010f4448d0051d6c1f28d7bbe2929d0c9 47e468a0c27c949fab83c7f6f1d8dfb2a78da0b2 1b7ce886e090d8bc3d0e62b8d82c2a2d72ad15fb fa69f7d9559586d3fd909a523c54574b24025482 75b20391f4201e6241f42c119daf4eee990eac3a f876506f4a6f31c41aecedde7c00a8970c69551e 6206adda7163c1b074f15002b3e7643a175e66f1 564121ed76078f3685f188c9b9ca5da6383e97d6 9510b8040ad6a6dc620052566ac331c3fa2748ac 84db7d085481d85de3cc47bd670c80651b20a7f2 c23da94e2a9423e93b12ddd03776af6e4158d740 7937fb30f9d0c13bcc9a3851b7d823e18580ca49 2d4344b3a43c6e003a76b34cf9c7d83c923163ea 97883e50982a1275383a721f6c8a1c4c2aa1433e c1e4007027de22778644490f36266cfc0e20a203 38f4f7e42f647624faa18b3525cea17887c4c0b9,,fix missing GDS command name in event tb,| | |  |:---|:---|  |**_Originating Project/Creator_**| Fprime|  |**_Affected Component_**|  GDS|  |**_Affected Architectures(s)_**|  events.js|  |**_Related Issue(s)_**|  GDS command dispatch is too vague|  |**_Has Unit Tests (y/n)_**|  N|  |**_Builds Without Errors (y/n)_**|  Y|  |**_Unit Tests Pass (y/n)_**|  NA|  |**_Documentation Included (y/n)_**| N |    ---  ## Change Description  Reported by @bcmetz:  ![image](https://user-images.githubusercontent.com/35859004/106528611-e0420c00-649d-11eb-8161-83723bc9c32d.png)    A lot of instruments have similar functions  the above picture is an example  lots of instruments may want to adjust various voltage or light "amplitudes". A user cannot tell where this command came from without looking up the opcode and does not know where it is going without looking up the port number. We are going to have many sequences dispatching commands in parallel so the command dispatch EVRs should be as clear as possible.    Request    Include the component name and the command name in the event description  example for above bp_C4D.AMPLTIUDE  Add the connection name from the XML next to the port number  this will allow us to understand which instance of the component it is going to  Example Command Description:  ```bp_C4D.AMPLITUDE dispatched to port bp_C4DCmd (36)```    Now I now exactly what command went out and to which instance it went to. We have components in the system that are going to be used multiple times (the CE_FPM component comes to mind).    ## Rationale  ![image](https://user-images.githubusercontent.com/35859004/106528660-f8b22680-649d-11eb-93bc-4548760e69c9.png)    Command name is now shown in the table with the following format:  ```Command.mnemonic```    ## Future Work    Port name needs to be added.  Per @LeStarch the second request (labeling the destination port) is considerably more complicated to the point of possibly needing to re-architect all of F´  or rewriting large portions of the F´ GDS to support this.  
nasa/fprime,347,2021-02-02T01:47:17Z,2021-02-02T02:16:06Z,True,2021-02-02T02:16:06Z,ca71e1278cf61fba4b6faf67c9f049a3a5f423e5,1,1,c1c940a92cb3cf69570b14482cd05ef73780a774,,update use full_name for GDS command disp,## Change Description    See https://github.com/nasa/fprime/pull/346 for full description    ## Rationale    changes were made against devel branch
nasa/fprime,350,2021-02-07T11:36:25Z,2021-02-08T07:53:59Z,False,none,9dd262801d0f8611d256ca5861ef201a8793a09b,195,91,0deaff45310efd402ee88b420283d50af16641e2 7889ac317c4449ea201ea3aac15c2e4b22f4641b dadbe4aaf559ee76710baaf3d0dc792093d99e12 596f2cd934590869d905921f0f2bbbe4c309b225 f1d042a795d3bf30960bdac05f58bc901f94f9c0 54b01badb5086ba4d54c72285ee344a6b265e3b1 5f35e41b9e886d6bdebfbcea55444e3c9ba2ca39 a415962620b86159a5849f6dbab73de562d27512 64350f8f5dab23c42bd3e514219c9341fd94e3c8 ad1a1ad454ca0251575124181ed1bc1fe26e220b c14c5ce63129f64a7197203281f28e8eb63a2671 3996c0eac37a7e84dc5c7e3612a95fca7e7fbe28 5ea0d598e568d287be35d579dc145c3ab25f0769 1039960dad4e090921b51a9b80e340d85e32bdd9 774c55e3df739d91b8b4ca218f330bdd542f05a9 0bb750e301821e18ab587476ad7f9c4d25bff012 821102cc05c258f4aa0a6b418e6db482474473f9 31e9c1b2eb717b7c0bed64c3be710d70115ccef6 6310c50bf18c0753b3eb45873f2ce5af384ebeef c507c4ab5fa3367999ee1251186d70fe4922a3ed 694ed1effc859f2ef1e59651ef558a4789381da1 1ec45150484041964d047578e5664d5bf4098254 91b3ddb533ff6916efae0d70e7d1ebf1e4b9ec63 f925dcbad497e8f6621c352d75d1ca0cd5415783 9ca1089c769a95b692df7044cd610b8674adee25 12f3700ac6ae37b580e715af5cca84cdfe7165f3 ae564e08992293b52b8e0841d16bcf1f53eee6dc bf5d6e5ca1a0835540a8e2a7e0575fedd8d881c1 2d62980c4cc2217a8cd7ebf765fc0c8774b2d4d4 26f7600da45689da8f9d57f03e3d9456a657846e 1fcf1375155c7860dee32af982f2ed2c5272b84c da8dac3388b25de32aaf2a09fe19fc9c6355cb8d ce73358020030931cb9370809d4f16b692ab6aa2 0ac132c8225dfabb3e60890d11323d4ac85fe9cc a98a47c5d3085700b6a5d135ec416dd4c210a2aa e8ae850ede66c4af45e5586658704268d6a9ba17 9ed8a1c2a44bb8ac5ed6395d6f18f3a0c3820904 81be6243fe6e8b20e23a46e0ef2e7b2e4e4956f6 698e2dd4676e4f7c4fb37e68f2c14f25e1c0c8c2 f4c10c6a00d8f423f54c08e9d818658184e9b1b2 1d6005744ed46ecedd5fa10f6ba7f9e9287b651a 8f1829a09eb7ce5722071b537d390d63ca65bf4b 70c53d2a032f1f2ecdc7ee74ff725a1dfa3bde96 9b6fed9374ce6cb3c8490b2c118ca3ff8d1471cd da8f3518f4c483391f6f9869ff72f1089b98e629 9b07926957e00023753a258abfe390863cc0ffb9 5b37e13943b292e44a30e5610e874d68dfc2ff41 5eb8b38c8536914617f3949650bba04c88c79f44 95972b3c77ac1922e95d84dc8bafdf52a9618ba0 fff0fe15f0f7069cda31e1a33426f588ac017a26 02f574222a6f80275117910fa018f2ad09828965 d90819bb1abeabb0043abc75e89b8fc819da00ed 55b0fb85ee7b422f0b380e8afc5cc47f19eff394 0d54085637b8b23dd85b55cff35458f8215de001 261ae546d93feb779536bee393caeb8c5140167d 13f32d1e10a7973b7c7a04b5cda7f427fbfaa4d4 ee71e271d7fa8b78b252703018650b7a9e2881aa accf524fe6aed7cd4c189d80ae6742b8bec6ff20 23932f5bfe6dc8bd22a7093ad08c08d00045f657 5d80195c4aae105e7b297a17b2d783c0eb04c0e9 4a9fa7ad8ee533291632e0d9d8d1a90cfddb3474 1b5e8daf944bdadaf4059950a79dff939a8b22cc e1eafe53fb4d512549fd138d610a48c00da55e8f e43e0b374692084979c44585e1b94ab0c454373f bd329272b1b0d6c9392e3b152ad0d74d34e0b25a 8cbc53654c5c5c6d22561eccf30b3ceea95cd537 c21b5c3d507cfac07cb3abe17c31e3cc765875ce aa06503fcf6a2b60e701b20cb5fd73864d49800d eb8f8442ebf9d56f295eadea8d200519a358e718 dadd119b09b5efe3b33025033ab637a6ca10d48d b913a575d1dcb314f441fdd9c394a475e61c3094 8bed570010f4448d0051d6c1f28d7bbe2929d0c9 47e468a0c27c949fab83c7f6f1d8dfb2a78da0b2 1b7ce886e090d8bc3d0e62b8d82c2a2d72ad15fb fa69f7d9559586d3fd909a523c54574b24025482 75b20391f4201e6241f42c119daf4eee990eac3a f876506f4a6f31c41aecedde7c00a8970c69551e 6206adda7163c1b074f15002b3e7643a175e66f1 564121ed76078f3685f188c9b9ca5da6383e97d6 9510b8040ad6a6dc620052566ac331c3fa2748ac 84db7d085481d85de3cc47bd670c80651b20a7f2 c23da94e2a9423e93b12ddd03776af6e4158d740 7937fb30f9d0c13bcc9a3851b7d823e18580ca49 2d4344b3a43c6e003a76b34cf9c7d83c923163ea 97883e50982a1275383a721f6c8a1c4c2aa1433e 905e2d20b4290b3b986f825e3af40bbdb3705075 f2c07d376c8e708b2596b0bcad06a717714f85ef d13a454dc11f1d2f7a0d7c7c5313fe5f9fa505b8 298dbabf90a95243a3d4d5024c3140a48a9ee1ed 426aff263340a0dbab0cf4967c71edd3539c89ba d4abe4f4c0192537a4dfbcbe5b757e02fded506a,,Update ground prototype,| | |  |:---|:---|  |**_Originating Project/Creator_**| FPrime|  |**_Affected Component_**|  All|  |**_Affected Architectures(s)_**| FSW |  |**_Related Issue(s)_**|  [#348](https://github.com/nasa/fprime/issues/348)  |**_Has Unit Tests (y/n)_**| N |  |**_Builds Without Errors (y/n)_**| Y |  |**_Unit Tests Pass (y/n)_**| Y |  |**_Documentation Included (y/n)_**| N |    ---  ## Change Description    Enum toString is not implemented in:  Autocoders/Python/src/fprime_ac/generators/templates/enums/enum_cpp.tmpl  This causes the parent Serializable class Fw/Types/Serializable.cpp be used which only returns NOSPEC.    ## Rationale    The fix can be a patch similar to the following:    In file `Autocoders/Python/src/fprime_ac/generators/templates/enums/enum_hpp.tmpl` add:    ```  \#include "Fw/Types/EightyCharString.hpp"  ```  ...    ```  \#if FW_SERIALIZABLE_TO_STRING || BUILD_UT      //! ENUM toString      void toString(Fw::StringBase& text) const;  //!< generate text from serializable  \#endif  ```    In file `Autocoders/Python/src/fprime_ac/generators/templates/enums/enum_cpp.tmpl` add:    ```    \#if FW_SERIALIZABLE_TO_STRING || BUILD_UT      void ${name} :: toString(Fw::StringBase& text) const {      const ${name}::t e = this->e;      switch (e) {  #for $item_name $item_value $item_comment in $items_list:          case ${name}::${item_name}:            text = "${item_name}";            break;  #end for          default:            text = "[invalid]";            break;      }    }    \#endif  ```    ## Testing/Review Recommendations    The following is the stdout after the fix:  ![image](https://user-images.githubusercontent.com/35859004/107145243-2c091100-68f5-11eb-9e36-9e290951114f.png)    ## Future Work    Now the remaining question before adding the ENUM toString is the following:  Is `FW_SERIALIZABLE_TO_STRING` sufficient as condition for implementing the toString for ENUM or a new condition needs to be added in `config/FpConfig.hpp`?  
nasa/fprime,352,2021-02-08T08:23:41Z,2021-02-08T16:34:37Z,True,2021-02-08T16:34:37Z,c6474843bf8f61bcd12b1be9cb6c9ad164825287,2,1,e7f1bed57ab3eb75ca5c9cbd4d3957cb0e3955a5,,fix 348 Type Enums are printed as NOSPEC to stdout,## Change Description    See https://github.com/nasa/fprime/pull/350 for full description    ## Rationale  This fixes https://github.com/nasa/fprime/issues/348    Changes were made against devel branch
nasa/fprime,362,2021-02-11T20:30:41Z,2021-02-12T01:23:32Z,True,2021-02-12T01:23:32Z,b194aab4536001a99df476cdc2117c951d466be7,1,1,7bed5b6e0e0855682f247db90c60265506c53bdd,,Correct link to autocomplete page,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Simple update to link to the autocomplete page from the main INSTALL.md page.    ## Rationale    Fixes broken link in docs    ## Testing/Review Recommendations    N/A    ## Future Work    N/A
nasa/fprime,375,2021-02-19T10:37:36Z,2021-02-19T10:52:20Z,False,none,9460c7cd4d31825237a121ddb14bf38652790003,1,1,f7be80f7d47c4aaeac62351b26d749747e782f2d,,Update CMakeLists txt,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,370,2021-02-18T21:36:39Z,2021-02-19T15:36:02Z,True,2021-02-19T15:36:01Z,131abc30a0a5a3ec484e45f1dc05bd805f1757f3,1,1,cbc3b5f6809b9994a9f5741eacfed868c8b8ce15,,Fixes spelling error in documentation,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Fixes spelling error in documentation    ## Rationale    Handel was a composer. Handle is a verb.    ## Testing/Review Recommendations    Read docs  hum Handel.    ## Future Work    None  
nasa/fprime,376,2021-02-19T10:49:10Z,2021-02-19T15:47:59Z,False,none,6b026355b90139f338d7857163b944853fd17309,1,1,4ddc1c5168a9cac77d521213a5c916edeb339226,,Update Linux common cmake,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,374,2021-02-19T09:54:04Z,2021-02-19T15:51:47Z,True,2021-02-19T15:51:47Z,d1450265292d729ec56f396dc2da3c8f04369b05,1,1,68aab04a7fafd453fe5bcf09687e219e851ed5fd,,Update README md,Typo: misspelled "drivers"    | | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,373,2021-02-19T07:00:00Z,2021-02-19T15:52:48Z,True,2021-02-19T15:52:48Z,71f1d9583fc4672018fbb1585992e049f102f214,1,1,261eb360969da18835bf00567f874e086000c6a4,,Fix typo in doc,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  doc only |  |**_Affected Architectures(s)_**|  NULL |  |**_Related Issue(s)_**|  NULL  |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y  |    ---  ## Change Description    Fix typo in doc    ## Rationale    NULL    ## Testing/Review Recommendations    NULL    ## Future Work    NULL  
nasa/fprime,378,2021-02-19T11:30:59Z,2021-02-19T15:54:22Z,False,none,14412140a23fc7a78081f1d110e3d43954653153,1,1,a5fa211ef84de8be01df2797ffa8cb4adf845a7a,,Update Dockerfile,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,379,2021-02-19T15:41:05Z,2021-02-19T15:56:55Z,False,none,7fe566b787323e2cce4232375ab07db46d1adfa4,1,1,130fb922e2e70b1a88d0c273507ea82beb1a5ff0,,Fix typo,breif -> brief    | | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Fixed a typo ("_breif_" instead of "_brief-")
nasa/fprime,377,2021-02-19T11:00:01Z,2021-02-19T17:00:22Z,False,none,79f3c14b2fde8feaaa275cd7c549ab465be11ae6,1,1,bea594f108a07d777628f2d21a18772352c7b303,,Update platform cmake template,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,371,2021-02-18T22:46:51Z,2021-02-19T16:58:52Z,False,none,825f7926ff4d3cf4a689f8b4cf1f193eebede20b,1,2,0f872e261b0f7be52c820bed90d86004256a07e5 55de22bd1908f96c61e6547dce7874bd24dfc6ac,,clarkedb fix README typo and trailing spaces lines,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y  |    ---  ## Change Description    Fixes typo of "build" that should be "built" in README as well as cleaning up trailing spaces and lines.    ## Rationale    Documentation should be clean and free of typos.    ## Testing/Review Recommendations    Read docs.    ## Future Work    None.  
nasa/fprime,372,2021-02-19T06:38:37Z,2021-02-19T16:56:57Z,True,2021-02-19T16:56:57Z,b867b9ae469a400139492b8fb8c3393b89861779,1,7,cb875ff06e96c39df6522390cb8cba5c41bd812a 9b9ccdc2b9a51bafebf43d74bb13711300ab1510 c6d1b1466d7ca9c2ddad451b9403b7e43f85b499 1333c7fbb8d1199d69e114ba7c4437c2850b257c dac0528837d49386d27a4b9afd3ab377fc68f27f a953c45026b988a6bcc5f08721a692113cf861ce f0b2c5329fdcfef5a79c015a848d99f8b256f62d,,Documentation fixes to README md,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Docs |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    This PR contains:    - Non-trivial revisions to grammar and wording for the sake of clarity  - Trivial fixes to spelling and grammar    This PR bases corrections on the [NASA style guide](https://www.hq.nasa.gov/office/pao/History/styleguide.html) (specifically  removing commas from restrictive clauses)  the Chicago Manual of Style (specifically  using active voice rather than passive voice)  and general open source practice (for example  addressing the reader as "you" rather than as "the user").    ## Rationale    Clear and precise language helps current users and future contributors.    ## Testing/Review Recommendations    Some changes are pure editorial judgment. Please feel free to keep  alter  or discard them as best suits the community's needs.    I recommend merging #370 and #371 prior to merging this PR in order to avoid merge conflicts.    ## Future Work    As needed  
nasa/fprime,383,2021-02-20T03:31:50Z,2021-02-20T04:00:28Z,False,none,47402cf0069591e099a2fa380a0c9aa7dcfa0d32,1,1,42f6848dfd013cb52340b4fc4c4f5c683eb633c1,,Update cproject,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,382,2021-02-19T23:27:02Z,2021-02-20T00:44:54Z,True,2021-02-20T00:44:54Z,5d631af802664719a2de61bf22cf0a1cf3b2dc9f,2,6,d76046f62af2785a7ef22fece5ed8ebd74a8cc2d 5ca5dee61a986624ac9f2091167e4da1efcd6aec 38740981e35f9a9c605b8050f67cac2fc228e528 32cf8dafc9e6790424108841eca6c1174d0847eb 32a571954f50419b49165b34fc00fb55c1319431 2fbe5307b1a6d5ed60c4b039b012ecd1c6b2f083,,Documentation updates for issue 332,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Docs |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**| #332  #362  #324 |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    This PR aims to resolve all but one outstanding documentation issue in #332.     ## Rationale    @saba-ja 👋🏻 Some updates and questions for you:    1. The broken link was fixed in `devel` by #362.    2. What specific information needs to change for the unit testing tutorial to be accurate?    3. Fixed in this PR.    4. The text appears sufficiently similar between `devel` and `update/ground-prototype` that I've added a fix to `devel` in this PR. Specifically  I added a generate command based on order of operations in the [Ref tutorial](https://github.com/nasa/fprime/blob/devel/Ref/README.md). Please verify for accuracy. 🙇🏻     5. Fixed in this PR.    6. A [fix](https://github.com/nasa/fprime/issues/171#issuecomment-640099588) doesn't appear in [`devel`](https://github.com/nasa/fprime/blob/devel/docs/Tutorials/MathComponent/Tutorial.md#329-the-math-operation-connection) yet either  so I've added it here.    7. Based on #324  it looks like `-d` was replaced with `-r`. However  unlike #324  substitution fails here:    ```sh  fprime/Ref (devel) $ fprime-gds -r  usage: fprime-gds [-h] [-l LOGS] [--log-directly] [-g {none html}]                    [--dictionary DICTIONARY] [-c CONFIG] [--tts-port TTS_PORT]                    [--tts-addr TTS_ADDR] [-n] [--app APP] [-r ROOT_DIR]                    [--ip-address ADDRESS] [--ip-port PORT]                    [--comm-adapter {ip}]  fprime-gds: error: argument -r/--root: expected one argument  ```  Subsequently:  ```sh  fprime/Ref (devel) $ fprime-gds -r .  [ERROR] binary location Darwin/bin does not exist  ```  Likewise:  ```sh  fprime/Ref (devel) $ cd ..  fprime (devel) $ fprime-gds -r Ref/  [ERROR] binary location Ref/Darwin/bin does not exist  ```    Note that `fprime/Ref (devel) $ fprime-gds` appears to work as intended.    Given errors on `Darwin/bin`  it seems like there are non-obvious things happening under the hood. @Joshua-Anderson 👋🏻 Can you please verify whether [this particular command](https://github.com/nasa/fprime/pull/382/files#diff-b5ac4d3af2fe521ce436dae727dbb974004de395712d123343695c7d55a30bd3R2130) requires a flag; and if so  what that flag and syntax should be?    ## Testing/Review Recommendations    1. Verify that the [`fprime-util generate --ut` command](https://github.com/nasa/fprime/pull/382/files#diff-b5ac4d3af2fe521ce436dae727dbb974004de395712d123343695c7d55a30bd3R1431-R1435) is correct  and that the overall build procedure succeeds.    2. Verify that a change [inferred](https://github.com/nasa/fprime/pull/382/files#diff-b5ac4d3af2fe521ce436dae727dbb974004de395712d123343695c7d55a30bd3R2122) from #171 is correct for `devel`.    3. Verify the correct syntax for the [ground system build command](https://github.com/nasa/fprime/pull/382/files#diff-b5ac4d3af2fe521ce436dae727dbb974004de395712d123343695c7d55a30bd3R2130).    ## Future Work    Rewrite for general clarity and adherence to style guide.  
nasa/fprime,393,2021-02-20T09:27:11Z,2021-02-20T09:27:28Z,False,none,ebc2ee553fc18502ad85cc792a1782cb8bef499c,1,1,90ee811240a8f83963a96527882d19d960079adf,,Update clean bash,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,395,2021-02-20T09:40:45Z,2021-02-20T09:43:57Z,False,none,c6f879f1a6610ba2d49406ec524cd56395d1c133,1,1,6e0ab807007064442ba6451f3ee724e0a144bcb9,,Update InterruptLock hpp,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,394,2021-02-20T09:35:38Z,2021-02-20T09:44:10Z,False,none,a343d2abde3397fa63de14ad1b0fe6393a2cb7a8,1,1,d478599e36043c763222ed2f51336a937b5812c2,,Update setup py,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,384,2021-02-20T03:34:23Z,2021-02-20T15:48:04Z,True,2021-02-20T15:48:04Z,c92d2e653156d01b8ab0144c36f8fa4564b50f4b,1,1,6ee38da1ad5ebf91390e1979a1d6f85151c7be10,,Fixed typo in Readme,"user may **nopw**..." to "user may **now**..."    | | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,385,2021-02-20T03:44:50Z,2021-02-20T15:48:36Z,True,2021-02-20T15:48:36Z,e7839eb46d72d8fed596fb26abdc6f076c773e04,1,1,072ca627e7475bf436eca11d335d50fcc2c3eabc,,Fix a typo in guide md,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Fix a typo in guide.md: “buoild” -> “build”    ## Rationale    Documentation fix.    ## Testing/Review Recommendations    None.    ## Future Work    None.  
nasa/fprime,386,2021-02-20T03:57:08Z,2021-02-20T15:49:06Z,False,none,4addf3888870aef9f475fd6c0e59145c23f4e3de,1,1,99b803fbca69774e3d8edc85de3f20be901ed782,,Update README md,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,388,2021-02-20T04:45:36Z,2021-02-20T15:49:51Z,True,2021-02-20T15:49:51Z,2ed4a1e662d2658a0505bad69f57d6acab7be672,1,2,a4558e22e148f685b94a21a6da5271c185609371 980f0f3d004a2e0f9e98a8feed1f84475356254b,,Correct some spelling mistakes in Readme,
nasa/fprime,391,2021-02-20T08:19:53Z,2021-02-20T15:51:39Z,True,2021-02-20T15:51:39Z,10424b30278e6b1ee1770daef09a60310394e7d5,1,1,4367c6d4029a3e602a72f7743bb3297a0d34f4be,,Fixed a typo in Readme,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,390,2021-02-20T08:16:30Z,2021-02-20T15:50:59Z,True,2021-02-20T15:50:59Z,78c7f7342f375c7577b32ce8fd4329e4a5928e4e,4,1,5148cbac37514c730f1a340b58ec3e4b294dabc3,,Fix some typos,|**_Affected Component_**|  |  Gds
nasa/fprime,392,2021-02-20T08:46:47Z,2021-02-20T15:55:05Z,True,2021-02-20T15:55:05Z,dc207b006dbef1ef6629459cf6fa793fa37451c0,14,1,94674e9f0400faaa51e93d119266ef9426c7bebc,,Fix some typos,|**_Affected Component_**|  |  Gds
nasa/fprime,397,2021-02-20T13:46:52Z,2021-02-20T16:03:14Z,True,2021-02-20T16:03:14Z,c6ae9122f7db8d58364e9b7aa4eb65c63b4acc04,1,2,099e7f1b0b805d80fcd19af28271cc8f4a454969 dfb1e72bfbe4f21c0014bf78d762fddb3b5c39a1,,update guide md,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,389,2021-02-20T06:20:09Z,2021-02-20T16:06:22Z,True,2021-02-20T16:06:22Z,a6bc07cf48f4d8cbb5c483773dab37e3fe42870c,1,1,563ee85f1e38021adc29b374d965cc7befc9e0e1,,Rename requirments txt to requirements txt,  
nasa/fprime,398,2021-02-20T17:30:21Z,2021-02-20T18:36:17Z,True,2021-02-20T18:36:17Z,309ca5ba228fe3e75133a058924e451e8d0492ca,1,2,637974f5e36e98bbff657546c8f25c42533e7d75 f867404623a5f092cedb349478b42435768527af,,fix typos in readme md,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Fixed a few annoying typos    ## Rationale    Typos should not be included    
nasa/fprime,396,2021-02-20T09:59:38Z,2021-02-20T18:37:24Z,True,2021-02-20T18:37:24Z,a81ef6b6a376fed04b2e84d921eefd3043179a89,1,2,0879e6ea88eba45c9d057a3461044d484aee0b2e 2c5f0811a3dbfb06882b9d52aa4e39c94e87a5db,,Minor doc fixes,| | |  |:---|:---|  |**_Originating Project/Creator_**| me |  |**_Affected Component_**| doc |  |**_Affected Architectures(s)_**|  none |  |**_Related Issue(s)_**| none |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**|y  |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    Typos  link fixes in doc.    ## Rationale    Easier to read and follow links.    ## Testing/Review Recommendations    Read doc  follow links.    ## Future Work    Further reading of the docs and understanding of the stuff.  
nasa/fprime,381,2021-02-19T19:38:58Z,2021-02-20T00:38:52Z,True,2021-02-20T00:38:52Z,652eb08d3579ac5c24df978ca36a129ff9f61099,1,1,a78719b29bbe2493018cd1e74e4b4e0decd1bf02,,Update README md to fix typo,Displaying was incorrectly spelt    | | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Typo in readme.md    ## Rationale    To make a much more pleasing sentence.    ## Testing/Review Recommendations    N/A    ## Future Work    N/A  
nasa/fprime,401,2021-02-21T10:00:28Z,2021-02-21T10:05:28Z,False,none,eb5e8fe58c03cf6299ee9c4f647da12b960f3bc9,1,1,cfc12af839aea80e217dfa23f4431c10ab678221,,Add circleci config yml,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,404,2021-02-21T13:03:36Z,2021-02-21T20:46:38Z,True,2021-02-21T20:46:38Z,7377a9f4b3fe29477a58709238b3d5acc7f6e529,1,1,762fe222cca0969e5907a67dbaef2940a32fd276,,Ensure the same Python executable is used by subprocess,| | |  |:---|:---|  |**_Originating Project/Creator_**|Bill Allen|  |**_Affected Component_**|GDS|  |**_Affected Architectures(s)_**|Python|  |**_Related Issue(s)_**|None|  |**_Has Unit Tests (y/n)_**|n|  |**_Builds Without Errors (y/n)_**|y|  |**_Unit Tests Pass (y/n)_**|n (none available)|  |**_Documentation Included (y/n)_**|n|    ---  ## Change Description    Changed `"python3"` to use `sys.executable`.  Also removed duplicate import of `sys`.    ## Rationale    Calling `"python3"` directly could use the wrong Python executable.  Using `sys.executable` ensures the subprocess calls the same Python executable as the script  and therefore corresponds with the same dependency package installations.    ## Testing/Review Recommendations    Should be able to spin up GDS as normal.  Also checked with `pylint --disable=R C`.    ## Future Work    Did not find any other instances of `"python3"` being called directly.
nasa/fprime,403,2021-02-21T12:45:04Z,2021-02-21T20:47:03Z,True,2021-02-21T20:47:03Z,89e0d4c78a803be7f3af1d84ac7e97d70293662e,1,1,00364c9e2446fd078be4808da91ef82130f548cc,,Fix typo in docker README md,    | | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**| n |  |**_Documentation Included (y/n)_**|n |    ---  ## Change Description    Fixed typo.  ```  accross -> across  ```  
nasa/fprime,402,2021-02-21T11:51:15Z,2021-02-21T20:47:33Z,True,2021-02-21T20:47:33Z,b06dc4dc640624ab6973d22b71dd1f3ef4743670,1,1,67b47fcc04dd0a40d812c10b358c3c21ba66286c,,Fixed some typo,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,407,2021-02-22T14:07:16Z,2021-02-22T16:50:20Z,True,2021-02-22T16:50:20Z,b2c1ac34419a1c399b2785f1d94c710a609afe59,1,1,f40904d683ced3249adeebf7ff658e88e7f2cc75,,Trivial typo corrections ,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Documentation  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Minor typo correction  grammar correction.    ## Rationale    Improve readability  clarity.    ## Testing/Review Recommendations    N/A    ## Future Work    None
nasa/fprime,406,2021-02-22T01:01:02Z,2021-02-22T16:49:53Z,True,2021-02-22T16:49:53Z,1a71e8e16421b4228131468a4b23daf0560ed79f,1,1,ecc9c88a43204141a70b01556a5112d832a55cbd,,Minor typo resolutions,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Fix a couple of minor typos.  
nasa/fprime,412,2021-02-23T00:50:58Z,2021-02-23T16:46:10Z,True,2021-02-23T16:46:10Z,4ecd5990a27dff09daa316190e3d820f9f3b34df,1,1,3a62897ef6ffbc460e00b532de5e3dbad0fbf6f5,,Fix typo in fputil bash,  | | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    occured -> occurred    
nasa/fprime,409,2021-02-22T19:32:07Z,2021-02-23T16:48:01Z,True,2021-02-23T16:48:01Z,0dcaf78ef058bad78b9542d5ecb9f0f9beea815b,6,2,af12b17ed1ba4c3bb6707ef8ba0dfd8ed468c59a 21b033bc663e9e8d84bb04ea66b44d3f89a9e51a,,Close Xml files after parsing,| | |  |:---|:---|  |**_Originating Project/Creator_**|infrastructure |  |**_Affected Component_**|  Autocoders |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**|  y |  |**_Unit Tests Pass (y/n)_**| y  |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    Closing the files in the Xml parsers after usage.     ## Rationale    The parsers will otherwise print warnings such as:   `ResourceWarning: unclosed file <_io.TextIOWrapper name='./test/example/QATopologyAi.xml' mode='r' encoding='cp1252'>    model = XmlTopologyParser.XmlTopologyParser(topologyFile)  ResourceWarning: Enable tracemalloc to get the object allocation traceback`    ## Testing/Review Recommendations    None    ## Future Work    None  
nasa/fprime,416,2021-02-25T12:20:46Z,2021-02-25T12:21:25Z,False,none,2b35992cf3aa03bbcad197254ba766d1a492f4c5,1,1,8e3375256a3320bf5497aed8bc70fa1515bee441,,Update build test yml,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (n)_**|  |  |**_Builds Without Errors (y)_**|  |  |**_Unit Tests Pass (y)_**|  |  |**_Documentation Included (n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,417,2021-02-25T12:24:25Z,2021-02-25T16:39:47Z,False,none,f80db74c3af33f58e1e462ee63a7155f7d2c9d0a,1,1,29ee30ad209ed1b68061c81b83f3a5430a5f9194,,Delete github workflows directory,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,415,2021-02-25T12:16:35Z,2021-02-25T16:40:13Z,False,none,8051d948ef50a3be70b08e688ee5c7fbcc8f32ac,1,1,1ed08d519ebac5e55ac98e20c5bffb715935083b,,Update clean bash,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,418,2021-02-25T17:31:32Z,2021-02-25T18:28:59Z,True,2021-02-25T18:28:59Z,598f850b0784735acc9a8b6e367a9cd5acdd0972,1,1,7ec3be960283af4d6345abd70d8c9ff592715532,,Update README md to add highlighted note s,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Added some styling to make notes look better for README.  ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,414,2021-02-24T14:07:30Z,2021-02-26T16:37:25Z,True,2021-02-26T16:37:25Z,ada6e424b813e6434284bbde9f785656a61c8539,59,1,15249b1a4e195c89ec697f7ef0d2635681e41485,,CLEAN DOC fix typos,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Fw Gds Ref docker docs |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Fixes (guided by https://github.com/bwignall/typochecker) some typos I found. I have not fixed everything; submitting now to see if there is interest before I spend too much time. Another reason to submit with the given set was to solicit advice on which folders should{  not} be looked through  which are auto-generated  etc.    Should be non-semantic.    ## Rationale    Fixes typos.    ## Testing/Review Recommendations    Should be non-semantic (ie  affecting only comments and documentation).    ## Future Work    If interest  can continue.  
nasa/fprime,421,2021-02-27T01:39:32Z,2021-02-28T12:34:47Z,False,none,6a6ab6d693e3315904e255ee4d90384defe45494,2,2,9be804fda82084c786e6d9a9bc5f49bbb854b3b9 b17e669bb362b344f6c9d623297d43a33ba937b5,,Update,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (n)_**|  |  |**_Builds Without Errors (y)_**|  |  |**_Unit Tests Pass (y)_**|  |  |**_Documentation Included (n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,423,2021-02-27T13:51:31Z,2021-02-28T19:36:23Z,False,none,f50843588b289d779b452b573645acf9e7ba2dfc,11,4,930ada643495b33b6d49422eee395641ffce1fa0 6a9fb31a6547a9496785e78a0a1a5154590de546 305afd5e31d4983277c9f67361c42475a33200a5 9b5a1ff0f46076d00a5c3ad94037242b1105aea7,,Addressed some pylint warnings in fw and autocoders,| | |  |:---|:---|  |**_Originating Project/Creator_**| Bill Allen |  |**_Affected Component_**| fw and autocoders |  |**_Affected Architectures(s)_**| all |  |**_Related Issue(s)_**| N/A |  |**_Has Unit Tests (y/n)_**| existing |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    Corrected several warnings from `pylint --disable=R C`  mostly around incorrect use of logging  and overridden built-in variables/functions.    ## Rationale    Reduce potential errors.    ## Testing/Review Recommendations    Should work as before.    ## Future Work    There are many more pylint issues that were found in the autocoder  but they would take too long to address all at once.  Submitting this PR so the codebase does not change too much in the interim.
nasa/fprime,435,2021-03-03T18:21:14Z,2021-03-03T22:27:44Z,True,2021-03-03T22:27:44Z,a731f264f5edd8a494b7271315bb770ad7e35b95,1,1,2110a0c8ef1bcd2fd73784132fb36a342b79dd73,bug,Fix buffer overflow in FileDownlink,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| FileDownlink |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**| #430 |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Fixes buffer overflow when copying filename strings.  
nasa/fprime,420,2021-02-26T18:47:52Z,2021-03-04T04:30:53Z,True,2021-03-04T04:30:53Z,277b1b352b86eaa09a258ad12dd21678cc29548c,2,2,1092643cb449226247065063459a66d6f64d27eb 85448360d9d647b56cc0d75246b419cc8f01fe6b,,Added option to impl templates to check for return type of user defined functions ,Added option to impl templates to check for return type of user defined  functions.    | | |  |:---|:---|  |**_Originating Project/Creator_**| Fprime |  |**_Affected Component_**|  autocoder impl template|  |**_Affected Architectures(s)_**|  1.5 >|  |**_Related Issue(s)_**|  #419 |  |**_Has Unit Tests (y/n)_**|  No |  |**_Builds Without Errors (y/n)_**| Yes |  |**_Unit Tests Pass (y/n)_**| NA |  |**_Documentation Included (y/n)_**| No |    ---  ## Change Description    Added option to check for the return type of user-defined ports. The previous template only returned `void` without checking for user-defined return types causing the generated template inconsistent with the user definition of the port return type.    ## Rationale    Now the fprime-util impl will generate the correct return type for each function.     ## Testing/Review Recommendations    Manually tested the change on one of FileDownlink Component which had a port with return type. The result is shown below:    Svc/FileDownlink/FileDownlinkComponentImpl.hpp-template  ![image](https://user-images.githubusercontent.com/35859004/109341765-b7ecc980-781f-11eb-979e-39cc2c47fa4c.png)      Svc/FileDownlink/FileDownlinkComponentImpl.cpp-template  ![image](https://user-images.githubusercontent.com/35859004/109341748-b28f7f00-781f-11eb-811a-fd6766f4f0a0.png)      ## Future Work    Note: The user still needs to add the return statement manually after the template is generated.  
nasa/fprime,424,2021-02-28T20:31:53Z,2021-03-04T04:34:36Z,True,2021-03-04T04:34:36Z,76e58a926c22791ba853b90f1d48b84b7d3c544a,3,1,6f2275c097fd713647c106a8021af86366fc3080,,Added missing argsString method ,| | |  |:---|:---|  |**_Originating Project/Creator_**| Bill Allen |  |**_Affected Component_**| Autocoder |  |**_Affected Architectures(s)_**| Python |  |**_Related Issue(s)_**| N/A |  |**_Has Unit Tests (y/n)_**| existing |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    pylint reported a missing method  which I added.  Also cleaned up implementation of the same method in a different file to be more idiomatic.    ## Rationale    Fixed bugs.    ## Testing/Review Recommendations    Built with `cmake ../ -DCMAKE_BUILD_TYPE=TESTING` and `make check`.    ## Future Work    None.
nasa/fprime,434,2021-03-03T12:50:49Z,2021-03-04T04:51:17Z,True,2021-03-04T04:51:17Z,0e731d14c161a5c5dc37a2ce2e55009353806247,2,2,d6108bef7eff9f9aee50b1007ee98d3ef5c73b99 8165d05815449c44e3a8bf0ed7bef6bdf18a4460,,Removed Python 2 support from Autocoder ,| | |  |:---|:---|  |**_Originating Project/Creator_**|Bill Allen |  |**_Affected Component_**| Autocoder |  |**_Affected Architectures(s)_**| all |  |**_Related Issue(s)_**| #422 |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    Removed work-arounds for Python 2 support.    ## Rationale    Python 2 reached end-of-life at the beginning of 2020.    ## Testing/Review Recommendations    Existing tests pass as before.    ## Future Work    Other components of F' might still have Python 2 workarounds  which will be removed as they are found.
nasa/fprime,441,2021-03-04T16:59:15Z,2021-03-04T19:39:58Z,True,2021-03-04T19:39:58Z,308efeb7364435374afea6076fe7844f5e6d8208,1,1,755a92acdd163b4fb6900a69e6c6d2999d3d7f8b,,update fix 343 GDS bool type issue,| | |  |:---|:---|  |**_Originating Project/Creator_**| FPrime |  |**_Affected Component_**|  GDS |  |**_Affected Architectures(s)_**|  1.5 > |  |**_Related Issue(s)_**|  #343 |  |**_Has Unit Tests (y/n)_**|  No |  |**_Builds Without Errors (y/n)_**| Yes |  |**_Unit Tests Pass (y/n)_**| NA |  |**_Documentation Included (y/n)_**| No |    ---  ## Change Description    The fix will make the GDS interpret `true`  `yes` as `True` and `false`  `no` as `False`. Values are not case sensitive. Trailing white spaces will be striped out. Any other value will raise `CommandArgumentException` exception.    ## Rationale    In the previous implementation only `False` (case sensitive) was considered as boolean `False` and any other value as boolean `True`. No exception was raised on non-boolean values. This could cause confusion and problems. The new implementation has a limited set of valid boolean values (`true`  `yes`  `false`  `no`). Any other value will be rejected.    ## Testing/Review Recommendations    Manually verified the change as shown below:    ![image](https://user-images.githubusercontent.com/35859004/109615432-c02b5a00-7ae8-11eb-972b-f97c4cf0c538.png)      ## Future Work  Need to add documentation to indicate valid boolean values in FPrime GDS.  
nasa/fprime,440,2021-03-04T12:16:24Z,2021-03-04T19:40:19Z,True,2021-03-04T19:40:19Z,5c8922607ba8b4219e06e37c08fe6654d6ddf735,1,1,400c7a6fd593a3027e828f32a7e065939e5b9385,,The six package is no longer a dependency ,| | |  |:---|:---|  |**_Originating Project/Creator_**| Bill Allen |  |**_Affected Component_**| Fw |  |**_Affected Architectures(s)_**| all |  |**_Related Issue(s)_**| #422 |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    Removed the `six` package from the dependency listing in `setup.py`.    ## Rationale    `six` is no longer referenced in Fw  plus Python 2 support has been dropped.    ## Testing/Review Recommendations    Should run as before.    ## Future Work    No other references to six were found in the project.
nasa/fprime,427,2021-03-02T10:53:34Z,2021-03-04T23:29:05Z,True,2021-03-04T23:29:05Z,150ba3c5b8d4ced593c76ffca62ed95c5f4ff090,1,2,b66ddb30a14e5cd6f0a7bb0dbac88019273b1c85 bf9b23e3d9803335c8ceb61d3d3994b8565a53e2,,Change signal raised by fatal event handling,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Svc/FatalHandler |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**| [#356](https://github.com/nasa/fprime/issues/356) |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Segmentation fault doesn't seem like an appropriate choice for handling Fatal events. SIGSEGV was replaced with SIGTERM.    ## Rationale    Raising SIGTERM allows for cleaner exit on fatal event (if signal handler is implemented).    ## Testing/Review Recommendations    None    ## Future Work    None  
nasa/fprime,444,2021-03-05T03:57:42Z,2021-03-05T18:30:27Z,True,2021-03-05T18:30:27Z,853dcf5b401f3aa1170413efabaff4029033f7a0,1,1,da10ee2eed918f0a2b8931d8410606827e52b8f1,,Fix alloc dealloc mismatch in FileDownlink ut,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| FileDownlink |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    There is a error of alloc-dealloc-mismatch when running the Svc_FileDownlink_ut_exe with ASAN  this pr fix this.    ```  test 1      Start 1: Svc_FileDownlink_ut_exe    1: Test command: /home/zyh/fprime_zyh/build-fprime-automatic-native-ut/bin/Linux/Svc_FileDownlink_ut_exe  1: Test timeout computed to be: 9.99988e+06  1: [==========] Running 7 tests from 1 test suite.  1: [----------] Global test environment set-up.  1: [----------] 7 tests from FileDownlink  1: [ RUN      ] FileDownlink.Downlink  1: =================================================================  1: ==33375==ERROR: AddressSanitizer: alloc-dealloc-mismatch (operator new [] vs operator delete) on 0x6030000009d0  1:     #0 0x51ed08 in operator delete(void*) (/home/zyh/fprime_zyh/build-fprime-automatic-native-ut/bin/Linux/Svc_FileDownlink_ut_exe+0x51ed08)  1:     #1 0x522b92 in Svc::Tester::~Tester() /home/zyh/fprime_zyh/Svc/FileDownlink/test/ut/Tester.cpp:46:11  1:     #2 0x551983 in FileDownlink_Downlink_Test::TestBody() /home/zyh/fprime_zyh/Svc/FileDownlink/test/ut/Main.cpp:10:1  1:     #3 0x7f3f9e in void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test  void>(testing::Test*  void (testing::Test::*)()  char const*) /home/zyh/fprime_zyh/gtest/googletest-src/googletest/src/gtest.cc:2433:10  1:     #4 0x78c917 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test  void>(testing::Test*  void (testing::Test::*)()  char const*) /home/zyh/fprime_zyh/gtest/googletest-src/googletest/src/gtest.cc:2469:14  1:     #5 0x6b58ba in testing::Test::Run() /home/zyh/fprime_zyh/gtest/googletest-src/googletest/src/gtest.cc:2508:5  1:     #6 0x6b952f in testing::TestInfo::Run() /home/zyh/fprime_zyh/gtest/googletest-src/googletest/src/gtest.cc:2684:11  1:     #7 0x6bb259 in testing::TestSuite::Run() /home/zyh/fprime_zyh/gtest/googletest-src/googletest/src/gtest.cc:2816:28  1:     #8 0x6f070c in testing::internal::UnitTestImpl::RunAllTests() /home/zyh/fprime_zyh/gtest/googletest-src/googletest/src/gtest.cc:5338:44  1:     #9 0x80572e in bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl  bool>(testing::internal::UnitTestImpl*  bool (testing::internal::UnitTestImpl::*)()  char const*) /home/zyh/fprime_zyh/gtest/googletest-src/googletest/src/gtest.cc:2433:10  1:     #10 0x797cf7 in bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl  bool>(testing::internal::UnitTestImpl*  bool (testing::internal::UnitTestImpl::*)()  char const*) /home/zyh/fprime_zyh/gtest/googletest-src/googletest/src/gtest.cc:2469:14  1:     #11 0x6ef0e9 in testing::UnitTest::Run() /home/zyh/fprime_zyh/gtest/googletest-src/googletest/src/gtest.cc:4925:10  1:     #12 0x5562d8 in RUN_ALL_TESTS() /home/zyh/fprime_zyh/gtest/googletest-src/googletest/include/gtest/gtest.h:2473:46  1:     #13 0x552cea in main /home/zyh/fprime_zyh/Svc/FileDownlink/test/ut/Main.cpp:44:10  1:     #14 0x7f4603f42bf6 in __libc_start_main /build/glibc-S9d2JN/glibc-2.27/csu/../csu/libc-start.c:310  1:     #15 0x425b29 in _start (/home/zyh/fprime_zyh/build-fprime-automatic-native-ut/bin/Linux/Svc_FileDownlink_ut_exe+0x425b29)  1:   1: 0x6030000009d0 is located 0 bytes inside of 29-byte region [0x6030000009d0 0x6030000009ed)  1: allocated by thread T0 here:  1:     #0 0x51e150 in operator new[](unsigned long) (/home/zyh/fprime_zyh/build-fprime-automatic-native-ut/bin/Linux/Svc_FileDownlink_ut_exe+0x51e150)  1:     #1 0x533152 in Svc::Tester::from_bufferSendOut_handler(int  Fw::Buffer&) /home/zyh/fprime_zyh/Svc/FileDownlink/test/ut/Tester.cpp:394:16  1:     #2 0x5a9574 in Svc::FileDownlinkTesterBase::from_bufferSendOut_handlerBase(int  Fw::Buffer&) /home/zyh/fprime_zyh/build-fprime-automatic-native-ut/F-Prime/Svc/FileDownlink/Autocode/TesterBase.cpp:1008:11  1:     #3 0x5a6443 in Svc::FileDownlinkTesterBase::from_bufferSendOut_static(Fw::PassiveComponentBase*  int  Fw::Buffer&) /home/zyh/fprime_zyh/build-fprime-automatic-native-ut/F-Prime/Svc/FileDownlink/Autocode/TesterBase.cpp:819:18  1:     #4 0x6622c7 in Fw::InputBufferSendPort::invoke(Fw::Buffer&) /home/zyh/fprime_zyh/build-fprime-automatic-native-ut/F-Prime/Fw/Buffer/BufferSendPortAc.cpp:59:9  1:     #5 0x6630fd in Fw::OutputBufferSendPort::invoke(Fw::Buffer&) /home/zyh/fprime_zyh/build-fprime-automatic-native-ut/F-Prime/Fw/Buffer/BufferSendPortAc.cpp:115:23  1:     #6 0x5ee4b0 in Svc::FileDownlinkComponentBase::bufferSendOut_out(int  Fw::Buffer&) /home/zyh/fprime_zyh/build-fprime-automatic-native-ut/F-Prime/Svc/FileDownlink/FileDownlinkComponentAc.cpp:739:47  1:     #7 0x5d42e4 in Svc::FileDownlink::sendFilePacket(Fw::FilePacket const&) /home/zyh/fprime_zyh/Svc/FileDownlink/FileDownlink.cpp:500:11  1:     #8 0x5d3164 in Svc::FileDownlink::sendStartPacket() /home/zyh/fprime_zyh/Svc/FileDownlink/FileDownlink.cpp:487:11  1:     #9 0x5ce00e in Svc::FileDownlink::sendFile(char const*  char const*  unsigned int  unsigned int) /home/zyh/fprime_zyh/Svc/FileDownlink/FileDownlink.cpp:384:11  1:     #10 0x5cced4 in Svc::FileDownlink::Run_handler(int  unsigned int) /home/zyh/fprime_zyh/Svc/FileDownlink/FileDownlink.cpp:120:9  1:     #11 0x524fdb in Svc::Tester::sendFile(char const*  char const*  Fw::CommandResponse) /home/zyh/fprime_zyh/Svc/FileDownlink/test/ut/Tester.cpp:530:21  1:     #12 0x523679 in Svc::Tester::downlink() /home/zyh/fprime_zyh/Svc/FileDownlink/test/ut/Tester.cpp:68:11  1:     #13 0x551948 in FileDownlink_Downlink_Test::TestBody() /home/zyh/fprime_zyh/Svc/FileDownlink/test/ut/Main.cpp:9:10  1:     #14 0x7f3f9e in void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test  void>(testing::Test*  void (testing::Test::*)()  char const*) /home/zyh/fprime_zyh/gtest/googletest-src/googletest/src/gtest.cc:2433:10  1:     #15 0x78c917 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test  void>(testing::Test*  void (testing::Test::*)()  char const*) /home/zyh/fprime_zyh/gtest/googletest-src/googletest/src/gtest.cc:2469:14  1:     #16 0x6b58ba in testing::Test::Run() /home/zyh/fprime_zyh/gtest/googletest-src/googletest/src/gtest.cc:2508:5  1:     #17 0x6b952f in testing::TestInfo::Run() /home/zyh/fprime_zyh/gtest/googletest-src/googletest/src/gtest.cc:2684:11  1:     #18 0x6bb259 in testing::TestSuite::Run() /home/zyh/fprime_zyh/gtest/googletest-src/googletest/src/gtest.cc:2816:28  1:     #19 0x6f070c in testing::internal::UnitTestImpl::RunAllTests() /home/zyh/fprime_zyh/gtest/googletest-src/googletest/src/gtest.cc:5338:44  1:     #20 0x80572e in bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl  bool>(testing::internal::UnitTestImpl*  bool (testing::internal::UnitTestImpl::*)()  char const*) /home/zyh/fprime_zyh/gtest/googletest-src/googletest/src/gtest.cc:2433:10  1:     #21 0x797cf7 in bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl  bool>(testing::internal::UnitTestImpl*  bool (testing::internal::UnitTestImpl::*)()  char const*) /home/zyh/fprime_zyh/gtest/googletest-src/googletest/src/gtest.cc:2469:14  1:     #22 0x6ef0e9 in testing::UnitTest::Run() /home/zyh/fprime_zyh/gtest/googletest-src/googletest/src/gtest.cc:4925:10  1:     #23 0x5562d8 in RUN_ALL_TESTS() /home/zyh/fprime_zyh/gtest/googletest-src/googletest/include/gtest/gtest.h:2473:46  1:     #24 0x552cea in main /home/zyh/fprime_zyh/Svc/FileDownlink/test/ut/Main.cpp:44:10  1:     #25 0x7f4603f42bf6 in __libc_start_main /build/glibc-S9d2JN/glibc-2.27/csu/../csu/libc-start.c:310  1:   1: SUMMARY: AddressSanitizer: alloc-dealloc-mismatch (/home/zyh/fprime_zyh/build-fprime-automatic-native-ut/bin/Linux/Svc_FileDownlink_ut_exe+0x51ed08) in operator delete(void*)  1: ==33375==HINT: if you don't care about these errors you may set ASAN_OPTIONS=alloc_dealloc_mismatch=0  1: ==33375==ABORTING  ```
nasa/fprime,439,2021-03-04T08:34:21Z,2021-03-07T17:13:37Z,True,2021-03-07T17:13:37Z,16ce8cc6b1f30e115a1b053f3dbbd5a56f968738,1,1,75b2ce2e68fb33de4408573c4e1b388833b0e7b5,,Fix typo in GDSArgItemTextCtl index html,    | | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description  formating -> formatting
nasa/fprime,446,2021-03-05T17:53:36Z,2021-03-07T17:22:03Z,True,2021-03-07T17:22:03Z,92067fe531073cb466b1d60c6fd3a21098794e5b,2,1,dce145414f02f8c225e3765b99efe207c4287bd5,,Fix discreet vs discrete in docs,I'm guessing from context that these cases should be "discrete" rather  than "discreet." This is a common word swap in English.    discreet: careful and circumspect in one's speech or actions  especially  in order to avoid causing offense or to gain an advantage.    discrete: individually separate and distinct.    | | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Fixed a likely mistake in wording in the docs (discreet vs discrete).    ## Rationale    Docs are less confusing this way.    ## Testing/Review Recommendations    (I am not sure what testing you require for changes like this  feel free to edit)
nasa/fprime,443,2021-03-05T03:45:49Z,2021-03-07T17:58:54Z,True,2021-03-07T17:58:54Z,e3bdd527f457af3fd957032d1cfc867b01a78c02,1,1,3f4dc593a35e77ec5cfb8363fb3ca3741619fad4,,Fix stack buffer overflow in Types,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Types  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**| #429  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Fix stack-buffer-overflow error in Serializable.cpp line 55  
nasa/fprime,447,2021-03-05T20:59:42Z,2021-03-07T18:02:03Z,True,2021-03-07T18:02:02Z,eaf57af03f0c074881c3a83c0b5325cb9906fcae,4,1,f6daa59546acec9791372883c5e0c59e2b6937e7,,Move enum duplicates removing to separate file,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Autocoders |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**| #241 |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    Functionality to remove duplicates from list of enums was moved to  separate file to allow both gds_dictgen.py and codegen.py to use it  without duplicating code. Also a few typos were spotted and fixed.    ## Rationale    Fixes #241     ## Testing/Review Recommendations    None    ## Future Work    None  
nasa/fprime,432,2021-03-03T02:35:33Z,2021-03-07T23:06:42Z,True,2021-03-07T23:06:42Z,025a71e3c5ad4acb4aa51ead5a782c80419faea7,11,2,bdc57d875181f2c45f10e47deb09d569a67d0aa4 53ffe99c8979c1740f4f97cebfe30374b2448cdc,,fixed handling of redefined messages field types in Gds and GroundInterface,| | |  |:---|:---|  |**_Originating Project/Creator_**|GT1/Georgia Tech |  |**_Affected Component_**| Svc/GroundInterface |  |**_Affected Architectures(s)_**| None |  |**_Related Issue(s)_**| None |  |**_Has Unit Tests (y/n)_**| N |  |**_Builds Without Errors (y/n)_**| Y |  |**_Unit Tests Pass (y/n)_**| Y |  |**_Documentation Included (y/n)_**| Y |    ---  ## Change Description    Edited the GroundInterface component to use the compilation flags defining the Packet Descriptor.  Edited the Gds to use the configuration manager's types when encoding and decoding commands  events  telemetry  parameters  and packet headers.    ## Rationale    Fixes bug where configuring message fields in deployments causes the Gds to be unable to communicate with the deployment.  The compilation flags for configuring message fields are necessary on certain platforms with limited memory to reduce memory usage.    ## Testing/Review Recommendations    A deployment should be made that edits the (compilation flag  config manager field) pairs described in the included Gds/docs/README.md file are changed. This deployment should be able to have successful exchanges of commands  events  parameters  and telemetry. There should also be builds containing individual changes to each flag to ensure that all fields are set correctly.    ## Future Work    The `FwEnumStoreType` flag is confirmed to break the communications with the Gds when it is changed from an I32. I do not know how to change the way this type is serialized since it is defined in the `fprime/common/models/serialize/enum_type.py` file which I don't believe has access to the configuration manager from the Gds.     There may be additional fields that can be configured with compilation flags  but will still cause issues with encoding and decoding that will need to be handled correctly to avoid broken communications.  
nasa/fprime,437,2021-03-04T05:00:25Z,2021-03-07T22:47:57Z,True,2021-03-07T22:47:57Z,ca7182300200e1e5b98931ecb31c9a4b4b9ed4f3,390,299,71f25b31df7287cf8daaaab2a0b3eda8e740d50c ffd0c44b1392ea45e7e963b7a17c210791bb5f59 a3950fa64ab8c05d52fc4b8fd18efba46bd10ced 7f1d95b256dd160778964baedb3916c940504e82 91d57d201af3d4726e85db2acc5c708036caddd8 775bf765263fa9a67e1fbcc43e8e218c619ebbf8 b26027c0f459da489681523c49e9377f3746e872 72b305589f5d30b5e1ccd50afd597f523ca2fe48 ba86aba921795cf55c6d7e7c7171f1efcb055a74 1966a80f29f7282bd91131e34d2aef7513504cd5 50aae4777ce6275fcf68502c6989705d2d597825 e1375f496b27a3ff345fa731b82984499c221bae fd2dfce95d26bca6c2e644c1d7dd677d7591bb0d de22bbabf3ed23fc310fb8a48b59e7d211d2488a b6107528b41d1df10249bba5e9833331072602a1 cbc84d85e415e075d2c55ff2edab7f0e59b8bbf4 960b34bc4047234bf851ae6ea81122cbbc3b3489 0a93fcd96a790eacfa5ec0449ded7b9bbb6cfed4 f78111bdd82a1f1cc608c70fbecceaa7d2d4621e c7441c86a3e6d1b46fcf2a4bd380ef0d9a1c6d4f d16c75f802d94a19a5dc1a2ba3be15c53b17ac5c 9f9c74760aed8612d7936bfa48f0423a200ea29a 2590d10019ba34d6908346764a794933a3c1bdaa 8a097d8ed062143cd77b069faf2da0ab31f644a9 70da70181dc860b00b8c00a718a9a50a64fc2d98 6ab292ace52f6bb44e8b451b9535c63636f98f13 675a248ae1bd14cd3f1399c1f6900b59babaa3af 440863152b40296e91c53f8dbfffc707ca6302a9 ed6bc573867f74b8ecbe982c9874f71e3680d421 7b3691d3a1b9d647884ece8ef49b23ea32004722 59d2ebeed5a7f195e4eb0a4c011698ff4ab68191 0a206f39704058bfe28c282063b9ba6bb58296c4 36f1f2ac06dddeb80ab29abaabb8be7e6c417283 0891269ece4957ba273b060ee6e82528ad63d6fa 1c60f1115d4d081c7dd860b6b5e481a52b416a64 a2d7868bef9edf0c6316d3ff8aceb76c21787d09 898f9dbd2230cc69e8964f95d4c8ecd291f2cdbd e97aba3398f77f6a7ab25743010c86f2e3881a51 33732ac2f414f043fbaefd8bb7701fa521742048 bc522caf9210481ea2a0a1e4bc5bdf7dcd26210c 8712d0337536c5e441a8b8ecd17998b59528d35a e94f8334ba67f58bc253fda44e93a59b8acad481 518512ddc7848ba70bb64af87cb9bcdd34a111f6 23dca646b37dcb84a3a6d1b1ed07645c071f465e 35d37ed4e32aae89e68329740677c3e7a3cedcb2 f9446f8a5dbdbc8b90e583fe4bb338f8a82128fc f2144043ac99c0ae49117afd1fcab79ec4cd3023 c2a560c2e73d4fa896b89d5c4a48459a09aea56f 0e79c25db59dd56cebf8c3e05bda7db7580768a3 0b649f2835c77999c4171d1caad34c9da2da94db cb1f1ec26acb25a50089fe78b1ae5ea385969207 78382ccbea42c307dab643bf2070fcd352041839 4faadb740631f8a3ff47b4b0da405fc3e246e093 69486fd3a2c9b1e1bccb9452c068344a41d8620b c5d021a508214035e18bd1d26c442c0f8388f1c6 ea5cc0ea95970c7b76d6cf98528b84c84ca47726 e96e7ae8b330ffa0497a95ee92b1c97c01914847 4b80e13a811b919a02bcff472dbf95fb67b224e8 b42cd94238f235fb1beaf09a08fa2ce9536bda31 8e6cdf78e73e4dbe9c947bb18eccdf3063ccc765 334179a186533839b171b6fd29cfe720c60bc2bc 361fe6728a76b9ab820f05b04e82288977d9275c 6c22237bd2a2d437383752d58f8e0574f9f4854c 4c1cfba5e456baa8fb41278f223e64df1450b731 243b40e4a3c9569cf6a5fd84a93a3670d7a2ce34 e8958a9cd752b9e9db385230eadd820ec20ecce0 a7f7d2e6f9d28f7082e03e714f91c4da0adef9a1 8b83278c5c900646be5dd37ddf3de2b9d90dbf95 25cf383e9c8fab52c70969d1c21f9dede7c094f5 97e7d8025a6ac9873498e42acf4028d086ea3717 dcc47d5b87e790090f67547c6cf831a3d11c6802 b11895d0b79f9b16791f28239538435051a9c18d 27eae608a444e5848429feb02f0e87d936680355 e7e02d211e45016a577ff68b8a9c01fe0028e590 8857fd2e383d6db4e4243e440c3ffd5683e4e3b5 213311dce4c6550fef0987dfffd2aec7f6983236 296339c6fd669a27ddba0c34680f5b00e46717d9 db7e6c63701cdab603a18fd42fae35c124b4df7c 40b047181bf69a6ab94bcbc5b72c2d03020f4a2b fe73d5c5f97d431952be783f97468e5b836c2515 93df75e4f405251e419fa13f1127e7289b92247d c323901d5f3a80aad43b70dc07f811058074c849 8aaf947c43c56a285da7fab423f1212034ace312 f317d111b0185ecfe2c8b5644c26fec98554feea d7db64a05485b9724127d4095985d38f494479d9 126ab639b58b39646a7ebe75fe401066181cc0b2 dc4c207f1d517d22c740e643b2eac48c6f840ca5 f77f76f2d6e6a3c5765247d097072852bcbfbba1 350e568da6503d6f3b7aa6dfc23e8f646b411fdc 2f3b108728569f05067acdf174190d9a071e8c68 e126fa62b01e57b1c8313abec4d42b951f094e44 fde0c7c486de41a22e5cc5245b329452294916b9 5c1d945b3ae85d51351f983d9bdb6927b5d2ad5c 0077a6830148fa0f8e321b37e0db6226a90a3195 5da3aff0b6270ecbd014ffc61052fe4ca4e0ddb4 465505ef87b5ba972e1f1c16891003871c48bff7 076c86dcbad90578d12c71f44a01bbd1e075f2dd 7f9c116c66e88bab97d3694c58d5395faa655e71 6fdd73bd251ac065c6b4775bbc03f3d542f6238c d5e3c38e04c26a5ba93be2253170bb3bfe4451fc ab26dc82597d36e73278dd1566ab49ba3700c35d b16ef0535ae0e4d3ec133bfd9a065f326f6caaca 7170e0a6e84e2bf1444ccc35cc4626f5a0c28156 47a2567b899db281037bf423b55c346903e28091 abfb52150dffb49731566e4cddadf2300beebe9f a4912af29cbbd2fa218c4862ad3dfc416b034ee8 3e6c7dd395d87e85968b62b6a9fdec6c22917c4b ea76376f858a8293404bf5ed2327e83fbae994a6 6ce703972d8c39b92012fb6d7eda760b5b1e3314 0f6c3ba7c9a097c02981c0326af8fd795f16d364 74ecffa1901f730ea0fb754e9ba39a0ec316d67c 68f22e5b42a8e369835e9d90296d163e47216b6f 088c7257a75589063cff9099adc2d34b751e3950 52ff5747bcf5f93f6b40f3e3092e27762cee2970 f2b8ed7cfd6b6f01b16de8148bca689780400751 62438161bb21b8434292cf3e5af2725d83fe9b22 9b591c7b622e5bc4119ab83daa01bf4f1ca3f18e c48f17369c6a8782d71b785a173c83a94b335911 766c470a692a41b90ccf588a3b817b1ce60186dd c72d01ff4092b801048cd2e519737c420cdb8747 1126214ba7e92ac15dc7fc60306dab362fd9bbde 186b3059cf4ffce6f94950313ddbcd22cd7dc17f 28354dde01f5f247638033bfb8c97314cb159525 73bd2c296b5091e39ed223ba3d2846b8ceece87a ac675d82dfc72a08fdc5ebe95a54795ad434af04 7984cd5c3847bd4458fb0649eac7a38c2227e560 68f7973380152324f8c5832009e6513dce46be10 6563251105774d9a6a8be8118eb4e7113e7d2049 2817d957c19c7f87fb6a62b45db81a8254a49772 5302229ed869112c95d96e2d92d27dfc81cea26e 99c271fd009b947cc37fa751881e9ca9d4907e60 f3e08bb1d6e1deb13adc9d8c7e13ff64e5bf7a8e 6cf1d34358c4e67a4f61c8bc3c8d1da5a4b5f828 318bd2e135b51445435d4226ee999b925e533fa6 1ea6183ccbc3a23fb402d9df44d31fd4308a0c91 5903b6a622e7cbf2d19e16a44d9d7cd5683c57ea 42bde9fb9cecc63a8e00dea55e11f29b0e6995ac f89ac9b9405b2ec8a8c408ed3149f2cd92c98df8 b8e50588786b64b73edeb90e975331a8592340e8 8ecc1694925ece5f705458dcb378416489874b8e 5d678c479221418c2c61b0a1158c0dbb942e801b b12865a124425d1cad49d6166e88ec10f2354a16 4fbfc982e20457f78dfb28295b05644482561e95 fad5c86ad3109a299a46501510c8b8110e3f4fa7 cc90ba05eeb38cde2097e531ffa1a98f08d4feff 04879c98088a68355271bb98112652421861be02 e6806a8910bd01ce55b01439ac6ccc4e40c74c70 156fe892bca9b604c7d55024efca9fb34945b5b5 bb8e1eeec526e7b746324479ddd3454969993278 8817c7f8cc2356d7299d6f820fba446ed8c16666 faa9e8cc0ab7e6b75ccafc3b23b169087690e7e1 b62ac0d75c766ce3feb969c93deacbbf22f5d7be 738fb8179994e227be49f0e82cfd1e3d25951fcd 365078c853b64532482463295f6d8024e7373903 abf1a8b92f2f357ec01e685f910a44af559c041b 8ba33020a5126a79b4125085dc2b63c80a497295 7c068d5e6dd5fdc651cd4722994bba8845bad1b9 0b516162d516d44e9097a9a3e390a3f38f48c84d a3b2034fc4bf9dfb8a54b24248f93487380d4227 cc8a87c86f5a8a249b40c33cd8f3e4cdef1a1a21 bc7edfe202ca92b158d9813b39b5fbffd274e78d 2f4cb8d5aebcba56e1d4bdccd8e694d05e3293df 31ed3a3714b858e3ec403d05139f9137c7a66595 38b175c0295e527887d0f6608bd420e7c82ec5ef 167978c6fbc036e476d5614beac07903bd279815 29b28a667f0d42bb130458e73ee55386cd750593 a65a88ffeb8b1ed73351269b0a5a954a65430263 a49284d05becad22761e8af9e728c081dd444181 3571ea89b6c9c5d70efd147c88cf31e4738f9469 faec1e7debfce55d9adbee6cda63857fdf40a994 e0eb16ae6c7843e2b10968afdd3242e9fe639870 48fe7a43830550c7ce30ca2c65d03a408186a3fc 0a7947a1b9ee420382598a2949fb40a671b67307 ed041fc9cd7df62dd4f50db8c1d0823004cdd6ab d443b30cf5622f240d54a039568069d502cb6dce ca101d6d50f18d2254f1b634b4ec5ed4455c62bb a6d81d8fbb3af93ec740bdd94b0f50c2fa68b6c5 9c363b6a77bfb4b26b5385e789693454725c496d b1d40370d25558a455422048a92756f64a64abdd 3d865d3aa74acfd64064ce476086eb86687a8dc0 145f41f60360fc124207ac28ca1a622b58ba9965 8caa45827459d4c3d818ef616f13de17e429d367 43874158576752633d3138b28f285c87bd46e1d3 68f7eda7fb1ab271939140efb795b9bf70eb3850 b35ddcbbf8b582a4beba74291ee90bde2a7fa82a 8ce15e909d9ec432ac776b4528eed9bce87843bc 6f185b5960712ceaac841a974ae45a24a8fbc229 04ff7b0b42a9c43f80e24beca590494fd16dca33 4713f700e00a91adbb3b52deaa40306893285bf1 bec627a96e84a4d98cfa7e0ebccf8f711e2940b2 5bd6d7e1a43b4ab1b8743b05def43dc236502e30 d558f69e9832ea996d51a2f568b6f7c60e8f1384 85051903ef8163f131fc1ccb866dbcb389db8664 004c9b06a35aa61fa970d7ddad19f4384939d9e8 8b9f03c8e033e2ce7e01fe3ba2b573e0b9143e96 e52c88180f53d804334eb17cef503109d237c39f 4dd1218e9892e9cc97589ac320950cd5b94ef5e6 810435c4d1df262144d45e999b9dd65d3747fd0a 6a99a4ae28a91a38c9ab8883e36a7fdb410786f0 d14354932808b89d82e45571674979d06de7809f 67e920ca339565bf704c6cbde4a5d833b43b6bb8 f3c9beafccdf072b7fadc940be9231f65440f6e0 e49dd61386dddd1d4b64354a7198f8e02f374ace cafd7de529ba08fdd4920eb4ab85c372f346cb88 133fa937da8dbfe1eb690da110c68520a5c7b3d0 7b3461ac309f568380a75a98fd5a0d7be4c7457e 9f039bb15a3405ce9b7041e11fb5e361c789393d efefe813b0b0284077df11d78ec277c538498abb 48bb06fa54b0618404b7f5bed07065664751a65c 8c7413188a1a3b1b59f538eea6397406110bc33b c38f55e35ec198c1ab64ecacce9b5ee7c4cb5862 4684ca0516d1e48e172f6b9e67286a81b1bde56b 81b9654b68d2fb8ff138614010ea18fb05f4c194 7489e551da4e5393a816319b7f1f514deefca8a2 d2dbfe61e3d6a51371c782605b277ddb851044aa 8d1082d2b249109815e5a6d78429050e09d6cb89 820bbb3a3d47ae16ea2338766eba759b6cfde4e6 d3b6f7da41766f0c0d0213ac79351b2f1cf35d1d bcca09d4c519c94a777474cd801d664e04580bb8 ba7e3d1652aac91db06c9505834b2e3933ad0ee6 4a000f1e50afb2048469d89ee9513b2c20010ce1 34d93e9c648da0eefcf32d8ac575f713106e809b 35403e9193d119f8e9577d5ac0f2cc4634bd7497 d2d03659d5af97454f4ad0ec74f35c188cd5a764 128f17d5b2eeccb8bcc8e5059b74f07a09c65790 bff81e29d1ce94044a63798928789b027a5e95a1 c7f11b1490b805e1c0a620fb0f6865533fcb95f3 56f81a86ec63a82ef62b5ad0ab5b00725bd7da2a ee461a39a38395ce30a186a77088a535cd656cd9 6a7724392e238e6cda2017233b349d67781fc207 6b8b28b8a0b259ee0fcb3040a7eb85723243bfca c1b3f088afb42c1b414987399a31c382059aa7d1 a07b11c029575122929bdc15bc7d424cf95ebeb5 87f45870471e26b76bad89ca6e023b659634e511 73537767cafc5a6ab3fc0694b7b6121614445508 e240a8e7cb731f90b2487378fb6a7d685e02ea57 345c1ccfa43c21fe0895882648aaa29c4fe567d6 2915e1f5b7282d6f0e66658adebdeeff5b2509a5 5a77bc141577867a452c47aa772dca05b468d6e2 1f092fa3d796ee62959eeaa153aad50a6dcac281 1be591b202b82456f1c2cdb64f040f0c4393920d 610600b07ba212f040a891c7773c91b381567b3e 7a1d6a61307f433d7dd0dadf0bf273910bd3bce9 53c44f364cb856b0af1c884579e4675950eb054a c84f2ba7b5cc47d8162d76c97375e837b01dc492 93430abc814b48ed5948a58c22b470b6f1260654 455042aed7230eb0627ffe51f81aa9a90e40b99b fd98f01ccac38a52e256efbeb657505c5f4007e8 f47014d286f51bb87da45fca2c5ca0fa6e9af46f 271a670cd019664558c5f2bfe2c0a27bfecbbcd3,,Spelling,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    This PR corrects misspellings identified by the [check-spelling action](https://github.com/marketplace/actions/check-spelling).    The misspellings have been reported at https://github.com/jsoref/fprime/commit/7e2ad107583c32c2b5d6a5323ece16a125f75150#commitcomment-47823279    ## Rationale    Typos make it harder to work with projects    ## Testing/Review Recommendations    The action reports that the changes in this PR would make it happy: https://github.com/jsoref/fprime/commit/97fb7b323826caa0a92ed9450467adbcba9d2265    ## Future Work    Note: this PR does not include the action. If you're interested in running a spell check on every PR and push  that can be offered separately.  
nasa/fprime,456,2021-03-08T04:00:20Z,2021-03-08T14:54:48Z,True,2021-03-08T14:54:47Z,54983c9e9b6465de4ae78851545b3bad1ebba6d2,6,7,c873bb89e8f24d1693ccc808445d91b8af549b33 75171fc20edea1c0c1449b693ffa7d2493b24b5a 291865ccb23a0fd1372eeede00447d7feca9d1f3 cf60a7dd893a20332ac4d47543e0688765d6d7a3 99cb3805ace38ad6ca84b34b92fa022912166d3f ef288d9fbe1d7eea2aafbe25caa3671e107ca627 389f796871efcbba21edce073ddf066dd487ef19,,Spelling follow up,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Follow-up to #437     This PR corrects misspellings identified by the [check-spelling action](https://github.com/marketplace/actions/check-spelling).    The misspellings have been reported at https://github.com/jsoref/fprime/commit/50dc6bca226f53c1cb805243f62610045d36556d#commitcomment-47977304    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    I'd love to contribute the action -- it's pretty easy to use and helps prevent new typos from being introduced.
nasa/fprime,458,2021-03-08T15:14:19Z,2021-03-08T15:40:15Z,True,2021-03-08T15:40:15Z,5ba6eac07593da9bc782f101e7d90b476fab01a7,1,1,59f5820a1a44ba17bfea3a5222f237c8a399d29f,,Fix typo,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,453,2021-03-07T20:20:29Z,2021-03-08T18:53:39Z,True,2021-03-08T18:53:39Z,73525071a96b1739c0be841ef88e7681f393f6f2,1,1,34ebae82f1a3661d58842d64f02a20c08081aad9,,Enabled exceptions for schematron validation failures ,| | |  |:---|:---|  |**_Originating Project/Creator_**| Bill Allen |  |**_Affected Component_**| Autocoder |  |**_Affected Architectures(s)_**| all |  |**_Related Issue(s)_**| #325  #449  #450  #451  #452 |  |**_Has Unit Tests (y/n)_**| n (see notes) |  |**_Builds Without Errors (y/n)_**| n (see notes) |  |**_Unit Tests Pass (y/n)_**| n (see notes) |  |**_Documentation Included (y/n)_**| existing |    ---  ## Change Description    Enables exceptions when schematron validation fails.    ## Rationale    Better awareness of invalid component schemas.    ## Testing/Review Recommendations    Tests will not pass until the issues #449  #450  #451  and #452 are resolved.  They are `kind="active"` components  but they don't have `async_input` ports as required by the schematron spec.    ## Future Work    None.  
nasa/fprime,465,2021-03-15T12:10:06Z,2021-03-15T15:22:08Z,True,2021-03-15T15:22:08Z,e1624fd8973284aec3a1c08c26732349620c2a6d,1,1,e8b927d727301abce452f75c8e3f0db495e7f635,,Fix typo,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,469,2021-03-23T09:05:24Z,2021-03-23T23:46:20Z,True,2021-03-23T23:46:20Z,70bcfb1452b47afd7f661969f01cfaacd0c42fec,1,1,51d74c12f442b9682d1703823a92c416262bff12,,fix 466 fprime util ignores non default UT executable names,| | |  |:---|:---|  |**_Originating Project/Creator_**| FPrime |  |**_Affected Component_**|  cmake/support/Unit_Test.cmake |  |**_Affected Architectures(s)_**|  cmake ut build|  |**_Related Issue(s)_**|  #466 |  |**_Has Unit Tests (y/n)_**|  N |  |**_Builds Without Errors (y/n)_**| Y |  |**_Unit Tests Pass (y/n)_**| NA  |  |**_Documentation Included (y/n)_**| N |    ---  ## Change Description    `fprime-util generate --ut` assumes the `MODULE_NAME_ut_exe` as the default name for target executable UT.  This won't be an issue if the UT is registered with default name:  As an example line 24 of the following won't be a problem:   https://github.com/nasa/fprime/blob/e1624fd8973284aec3a1c08c26732349620c2a6d/Svc/GenericHub/CMakeLists.txt#L14-L24    The problem arises when UTs are registered with an executable name.  For example line 38 of the following will raise the issue specified in #466 complaining `make: *** No rule to make target Fw_Types_ut_exe.  Stop.`    https://github.com/nasa/fprime/blob/e1624fd8973284aec3a1c08c26732349620c2a6d/Fw/Types/CMakeLists.txt#L35-L38    This PR resolves the issue by registering the default `MODULE_NAME_ut_exe` as target name and adding all UT executables of the module as the dependency of the `MODULE_NAME_ut_exe`.     ## Rationale    `MODULE_NAME_ut_exe` is added as top wrapper for UT build so it could be called by fprime-util.    ## Testing/Review Recommendations    Manually built and ran UT of `Fw/Types`  `Drv/Ip` and `Svr/GenericHub` with no issues.    ## Future Work    Might need to optimize the cmake `generate` option to not include modules that are not related to the target UT.  
nasa/fprime,468,2021-03-22T07:26:28Z,2021-03-23T23:47:44Z,True,2021-03-23T23:47:44Z,0845912142ec08c5fbee320a6d55da94a993c544,1,1,7bd302e344383ad9dc42d5fc1872a031e0d6c4ce,,fix 369 Include CmdPort on components with parameters only,| | |  |:---|:---|  |**_Originating Project/Creator_**| FPrime|  |**_Affected Component_**| cmake/support/parser/ai_parser.py|  |**_Affected Architectures(s)_**| GDS |  |**_Related Issue(s)_**|  #369 |  |**_Has Unit Tests (y/n)_**| N |  |**_Builds Without Errors (y/n)_**|  Y |  |**_Unit Tests Pass (y/n)_**| NA  |  |**_Documentation Included (y/n)_**| N |    ---  ## Change Description    When *ComponentAi.xml only contains parameter and not any command the autocoder does not include  Fw/Cmd/CmdPortAc.hpp  This PR resolves the issue by adding `Fw_Cmd` as implicit dependency of `parameters` in cmake/support/parser/ai_parser.py    ## Rationale    For the rational see https://github.com/nasa/fprime/issues/369#issuecomment-803435465    ## Testing/Review Recommendations    After applying the change was able to successfully build and run the code as shown https://github.com/nasa/fprime/issues/369#issuecomment-803435465    ## Future Work    It should be discussed if command port should implicitly be added to the components that only have parameters without having any command port.  
nasa/fprime,470,2021-03-26T11:45:38Z,2021-03-26T15:59:37Z,True,2021-03-26T15:59:37Z,9ba5e0e8600823f3d8b9078b89bd3aff43e0beea,1,1,77f1f02f4eb1fb177a93128724860053c5775324,,Fixed TypeError after error during code generation,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**| Autocoders/Python/bin/codegen.py |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description    Fixed two TypeErrors which occurred when testing for the questions asked at: https://groups.google.com/g/fprime-community/c/FseVP1xcjSc    ## Rationale    Fixes bug    ## Testing/Review Recommendations    Create a serializable which has an `include_header` element and related member and is sent as telemetry  run `fprime-util build`  no exception should be thrown. Remove the member and the include and successfully compile the project. Add them back in and compile again. This hits both error statements.    ## Future Work    None
nasa/fprime,472,2021-03-30T09:16:15Z,2021-03-30T20:48:10Z,True,2021-03-30T20:48:10Z,98f50f21cef5dfa1787e0c22dcf2193f7672c751,1,1,8f80b06c938b4b6d819c00c414d776d6e16107bf,,Fix typo in svc_prm_db_component html,    | | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    occuring -> occurring  
nasa/fprime,475,2021-04-12T07:17:29Z,2021-04-14T14:05:53Z,True,2021-04-14T14:05:53Z,9c749ae91c48e75ff996953ddc8b8f81e18b93db,1,1,96abf701d215a07403969920ce3a1723881e44af,,Fix 473 GDS updating orb status when client connection drops,| | |  |:---|:---|  |**_Originating Project/Creator_**| FPrime|  |**_Affected Component_**|  datastore.js|  |**_Affected Architectures(s)_**| GDS |  |**_Related Issue(s)_**|  #473 |  |**_Has Unit Tests (y/n)_**|  N |  |**_Builds Without Errors (y/n)_**| Y |  |**_Unit Tests Pass (y/n)_**|  NA |  |**_Documentation Included (y/n)_**| N |    ---  ## Change Description    The following will fix issue #473 GDS Orb does not change when client connection drops.    ## Rationale    GDS orb should show status of data communication by changing state when there is no data from client for a period of time  defined by `active_timeout` in config file or when client connection is dropped.    ## Testing/Review Recommendations    Manually verified the functionality as shown below:    1. Started GDS GUI with client connected and sent few NO_OP commands:    ![Screen Shot 2021-04-12 at 12 02 56 AM](https://user-images.githubusercontent.com/35859004/114355051-e0a4f600-9b23-11eb-9620-8adf9afd857f.png)    2. Dropped client connection:    ![image](https://user-images.githubusercontent.com/35859004/114355174-003c1e80-9b24-11eb-9035-f5222ce52a76.png)    3. Status of orb changed as shown below:    ![image](https://user-images.githubusercontent.com/35859004/114355222-0f22d100-9b24-11eb-9c51-5130b0bf8f63.png)       ## Future Work    NA  
nasa/fprime,481,2021-04-19T13:56:05Z,2021-04-19T14:20:28Z,False,none,956f98a401c1634f69919bc985e3774bfee78547,1,2,42a1e8a0054fc7e8125b4e664d554c62931dca78 8f16f63e3c9f1b3743402f63ce453b479076bcea,,Grammar correction,Fixes #480 
nasa/fprime,476,2021-04-12T07:43:28Z,2021-04-14T14:06:03Z,True,2021-04-14T14:06:03Z,aa663303327587146390dde67b83b9bf4e916d54,1,1,60655dcad31c4f8d865a8bd381eef7f0b40b6199,,Fix 474 Removed hardcoded cmdDisp CMD_NO_OP from GDS GUI,| | |  |:---|:---|  |**_Originating Project/Creator_**| FPrime |  |**_Affected Component_**| vue-support/command.js |  |**_Affected Architectures(s)_**|  GDS |  |**_Related Issue(s)_**| #474 |  |**_Has Unit Tests (y/n)_**|  N |  |**_Builds Without Errors (y/n)_**| Y |  |**_Unit Tests Pass (y/n)_**| NA |  |**_Documentation Included (y/n)_**| N |    ---  ## Change Description    The following will fix issue #474 GDS hardcoded `cmdDisp.CMD_NO_OP` in command.js    ## Rationale    GDS GUI should not break if user does not specify `cmdDisp.CMD_NO_OP`    ## Testing/Review Recommendations    Manually checked the fix as shown below:    Changed the command `cmdDisp.CMD_NO_OP` to `cmdDisp.CMD_NO_OP_TEST`  As shown below GUI did not break:    ![image](https://user-images.githubusercontent.com/35859004/114358141-71c99c00-9b27-11eb-840a-55e64dfeaffb.png)    Also events table was as expected:    ![image](https://user-images.githubusercontent.com/35859004/114358255-902f9780-9b27-11eb-8d2e-dd5455856996.png)    Terminal output was as expected:    ![image](https://user-images.githubusercontent.com/35859004/114358365-b05f5680-9b27-11eb-99d6-df4cb6f2b528.png)      ## Future Work    NA  
nasa/fprime,486,2021-04-20T06:06:13Z,2021-04-22T07:46:40Z,False,none,576509abc2ec767aacd3a213e3730355f595e2f0,1,1,7d1cfb41ceae56005f39dd140c2c70f5ab49fa5a,,Update index md,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,482,2021-04-19T14:38:14Z,2021-04-22T19:33:09Z,True,2021-04-22T19:33:09Z,868825d59dbda5c61187832172f05a1ecec2762b,2,1,e12bbf595eb6124ea52e5045ab6aadd63df7d5ab,,Grammar fixes,
nasa/fprime,493,2021-04-22T04:00:26Z,2021-04-22T19:35:29Z,True,2021-04-22T19:35:29Z,c89f85da12330ba01cc262b95d3a9fb2ed0c627b,1,1,2fabf2bbb3650afa0aba08c80e4c9a53312b8712,,Turn off pip caching for docker build,| | |  |:---|:---|  |**_Originating Project/Creator_**| Matthew Gleich \<email@mattglei.ch> |  |**_Affected Component_**| F´Docker |  |**_Affected Architectures(s)_**| Anything that involves the docker build |  |**_Related Issue(s)_**| N/A |  |**_Has Unit Tests (y/n)_**| N/A |  |**_Builds Without Errors (y/n)_**| N/A |  |**_Unit Tests Pass (y/n)_**| N/A |  |**_Documentation Included (y/n)_**| N/A |    ---  ## Change Description    Dependency installations via the pip package manager no longer utilize the caching feature in the docker build.    ## Rationale    A best practice when working with dockerfiles is to effectively utilize the caching system. The pip install steps are already being cached by the docker build system. This means that the cached dependencies made by pip are being wasted and stored for no reason. A fatter image might not a concern here but it is always a good idea to follow the best practices.    ## Testing/Review Recommendations    To ensure that the docker image still works you could run a simple test. From my end  the build still works.    ## Future Work    N/A  
nasa/fprime,494,2021-04-22T07:47:16Z,2021-04-22T19:36:09Z,True,2021-04-22T19:36:09Z,5f112b666cd854299e81574d232db8b34feb1267,1,1,6f3262a425de460471eebee856c36c096e473387,,Remove extra space,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,491,2021-04-21T15:11:04Z,2021-04-22T19:38:52Z,True,2021-04-22T19:38:52Z,a66bb82d9add901b81e0a7d5044220b1b8b79852,1,1,40c55cd8ce1e310752655257cbbdbc4c06c07bdb,,Added a missing break statement to the OPEN_SYNC_DIRECT case,| | |  |:---|:---|  |**_Originating Project/Creator_**| F Prime |  |**_Affected Component_**| FileStub.cpp |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**| #490 |  |**_Has Unit Tests (y/n)_**| N |  |**_Builds Without Errors (y/n)_**| Y |  |**_Unit Tests Pass (y/n)_**| NA |  |**_Documentation Included (y/n)_**| N |    ---  ## Change Description  Closes #490.  A break statement was missing in one of the switch cases. Fixed it  by adding it.      ## Rationale  Fixes the switch fall through issue mentioned in #490.    ## Testing/Review Recommendations    General automation testing.    ## Future Work    N/A  
nasa/fprime,489,2021-04-20T14:49:20Z,2021-04-22T19:41:45Z,True,2021-04-22T19:41:45Z,76eb3b901bd0fc5dea7803df373c34ba0b5fd152,2,2,87292dbd1929126a9758808f97c05ba2e56b8900 cba76fc395dd3db92fd22597f03cb09ff06b9219,,Fix 487 Adding option to fprime gds to set Flask host and port number,| | |  |:---|:---|  |**_Originating Project/Creator_**| F Prime |  |**_Affected Component_**|  run_deployment.py |  |**_Affected Architectures(s)_**|  GDS |  |**_Related Issue(s)_**|  #487 |  |**_Has Unit Tests (y/n)_**|  N |  |**_Builds Without Errors (y/n)_**| Y |  |**_Unit Tests Pass (y/n)_**|  NA |  |**_Documentation Included (y/n)_**| N |    ---  ## Change Description    Adds options to `fprime-gds` for setting Flask server host address and port number.  The new options are:  ```  --gui-addr: Set the GUI server address [default: 127.0.0.1]  --gui-port: Set the GUI server address [default: 5000]  ```  ## Rationale    As described in #487 there was no option in `fprime-gds` to set the host and port number of Flask server. Changing these options might be needed when running GDS GUI from a containerized environment such as docker.    ## Testing/Review Recommendations    Manually tested the functionality on both Darwin and Linux platforms as shown below:    From Darwin ran `fprime-gds -n --gui-addr localhost --gui-port 4000`    ![image](https://user-images.githubusercontent.com/35859004/115411967-c9f84200-a1a8-11eb-809c-5c0c7da08d2a.png)    From Linux ran `fprime-gds -n --gui-addr 0.0.0.0 --gui-port 8000`    ![image](https://user-images.githubusercontent.com/35859004/115416020-3d4f8300-a1ac-11eb-93a9-d9523436ad19.png)    ## Future Work    NA  
nasa/fprime,492,2021-04-22T02:58:45Z,2021-04-22T19:34:21Z,True,2021-04-22T19:34:21Z,79c6137997998da30b46e70f1f62984e821592d3,6,1,6b6fc594f0d4238a30c0c45e2827a315c0bcdcba,,Corrected minor typos in md and html documentation,| | |  |:---|:---|  |**_Originating Project/Creator_**|n/a |  |**_Affected Component_**| n/a |  |**_Affected Architectures(s)_**|n/a  |  |**_Related Issue(s)_**| n/a |  |**_Has Unit Tests (y/n)_**| n/a |  |**_Builds Without Errors (y/n)_**|n/a  |  |**_Unit Tests Pass (y/n)_**| n/a |  |**_Documentation Included (y/n)_**|y  |    ---  ## Change Description    Corrects common spelling errors in project documentation.    ## Rationale    n/a    ## Testing/Review Recommendations    Second set of eyes    ## Future Work    None  
nasa/fprime,496,2021-04-23T07:19:43Z,2021-04-24T17:54:52Z,False,none,10cfc46278fc20ba4a92a7c373219fa3a4ea96e1,4,1,0571e9264ad27d1ea5f80e7c1b73950f14dd0cb4,,add responsive layouts,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    CSS update for better responsive display on mobile devices  add overflow for .toctree-wrapper.compound and new class .table-responsive  Before :  ![1](https://user-images.githubusercontent.com/37553901/115833647-7e5ec600-a43e-11eb-8304-8c2eb7351b27.png)  After :  ![2](https://user-images.githubusercontent.com/37553901/115833655-80288980-a43e-11eb-80dc-407ac5ffbb71.png)      ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,467,2021-03-18T09:06:44Z,2021-04-24T18:04:41Z,True,2021-04-24T18:04:41Z,1bdb7946703770fd27ef8fa7e173df6c37e41e5f,5,6,82213c96e930f02737281a0e62b44384dd6085cc b255ddec5a995e17c047ceacaca79ba7412e48b7 10a8b629a23a883658863dd1c899131c407c809a 9960899129905981f99e6c8e577c9e0f489dc455 f43d1a96730db2cb6c92170e6edf7656ee3dbbb4 3c02392727e1f5a0998bfd9470f67515c4ee7766,,fix 349 GDS decoding ENUM events incorrectly,| | |  |:---|:---|  |**_Originating Project/Creator_**| FPrime|  |**_Affected Component_**| events |  |**_Affected Architectures(s)_**| GDS |  |**_Related Issue(s)_**|  #349 |  |**_Has Unit Tests (y/n)_**| Y |  |**_Builds Without Errors (y/n)_**|  Y |  |**_Unit Tests Pass (y/n)_**| Y  |  |**_Documentation Included (y/n)_**| Y |    ---  ## Change Description    Old style Python %-formatting string interpolation is removed from the `events`.  GDS Python code could throw an exception when the string format defined in the componentEventAi.xml did not have the expected string format value.  For example  the following event format_string could potentially break the GDS Python code since %-formatting expects an integer  but Enum in the form of string is passed to GDS:    ![image](https://user-images.githubusercontent.com/35859004/111595686-98472200-8789-11eb-879e-154f7443efa9.png)    ## Rationale    Python code should not break if user defines Enum as %d in the event string format.  With this fix using %d as the placeholder for Enum will not break the Python code. The correct string value of Enum will be shown in the event page and event log in GDS.    Note 1: The fix still expects correct Hex format (e.g. %04X) and will raise a ValueError if a string is proved in place of expected Hex value.    Note 2: This function will keep the flags  width  .precision and length of C-string template. It will remove all types so they could be duck-typed by the Python interpreter except for hex type X or x.    ## Testing/Review Recommendations    Mutated fprime/Ref/SignalGen/Events.xml to have:  ```C++  format_string="Set Frequency(Hz) %d  Amplitude %f  Phase %f  Signal Type %d"  ```    Tested the output as shown below with expected values:  ![image](https://user-images.githubusercontent.com/35859004/111597236-35ef2100-878b-11eb-89d0-98b75614f918.png)    ![image](https://user-images.githubusercontent.com/35859004/111597267-3be50200-878b-11eb-8e9d-76163b0d6109.png)    The unit test can be found here: fprime/Gds/test/fprime_gds/common/utils/test_string_util.py     ## Future Work    This update will not fix the std out to show the Enum string if %d is used as string format.    If we have the following:  ```C++  format_string="Set Frequency(Hz) %d  Amplitude %f  Phase %f  Signal Type %d"  ```  The output will still show this:  ![image](https://user-images.githubusercontent.com/35859004/111597015-050eec00-878b-11eb-9883-1c9d72489ccf.png)    Instead of this:  ![image](https://user-images.githubusercontent.com/35859004/111597039-0a6c3680-878b-11eb-89ad-3ec1df62a2ed.png)      
nasa/fprime,488,2021-04-20T08:23:53Z,2021-04-24T18:14:51Z,True,2021-04-24T18:14:51Z,126826aa51498a941c137eed47cd47d877db7d20,4,1,b7250a9508ce5d817cdf6f515173c00a3e62a3cb,,Formatted and refactored docs,Signed-off-by: Rajiv Ranjan Singh <rajivperfect007@gmail.com>    |                                    |     |  | :--------------------------------- | :-- |  | **_Originating Project/Creator_**  |     |  | **_Affected Component_**           |     |  | **_Affected Architectures(s)_**    |     |  | **_Related Issue(s)_**             |     |  | **_Has Unit Tests (y/n)_**         |     |  | **_Builds Without Errors (y/n)_**  |     |  | **_Unit Tests Pass (y/n)_**        |     |  | **_Documentation Included (y/n)_** |     |    ---    ## Change Description    - Formatted the markdown file according to to the Prettier format.  - Fixed grammatical mistakes in `features.md`  `index.md`  `INSTALL.md` and `projects.md`.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,498,2021-04-24T13:00:38Z,2021-04-24T19:10:16Z,True,2021-04-24T19:10:16Z,e165c914b0d0240eba8164c52f8856ce90bee3dc,77,2,f2bfbd67a4a4746a24ec7e23c4ea54210b99b39b ef8c6dc8f2ba4ead8aaa0f7f6b8a05fde2ec8edc,,Remove extra whitespace for markdown template,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Remove extra whitespace in markdown    ## Rationale    cleanup    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,462,2021-03-12T21:31:33Z,2021-04-27T19:53:39Z,True,2021-04-27T19:53:39Z,e7b53e0159bc011c58e32c8b97a141d92e4d7c9d,5,3,6ff1949f8554690a4f061fd70005a6b650154c2e 7cc8cb53d031bb3aeaaf0408d8b684666e5b8154 d50fedb30bbc039f820aebd8c1f9e4eadf48159f,,Refactor topology dictionary generation,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Autocoders |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    It gets rid of a lot of code duplication and unifies the way  codegen.py and gds_dictgen generate topology dictionaries.    ## Rationale    Similarly to #241  there are duplicate serializable entries in dictionaries  and duplicate removal is done in [gds_dictgen.py](https://github.com/nasa/fprime/blob/12c478bd79c2c4ba2d9f9e634e47f8b6557c54a8/Autocoders/Python/bin/gds_dictgen.py#L215)  but not in codegen.py. A lot of code was duplicated and implementations diverged over time. With this change  topology dictionary generation will be unified. In process of extracting common code some potential issues were found. For example  "arg" object [here](https://github.com/nasa/fprime/blob/12c478bd79c2c4ba2d9f9e634e47f8b6557c54a8/Autocoders/Python/bin/codegen.py#L777) and [here](https://github.com/nasa/fprime/blob/12c478bd79c2c4ba2d9f9e634e47f8b6557c54a8/Autocoders/Python/bin/codegen.py#L803) is actually "leaked" from [for loop of another functionality](https://github.com/nasa/fprime/blob/12c478bd79c2c4ba2d9f9e634e47f8b6557c54a8/Autocoders/Python/bin/codegen.py#L704)    ## Testing/Review Recommendations    Check if changes to generated dictionaries are correct.    ## Future Work    None  
nasa/fprime,501,2021-04-26T16:48:31Z,2021-04-27T19:54:46Z,True,2021-04-27T19:54:46Z,4d93edd638fb737c695ffd469d3ebcc7ab112edd,1,1,3f1ec4de1a67abbd2e7d363212cca3e31a6036ce,,Fix copy paste error resulting in identical condition,| | |  |:---|:---|  |**_Originating Project/Creator_**| @LeStarch (I think) |  |**_Affected Component_**| `/Drv/SocketIpDriver/ |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**| #497 |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description    As the comment suggests  the intent was to catch all /other/ errors.    ## Rationale    This PR should fix a bug where a repeated condition caused most errors on `send()` and `sendto()` to be ignored and the contition itself could never be true on line 231.    ## Testing/Review Recommendations    Hopefully I haven't missed anything and this bugfix is as easy as it looks.    ## Future Work    None.  
nasa/fprime,500,2021-04-25T00:02:23Z,2021-04-28T03:17:08Z,False,none,07be5ed771e430a7dac5a9de249be90edf398e74,6,1,026060209e2a1aefc1ef2755d56efc4c159c0ef4,,fix docs corrects common typos in project documentation,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| docs |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  n|  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    A description of the changes contained in the PR.  Scope of changes is restricted to HTML docs. Changes made in agreement with Standard American English.  ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,507,2021-05-03T20:15:26Z,2021-05-04T17:19:42Z,True,2021-05-04T17:19:42Z,dcd62b8b4221a221471e3b47c0508f0bd8e81118,5,4,195a783ace21d5be450a52c996e3972b173401e2 a3d19bc37b17f8954c43bf87904ab8b6f8e0fb58 bb8fb15ec36fc8f64aa026486840019aa13cee07 811beae18717f26277c1091feba4ee1db56d481c,,I2C return status enumeration into its own EnumAi xml,  | | |  |:---|:---|  |**_Originating Project/Creator_**|  OWLS / Brandon Metz|  |**_Affected Component_**| LinuxI2cDriver |  |**_Affected Architectures(s)_**| All |  |**_Related Issue(s)_**| None. |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| n/a |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description    Broke out the return status enumeration into its own EnumAi.xml  this allows us to use the status returned in EVRs along with all the other benefits.     ## Rationale    Would like to be able to use the i2c return status in EVRs and be able to assign it to a variable for later use.     ## Testing/Review Recommendations    None.     ## Future Work    None.
nasa/fprime,508,2021-05-04T03:38:48Z,2021-05-04T17:26:48Z,True,2021-05-04T17:26:48Z,ac3cd69f0710773166ed4b5d76541485c7d96193,1,1,facd098f0deaafc9bac7605f9ead8d72798c8ee9,,Fix ShellCommand to correctly calculate buffer size,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| FileManager |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| n/a |    ---  ## Change Description    When executing a FileManager::ShellCommand command  We allocated 10 bytes to hold `eval '%s' 1>>%s 2>&1\n`  minus the string substitution. This string was actually 18 characters (including the null terminators)  leading to potential truncation of the end of executed command if both the supplied command and the output logfile were at maximum length.    ## Rationale    Removes a bug that could lead to unexpected behavior when running FileManager::ShellCommand.     ## Future Work    Run more static analysis on the F' framework  which would likely have caught this.  
nasa/fprime,485,2021-04-20T04:29:01Z,2021-05-05T19:09:50Z,True,2021-05-05T19:09:50Z,9eb695ff720340f8b83167c559faf9de40ed971b,3,9,062cc4487a3cc14f58fc81161c51787e091078c2 14d9bc27c675aa7be33681ec1fa43bfd71d2ce18 c183a958bcf42f82e1614f60be4d35e6feee29d4 2f6c373b5fedf58bcc5498e51046de50f42615c2 c2367d68a3c037228d7b5061ce4d62e4d2a3594e 4a7161a86a5448ca461ea866b69e10dae8fe2731 405b3b1242d928f054e076b6c2f0d329c99b31fb 484a8c9287782dad663e21933d89450777c798a8 f46ce5df004d607ab3fe2e864ed27e9ff362666e,,Add one liner command for installing pre requisites,  | | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    I added a one-liner command :  ```  sudo apt-get -y install cmake git python3-pip  ```  that will ease the install of pre-requisites.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    I have already tested this one-liner and it lays out the proper results.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,514,2021-05-05T16:15:47Z,2021-05-05T20:25:18Z,True,2021-05-05T20:25:18Z,7219f13ec9fdf2172eb349582bd0601c35a3ffc2,5,6,7f9bc1286683fb29903e545db94de8045df13dfd 27b25a81c55d57545ccfa5c2e92fe18b5d132182 d3088f90d6c385f78dca5d6ad7208fb5db7f15c7 f3d45d7fbbc25c291f3ac293d3c60aa50464edb3 8ff9803a9db1ae724492a672ee3e8946fd14e603 93b4d257660c19759a7b4d9eb18072c91ea07f68,,python3 6 is now lower bound,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Python |  |**_Affected Architectures(s)_**| |  |**_Related Issue(s)_**| #422 |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description    A description of the changes contained in the PR.    python3.6 is now lower bound    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    python3.5 is EOL    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.    Not 100% related but I was wondering if there are any plans to bring the packages to PyPI as I was thinking about porting this to conda-forge (Which can either pull from GitHub or PyPI with the latter one being the recommended approach).  #405 exists but hasn't gotten much traction yet.
nasa/fprime,445,2021-03-05T06:56:14Z,2021-03-11T15:26:30Z,True,2021-03-11T15:26:30Z,12c478bd79c2c4ba2d9f9e634e47f8b6557c54a8,2,5,67b1f8ec02349218e995a99ec31008bc3e14ffa7 f16b65bef9540b8c308dd8464f8d596e7b55271b 5eb9655995d633cdf7995d98c17778b3f2f92cf5 1cd9eea112b5536cafceb4cd4a686f0120279d57 9550551b5c96469b4b68d41f3ba4922509771f7a,, Docs Fixes to unit testing MathComponent tutorial,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Docs |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**| #332  #382 |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    This PR:  - fixes outstanding feedback about unit testing in https://github.com/nasa/fprime/issues/332#issuecomment-782578294  - tweaks syntax in the MathComponent tutorial based on https://github.com/nasa/fprime/pull/382#issuecomment-782481943  - Rewrites the unit testing doc for clarity about build flags  selecting libraries  and code coverage    ## Rationale    This PR takes action on feedback in the originating issue (#332) and a partial fix to that issue (#382).     ## Testing/Review Recommendations    Sorry this took me a couple of weeks to get to. 😅     @LeStarch Please verify that [this syntax](https://github.com/nasa/fprime/pull/445/files#diff-b5ac4d3af2fe521ce436dae727dbb974004de395712d123343695c7d55a30bd3R2130) is correct.    @saba-ja Some specific pieces to review:    1. [Adding flags](https://github.com/nasa/fprime/pull/445/files#diff-4113f0ae97457c9ff94d06e2e0fbc7575b6273e0f68ec0c00fe0b878590dc23cR193-R201) for `--all`  `--leak`  and `--coverage` to `fprime-util check`       I populated a table with flags extrapolated from the [builder script](https://github.com/nasa/fprime/blob/5d631af802664719a2de61bf22cf0a1cf3b2dc9f/Fw/Python/src/fprime/fbuild/builder.py#L592-L618). I'm not convinced that a table is the best way to present these flags  but it _does_ get the content onto the page.       Is [this syntax](https://github.com/nasa/fprime/pull/445/commits/5eb9655995d633cdf7995d98c17778b3f2f92cf5#diff-4113f0ae97457c9ff94d06e2e0fbc7575b6273e0f68ec0c00fe0b878590dc23cR201) correct:       ```sh     fprime-util check --all coverage     ```       ...Or should there be whitespace between parameters? For example:     ```sh     fprime-util check --all  coverage     ```       Is the information on flags otherwise correct? Are any changes required?    2. Test libraries       I separated content about libraries for testing and code coverage into separate sections. I also rewrote each section based on my best understanding.        Does the altered information architecture make sense?       Is the updated text accurate? Are any changes required?    ## Future Work    - Add more information and explanation about memory leaks in unit tests  - Rewrite the entire unit test page for clarity and consistency
nasa/fprime,524,2021-05-06T10:19:47Z,2021-05-06T20:17:45Z,True,2021-05-06T20:17:45Z,3254e192826d429f65e066d18c1aa04309012fb0,5,7,077f007faf126078a02495ecb10a1572580c7bd2 20df5d6c4bffa08fbbaf07b3ca90c2a03f27c051 09fde67e44a99120eed1c1845d6c3caa41ccbb2b 713d04e65c6c7fc45e43eb953382c83cdcb47ab7 f720e223e174cd15aa1c2f324ef2339c18a8e08b 043ded82a0187d80868796fec3ec0102a3b80846 f1403af1d5934289ff93f4cb5fd6babb6c305597,,Remove unused dependencies from GDS,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| GDS |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**| Closes #521 |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description    A description of the changes contained in the PR.    Removes unused dependencies     ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    Decluttering    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.    WX is still mentioned at     https://github.com/nasa/fprime/blob/222048e67978f32f591e873c2a7157f6c6add06a/Gds/src/fprime_gds/executables/cli.py#L33-L38    and Python 2 at    https://github.com/nasa/fprime/blob/222048e67978f32f591e873c2a7157f6c6add06a/Gds/setup.py#L14    Should these be removed as well?
nasa/fprime,527,2021-05-06T18:35:53Z,2021-05-07T14:47:54Z,True,2021-05-07T14:47:54Z,d4bf0dfc3b2ff742691b669401206d8e1bcf0419,2,3,276f0a1f8e12fec62590de53a47b059b6593038c a06975f6232b11cf663611fdf195dfd504ceb71c d6399779c3b7e7a3872429c727c766bb74222ff2,,Minor documentation changes,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,506,2021-04-29T21:35:13Z,2021-05-02T23:21:26Z,True,2021-05-02T23:21:26Z,33da033d954bfa8634e10d741f3baf9339563c9b,6,1,f8c3cae3f0b3f0d687b08b4741c8ecaab4b34ba9,,Add default_ut_toolchain settings option,  | | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| fprime-util |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y  |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y  |    ---  ## Change Description    Adds a `default_ut_toolchain` option to settings.ini file    ## Rationale    Right now  setting a default toolchain also would also set your default toolchain for building/running units tests.  Most of the time however  users build their unit tests for a platform different than they target their normal builds.    For example  a user may target an embedded system for the deployment but design the unit tests to run natively on linux.    Because of this split between target toolchain and unit test toolchain  the user will always need to override the platform  when building either the target or the unit tests.    This change allows users to separately configure the target and unit test toolchain.  Setting the default_toolchain has no effect on the default unit test toolchain and vice versa.  If either default toolchain is unset  it will default to a native platform build.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,532,2021-05-07T22:57:51Z,2021-05-09T17:01:43Z,True,2021-05-09T17:01:43Z,20a7f7737158afe96a09681f23705e0277ceb8c9,2,1,b9a211c5fd9422c4fe83a9ae21dff458a47e0349,,Bugfix for UnboundLocalError in SerializableType,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Bugfix for `UnboundLocalError` in SerializableType  including unit-test.    ## Rationale    The docstring on SerializableType declares that 'the member descriptions can be None'.  However if you actually pass `None` (or don't pass the list at all  given that None is set  as the default kwarg)  then you get an `UnboundLocalError: local variable 'new_mem_list' referenced before assignment`  due to the `if mem_list` branch hiding the creation of the `new_mem_list` local variable.    This change adds a default binding as `new_mem_list = []` so that in the case of an empty `mem_list`  or `mem_list=None`  then the object will always be initialised properly.    A check has been added to the existing SerializableType unit test verifying this behaviour. If you remove the change from the class constructor and run the updated test you will get the UnboundLocalError.    ## Testing/Review Recommendations    Run the python tests  to verify the original bug  comment out the new line in the SerializableType constructor.    ## Future Work    N/A  
nasa/fprime,539,2021-05-11T18:58:43Z,2021-05-11T22:02:53Z,True,2021-05-11T22:02:53Z,1fffe228c711942fbfb4cb17d350a2c6e2ff69b5,1,1,82b196ec187b9ec09fd9432e2566be83a09027ac,,Array U8 autocoder fix,| | |  |:---|:---|  |**_Originating Project/Creator_**| Brandon Metz |  |**_Affected Component_**| Array Autocoder |  |**_Affected Architectures(s)_**| All |  |**_Related Issue(s)_**| None. |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| na |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    When trying to create an array with type U8:  ```  <array name="SpikeDuration" namespace="Backplane">      <type>U8</type>      <size>16</size>      <format>%d</format>  ...  ```    You'll get the following build error:    ```  error: â€˜U8â€™ is not a class  namespace  or enumeration  U8::SERIALIZED_SIZE  ```  and points inside the the autocoded array class at the following line:  ![image](https://user-images.githubusercontent.com/2592986/117869568-ce67c600-b24f-11eb-8cef-3e947c162c34.png)      ## Testing/Review Recommendations    @LeStarch investigated and found the duplicate line of `I8`  upon renaming the first `I8` to `U8` the project was able to build successfully.     ## Future Work    None.
nasa/fprime,523,2021-05-06T02:19:31Z,2021-05-11T22:30:57Z,True,2021-05-11T22:30:57Z,e1c243e43870d37aa75034f939aab765640cdfac,3,1,da8f11eee6a2a02483e08fa71d0125c8a199ec5e,,FileDownlink Don t return an error status if attempting to transfer past EOF,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| FileDownlink  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y  |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description    Return a OK status instead of INVALID when attempting to send a partial chunk past the end of a file.    ## Rationale    Often times file sizes aren't known before sequence execution because they're generated in the same sequence as the file downlink. This can make commands like SEND_PARTIAL dangerous because if the file is smaller anticipated  they can return an INVALD error to the command dispatcher  aborting and preventing execution of the remaining sequence.    While attempting to send a chunk past the end of a file is an error  it's very rare that the rest of sequence is dependent on the success of a file downlink (see the FILEDOWNLINK_COMMAND_FAIL_ON_MISSING_FILE option).    Returning an ok command status but raising an WARNING_HI event seems like a decent compromise.    ## Future Work    Should this be tied into the FILEDOWNLINK_COMMAND_FAIL_ON_MISSING_FILE option to make this behavior configurable?     I don't think this is a perfect solution. I could definitely anticipate some users who might prefer to abort a sequence in the presence of a file downlink error (like possibly when transferring files between different computers in a hub topology).  I think the ideal solution would be a more advanced command sequencer redesign that allows users to indicate that certain commands are allowed to fail. However  I think this fix to make FileDownlink a bit safer is the right move until a command sequencer redesign occurs.
nasa/fprime,545,2021-05-12T03:00:20Z,2021-05-12T03:22:15Z,True,2021-05-12T03:22:15Z,f28c298cb1fc5f828e484e2aa5fefdb8c1c68a03,2,1,b4a2a9bb11cf6256e807e60c9be305ddd406b10c,,saba js fixes 543 by freezing dependencies,| | |  |:---|:---|  |**_Originating Project/Creator_**| F Prime |  |**_Affected Component_**|  GDS  Fw/Python|  |**_Affected Architectures(s)_**| setup.py |  |**_Related Issue(s)_**|  #543|  |**_Has Unit Tests (y/n)_**| No |  |**_Builds Without Errors (y/n)_**| Yes |  |**_Unit Tests Pass (y/n)_**|  NA |  |**_Documentation Included (y/n)_**| No |    ---  ## Change Description    This PR freezes current dependency packages in GDS/setup.py and Fw/Python/setup.py to the latest version of working third party libraries.    ## Rationale    Third-party libraries change frequently and some updates might not be backward compatible.  These dependencies should be updated periodically after thorough testing and verification by the maintainers.    As shown below Flask 2.0.0 was released to PyPI and on May 11 2021 and it is not compatible with current F Prime GDS.    https://pypi.org/project/Flask/#history  ![image](https://user-images.githubusercontent.com/35859004/117911868-5b803e80-b293-11eb-8308-93dd8c717c70.png)      ## Testing/Review Recommendations    Manually checked for build and execution of F Prime Ref    ## Future Work    Find a way to be notified on the updates on the third party libraries and perform update whenever needed.  
nasa/fprime,544,2021-05-12T01:48:14Z,2021-05-13T03:39:47Z,False,none,a28be69e300e7f65b1dc159c474c4dcd3830c5ec,1,1,dc9e298710febad07b816c97a9c28e1daacc09cc,,Add editorconfig,Change editor indentation settings automatically.
nasa/fprime,533,2021-05-08T10:03:04Z,2021-05-13T17:00:58Z,True,2021-05-13T17:00:58Z,67b7a7d7177af832c02893bac5db2a22a4b8e7fe,2,1,46bbcfb6a76479c52702100e4e8b31d6aca40b01,,Make abstractmethods consistent in BaseType,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Adds the AbstractMethodException to `serialize` on BaseType to be consistent with the other `abstractmethod`s. Includes a new unit-test to validate the underlying behaviour of `BaseType`.    Also removed a superfluous multiple inheritance of `ABC` on `ValueType`. The intended behaviour of enforcing the `abstractmethod`s on `ValueType` is also now validated in the new unit-test  showing no behavioural changes.    ## Rationale    All the other `abstractmethod` implementations on the BaseType ABC just `raise AbstractMethodException`. This PR makes a one-line change to add the same exception raise to `def serialize`.    However  these `AbstractMethodException` raises are only reachable by explicitly calling `super()` from a subclass  as the ABC machinery will stop users from instantiating a subclass which doesn't override the abstractmethods. As a result the unit-test validates each variant of this behaviour.    ## Testing/Review Recommendations    Run the unit-test; there is a `Dummy` class to demonstrate the intended ABC behaviour of BaseType  which can be trivially modified to call `super()` to confirm the behavioural changes.    ## Future Work    Maybe a wider discussion around whether `AbstractMethodException` is the right name/implementation for what it's being used for. The error message from AbstractMethodException says '%s must be implemented since it is abstract'  however that's a given due to the ABC base class and `abstractmethod` decorator  so the only way to actually invoke the exception raise is to subclass and implement all required methods  and then call `super()`.    At the very least I think the message in AbstractMethodException could be changed to be more relevant to the only applicable failure scenario - maybe the string could be `f"you have just called an abstract method on the base class of {self.__class__.__name__}  which is a coding error"`  or similar.    
nasa/fprime,477,2021-04-12T16:35:45Z,2021-05-14T00:13:00Z,True,2021-05-14T00:13:00Z,4abc8e5fd28124ed6ca7d7d020719bc40fb0dc15,1,4,8b6b95bbb21b88946c15719ece9cf5d3a1ba35c7 1edb2cd5fb69c101e7e18609200e4f562d9201d7 26d403b8a2e50f53db48209f0aefa1895dc58a8d aea0fc34d10662309ed7aa88d7abe24d682032fa,,Fix 471 Adding a MAX enum item as the last item in the external enum,| | |  |:---|:---|  |**_Originating Project/Creator_**| FPrime |  |**_Affected Component_**|  External enum_hpp.tmpl |  |**_Affected Architectures(s)_**|  Autocoder |  |**_Related Issue(s)_**|  #471|  |**_Has Unit Tests (y/n)_**|  N|  |**_Builds Without Errors (y/n)_**| Y |  |**_Unit Tests Pass (y/n)_**| NA |  |**_Documentation Included (y/n)_**| N |    ---  ## Change Description    This PR will add feature requested in #471 by adding a `MAX` enum item as the last item in the external enum.    ## Rationale  The fix is adding `${name}_MAX = ${int(item_value) + 1} ` after the end of template for loop as shown below:  ```c++      typedef enum {  #for $item_name $item_value $item_comment in $items_list:  #if not $item_value == ""  #if not item_comment == ""          ${item_name} = ${item_value}  //!< ${item_comment}  #else          ${item_name} = ${item_value}   #end if  #else  #if not item_comment == ""          ${item_name}  //!< ${item_comment}  #else          ${item_name}   #end if  #end if  #end for          ${name}_MAX = ${int(item_value) + 1}        } t;  ```    The assumptions are   1. External enums cannot have empty `value` (See `#if not $item_value == ""` in the code above).  2. External enums cannot have string value (Enforced by compiler).    In the code above the last `item_value` will be incremented by `1` and will be assigned to the last item of the enum with the name of external enum class concatenated to the word `_MAX` as shown in the last line of code above.    ## Testing/Review Recommendations    Manually checked the autogenerated code on some external enums and verified that the `_MAX` item is added.  The followings are two examples of the result:    ![image](https://user-images.githubusercontent.com/35859004/114429060-cbef4f00-9b71-11eb-87e1-cc34175054e7.png)    ![image](https://user-images.githubusercontent.com/35859004/114429228-f7723980-9b71-11eb-9f2e-805512d37e42.png)    ## Future Work    NA  
nasa/fprime,541,2021-05-11T20:42:01Z,2021-05-14T01:47:58Z,True,2021-05-14T01:47:58Z,25ceeefd30ecc1b6a01e0eefbcbf956e3d82e00a,11,1,44160148966eb3205a257dadd72529a2bbc1e32a,,lestarch adding options for stubbed drivers and baremetal scheduler,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| CMake |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Added switches to turn on/off the baremetal scheduler and stubbed drivers.  In this way these features can be enabled/disabled.  This allows breaks the hard-dependence on platform for drivers.    Documented switches in cmake/options.    ## Rationale    "Big" features are nice to be able to throw a switch at the command line when generating.  "BIg" features mean items that have a build-system and C++ component to them.      ## Testing/Review Recommendations    Tested on darwin that all the defaulting and switching and error cases work.    
nasa/fprime,538,2021-05-11T18:22:45Z,2021-05-11T22:03:05Z,False,none,3a230f6a8cb1afa2010174ee1d0f6d0248b5d145,2,1,3f71f1f0b854d8c11cd3b4f139913efa0182e313,,lestarch add in different checksum calculations,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| Gds |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**| #537 #515  |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| n/a |  |**_Unit Tests Pass (y/n)_**| n/a  |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description    Minor fix to allow GDS to support multiple checksums as needed for #515     ## Rationale    Different ground interfaces have different checksums.  This is a minor fix to a (hardcoded) switch to set which is preferred. See below.    ## Testing/Review Recommendations    Ran with old GroundInterface.  It worked.  Will test with new Deframer under #515.    ## Future Work    Allow GDS to be configurable such that this is not a hardcoded value.  See #537 
nasa/fprime,529,2021-05-06T19:40:37Z,2021-05-06T20:30:40Z,True,2021-05-06T20:30:40Z,794ce7c6669338f708a1d6cf34f7535312efafd9,8,3,c94d1adac59794353fc0647054db8b26d795d981 fe73216a1bd6f909c0539a279b0c7fa95ceff7cc 1ee614157ffe0a3b93407a6b668cd552f1cf3ea4,,lestarch fixes 518 and associated UT failures,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| CI and UTs |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  #518 |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y  |  |**_Documentation Included (y/n)_**| n/a |    ---  ## Change Description    Adds in memory leak check into CI suite.  Fixes memory leaks that would break CI.    ## Rationale    Memory leaks are important to catch in FSW and this will make them appear in CI as build failures.
nasa/fprime,366,2021-02-12T03:02:27Z,2021-05-06T23:05:21Z,True,2021-05-06T23:05:21Z,38591fbb7200ee782aa0270ee792fac1074a8bcd,33,2,7ab6b0d3ebe06088aa9be46fc4d8c922581e9107 120a42d1c311cb0f3d4523fb8c517cd75e648e88,,lestarch refactored buffer manager with fixes from 238,Co-authored-by: Timothy Canham <timothy.canham@jpl.nasa.gov>  Co-authored-by: saba-ja <saba.janamian.663@my.csun.edu>    | | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| BufferManager |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    Replaces the #283  PR with this one.  Same code  fixes issue brought up in #283 thanks to @saba-ja help.    ## Rationale    Infrastructure team took ownership of #283.    ## Testing/Review Recommendations    ## Future Work    Should design and implement an efficient version as noted in #283.  For now  this implementation work and is deemed fit for service until a more efficient algorithm is realized.  
nasa/fprime,522,2021-05-05T23:44:03Z,2021-05-06T03:25:50Z,True,2021-05-06T03:25:49Z,222048e67978f32f591e873c2a7157f6c6add06a,2,1,7d1033f41e93a7808b4eaecb3ed9b197d636c85f,,lestarch minor documentation corrections fixes 413 and 425,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| Documentation |  |**_Affected Architectures(s)_**| n/a |  |**_Related Issue(s)_**| #413 and #425  |  |**_Has Unit Tests (y/n)_**| n/a |  |**_Builds Without Errors (y/n)_**| n/a |  |**_Unit Tests Pass (y/n)_**| n/a  |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    Fixes documentation minor issues.
nasa/fprime,460,2021-03-08T16:16:19Z,2021-05-05T17:48:54Z,True,2021-05-05T17:48:54Z,4190bab405cecec4a8d83c20cdee77d574cb35d2,46,2,8b4e870082ced90ca67357a6a4205c420031b907 251418bd864d688dbf4158464be406a7520a2195,,Update ipv4 drivers,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastrcture |  |**_Affected Component_**|  IP |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**|  y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**|y  |    ---  ## Change Description    Rework IPv4 code      See #354 
nasa/fprime,503,2021-04-27T19:26:50Z,2021-04-28T03:16:03Z,True,2021-04-28T03:16:02Z,e14095fb018ffe5657d41c705adb9026840fb143,3636,1,c4880e6016546e1f95852d9323758963a910f308,,lestarch removing auto generated documentation files from mainline,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| Auto-Generated HTML Files |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**| #500   |  |**_Has Unit Tests (y/n)_**| n/a  |  |**_Builds Without Errors (y/n)_**| n/a |  |**_Unit Tests Pass (y/n)_**| n/a |  |**_Documentation Included (y/n)_**| n/a |    ---  ## Change Description    We are moving the auto-generated HTML files out of the mainline.  This will prevent the constant out-of-date nature of these files with respect to devel.    ## Rationale    We get a lot of updates fixing these items because they remain out-of-date.  They are generated once per release  and thus should not be kept in `devel`.    ## Testing/Review Recommendations    Ensure documentation is still available with these items moved out to an update-once-per-release branch.  For reviewers: nothing outside of dos/UserGuide/api should have been removed.    ## Future Work    Provide instructions/automation to continuously integrated this documentation.  
nasa/fprime,461,2021-03-09T16:21:42Z,2021-03-09T18:35:35Z,True,2021-03-09T18:35:35Z,b64d18140ac745def186cc47db19f45324f20c1f,1,1,888494975e73b486cb434830611d141ec650c5e2,,mstarch fixing lgtm suggestions,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infra |  |**_Affected Component_**| FileDownlink |   |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| n/a |  |**_Builds Without Errors (y/n)_**| n/a  |  |**_Unit Tests Pass (y/n)_**| n/a |  |**_Documentation Included (y/n)_**| n/a |    ---  ## Change Description    Added suppression comments to the large parameter arguments flagged by LGTM.    ## Rationale    The pass-by-value is dictated by the commanding architecture and cannot be fixed/adjusted.  Thus we should suppress the recommendation.
nasa/fprime,455,2021-03-07T20:51:04Z,2021-03-08T18:27:47Z,True,2021-03-08T18:27:47Z,a9bc48cc64711e3f7093a72d91c32e89547bd0fa,3,2,5d2a970d3a239f8f94b2620ecd26d69624f5e444 0a098cdfeb2b40e483448a871a937901a65d353c,,lestarch fixing schematron check for internal interfaces,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**|  Schmeatron |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| n/a |    ---  ## Change Description    Change the active component rule in schematron.    ## Rationale    It neglected internal interfaces.    ## Testing/Review Recommendations    UTs should pass.  
nasa/fprime,454,2021-03-07T20:28:20Z,2021-03-08T18:44:05Z,True,2021-03-08T18:44:05Z,35fa4ba3ac40f376081760a53a932fb3de86984b,1,1,e36cc5a03bcf0e4d8cdf0f756b497d1c97538c5e,,lestarch fixing buffer queue test oversights,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| Buffer Queue UT |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Fixes the message handling in the UT and hopefully the buffer overflow  
nasa/fprime,365,2021-02-12T02:50:13Z,2021-03-08T14:55:25Z,True,2021-03-08T14:55:25Z,d438a64a2fd30848b750f87069f8905395de1e48,10,2,647c438b97f9f56dce1deea4008207b9e93b4b17 79a390613b4c19099829ee56bb9a2fde92dabd5f,,lestarch adding in static memory component,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  Svc |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| n |  |**_Documentation Included (y/n)_**| n  |    ---  ## Change Description    Add in a static memory component to drop in when buffer manager is more than needed.    ## Rationale    Buffer manager uses dynamic allocation of memory  but may be more than some deployments needed.  StaticMemory allocates using the same pattern but in a fixed size buffer.      ## Future Work    Need: UT and documentation.  
nasa/fprime,442,2021-03-04T17:10:17Z,2021-03-04T19:38:45Z,True,2021-03-04T19:38:45Z,bfc5f27f5d43e34f60f8775dabb562ba9efdcf50,1,1,4c9a05dccdc56b6319a6164350a186ebfa558b3e,,lestarch removing six from validation in pip setup,| | |  |:---|:---|  |**_Originating Project/Creator_**|  Infra |  |**_Affected Component_**| N/A |  |**_Affected Architectures(s)_**| Python |  |**_Related Issue(s)_**|  #440 |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    One last "six" removal along with #440.    ## Rationale    Cleaning up to support #440     ## Testing/Review Recommendations    ## Future Work    More python 2 cleanup as necessary.  
nasa/fprime,359,2021-02-11T17:44:52Z,2021-03-05T00:12:29Z,True,2021-03-05T00:12:29Z,5ce79ec4ed47ced0299a799f6b0eea06204184e6,39,4,227e3dcac9377f0cf5acece3cf0b1bff80d3adc8 89cb21bead6963d5dd0f977432f24de0d8cab729 5600d776cdf097a2869d01b79b0e3b74797d3cbc 4b9fd39a628e8de41d5c111f63bc091d1e282522,,lestarch adding in new ground framing components,Co-authored-by: M Starch <LeStarch@googlemail.com>  Co-authored-by: saba-ja <saba.janamian.663@my.csun.edu>    | | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| Svc |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y  |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    Adds in refactored and more flexible framing components.    ## Rationale    The old "GroundInterface" was not reusable nor flexible.    ## Testing/Review Recommendations      ## Future Work      
nasa/fprime,399,2021-02-20T20:19:09Z,2021-02-23T20:59:30Z,True,2021-02-23T20:59:30Z,9198c47adde61c38d7a6a47a0789f5fba4e3684a,12,2,5aece3e44a702f24f1b5aaa86247acbbd5dcf42b b4ef8b0a58226ff2712e79df2cf4988f2cec5284,,lestarch fixing missing autocodes with time role port,| | |  |:---|:---|  |**_Originating Project/Creator_**| infrastructure |  |**_Affected Component_**| Autocoders |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y  |  |**_Documentation Included (y/n)_**| y  |    ---  ## Change Description    Adds in autocoding when a time role port is specified by-hand (not only calculated by existence of telemetry or events).    ## Rationale    `this->timeGet();` should be available for use when without requiring events or channels such that users may easily request time for other purposes.      ## Testing/Review Recommendations    ## Future Work  
nasa/fprime,363,2021-02-12T02:37:03Z,2021-02-19T18:34:42Z,True,2021-02-19T18:34:42Z,0c109ddefd90734d1ecb1e4d98ca6d557ebfb02c,3,1,b2392504a873788df81c4dcb89486f50e224f965,,lestarch minor improvements to autocoding models,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| Autocoders |  |**_Affected Architectures(s)_**|   |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A few conveniences added to the Autocoder models    ## Rationale    Helped build fplint.    ## Testing/Review Recommendations        ## Future Work    
nasa/fprime,364,2021-02-12T02:47:32Z,2021-02-18T21:54:21Z,True,2021-02-18T21:54:21Z,035808df02706d405611b30efa396f8fb799e9a1,1,1,9a236de7885b3bb9ab1975ea0be7482d5b846c27,,fixing generate_docs bash to handle modern fprime util,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| docs |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Minor fix to documentation generation wrapper.    ## Rationale        ## Testing/Review Recommendations      ## Future Work      
nasa/fprime,255,2020-11-14T23:00:55Z,2020-11-16T22:39:18Z,True,2020-11-16T22:39:18Z,29e5232e5ee0e76a9241ec37f9cfc1991d548779,70,3,113bf26fe103139e4668775406f02e6087f1879e 4644aa4e5acf2c1bb737c0204d866a9c18b51696 efcb056fdcd01caefdde706b19b33a4dca11f684,,mstarch cleaning up issues detected by LGTM,Cleans up a number of changes required by LGTM.  Also removes wxgui GDS.  This can be found in release 1.5.3.
nasa/fprime,254,2020-11-14T21:36:00Z,2020-11-16T18:43:19Z,True,2020-11-16T18:43:19Z,5d6c31d567284107a64f79232a2951f03cf58e6d,7,2,59ef49ef6f5d355e827b83e1f81035f985748fc7 8211fda0c819c05a53d5f9f12a97e124c4d30dbc,,mstarch updating documentation generation to adjust for github,Updates the F´ documentation generation.
nasa/fprime,250,2020-11-13T01:34:53Z,2020-11-13T01:56:29Z,True,2020-11-13T01:56:29Z,b43a0c60114e29ecc7be02d0c0320ab7a79c76c3,1,1,ef6965f2a789951caef47f521efb515403ea2188,,mstarch fixing bad change directory,
nasa/fprime,249,2020-11-13T01:29:00Z,2020-11-13T01:51:30Z,True,2020-11-13T01:51:30Z,93f20bd44e923c80017757699dda5c0006a2ee10,1,1,d12d9408d1c40166afa49337823946dd2ac37118,,mstarch fixing bad change directory,
nasa/fprime,245,2020-11-11T16:50:09Z,2020-11-11T17:38:48Z,True,2020-11-11T17:38:48Z,badee9706d8ed255cd5c7d29cc13f0fff1ee8fb0,1,1,ef2b973af9cae30a06af5e00c4cdf461d315d478,,mstarch repairing LGTM configuration,
nasa/fprime,243,2020-11-10T16:32:46Z,2020-11-10T17:45:58Z,True,2020-11-10T17:45:58Z,2f0880c1af97359c7d7ab2de9294da333fa22a7b,897,32,478df8bc07bea28b9896236242ff387e8787fbb3 66bdaacb55ddd5c1288c7e2f94261d0e5a785115 3d52bd6840b024b9887990c8546cccefb6bb0851 520438c731a26ab9e757f3a77ef47ad35cfa01b7 7a18a28314c9f0345b2805af38423b9cbbb404bc f0994cf07adff0d8038624291fe1ca38ff6888df 14eef75472a83e22549120c7fe0cba7a572d6544 6c81117ef5f74cf55f79cf13ddf310942970de20 4d1b4a9c914d70827c8795ebcff3d744b8efea4c b2863088abf7c77558ed4fbb68886104d07508bc 852115acaa5e84acc171992e7f8faff3b7a14ed3 c4ea5f3e933d2a43bf16f852dc4871b5f043a6d4 bd04024748a8c7c7a896be892f18dfd52a5d4e7c 909021ce7c4336c4be58885bdd47ceac69d09834 25f8f63e894358ba92c42363642c2c63b11c5c33 232476ad2a701870feb59f26cc5456bd3813ff3c 56c1f198c2a5dae34158a4df89a046b267db4481 16f9005aa02f70a7391188606233e507074bb980 d58876586526abce107079bfaa35b5d67abc8469 1bff5f0999083fef1af6c38ebe95631067e7fd00 3bcddb60bd5d73850a22fcdc3b61b283a6e0e9f7 ed775497d439b0627d1a69b162c0aa2bfb08cd35 b959fc8c701dab603e313341ab1890a667cba6d6 7d95cf339de28952c52f2bae4cc9c5bfe7b282f2 9aa2c4ca738f2dae8ffe45787921fba6325f9f60 87439c096b59ae3ffb337a53edb3935903326418 52a779d242ee913e2f3661366279586157c53099 2b31154549103aff8df59def7870db025ceb5d5b 6c11f48153682f0b2daebd4b9831aa595028e381 e90440136ce0da826ed3d8665cb36baeac82b808 7be47fd67442553c9a464d592b701699991e1e22 e090cc4480f552803fbda87878ff7dc8429249b3,,lestarch prerelease 1 6,This prerelease for 1.6 does the following:    1. Remove `ptf`  2. Remove `mk`  3. Rework MD items  4. Cleanup other unused directories.  
nasa/fprime,231,2020-11-05T03:34:17Z,2020-11-05T18:12:42Z,True,2020-11-05T18:12:42Z,dedce164f7f16d6c7f5d6e846f246e42dddadf7f,3,2,0940abaa536b24f8f7e4199e5014222ae90b7541 e0e96cc594e99f6c650aedd57c69dfb9d05551bc,,mstarch fixing build environment from settings ini,This fixes the issue where `fprime-util` is not setting up the environment as loaded from settings.ini and any referenced environment file.
nasa/fprime,218,2020-10-22T19:55:55Z,2020-10-22T20:21:34Z,True,2020-10-22T20:21:34Z,6e702b31f51b8b375a2f3d2e4049ee6109af6222,2,1,94b234929aa603a3eeca9a2d8298c2ba090e9d43,,mstarch fixing impl and testimpl usage of AC constants,This fixes a critical bug in how the AcConstants.ini was being passed in for custom configurations.  In short  building works  but to use this in template generation would break.  This corrects the issue.  Fixes #218 
nasa/fprime,227,2020-10-27T00:05:19Z,2020-10-27T00:23:28Z,True,2020-10-27T00:23:28Z,c1b8cf7c2d49375be32d0de64c5f972ba37af20e,1,1,57f56f34cbf92fd831d7a284de7eb78033c9930d,,mstarch fixing unit test Ac constant problem too,Parallel issue to items fixed in 1.5.1 but for building UTs.
nasa/fprime,215,2020-10-22T01:04:31Z,2020-10-22T17:56:44Z,True,2020-10-22T17:56:44Z,68fecef4f152c6de70b188863eb5e02329e3a18b,4753,677,adabcfab3721fd91ddb18ab4f6641b5ff06d12c7 005cb5e51d5358527f49a5800158f5e296fdc313 9abf0f3f5b055d3451a2832a2601af64d4388b6f 30a4deeed2611f5e5a45fb7b203a9754c5489352 3f64e1bc25437dbe40d4cdd12126516c110bae4c 28dff6c6b5b1ab5cbb74c062f989e0be6384a86b 6762418590bcdaa2c392faf0f5943f0aa306a0c3 ae746a5ddd1b3a67663e94cae463cf03197fadf1 a6e8d869493b9e187241da5e0514f665baa0727a 84cae3647d7dd34e07759d5fea528bc09add8510 8b35d1a321e48dec0ddca5bf91c2972d281556c3 22d9ea06d573eec61678fec5ef84f911abdd64fe f9c939afbf1a7c2b0982c1eb66994fe537216974 e8c7b4341dc562d60e72e6d33f837bda26cc4ce1 025de94515a8781ec2fd9d081cea2dbe0a2b31f9 39857261932109027a05c16982495a26a76e5175 012e5f3a3314bab03fd17373cc6a1f96a4a5ac9e e860380bfe65f15b61f6177afc4a79954194bc57 ced9b067f17cdb19c697689ef03f2cde1458e647 e51aa12b2d88fa258802b3e839be6dd8b92180ea 167e0538224f009b275c1fdf6503b0002024c0f2 c140eba906335de415bd4dfc186d6d3b43e05880 61d5f5b4e33f7cdcaee8f89d31aea9e0c4c87e7b 662ac4cf00d27867dcaa138b4b4a03fae4db5e5e aa07f83ff2ed800a1cc4c4afc5189fcc46376409 b15b9bc870d3b317dc7dfa9deafdef9c70f245f3 a521fe8da784b7f998e1b85b976f40bfa0f717a6 c53f276ce289efaa9f4608d9f00710e0347b56bc 9dc7a91fbb7a7756d3de2fa268a81286042ce887 ec3e496b78ef70ccb733febee39a319de968c23b c0242c89a4486649130510bb15c52163b155a21a b4294bb3ca822e26b9d04341aef6c094ec69255f 85a7dccc7331bc792a523d79fd5089b977b22ab3 6e272f48dabb5c3788c127d6501c795c816b7558 3169d98dd0ea4a92c0ae5f09971db16dd04c5906 f8f0bc5c95eb82169bf0d139f773242122d1be4e 2b3319ae030baa82928230c9be47382d24125ff8 6dc9b3416efb9cf8d97f4704fc7dd784efe1e30d 35eda3408e350d080e53cf763d6c1ca581edb2f4 ad4300edec4b27b9d702ceb660efb968da4bfb9a 10e334b1cef32aa570f395bb44ad71a11b5005f1 1d92d3dfc90a71ab1e0068e500cf21c12fad0a82 c7a1f5b44d71dd88e38cdcea6dea2c5865bbd1b5 ca67153d3fe12869113eb170c3d0249e3b36e107 6d749dbdfc59b4075b13b96efa7ae349b6663ada e529c6054dfd705381256887295b53c65a2a8742 cb51600aa14daea7df32afbf074f668bd84dea04 8a446aad5e0d51b1ea2b90c7087182dd4e06184c c4d994364682c0625ec26e21797c1eafb3f8524a dd7a9a26f3996d9e96adf55f026f6deb0e9abbad e8e881923ba980bdc6571099ce5f8e2b0acf97c0 f41b4fef4cacc7d2af6cad5179a13b677c119ca7 f01f4f2073c3f0a6f40c5a6a985735c75afa68f1 7b53e9669c2a140a3bbc9ca1603301bfa218d4a5 928b1272f3f128568cdd904c74b8d40dc6ea0eff 3ad704ddc616784e132f90501604976950da5931 44bf81f2d820425e3022e9470ebb8073f8d35b8d 580bc73fe15880a4542d9eaabdff808c2dd22321 246d5743fa32d41b0cee3eb875448c6cf4481772 12f7a635720c53406605b2a9ea1fb509d86f1697 98e7d39802b3d03f9e7ff1de42066cba8bcd2d9c 3d6a9e8ee40c04d6bf8bc36f0559a4f396691738 9394aa2a2bc4541f45198b94938722dafcd6639e b175787830828465812d15d340153ac4a51f74c4 7a654fc7afb05839af129e95cec877e1af541589 b9675055f43f7ff38d20474afba37d4c85368263 73e1a7670cdccd95afc9f8dcc4725fc29749a1ea 5fadb790b2e1b7b507d28f8dbe317eb8f43ed12b 0cd944575a765f25ef4384d74120a82ac6fe0fcc 0d3e15352742d56e464e459fc117aaa048d7c3e8 367d95584f581ac02cd5ad223302dde069c3cd97 890cf27c92b4f07301fd3bb2ddca2286cd525b54 87e517b1dc681fdd26da63e40d8d36d6de93e871 003cbfd44a504369ba2baf102fd717e298c607c6 d15d860e62288e67c1ba172c74118dfdbd7a638f 6db8d96078b1ee178d3a37ea11ca31cb31a4658e 29074e482784905acdac17f9e11a721943a41940 48d7be9043bd6023ae427a1699a9cf1ab5ab2ee6 b0726091f63fde3711c1635c7d80f5b3e11a603e 388e5a4537833e6d08882a76e88a764e8ea707f7 dcdfa283f7fdede83b7c28e3879ce7ee7b87f724 35177027876182d167b34fc13817617ee35540ff bbf6c6489869f6f3d62aa2d914f898b89c3bb6c7 0070992d81656b8b83edcd0f2a707f023bfe58b1 28adfa37fadbc3cc5d2e4b12fbac0bee18634754 8780e9d8a8e004c3a6cbfbaa3abec5d93d94bd3a 201af67aeabf1a1dafe791b977bb9ff4f4a4bda4 c72e061d957a79aebee98bcfce087c6b37f292a8 dcc0316b25cc565cd99db68d8eba920840a35387 eb83a43d41dea873adb09fe7b6e4a0086f1d70c7 800bd57c3fadfb4111c4e9bac6ff7d63086e1dd1 e2b3fa356cdeb7dd94b7c34fdcb44f254bb8bc56 516adb89940556bc940a0f47e066ae496f6c0d17 dca24aea44b719e08a746f87e7571531e12fc070 a00f7fdff3f26ec8a89706a80a67f00df02fa275 cce9dcc9c21325376442ae52ac55e7eda1b55eab 0d9d34aba87bb245c467d2be98e0d27eae14106e 3d49cde96ee5c198e04dd0d9e708b22919d1adf5 3244099405aa993f996a839cf3fd7e04303588b3 51157a0562be2fc3082292cf6d2c03deecb4b825 fe49e309985fd22933bfd89ccea3e4732c89ceff b0e0ab52532e1565b9b70315b12f5821d95d0015 79201affa8768c1a6b632594bfb83d9d02c4d49f d04867170ea8141ea4b2d24fb5e7f80009564782 1f93e3e9ccc99c505dcda63158a5f1ea9d18724e 6d1f724bb9ecd6cf1c77999c0233e72cef10807a c1c2f47f5537d2f8009c0243066d1198ac6c5d77 3c75a4e0e2e96e43219f6c0435aea9896738c25f 7c6b7347e92aa56d0d00a10a27bccbafde3f721c 2c62547d0707029c46649471e435b5711cd150a0 4b9461c057c6afec24ffce14e0f77a1aa01169a1 82c54cc613fc077ba9a83d08d046656a7b081c90 0bfd091330bd83407138acb0d1e221ac48dc1d0d 6ff9e59fe82c16b8978f1a073f255adb4c4b14dc 81500354b5e41b7796142d2c2b8202b80cfa24a6 02e2b9dfa7294c68e1edc82c7061ddd0acc46415 90b4c3f9a56975271a3eff9027a0a4e13f2e5f3e 9e3c761c9c71512099c46eb86b45e60efc891c85 071a2341fc2496454b84db17285b4b3b79e49245 bac0f7d3b022e0454124aa839486f91f77494b2f 87388ebb0534609a114861f802e11b2a52817072 30a8ef19bea625cc737c2c11b796b87ad69e3f83 12c78605d81b530eff3ae469e2abe100227a27e8 5640b8d24a931e8876b97a4ac379e63c893589e4 28109ae1fec584f8804ca4f6130a55a7d9c8e72a 8c80efd6efcfbbc8f132fb326913d63a6f40490c 01841c2438605dd844f9d4c1b2d43543a10c33a2 066e66f177b2ab1138a107ef3049f1ca679260b7 b0cc0cdcf1da1804adde7aac89c99c081dd91700 bca140506f50aca46541fe3b0fe42e0872dce6c6 43a55e1200fd2fdab074831336abe9e0e4c666c8 0ff1ce99b4798d5c66a942372b206bb0359b0163 a7aebd35310575b5c087778f93704b827b046f4a 2fc972a39bb35156e7f929a7fbeabdd327d14609 72c89245a63d360917f0798aaab2ab2e221b8a4f 3afc9acc7759635e00bb44c62d45e5495bbe2486 b3c95819edecae459480e10d8c91582dcc5a60e6 ff9a0bda7d7217b1849cef81274d867948515be9 3749ddcc618c62e01bc06071bd13a728fde3316d 2b5481b2a02b28f649b4cfc487f44d9d8a85ac17 0488863429c4689b769f25795b184542d2eeaf9d f747af8a782224796fe1df284af54d7becf7d391 bab3fd6ffd28d174376d6acd21e27c550f207d80 d5c3cbf6c25e4cf9567c2c82a30fb40cb8fe11c6 d0d241ebc858284e388451c12882cd865085d159 7cd0f1be867e8ec07e7b4d3f07da460b98f7b606 705968a4998584a6e824d3d6f37b13ce54cc7f45 1587202f0354012fba65e3ed624139d1663f8c20 4d8ed1cbab5cbf77dc369203bcb9e9df588f0a23 e4c11631790aa80767c528195b34132a2e828b2a 21f1ef3bab3092fc108f5b0bbf4e9d508f3cb614 5505268b600d38a75616b0b1bf44be2d09a313a2 e0168eed387e90f2d1ec0613be845b6d3845346a 53ea47fa5489c033f8759b9f14ea4bf3b0cbef89 f3749c502e5f3ed63464440bc0a383b0975f6e8d 13542cd6d99dbd62de0c1ba8e2d4b088626d9d8b 283f16467a48a15f14d40758c4fb0d6cdf414df5 a67206f9884bc5cac22623a4f50ac472b4c1087d 8eea39a429e4f9324ef58dd70d26cf8fabcceed8 ee3d659e2865aca215422cc5c03fe0e69dcdaed1 4506f4c90710d197de489bf82a87d11ec1d63eff 647a32250dc61c2ebe08ddce37f56374d69ad6a7 074dde039f88561dc67707870727793e0d5214cd 98c18fdb05123be0643d58db2353a6edf94c0671 40f1fc46d25dc04c7b510fa374241c19834ea05c 3179c2d84b5461ca079183b736ba85b772837f2f 0faa1af6af78647a8649545724bcda458e0c9398 b8826ed84854f9f05ac0b477621a725075085ea4 053fe23adaad788af41d5090a5417062b9fcf17c 04971a5ad01b90a8bedf2daa23fbad9a185d8102 b20b462a20f4b3f60f5432b17365ba4acab49c69 81cf15a1a31081a3cc80cd45d154a274284bc609 e23a5994b9f27b8e0ae06b56591e913253555191 4a64181d5d5c5592ba3f6a010241ab2f308f9f46 0973987c4f2a7f9a8eac03b3dbb2b9ccec8c7525 d35f04867aa27d11303ae0424cb596a0d1448b05 f0511eff14dbcaf46ae6b26498af1574ea6ecfc8 b5c4711e101694f3679e3387639e9dd1d92cb887 8a3a100cf37c314047c533f194a4fedfd46f5964 ac869669fce8f114bb9a47ef0113c9d297e7eff6 43afee9b3ea623ed84d276e9aa73872d75e736f5 44f66a9b44e1b084050345393aab032e024763db 7f623192447a8a5c1bf62eb61c44999d91fea0f8 8d1a01b99c371d445ea511b1d886a2bf342ac53f 9ddd31775b529f9658565b420c0c7068af9f8b46 d7d47f9b044dd5f8c8ade18f6a4c178c38f9e7a7 705d7a8a22c3b07078aebe8ec3d329bc70b329c2 369affff1d6b930f9c99c7b298780a99de3fdb56 fceb565a0fd4d303b44c3a40a577538e09d4106f 431f979062a47a14c39b1372a643c7b196200923 ece01ba1c733b849675fba7f6024fdaef3ea61d7 994ea31dd3e71f273838adefe0bee31c59bddf3c 3cccd731d914886a7f9ed2f56541c94987bc8a49 1edf6f0352774aa87b765bd67835dcaf6e9e0847 7f795b64dda37873cd0e373b357d347fb8407d1f 4b91d36643f0619324878d21a7a695b6b1ef1ae2 9b38163198f28d935e6a5008d25c89557c99563a f25d83561eb28bb09640d0a2b26314e734708261 eddc97d74f6e3f76ff9631961b9e82b598bbc346 1c4e2d2d1764c95fe0366239dad671ce21f9fcfa 7042b38ef578fe96e30fff9ccdde000fdea334b2 9f4da01e7d4fe06352d7a161578252167c4c7070 3403bc3504306d21c639b4ce295af4850fdd0115 8bf9f2fff5df20981c7c3f6c50d8c48ea91e5240 a2c44a479f179d71d4de4782422f10c9f3e9ffc3 0c0ffd4e0c79dcf3d9703ded1a313c4ea88e0453 7680602c10f709df4002b971f9d62ae739c71aa6 2d5d68f664b15dd726b0e1c8a8cf21dfbe4619d6 98e0148d4a9302234b17ed0befe29816fd8d9f53 5e02fe7ec4586ddd27231ea50767d8cf7ee35b07 7361a835ee4e363e71ced30e47481f99154bcdd0 a02620ae141d3ca7d4d935a92e049668273d3173 f9dc77406e147529ba44bfcd6b7966cd7728d01e 725abcddc61584d49ad9c9f477ea4b5999fc358f 95e6990c4f87b11044a7b60e52378bf6e1ee7650 36a8df689a7ac22c98d166a168d7c1fe1c650ae8 b9edf4c68686edb2e69c3f735740d38abe412063 3cbcf8ed6999d328440c5811afc5772269954360 5a0b69574a318601ccf1008db6dfb08c98677f5c 94f5cbc18f8009cee439e4511dbb9b0766479c3f 3fb8ca134403418d7ff73f4ecb1beb4b07a164a3 01dd99f1d01fff35d310629fac5c0df13d79a361 3300e68f160e98eab801b63acf7f9a956c6b0555 8948359beb34f93945d91a1eaafc43a688077c14 7ac1c6d5d398eab41524486bc0fd89af9fda2149 67dad6144304f939b8cf27ba9a3087f109b10b1f 92df0828978ebd0b0b0601b3d9844353886e4c82 d8372ad574b0214ba6b83be0fc12b63bdbef1a11 a4adc3174468425a7f44986f49d60df07bc9cee8 b2371918127c4737e54cb5c36a5cb247e1955d30 3ea3800f6991a7bc83c1b659d8884058a666dd71 9a64ceb0cd5aa284a7d3a59aa9dc719b82943e62 8f1204ac679c8392e85e2c6d22596e067cbcfa74 83c98be48b41d7f628c7c4ade1f1470e7825e0e5 26bf870cee93bb9699cb81be1f379efc0ff4f0fc ba7d9b14b282e93a69f82624efe1bc5a681899ba 32969bb5ee6cee3535b1c205bec52b0731836eb7 322a96afb01f992fb176b422b872d596f4995c92 d80acdc901b2386a1ce4525751580d16583a116b 88ca34ec9dcb8a5db8460198f278cfc0897c37c9 7128610df67bc00ad0515e725a3b3a744173d898 d41eea28a0803fd04af9099f98e6b8e24716abeb 20fc0590515226ada08eb6cb641f0164ad1677af 43121102ef5f7db401ee8b6c9847ce36b0b97513 ff6df5e0643d1a9689b8f88dcde36f8811462be9 60d374e782c37b1fee8b30a0117083a8b02a8a52 8bed7c04e483bc1294400837048f5a6127ea731f 5f7625805b2227601818f879c6ec0bba2e5f7125 6a9beaebfa60fa65676de2502c454026c034eced 047eebb9c2da107d2ddfebbd4d332977091ae698,,Release release 1 5 0,This is the formal release of v1.5.0 for the CI system to run against before tagging.
nasa/fprime,213,2020-10-09T01:18:45Z,2020-10-22T01:07:54Z,False,none,ee06d84a63193234e2e88492b6ec1c35ad5c149d,3367,368,566db06baf7214510dc00e40f3944889541515e5 7ad5951c79003ea0dd9830047a17955cbb7cfb16 5532d745cd3135e9f59b63c6c065c8d8078f56d4 8e62fa48a89153b1a878cc0d39f8080889edcbdc 2ff95a8b3232bbdae75020ca9d788ef89bb19a06 bf5f593feb762c44897318fd8ad56d1da8015c22 80059b4ba9f7d6b932d9f41ddf9ee5180314ea96 b7cb0fda82ea31af109e5a96344254e8335efa59 c7e0fb25fd32be00f5050b0ec20fd2af33c8e1fb 71d320c9ebe5f4f0a973690dc67514b0c36f8b1a 4bc586513e6901e882285eb11aacb8f7f185bd46 f2a5eb94fe63fa22f3d0f4ea5f0be1870fa0f67d 231d6cad880f68fb6e12a73de14293d5aa9d73a8 36b1e04dd9268151bc3ad87893b0e0c819785e22 2cdeb9aed8f58fb6e54bf50b1716a3f71404ce1d c1dc9bf77ff779736d9f683410a692437e3d6bf9 7926853e24c411dc92dd2ced6c117801f1e98587 895d218f69de0f10b8cbffd8015f734da5d1d8a3 c0169464a1a832a9c865cac7904bdfd8fb01e09c 6b4a7238bee71e2438e1c2346d4a568917d5ce71 0c9b1a3d4a780032d6bb95974278f186c0a58ee9 3b5bb5c66c1f458bdf482d203c22aa960a9694cc 235d3ffd0634cb2c9632555fa0a61a93643e70f3 a375d0031219f632e0acadc9158310e90d9d0bda 60689785725924d21f740b2483ee8f99855fe0ad 661fc44f3660e64ebe84f55a4b402cc04af2122f bfd1c3c42f05235f944a92d87090a4d3ac99012d 0326bc8b9fed3e728dc38782d2ddffac2f5d30fc 929643b52ba1182e46fd6dabc132e89e468b883d 13e8f3d36f6df8ef9921dbc1c8e9697f1a5e570c 5933f9151498b523c10af476215efc8d4726c77e 3748737649f997aad284ed3c027ca7e6aad24461 77d16e892eb8a67ba2b1c135c246265e0dba3aef f951970ed4d24508ca2240379537d27cb897470e ff0ab3c0caf9939314285c66a421e197b754c318 1734d80b5a26d14d2397b9b9378be72f79dd9c35 adabcfab3721fd91ddb18ab4f6641b5ff06d12c7 005cb5e51d5358527f49a5800158f5e296fdc313 9abf0f3f5b055d3451a2832a2601af64d4388b6f 30a4deeed2611f5e5a45fb7b203a9754c5489352 3f64e1bc25437dbe40d4cdd12126516c110bae4c 28dff6c6b5b1ab5cbb74c062f989e0be6384a86b 6762418590bcdaa2c392faf0f5943f0aa306a0c3 ae746a5ddd1b3a67663e94cae463cf03197fadf1 a6e8d869493b9e187241da5e0514f665baa0727a 84cae3647d7dd34e07759d5fea528bc09add8510 8b35d1a321e48dec0ddca5bf91c2972d281556c3 22d9ea06d573eec61678fec5ef84f911abdd64fe f9c939afbf1a7c2b0982c1eb66994fe537216974 e8c7b4341dc562d60e72e6d33f837bda26cc4ce1 025de94515a8781ec2fd9d081cea2dbe0a2b31f9 39857261932109027a05c16982495a26a76e5175 012e5f3a3314bab03fd17373cc6a1f96a4a5ac9e e860380bfe65f15b61f6177afc4a79954194bc57 ced9b067f17cdb19c697689ef03f2cde1458e647 e51aa12b2d88fa258802b3e839be6dd8b92180ea 167e0538224f009b275c1fdf6503b0002024c0f2 c140eba906335de415bd4dfc186d6d3b43e05880 61d5f5b4e33f7cdcaee8f89d31aea9e0c4c87e7b 662ac4cf00d27867dcaa138b4b4a03fae4db5e5e aa07f83ff2ed800a1cc4c4afc5189fcc46376409 b15b9bc870d3b317dc7dfa9deafdef9c70f245f3 a521fe8da784b7f998e1b85b976f40bfa0f717a6 c53f276ce289efaa9f4608d9f00710e0347b56bc 9dc7a91fbb7a7756d3de2fa268a81286042ce887 ec3e496b78ef70ccb733febee39a319de968c23b c0242c89a4486649130510bb15c52163b155a21a b4294bb3ca822e26b9d04341aef6c094ec69255f 85a7dccc7331bc792a523d79fd5089b977b22ab3 6e272f48dabb5c3788c127d6501c795c816b7558 3169d98dd0ea4a92c0ae5f09971db16dd04c5906 f8f0bc5c95eb82169bf0d139f773242122d1be4e 2b3319ae030baa82928230c9be47382d24125ff8 6dc9b3416efb9cf8d97f4704fc7dd784efe1e30d 35eda3408e350d080e53cf763d6c1ca581edb2f4 ad4300edec4b27b9d702ceb660efb968da4bfb9a 10e334b1cef32aa570f395bb44ad71a11b5005f1 1d92d3dfc90a71ab1e0068e500cf21c12fad0a82 c7a1f5b44d71dd88e38cdcea6dea2c5865bbd1b5 ca67153d3fe12869113eb170c3d0249e3b36e107 6d749dbdfc59b4075b13b96efa7ae349b6663ada e529c6054dfd705381256887295b53c65a2a8742 cb51600aa14daea7df32afbf074f668bd84dea04 8a446aad5e0d51b1ea2b90c7087182dd4e06184c c4d994364682c0625ec26e21797c1eafb3f8524a dd7a9a26f3996d9e96adf55f026f6deb0e9abbad e8e881923ba980bdc6571099ce5f8e2b0acf97c0 f41b4fef4cacc7d2af6cad5179a13b677c119ca7 f01f4f2073c3f0a6f40c5a6a985735c75afa68f1 7b53e9669c2a140a3bbc9ca1603301bfa218d4a5 928b1272f3f128568cdd904c74b8d40dc6ea0eff 3ad704ddc616784e132f90501604976950da5931 44bf81f2d820425e3022e9470ebb8073f8d35b8d 580bc73fe15880a4542d9eaabdff808c2dd22321 246d5743fa32d41b0cee3eb875448c6cf4481772 12f7a635720c53406605b2a9ea1fb509d86f1697 98e7d39802b3d03f9e7ff1de42066cba8bcd2d9c 3d6a9e8ee40c04d6bf8bc36f0559a4f396691738 9394aa2a2bc4541f45198b94938722dafcd6639e b175787830828465812d15d340153ac4a51f74c4 7a654fc7afb05839af129e95cec877e1af541589 b9675055f43f7ff38d20474afba37d4c85368263 73e1a7670cdccd95afc9f8dcc4725fc29749a1ea 5fadb790b2e1b7b507d28f8dbe317eb8f43ed12b 0cd944575a765f25ef4384d74120a82ac6fe0fcc 0d3e15352742d56e464e459fc117aaa048d7c3e8 367d95584f581ac02cd5ad223302dde069c3cd97 87e517b1dc681fdd26da63e40d8d36d6de93e871 30c6f4f35653edf1eddc3b13948130b0329b4f57 003cbfd44a504369ba2baf102fd717e298c607c6 d15d860e62288e67c1ba172c74118dfdbd7a638f 531bb74994c161ed0f620cf829450bff8d3ff6b0 6db8d96078b1ee178d3a37ea11ca31cb31a4658e 29074e482784905acdac17f9e11a721943a41940 48d7be9043bd6023ae427a1699a9cf1ab5ab2ee6 b0726091f63fde3711c1635c7d80f5b3e11a603e 388e5a4537833e6d08882a76e88a764e8ea707f7 dcdfa283f7fdede83b7c28e3879ce7ee7b87f724 35177027876182d167b34fc13817617ee35540ff bbf6c6489869f6f3d62aa2d914f898b89c3bb6c7 0070992d81656b8b83edcd0f2a707f023bfe58b1 28adfa37fadbc3cc5d2e4b12fbac0bee18634754 8780e9d8a8e004c3a6cbfbaa3abec5d93d94bd3a 201af67aeabf1a1dafe791b977bb9ff4f4a4bda4 c72e061d957a79aebee98bcfce087c6b37f292a8 dcc0316b25cc565cd99db68d8eba920840a35387 eb83a43d41dea873adb09fe7b6e4a0086f1d70c7 800bd57c3fadfb4111c4e9bac6ff7d63086e1dd1 e2b3fa356cdeb7dd94b7c34fdcb44f254bb8bc56 516adb89940556bc940a0f47e066ae496f6c0d17 dca24aea44b719e08a746f87e7571531e12fc070 a00f7fdff3f26ec8a89706a80a67f00df02fa275 cce9dcc9c21325376442ae52ac55e7eda1b55eab 0d9d34aba87bb245c467d2be98e0d27eae14106e 3d49cde96ee5c198e04dd0d9e708b22919d1adf5 3244099405aa993f996a839cf3fd7e04303588b3 51157a0562be2fc3082292cf6d2c03deecb4b825 fe49e309985fd22933bfd89ccea3e4732c89ceff b0e0ab52532e1565b9b70315b12f5821d95d0015 79201affa8768c1a6b632594bfb83d9d02c4d49f d04867170ea8141ea4b2d24fb5e7f80009564782 1f93e3e9ccc99c505dcda63158a5f1ea9d18724e 6d1f724bb9ecd6cf1c77999c0233e72cef10807a c1c2f47f5537d2f8009c0243066d1198ac6c5d77 3c75a4e0e2e96e43219f6c0435aea9896738c25f 7c6b7347e92aa56d0d00a10a27bccbafde3f721c 2c62547d0707029c46649471e435b5711cd150a0 4b9461c057c6afec24ffce14e0f77a1aa01169a1 82c54cc613fc077ba9a83d08d046656a7b081c90 0bfd091330bd83407138acb0d1e221ac48dc1d0d 6ff9e59fe82c16b8978f1a073f255adb4c4b14dc 81500354b5e41b7796142d2c2b8202b80cfa24a6 02e2b9dfa7294c68e1edc82c7061ddd0acc46415 90b4c3f9a56975271a3eff9027a0a4e13f2e5f3e 9e3c761c9c71512099c46eb86b45e60efc891c85 071a2341fc2496454b84db17285b4b3b79e49245 bac0f7d3b022e0454124aa839486f91f77494b2f 87388ebb0534609a114861f802e11b2a52817072 30a8ef19bea625cc737c2c11b796b87ad69e3f83 12c78605d81b530eff3ae469e2abe100227a27e8 5640b8d24a931e8876b97a4ac379e63c893589e4 28109ae1fec584f8804ca4f6130a55a7d9c8e72a 8c80efd6efcfbbc8f132fb326913d63a6f40490c 01841c2438605dd844f9d4c1b2d43543a10c33a2 066e66f177b2ab1138a107ef3049f1ca679260b7 b0cc0cdcf1da1804adde7aac89c99c081dd91700 bca140506f50aca46541fe3b0fe42e0872dce6c6 43a55e1200fd2fdab074831336abe9e0e4c666c8 0ff1ce99b4798d5c66a942372b206bb0359b0163 a7aebd35310575b5c087778f93704b827b046f4a 2fc972a39bb35156e7f929a7fbeabdd327d14609 72c89245a63d360917f0798aaab2ab2e221b8a4f 3afc9acc7759635e00bb44c62d45e5495bbe2486 b3c95819edecae459480e10d8c91582dcc5a60e6 ff9a0bda7d7217b1849cef81274d867948515be9 3749ddcc618c62e01bc06071bd13a728fde3316d 2b5481b2a02b28f649b4cfc487f44d9d8a85ac17 0488863429c4689b769f25795b184542d2eeaf9d f747af8a782224796fe1df284af54d7becf7d391 bab3fd6ffd28d174376d6acd21e27c550f207d80 d5c3cbf6c25e4cf9567c2c82a30fb40cb8fe11c6 d0d241ebc858284e388451c12882cd865085d159 7cd0f1be867e8ec07e7b4d3f07da460b98f7b606 705968a4998584a6e824d3d6f37b13ce54cc7f45 1587202f0354012fba65e3ed624139d1663f8c20 4d8ed1cbab5cbf77dc369203bcb9e9df588f0a23 e4c11631790aa80767c528195b34132a2e828b2a 21f1ef3bab3092fc108f5b0bbf4e9d508f3cb614 5505268b600d38a75616b0b1bf44be2d09a313a2 e0168eed387e90f2d1ec0613be845b6d3845346a 53ea47fa5489c033f8759b9f14ea4bf3b0cbef89 f3749c502e5f3ed63464440bc0a383b0975f6e8d 13542cd6d99dbd62de0c1ba8e2d4b088626d9d8b 283f16467a48a15f14d40758c4fb0d6cdf414df5 a67206f9884bc5cac22623a4f50ac472b4c1087d 8eea39a429e4f9324ef58dd70d26cf8fabcceed8 ee3d659e2865aca215422cc5c03fe0e69dcdaed1 4506f4c90710d197de489bf82a87d11ec1d63eff 647a32250dc61c2ebe08ddce37f56374d69ad6a7 074dde039f88561dc67707870727793e0d5214cd 98c18fdb05123be0643d58db2353a6edf94c0671 40f1fc46d25dc04c7b510fa374241c19834ea05c 3179c2d84b5461ca079183b736ba85b772837f2f 0faa1af6af78647a8649545724bcda458e0c9398 b8826ed84854f9f05ac0b477621a725075085ea4 053fe23adaad788af41d5090a5417062b9fcf17c 04971a5ad01b90a8bedf2daa23fbad9a185d8102 b20b462a20f4b3f60f5432b17365ba4acab49c69 81cf15a1a31081a3cc80cd45d154a274284bc609 e23a5994b9f27b8e0ae06b56591e913253555191 4a64181d5d5c5592ba3f6a010241ab2f308f9f46 0973987c4f2a7f9a8eac03b3dbb2b9ccec8c7525 d35f04867aa27d11303ae0424cb596a0d1448b05 f0511eff14dbcaf46ae6b26498af1574ea6ecfc8 b5c4711e101694f3679e3387639e9dd1d92cb887 8a3a100cf37c314047c533f194a4fedfd46f5964 ac869669fce8f114bb9a47ef0113c9d297e7eff6 43afee9b3ea623ed84d276e9aa73872d75e736f5 44f66a9b44e1b084050345393aab032e024763db 7f623192447a8a5c1bf62eb61c44999d91fea0f8 8d1a01b99c371d445ea511b1d886a2bf342ac53f 9ddd31775b529f9658565b420c0c7068af9f8b46 d7d47f9b044dd5f8c8ade18f6a4c178c38f9e7a7 705d7a8a22c3b07078aebe8ec3d329bc70b329c2 369affff1d6b930f9c99c7b298780a99de3fdb56 fceb565a0fd4d303b44c3a40a577538e09d4106f 431f979062a47a14c39b1372a643c7b196200923 ece01ba1c733b849675fba7f6024fdaef3ea61d7 994ea31dd3e71f273838adefe0bee31c59bddf3c 3cccd731d914886a7f9ed2f56541c94987bc8a49 1edf6f0352774aa87b765bd67835dcaf6e9e0847 7f795b64dda37873cd0e373b357d347fb8407d1f 4b91d36643f0619324878d21a7a695b6b1ef1ae2 9b38163198f28d935e6a5008d25c89557c99563a f25d83561eb28bb09640d0a2b26314e734708261 eddc97d74f6e3f76ff9631961b9e82b598bbc346 1c4e2d2d1764c95fe0366239dad671ce21f9fcfa 7042b38ef578fe96e30fff9ccdde000fdea334b2 0614af9bbd3866c7e6973f38ff3eca89956bd076 c512c35b67a09c7d6f9911e4bf401ac141847b50 9f4da01e7d4fe06352d7a161578252167c4c7070 3403bc3504306d21c639b4ce295af4850fdd0115 8bf9f2fff5df20981c7c3f6c50d8c48ea91e5240 a2c44a479f179d71d4de4782422f10c9f3e9ffc3 0c0ffd4e0c79dcf3d9703ded1a313c4ea88e0453 7680602c10f709df4002b971f9d62ae739c71aa6 2d5d68f664b15dd726b0e1c8a8cf21dfbe4619d6 98e0148d4a9302234b17ed0befe29816fd8d9f53 725abcddc61584d49ad9c9f477ea4b5999fc358f 95e6990c4f87b11044a7b60e52378bf6e1ee7650,,Prerelease release 1 5,Secondary pre-release of F´ 1.5.  PR to run this change set through CI.
nasa/fprime,357,2021-02-10T16:10:46Z,2021-02-11T17:54:53Z,True,2021-02-11T17:54:53Z,204c209d1683ac766ebfbeea1f6aae6af5cdf427,4,1,d837b1f99dc40aaf8c3b2389d33185eab88dd133,,lestarch adding in Fw StringUtils,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| Fw |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    Adds some improvements to Fw including:    1. Fw::StringUtils  a place holding common string code used in multiple places in the framework.      ## Rationale      ## Testing/Review Recommendations      ## Future Work    Note: spinning `fprime-util new` into its own PR.   
nasa/fprime,355,2021-02-10T00:57:22Z,2021-02-11T17:47:20Z,True,2021-02-11T17:47:20Z,5523b1705e92852cba4938744e68c47ae8496103,11,1,17888e1491d8c1e3a1d437a9e34cc9c4e3b48e0b,,adding in generic repeater component,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    A repeater component    ## Rationale    Many projects need repeaters.    ## Testing/Review Recommendations      ## Future Work      
nasa/fprime,353,2021-02-08T17:00:26Z,2021-02-10T00:27:36Z,True,2021-02-10T00:27:36Z,135c257d16a85d6032e900694bc7545660b3aee7,17,1,0769fa958c0bc9b2bf0e880fd31b5271e2ad1f18,,lestarch adding in GenericHub component,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| Svc  |  |**_Affected Architectures(s)_**| N/A |  |**_Related Issue(s)_**| N/A |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    Adds in a GenericHub to support the Hub pattern.    ## Rationale    Many projects ask for a hub component.  This is a fairly middle-of-the-road implementation useful for many projects.    ## Testing/Review Recommendations    UTs pass.  Check the SDD for clarity.    ## Future Work    Edit the hub pattern documentation to call out this component.    
nasa/fprime,351,2021-02-07T19:40:38Z,2021-02-08T16:56:09Z,True,2021-02-08T16:56:09Z,29dfe2246591b868c64a7f2222979d5d7278cdfb,10,1,49c3b19b547a58c43713890552ba5381de2d11d0,,lestarch formal PR for the ByteStreamDriverModel,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| Drv |  |**_Affected Architectures(s)_**| N/A |  |**_Related Issue(s)_**| N/A |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y  |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    Adds a byte stream driver model that other drivers can model after.    ## Rationale    Need a formal driver interface for bytes streams (tcp  udp  radio  uart) such that ground and external interfaces are more standard.    ## Testing/Review Recommendations    N/A    ## Future Work    Once merged  a set of refactored IPv4 components will be contributed.
nasa/fprime,309,2020-12-10T06:05:29Z,2020-12-17T14:12:59Z,True,2020-12-17T14:12:59Z,46bd02094e8362da26b8b4a9e45caa5219db578e,7,4,4f5aeabb978251d092ebef07df4944b9ee6bbcf1 0de8bb46f9c4c0d5d33b5205ddf7c780a5d2f8a9 82c784d6d99b0dc79c9d598830a7df8ecdc43418 3ebff7613272d4a2a0089b0e675efd19491a6307,,mstarch fixes autocoder to allow component imports from other directories,The PR improves the autocoder to allow for using XML models from other directories.    In short:  ```  set(SOURCE_FILES    ../SomeModel/SomeModelComponentAi.xml  )  ```    Should now work.
nasa/fprime,314,2020-12-10T22:47:37Z,2020-12-11T01:56:58Z,True,2020-12-11T01:56:58Z,c4ad959bddcabc1987d6fcde5f095d4365c9c67c,2,1,1b80e1d50e21e279ebfca8fe204e6d0aa9bccc77,,mstarch updating license and notice per latest standardss,| | |  |:---|:---|  |**_Originating Project/Creator_**| F´ |  |**_Affected Component_**| Open Source License |  |**_Affected Architectures(s)_**| N/A  |  |**_Related Issue(s)_**| N/A |  |**_Has Unit Tests (y/n)_**| n  |  |**_Builds Without Errors (y/n)_**| n/a  |  |**_Unit Tests Pass (y/n)_**| n/a |  |**_Documentation Included (y/n)_**| y  |    ---  ## Change Description    Updates our license and notice text files.  Not functional changes  just formatting and updating to latest recommended text.    ## Rationale    Latest recommendation from the JPL open source authority.    ## Testing/Review Recommendations    Null.    ## Future Work    Null.  
nasa/fprime,300,2020-12-03T06:59:58Z,2020-12-04T01:37:26Z,True,2020-12-04T01:37:25Z,9f874a6eb1aec779fa0d804c966db50157b9f5ef,3,2,69e6b942c2898ec213e0ba5c362a826f3725a349 b863007208f9c8ff8ebe2ee81cc9968e15adee5b,,mstarch download GTest to gtest folder and only redownload if it is deleted not on purge,Fixes  #294.  Downloads GTest to framework install on first generation and doesn't redownload unless the directory is removed.
nasa/fprime,290,2020-12-01T04:26:36Z,2020-12-01T20:09:41Z,True,2020-12-01T20:09:40Z,cf3db96d17ff15877a67a293cbe012166f2e2a26,6,3,23ae9bba3636a24ffef2a9e793c17313efd85155 662884d61c57e66eabb0adc9ba81406fa8a230f6 b2e4b0fb8c358313b5cddbdca23263a02b2ba57c,,mstarch repairing seqgen,Does the following:    1. Adds in `fprime-seqgen` tool to python environment  2. Corrects example files  3. Adds documentation  4. Adds an integration test to test sequences
nasa/fprime,265,2020-11-20T01:36:54Z,2020-12-01T04:27:01Z,True,2020-12-01T04:27:01Z,f58bd6af7eabbecc60976ba73a62a94470930223,28,4,b68ab1b94a82bd751388c89075088681daafbc6d 78d01b1a81a4d468a0b04229bd3c0d54a4a6b12e e16529a24a86e9479c9f23d86dd6534d0e1e3969 4aecffc12b3c52d7568eebad140ad384b05cb52c,,mstarch reworked FileDownlink,This file downlink doesn't have the thundering herd problem.
nasa/fprime,284,2020-12-01T01:40:31Z,2020-12-01T02:11:19Z,True,2020-12-01T02:11:19Z,df32334272698031e0dcdc08b346e379b5ad07d2,1,1,5d865d96ad3606e169d371bb0c552f4a245527e6,,mstarch fixing config check bug,
nasa/fprime,282,2020-12-01T00:10:18Z,2020-12-01T01:58:51Z,True,2020-12-01T01:58:51Z,a923f49611d1a5888081e2d70a4d3e51298ecb56,1,1,c328c5f9db316861a0f720d0fedf600b8b2391f3,,mstarch updating best documentation practicies for Doxygen,Adds in missing descriptions for Doxygen to help projects.
nasa/fprime,268,2020-11-24T20:20:05Z,2020-12-01T02:28:19Z,True,2020-12-01T02:28:19Z,546c37ebbb2c73fcff61827daaa656a426ae8ab2,6,1,e1424b3feb182c2da8ee00d778d005782ee9f923,,lestarch adding custom addons to GDS,This adds in a very simple addon system to the HTML GDS allowing users to design custom Vue.js components.
nasa/fprime,259,2020-11-16T22:50:57Z,2020-11-17T01:45:48Z,True,2020-11-17T01:45:48Z,05141326a928d321f5b41eb1491126c4786d4346,2723,14,761e3337f6c4d0de602ad4d6c1a28df29237e1b9 8693a16aedf2abedb79509dbbca1d24733746a0e d12d9408d1c40166afa49337823946dd2ac37118 93f20bd44e923c80017757699dda5c0006a2ee10 3febcbbdc944eae94c48eb35d7b2c72f73908f1b c39641f8c8d6695c6f84e17b0d01c9c0b8ba12fe e48c45aa0425ad0e22fc661e2191fd1e6091fed4 f45c551114db289578c65a697aec7d48d2d79e05 dcc3f2a4633f0173eeca1ebe9cf7bd0f0a3e42bf bf74d79c32fe4572bce04c94cb1d8cb9219d2d57 3dd5ca72f45bc9a188a169adc65687d6a4c34436 9b13a4366e5dcd194876e54fb932dbfc78ab9b1e 79c05ad80c60292fbbdae26774c506b22a464f4f bdfbf8f05cd2601695d05c28a1e9560e8132fa00,,Update themed documentation,Update documentation with a theme  and regeneration to fix GH pages hosting.
nasa/fprime,247,2020-11-12T22:49:17Z,2020-11-17T01:45:15Z,True,2020-11-17T01:45:14Z,a9fa9671ce24c982160ba40dc3beda2560a0d1f3,46,15,9006782bc166e1611d6b33f1bbb77dbfaf2d32a1 d6d1e565f320a2d0ce8486be1da161195efffe3b c4d2e4780c13a510afb29991b7330d043518209a d656b3012c664a29ee354f302fd7aab229e9602c 2bf0d378776323c451a86420d4d9a519f7aacb95 d26d226b83297e2262b4b6b691488d229e5719f4 fa6a758f6cec27d09ae7a22b6956abd0c2cef763 dd49aa76dab9fe75e27de85f81900da24428e67b ec191ae52839ee9c4ca9ba2b2553a3ac662f77b1 ca01985ac260fba1487a52a47adb93e2edd93abc 68bca18ac43111fbcd824c50a8d191710e9ea2a3 af1a4897378eb4602c9655e992549ebfe90ccc3b 2c48e054096e5cf19cc571d76508d805153334af e8b7ae4581f761de7e69c324f354445599f4dcc9 15aa09328da6cedff080aee99c0e6ee2061a7e90,,mstarch updating Fw Buffer API,This PR is to change Fw::Buffer's API in several ways:    1. U64 m_data is not U8* m_data to more cleanly represent the type  2. Users may now ask for Fw::SerializeBufferBase representations to serialize/deserialize *into* this buffer removing the need to manually wrap the data  3. Naming conventions where followed e.g. setdata -> setData  4. Reworked setData/setSize pair to setData(data  size) to reduce risk of leaking memory by forgetting the size  5. managerId and bufferId have been merged into a single agnostic context member    **Note:** in order to accomplish these changes  the implementation was hand written not auto-generated.    `Fw::ComFile` was removed in this PR  as it is completely unused and confuses the understanding of how file donwlink works.
nasa/fprime,553,2021-05-14T06:19:35Z,2021-05-14T08:01:35Z,True,2021-05-14T08:01:34Z,60fdc8fa362dfc5c616ccb689c1aa0f281459f44,1,1,b2540e090e0fbef38a391f6101470774df13c41c,,Fix external enums enum compare warning issue,| | |  |:---|:---|  |**_Originating Project/Creator_**| F Prime|  |**_Affected Component_**| Autocoder |  |**_Affected Architectures(s)_**| external enum |  |**_Related Issue(s)_**|  #471|  |**_Has Unit Tests (y/n)_**|  No |  |**_Builds Without Errors (y/n)_**| Yes |  |**_Unit Tests Pass (y/n)_**| NA |  |**_Documentation Included (y/n)_**| No |    ---  ## Change Description    This PR fixes an issue in PR #477.  `NUM_CONSTANTS` was provided as `enum`. This causes `enum-compare` warning when user performs comparison similar to the following:  ```  valveId.e >= CommonEnum::ValveId::NUM_CONSTANTS  ```    This pr resolves the issue by use const as shown below:  ```  const U32 NUM_CONSTANTS = ${len($items_list)};  ```    To make the comparison user can write a similar code as following:    ```  valveId.e >= valveId.NUM_CONSTANTS  ```    ## Rationale    Comparison of external enum values with NUM_CONSTANTS should not cause any warning.    ## Testing/Review Recommendations    Built and run with no issues.  An example output looks like the following:  ```  //! Number of items in BpManagerState enum   const U32 NUM_CONSTANTS = 4;  ```    ## Future Work    NA  
nasa/fprime,551,2021-05-14T02:08:34Z,2021-05-14T20:29:03Z,True,2021-05-14T20:29:03Z,9387c141e5f23f48a3c31015bddbfa70db1c80e4,1,1,ed0c402891aac4d84c6362f45ecd80539de256b8,,Always cleanup coverage gcda files before executing unit tests,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  cmake |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**| fixes  #368  |  |**_Has Unit Tests (y/n)_**| y  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    gcda files are generated per object file when executing a binary with coverage enabled. Make sure all existing coverage files are removed before re-running unit test executables    ## Rationale    Unit tests are always built with coverage enabled  so every unit test run generates these gcda files. If you recompile an object while a gcda file already exists and re-run unit tests you'll get error messages saying that coverage can't be merged into existing gcda file. As a nice side affect this also means that a full clean is no longer required to get accurate code coverage results.  
nasa/fprime,556,2021-05-15T00:17:48Z,2021-05-15T00:42:09Z,True,2021-05-15T00:42:09Z,6443c4dd607b79c4d8bfd585cacfc199d5f38e54,1,1,31bfd5c035224f544562bc957d0011d464681c24,,Make NUM_CONSTANTS static,| | |  |:---|:---|  |**_Originating Project/Creator_**| F Prime|  |**_Affected Component_**| Autocoder |  |**_Affected Architectures(s)_**| external enum |  |**_Related Issue(s)_**|  #471|  |**_Has Unit Tests (y/n)_**|  No |  |**_Builds Without Errors (y/n)_**| Yes |  |**_Unit Tests Pass (y/n)_**| NA |  |**_Documentation Included (y/n)_**| No |    ---  ## Change Description    This PR will make `NUM_CONSTANTS` statically accessible.    ## Rationale    > NUM_CONSTANTS is a constant. It must be used statically and should be used NameSpace::Class::NUM_CONSTANTS to represent the number of the enum constants specified.    ## Testing/Review Recommendations    Built and ran with no issue. Verified NUM_CONSTANTS can be accessed via static call.    ## Future Work    `getMax()` and `getMin()` could be added as methods to return min and max value of the enums.  
nasa/fprime,557,2021-05-16T12:16:00Z,2021-05-16T12:16:13Z,False,none,055bce95b7e5cbdd2c177808a884b4d4130f72b3,1,1,2d7967e784e01968c4a3a76af0472a68adb39345,,Update LinuxSpiDriverComponentImplStub cpp,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,558,2021-05-16T12:19:41Z,2021-05-16T12:19:48Z,False,none,4bdb8431f0b5390c3bcc71bb0e20f5cd402ab8d5,0,1,2f6c19f07ce9ed02803be975ef2e79e232550e7c,,Update HashCommon cpp,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,233,2020-11-05T18:13:08Z,2020-11-05T18:41:32Z,True,2020-11-05T18:41:32Z,8e5fd5a7096ba9d54a05e077374871ffeef83241,1,2,927fc1f8601bf5d3e5a98085bcd079e2094078ad b905cddff759d6661e55cbfb4261efc5adc4a8b2,,lestarch release 1 5 3 delivery,Hot-fix to repair broken build environments via `fprime-util`.
nasa/fprime,560,2021-05-17T19:48:34Z,2021-05-17T19:49:09Z,False,none,9d0bfb0aa3d3ae74a9f811436c45c983321aec58,1,1,7b8d0d24958f492ab2344fa33dfbb0d30771c01f,,Update Main cpp,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.    I changed the inappropriate position of imports
nasa/fprime,504,2021-04-28T07:38:55Z,2021-05-18T00:23:43Z,True,2021-05-18T00:23:43Z,e240963d46e90740cda7c4bb11eb5833f03c015c,18,4,3b26135356c4fcc38df2d8afb78e6a04148648c8 4e8a4ff299aa2f521f966bc991bae2ec87c1541e f33b43bfb9ee192ef551987c6607e9138f4c5c41 b36e0a48abeb60798703e0ac4b0a4a7ce52afd8b,,Fix 502 Add option to allow reregister of opCodes,| | |  |:---|:---|  |**_Originating Project/Creator_**| F Prime |  |**_Affected Component_**|  Svc |  |**_Affected Architectures(s)_**| CmdDispatcher |  |**_Related Issue(s)_**|  #502 |  |**_Has Unit Tests (y/n)_**| N |  |**_Builds Without Errors (y/n)_**| Y |  |**_Unit Tests Pass (y/n)_**| Y |  |**_Documentation Included (y/n)_**| N |    ---  ## Change Description    This PR will add an option to CmdDispatcher to reregister opCodes.    ## Rationale  There are cases in which a client need to reregister its commands with a server. The current implementation will fail on duplicate opCodes. This PR adds `ALLOW_REREGISTRATION` option to config/CommandDispatcherImplCfg.hpp. If true will CmdDispatcher will reregister opcodes otherwise will ASSERT for duplicate opcodes.    Please see #502 for the for more discussion.    ## Testing/Review Recommendations    Manually ran multiple client drop and reconnect without any issue.    ## Future Work    None  
nasa/fprime,561,2021-05-17T19:50:57Z,2021-05-18T00:24:19Z,True,2021-05-18T00:24:19Z,cf9a5ac5dbfb56d08aae3fcb2d7452eb6470d21a,1,1,7f6613153823802637d5081624b18cb347e596c4,,Change imports,| | |  |:---|:---|  |**_Originating Project/Creator_**|x|  |**_Affected Component_**||  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**| |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description      I changed the inappropriate position of imports    ## Rationale    Refactor    ## Testing/Review Recommendations    I just changed some lines    ## Future Work    I changed the inappropriate position of imports
nasa/fprime,3,2018-02-26T18:54:59Z,2018-03-02T03:50:10Z,True,2018-03-02T03:50:10Z,909c22d1b305ba8b8420d44d6c057175a330b3f0,81,4,5ed2caf80fe515eb96a30732424181a84d89b24d 8207ba398b995ed95d05d1c6155ce153cdb52b54 7b5f2748e5c9c4533c255cab3f80993f35e9d936 e7e258b81589d8caa71b09806c3205209536296e,,Add Linux UART GPIO SPI drivers,
nasa/fprime,567,2021-05-18T18:30:32Z,2021-05-19T15:39:56Z,True,2021-05-19T15:39:56Z,b7e7230e2c5870a711de45de2595449818af86f1,1,1,8a99c79d035e1c3e4f8436d5ff08dff7991e031c,,Easier documentation navigation,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    This change adds links to the headers of the main Tutorials webpage.    ## Rationale    The current Tutorials overview webpage has an "index" that links to the individual tutorial pages. However  at a quick glance  this looks more like the "Contents" pane seen on Wikipedia pages  i.e. one might guess that it links to the anchored headers further down on the page (see screenshot below).    If one makes this assumption and goes down to the tutorial descriptions  they may be unable to find links to the actual tutorials. This caught me until I realized the links at the top of the page went to the tutorials.    This proposed change should make it easier for users to find the appropriate tutorial pages.    ![Screen Shot 2021-05-18 at 11 26 59 AM](https://user-images.githubusercontent.com/3259614/118704584-48b2c000-b7e5-11eb-9714-1c40d50b7089.png)      ## Testing/Review Recommendations    I'm not sure how to test the changes as it relies on how the Github web publishing pipeline is set up for the project  and I don't think I have any visibility into that.    ## Future Work    
nasa/fprime,548,2021-05-13T16:47:51Z,2021-05-13T20:22:47Z,True,2021-05-13T20:22:47Z,bfaab18755ee4f1e290bec734f34b7de531947cb,1,1,3624a9de74924b78260e08dbeae02b3ae120fbe6,,lestarch correcting Gds None bug,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| Gds  |  |**_Affected Architectures(s)_**| n/a |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| n/a |  |**_Builds Without Errors (y/n)_**| n/a |  |**_Unit Tests Pass (y/n)_**| n/a |  |**_Documentation Included (y/n)_**| n/a |    ---  ## Change Description    Minor fix for Gds that helps it properly reconnect.
nasa/fprime,483,2021-04-19T19:20:27Z,2021-04-24T18:31:51Z,True,2021-04-24T18:31:51Z,40975fe06e04bb486986c0c8bf5e31df01e137ab,1,1,7cfd77b5722e5d6efb3718e70e0f0e8ac5b3f26c,,Add weblinks in README md,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    This small PR adds/update some weblinks to dependencies and webpages.    ## Rationale    Optimize the readability/formatting of the `README.md` file.    ## Testing/Review Recommendations    No unit testing required for this PR.    ## Future Work    Note to repo maintainers: Feel free to review this PR and merge the changes. 😄   
nasa/fprime,566,2021-05-18T15:30:50Z,2021-05-19T21:40:50Z,True,2021-05-19T21:40:50Z,51a12f070bafdf985930f9d58501174407b0da25,2,2,7ef8e7e6636d1c16c3ea1961afa1ab1f601fe013 53565da8adbd9046d00a8722993e0a7835388ac2,,Added F Prime as an acceptable name in the docs,| | |  |:---|:---|  |**_Originating Project/Creator_**||  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**||  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**| y|    ---  ## Change Description    I added "F Prime" in brackets behind F´ in the docs on two occasions. I didn't do it behind every F´  as it would be repetitive. Doing this twice lets the reader know that F Prime is also an acceptable name.    ## Rationale    This PR should "fix" what is mentioned in [this](https://github.com/nasa/fprime/issues/526) Issue. This is my first PR  so it seemed like a good place to start.    ## Testing/Review Recommendations    This has no effect on the code.    ## Future Work    None that I can think of. Let me know if this indication needs to be added elsewhere in the docs.  
nasa/fprime,565,2021-05-18T11:54:13Z,2021-05-19T21:40:38Z,True,2021-05-19T21:40:38Z,bab927094874a6118b594ef087853ff060a6b0f1,1,1,07782a4dbd40034a47701c4f2d173954967e4929,,Added one line appending,I added test_list.extend() to make code more short.    | | |  |:---|:---|  |**_Originating Project/Creator_**|x|  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,260,2020-11-16T22:55:38Z,2020-11-16T23:17:13Z,True,2020-11-16T23:17:13Z,bf74d79c32fe4572bce04c94cb1d8cb9219d2d57,2723,2,e48c45aa0425ad0e22fc661e2191fd1e6091fed4 f45c551114db289578c65a697aec7d48d2d79e05,,Update master docs,
nasa/fprime,10,2018-08-09T06:19:12Z,2018-08-09T19:07:06Z,True,2018-08-09T19:07:06Z,8a88209c29a52f7ee7254519c01e5d05621e65f5,1,4,e476c6d09522468c6a30562fe1c349714be09de0 c75cbebd91174ce5db78d3564bd69b31d9f06fa3 c97a2e4421a39fe73ec74327851cffb6b84f7246 0909de9ff25f32f3a0dfe371192b08225b6786e0,,lestarch the Getting Started updates,
nasa/fprime,546,2021-05-12T17:07:54Z,2021-05-20T16:35:29Z,False,none,cc730b38f99b636fc928daa8923479be6f4d138a,71,252,9bd42fcdcc0c091766aa9d95d8b13f626ba4ceb1 58355d61ec79e9af6e8225b9afc995818ee6386d 42dce903a7a36a17747c9893421a86183af46863 694e9f394f4bc26f11958672b829dd083256bebd d0aefb12b08fc4b68b00824580aa340459b0a690 8a486eab64dc292388b8075d349854f0183a5d76 a78c72dbbd0f94691bf11270d9a1c5b6a06a780e e6c8388e172dd76dc79edcd06be670550e3c6fae e671ca770b7f744b60705114b71ca072f8e639ae aaeaa9799c6516c8b075d9bffd9cefbe298bb271 9b55afb98c945bce6d104769d10d230fcb43aa96 b7749f3267177a644e6eb81e334423d46ff600c1 3307ed022f30ac4fb071aa7b3033a07db9516c7b 703a479b0e8c5a91e6ab4306fac30fd7cb73cd5d 16800e70de974101077d6e242416b1e595af2787 b5f6ec9dd7785aac0c4df87ed66ac4e428c8d652 dd3bc70c028eef2a71179be4e40f183cde8e0010 b077f8240af30447528a5a986ce4538d8048fc16 f9ae652eeea7af5fde2a73aff13b25efbee0c180 9ce6ad218706a7805bc62b7c86e4afeea68f1ccb bdc0fb4c2027a34870087575e3f1444131f37674 9492eeafc856ef44ac0c696a141770d18b3de9dc fac3b8593080eb3891c0f841e83cafb48c6ce2d2 f4d8c8b6fb0f5b976eabf261aab7c81025dc9f17 20d118675b17f85fad52720592eb12b59ba108a3 9b5969b982764c277326f354c9ba43153ea4f14a 915bee0de240037531da7eb6b2e670d18f232f63 47bd2df0d8cee9c955e57d6536d1a152d519ad4a 8c1bae16c4fe11005bf7f5d5e42f548c68d73efa 3d18e82511499f7aa96df2fe96f7b520b4f06c16 a8ef1de2e5afe8288fcf96778c0de744f574c603 06f850d8bf862ac9a14801c7fc5860acdac29197 231966909eb9f51cd3beea5f8fb89a86b6af4ded 5ff451d13f803f93f7bd97efba3ad179aa4a6f47 bf4e50f9b732f65ba75d97e1e7028b4799493e8d 04a20795716b2e82f1100156dca63622da9658f0 9a1c9f0d3bf807eb2136d9275b12b6696cf7c16c 929913ed50014227120466778abf1cbb2afea4f0 a4ccdb81c8456a969f76c7ae778398352d6d4ef2 975c8232d3d403fa18c88676049bd9337d5ca74e 3e2d95f38199771177b1321dac557920a3353aee 8eb64314bd8b4525864a36dfde6c581a18235636 f363ba37d8c23af0273ab2174e146fddc421aceb a181f808c93b03453f23fc8689efae9c2e428f32 b0394abb154229d2a208f9e6d252c48d2e9ba0b8 293c8e62e7b066b721df06fe9aed6e9b7c7d95fa b32ee54331096504192d1fb4c876348982f5ebcc da8b33f85fff9a81e1eaaf00c0655ea3f3d42269 b306dc048eb5072a8333aa072d4eabe4c74a16cd 61fae70072996f02cb9882768a3625e545977500 84ff6ca211f51060a9fc4935c20b9243eb112e03 1a1d750ee019419f9077e02bcb95a187a80d4999 0a3babe2af1b18467fba8ffe3870210d335ea832 a6a7728447ff18ba8c1ea4efd87f0f942ede35ec bc2828ca29e83d08344b98239d38d1826ba8e874 f37220bdd953f00f6baf0440ad77133c37b7ac10 4d80a8e09d178d2d7b44872d85fa6268e01ab139 9ce0cfe97ffaab7dd6634696b6e6540d3d7ef8c2 a0a15f0c7a59bf612d99fe93d99bc139cde637d2 d14e5a7b02296dca3f5a333130149cd17a60d344 adaf41072dfca0755c2c62d1c4a5005a2541103c e7cb053d768fe64382b48e50fc3d54f93465a5e3 bcfc5ecda0ebdf7af3a3e7c679674da59dde0293 19e8eb193d39c896559ceeb443bda733af8accd0 5594612abfddc54ccf3e0e34f21ec980127dbef9 76b441ec08128477b3acc7fe50ce874b9a35d308 1f048c6180c019abd6dfbf5a7ffdd117cede71a0 dc838092b419540a3ba170f43b3bda9e54071d34 328182bc9e7c4f394a850f7ce57290b6ef6026db 2c24e6304299b61534eae68749c66c4ee429aec1 0b55395d932d8c9aba3325260f9f23dae25f9bd7 fc1da19165ffdffb9b3b8de754079915f353d9a2 21077050155c6b6d97e534df26c8dc1e28db4cc0 8033c094c3a0241e3a16c1810535ff433465020b 60dd3db496bb9a709cb1d6a2d30f332032355e80 0b62df9dcbecf0793f8d5e0e874d920e9653db50 aec05a1eb5c98ef69b04b9ef62c4981c79c3dd48 667f443e6ba9cf46b754a9e3f49c0d2f2f24a513 0333ae2e115304cb0f3edb9da79e28dffeca62d7 5edaf7ca8d5b9aabc6180c4f0deb6324433ae32b 32ddf565430de352ae31d8e305b2e529374f4067 0f19dba57ac249fd947744a909cfae32a5a449fa 71bbf3837a6f15d43143fc78c6ae272d12940151 52b52cfb590df7896a16ea9ff176b3f78b7c3af2 ff95ae40b9dea82275cdb809cb5d372413384a9c 47a50c8864a65167384effda64253c715193824c 3907590bc56bcad809c1f922ccfc3dfafae974f1 344e1bd81ac98d75fc7b866db96f66adf8b213ae 44f8cbeff11e83978f35fc1b95120c9b297053a6 9b9467e6a83a2e3957fa302d0b2e2520d16461da 209ba7042ff640153f99c62d4c48fc4208c126cf a26eefece7b20733c31dce392eb9c27f561970b6 9fd74309161d85bda25ecfe7e8399d8033e13a06 b63e7dd7c22cd9f4e8f6579a24c92db5c51b40fb cc010d93a5cb72199ffb9e9516e3882e565cbf03 ad9a27204ddc04001564c1f2156c78118a0ca274 04715089fc2cb3554c5af1874b02150a89d6d4e3 91dc12563c3205468e7b28dd68dbbe5d7dcd2b27 4081bdf610577b0e45c18e361d4b873f4cd04dde 713127ac6fd405b6bb86e4930bed8b9cb59a0b51 b2c1ab90107eeacba8a97236fc84b60939d94759 cb16e1c89612e96d1c8db9e522eab780c4c9da14 568a190ead7485b9d71ec7d94eb61dc8544b1a3a a8fcc2e6f43e8fb9434af0e17ddf1a1fe86a6eed 569df6faf4165765e38edbce8c4cbd0b09452514 d3bd72ff10101158dcb1bd18895fc154178fe80a 006bb9c0786208cdb4432efcc5f69003916c33fb c5fd235100264c50e9c86c1c23c33120051b0a43 09f655061978d704476e2294dcf4f5af4679104a 48199959b80d3158a5c519f7f6ee54420ac694bc 7e66d8cd44b58041ef1024671d533f2d904c1173 52892fae61865ca65c5b4b52962fd8724401ea18 b793571a347505975f8cd963706748de7183cb89 db4c245efb729b1e75230263457d7fdf9f783508 17560f739d6078796fec976bb8747bc13389ba0f 349a7d614b5a9c7d353ae7950f6f93a26fd15cdd dfbb68dc4db1d7818839b249a68a4f25fa4b0222 f0542ba670e1c97e1931faed1dc5e002b5cf516f 1dceb171830b4eb041664de5da365eea170463db 668afca8fd9ca39f4ab621035ec78132dc1ed314 da9f22fed85cd3b36ac511fe1f2a3158e199c5a9 54596e9f866faecc38e200acd3b15fc816b02317 e6425df5dc9d8b0661ecc5a49a2f05f0f037e01e 773e4a346c1a3079b3adfc0dc398caa85b0c41cf aeb6f9b20063aaf49122494c4a1e718158dd7cc8 faa8334b8b3274a46b523653b58bf2c54fdbadf6 3561f2ece0493e86e9b6a9e4340a0de36844b540 dca641cf803057631ede184391f2fcb8e98e1e08 527eba01743ec46348c78376d3e2c94c79a67c59 6f3a9f4967c5cdca78ef10f760d3ab0782fa6ec1 ed2ff916fcfbd881fba1e156058f2f7a80e440ee 4d5a79ee56292c861811d13b756f98228c6161c1 01003ca2d5afaa2d19dea8ecdc32b4c75a68b44f c2b1e183d9381f74b1f0dfc594afeef59d950bbf a61ff5a0e867cca779568434d23b4fcf8687b101 56d416f3d193f883ab3c1011cf672531f749f6f1 12c9be935e1a0ed3443de402df0a20bfd112e6ea f7447ec987ff911590698a1f0b00ae255e04c656 dc84016bb6bbd6c676105c0a04e6566d5cf3bb7b 84a7e324ede5e41b3b4cf6b2d794e4212e59630b 70527896f2f92db8365a7e30db0dd162272b1abb 2bb0efad1de4df9c3f6e54cd0b2bb282801d548f 29eb25b33fc178a5d1cf98843e834f885beec503 195c1afa3ad3d523260a8de67e3b7af4c0ba79f2 60a3217817bb27bf41f1accb2a62eec4afd1630c 866b411ce78b3cbf93fd1ee76843fe5bec982020 5dbabfa34f981cc1632b419c66cbd020f290bc2c 1aab456f76c90c83b3c6a348dfd69d4d1461e64e 242c392eb4e0a2e50d4fc5e92047fae84cc73f17 34c1880207d2e89bbca391c258601e68a24fdd48 7c485ca413843399662d705bc5be2d63fa40af06 9e59a8d4888b7d700ccf10877907b3ecc5b7c716 125acba7e4212abf0dba24a0d68fb94be54fd612 42addc5d4941f0761e2b437c89219c64158e63a2 2294647033d6bd6a48445a4b8d060d56a70814e2 d4d19197c452b91e033d1d25f3705d0ca1f655b5 d3f78f8e44dd2c946cbe1b6b731c7ceb8922ce34 448df9d97873976a308b217fd36fd2496f3beb26 6567aa947709cb2e16ed1df9d3c1289b2d08e387 05020ef2438b61358506247777e96a53b35d9a0c 36f0e590e1550066e948a37b7cb56167312bc059 2b431aea0ab012e69b469e131564fd13cba91d44 c0264d7523e6e4c20e52fbf46d164d54e5d893db 5ad1bc093a844e8386f7f440fe9d74f0a0d682b2 82cb1690ab059fba4820841bb1c65e824980f064 f169ec08425c6cde130303710a1ad825e1d2f405 97d06473b6c6dea2bee7f0e20c5fc9912b34a9c2 5bd756cf5886531c0b8b90c0bc81127745ebdc05 a3e7bf42da3893320b42b8ec10db2c43e4215146 3569dae9cc6e80212a7065a344d050eb59c6c0ee 42337ed53ec8e1fbd65602ad65cb6e81b19c7584 4cff1c817cd76a1e3883e6885e5dcd1babde7adb ac7d1e27a5709ffb7806b6f96e1f2305de90b7c1 ed569861c83623b44f448bf6af69c4d4109f17c4 4ece9cb960b9c3370111424951cc15424e8b26cc 68dbaecacb0ab1d016598a0570fdc245d4f1b47f 0f988bff4cec2a3190be634e54a6d4a6b91fcfcf 764fbbe7e2b22dd3d6dc7020eb0718ddec1e1fb0 a39376c39c9580b772f6860c125983245dac59ab 567b32fe39676a3c715b6915b2a22afe48fb73b1 a26887805515c0b9a15ca1a3a008db744f74868f 67abee5c8d6d596e3b5028ba207160d4bd82f8f0 d306509d0e9f76d7d55f77eff671c51bcb74016a 5cd09fb452958717d48f5e14d90f1d7ab7c1a560 02afea555c91c3cf9ab8c38a990127d92f4b4905 d67edb6574c771329ace262e6fa15e03e930c477 b804af7e7b3a265391988e0cdf2e86e9e1991447 9e2135e4b29741612d3192b3a2b3157c3c550994 09457ee10a325b9dbe7ba0a3460b48efef32f904 b8eec5c59f3b352fc8c85451a9e954120515bd19 7a17e0e3428526c8d2f9ed51e3db383d3b614277 b1d3e1baaa02fe072f91b027aa9c014d11503c1b 58c6bee674ea24e8976b41bfc32b7e5fd0640091 50a4855750c164801f147b6e592344ab0e077d45 231f8eb0a7d3baf46b8bd6ea56bddfe55e4dc1f0 f55f0498f3e8183d881b0d6665462ce39ffcdb39 ac7d45f73002352cc8dc44e52d131567a1d317c6 ce28c39ce9b53ee8c7a3f671dbab6278e218f3ef 3e5b04c09c5982fd5000be2bdb1673a0b8b61206 e23365004747d4b904ddad4adfbe75937d01febd 0e11744c275c542f78eec2af8e1a60a3884165e5 8f17be4bf14a33d97705274856bf05db5462d804 b98e34503a9b62219fc6b85e41fe013c262264f7 7b88366bfa6eac8b1e1c411856ff13219d9bd59c 4813d2e50e6ecd4e3d346e269cc53e320e976459 02b2b258b22aa462072bd6f313fa4e2026352f94 e076fb61a664898b75f53f5ff9f845f8caeebb2c 1ee18dd3f02dcb9b9bb3501bddbaa7f796cc05a4 7c88534b54f0c183754e51b11ab83336575c0263 e033656bfb69540048278023dd62289a4f0d3193 1f50dfedc4f67cf3896d0d48737aa77cb58d4445 eb3b1e2dfd95daa44786b74e97720856d2c8cc3a 148b2d4fbb30e2ffa648a6d1da7dba4ea278eec9 dbe104a5245ecab6a5f2f8e40924356f17e0824e d16132c50c223c0ee27673a365f4706faa4d50ea 7ae3eef43e5b29777af8cc0bbbeb64780e037f16 e6ff885bda70b40694e2efe3b1d8c09a0253bbff 1b6bf3658cc4917911eda5d8ddb79d2739e7b589 854cb84340be1848534b234ca8295f341f70e0f6 0b1ca980d32646e524adeaf0fd7168503b792e71 65f3195f7253a761eb24371f118f4861816a4e31 fae6315125694b1ae28e46b1b4e88eebc462e3bf 088c99906b52b881e87e18ca64286a33670a3a28 4ba48ac827c83348bc7732dd14074c6245e36ba8 5aace64612f2da2ff818b6ea8defd5ed58aaf394 f629c05e2c4b6048dff665694858f500f85cdbd0 764c3eb520071b4188b715ecece023341f478c9a 3596546436233458f1c91f451cc443470424e44c 056d21874ee8590b7795fa855ff54cb5b3d7ae88 35c88000f6990aa2e2b25ac13432b48496816c13 ad635840dd84579743b3137212460fc4708870ef eb7aa566eb5a3d81ca1ebd9c8bd762decabceee3 e2937659665eb4542085fece3ee0a5245fd80623 727ced05485a013a3583343ac0f7324bce64f4ec 66a9ae40f1de33674d93e7c10b9902c2c953740e b80e0b664ecc8ce5033bfe724f409a3f851e44a2 ff8b477158241436d5defd62e1ccffac73f4431e 946398e831145540b6f422a6f83fec12b562f721 d4e12c4fe879be61d17a7317fd1d88eb2fe5d96c 04192b322243a5232e36a21b958c78d127581f12 8dc5e4001a5d6e5de17ad2a8c42b1117b654e4ff 2af45f3c27a77a9022f18b8d03c3a14ab64d7a71 db63e55d134b10ecb62bd24cd2c84601b5584afe b78025ab2a0e7913632f9f80f5d40b7e0ce7693e be7217cba0cd799eed8a5b870d288dbc4633e31c a746085241540a391ad953788f0456de0b169fc6 7fc26155d62a5482f941b72ee82a22087a8616b4 74ad3352df380c6335321e1d37204e1d15047a11 d69bc65ccb32baa24b1cc4ad9aa9ce8e163b7a81 39912cc0e15310ebed1fa80aeafbe4ead45654b8,,Fixing minor issues,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Fixing some minor issues such as:    - Applying python PEP8  - Fixing methods  -  Fixing the functions docstring  
nasa/fprime,574,2021-05-19T15:04:19Z,2021-05-21T00:57:52Z,True,2021-05-21T00:57:52Z,87c80b4719be0ad943e61b9deddb29b501061aad,55,23,ee5d3b7b4d17f2fbee0298ef4b7882f2588245c2 b6634f99b45645bc68d4a842c770e1210782e441 be18396ae1fb749f3651e416d6ca2045be8124c1 1ed74b5043fd2b719cfd3beb80cf291d5b400f58 ef71431eac225b3361a104b737d3b9be1b494550 cc865e53c0a4b9dc3431a2ba444e499c4af162c2 2210a1e480ec94a7b2279363c34b734577e69831 51672ebd2a35c4e7af4501038f63c28222ea5492 222ae937b66d62241529c626b61b08a42a7f9335 83056596bd74a3497bbb9d3de31206ffcae382e6 9b9ff0f8b3c217a3d61e06aca0bcaa132074dcda 3e0b0101cc847042835808c26e8da2f0bf6f24ff 71c1301e142f6a997dedbc4336ab706b0a1cfffd a01b9a9e3780b14fd720a9e8af8f4f44e13bacb6 d5e2f958b3c8fea4ddbf09542387cc645f8ec552 e00361754787e8049bea96c09f4efcdfd432842a 55f0e02da425e26a95509f408fbe2a817e94d1b1 2415247f722cf8631df3890c6c1d748ab1fc6966 78981c0b62d5b3973ee86a5b431398fe533226af 21ea61c4591775dbc6332374e58674baed0ad1fd 679ce06cf94cc3869e451842291b917abd49339a abc47d746aae5b1c4d84b7b1e3c4ad6a0cc35326 d9206d48a72363c2c55b1fabc2a50dff82cf4a6f,,Fixing minor issues second version devel to devel ,Applying final requested changes by reviewer.
nasa/fprime,603,2021-05-21T12:13:58Z,2021-05-21T12:18:58Z,False,none,none,4,1,b5da676ba00c7f7a96aefe881971b7749ebcf82e,,Replace problematic term sanity check with confidence check ,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    As per the guidelines if the InclusingNaming project https://inclusivenaming.org/  replaces 'sanity check' with 'confidence check'.    ## Rationale    The term 'sanity check' stigmatizes mental health issues.    ## Testing/Review Recommendations    All changes are textual  and do not affect the functionality of the code. Thus  this change should have no impact on testing.    ## Future Work    None anticipated.  
nasa/fprime,598,2021-05-21T00:20:48Z,2021-05-21T01:00:07Z,True,2021-05-21T01:00:07Z,d4983cb1c42835a85781f711d37becfdb927eb87,2,2,34aaee5c45570dfb80023e1e6a665140781283ec 39d1618cc4064fca161033e34222bb295431d89e,,Feature safely open files,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## safely open files in context managers    safely open files in context managers    ## Rationale    ensures files close; best practice;  
nasa/fprime,604,2021-05-22T08:31:23Z,2021-05-24T14:00:05Z,True,2021-05-24T14:00:05Z,711443a81d1c3a73d00c99b18c20ac19065baa6d,2,1,e1d095deb0b74430d218d2d82411f7f774e94a80,,Fix 519 Repopulate cmd on double click,| | |  |:---|:---|  |**_Originating Project/Creator_**| F Prime |  |**_Affected Component_**|  GDS |  |**_Affected Architectures(s)_**|  static/js |  |**_Related Issue(s)_**| #519  |  |**_Has Unit Tests (y/n)_**|  No |  |**_Builds Without Errors (y/n)_**| Yes |  |**_Unit Tests Pass (y/n)_**|  NA |  |**_Documentation Included (y/n)_**| No |    ---  ## Change Description    Added option to repopulate previous commands when user double clicks on a row in the command-history table.    ## Rationale    > Double clicking on commands in the command history should repopulate the command-send box.    ## Testing/Review Recommendations    Manually ran the GUI and checked the double click functionality with no issues.    ![image](https://user-images.githubusercontent.com/35859004/119220029-319df780-ba9d-11eb-9bbf-06e461af5dd9.png)      ## Future Work    NA  
nasa/fprime,639,2021-05-26T22:28:26Z,2021-05-27T15:37:10Z,False,none,643f0c2cdd63ea2c4b95171dcfe4ed176df2ea79,1,1,e7fcc2373fd5a6eb34d555d0c4dd6d2aba20899c,,Update codegen py,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,641,2021-05-27T08:25:40Z,2021-05-27T16:02:07Z,True,2021-05-27T16:02:07Z,92bd0f0a76d9b9465408cc3733f8ecf9789a6ea6,1,1,a4249ca12da160576785f3230265e61001f12fde,,fix typography ,fix minor bug in typography.    Affected parts : documentation  Affected Component : No  Affected artitecture : No  Has Unit Tests : No
nasa/fprime,640,2021-05-27T00:58:49Z,2021-05-27T19:10:08Z,True,2021-05-27T19:10:07Z,745f5e58faa38e20f2c5e386b02fa979c7b1809c,3,1,29d69999e575e2752e83109f900a97ea5016f212,,Add fprime util warning when settings ini doesn t match generated build cache,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| fprime-util  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**| fixes #517  |  |**_Has Unit Tests (y/n)_**| n  |  |**_Builds Without Errors (y/n)_**|  y |  |**_Unit Tests Pass (y/n)_**| y  |  |**_Documentation Included (y/n)_**|  n |    ---  ## Change Description    Editing the settings.ini file requires a regeneration of any build caches  but nothing warns a user when they edit the settings.ini files and forget to regenerate.    ## Rationale    settings.ini changes only take affect after regeneration  users may be surprised that they edit the settings.ini file and don't see their changes take affect when rebuilding.
nasa/fprime,644,2021-05-28T02:52:08Z,2021-05-28T15:58:02Z,False,none,9eb67748645acabc588c824384e971c8a7e5bdb2,1,1,43ef1c12856fb14c6d092829929c33c4296f745b,,Delete CMakeLists txt,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,643,2021-05-27T23:18:48Z,2021-05-28T00:27:30Z,True,2021-05-28T00:27:30Z,5218784f25250e454df86f8eecc9cd7e483edc04,22,1,9099fa34841977a7b55f5366a6a3830ceb1570b2,,Cleanup XML Schemas,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| xml schema |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Before publishing an official xml schema  at which point we'll likely want to limit our changes to the schema xml files  run a linter to cleanup whitespace  indentation  and empty tags.  
nasa/fprime,651,2021-05-28T18:18:39Z,2021-05-28T19:09:10Z,True,2021-05-28T19:09:10Z,dc15db8d48c27315ac64e95b83a837568b0d5e30,3,1,e88c0b44f21affb8a6b9644ff8f84118ec849650,,Remove outdated eclipse project files,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    The eclipse project files created by @timcanham a few years ago have become outdated (python2 references  old make based build system). Since @timcanham confirmed he no longer uses them  we should remove them to prevent user confusion.  
nasa/fprime,655,2021-05-28T20:46:09Z,2021-05-28T22:11:46Z,True,2021-05-28T22:11:46Z,c44a009d7165fef9005f45885ef5c2e929977a9e,1,1,5bbc4a0c3a272de574ad48adfed7c7e15166364e,,Bump GoogleTest version,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  y |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Bump googletest version to latest master branch commit.    ## Rationale    GoogleTest has decided to go release less and encourage people to always use the master branch to avoid versioning problems. While they said they would do long term releases occasionally  the lastest LTS branch is 2 years old. Unfortunately in that time cmake 3.19 has been released and warns that google test supports a deprecated version of cmake (< 2.8.12). Switching to the GoogleTest master branch pulls in the fix for these warnings.    I propose that before a new release of F' we bump the googletest framework to the latest commit on master or switch to the latest long term support branch  whichever makes most sense at the time.  
nasa/fprime,620,2021-05-25T22:25:21Z,2021-05-28T17:44:16Z,True,2021-05-28T17:44:16Z,a481be08695fd86eb4d9c72674fc781989de5583,18,2,1bcf16a363e35b1180df8760a88694b3c808c2ca 3151cfa79d58794b4cf38e93b2e3663af358b2e9,,Fix shellcheck warnings,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Fixes several warnings reported by shellcheck to avoid that shell behaves strangely and counter-intuitively or giving cryptic error messages.    ## Rationale    Shellcheck reported ~143 warnings  mostly     * https://www.shellcheck.net/wiki/SC2071 -- ">" is for string comparisons    * https://www.shellcheck.net/wiki/SC2155 -- Declare and assign separately    * https://www.shellcheck.net/wiki/SC2164 -- Use 'cd ... || exit' or 'cd ... |...    * https://www.shellcheck.net/wiki/SC2006 -- Use $(...) notation instead of legacy backticked `...`    * https://www.shellcheck.net/wiki/SC2086 -- Double quote to prevent globbing and word splitting    ## Testing/Review Recommendations    [Shellcheck](https://github.com/koalaman/shellcheck) is a shell script static analysis tool reporting warnings and suggestions for bash/sh shell scripts.    Reproduce warnings by `docker run --rm -v "$PWD:/mnt" koalaman/shellcheck:stable $(find . -name "*.sh")`    ## Future Work    None  
nasa/fprime,665,2021-06-01T23:38:30Z,2021-06-02T03:42:03Z,True,2021-06-02T03:42:03Z,262a8cdaa72821385d26f90a0e3cb7e20d3ef57e,1,1,0926640f38d9d695963c685d75bc755e64b21628,,Properly bound size when concatenating strings,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Fw |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Use the size argument  rather than the end of string null terminator to bound StringBase::appendBuff    ## Rationale    GCC flagged this by highlighting that the size argument was unused. Technically `strncat` will stop at the null terminator of the provided string  but respecting size allows handling the use case that a user only wants to append a partial string  as well as not crash when a string buffer isn't null terminated.
nasa/fprime,663,2021-06-01T23:03:35Z,2021-06-02T03:38:33Z,True,2021-06-02T03:38:33Z,8058e79185ac697b740f31138c29b1a124997334,354,1,aec053296464bce0cf4ab868baf2a20e9f699f5a,,Remove schema refrence in XML files,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**| fixes #344 |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Removed all references to xml schemas in F' XML files.   The autocoder still validates all XML files against their schema.    ## Rationale    Our XML files had incorrect schema paths  so they needed to be corrected or removed.  Because of the upcoming transition to F'' YAML modeling  removing the schema references is an easier  approach than correcting all component xml files.  
nasa/fprime,666,2021-06-02T00:35:34Z,2021-06-02T17:56:25Z,True,2021-06-02T17:56:25Z,a39c1235d27463579ab7b4289ebe7494af826ed2,4,1,ccc746a1cbe9ae89113424418f8989388debd0ff,,Set O_EXCL when opening file with include_excl,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  Os |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| |    ---  ## Change Description    When `include_excl` is set  set the `O_EXCL` flag. Previously this argument was unused (caught through gcc's unused parameter warning).    ⚠️  Warning: This is a breaking change that silently changes default behavior.    ## Rationale    If we have an `include_excl` parameter  it should be respected. However  this does change the default behavior of `File::open(const char* fileName  File::Mode mode)`  since it defaults `include_excl` to true. Because `include_excl` was ignored this effectively is equivalent to `include_excl` = false.    I think the default of not overwriting a file if it already exists is wise. Personally  I believe the value of enforcing this safer default is greater than the impact of breaking projects upgrading to F' 2.0 that implicitly depending on the overwrite on create behavior. However  this is a serious breaking change and it may make sense to keep the current unintentional default and update `File::open(const char* fileName  File::Mode mode)` to set the `include_excl` flag to false.
nasa/fprime,380,2021-02-19T17:57:24Z,2021-02-19T18:07:01Z,True,2021-02-19T18:07:01Z,c30c61a6cb0f63d70d29c04ac31a60d53147947a,1,2,e27f6c47d3a02813ab65e08af6313fc6a63d6880 314205820eed21ff6afb48eb4022cab07742ddc9,,lestarch adding visible link to our documentation,| | |  |:---|:---|  |**_Originating Project/Creator_**| infrastructure |  |**_Affected Component_**| README.md |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| n/a |  |**_Builds Without Errors (y/n)_**| n/a |  |**_Unit Tests Pass (y/n)_**| n/a |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    Adds link to landing page  brings along other edits.    ## Rationale    Directing new traffic to formal docs.    ## Testing/Review Recommendations    ## Future Work    
nasa/fprime,668,2021-06-02T18:15:05Z,2021-06-02T23:26:09Z,True,2021-06-02T23:26:09Z,98145cda28f63a71726325d99238e39ded0f8f36,10,1,7623d8e044b2434431d3222813ca95e5bb99417a,,Correct warnings raised by clang analyze,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Corrects warnings raised by clang's static analyzer.    ## Future Work    Ideally we could find some way to run clang's static analyzer in CI  but I haven't found any good github action integration options yet.
nasa/fprime,670,2021-06-03T01:18:47Z,2021-06-03T21:40:19Z,True,2021-06-03T21:40:19Z,c8d00eab5be5ea93c975702a31d768c9ba1f5f2d,1,1,c9ab8b5e78800a7e1f765b53ca48874d225a1a84,,Update doxygen documentation generation script,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Update documentation generation script to correctly generate v2.0 documentation.
nasa/fprime,669,2021-06-03T00:32:43Z,2021-06-03T21:38:14Z,True,2021-06-03T21:38:14Z,3a55022faa9191ce28d4305c2e9b14a3b8c9d515,1,1,f82e9836aa5043bca9dc7366d9f25c0207d2b52c,,Add link to v1 5 series documentation,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Adds a section to the homepage linking to previous releases of the documentation
nasa/fprime,674,2021-06-04T00:18:24Z,2021-06-04T03:30:32Z,True,2021-06-04T03:30:32Z,8ad68c5b6151083536c819de3f7e536fc5be5b75,7,3,1a162e63de3f9b7e80c3f7e741b5cd2c0f28a1e0 49a33d07374d606e3942ae3448ce63e2bc742cf1 9118ed7d9276baba8f7f8f7f76260d7d7bf136b1,,I2C Driver Update Repeated Start Functionality,| | |  |:---|:---|  |**_Originating Project/Creator_**| OWLS / Brandon Metz |  |**_Affected Component_**| LinuxI2cDriver |  |**_Affected Architectures(s)_**| All |  |**_Related Issue(s)_**| None. |  |**_Has Unit Tests (y/n)_**| N |  |**_Builds Without Errors (y/n)_**| Y |  |**_Unit Tests Pass (y/n)_**| N/A |  |**_Documentation Included (y/n)_**| N |    ---  ## Change Description    Adds a new port interface to the LinuxI2cDriver to allow a write and then read with repeated start bit.    I also changed all the printfs as part of the DEBUG_PRINT over to `Fw::Logger::logMsg`    ## Rationale    Certain I2C devices (memory chips for example) require writing a set of bytes and then reading a set of bytes instantly with no stop bit in between. This is called a "repeated start". https://www.i2c-bus.org/repeated-start-condition/    Example from the ADS1119 ADC:  ![image](https://user-images.githubusercontent.com/2592986/120726607-532fb380-c48d-11eb-89a0-19754828d513.png)  ![image](https://user-images.githubusercontent.com/2592986/120726617-5aef5800-c48d-11eb-8dc0-2f9399856cba.png)      ## Testing/Review Recommendations    Testing was performed on a Zynq 7020 Processor/FPGA. The I2C device was using the Xilinx AXI-to-I2C IP core and so using the Xilinx Axi I2C linux driver.    Test data was collected via logic analyzer to see the repeated start.    Here is an example of setting a register to `0x0D` and then reading it back with the repeated start:  Last byte in the chain is the value we want to set:  ![image](https://user-images.githubusercontent.com/2592986/120727094-8292f000-c48e-11eb-91ba-8887bc3c8241.png)  Here we are reading it back (`0x0D`)  the green dots represent the start bit:  ![image](https://user-images.githubusercontent.com/2592986/120727139-a1918200-c48e-11eb-9156-f4159d726373.png)      Another example of reading two bytes back from the ADS1119 ADC:  ![image](https://user-images.githubusercontent.com/2592986/120727231-d8679800-c48e-11eb-84f7-3345467f72ba.png)      ## Future Work    None.
nasa/fprime,671,2021-06-03T08:18:16Z,2021-06-04T23:27:02Z,True,2021-06-04T23:27:02Z,9a9fd99a757750b56da1a46930f48dd6cc43536b,1,1,48b53817a3145c1088c30fec222be3dc5ef32071,,update docs py,| | |  |:---|:---|  |**_Originating Project/Creator_**| cmake |  |**_Affected Component_**| docs |  |**_Affected Architectures(s)_**| n |  |**_Related Issue(s)_**| n |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    a little adjustment  
nasa/fprime,679,2021-06-07T07:20:45Z,2021-06-07T20:21:29Z,True,2021-06-07T20:21:29Z,8eff6d1a9b67fbccb18dc008f5fcc26ab7783fc0,6,6,ad7194bd58b725f016b05e7d4ae1c30150a8d284 f00a5e4e1189bba6fcb3facccf9d6d0e0cca9b89 926c5fa0cb903ac26abbafec4963fcae9ad37c46 a22a5ce39dbf2e31eeba0d72caecc8146d0c427b 751364aed8a42fdb79938bb94f95f62043c24f7c 8a9861c46828fc32492fb9122a45242ff5d3b045,,Fix uninitialized variable warnings,| | |  |:---|:---|  |**_Originating Project/Creator_**| F Prime|  |**_Affected Component_**| Autocoders   OS  Svc|  |**_Affected Architectures(s)_**| - |  |**_Related Issue(s)_**| #678 |  |**_Has Unit Tests (y/n)_**|  Y |  |**_Builds Without Errors (y/n)_**| Y |  |**_Unit Tests Pass (y/n)_**| Y |  |**_Documentation Included (y/n)_**| N |    ---  ## Change Description    This PR resolved some of uninitialized variable security warnings from CodeSonar.    ## Rationale    A variables should either be initialized or have a meaningful value assign to it before being used.    ## Testing/Review Recommendations    Ran all Ref unit tests with no issues.    ## Future Work    There are still about 40 more uninitialized variable warnings     ![Screen Shot 2021-06-07 at 12 12 05 AM](https://user-images.githubusercontent.com/35859004/120974486-0f56db80-c725-11eb-9251-4aae04169c8a.png)      due to the following lines in the autocoder:    https://github.com/nasa/fprime/blob/9a9fd99a757750b56da1a46930f48dd6cc43536b/Autocoders/Python/src/fprime_ac/generators/templates/component/cpp.tmpl#L1810    https://github.com/nasa/fprime/blob/9a9fd99a757750b56da1a46930f48dd6cc43536b/Autocoders/Python/src/fprime_ac/generators/templates/component/cpp.tmpl#L1891    https://github.com/nasa/fprime/blob/9a9fd99a757750b56da1a46930f48dd6cc43536b/Autocoders/Python/src/fprime_ac/generators/templates/component/cpp.tmpl#L1947    The autocoder does not initialize the variable and it gets passed to the `deserialize()` function ([see here for list of deserialize functions](https://github.com/nasa/fprime/blob/devel/Fw/Types/Serializable.cpp)). If the condition is not correct the `deserialize()` does not assign any value to the variable  and returns a status other than `FW_SERIALIZE_OK` which gets asserted in the next lines. Since the code will not pass the the assert no further action will be done on the uninitialized variable.    There are other instances of the similar pattern in the autocoder so it might be better to resolve this issue in the `deserialize()` or in the autocoder component template.    Please advice if you have any idea how to resolve this issue.
nasa/fprime,681,2021-06-07T18:09:27Z,2021-06-08T02:01:57Z,True,2021-06-08T02:01:57Z,ca64fc82af05f5743dab099b46c91be9302fdc90,6,16,64265b2f8361979188db329a2e3244d650079561 3e9de5f2fb1da5e4cf766ea20392bafefa7ea945 7fa2bbbe9d4a54fdff64ff806db5cb54139c03bc 3b16b49c4643efef3d4b90b0ba099c51af0e134a a38da2d5917104499b80b109860317f5707d7f26 7893fe8f20f6b5bf4223dbf5e2a994ae5f04c27a fa5c69cd2af9d2e213a5977e54be459edcb2d39b 80117c241d319fe5ac940c89141c27ba2fe20462 cb9378517ce0776cffc2aefa2c4ca9931f16390f 0e26a702ac1af891e18a5fc1503e245cd0f07911 73272d04f84872886e50a54c79711d8c758d1539 78a04ec420c7e5d12d51e27d6e428776685b8a18 5a6191212f598de286f78541bab3781286a478f3 590eb3bbe898a9a1a8a96b51de59c818773b2d04 51c6f03691e6391d6443870bea6fe70a70e3ffc3 b51ebd58d7e090aee8bee307470aa9641301e8ca,,XML support for enum default values,| | |  |:---|:---|  |**_Originating Project/Creator_**|F Prime|  |**_Affected Component_**|Autocoder|  |**_Affected Architectures(s)_**|enum|  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|Y|  |**_Builds Without Errors (y/n)_**|Y|  |**_Unit Tests Pass (y/n)_**|Y|  |**_Documentation Included (y/n)_**|Y|    ---  ## Change Description    Added support for default values for enums in F Prime XML schema. Modified the enum XML schema  enum parser  and enum cpp template to initialize default values.    ## Rationale    FPP has support for the default keyword for enums. So  the enum XML schema needs to support it as well.    ## Testing/Review Recommendations  Modified the existing enum_xml tests to check that the default value is correctly set.    All tests built and run with no issues.    ## Future Work    N/A    Note any additional work that will be done relating to this issue.  
nasa/fprime,687,2021-06-08T22:59:15Z,2021-06-09T03:23:32Z,True,2021-06-09T03:23:32Z,54495c8c4386cbcb7fddf1415374285dfa449e15,3,5,09d2ab55f6f2f9f8fe3a6e54ce3320ae77473d0b 93bd5f68118dfef8fcec58b05171d200b702ae5d 65c55b97350fa76f242f052f9f9d8d5fdef55f65 42b24c3c26202f5a100a8f966e6af1befde9dc29 c51b9133928ccbd4c70d66fd5f02d9a4948c82a9,,Fix Ignored Return Value warnings,| | |  |:---|:---|  |**_Originating Project/Creator_**| F Prime|  |**_Affected Component_**| Svc|  |**_Affected Architectures(s)_**| - |  |**_Related Issue(s)_**| #678 |  |**_Has Unit Tests (y/n)_**|  Y |  |**_Builds Without Errors (y/n)_**| Y |  |**_Unit Tests Pass (y/n)_**| Y |  |**_Documentation Included (y/n)_**| N |      ---  ## Change Description    This PR resolved some of ignored return value reliability warnings from CodeSonar.  The proposed fixes are up to debate so please advise if there should be any changes.    ## Rationale    The outputs of the following functions are not checked. If the returned value can indicate an error  the error will be ignored.    Also quote from CS output:  > The return value of snprintf() is checked or used 100% of the time in this project.  > The return value of Fw::SerializeBufferBase::serialize() is checked or used 99% of the time in this project.  > CodeSonar is configured to enforce Ignored Return Value checks for any function whose return value is checked at least 96% of the time  unless the function is used fewer than 20 times.    ## Testing/Review Recommendations    Built and ran Ref with no issues. All UTs passed locally.    ## Future Work  Output of the following is still not checked:  https://github.com/nasa/fprime/blob/eebef10711194f131128809ef9e6331acad8d733/Os/Linux/File.cpp#L334  
nasa/fprime,690,2021-06-09T09:03:29Z,2021-06-09T15:44:47Z,True,2021-06-09T15:44:47Z,b4ef486945afa393dd20fd868de9dce5bfbffb2b,117,1,4092c08489b2edf08066d5fdeb5731cac548aacd,,Remove old binary UT files,| | |  |:---|:---|  |**_Originating Project/Creator_**| F Prime |  |**_Affected Component_**|  All |  |**_Affected Architectures(s)_**| - |  |**_Related Issue(s)_**| #689 |  |**_Has Unit Tests (y/n)_**|  Y |  |**_Builds Without Errors (y/n)_**|  Y |  |**_Unit Tests Pass (y/n)_**| Y |  |**_Documentation Included (y/n)_**| N |    ---  ## Change Description    This PR removes all the old binary executable unit test files from the UT folders.  The deleted files are one of the following:    - runtest_CYGWIN  - runtest_DARWIN  - runtest_LINUX  - runtest_all     No other file was deleted in this PR.    ## Rationale    With the new fprime-util tool there is no need to keep the old executable files.    ## Testing/Review Recommendations    Ran `fprime-util check --all` with no issue.    ## Future Work    Cleaning up the GoogleTest and gcov files will be done in separate PRs.
nasa/fprime,692,2021-06-09T16:09:51Z,2021-06-09T17:10:20Z,True,2021-06-09T17:10:20Z,2a6580d952ee64128749eb55cacaf62d7c0ce484,1,1,a44b3df0a051d86257392bc4e10c8ca07760bacb,,Fixed incorrect scheduler number in Math Component tutorial,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Math Component Tutorial |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    The number for the scheduler connection was incorrect and has been fixed    ## Rationale    This needed to be fixed for the Math Component tutorial to work correctly    ## Testing/Review Recommendations    To ensure this is correct  use it in the Math Component tutorial and make sure it works.
nasa/fprime,694,2021-06-09T18:12:51Z,2021-06-10T17:33:22Z,True,2021-06-10T17:33:22Z,5a9cf175339c60f0e24891b6466f239c68e7eccd,252,2,290ed48ea1feaaa09bf193de3b96cf5f42415d02 0989502770cda29d8b48d6dc4431cf518f5e3a26,,Remove old GTest UT files,| | |  |:---|:---|  |**_Originating Project/Creator_**| F Prime |  |**_Affected Component_**|  All |  |**_Affected Architectures(s)_**| - |  |**_Related Issue(s)_**| #689 |  |**_Has Unit Tests (y/n)_**|  Y |  |**_Builds Without Errors (y/n)_**|  Y |  |**_Unit Tests Pass (y/n)_**| Y |  |**_Documentation Included (y/n)_**| N |    ---  ## Change Description    This PR removes all the old GoogleTest unit test files from the UT folders.  The deleted files are one of the following:    - TesterBase.hpp  - TesterBase.cpp  - GTestBase.hpp  - GTestBase.cpp    No other file was deleted in this PR.    Note: GoogleTest files in the following two folders were left for user reference:  https://github.com/nasa/fprime/tree/devel/docs/Tutorials/MathComponent/MathReceiver/test/ut/Handcode  https://github.com/nasa/fprime/tree/devel/docs/Tutorials/MathComponent/MathSender/test/ut/Handcode    Please advise if these files also should be removed.    ## Rationale    With the new fprime-util tool there is no need to keep the old GoogleTest files.    ## Testing/Review Recommendations    Ran `fprime-util check --all` with no issue.    ## Future Work    Cleaning up gcov files will be done in separate PRs.
nasa/fprime,697,2021-06-10T16:53:39Z,2021-06-10T17:30:20Z,True,2021-06-10T17:30:20Z,b83366edd5b88696e555cc1dc2412a4e62eb815c,1,1,212dac72b4a1352f463e64fcc56c16fce815c03c,,Remove javascript code quality from README,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    After splitting out the GDS we no longer have javascript code in the F' repository.
nasa/fprime,704,2021-06-10T20:57:53Z,2021-06-10T22:42:22Z,True,2021-06-10T22:42:22Z,03c89d364a5f89cc7cb6f9ba9e3701759adbc7f3,6221,806,e49dd61386dddd1d4b64354a7198f8e02f374ace cafd7de529ba08fdd4920eb4ab85c372f346cb88 133fa937da8dbfe1eb690da110c68520a5c7b3d0 7b3461ac309f568380a75a98fd5a0d7be4c7457e 9f039bb15a3405ce9b7041e11fb5e361c789393d efefe813b0b0284077df11d78ec277c538498abb 48bb06fa54b0618404b7f5bed07065664751a65c 8c7413188a1a3b1b59f538eea6397406110bc33b c38f55e35ec198c1ab64ecacce9b5ee7c4cb5862 4684ca0516d1e48e172f6b9e67286a81b1bde56b 81b9654b68d2fb8ff138614010ea18fb05f4c194 7489e551da4e5393a816319b7f1f514deefca8a2 d2dbfe61e3d6a51371c782605b277ddb851044aa 8d1082d2b249109815e5a6d78429050e09d6cb89 820bbb3a3d47ae16ea2338766eba759b6cfde4e6 d3b6f7da41766f0c0d0213ac79351b2f1cf35d1d bcca09d4c519c94a777474cd801d664e04580bb8 ba7e3d1652aac91db06c9505834b2e3933ad0ee6 4a000f1e50afb2048469d89ee9513b2c20010ce1 34d93e9c648da0eefcf32d8ac575f713106e809b 35403e9193d119f8e9577d5ac0f2cc4634bd7497 d2d03659d5af97454f4ad0ec74f35c188cd5a764 128f17d5b2eeccb8bcc8e5059b74f07a09c65790 bff81e29d1ce94044a63798928789b027a5e95a1 c7f11b1490b805e1c0a620fb0f6865533fcb95f3 56f81a86ec63a82ef62b5ad0ab5b00725bd7da2a ee461a39a38395ce30a186a77088a535cd656cd9 6a7724392e238e6cda2017233b349d67781fc207 6b8b28b8a0b259ee0fcb3040a7eb85723243bfca c1b3f088afb42c1b414987399a31c382059aa7d1 a07b11c029575122929bdc15bc7d424cf95ebeb5 87f45870471e26b76bad89ca6e023b659634e511 73537767cafc5a6ab3fc0694b7b6121614445508 e240a8e7cb731f90b2487378fb6a7d685e02ea57 345c1ccfa43c21fe0895882648aaa29c4fe567d6 2915e1f5b7282d6f0e66658adebdeeff5b2509a5 5a77bc141577867a452c47aa772dca05b468d6e2 1f092fa3d796ee62959eeaa153aad50a6dcac281 1be591b202b82456f1c2cdb64f040f0c4393920d 610600b07ba212f040a891c7773c91b381567b3e 7a1d6a61307f433d7dd0dadf0bf273910bd3bce9 53c44f364cb856b0af1c884579e4675950eb054a c84f2ba7b5cc47d8162d76c97375e837b01dc492 93430abc814b48ed5948a58c22b470b6f1260654 455042aed7230eb0627ffe51f81aa9a90e40b99b fd98f01ccac38a52e256efbeb657505c5f4007e8 f47014d286f51bb87da45fca2c5ca0fa6e9af46f 271a670cd019664558c5f2bfe2c0a27bfecbbcd3 34ebae82f1a3661d58842d64f02a20c08081aad9 e36cc5a03bcf0e4d8cdf0f756b497d1c97538c5e 5d2a970d3a239f8f94b2620ecd26d69624f5e444 0a098cdfeb2b40e483448a871a937901a65d353c 53ffe99c8979c1740f4f97cebfe30374b2448cdc ca7182300200e1e5b98931ecb31c9a4b4b9ed4f3 025a71e3c5ad4acb4aa51ead5a782c80419faea7 c873bb89e8f24d1693ccc808445d91b8af549b33 75171fc20edea1c0c1449b693ffa7d2493b24b5a 291865ccb23a0fd1372eeede00447d7feca9d1f3 cf60a7dd893a20332ac4d47543e0688765d6d7a3 99cb3805ace38ad6ca84b34b92fa022912166d3f ef288d9fbe1d7eea2aafbe25caa3671e107ca627 389f796871efcbba21edce073ddf066dd487ef19 54983c9e9b6465de4ae78851545b3bad1ebba6d2 d438a64a2fd30848b750f87069f8905395de1e48 ecf2199763c3437223b6f69083f0cac013f94d8c 59f5820a1a44ba17bfea3a5222f237c8a399d29f 5ba6eac07593da9bc782f101e7d90b476fab01a7 a14dfb802efc10af475b840e8f0328edae885736 a9bc48cc64711e3f7093a72d91c32e89547bd0fa 35fa4ba3ac40f376081760a53a932fb3de86984b 73525071a96b1739c0be841ef88e7681f393f6f2 7ab6b0d3ebe06088aa9be46fc4d8c922581e9107 8b4e870082ced90ca67357a6a4205c420031b907 888494975e73b486cb434830611d141ec650c5e2 b64d18140ac745def186cc47db19f45324f20c1f 9550551b5c96469b4b68d41f3ba4922509771f7a 12c478bd79c2c4ba2d9f9e634e47f8b6557c54a8 6ff1949f8554690a4f061fd70005a6b650154c2e e8b927d727301abce452f75c8e3f0db495e7f635 e1624fd8973284aec3a1c08c26732349620c2a6d 7cc8cb53d031bb3aeaaf0408d8b684666e5b8154 d50fedb30bbc039f820aebd8c1f9e4eadf48159f 82213c96e930f02737281a0e62b44384dd6085cc b255ddec5a995e17c047ceacaca79ba7412e48b7 10a8b629a23a883658863dd1c899131c407c809a 9960899129905981f99e6c8e577c9e0f489dc455 f43d1a96730db2cb6c92170e6edf7656ee3dbbb4 3c02392727e1f5a0998bfd9470f67515c4ee7766 7bd302e344383ad9dc42d5fc1872a031e0d6c4ce 51d74c12f442b9682d1703823a92c416262bff12 70bcfb1452b47afd7f661969f01cfaacd0c42fec 0845912142ec08c5fbee320a6d55da94a993c544 77f1f02f4eb1fb177a93128724860053c5775324 9ba5e0e8600823f3d8b9078b89bd3aff43e0beea 8f80b06c938b4b6d819c00c414d776d6e16107bf 98f50f21cef5dfa1787e0c22dcf2193f7672c751 96abf701d215a07403969920ce3a1723881e44af 60655dcad31c4f8d865a8bd381eef7f0b40b6199 8b6b95bbb21b88946c15719ece9cf5d3a1ba35c7 9c749ae91c48e75ff996953ddc8b8f81e18b93db aa663303327587146390dde67b83b9bf4e916d54 e12bbf595eb6124ea52e5045ab6aadd63df7d5ab 7cfd77b5722e5d6efb3718e70e0f0e8ac5b3f26c b7250a9508ce5d817cdf6f515173c00a3e62a3cb 87292dbd1929126a9758808f97c05ba2e56b8900 cba76fc395dd3db92fd22597f03cb09ff06b9219 40c55cd8ce1e310752655257cbbdbc4c06c07bdb 6b6fc594f0d4238a30c0c45e2827a315c0bcdcba 2fabf2bbb3650afa0aba08c80e4c9a53312b8712 6f3262a425de460471eebee856c36c096e473387 868825d59dbda5c61187832172f05a1ecec2762b 79c6137997998da30b46e70f1f62984e821592d3 c89f85da12330ba01cc262b95d3a9fb2ed0c627b 5f112b666cd854299e81574d232db8b34feb1267 a66bb82d9add901b81e0a7d5044220b1b8b79852 76eb3b901bd0fc5dea7803df373c34ba0b5fd152 f2bfbd67a4a4746a24ec7e23c4ea54210b99b39b 1bdb7946703770fd27ef8fa7e173df6c37e41e5f 126826aa51498a941c137eed47cd47d877db7d20 ef8c6dc8f2ba4ead8aaa0f7f6b8a05fde2ec8edc 40975fe06e04bb486986c0c8bf5e31df01e137ab e165c914b0d0240eba8164c52f8856ce90bee3dc 3f1ec4de1a67abbd2e7d363212cca3e31a6036ce c4880e6016546e1f95852d9323758963a910f308 e7b53e0159bc011c58e32c8b97a141d92e4d7c9d 4d93edd638fb737c695ffd469d3ebcc7ab112edd e14095fb018ffe5657d41c705adb9026840fb143 1edb2cd5fb69c101e7e18609200e4f562d9201d7 3b26135356c4fcc38df2d8afb78e6a04148648c8 f8c3cae3f0b3f0d687b08b4741c8ecaab4b34ba9 33da033d954bfa8634e10d741f3baf9339563c9b 195a783ace21d5be450a52c996e3972b173401e2 a3d19bc37b17f8954c43bf87904ab8b6f8e0fb58 bb8fb15ec36fc8f64aa026486840019aa13cee07 811beae18717f26277c1091feba4ee1db56d481c 4e8a4ff299aa2f521f966bc991bae2ec87c1541e f33b43bfb9ee192ef551987c6607e9138f4c5c41 facd098f0deaafc9bac7605f9ead8d72798c8ee9 dcd62b8b4221a221471e3b47c0508f0bd8e81118 ac3cd69f0710773166ed4b5d76541485c7d96193 251418bd864d688dbf4158464be406a7520a2195 4190bab405cecec4a8d83c20cdee77d574cb35d2 120a42d1c311cb0f3d4523fb8c517cd75e648e88 9eb695ff720340f8b83167c559faf9de40ed971b 7219f13ec9fdf2172eb349582bd0601c35a3ffc2 222048e67978f32f591e873c2a7157f6c6add06a c94d1adac59794353fc0647054db8b26d795d981 fe73216a1bd6f909c0539a279b0c7fa95ceff7cc 1ee614157ffe0a3b93407a6b668cd552f1cf3ea4 3254e192826d429f65e066d18c1aa04309012fb0 794ce7c6669338f708a1d6cf34f7535312efafd9 da8f11eee6a2a02483e08fa71d0125c8a199ec5e 38591fbb7200ee782aa0270ee792fac1074a8bcd d4bf0dfc3b2ff742691b669401206d8e1bcf0419 46bbcfb6a76479c52702100e4e8b31d6aca40b01 20a7f7737158afe96a09681f23705e0277ceb8c9 51a1c19b968dc291b2a3211c168a9351dbd98673 e7ad87d3b094f8ba0cc89242bbba581f42a11e7b 52fb2330039f4d44b1b7b2fb5a4e9f5128de57d3 1fffe228c711942fbfb4cb17d350a2c6e2ff69b5 e1c243e43870d37aa75034f939aab765640cdfac b4a2a9bb11cf6256e807e60c9be305ddd406b10c f28c298cb1fc5f828e484e2aa5fefdb8c1c68a03 4c2ce7ade1c5316c8c9a4e84508b5d568740529e 44160148966eb3205a257dadd72529a2bbc1e32a 3624a9de74924b78260e08dbeae02b3ae120fbe6 67b7a7d7177af832c02893bac5db2a22a4b8e7fe bfaab18755ee4f1e290bec734f34b7de531947cb 26d403b8a2e50f53db48209f0aefa1895dc58a8d aea0fc34d10662309ed7aa88d7abe24d682032fa 4abc8e5fd28124ed6ca7d7d020719bc40fb0dc15 25ceeefd30ecc1b6a01e0eefbcbf956e3d82e00a ed0c402891aac4d84c6362f45ecd80539de256b8 b2540e090e0fbef38a391f6101470774df13c41c 73b785c092c0d02d36fe98ef153f40732fc55380 5bcf68bacd8505ad22a2ffd77441c6cd741af369 e20486aaeb0988d9293ec8372227e7ca52d41c72 60fdc8fa362dfc5c616ccb689c1aa0f281459f44 7a1c235b3852cd7dd25b8cc7ea22c49824101116 9387c141e5f23f48a3c31015bddbfa70db1c80e4 0c4c444aceebd5daaab2adbe60b0c647e1c949e7 31bfd5c035224f544562bc957d0011d464681c24 6443c4dd607b79c4d8bfd585cacfc199d5f38e54 1bf69c3d92fb44a8d65402629479e0baf066b1fd b36e0a48abeb60798703e0ac4b0a4a7ce52afd8b 7f6613153823802637d5081624b18cb347e596c4 4a1c4cbeef6450a389bd3215797cf3715a2a73d7 e240963d46e90740cda7c4bb11eb5833f03c015c cf9a5ac5dbfb56d08aae3fcb2d7452eb6470d21a 8e3071b1ea8fee467d5361f55d4de15eebc3d5ee 07782a4dbd40034a47701c4f2d173954967e4929 7ef8e7e6636d1c16c3ea1961afa1ab1f601fe013 53565da8adbd9046d00a8722993e0a7835388ac2 8a99c79d035e1c3e4f8436d5ff08dff7991e031c 6120dd7fd1a8645a5a05820d0025bccd7038e9da b7e7230e2c5870a711de45de2595449818af86f1 bab927094874a6118b594ef087853ff060a6b0f1 51a12f070bafdf985930f9d58501174407b0da25 87c80b4719be0ad943e61b9deddb29b501061aad d4983cb1c42835a85781f711d37becfdb927eb87 e1d095deb0b74430d218d2d82411f7f774e94a80 939623b94d5da296540730e5075736a6dddd0d47 711443a81d1c3a73d00c99b18c20ac19065baa6d 1bcf16a363e35b1180df8760a88694b3c808c2ca 29d69999e575e2752e83109f900a97ea5016f212 a4249ca12da160576785f3230265e61001f12fde 92bd0f0a76d9b9465408cc3733f8ecf9789a6ea6 3151cfa79d58794b4cf38e93b2e3663af358b2e9 745f5e58faa38e20f2c5e386b02fa979c7b1809c 9099fa34841977a7b55f5366a6a3830ceb1570b2 5218784f25250e454df86f8eecc9cd7e483edc04 76626526c60961af9455a46a1e34b4444a97264a 3dffa0d39d510f7668157aba869b21a6597abfd8 a481be08695fd86eb4d9c72674fc781989de5583 e88c0b44f21affb8a6b9644ff8f84118ec849650 dc15db8d48c27315ac64e95b83a837568b0d5e30 48137016bae1ffbe7833f395aad95c70a69f3fd5 7b99c948f906d8c7ab64810bc5f645ca2a02177d 23d83854ae5e5a895ccc8649dbe59c2bcccb06f8 5bbc4a0c3a272de574ad48adfed7c7e15166364e 01e8a7a949c30859941550e0a34e5ce3c9216b23 d79bfde43965d89e0f71f79970ff819e1a385c49 c44a009d7165fef9005f45885ef5c2e929977a9e d32dfa9ceedbc046db45b451c56de7f1f9196348 8058e79185ac697b740f31138c29b1a124997334 262a8cdaa72821385d26f90a0e3cb7e20d3ef57e a39c1235d27463579ab7b4289ebe7494af826ed2 98145cda28f63a71726325d99238e39ded0f8f36 3a55022faa9191ce28d4305c2e9b14a3b8c9d515 c8d00eab5be5ea93c975702a31d768c9ba1f5f2d 97b4d51dbdf3796d030cc793101d3ac5f85a365d 8ad68c5b6151083536c819de3f7e536fc5be5b75 9a9fd99a757750b56da1a46930f48dd6cc43536b 8eff6d1a9b67fbccb18dc008f5fcc26ab7783fc0 ca64fc82af05f5743dab099b46c91be9302fdc90 5ff62bdffd69abb42ba9f78756b7cb4ec3e89ae7 eebef10711194f131128809ef9e6331acad8d733 61eb8195cbe2c4d12cbea93c8cac4440f2ebe78b 54495c8c4386cbcb7fddf1415374285dfa449e15 045934db49761870242742134ec026e3cfb31162 401a9a7670526a79cdf154eca2e923c6758b3eff b4ef486945afa393dd20fd868de9dce5bfbffb2b 2bcdc856b87c8681d7b13c7200b739760b4937dc 2a6580d952ee64128749eb55cacaf62d7c0ce484 d2b9c78486d594e0b2f198aea7de8fa6754daead 0d717b0ec3c4c9c5a70de7d5f5bcfcdff48c35b3 b83366edd5b88696e555cc1dc2412a4e62eb815c 5a9cf175339c60f0e24891b6466f239c68e7eccd ca37c6542195da51f7ea3a4b63552b3b6dc04d40 db086fd87eb27abe5cd93272960eca574e2a8da7,,v2 0 0 PR,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infra |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    v2.0.0 has arrived!!!!
nasa/fprime,705,2021-06-10T22:43:54Z,2021-06-10T22:58:49Z,True,2021-06-10T22:58:48Z,db086fd87eb27abe5cd93272960eca574e2a8da7,0,1,03c89d364a5f89cc7cb6f9ba9e3701759adbc7f3,,Merge pull request 704 from nasa devel,v2.0.0 PR    | | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Master back to devel so we can linearize history.  
nasa/fprime,702,2021-06-10T19:43:12Z,2021-06-10T19:54:47Z,True,2021-06-10T19:54:46Z,ca37c6542195da51f7ea3a4b63552b3b6dc04d40,3,1,161692281904e1e75b0a2ea68045374f5d1eb865,,Added return FILE_EXISTS error on OPEN_CREATE with O_EXCL enabled,| | |  |:---|:---|  |**_Originating Project/Creator_**| F Prime|  |**_Affected Component_**|  OS |  |**_Affected Architectures(s)_**| - |  |**_Related Issue(s)_**|  #698 |  |**_Has Unit Tests (y/n)_**|  Y |  |**_Builds Without Errors (y/n)_**| Y |  |**_Unit Tests Pass (y/n)_**| Y |  |**_Documentation Included (y/n)_**| N |    ---  ## Change Description    This PR adds open file error `FILE_EXISTS` on `OPEN_CREATE` mode when `include_excl=true`    ## Rationale    See #698     ## Testing/Review Recommendations    Added a unit test and verified the functionality with no issue.  Note: I did not enable Os unit tests since they need to be cleaned up which is out of scope for this PR.    ## Future Work    Some of Os unit tests are broken and are currently disabled.  https://github.com/saba-ja/fprime/blob/5a9cf175339c60f0e24891b6466f239c68e7eccd/Os/CMakeLists.txt#L100-L101    Os unit tests are not in GTest format.
nasa/fprime,701,2021-06-10T19:20:44Z,2021-06-14T22:01:08Z,True,2021-06-14T22:01:08Z,5e818e1fb4496db14ba376361f8c9d7078d8a959,2,1,7155a9c3837870e667de6cd5531881fa412be519,,Remove unused const qualifiers,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    These const qualifiers were unused  triggering GCC warnings when compiling with -Wextra.  
nasa/fprime,695,2021-06-09T18:23:11Z,2021-06-15T16:25:48Z,True,2021-06-15T16:25:48Z,8d3b1ca999aa63a9da6df4cbd68888cfd66a958b,30,1,6f49a25ba92b354e4d0dd159fac1b7b0364ac19f,,Move string copyBuff from implmentation to string base class,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Convert string copyBuff from a virtual function that was implemented by string implementations to a method in the base string class.    ## Rationale    Removes code duplication of the copyBuff function and reduces the chance of introducing an error when implementing a string class. It also was triggering clang-tidy warnings because calling a virtual function in a constructor is highly discouraged due to the chance of calling an unintended implementation of the virtual function.
nasa/fprime,717,2021-06-15T16:51:18Z,2021-06-15T16:52:03Z,False,none,ec1706817900908462926aff6a7e058e5a993f96,33,3,08384d89b3df4eb31156a034c1d19d8c8752b1c2 1e4d08a9d01f87f2da9d6a11d22070311421ff24 8d3b1ca999aa63a9da6df4cbd68888cfd66a958b,,Update 3 0 0 branch,Update.
nasa/fprime,711,2021-06-15T01:04:38Z,2021-06-15T01:48:52Z,True,2021-06-15T01:48:52Z,1e4d08a9d01f87f2da9d6a11d22070311421ff24,2,1,90ae8946f59e97e09ce95e472c47524bada66908,,Make assertion file name const,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Make assertion file name const    ## Rationale    Improve const correctness throughout F'  
nasa/fprime,712,2021-06-15T01:08:33Z,2021-06-15T01:46:06Z,True,2021-06-15T01:46:06Z,08384d89b3df4eb31156a034c1d19d8c8752b1c2,1,1,126b219c28570cc823e97e67f433c82186922682,,Remove TIMSP standard types,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    I'm not sure what platform this was supposed to be used for  but it doesn't seem to be actively used in the current codebase. Platforms that aren't supported by core F' can now supply their own standard types header with their external cmake toolchain.    @timcanham Are you okay with removing this?
nasa/fprime,723,2021-06-16T01:35:18Z,2021-06-16T02:47:47Z,True,2021-06-16T02:47:47Z,c74a4b2f09b5ccc2418999aea3ca90f0dfe42043,2,1,d09a61840886be7da86da383d8600e2630ca0f76,,Mark Fw Time addition and subtraction as const,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Fw::Time  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Mark Fw::Time addition and subtraction as const 
nasa/fprime,708,2021-06-11T13:30:03Z,2021-06-19T20:58:39Z,True,2021-06-19T20:58:39Z,b86e9baf0dd9db06ecacacbce22b0ec2147012c1,48,16,6098a65987c64ce386b2f18700b48b402d47c53a db525f829619687baea9b3125e0818e20a87ae23 28db0509a6f4154d20eda14b9c115a617f464a8a 95da77ef030598ef1488e4766f45850fd25120d9 c3dcd499250d6a1a927f63e49247f8babd2f44be 815f759e3e66423bca3746ce63a99b7bf8505dde 5ed4d1f07b61e7724c7ad27de1ef984de3730564 8eceb4effcff27622103fc1f7a89c5ac21905b8a df028e9e46251cf877d96c88158b5425321e7834 dbd2bd79625eb83403ba5f9d6b5a18474fb6134d df6c93e2b5f878502bd9adccdc6723a4e1e104f7 6d29ebfc0382585e7156ee9b56ddca57da850add b4f505389e151153e2b3c081b123781554c7e9de e8f6cc5ee531bc0116508fcee917db401fee293f 6e9a3640a15b7e4517ef8fd1e08a5288eb37acec 2a8061e8cc2b415bf7a2044492957d1137d0fc16,,Removed Unnecessary gcov files,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Mainly Svc |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|[#689](https://github.com/nasa/fprime/issues/689)  |  |**_Has Unit Tests (y/n)_**|  Y|  |**_Builds Without Errors (y/n)_**|Y  |  |**_Unit Tests Pass (y/n)_**| Y |  |**_Documentation Included (y/n)_**|  N|    ---  ## Change Description    Deleted all of the .gcov files in Svc  as the fprime-util tool renders theses useless.    ## Rationale    With the new fprime-util tool there is no need to keep the old executable files.    ## Testing/Review Recommendations    Tests all passed.    ## Future Work    Idk   
nasa/fprime,700,2021-06-10T18:42:36Z,2021-06-19T20:58:10Z,True,2021-06-19T20:58:10Z,48d355a0b1b7a1fc1f9a8fa6716d19142a945a1c,2,1,7088384f9196577a5bbadee8bc422b605d5097c1,,Wrap raw task routine with an platform specific wrapper,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Os/Tasks |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**| fixes #661 |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description    Instead of calling a user provided task routine directly  call the routine from a platform specific task wrapper function.    ## Rationale    Different platforms have different function definitions for task routines.    - Pthreads are `void * task(void *)`  - VxWorks is `int task(int arg1  ...  int arg10)`    F' provides a generic task definition: `void task(void *)`. Right now we're force casting this function to the OS specific function definition. However  casting a function with a void return value to functions with non-void return values is undefined behavior that should be avoided (and is also triggering static analysis warnings). A platform-specific wrapper is used as the task entrypoint  which then calls the F' task entrypoint.    ## Future Work    The VxWorks task implmentation should be updated to use this new pattern.  For consistency  we may want to update the bare metal schedule to use the execRoutine function.  
nasa/fprime,744,2021-06-21T18:35:49Z,2021-06-22T00:08:49Z,True,2021-06-22T00:08:49Z,3777feb70d6a97f8e7800cf90ab960ed021d916e,1,1,58d95546001f9e7c7953421a49f20c1675107b88,,Fix 743 Redirect to Discussions tab,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| README.md |  |**_Affected Architectures(s)_**| N/A |  |**_Related Issue(s)_**| #743 |  |**_Has Unit Tests (y/n)_**| N/A |  |**_Builds Without Errors (y/n)_**| N/A |  |**_Unit Tests Pass (y/n)_**| N/A |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    This PR is to correct issue #743 "Redirect to Discussions tab".  See #743 for morz details.    ## Rationale    See #743.    ## Testing/Review Recommendations    N/A    ## Future Work    None  
nasa/fprime,730,2021-06-17T18:42:42Z,2021-06-22T00:10:04Z,True,2021-06-22T00:10:04Z,e08ebee5b66249c1f8190b90de656366b136039f,4,2,f9256218b4c1bf0286a3aa7c518a7918e794a4d3 e422361c33b0f38d28cced99fe90c270d88b6169,,Mark tlmWrite argument const for user types,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Mark tlmWrite argument const for user types.    Note  tlmStrings cannot be marked const - yet. TlmWrite modifies the tlmString in an attempt to truncate the string to the user provided string max length. However  the truncation operation is nonfunctional - effectively no-oping. We need to revisit this in more depth in the future.
nasa/fprime,729,2021-06-16T20:51:34Z,2021-06-22T00:09:33Z,True,2021-06-22T00:09:33Z,3f48e6bbaede960547ec5bc7344159873ab417f5,4,2,c74a4b2f09b5ccc2418999aea3ca90f0dfe42043 f63e685428b687728116a26e61d36a834e56e118,,Make serializable type getters as const functions,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| autocoder |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| already exist  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Make serializable type getters as const functions    ## Rationale    Allows calling these getter functions on const serializable type instances.
nasa/fprime,745,2021-06-21T19:05:47Z,2021-06-22T15:19:55Z,True,2021-06-22T15:19:55Z,9d57d9179475f2354ad7fe063f44443cef207cb7,5,1,579e161f53ff11e942d6403a4040e44ec37b46ee,,Compile root cmake project with Wextra,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Enable -Wextra for root cmake project  Also remove Mac OS specific C++ flags that are no longer needed.    ## Rationale    Enables additional compiler warnings in CI and for F' developers.
nasa/fprime,747,2021-06-21T22:12:05Z,2021-06-22T15:25:28Z,True,2021-06-22T15:25:28Z,27a0178fbe32d82a536a05e92e1f14f0e04d0581,3,1,4033491bfe350cfcd8f4da78d4cd162d9ff81a06,,Correct errors in PolyType toString method,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  y |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Correct errors in PolyType toString method:    - Properly print unsigned types  - Don't cast 64 bit values to long long  which is C++11 only.    I used the inttypes header to help generate the correct format specifiers  which can vary per-platform. 
nasa/fprime,759,2021-06-22T22:01:07Z,2021-06-23T17:20:02Z,True,2021-06-23T17:20:02Z,568562dd9b3ebaa7a8b6addac8ee09f1140f6746,1,2,ff372c0cd3dce6e4e605bd4bcf755a4abdc0d91c 14d7e939484dff990fa47375f5a40a788eef53d7,,lestarch making CI log archive always run,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infra |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description  Log always.
nasa/fprime,760,2021-06-23T12:56:23Z,2021-06-23T17:20:26Z,True,2021-06-23T17:20:26Z,7b85edcad2a5c3a466211a4b12ace28c8fe0f6d9,23,1,cbb65b8f093aef54a97069b100ad61ccb1203f67,,Add Black Formatting,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**| N  |    ---  ## Change Description    Adds the [black formatter](https://github.com/psf/black) as an additional action that checks the code style.     ## Rationale    It provides an easy-to-use and reliable tool to ensure that the code is formatted to Python PEP 8 guidelines.    See this [PR](https://github.com/fprime-community/fprime-tools/pull/6).  ## Testing/Review Recommendations    The package can be installed with:  `pip install black`  Then it can be run on the entire directory with `black ./`    ## Future Work  NA  
nasa/fprime,776,2021-06-25T16:38:18Z,2021-06-25T17:05:19Z,True,2021-06-25T17:05:19Z,37cab74b7f004d801b2cfded3903b7c3a484d690,1,1,4bdea0a2172dc4bfb5b008e37a16914291a6ed8c,,Update build test yml,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Add release/v3.0.0 to PR action coverage.
nasa/fprime,792,2021-06-28T16:20:45Z,2021-06-28T16:41:27Z,False,none,c8b49e5c360a53f0426a704044ced2d7cef67ee5,28,56,64265b2f8361979188db329a2e3244d650079561 3e9de5f2fb1da5e4cf766ea20392bafefa7ea945 7fa2bbbe9d4a54fdff64ff806db5cb54139c03bc 3b16b49c4643efef3d4b90b0ba099c51af0e134a a38da2d5917104499b80b109860317f5707d7f26 7893fe8f20f6b5bf4223dbf5e2a994ae5f04c27a fa5c69cd2af9d2e213a5977e54be459edcb2d39b 80117c241d319fe5ac940c89141c27ba2fe20462 cb9378517ce0776cffc2aefa2c4ca9931f16390f 38e64b3ea2864b54b93111461857787db3f02781 b0e20e95c1f9ac97d7e6cc57aa0a2d8dd3a59dae 2513167696efd55a35f308d8e673864a0efe262f b6d5608a10be960a0d2918db1dd46369c52833ba beec355a1ff8ad122259b09f8916cb5e453951c3 292a2df7c30966a5c892a3c7c6e984a8098c3aba 763360c922f6a22a6b9c9d08fbd66a00b4d24479 657bb6138adffac267905b1cae4f89716ddb8bd4 e40bc9d754dafdfaed2916f846789868cdb5587f 7e26628ff51f4ddc49600c815862c79639f18b89 e35cb0db4a0f1850597332b5c2920c53010aaab8 f38bda5fd56226b3bfd2afa2185c0fcfc2be541f bfde7702634c933e3d4f17c49d0ad9cc0b43384f 807a477600423cf402acc696692c3e384414aee6 cfbb9ef47f70a829a8835d2c5d224974d3e6150b 83543f73e17710c8a18248960fe66a0c029e994a 64a76e99b5da02edf02b23979682465d86b21195 1e245642bda45fbfe8d676ec8e3ab638262619db a4619ea57d3d4deacbec9a4213742ecda38c492b 69f7727b128e5548417e8f6cc070d0439a3a9ebb cd8d6a9c8fa8487a39994e6dd168c25161143b95 fd46d7e0645de10c4669e85c41be5b17520f507f b99a73633ac09732864b15c218b35a9ad4658a58 7b14a77299e845b4bde77c78ae2ccb8dc0888bda bee7d86801dfd9d3b6e961e5063e6bd32831ef45 0429137eb986583b1e4baae2c8bf051d3fd6e171 7f05fb4b88c1b76bac861973203f5f26eb0125fb 947ebaefde128bc1d01d6f62a7300b55c47693f7 797f7aeccf64a666d8836d6eac6ebcc5adfd972c b4009b7a30c44ced505284e32d96c8ef6dc1195f 8f5da2a21600a81374a4e4a4697afa8b53bbd50f 0a9fa58af0e34963dd8dbdaf373925874529b5d8 34702dbdaa9eb66690500d91064e481f1345cb5a bc94d06f08e6896e9f2f456b4e5b42abd751f7e6 a59be9873786e708b54d40c79829561910395fbe d2c092d4c82c8d64fa62f1f50576678d7f36b997 b70c2c6933a31e57de6bef884c5fddd4138b6fdd 4709eec4a52a59737c7568c0534be4f642fcf83e 11fe226f7403e3abef96d3f211727c3e3cbabd94 9b9c2995334e27c7dc5b7f2f243e3f7eebaa2209 ff1002aebc62ab0c9015998857c6920ebc4b5283 5167dc29300ed113e42440bd0fe7e9ca399f0dcf 02e164e419838679a0ba8296f4291b4e6d5f4897 554d7b70497b70cb2531a7070358b70b36e8c3e4 bde079e120fd56c1181ffbcfe24a5b650a5c2665 d05aff30f6b47a8fe83535c0857de8eb0c3188c3 51d5bb16d83c703978455f45c63b0f50e6f3fd83,,Default values for stuct members and scalar initialization of array members,| | |  |:---|:---|  |**_Originating Project/Creator_**| F Prime |  |**_Affected Component_**| Autocoder |  |**_Affected Architectures(s)_**| serializable |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| Y  |  |**_Builds Without Errors (y/n)_**| Y  |  |**_Unit Tests Pass (y/n)_**| Y |  |**_Documentation Included (y/n)_**| Y |    ---  ## Change Description    Added support to allow a nested default element for struct members in F' XML. Autocoder initializes struct member to this    value in the constructor for the serializable. Also  allowed for initialization of arrays with a scalar value. This sets all elements in the array to the scalar value.     ## Rationale    These changes to the autocoder were made to support the FPP syntax and features.    ## Testing/Review Recommendations    Created new serialize4 test which tests autocoder functionality as it pertains to serializable objects.    All tests built and run with no issues.    ## Future Work    N/A
nasa/fprime,766,2021-06-24T09:19:32Z,2021-06-30T15:48:24Z,True,2021-06-30T15:48:24Z,81088b0e72c0a51ba9fc1a09ae135b0f6c065586,1,1,70454827497759ae235e489bb214c8023bf80d3a,,spelling received,  | | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Recieved -> Received  
nasa/fprime,758,2021-06-22T20:40:23Z,2021-06-30T15:47:53Z,True,2021-06-30T15:47:53Z,e37dedb0dadbde01e38fc949eca46997a410caf1,5,1,d37dd9377b4898857b4bc5e2856174c1eab77c26,,Remove usages of variable length arrays,    | | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Remove usages of variable length arrays    ## Rationale    Variable length arrays are not part of the C++ standard and present a risk of  stack overflows in the case of an codeing error. Replace variable length arrays  with a statically sized array large enough to handle the maximum possible input.  
nasa/fprime,770,2021-06-24T23:52:56Z,2021-06-30T15:51:29Z,True,2021-06-30T15:51:29Z,dd01a4859e3b60298343c7a435002c0f80265484,5,1,5c8d07603ed0d7c305497fb2446ba6d980f31eec,,Enable AddressSanitizer on CI builds,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    AddressSanitizer has been built into clang and gcc for some time and tracks out of bounds and use after free accesses. It has some overlap with valgrind  but its ability to track stack out of bounds is a valuable tool and has been a source of F' issues in the past. Comparison with valgrind [here](https://github.com/google/sanitizers/wiki/AddressSanitizerComparisonOfMemoryTools). It has a ~2x runtime performance hit  but in my experience testing locally it was even less than that.    The only people who should be using the root project are F' framework developers and CI  so we should be able to safely enable AddressSanitizer for all unit tests built by the project.      
nasa/fprime,800,2021-06-30T00:52:38Z,2021-06-30T16:08:09Z,True,2021-06-30T16:08:09Z,8f59a064d407217c6d3fdc7f72a3c0753cd98a4c,1,1,05db9118d49c993186f3ba40bc7a4805901ee771,,Fix incorrect deserialization status check,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Accidental code typo caused the deserialization location not to be updated when successfully deserialized.  Caught by static analysis
nasa/fprime,799,2021-06-29T23:40:15Z,2021-06-30T16:07:06Z,True,2021-06-30T16:07:06Z,84bd25466c35b677e9ecc12044ee92e7daa73c8c,1,1,9daad4f7a6d11d44b37434e1d22b9519091f3dff,,Enable additional LGTM queries,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Enables additional LGTM C++ static analysis queries to catch things like stack overflows  ignored check of null pointer after allocation  and dangerous string operations.  
nasa/fprime,794,2021-06-28T20:11:37Z,2021-06-30T16:01:59Z,True,2021-06-30T16:01:59Z,ec146e5d117768457d23094da657e765adcdf618,1,1,3c5ac9b57a72e1dd8e5977e7c839f5bc73c0e409,,Fix RPI build,| | |  |:---|:---|  |**_Originating Project/Creator_**| F Prime Infrastructure |    ---  ## Change Description    Fixes the RPI build  which is broken after #780.  
nasa/fprime,769,2021-06-24T22:12:59Z,2021-06-26T03:03:28Z,False,none,97c0e2dbd1f56ebbcd99015b67ca0bbf738fafae,630,302,fb375811695d3b25460c79b7b9081c3642684edc ed5f8edcd27f2942681ae9eb217b3a3204cd8ad2 495e18b17dc6fa7135cd3ee96dd07e597793b8b9 843a2189ad1010bd24751c46c62309341e223c72 de1fadd73893d3a5cb78171e0f8e4e55e1ccdbcc 6a04e5a3baa8595b879208fb64d0def3474508e8 860b148f55853331decda0059a124ab6be370afe 2851c23fa4975b8f11e78566af494447bb1f15cd 5bf3938208a333011cf80635b9e3aea82d56d355 a757cf9be0e561e6354dacb31ceee185f1350cae d95438a9ead6c14e773d634e7d129b27014a719e f74afad6a4d144c9ad7b6c2422457630a47ce764 7f2f5e3cfb82867673b3cffd2205ba7e7db6068b f6d9114ba41bfa3a3f3beb803472941579b17087 c82cecbd6b078e64ffd086e0bf083ab8bb8fe538 a37914f9f71758ea1b1e884afae726c67aa82252 8e85a0c9f7035257a0f021c25211d85075057b8e 881987e4124a70c4437bff25335d693a76e7a465 79620e9442f594d0844c0718305c5cf6aa9822c0 a0cf0ee1a7b5567d0e3329fc750923074fa8bf96 dd2bb40c785c9f0a018a890765fb630bab49c89e 9b2df311668b9f547fd330ec798213a2130d6538 9084bb1fd862fa7acd051f624eeefe466841003e 24299661cb973b91939d006e544c5613f5a880a3 fb36caab4fcc0d4709bd7c30d06f7b966d4a04ce 2e59aa562208f0afe7a830d02cc003f6dbaa7cf3 49424be3501444dfb4b1cda1d5eef922c22b10ea 14360b2fe359285ba848f1c847e67e4c940ddcd5 6a19018776f150c8ef7842be8ef8f230e5751e38 32aac9825b752eb7cc6dd59c9ae881d23af47ea7 d8938bd2602e2a9836783cce05dbb69c43524e78 b2dfa8773679a50643c1ab0a654c246243ae5824 702c1761a86d49381cf6f58535226c44d4ffda91 0c09213afb5aef5c17719c6efc7d175d4dd45666 d0212212bbb7a7af1c57f5df8b277937c1a6140c 7add1964924bd773e33045545d952ef51c9b616a 48d4138b19bd502cabfbafa4cb49df21c9b58cfb a35798a73a56fcb8b8567f7462124ae6c451099b d5af8360232a9904b2a2eb2a9f5181c8c03b273d 1077a20575be0aa6ce6080d88dd6dc00187a3713 242d9dea5c371d37ea5664d56bfca67711c2f4df 15c8284a234978910ce917328e74f6286ff2134a a927c5cceab76cfd128322334261d1e1a1572ce9 f707422dbf763e5fbb456243bae66b3269675867 4fd9627965386b89f326fca1a31281635317440f 987ab2b4fbe0d8897df4332c38a97570d68ea7f1 1d8d706268686bd6ba91f5595cb43ea3256f06de f3045700f4f85a1856160c066cafca1163ebbd27 f799e0b7bc53a171d6afe99921440408bf755b58 bc9fff89db5c74221427b586472809f1a8597fd9 4e2dffb80275006f17edcdc2ffb0d48419e0f9f6 2a8d9e25247cacb55ddc6e88d5d90209e5177447 5abeec3dd779cf2eaf50cd434984e941bcbff96b 6369758dcef84aad57c6dcf611b670f44c048403 3964810a3cb69ead2fb6d04047efb84c923f7462 eeab9901379df6ed83ab106ab695b0f8788127cc b2a255550b3dc145ef89948d9aff6435c3834823 2a17536f0ce1006ba659876f734e67474397c13c 854d1a81b5f191436df7022b53c6b09085f8be10 849f8e4f6b76586fbe789e7943dfb7c7cc4ad0d5 f5104305854818500672a4b4a0cad9031d42cd8a 98f0b033c2f921e72a9aed536f08d71a9539f715 db42aa85bedf85baf4b776af955f7aa3fa128831 ad9d95d337645eba04997d720feb18bfabb5e700 90d7e33a5a654ef2b1129434c8853d21acdff9d6 11a60bd408dcf9f5fdb06b3456b57d76a1b893a5 5e1b48dc5861627a60040abd1ee42f33c0aba9a0 ec1e75750d8bd55272df82410795001d7a8397e0 66217f4013be2dce7ea8e158b4d5a58b1f8a7caf 35c9b748c215c90386548529184f35d76a450f8a 97bc2125269aad5fa232a1bb47ada6749e549e9b df9200918c79cdc25b2b6de6876a1982c0252c7c 5be86ee65ccf5591677777651a609932155b54bd ebbdc145196e2c415709c0487e9587395228fe50 d2079543406948977fe2ce887245942b7619b19e bf85a3198400c1513f40d1591367b166ab0e4b19 9b85681244f79ee39d6a62cc829f6b2af2301c29 9fdeca7ecd05410b15fcf601d0a10fd226573ba5 6df9affbb7a3dd5f789b0dc49e1fdf6a067e2fd2 c858c90ee2ddb2f6add6d15b2b7b4cd6fbe22d21 321d6659804c0cf62f77ee5f40ef2454e7a799de 321e21528eb15d3631650e6817370520005562a4 2cea04ff627d4476a9b0e2cbcdde45676340982a e528243f01d0551904aca1035a5a54b7a3523ae7 262c46a3d37ad5a3c42e641085817a23bad1f8ab 621d5c8fe7aed4ebb27ac7469255082cf8ac5b23 1b985ee10cde54a55c40d762d24b8c3586253a22 57dd9d76c944cf55a09500a6d41488ecf49d27e2 4c0342c2126f09a815241fff779a5faa26126c1f ddfb42f54619636d42ccb7a6134cd78a9a795e82 0cd42685daf8eca91807182d0c763049da41b1ce 483c9a37d37784aedfc2ce6e2420fc54fcfe3610 4373db6fed5f47592563664ddd19cbd58df410ef 89aee6dd7b69012eec40221f77e0ae259b70091d 13bc400ecd8424ceb97e508d1ca34a899dcbea73 49dc824ec371cfb89fc5229a5049f5ba0c450751 8fd4ed873262370d3fcf3d0f3cd681f9e3260f81 0716fa646fb8b694dda667cac81a943c457cfad9 c32493b5c72592dfb23a4a9ee4b59b5aefe832c6 37d73806f2521a09191c5be5f18a93927d0823c3 7c3390abdb8df150cc9f1006747da15f292f1263 8c1915bf65897acee9128e544cd7b9a2cc66fd39 a6e868bdaededa20b2aca73ee2e5ad1489a1a4eb ceb8cbd01574b899e65793c9a175dcb211232028 d1afeafc3e8acb110dc9ceeac6c616eac9256e11 fcef211bf32953af6eb80ea0e64eebf1fb4d2645 2dfa44355972953cb2224680c3952daa6c09726b 359157540e56644dad0b2fea982373756f1f89a8 08373edde611f1fc7c8f3c86a10dcdb7e0da969b 2a794f741459ce431bd2cae229c6ae9b0310df2c 0abe7d25706381624dc34617cc692526fed8eaec f334320cf4594e216e950e71c2ff258e78bfde64 91895b3d581000d199e5de5ac5b782e06a755138 6ddf656a243a36243c7dd4bcb3186dac2fc80cda 633f9ca328dcbaaf415a6e84c8fde58e38c1bbaf eff094938b7e2870d2171d5aab821c2f1f514bdf b8b6b4d17b8a6c58f42b34fcc7a5d328b85f4daf 9ed4fdbe4b3794d48e360ea37e31ba0deeef8bd7 0398dc53909c67ea047279a76c85fb0570fe5ff7 307f645cabfab7b89ddec2a2623715634b56a46b 655e706fdc842edae4554bec2807beb03e62ae50 5720fdb63b8eba2f23a95a9053e292b3b21f117f d9279b002a43683ab70f7c6d5beccf1852632231 2f69dd4cc6a7b3cfb48b99b986819a01cdfdca85 043cacd6908e98752a9eb59aff0504772bc62923 f62b179046fcfe7c6d2d5c0734b7b19ef543f692 3a74c310db91db75d19fc7b63fbebda83733e1fb c2167308dfa18c29111aefe008938bab67527917 428dfca5ac9c1b7a8ed0d0b43179cac9ce514bea 070636a5f0b4f0f8d054a43821d3211c7d115b2f d6020d8572ef53ddef4d901e537c5d38e8350fc4 88941fbd2607b41a0faf21ff4249de55ba52714a b1b1da1309e816ba33f5d71921a4469c2b14f464 3a2af1b004e2d2481d8abb46061e312521ba36d9 709e613f8a8fc3ecaaf9ada83c243496f790ed84 81611f0b8b4ce135dafd3eb8a390bedb196b00ba 0c01b261d1d3b6248ba13f365fd8ad5acdb322e7 cd4a191940fc76e378f4c4dff1cdbd9a162c1b91 b48a70d97dfce0b91cb2c56d2d471d283b9a4aca a98f95f87594b61bf189dbe5d550bb1f676a2d3f bd3320d8316e3a7a08aba405bc8aecc9f7871f40 c74a4b2f09b5ccc2418999aea3ca90f0dfe42043 0e265a6e3d2c4064ab631495c7f2dc50c7370926 d5611b3cf28d2cfa05c1afaca7415d53cd75b3d1 65e77d8e52e192497ced0581ecacb3104f2e389d 6354acb1156c3f4218b2afc6fa694e4d658401d1 30df140f9e16a92bfa42f4743065f424d4f6becc 82f9a1b9ea4a64d832c1a0b7229674e97497ba04 26784a030a62649a7a1b187c979db005c6aba460 a8213f4b2134b8444a4d63197267d244ef9e5690 002f70518154c01e58c965bd07334bdaa462eec9 376165845b312c901b6e05b93835c63777cf2acb 5ca79cfa7d20ab2ae7e7907a3c87670e874f996d 9f615d75880bf5b3892cf9fbf96817df55323c1e 793d51325cdec7c750b17a0cc59e7206a035f85a 240f89eac34a25de3d2ff0a1d2e4dded08a01c07 138b05f354fb2f3c16dbc7346739855a4b0fc39b fb829e004454aaa4e76be3af0e56cabe8136d237 4812b86ee77373de3d4d5a65b81190b868f1f6fa ff207ba8e936c485ca1d24442fe75015f3f4765e ceccebcdbd323dad8ff8f461562c1693dea1f752 3b5d3ea11370cccfe74b9ef67c1a131adfd2d3b3 86ff51c827d36e431c4bc920362a623aad8a283c 2358d229200d8adb81427e4c6c40b6bce93658fa bb01e5d60088bff15a1684bc3a3e2b806154ca04 0a81e7daba12a001e654e9b75d4e592847adc032 5ea8e2bc20afaf27c68280bf48363efa09efc25d 4d1e436077ecafcc257ebc77cd7ceadc713c98df ca42c198f001b9abe3bf738dee3116e8efd37d7f 632b6e152d82b22ce46f124873699f9f361b2691 e66fbe91f73e57d73b8ffb74d3597ad181999304 38b70ab207b36eb129187e57a4ea19077a752c4e 79fc4252054154b190671920626594ab1b296e4d 5c8fc40de60ec50f9291bcae147429df5a498e44 9058fcd94ad9778446635a1d774c406b3dd5e9ef 64c477e6b404b7ac2d3e613783fd85ef3b8ee3b4 db253980a1cdb57f8719e5e7f3abcfe0b2efe1b1 ae73a00a7e83e0303935a62cf11af538cc087e15 96259f0fca36fce82497600d4569c885ad27ae75 f8fc2c39b2407e70f8ed0bbec4d057b404ef84a2 45aa029df50aa9b98662c72b1d846421ba8d0c59 ca32b01f90c96d28728e86b9c45958d56d0caf88 c65a423ebde3c45c1bcff957712a44c2ef1be18d abeb33b39473b53f1590dabf35dc5b6d9f70471e fb7cb5396b837e4e602a94fa75bf8308aa4df164 f40f6f8a9c01a79aa3f2c6b53176d46c370d35ad 40d2e0b51412c08b1d50687c47dd14594fe44a0e 1b224d71243686a749cb3a0add1490b21246c15e b8b6ad7e8a3659ef3e91599988cf00657abcdf5f 1d98c1373957848375c6f52825b26ec92d7de9ab 8f4971cd4b1b1a1ecb6b1ea59036ad4fa8184706 e134cda5764b325b357c692f6391abe78b2f02a7 9f8c15eced51e9f75b7e9ebd7413f1a3d2be064c 5fca62b3c155aa104a5e2c32203d7075332fb9b8 c0e10ba39cb957940c7c236c6ab778b4022d569d b23068e15a9838c0650106ecc6f32ced8828ad7f a6737612ddfc6bfce92abb55e5cfce55e6d52f6c 396599fb5a3a531b126b9bdbe03d0bd40caea472 849924c028e5ee319901c4b6b2a33df7c551baa4 a284ffbff6b7f72cc03f8cceb1ff68f7dd2b7f48 2c960de0620db9faad63b85cfd9d423568d1f6fe 5f64262cac6829f2e1c4cd623b49bdf48c00d160 4d73acd881eba4d7cbf0a3d352c47e611279cf1f b83b7b4626d311855d89181a9d92f3fb3121dc2f 8bc17eb09b6c7e7a9181d04e30b6987b37486362 25bd45dda45b4dc887ffd70943e20ab687be9657 06eae63721b21c3e49ffd2c99624e451730bff4f 92ec22c049548164dbb247efcb3040513aaf43ea fdcfbf06fb99e4bdaba66dd323a93d067a12d95e 9fbf96cc204ae79ed464470eea8e1de4e19496e1 f39a476b554bbf0ca101528733449614725bca62 2d7340f5cd1d2e459dd6e3ee8d94cb0564e2a07b 2234279a68e962799a5bbea204430c479647557f 9e2b0e89a325c3f011a390adcac4a7b6216ef41f a421b8008c973b5485722af28cafb97d8bd0b83c 3344254c2ad5c7655347d5e3b5f4377c89c09549 1f12a6be66a98331b96a33d66c090d59674aa79a 43b725b591a99f46f7c83a0f62a52e54a57f9dc8 b87512b0c0986a6ef86d6fce2767853098872c05 cf1a2210a83c82913eddc72a03b81457fc2c2a01 9bdbaa41030fa2c03c4f7ed68d467aa6b8ed4354 c68e1007cf22fd2cdde948100243e8212ad7d191 4a7785b47cba09682a1ce99855687d2459c77522 04b4d74d5227af7a31db04603e2d54aaa36ef885 918381e08d64206e4c7fb52a3883d11dd324639c fb5277e1d85d39c546b9787cc1d6abb6e76eeed0 e6a881591fcb9404c91287ad4bf31518b0a5b02c 8691ee48231353965fe3268eed3e9eec924c2934 ab986d0e75b7534ae41ac2e21bcc48fc3296b0eb 5ceb76e25fb3e754fc486450f81b632f6e66d54a 255a092a07c87e16165d1a9f08026f08d7f6ef83 f07c35b6d507e6d1d9f685e93745dfaded230f7a a992e4ad77354c300042381029c299715b2e480e 7cbb41490ec2fecb13fdd84a92e0f848b5917bc1 10e6a010c1334c008fb01e2f49d0fe6c9b5eb148 c5b21144efafc32846e4047f72c9fedadde7bcd7 dfa91d584cc7d19057cf2b109d17629931b81490 273d7707b1b76269a49af0558cae7b3d7374fb39 891b2fe9397efb4b3fe46a991bbbb9b430c5ebfc a7f584e3c014d8d68f5f0a3ee3745e09d3eff613 c56426d019c1ae413c2df0f96a33227723217c3e b85b3b80998019fd31b4ddf26603e45f0f68f9d7 d506bf4d861ec64f985be09f1f093562be03f42b 7976ace7bb7ad35d7d2f19160bb44e88a88eca41 4b4fef5b6bff7965f3a10006db4ca70905e8ebc0 f7bb81a733044d6fb01ac0109b4efdf42eba0fc2 8a0e771ab4acd3e04b8fe00815243a3dfc6534fb 9a60c68a55ebd23587fc3630a030bc63be1d0773 02a460cbfd8097733e33f8ef3409d0aab65bf9b2 59460ed23d71de55acc3def4cc2daac0a041796b,,FPP models for Svc components,| | |  |:---|:---|  |**_Originating Project/Creator_**| F Prime Infrastructure |  |**_Affected Component_**| Various |  |**_Affected Architectures(s)_**| N/A |  |**_Related Issue(s)_**| N/A |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| n |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    This pull request contains FPP models for the Svc components  with accompanying changes to the XML models and the C++ implementations to convert inline enums to FPP.    To assist the upcoming transition from v2.0 to v3.0  we have documented the symbol changes in the following files:  ```  Drv/ByteStreamDriverModel/changed-symbols.txt  Fw/Cmd/changed-symbols.txt  Fw/Prm/changed-symbols.txt  Fw/Log/changed-symbols.txt  Svc/CmdDispatcher/changed-symbols.txt  Svc/Health/changed-symbols.txt  Svc/BufferLogger/changed-symbols.txt  Svc/CmdSequencer/changed-symbols.txt  Svc/ActiveLogger/changed-symbols.txt  Svc/PolyIf/changed-symbols.txt  Svc/PrmDb/changed-symbols.txt  ```    **Testing Note:** Some Health and AssertFatalAdapter tests fail because of a known issue that is fixed in devel  but that we have not yet been able to merge into our branch.    **Merging Note:** It looks like this PR is picking up many duplicate changes from our last PR. Perhaps this is because rebasing occurred in connection with our last PR.    ## Rationale    We are continuing to translate the core F Prime model to FPP.    ## Testing/Review Recommendations    Svc/ActiveLogger.fpp has a TODO comment regarding the placement of an enum type. Please review the comment and provide feedback.    ## Future Work    Continue to translate F Prime models to FPP. The next steps are Drv and Ref components  then the Ref topology.
nasa/fprime,793,2021-06-28T16:29:49Z,2021-07-02T16:58:20Z,True,2021-07-02T16:58:20Z,6fb9830ac4befbc719c8ee95e8c92188d0f60a46,11,19,7e26628ff51f4ddc49600c815862c79639f18b89 e35cb0db4a0f1850597332b5c2920c53010aaab8 83543f73e17710c8a18248960fe66a0c029e994a 64a76e99b5da02edf02b23979682465d86b21195 1e245642bda45fbfe8d676ec8e3ab638262619db a4619ea57d3d4deacbec9a4213742ecda38c492b 69f7727b128e5548417e8f6cc070d0439a3a9ebb cd8d6a9c8fa8487a39994e6dd168c25161143b95 fd46d7e0645de10c4669e85c41be5b17520f507f b99a73633ac09732864b15c218b35a9ad4658a58 bee7d86801dfd9d3b6e961e5063e6bd32831ef45 0429137eb986583b1e4baae2c8bf051d3fd6e171 7f05fb4b88c1b76bac861973203f5f26eb0125fb 797f7aeccf64a666d8836d6eac6ebcc5adfd972c b70c2c6933a31e57de6bef884c5fddd4138b6fdd 4709eec4a52a59737c7568c0534be4f642fcf83e 9b9c2995334e27c7dc5b7f2f243e3f7eebaa2209 41377f3f59af81e14d4233c0875856d7987a3ccc 5570f366ce01173b1a092b5c6a1fae9fb3472581,,Serializable type for Enums,| | |  |:---|:---|  |**_Originating Project/Creator_**| F Prime |  |**_Affected Component_**| Autocoder |  |**_Affected Architectures(s)_**| Enum |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| Y |  |**_Builds Without Errors (y/n)_**| Y |  |**_Unit Tests Pass (y/n)_**| Y |  |**_Documentation Included (y/n)_**| Y |    ---  ## Change Description    Added infrastructure to allow a serialization type for enums. For each enum  the user can specify a type for which F Prime will use for serialization.    ## Rationale    FPP allows for a representation type. For this to be converted to XML  the autocoder needs to support it as well.    ## Testing/Review Recommendations    Modified the existing enum_xml tests to check that the serialization type is correctly set.    All tests built and run with no issues.    ## Future Work    N/A
nasa/fprime,795,2021-06-28T22:00:22Z,2021-07-02T17:00:35Z,True,2021-07-02T17:00:35Z,5dcbb5c322fa6f26e3d97826289d9aa47e2043ea,19,40,64265b2f8361979188db329a2e3244d650079561 3e9de5f2fb1da5e4cf766ea20392bafefa7ea945 7fa2bbbe9d4a54fdff64ff806db5cb54139c03bc 3b16b49c4643efef3d4b90b0ba099c51af0e134a a38da2d5917104499b80b109860317f5707d7f26 7893fe8f20f6b5bf4223dbf5e2a994ae5f04c27a fa5c69cd2af9d2e213a5977e54be459edcb2d39b 80117c241d319fe5ac940c89141c27ba2fe20462 cb9378517ce0776cffc2aefa2c4ca9931f16390f 38e64b3ea2864b54b93111461857787db3f02781 b0e20e95c1f9ac97d7e6cc57aa0a2d8dd3a59dae 2513167696efd55a35f308d8e673864a0efe262f b6d5608a10be960a0d2918db1dd46369c52833ba beec355a1ff8ad122259b09f8916cb5e453951c3 292a2df7c30966a5c892a3c7c6e984a8098c3aba 763360c922f6a22a6b9c9d08fbd66a00b4d24479 657bb6138adffac267905b1cae4f89716ddb8bd4 e40bc9d754dafdfaed2916f846789868cdb5587f f38bda5fd56226b3bfd2afa2185c0fcfc2be541f bfde7702634c933e3d4f17c49d0ad9cc0b43384f 807a477600423cf402acc696692c3e384414aee6 cfbb9ef47f70a829a8835d2c5d224974d3e6150b 7b14a77299e845b4bde77c78ae2ccb8dc0888bda 947ebaefde128bc1d01d6f62a7300b55c47693f7 b4009b7a30c44ced505284e32d96c8ef6dc1195f 8f5da2a21600a81374a4e4a4697afa8b53bbd50f 0a9fa58af0e34963dd8dbdaf373925874529b5d8 34702dbdaa9eb66690500d91064e481f1345cb5a bc94d06f08e6896e9f2f456b4e5b42abd751f7e6 a59be9873786e708b54d40c79829561910395fbe d2c092d4c82c8d64fa62f1f50576678d7f36b997 11fe226f7403e3abef96d3f211727c3e3cbabd94 ff1002aebc62ab0c9015998857c6920ebc4b5283 5167dc29300ed113e42440bd0fe7e9ca399f0dcf 9d6164d4e1321c26a97b8743d82eafb05a9458fe b082264d308625e1cb443eb6d7b5bdd222955404 419c743116f033b575c74261f58f5743779bb038 2d83434439e0cc3b6beab49b2612d043386b9872 7da27e2603852a0938dc0ff2bb3e9a4e0a902e12 2df0565915c393a3a018da8574bcb413281a81eb,,Default values for stuct members and scalar initialization of array members,| | |  |:---|:---|  |**_Originating Project/Creator_**| F Prime |  |**_Affected Component_**| Autocoder |  |**_Affected Architectures(s)_**| serializable |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| Y  |  |**_Builds Without Errors (y/n)_**| Y  |  |**_Unit Tests Pass (y/n)_**| Y |  |**_Documentation Included (y/n)_**| Y |    ---  ## Change Description    Added support to allow a nested default element for struct members in F' XML. Autocoder initializes struct member to this    value in the constructor for the serializable. Also  allowed for initialization of arrays with a scalar value. This sets all elements in the array to the scalar value.     ## Rationale    These changes to the autocoder were made to support the FPP syntax and features.    ## Testing/Review Recommendations    Created new serialize4 test which tests autocoder functionality as it pertains to serializable objects.    All tests built and run with no issues.    ## Future Work    N/A
nasa/fprime,779,2021-06-25T22:11:39Z,2021-07-02T17:35:01Z,True,2021-07-02T17:35:00Z,e2898cdffdd3314e4454af576911301b3008a6f5,1,5,595ef1785c205b3c5c0e2361a73f83920684142f 2dfff4282af107d15f300daa096e1855d6e48d73 9ba83eb367a8df157ed90ebe647cd0f680f872ee c87dbb8924a8fd3452b864d59855e71c7502dbfc c61b530f1d7b019ef0c99e74756c7916d00c8a52,,for better readability added f string for formatting,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    added f-string for better readability and code standard.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,804,2021-06-30T18:38:27Z,2021-07-02T17:06:17Z,True,2021-07-02T17:06:17Z,21e84bbd61df606d75a1de2a06ede9909f41f197,1,1,9cca19f4402babad737c61e74bb5099adcd20f63,,Correct LGTM query selection,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    This existing config selected queries tagged correctness AND reliability. I intended to select all queries tagged correctness OR reliability.    Unfortunately LGTM config only applies after being merged  so there's no great way to test this besides trial and error.  
nasa/fprime,718,2021-06-15T23:29:21Z,2021-07-02T16:51:37Z,True,2021-07-02T16:51:36Z,f91921c7d1c46ab1cd21a1282666aa39cde7a9ed,10,1,9a7dd9f58a2753c4a99248e55efb40d49ad225c9,,Remove StructSerializable,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  Fw/Types |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Remove StructSerializable class and tests.    ## Rationale    StructSerializable is designed to support serializing already defined C++ structs. It and it's associated unit tests are currently disabled and compiled as part of F'. It uses templates  which we currently are not allowing within Fw/Type  is documented as non-functional  and hasn't been touched in 4 years. We should implement support for serializing structs within F' or we should remove this code.  
nasa/fprime,809,2021-07-01T23:40:04Z,2021-07-06T20:58:15Z,True,2021-07-06T20:58:15Z,4e6d41310cf3a3357a6fad1744b3a6ebc2e15468,4,50,366f93f175fe2c4729da099fecc12688f840385b 3ae468279b6e69b22ac48b3775b773359a1da21d bc050af5bd05d1d28461554ee9fd80a9ea9dc691 9a6e941024f32d85b0d132aa9f76734f89ed2ef8 4078ce35146d2ce6f8976140317d077b5e74f1a7 b0b380663ce7c4448cdf49df391b0dd0c5034154 45e99a1a0e866b8d5f61700e17877e62dce0b10a bce2af6aaffbef8e4acc13ff8719db24e71dc6e5 0811db7d03bb408f11b1f3039c493147fcccfcbb f70bb74e7186712b25fc8c2a5174bd8f61b2f98b 77836548145eab2b1027f1fc1898b36b0924c75a 2b47ec730556b14fc4c5985c9474f654b761b026 e80529ce7a47ea30bf6a5e09a5fc4af6bb211126 0a3d2e6de6cfd471874fab4d5b46b3e421d834b4 21036045c7c0ba6006c575116766b08cf4bba70d e03fd06c588c7298380b3ac8d49d73f66044609e 15374d07c641c9d617107b28000e8f9dfe596210 6ce47d2fed67187d06a67cb02131ad91efc89346 4c2c09f0d0f781c955f2d807ba3c0b326cf7c95b 91f3ab3d67b9fbbc85c0d805f3e9c347eeaa6f3f 61191bfe102d3f77216832dc068794f94ca0d470 c819a78131a2d7c006be960d1a70d7ea63e1cd28 1096697ec4c98c65fee4268e629509357812a1a1 202100b2113ed5553a597a524ea6969c823c2089 276118466bd907adb2818c2f2a95d8cf639d41ee a22de723d5902d117cff787e1fa41c7150b41814 8e7e1ca60c8f542d87b7fc0c80f0f7bb3a456f0f d6b1a7de362ce9f7983feaf2ca364c23b239bb4a e54d12d19ff7e4c629a7ca49057199e3c9e36c52 9c9540655e98150c64b0aae0c5c6a8d549355f27 a8b0f27f45f535dbfd217fa602c083e7ad1c305a 91e4a84ecea21bf9d3e13c99c4070b96d1f61e1c 83eb47212f9bccdfed3e8b1d1cbcb5144059ceda 8b261b46c40b7c781cc9d88e6ac862c9662bf3bb 09f7fad84d7ed4eefc55c63a54fb5ae7ce0fcadc aae982f1e783352cb7035c6ac0b60cf2c9d44f19 e09f537c6db164d596a28b2e6a4c9fd0e91f818f 051604e376680690a8e04a31ac9cc461c788af10 d0ad5f12e3245e81b6938c0e083f70aafdb9700d 0e0be62e217fd64210ccb6c30871c19a9670d8cf cb7bfca856ec1aea4e532686143ba6968ffd0ec6 68cc7201f7e8d1378a6466ffcd5679febf27350a b5754377d2488a8be250c0bc423a94de8c98d82d 62102b8f7f53e92d780face7e9e7ed1e7babab85 ee6e8f2e4bea086cc5b39b0271d1c44702f88f5c 3ccff2c85c4fbb0a373342e7b66e4a58a63b70d8 9000af62d1e0bb2eb72c21482a29c9e49bb23f28 f75fafcb9f4dc5bc5c4b3158b8735ed3d418740e 0aa43bd631831037fd65983f11e60a9144244c6f 7ff80f1b34c95c9f804cb55f697d7e3daebd7946,,Workflow to verify compatibility with GpsApp tutorial,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,812,2021-07-07T21:59:16Z,2021-07-09T23:01:59Z,True,2021-07-09T23:01:59Z,ea2d3dc063e1f4b39f586fcfdfa1436515808827,1,1,c5f6ebea5bcdb1bc551aa3c1ae0a4b9517c24e89,,Remove uneccessary snprintf error handling from ActiveTextlogger,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Removed unused snprintf error handling.    ## Rationale    LGTM was warning that the else if conditional was unused so I cleaned up the unused string truncation case. If the format string is correct I don't think snprintf can return an error  so I removed the other error case as well. Rather than silently failing if snprintf errors we're probably better off trying to print whatever it generated.
nasa/fprime,459,2021-03-08T15:15:21Z,2021-03-08T15:40:27Z,True,2021-03-08T15:40:27Z,a14dfb802efc10af475b840e8f0328edae885736,4,1,ecf2199763c3437223b6f69083f0cac013f94d8c,,Add check spelling check spelling,Signed-off-by: Josh Soref <jsoref@users.noreply.github.com>    | | |  |:---|:---|  |**_Originating Project/Creator_**| @jsoref |  |**_Affected Component_**| CI |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  n   -- I can provide additional documentation if requested. Documentation is in the [check-spelling/wiki](https://github.com/check-spelling/check-spelling/wiki) especially for [Configuration](https://github.com/check-spelling/check-spelling/wiki/Configuration)|    ---  ## Change Description    This PR adds the [check-spelling action](https://github.com/marketplace/actions/check-spelling) per https://github.com/nasa/fprime/pull/456#issuecomment-792809167.    See [documentation](https://github.com/check-spelling/check-spelling/wiki).    I'll watch the repo for a while to make sure the landing fairly smooth  after a while  you can just @ me for support.    ## Rationale    Everyone makes typos  and automation can prevent typos from accumulating.    ## Testing/Review Recommendations    There will be 1-2 extra checks listed in each PR (one is for the pull request  and one is potentially for the push if the push is to the same repo).    If there are no new misspellings  the checks will have ✅   If there are  the checks will have ❌     For things that are added directly  the first 10 should get cute yellow boxes in the code changes views. Beyond that  the details should be visible in the action run log.    You can test in your own fork by making commits onto a branch w/ this commit  or by making a PR to a branch with this commit.    ## Future Work    I'll watch the repo for probably a month following merge to make sure things stick  and will revisit with upgrades.  See [check-spelling wiki Possible features](https://github.com/check-spelling/check-spelling/wiki/Possible-features) for things I'm working on/considering.
nasa/fprime,819,2021-07-13T04:11:50Z,2021-07-13T18:00:30Z,True,2021-07-13T18:00:30Z,cfb8447164a4c33aee58020c0b6469bc0460d0aa,4,1,471b249701b1e4527f0fcb3dbbca37f2a4adafa0,,Update check spelling,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  CI |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    This upgrades check-spelling to 0.0.19    ## Rationale    https://github.com/check-spelling/check-spelling/security/advisories/GHSA-g86g-chm8-7r2p    ## Testing/Review Recommendations    The tests pass here:  https://github.com/jsoref/fprime/runs/3053200333?check_suite_focus=true    ## Future Work    It's possible to remove `shortest_word: 2` which will move the default to `3` and drop two word items from `expect`.  I intend to provide an update which will provide further hardening to the workflow  hopefully relatively soon  this update is really a very minor update.
nasa/fprime,821,2021-07-14T00:08:35Z,2021-07-14T19:45:24Z,True,2021-07-14T19:45:24Z,2a9678567b0b9dec2683d60cba4b1abebcf5004d,11,2,29f0ad82e438a5af8e8a0b7abe2961343d141275 15af99c254eee6633a1a447f8ca6a208222f62cb,,Dev abcouwer cmake baremetal fixes,| | |  |:---|:---|  |**_Originating Project/Creator_**| JPL COLDArm / Neil Abcouwer |  |**_Affected Component_**| Various  ComLogger  FileDownlink  BlockDriver |  |**_Affected Architectures(s)_**| Baremetal |  |**_Related Issue(s)_**| n/a |  |**_Has Unit Tests (y/n)_**| n/a |  |**_Builds Without Errors (y/n)_**| y (Ref and our own baremetal build) |  |**_Unit Tests Pass (y/n)_**| n/a |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description    - Added MIN and MAX size #defs for integers in Basic types.   - Use U32_MAX from basic types in FileDownlink  instead of __UINT32_MAX__  which was missing in our limits.h.    - Change "interrupt" to "interrupt_val" in BlockDriver (prevented build  "interrupt" must be a special name).   - Guard on system type and don't include Ip socket-using components in baremetal build  - Guard on system type and don't include LinuxTime in baremetal build.   - Add Baremetal/Mutex.cpp to Os/CMakeLists.txt.   - Switchup fatal handler files in CMakeLists based on system type.   - Allow for undefined PATH_MAX in ComLogger.   - Change all instances of FPRIME_USE_BAREMETAL_SCHEDULE to FPRIME_USE_BAREMETAL_SCHEDULER.    ## Rationale    We're making a baremetal  out of source build  and we were having to make some small tweaks  comment out some components in CMakeLists  to get FPrime components building when FPRIME_USE_BAREMETAL_SCHEDULER was set. These changes add some guards in CMakeLists files and make some very small component tweaks to allow building a baremetal build on a TI R5 processor.    ## Testing/Review Recommendations    Some of the ways that cmakes were guarded are subject to personal preference  Definitely up for making adjustments.    ## Future Work    None at this time.  
nasa/fprime,822,2021-07-14T00:21:28Z,2021-07-14T19:45:39Z,True,2021-07-14T19:45:39Z,a56ca7cd92ed749998fac6ca59c9325b868058f6,1,1,1a588a9e0748b0f912867972736e6764981fd5b3,,In FprimeProtocol cpp deframe make buffer no larger than requested ,| | |  |:---|:---|  |**_Originating Project/Creator_**| JPL COLDArm / Neil Abcouwer|  |**_Affected Component_**| FramingProtocol |  |**_Affected Architectures(s)_**| n/a |  |**_Related Issue(s)_**| n/a |  |**_Has Unit Tests (y/n)_**| y (no change to unit tests for this change  but unit tests still run successfully) |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description    When Svc/FramingProtocol/FprimeProtocol.cpp:deframe() calls m_interface->allocate()  set the size of the returned buffer to be the requested size.    ## Rationale    When Svc/FramingProtocol/FprimeProtocol.cpp:deframe() calls m_interface->allocate()  some allocators (StaticMemory) can return buffers that are larger than requested. In the case of uplink deframing  this size disparity makes it so commands can't be deframed successfully.    Alternatively  if returning a larger buffer than requested is bad  StaticMemory component could be changed instead. But should probably make allocation requests robust to bigger buffers due to alignment issues  etc.    ## Testing/Review Recommendations    Worked properly in our deployment with a deframer and static memory component  but wouldn't have an effect on Reference deployment.    ## Future Work    None  
nasa/fprime,825,2021-07-14T20:10:09Z,2021-07-14T20:10:43Z,False,none,35451420b28bf4fcd2f1e4c5d954669317f79027,6,1,98e25492574a5984d46d39b85e99d06752d17468,,add offset option for rate groups allowing different trigger patterns ,… for baremetal systems    | | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,808,2021-07-01T01:28:18Z,2021-07-14T20:17:50Z,False,none,787c5d653a69aa7690008b4a862383c26b12af5a,67,1,754c8060cc0b5a6ef5a5c96f402096b7f69774a5,,Remove unnecessary usages of PRIVATE macro,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Remove unnecessary usages of PRIVATE macro in components not white box testing  particularly in the core framework (/Fw)    ## Rationale    White box testing should be the exception  not the norm. Using the PRIVATE macro in particular has a few problems:    - Violates test as you fly. Changing method visibility for unit testing can trigger unexpected side affects. For example  SerialBuffer implicit copy constructors were enabled for unit tests only. Usually  they were marked private  preventing the creation of an implicit copy constructor  but using the macro enabled them while unit testing only  causing some unexpected copying of classes that shouldn't be copied.  - Enforces testing the public interface. There were unit tests in our code where we were validating the state of the class through internal variables and not testing the equivalent public getters.  - Breaks clang-format: Since clang format cannot evaluate macros  it improperly formats code that uses the PRIVATE macro.    While I would like to move away from using the PRIVATE macro in classes by default  there are cases where we do need to white box test components without observable side affects  like memory allocators. We should have a larger group discussion about whether we would like to continue using our current PRIVATE technique for testing them  switch to using friend classes  or expose the necessary observable state to properly test these components.
nasa/fprime,826,2021-07-14T20:22:52Z,2021-07-14T20:37:50Z,True,2021-07-14T20:37:50Z,75f5d92c45cd2dba93ed2da2ab254aa3d6efbd35,2,1,a02320f1d6ad20d95b8a574cdfac7a46026350b3,,Add missing newlines at ends of files,| | |  |:---|:---|  |**_Originating Project/Creator_**|  JPL COLDArm / Neil Abcouwer ||  |**_Affected Component_**| FramingProtocol |  |**_Affected Architectures(s)_**| arm |  |**_Related Issue(s)_**| n/a |  |**_Has Unit Tests (y/n)_**| n/a |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| n/a |  |**_Documentation Included (y/n)_**| no |    ---  ## Change Description    Added newlines at ends of Svc/FramingProtocol/DeframingProtocol.cpp and Svc/FramingProtocol/FramingProtocol.cpp    ## Rationale    With our compiler  TI ARM C/C++ Compiler  v20.2.2.LTS  the missing newlines emit warnings / emit errors if warnings are set to emit errors.    ## Testing/Review Recommendations    None    ## Future Work    None
nasa/fprime,512,2021-05-05T09:34:55Z,2021-07-14T20:45:29Z,False,none,12eeea73c2c5381ee086005703d4f7aab5cae602,2,2,eb89bf6fa8c88a1030cd8acc60f4dbd47aea0b6e 25c9cab7e520bbb54b25f1f53ddf81c904af11a5,,Added CPU Affinity support, Changes to be committed:   modified:   Os/CMakeLists.txt   modified:   Os/Posix/TaskRoot.cpp    | | |  |:---|:---|  |**_Dentopt_**| |  |**_FW/OS_**|  |  |**_Linux_**|  |  |**_Taskroot.cpp deprecated - CPU affinity_**|  |  |**_Has Unit Tests (y)_**|  |  |**_Builds Without Errors yes_**|  |  |**_Unit Tests Pass - not validated_**|  |  |**_Documentation Included n _**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    To assign CPU affinities under Linux OS/Posix/TaskRoot.cpp needs to be used instead of Task.cpp    ## Testing/Review Recommendations    Running tests on TaskRoot.cpp    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,765,2021-06-24T09:13:49Z,2021-07-14T20:46:43Z,True,2021-07-14T20:46:43Z,faf66b8ddcd93cc47d53b868c1c907139b355d2c,1,1,10012ebab42be5fb587623d16fa7d19bbd84d909,,Update dockerignore,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| docker |  |**_Affected Architectures(s)_**| - |  |**_Related Issue(s)_**| none |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Add `.github` and `.dockerignore` file in `.dockerignore`.    ## Rationale    Docker build must ignore the `.github` directory and `.dockerignore` file.    
nasa/fprime,787,2021-06-27T06:26:25Z,2021-07-14T21:00:44Z,False,none,6cd3f12adaed223900cbd3b57df04f14898c0843,3,1,69c1ed0e4ed469e747d1f912cfcd7108de1709d3,,Silence cycle slip event and added cycles between slips telemetry,  | | |  |:---|:---|  |**_Originating Project/Creator_**| OWLS / bcmetz |  |**_Affected Component_**| Active Rate Group |  |**_Affected Architectures(s)_**| All |  |**_Related Issue(s)_**| None |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description    Added ability to silence the active rate groups cycle slip WARNING_HI event. Beneficial for when bringing up a new system and working all the kinks out without a constant stream of WARNING_HIs that make tracking other events difficult and slows GDS down to a crawl.     Added a new telemetry channel which publishes the number of cycles between slips as a way to help determine the period of these slip events.    ## Rationale    See change desc.    ## Testing/Review Recommendations    Tested running locally on laptop and inducing cycle slips. Works as advertised.    ## Future Work    None.
nasa/fprime,827,2021-07-14T20:33:12Z,2021-07-14T21:36:21Z,True,2021-07-14T21:36:21Z,46e71784484f773682bd32c2d25e482d5c4ff5bb,1,1,8c15a0e93864fd4c13df999000e6eff36dfc3953,,Update Tutorial md,Fixed two typographical errors.    | | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,811,2021-07-07T19:53:17Z,2021-07-14T19:54:02Z,True,2021-07-14T19:54:02Z,1b9c785ce6aab58a4c601ad327cb5a51d8a33cdc,644,1,de45577cea04033be0049946c2997223755c9ea0,,Remove void from parameterless functions,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    F' inconsistently marks some parameterless functions as taking a void parameter (Ex. `function(void)`).    ## Rationale    For consistency  parameterless functions should always include the void argument or never include it.  The C++ best practice is not to include the void parameter  so contributions to F' often don't follow this style  leading to an inconsistent coding style. Removing the void argument better matches C++ best practices and brings F' style more in line with the rest of the C++ community.    According to @timcanham:    ```  The void was left over from my Rover software days where there was a style guide to include void if there were no arguments  so I did it out of habit.     It was to avoid a gnu-ism where it was legal to do this:     foo.h:     somefunc();     foo.c:     int somefunc(int x  char* y);     bar.c:     #include <foo.h>     somefunc(“hello” 3.6); // !legal!     I think C++ is way more type-safe these days  so you can remove them if that is a standard C++ coding style.  ```   
nasa/fprime,850,2021-07-20T00:24:29Z,2021-07-20T00:53:48Z,True,2021-07-20T00:53:48Z,782ee7bdf41e4d459c2acf4d795cee0c3023b921,1,1,73c06ecbe82a4c1a197868bf598f30b521c99215,,Disable C exceptions while compiling F ,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Add the `-fno-exceptions` flag to prevent the usage of exceptions within fprime.    ## Rationale    Fprime must run in embedded contexts where C++ exceptions aren't supported.
nasa/fprime,831,2021-07-15T20:51:51Z,2021-07-20T19:24:29Z,True,2021-07-20T19:24:29Z,5344afc8f44219e4e67fd1f19acf97f1a323e999,3,4,39269a06736fdc3895ff419834fb3b242ea2945f 7ba0db07bb4502397cf465bfe2cf86703d6dad8c e6aee10330c1dfec9e6a738958e7d7b099418dbc 1805d108e86a24471f509b535329839d7bcc4e13,,bugfix 830,Bugfix for https://github.com/nasa/fprime/issues/830    Noticed that some of the URLs link to wrong branches.  devel <----> e165c914b0d0240eba8164c52f8856ce90bee3dc
nasa/fprime,854,2021-07-20T01:39:26Z,2021-07-20T20:25:11Z,True,2021-07-20T20:25:11Z,88a7e069420b7da33bd35df6b37112a38b35b3c8,82,1,1b0ce51c9404efcdf7bc2e5fc08e8461f040b600,,Remove outdated disabled tests,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| autocoder |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---    ## Rationale    Removed a set of unit tests that are disabled in the current build system. Most of these tests are 5+ years old and predate many fprime architecture changes. Additionally  tests cover only very basic functionality  such as cross-component port calls that are tested elsewhere. Because these tests are redundant  it's better to remove them then upgrade them to match our C++ best practices.
nasa/fprime,833,2021-07-15T20:57:26Z,2021-07-20T19:24:41Z,True,2021-07-20T19:24:41Z,600994b658b4fc071306237ea3d2db3fa1e0e4c5,1,1,afdb53f11bdc131c5e263a4fb19532e7e1ed3293,,bugfix 832,Bugfix for https://github.com/nasa/fprime/issues/832    Old link: http://lxr.free-electrons.com/source/ipc/mqueue.c\  Updated link: https://elixir.bootlin.com/linux/latest/source/ipc/mqueue.c
nasa/fprime,797,2021-06-29T02:25:38Z,2021-07-20T23:07:42Z,True,2021-07-20T23:07:42Z,d589f0a25c59ea9a800d851ea84c2f5df02fb529,24,17,1fcf1375155c7860dee32af982f2ed2c5272b84c 8f1829a09eb7ce5722071b537d390d63ca65bf4b f1f80632c28903dc557dba477cce82ba4734bc73 bf8f88e21f12887e59270412cd6aa1ac71b78ce3 5c8fd13f350cba7586d9b3b8edfb19022676edd0 46f79659d2239242b938312f6bf081946a1f9b1d aa4cb0006fd6d8abae086d521fb5fa70d9ee7f66 dc483bb93eb2469396cefe1f27599ff60ab63d57 0ecaf14a9bba7bac18643b023486e4010b39ae19 707c857629e8c074a1ea7eec05a9cd4b3606e44c 4969c2f5afa0f96fd93c3d34af3f2e45af23d3ce 3a47208467c69d989618787afad5038fa032a08d 151b6fc8bcafc5a3bdfa69cace89dbe550bb584d cd9c2c53c673af99e12bac49cb06132ca210b4ff b5ff59e69f4c8aab12fe554a5ad16173bef42a68 78995491f966820e47ea02ef723ed2a525727cff 0363b9c170558d7c4963e9344c80fb9f027a3745,,VxWorks C fixes,| | |  |:---|:---|  |**_Originating Project/Creator_**|@timcanham |  |**_Affected Component_**| None  PrmBuffer.hpp/.cpp |  |**_Affected Architectures(s)_**| All  portable code |  |**_Related Issue(s)_**| None |  |**_Has Unit Tests (y/n)_**| No  but verfied PrmDb |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y  PrmDb |  |**_Documentation Included (y/n)_**| n/a |    ---  ## Change Description    Updated `Fw/PrmBuffer` private data member from `m_data` to `m_bufferData` to avoid collision with VxWorks `m_data` macro.    ## Rationale    Needs to be fixed to support VxWorks builds    ## Testing/Review Recommendations    Re-ran `PrmDb` as a check  but there are no references to the `m_data` member in `PrmDb` or the `PrmDb` unit tests.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,788,2021-06-27T18:49:19Z,2021-07-20T00:37:38Z,False,none,654b8c1d0190fe8b7bb8795995e17c45c56c1e90,3,4,a1c98f4a201beac55c804b6e5c8e5fd2cd7f3aa8 a3eb092c9e5b560e0fc2b7f831205fe422e2c10b 594eba96e2e52cd65a2f2fb070dca956f08d19fe 20012f248d27764b7f791e7dcefa87f6cb108274,,Automate development setup,| | |  |:---|:---|  |**_Originating Project/Creator_**| @mikenikles |  |**_Affected Component_**| Development environment |  |**_Affected Architectures(s)_**| N/A |  |**_Related Issue(s)_**| N/A |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    This PR introduces a `.gitpod.yml` configuration file to enable ephemeral  browser-based development environments based on www.gitpod.io. It automates the [INSTALL.md](docs/INSTALL.md) instructions and starts the Ref reference application automatically.    ## Rationale    To reduce friction and lower the barrier for contributions to this project. The `README.md` file contains a new button for anyone to start a development environment with F´ configured and with the "Ref" Reference Application started automatically.    ## Testing/Review Recommendations    Until this PR is merged  please use the following button to test what the development environment experience will be like:    [![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/mikenikles/fprime/tree/automate-development-setup)    The above button uses my own branch which has Gitpod Prebuilds configured. See the next session on how to enable that for `nasa/fprime` and why it is beneficial.    ## Future Work    In order to get the best experience  the `nasa/fprime` repository will have to [enable Gitpod Prebuilds](https://www.gitpod.io/docs/prebuilds/#on-github) so that the development environment gets built every time there is a new commit pushed to the repository. With that enabled  anyone who starts a new development environment in their browser does not have to wait for any installation tasks to complete since they happened as part of a prebuild phase.  
nasa/fprime,44,2019-05-31T17:16:01Z,2019-05-31T17:39:08Z,True,2019-05-31T17:39:08Z,ee8769dfee47d3ce06c28bece23b022382d78c7e,1,3,34b3eec8337aca140f8d9a8036dc8c08435920f1 e0b460bb9c040a8e8f8b2b0e175ddc7b03a6e54f 0b4aeb4ef2430e8b0a2a801eba76f6a6b163bf5d,,Fix linux timer,When the timer second value was >= 1 second  the nanoseconds field was not rolled over. This adds a `%` to fix the nanoseconds field.
nasa/fprime,46,2019-06-02T23:07:10Z,2019-06-03T15:59:39Z,True,2019-06-03T15:59:39Z,0472285bcd2bb9d47d4bd7e25261299bd60b06ab,3,2,c1e3c84618f59076b12a3b292fd793c86bb94421 a154b3cf26ceec0f2c9f2800714ed195b2cee156,bug,Fix to RPI example sequencer,The sequencer did not have a rate group connection  so sequences stall. This adds the missing connection.
nasa/fprime,277,2020-11-30T17:58:55Z,2020-12-03T02:00:00Z,True,2020-12-03T01:59:59Z,49e6424f075a5c093919e71a834c3c5dc1cffc42,9,17,0963a064b0f2cb4af64269664550706585ae856c 4564b0f39bca84a45c92b27e71cf301ac40a66db 4c10b3c1398b74caaf1229fc4ec370f9c1c2bce9 5b19b5ed2c4a382e113380c582cee675c540aa90 1e329f6d7de85c052bc0fca57908f26b351430f9 86e975fad3bdda69dee6145cdbda776ada515c82 ee5df9acb210bc71bc4971564c3f8aab4ad4e654 7c8b65f840b3ff66b0187cb7d21f0f127fe57756 be4c26d6df190e5a971615057046083e8d804943 63b5f5a80ab0dea39b2acbed778b7ed4c8f79d75 2173e83b2f8fd9902cb7c80e468180767c91026c a9b1eee0a1f166581206e74bed263e9e6e7aef8a ddeeba037ae0995e6fec5843109461469f5c9077 18c699ed35e38d2485df97d31980ab68bdf662e9 2efa8b29e6d12655ef0cf40b4ecac9c0eabc540b 25c6bc30536259630fe2a0644dad26fb556a240c c2a621e030290ef6e41d8b61fab685ea5bff26a7,enhancement,Update active logger min,This PR updates `Svc::ActiveLogger` to remove circular buffers and the command to dump them to a file. These were never used and are better handled by `Svc::ComLogger`. The circular buffers consumed memory and CPU cycles  so this will help smaller embedded targets reclaim some memory and CPU resources.
nasa/fprime,283,2020-12-01T00:15:20Z,2021-02-12T03:02:56Z,False,none,5dafb798700085a55ed91bf24e642058e67e4646,36,24,0deaff45310efd402ee88b420283d50af16641e2 7889ac317c4449ea201ea3aac15c2e4b22f4641b dadbe4aaf559ee76710baaf3d0dc792093d99e12 596f2cd934590869d905921f0f2bbbe4c309b225 f1d042a795d3bf30960bdac05f58bc901f94f9c0 54b01badb5086ba4d54c72285ee344a6b265e3b1 5f35e41b9e886d6bdebfbcea55444e3c9ba2ca39 a415962620b86159a5849f6dbab73de562d27512 64350f8f5dab23c42bd3e514219c9341fd94e3c8 ad1a1ad454ca0251575124181ed1bc1fe26e220b c14c5ce63129f64a7197203281f28e8eb63a2671 3996c0eac37a7e84dc5c7e3612a95fca7e7fbe28 5ea0d598e568d287be35d579dc145c3ab25f0769 1039960dad4e090921b51a9b80e340d85e32bdd9 774c55e3df739d91b8b4ca218f330bdd542f05a9 0bb750e301821e18ab587476ad7f9c4d25bff012 821102cc05c258f4aa0a6b418e6db482474473f9 1fcf1375155c7860dee32af982f2ed2c5272b84c 8f1829a09eb7ce5722071b537d390d63ca65bf4b 70c53d2a032f1f2ecdc7ee74ff725a1dfa3bde96 da8f3518f4c483391f6f9869ff72f1089b98e629 9b07926957e00023753a258abfe390863cc0ffb9 5b37e13943b292e44a30e5610e874d68dfc2ff41 5eb8b38c8536914617f3949650bba04c88c79f44,enhancement,Update buffer manager,This pull request updates `Svc::BufferManager` to allow allocation and deallocation in any order  and allows the user to specify a set of differently sized pools to optimize memory usage.
nasa/fprime,867,2021-07-23T01:48:05Z,2021-07-26T19:13:14Z,True,2021-07-26T19:13:14Z,509b30414455e27476ae5a2365739956827b0b64,1,1,5491d3ca498d28a9019e7667bb6388b58d7365be,,Default F to C 11,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| cmake |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    This updates the 3.0 release of F' to use C++11. CMake has been updated to set `--std=c++11` and to error when the compiler lacks C++11 support.  
nasa/fprime,869,2021-07-23T13:41:41Z,2021-07-26T19:12:30Z,True,2021-07-26T19:12:29Z,48dec2b72386e8063f08e06285fde31eb0e0d87d,1,2,c45cae0fcfb264eaf25cee69532001dd065c5fa1 209a82703ec1078ad3d48fb432b68f6b9f8e2223,,docs Update Incorrect Ref Executable Path,#864    | | |  |:---|:---|  |**_Originating Project/Creator_**|Esteban Duran|  |**_Affected Component_**| F' Tutorial.md |  |**_Affected Architectures(s)_**|F' Docs  |  |**_Related Issue(s)_**| |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Change the **Installing the Ref Deployment and Running the Binary Assuming Linux** section in _Tutorial.md_ to say:  ```sh  cd fprime/Ref  fprime-util build  ./build-artifacts/Linux/bin/Ref # Run the deployment  CTRL-C # Exit the application  ```    ## Rationale    The original documentation says to do the following:  ```sh  cd fprime/Ref  fprime-util build  ./bin/Linux/Ref # Run the deployment  CTRL-C # Exit the application  ```  However  it does not create a bin directory at `fprime/Ref` nor does that `bin` directory exist anywhere inside of the project. This is misleading to individuals going through the tutorial.    ## Testing/Review Recommendations    Fetch the latest `devel` branch and go through the tutorial.    ## Future Work    None.  
nasa/fprime,872,2021-07-26T14:47:14Z,2021-07-27T18:39:42Z,True,2021-07-27T18:39:42Z,764194a97519970dd0da35c450d2bc1666a374c9,11,123,366f93f175fe2c4729da099fecc12688f840385b 3ae468279b6e69b22ac48b3775b773359a1da21d bc050af5bd05d1d28461554ee9fd80a9ea9dc691 9a6e941024f32d85b0d132aa9f76734f89ed2ef8 4078ce35146d2ce6f8976140317d077b5e74f1a7 b0b380663ce7c4448cdf49df391b0dd0c5034154 45e99a1a0e866b8d5f61700e17877e62dce0b10a bce2af6aaffbef8e4acc13ff8719db24e71dc6e5 0811db7d03bb408f11b1f3039c493147fcccfcbb f70bb74e7186712b25fc8c2a5174bd8f61b2f98b 77836548145eab2b1027f1fc1898b36b0924c75a 2b47ec730556b14fc4c5985c9474f654b761b026 e80529ce7a47ea30bf6a5e09a5fc4af6bb211126 0a3d2e6de6cfd471874fab4d5b46b3e421d834b4 21036045c7c0ba6006c575116766b08cf4bba70d e03fd06c588c7298380b3ac8d49d73f66044609e 15374d07c641c9d617107b28000e8f9dfe596210 6ce47d2fed67187d06a67cb02131ad91efc89346 4c2c09f0d0f781c955f2d807ba3c0b326cf7c95b 91f3ab3d67b9fbbc85c0d805f3e9c347eeaa6f3f 61191bfe102d3f77216832dc068794f94ca0d470 c819a78131a2d7c006be960d1a70d7ea63e1cd28 1096697ec4c98c65fee4268e629509357812a1a1 202100b2113ed5553a597a524ea6969c823c2089 276118466bd907adb2818c2f2a95d8cf639d41ee a22de723d5902d117cff787e1fa41c7150b41814 8e7e1ca60c8f542d87b7fc0c80f0f7bb3a456f0f d6b1a7de362ce9f7983feaf2ca364c23b239bb4a e54d12d19ff7e4c629a7ca49057199e3c9e36c52 9c9540655e98150c64b0aae0c5c6a8d549355f27 a8b0f27f45f535dbfd217fa602c083e7ad1c305a 91e4a84ecea21bf9d3e13c99c4070b96d1f61e1c 83eb47212f9bccdfed3e8b1d1cbcb5144059ceda 8b261b46c40b7c781cc9d88e6ac862c9662bf3bb 09f7fad84d7ed4eefc55c63a54fb5ae7ce0fcadc aae982f1e783352cb7035c6ac0b60cf2c9d44f19 e09f537c6db164d596a28b2e6a4c9fd0e91f818f 051604e376680690a8e04a31ac9cc461c788af10 d0ad5f12e3245e81b6938c0e083f70aafdb9700d 0e0be62e217fd64210ccb6c30871c19a9670d8cf cb7bfca856ec1aea4e532686143ba6968ffd0ec6 68cc7201f7e8d1378a6466ffcd5679febf27350a b5754377d2488a8be250c0bc423a94de8c98d82d 62102b8f7f53e92d780face7e9e7ed1e7babab85 ee6e8f2e4bea086cc5b39b0271d1c44702f88f5c 3ccff2c85c4fbb0a373342e7b66e4a58a63b70d8 9000af62d1e0bb2eb72c21482a29c9e49bb23f28 f75fafcb9f4dc5bc5c4b3158b8735ed3d418740e 0aa43bd631831037fd65983f11e60a9144244c6f 7ff80f1b34c95c9f804cb55f697d7e3daebd7946 3a5f6d0ed11ceb584fc318900fcf8aadc1a25eb9 6e5cc22c73d1dad7467eb1f52fcee8e742c7fa34 8582422835362f69a3c86406092ace68275cbde1 1b1dab2d9a5b54f0774894f179de3b44ccb309b6 0c412ed7fb8249aa376936e480054cccd1920a10 21fa03179515980a582a0138c0f6bae15a3204bb b6f824762dc4e07c65edf7b53b4652d815a00722 e28745298b80141ea79b817094dea3eff86a70c2 458e1f95bd1466a3f89f3ef49fa32d12195ab625 793bb9b4b145e4bcc83cc9a1b5fd8b09b1f80bf7 aca3f787c77289af9c1c736dd6ba94d27bdc6276 b38764eb3a26124d341ee6964aaee1a7a2707462 6dcdb5deaf42c570ca7a410757098c37be66e599 b31b67ac1a1b659601efc190f750db83ff72d600 93ab84836fed2d703f257ac6e40fd0a4d8ccebf9 b82555759888ad51aec8fc32cdfd24a238c394a4 cd1f0c8da6234cf4a2e7b77a29a92930f5edb82d 326bef622a86ea210674394d03e7ce57d67faf10 b80827fd56cdb5935fda7175e2e36654e8965766 50c0cc3b429736ac5d849907ae8e5d49d7bd82ac ebe155d5ce5cd3d418df02acc22843a87826c3cc d01f825b93768f70459f2b306c8719a8baf92857 55f9c794dc2dbd71c4fbeb76c715e5f64cb0a6a4 32d4de7e9cc1a6c7ce33e96427747c4a4bfe3440 bf86771a1cd56f6004bde84671d5725b2bc78c41 7414f1b1b5b2284b14b7856dc569bd9a23f6bff5 442807d39dc82286f07646102d07869028f0e60c 322d7ced9cc612e6f672df5c0842b84d97f63c53 f0a2f16eeda07c845a55aec10d48da76cb07f5d1 8bf818a044cb35bd668e41b0c29c84d5e5236f8c 5ad6d7733103f74dfb829e252cb161c431333ea1 87da67301effb23e4d6a0db50398f1866dec6d3e 0b04c18a7497bf7f9cebe958afd7dfd621e49094 03e3871303e408ddcff8cef8aed443167ec79aee cf8aa08d7ba97fbbb6abd85bcbf235b9092556bf 8e92aef86243fed4dc3f2f06398cf7633446f3de 74f1eb07690e1849314d920671f2d9f41d0406a8 941037f702bfff6342287370e3b1bd5d0be89b42 e92e71454aa0a0a70a37db53fa25d4d1878b33c2 a79165be39344969f80f319d1f6599da9588ec64 b308206ddf900a2aa6c2926c4e0dde907471c3a5 7ade858abb98e0a25f918e66d152b69f50efd947 a31c10bd8e156375a2646eee828ad50703aabd01 158ecab7d3c3acfbff8bd91977de97fe6bfc1d55 aa26e28e859e1dfcb9409eafe9e54d83297ff52f 90e2b47ddb42328289ead073eb1c43555906d291 b7edab7bb4c89a1e357f226dbb8e9b23f70bd7b6 2310583403973ca290e8be7b4eb191d75d318b27 1418ec5ac409e884dd1d145979ff0d55a0cb4bcc b3e09c4a673358694af55dce7b3c7e52559340f9 713760c229b0bb7521bc9bb97c78a7b168becae2 6e0db346d0a0dd81f886e4760f17083b266cc061 47b5f8eba12a3d53cb4935b2b5a0ebbf2124bc42 d233deb37e65de7a018cd7835057b4ca3f041697 69341c17aac31735e25d3c13d711c52b26398943 68fd4b4f15f03671cf0336df6fa17db89feadce6 b4dda9736e964d737ce4fe04a9829ab352006b24 54699ce7fc8f8006ada36e1573b4adfa9d7c2942 d35cc3e49b9154d44c5777ef4f944402a37d8ed2 a2b0a526affe29c716d8d0701fcc142972151eb5 f4b2ced4d14e4002e2155efb95230c88558cfae7 5f90df07b4d1059bf24efa9688c08d34a1dd581e 8f017597d4255a4b5926d205adbeeb2ea97ed0cf fa70aba18d50cec6c7856bf6ff9fe1970ea03b51 e2fff8aa9d9b117dbf4c844e28c2b1acac26454c dcdc06661259d3565d39d40752ee2f65cfda6fbb 089c7e4e36793320c9a798cc7b1f8ba2d572e735 6c0a66383f7e57bc5d11be32074aab6db7f0101d 28a82fb791c38b441754e17edc928968266fec3e 6b2fd3a44be297da12e092af726d993c847c8951 55ac01e661df75c9d3aa3d510a3a03e27fae161a 01c0013afcb939c665adb403c0e4d9c213404e19 028d2832bf1c66fb97092c2d7ca48454ddf40070,,Split CI workflow jobs,| | |  |:---|:---|  |**_Originating Project/Creator_**| Ricardo Pena |  |**_Affected Component_**| CI |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Separated the CI test job in the Github workflow to reduce wait time.    ## Rationale    CI test time was approximately 14-min  and required all tests to complete before obtaining error logs  if any. By separating the jobs  it is easier to observe test results as they occur and total test time is down to below 9-min.    ## Testing/Review Recommendations      ## Future Work    
nasa/fprime,862,2021-07-22T20:19:50Z,2021-07-23T03:23:21Z,True,2021-07-23T03:23:21Z,fbbcf9301bd121eab7cd1538e5b9f54651bdc02f,1,1,57cdbdc0bc10b65dc23ea711f060e51016cd5cbd,,Disable interval timer test on Mac OS,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  Os |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**| fixes #856 |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    The interval timer unit test is timed off a 1 sec thread delay. Mac OS allows a large amount of scheduling jitter to conserve energy  which rarely causes this sleep to be slightly shorter (~0.99 s) or longer (~10 sec) than requested  causing the test to fail. The interval timer should be rewritten to not directly utilize the OS clock  but in the mean time disabling this test on Mac OS prevents intermittent unit test failures.  
nasa/fprime,865,2021-07-23T00:21:39Z,2021-07-26T19:18:07Z,True,2021-07-26T19:18:07Z,640412e999299db204594b6f8911077476d412f1,18,1,46962b5b3881dfe01e49110c5c15e127d5afd8e2,,Use exceptionless variant of new to properly handle allocation errors,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| various |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| n/a |    ---  ## Change Description    Switch F' from using `new` to `new (std::nothrow)`    ## Rationale    `new` can throw an exception if allocation fails. When an exception is thrown but not handled it causes the current task to immediately halt. Switch to `new (std::nothrow)`  which returns  NULL on allocation failure.    I didn't update tests using `new` since for unit tests halting on memory allocation is the desired behavior.
nasa/fprime,875,2021-07-29T06:51:14Z,2021-07-29T20:17:11Z,True,2021-07-29T20:17:11Z,b47358f9dfdf99d96979f010c11be0bc76d966d9,1,1,27b6a87ecff13d47fc49900415c066425f148194,,fix Autocoders finishPortH tmpl clerical error,| | |  |:---|:---|  |**_Originating Project/Creator_**| Autocoder|  |**_Affected Component_**| xxPortAc.hpp |  |**_Affected Architectures(s)_**| n |  |**_Related Issue(s)_**| n |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description    The template "finishPortH.tmpl" for creating the last part of "[xx]PortAc.hpp"  has an obvious comment error. It is not a functional error  but better to be corrected as well.    as an example:    The CyclePortAc.hpp likes this:        /// Input Cycle port description      ///             class OutputCyclePort : public Fw::OutputPortBase {        public:           OutputCyclePort(void);    **After modification: ** (Comment has changed: /// Input --> /// Output)        /// Output Cycle port description      ///             class OutputCyclePort : public Fw::OutputPortBase {        public:           OutputCyclePort(void);      ## Rationale    A comment clerical error    ## Testing/Review Recommendations    Not related specific feature for this    ## Future Work    Review all templates in autocoder  check if there are other similar issues.   
nasa/fprime,806,2021-06-30T23:54:32Z,2021-06-30T23:55:46Z,False,none,c4d6b5e3378761c687b701589aeb3d9a92678c75,693,349,f3045700f4f85a1856160c066cafca1163ebbd27 f799e0b7bc53a171d6afe99921440408bf755b58 bc9fff89db5c74221427b586472809f1a8597fd9 4e2dffb80275006f17edcdc2ffb0d48419e0f9f6 2a8d9e25247cacb55ddc6e88d5d90209e5177447 5abeec3dd779cf2eaf50cd434984e941bcbff96b 6369758dcef84aad57c6dcf611b670f44c048403 3964810a3cb69ead2fb6d04047efb84c923f7462 eeab9901379df6ed83ab106ab695b0f8788127cc b2a255550b3dc145ef89948d9aff6435c3834823 2a17536f0ce1006ba659876f734e67474397c13c 854d1a81b5f191436df7022b53c6b09085f8be10 849f8e4f6b76586fbe789e7943dfb7c7cc4ad0d5 f5104305854818500672a4b4a0cad9031d42cd8a 98f0b033c2f921e72a9aed536f08d71a9539f715 db42aa85bedf85baf4b776af955f7aa3fa128831 ad9d95d337645eba04997d720feb18bfabb5e700 90d7e33a5a654ef2b1129434c8853d21acdff9d6 11a60bd408dcf9f5fdb06b3456b57d76a1b893a5 5e1b48dc5861627a60040abd1ee42f33c0aba9a0 ec1e75750d8bd55272df82410795001d7a8397e0 66217f4013be2dce7ea8e158b4d5a58b1f8a7caf 35c9b748c215c90386548529184f35d76a450f8a 97bc2125269aad5fa232a1bb47ada6749e549e9b df9200918c79cdc25b2b6de6876a1982c0252c7c 5be86ee65ccf5591677777651a609932155b54bd ebbdc145196e2c415709c0487e9587395228fe50 d2079543406948977fe2ce887245942b7619b19e bf85a3198400c1513f40d1591367b166ab0e4b19 9b85681244f79ee39d6a62cc829f6b2af2301c29 9fdeca7ecd05410b15fcf601d0a10fd226573ba5 6df9affbb7a3dd5f789b0dc49e1fdf6a067e2fd2 c858c90ee2ddb2f6add6d15b2b7b4cd6fbe22d21 321d6659804c0cf62f77ee5f40ef2454e7a799de 321e21528eb15d3631650e6817370520005562a4 2cea04ff627d4476a9b0e2cbcdde45676340982a e528243f01d0551904aca1035a5a54b7a3523ae7 262c46a3d37ad5a3c42e641085817a23bad1f8ab 621d5c8fe7aed4ebb27ac7469255082cf8ac5b23 1b985ee10cde54a55c40d762d24b8c3586253a22 57dd9d76c944cf55a09500a6d41488ecf49d27e2 4c0342c2126f09a815241fff779a5faa26126c1f ddfb42f54619636d42ccb7a6134cd78a9a795e82 0cd42685daf8eca91807182d0c763049da41b1ce 483c9a37d37784aedfc2ce6e2420fc54fcfe3610 4373db6fed5f47592563664ddd19cbd58df410ef 89aee6dd7b69012eec40221f77e0ae259b70091d 13bc400ecd8424ceb97e508d1ca34a899dcbea73 49dc824ec371cfb89fc5229a5049f5ba0c450751 8fd4ed873262370d3fcf3d0f3cd681f9e3260f81 0716fa646fb8b694dda667cac81a943c457cfad9 c32493b5c72592dfb23a4a9ee4b59b5aefe832c6 37d73806f2521a09191c5be5f18a93927d0823c3 7c3390abdb8df150cc9f1006747da15f292f1263 8c1915bf65897acee9128e544cd7b9a2cc66fd39 a6e868bdaededa20b2aca73ee2e5ad1489a1a4eb ceb8cbd01574b899e65793c9a175dcb211232028 d1afeafc3e8acb110dc9ceeac6c616eac9256e11 fcef211bf32953af6eb80ea0e64eebf1fb4d2645 2dfa44355972953cb2224680c3952daa6c09726b 359157540e56644dad0b2fea982373756f1f89a8 08373edde611f1fc7c8f3c86a10dcdb7e0da969b 2a794f741459ce431bd2cae229c6ae9b0310df2c 0abe7d25706381624dc34617cc692526fed8eaec f334320cf4594e216e950e71c2ff258e78bfde64 91895b3d581000d199e5de5ac5b782e06a755138 6ddf656a243a36243c7dd4bcb3186dac2fc80cda 633f9ca328dcbaaf415a6e84c8fde58e38c1bbaf eff094938b7e2870d2171d5aab821c2f1f514bdf b8b6b4d17b8a6c58f42b34fcc7a5d328b85f4daf 9ed4fdbe4b3794d48e360ea37e31ba0deeef8bd7 0398dc53909c67ea047279a76c85fb0570fe5ff7 307f645cabfab7b89ddec2a2623715634b56a46b 655e706fdc842edae4554bec2807beb03e62ae50 5720fdb63b8eba2f23a95a9053e292b3b21f117f d9279b002a43683ab70f7c6d5beccf1852632231 2f69dd4cc6a7b3cfb48b99b986819a01cdfdca85 043cacd6908e98752a9eb59aff0504772bc62923 f62b179046fcfe7c6d2d5c0734b7b19ef543f692 3a74c310db91db75d19fc7b63fbebda83733e1fb c2167308dfa18c29111aefe008938bab67527917 428dfca5ac9c1b7a8ed0d0b43179cac9ce514bea 070636a5f0b4f0f8d054a43821d3211c7d115b2f d6020d8572ef53ddef4d901e537c5d38e8350fc4 88941fbd2607b41a0faf21ff4249de55ba52714a b1b1da1309e816ba33f5d71921a4469c2b14f464 3a2af1b004e2d2481d8abb46061e312521ba36d9 709e613f8a8fc3ecaaf9ada83c243496f790ed84 81611f0b8b4ce135dafd3eb8a390bedb196b00ba 0c01b261d1d3b6248ba13f365fd8ad5acdb322e7 cd4a191940fc76e378f4c4dff1cdbd9a162c1b91 b48a70d97dfce0b91cb2c56d2d471d283b9a4aca a98f95f87594b61bf189dbe5d550bb1f676a2d3f bd3320d8316e3a7a08aba405bc8aecc9f7871f40 c74a4b2f09b5ccc2418999aea3ca90f0dfe42043 0e265a6e3d2c4064ab631495c7f2dc50c7370926 d5611b3cf28d2cfa05c1afaca7415d53cd75b3d1 65e77d8e52e192497ced0581ecacb3104f2e389d 6354acb1156c3f4218b2afc6fa694e4d658401d1 30df140f9e16a92bfa42f4743065f424d4f6becc 82f9a1b9ea4a64d832c1a0b7229674e97497ba04 26784a030a62649a7a1b187c979db005c6aba460 a8213f4b2134b8444a4d63197267d244ef9e5690 002f70518154c01e58c965bd07334bdaa462eec9 376165845b312c901b6e05b93835c63777cf2acb 5ca79cfa7d20ab2ae7e7907a3c87670e874f996d 9f615d75880bf5b3892cf9fbf96817df55323c1e 793d51325cdec7c750b17a0cc59e7206a035f85a 240f89eac34a25de3d2ff0a1d2e4dded08a01c07 138b05f354fb2f3c16dbc7346739855a4b0fc39b fb829e004454aaa4e76be3af0e56cabe8136d237 4812b86ee77373de3d4d5a65b81190b868f1f6fa ff207ba8e936c485ca1d24442fe75015f3f4765e ceccebcdbd323dad8ff8f461562c1693dea1f752 3b5d3ea11370cccfe74b9ef67c1a131adfd2d3b3 86ff51c827d36e431c4bc920362a623aad8a283c 2358d229200d8adb81427e4c6c40b6bce93658fa bb01e5d60088bff15a1684bc3a3e2b806154ca04 0a81e7daba12a001e654e9b75d4e592847adc032 5ea8e2bc20afaf27c68280bf48363efa09efc25d 4d1e436077ecafcc257ebc77cd7ceadc713c98df ca42c198f001b9abe3bf738dee3116e8efd37d7f 632b6e152d82b22ce46f124873699f9f361b2691 e66fbe91f73e57d73b8ffb74d3597ad181999304 38b70ab207b36eb129187e57a4ea19077a752c4e 79fc4252054154b190671920626594ab1b296e4d 5c8fc40de60ec50f9291bcae147429df5a498e44 9058fcd94ad9778446635a1d774c406b3dd5e9ef 64c477e6b404b7ac2d3e613783fd85ef3b8ee3b4 db253980a1cdb57f8719e5e7f3abcfe0b2efe1b1 ae73a00a7e83e0303935a62cf11af538cc087e15 7e41c8c5dae231a7efe1213180eb91359c6b917d 96259f0fca36fce82497600d4569c885ad27ae75 f8fc2c39b2407e70f8ed0bbec4d057b404ef84a2 45aa029df50aa9b98662c72b1d846421ba8d0c59 ca32b01f90c96d28728e86b9c45958d56d0caf88 c65a423ebde3c45c1bcff957712a44c2ef1be18d 1775497297460ded7f61f988595e2c30fb69712e abeb33b39473b53f1590dabf35dc5b6d9f70471e fb7cb5396b837e4e602a94fa75bf8308aa4df164 f40f6f8a9c01a79aa3f2c6b53176d46c370d35ad 40d2e0b51412c08b1d50687c47dd14594fe44a0e 1b224d71243686a749cb3a0add1490b21246c15e b8b6ad7e8a3659ef3e91599988cf00657abcdf5f 1d98c1373957848375c6f52825b26ec92d7de9ab 8f4971cd4b1b1a1ecb6b1ea59036ad4fa8184706 a1e2a4b7b22f38a4395fa077b80dab2945025b1d e134cda5764b325b357c692f6391abe78b2f02a7 9f8c15eced51e9f75b7e9ebd7413f1a3d2be064c 5fca62b3c155aa104a5e2c32203d7075332fb9b8 e7549664799a52c1581e7cbeaf86e727f46bdfa2 c0e10ba39cb957940c7c236c6ab778b4022d569d b23068e15a9838c0650106ecc6f32ced8828ad7f a6737612ddfc6bfce92abb55e5cfce55e6d52f6c 396599fb5a3a531b126b9bdbe03d0bd40caea472 849924c028e5ee319901c4b6b2a33df7c551baa4 a284ffbff6b7f72cc03f8cceb1ff68f7dd2b7f48 2c960de0620db9faad63b85cfd9d423568d1f6fe 5f64262cac6829f2e1c4cd623b49bdf48c00d160 4d73acd881eba4d7cbf0a3d352c47e611279cf1f b83b7b4626d311855d89181a9d92f3fb3121dc2f 8bc17eb09b6c7e7a9181d04e30b6987b37486362 25bd45dda45b4dc887ffd70943e20ab687be9657 06eae63721b21c3e49ffd2c99624e451730bff4f 92ec22c049548164dbb247efcb3040513aaf43ea fdcfbf06fb99e4bdaba66dd323a93d067a12d95e 9fbf96cc204ae79ed464470eea8e1de4e19496e1 f39a476b554bbf0ca101528733449614725bca62 2d7340f5cd1d2e459dd6e3ee8d94cb0564e2a07b 2234279a68e962799a5bbea204430c479647557f 9e2b0e89a325c3f011a390adcac4a7b6216ef41f a421b8008c973b5485722af28cafb97d8bd0b83c 3344254c2ad5c7655347d5e3b5f4377c89c09549 1f12a6be66a98331b96a33d66c090d59674aa79a 43b725b591a99f46f7c83a0f62a52e54a57f9dc8 b87512b0c0986a6ef86d6fce2767853098872c05 cf1a2210a83c82913eddc72a03b81457fc2c2a01 9bdbaa41030fa2c03c4f7ed68d467aa6b8ed4354 c68e1007cf22fd2cdde948100243e8212ad7d191 4a7785b47cba09682a1ce99855687d2459c77522 04b4d74d5227af7a31db04603e2d54aaa36ef885 918381e08d64206e4c7fb52a3883d11dd324639c fb5277e1d85d39c546b9787cc1d6abb6e76eeed0 e6a881591fcb9404c91287ad4bf31518b0a5b02c 8691ee48231353965fe3268eed3e9eec924c2934 ab986d0e75b7534ae41ac2e21bcc48fc3296b0eb 5ceb76e25fb3e754fc486450f81b632f6e66d54a 255a092a07c87e16165d1a9f08026f08d7f6ef83 f07c35b6d507e6d1d9f685e93745dfaded230f7a a992e4ad77354c300042381029c299715b2e480e 7cbb41490ec2fecb13fdd84a92e0f848b5917bc1 10e6a010c1334c008fb01e2f49d0fe6c9b5eb148 c5b21144efafc32846e4047f72c9fedadde7bcd7 dfa91d584cc7d19057cf2b109d17629931b81490 273d7707b1b76269a49af0558cae7b3d7374fb39 4f3d772a6a9e4c979617554e7281c8fc679e6a56 891b2fe9397efb4b3fe46a991bbbb9b430c5ebfc a7f584e3c014d8d68f5f0a3ee3745e09d3eff613 c56426d019c1ae413c2df0f96a33227723217c3e b85b3b80998019fd31b4ddf26603e45f0f68f9d7 d506bf4d861ec64f985be09f1f093562be03f42b 7976ace7bb7ad35d7d2f19160bb44e88a88eca41 4b4fef5b6bff7965f3a10006db4ca70905e8ebc0 f7bb81a733044d6fb01ac0109b4efdf42eba0fc2 8a0e771ab4acd3e04b8fe00815243a3dfc6534fb 9a60c68a55ebd23587fc3630a030bc63be1d0773 02a460cbfd8097733e33f8ef3409d0aab65bf9b2 59460ed23d71de55acc3def4cc2daac0a041796b cd5156d39837e53bae6821793099f2f17ba21a26 a2092c72954f61430225cca3e06d45dfc26ec942 53a8add2ff4c9247ab8976f6424120580d2d2378 d27b0a97dd680dfb6611f0ffe132a86f41884732 3998f3ca2d4f54e6e3144154bf0a128e50212958 fd952dad14d6dd0fac019809acb0bf2c5028cd63 1541e6465787faa8356c4370f35a8bba3c4bcbf3 8b10f49326072645f6635b3b75607370c47eb8f3 aaa96374a604299eb28cef583f8f011571b9aed6 afcd360b38e1027b0ee55dcac585d4e231c3c36e cf4c49a2be666879a7d8d7026927951d284898de 4545d5ca0a66b90f9d98c990f3aa20d5ec41412c 8705fc90f450bb7fc8244614d07e95755e5d9591 fa4db5995ef24b5be678635675fa99e6c4d69196 26a316b42febc8c726b0d118314afa5a92ca18bc 4c56496051eeea0a452a0b2948c3eae638e9012e 09d935f0e298309348e01184d1109e2d2877b408 191071a4d645ee15e035edb825ab2ca623e6f2e3 47b430749606d3a16b113f926d16e26885634d9c 36649bebc9a25879be08f89b01dcdb93a95e84d6 316519ca7352dd5bde202cd0d17893976a525335 c57573688b071d0fc2635fe5e9644fa1c1be4fd1 e3a4c12c289a0bb82d82ef68a4a366f934434cb2 6d950ff852bcdebc932dc4d726047180cfe2287b b53cc197729bd8bad1260eb0a67b3cfa80c5a833 fb489aba542df6bca0af242e89829afc834ba8c1 86e6cbd51dba1941d03c48d2a608083124cfba2d 693c4d979ffedc64f3440caad0c3a075fbb6b5c0 5e563dc84f3e123865b5e3c221b6140428c3cd9a 53b2dcd0c99e22df889338296b7e6ca8061b1dde 933e971a9f20b595f010f39d9527162405f19683 c99808f6ca62f110e0e40d345f5f8437acd0a546 79d614b08cf7a33f84680eee97880a8be21ffff6 2be7004c1c00a6ed58c0f32ea1bba2e3c3cec936 3c5ac9b57a72e1dd8e5977e7c839f5bc73c0e409 26ad47da03b8ab8843f8e026f6101ff25bd8e838 47118a430d9d194fbd43c4251787f4c52f9b7fe5 0a0f348b51ba5fee05f83d35f7ca12b889d2b7e3 3b4d742796df34aa6bc9dd796a3d33c45907b997 ec146e5d117768457d23094da657e765adcdf618 b2b541d7326ee719dd6593f8a50b51bf6268cc2a c2862285df35b9c700eb47fa992637b4b5bd8457,,FPP Ref components,## Change Description    Adds FPP component models used in the Ref topology.    ## Rationale    Continuing to develop the FPP model for core F Prime.    ## Next Steps    On to the Ref topology!  
nasa/fprime,807,2021-07-01T00:02:45Z,2021-07-02T17:09:32Z,True,2021-07-02T17:09:32Z,866fc638a1c4ad153bc6af0d4beb2ff4257f4492,76,40,7e41c8c5dae231a7efe1213180eb91359c6b917d 1775497297460ded7f61f988595e2c30fb69712e a1e2a4b7b22f38a4395fa077b80dab2945025b1d e7549664799a52c1581e7cbeaf86e727f46bdfa2 4f3d772a6a9e4c979617554e7281c8fc679e6a56 cd5156d39837e53bae6821793099f2f17ba21a26 a2092c72954f61430225cca3e06d45dfc26ec942 53a8add2ff4c9247ab8976f6424120580d2d2378 d27b0a97dd680dfb6611f0ffe132a86f41884732 3998f3ca2d4f54e6e3144154bf0a128e50212958 fd952dad14d6dd0fac019809acb0bf2c5028cd63 1541e6465787faa8356c4370f35a8bba3c4bcbf3 8b10f49326072645f6635b3b75607370c47eb8f3 aaa96374a604299eb28cef583f8f011571b9aed6 afcd360b38e1027b0ee55dcac585d4e231c3c36e cf4c49a2be666879a7d8d7026927951d284898de 4545d5ca0a66b90f9d98c990f3aa20d5ec41412c 8705fc90f450bb7fc8244614d07e95755e5d9591 fa4db5995ef24b5be678635675fa99e6c4d69196 26a316b42febc8c726b0d118314afa5a92ca18bc 4c56496051eeea0a452a0b2948c3eae638e9012e 09d935f0e298309348e01184d1109e2d2877b408 191071a4d645ee15e035edb825ab2ca623e6f2e3 47b430749606d3a16b113f926d16e26885634d9c 36649bebc9a25879be08f89b01dcdb93a95e84d6 316519ca7352dd5bde202cd0d17893976a525335 c57573688b071d0fc2635fe5e9644fa1c1be4fd1 e3a4c12c289a0bb82d82ef68a4a366f934434cb2 6d950ff852bcdebc932dc4d726047180cfe2287b b53cc197729bd8bad1260eb0a67b3cfa80c5a833 fb489aba542df6bca0af242e89829afc834ba8c1 86e6cbd51dba1941d03c48d2a608083124cfba2d 693c4d979ffedc64f3440caad0c3a075fbb6b5c0 5e563dc84f3e123865b5e3c221b6140428c3cd9a 26ad47da03b8ab8843f8e026f6101ff25bd8e838 47118a430d9d194fbd43c4251787f4c52f9b7fe5 0a0f348b51ba5fee05f83d35f7ca12b889d2b7e3 3b4d742796df34aa6bc9dd796a3d33c45907b997 b2b541d7326ee719dd6593f8a50b51bf6268cc2a c2862285df35b9c700eb47fa992637b4b5bd8457,,FPP Ref components,## Change Description    Adds FPP component models used in the Ref topology.    ## Rationale    Continuing to develop the FPP model for core F Prime.    ## Next Steps    On to the Ref topology!  
nasa/fprime,834,2021-07-15T21:55:17Z,2021-07-20T21:22:05Z,True,2021-07-20T21:22:05Z,6952ff8590b4b163b0421302178be08e5d43b72a,54,120,d9c70afc12a8c4860148ef22d2ba3c34ddae0f91 61fc9a80e8204986d08f170bfba644900566503d 4775dda8ad30d5a25d893242a02a6f6a385e602c 8c9cf785ad9619716c19f1bb5aec0c75ab2fd325 a3ddb4e91b98ae3e1aceb8388b7297f987979698 de923b7f9f0823ececb7a4357d91166491250fcf 0fec582e84ff22f4387abc47a74f6ba6bc35984c e2aaf0bace3fb9255c42e7763e7b0c09ec61f975 2191445a4a532d4bba15449de66840e0381382da 51c1843d7df785ff65b7015772bd7af5dfba12ea aa6385598660e3637fdc4ce7c9284e9ab464adbc d6c019927ff23ed69c191666f31dba54e1c52235 c0d545de55f2d8f37c0a6d24c5ad056d8de5fa4c 8a66b4fe9113d9bb0b70089870b88047a18090d7 4575240619c98e36ba7deebbdcbfbb194736ee37 e0f59608b9d6824bba6b48724ddd5f4f776f769d 27aff5c5b0466b9acbb345e050136578a2043123 76c336153bc13d3f272ca6c63fb7d242c801a4f8 608da97e62566608af59aa34eab93b4eeb005222 c1ef05ab808d6d20ec6e1ac36df48a83d3b22608 82d497c91aa8897b60bcf2fbc8a5217b77d0ef95 06b12c73d3f377fa6700a25db39e9cf475d5e3fb 950724a28381034976284d50330605d5939bde02 0630421e045a23a3cbfa50d1304a1f6ed00c1e87 22a5cb0363f102a928b55f9245e4614da5a728c0 1ed437eb680843cb5c38129855dcc55bde13c66b b538f56e6494bf2feacef22ceb1d1b7f6a6def9d ecfef6556cdbd42bdfe13a1cd1225bc0cb9601af 77c12a3ad17b5896a782340268fe37493359d7a4 ab0cc6346ba9d9fceee4af84d1b034428e2b46a4 2ec5422b68a96c34f8d1d41100fac3bf124feae4 e5bab08a1ca38aac992d2475bddfac8fcb2bacea 800238100dc5632eeb7107b8251c6d8070a51267 eaf420d93bc5113282b954da463a46e05db03643 dead6a42197f92cab11fa95171db02cca54e7ac2 78c98b083d45dba88e59bb855cdef6d281e259c2 95c41858183c2e44d108da8218dc6488ac01c258 3f12b53e483d5f0608ff06279e60cf7f48682854 214987d84d1a122be88fca696fe576c52f7f0afb b04be0d023f25a329e704c2bdc4bbf3d1594f31b 33b6b945666bac2e21625294279cb7f395fa5e34 a30f58d302a94fdac2495d4f8886074c4b3cb86a 9dae0169bd8aa8daf749d39215b5eb19209c7ad7 c28977b00453aaff08848c171680c674fea342dd d842bea8d5b4edacb755540b51500fda5cd0dd9c 8a042c908019e013a3921bbeac0d431167375890 21c585f0d58fd005942430e2bca27f24ab228826 98ece325cf1323cbf999ea600fb90a22f3263aab 51ba3dee07962d52308ade8657cba3e6e3fdf981 c91e182e6dc449b413d790df75d3e6eaff1bb031 f6a259226ebeec184b8fe2ab0f695704953e83c7 efa0885380429ca276eea30d776e9de6d494ce48 3d108045be6cd1c2976cf1e34a62028074cafa29 ece1ae7625309d4e828d2947d6a87903e0b64f95 fcd1a1825590aa6609db720ef3f3aa2bf8458634 9203737d829ad302fa3766952189ab88ea449646 2a7688f6208b94e72bd7d326f5177682e63c9b3a 5c5efebd3633eddf3d6340173c6354d0bcf1caed 8d1bc5ee94bd00d60c58f6173d060f7db5dd3f78 574e181d6c990525282d995d7fa5c0ca1cc68400 2297c5b0feda304470c110dcacf89a4a861e81a6 e84d05a9e43466fa910046abff2ba0d4b2b5b68f 00e68f65ae6ec797c0809712bee0308ac22c527b 42efd80a1aac2a6594983ff9a7fdafbaa58b4542 973a64b3a794c4b3853609ba39803ba19965b7e3 5f7dad14f6b5726cd373253936e02d8031c241cc 7f924730cea53d0fdd87074234e0886f74f66dbd 6e7ce2d3e31c2bf9eff6e10f1cbfe5692388d6c6 9f407cba042207efbd33c546fab41308d1662811 01d1b4eaaa86905979baa03db2fead5eec164b72 43a1ba594314d65c2d053e9a792cbe72912168ac 32d9b7a278552a894784ccf708c26de96788c1da 6b879c710f5eccd0736ce9aab757ee832ef94366 8a52b8bbf7f3a4407e6cd128371e4814dee736d6 0447b3830c5b4205b2f5dc332f8c166eaa0cbc7e 4e36d679a0ade154c9650dbff989d998092be0a8 f96f03cae2aa7b19a623d108c5e2f2a85632d98f ecf1559533e82b6c6b3ac52b89080fafd23c4053 d02784db5571c00d7f759994f59e63094622b4f9 77cddf1b47ba9b81e45f9d8fe6febf6388a759a6 9fa36e40555d23611254dc9d2376e566a49280e0 702f8b619f14f9bfc02a0221e38059551efb6acf 5de13ce1db0cc9910b766f0537c6d17eeded34a7 c9cda945955896b606a1ff49a85148187c1f38db 94400764e11e4bbb26f25feeda3326acc731b25c 25f25f0a000d12b5d5dabf7377813db47d1509bd aa95176e7a5f902b81a4d53bbc802d87f974bfff 8e11e8fac21b0274a7b9da553bd49115902dfc7a ece4313883488ca2f44bfbac37580b8a709543b7 7ace315f41ee604e80719ce05190cf3de49a179c 127a7c4b57be2634afeeac5729c772e6fd289a1c 32beb1a2de39d10265e5efddfbc66a4949cee221 1337f4b2e204283814de0788db19068aacb3aa1d 8ab1b8b12c159706bf2a9cb6f860474a7e682e51 ee50c803d8ec8702189c26dce8ceae7d233cc899 fb846d407698c681874fdde44790e37971e18cee 7de19e80440ae62350a42295a0a811d6b91b885b 17477dc6a0abafdfb02ec31dafbf70be53afae04 8b9e11062b8d2021857f75253412fee6ce5b7fb5 620d1057b814a4608d6d59a2bdcd52bb7ee44a23 fcdd141477bf6c9dd2cfd69136bb5213c2d9053b 1c47124853fc472667d25e5769cd71fa30bc6b0d e85e33e7e703545d0531e4af9b0a89c3ffa05ab6 1faca6b730e2d4fe9bfb1f246626c9931ef50447 d48c49ec4f77ff01a45c3d791b242aa3ea34bb90 8b0603fe42db803a73df41fbdd845b9b5a4574f8 74bab949eaddcbfef1841e2dbe49356b60cbf241 cf3e045c8d09a365243116f012b05e4bfc8dcb22 c899c376e04ac718a15e55be73e1d0e158b2c153 9a9b7ac146153ff2a9a336ec59df96d59dc19e42 f54eead13cb3f0392c1cd7c482c1bfce201c157d 2d39b55b4cce172ab75708e73bfb86c62c4dfc3b 0be9cd032f313e4d3ca712c2b71b01ee1f1f4915 9e964a8f7a6f5b31b5704e62c78435f044ea6e90 49e8382432a8d9a5849b9fe8375b4afc0b7d4e85 ed1639ccd993b98ca97454655a1c2b404aae5ac8 3278fffa75838633ee17a53bffde6df125f42ecc 7d3fe4beb339c6cfb27f9b5c5dee3f24412d3e2d 7e9af40181733eb2477f515a578815ecb490a0fa 1f539a0caab6054fb9b29e181fe584739de08ac5,,FPP Ref Topology Model,| | |  |:---|:---|  |**_Originating Project/Creator_**| F Prime |  |**_Affected Component_**| Various |  |**_Affected Architectures(s)_**| Ref Topology |  |**_Related Issue(s)_**| N/A |  |**_Has Unit Tests (y/n)_**| N/A |  |**_Builds Without Errors (y/n)_**| Y |  |**_Unit Tests Pass (y/n)_**| Y |  |**_Documentation Included (y/n)_**| N/A |    ---  ## Change Description    This PR adds an FPP model for the Ref topology. It uses fpp-to-xml to generate the RefTopologyAppAi.xml file. It uses fpp-to-cpp to replace the old handwritten Components.hpp and Topology.cpp.    Incidental changes to F Prime:    * Revise the topology XML autocoder to accept hexadecimal base IDs.  * Add a TlmGet port in Fw/Tlm  so that TlmChan.tlmRecv and Tlm.tlmGet have different types (Tlm and TlmGet  respectively). When these two ports have the same type  the FPP connection resolver can't tell which one is receiving telemetry. As of this PR  Fw::TlmGet is structurally identical to Fw::Tlm  but @rohandkn is working on improvements that will give these ports different types (TlmGet will use a mutable reference and Tlm will use a const reference).  * Add a command response input port to the Deframer  to support FPP port matching. The handler implementation is a no-op.    ## Rationale    Continuing to model core F Prime in FPP.    ## Testing/Review Recommendations    None.    ## Future Work    * Make the type names and header file names of the component implementations uniform. This will allow us to remove a lot of boilerplate in the Ref topology initializers.  * Factor the Ref topology into two topologies: (1) the generic command and data handling part and (2) the part specific to the Ref example.  
nasa/fprime,876,2021-07-30T01:34:27Z,2021-07-30T01:43:45Z,True,2021-07-30T01:43:45Z,da137602b14501f0b9485190fa3b39c2cb8b3863,1,1,2dc9435fb11fd39d943509fdc038570fbb7e0340,,fix spellcheck Add bootlin to dictionary,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Fix spellcheck action to prevent CI failure
nasa/fprime,768,2021-06-24T19:05:38Z,2021-07-30T03:55:21Z,True,2021-07-30T03:55:21Z,d3fa31c89ab76067cfc90924dd6735af59d52d36,34,1,0453492a7534979485e45a06f1a790d4afef451b,,Cleanup string classes,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Cleanup F' string classes    ## Rationale    - Moves common functionality to StringBase  preventing code duplication  - Doesn't call the getCapacity virtual function on a class while it's being constructed  preventing clang tidy warnings  - Passing size of other string to function when calling copyBuffer    ## Future Work    I wan't able to cleanup the LogStringArg and TlmString classes yet - they both have setMaxSerial methods that are theoretically used for per-telm channel and per-event string truncation  but we should have a discussion about if that functionality is necessary and if there's better ways to accomplish it.
nasa/fprime,824,2021-07-14T17:19:58Z,2021-07-20T00:39:35Z,False,none,bd551e6e78e9490712630a6f3741c5d60e1d8ed1,2,2,1c6cce2db0077a9e4be7de3022c875f29e880912 caff1583cfc6c78dfde785ddc8034324a17e86a4,,Add the Open in VS Code badge to improve UX ,| | |  |:---|:---|  |**_Originating Project/Creator_**| @ThibFrgsGmz  |  |**_Affected Component_**|  Development environment / UX |  |**_Affected Architectures(s)_**| N/A |  |**_Related Issue(s)_**| N/A |  |**_Has Unit Tests (y/n)_**| N/A |  |**_Builds Without Errors (y/n)_**|  N/A |  |**_Unit Tests Pass (y/n)_**| N/A |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description    This PR simply integrates the "Open in VS Code" badge into the README.md to further enhance the user experience with fprime.    [![Open in Visual Studio Code](https://open.vscode.dev/badges/open-in-vscode.svg)](https://open.vscode.dev/nasa/fprime)    ## Rationale    The June 2021 release of Visual Studio Code includes the addition of the "Open in VS Code" badge (https://code.visualstudio.com/updates/v1_58) to allow visitors to quickly open a GitHub repo in the VS Code open source editor.    With this badge  visitors can either use the recently launched VS Code Remote Repositories extension or clone into a Dev Container.    By clicking on the badge  visitors will be directed to a page on https://open.vscode.dev/nasa/fprime  where they can choose how to continue in VS Code. An example is available on the VS Code GitHub repo: https://github.com/microsoft/vscode.    ## Testing/Review Recommendations    Visitors will need to install the "Remote Repositories" extension of their Visual Studio Code (https://marketplace.visualstudio.com/items?itemName=GitHub.remotehub) which allows working with GitHub source code repositories quickly and safely in VS Code.    ## Future Work    None  
nasa/fprime,877,2021-07-30T01:56:58Z,2021-08-02T23:08:34Z,True,2021-08-02T23:08:34Z,50f4fcb232bd4e5863f1ccb2ceefde07826ee165,20,1,3f5a10d9b5f681aa7e950ce5887b390e20496ac3,,Clean up more unused autocoder test cases,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Autocoder |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Remove more autocoder tests cases that aren't in use and don't provide unique functionality  
nasa/fprime,885,2021-08-02T19:16:13Z,2021-08-02T23:27:12Z,True,2021-08-02T23:27:12Z,465587e0c28927857ddd0403962b8be0b4a0ced9,153,89,64265b2f8361979188db329a2e3244d650079561 3e9de5f2fb1da5e4cf766ea20392bafefa7ea945 7fa2bbbe9d4a54fdff64ff806db5cb54139c03bc 3b16b49c4643efef3d4b90b0ba099c51af0e134a a38da2d5917104499b80b109860317f5707d7f26 7893fe8f20f6b5bf4223dbf5e2a994ae5f04c27a fa5c69cd2af9d2e213a5977e54be459edcb2d39b 80117c241d319fe5ac940c89141c27ba2fe20462 cb9378517ce0776cffc2aefa2c4ca9931f16390f 38e64b3ea2864b54b93111461857787db3f02781 b0e20e95c1f9ac97d7e6cc57aa0a2d8dd3a59dae 2513167696efd55a35f308d8e673864a0efe262f b6d5608a10be960a0d2918db1dd46369c52833ba beec355a1ff8ad122259b09f8916cb5e453951c3 292a2df7c30966a5c892a3c7c6e984a8098c3aba 763360c922f6a22a6b9c9d08fbd66a00b4d24479 657bb6138adffac267905b1cae4f89716ddb8bd4 e40bc9d754dafdfaed2916f846789868cdb5587f 7e26628ff51f4ddc49600c815862c79639f18b89 e35cb0db4a0f1850597332b5c2920c53010aaab8 f38bda5fd56226b3bfd2afa2185c0fcfc2be541f bfde7702634c933e3d4f17c49d0ad9cc0b43384f 807a477600423cf402acc696692c3e384414aee6 cfbb9ef47f70a829a8835d2c5d224974d3e6150b 83543f73e17710c8a18248960fe66a0c029e994a 64a76e99b5da02edf02b23979682465d86b21195 1e245642bda45fbfe8d676ec8e3ab638262619db a4619ea57d3d4deacbec9a4213742ecda38c492b 69f7727b128e5548417e8f6cc070d0439a3a9ebb cd8d6a9c8fa8487a39994e6dd168c25161143b95 fd46d7e0645de10c4669e85c41be5b17520f507f b99a73633ac09732864b15c218b35a9ad4658a58 7b14a77299e845b4bde77c78ae2ccb8dc0888bda bee7d86801dfd9d3b6e961e5063e6bd32831ef45 0429137eb986583b1e4baae2c8bf051d3fd6e171 7f05fb4b88c1b76bac861973203f5f26eb0125fb 947ebaefde128bc1d01d6f62a7300b55c47693f7 797f7aeccf64a666d8836d6eac6ebcc5adfd972c b4009b7a30c44ced505284e32d96c8ef6dc1195f 8f5da2a21600a81374a4e4a4697afa8b53bbd50f 0a9fa58af0e34963dd8dbdaf373925874529b5d8 34702dbdaa9eb66690500d91064e481f1345cb5a bc94d06f08e6896e9f2f456b4e5b42abd751f7e6 a59be9873786e708b54d40c79829561910395fbe d2c092d4c82c8d64fa62f1f50576678d7f36b997 b70c2c6933a31e57de6bef884c5fddd4138b6fdd 4709eec4a52a59737c7568c0534be4f642fcf83e 11fe226f7403e3abef96d3f211727c3e3cbabd94 9b9c2995334e27c7dc5b7f2f243e3f7eebaa2209 ff1002aebc62ab0c9015998857c6920ebc4b5283 5167dc29300ed113e42440bd0fe7e9ca399f0dcf 9d6164d4e1321c26a97b8743d82eafb05a9458fe b082264d308625e1cb443eb6d7b5bdd222955404 419c743116f033b575c74261f58f5743779bb038 2d83434439e0cc3b6beab49b2612d043386b9872 41377f3f59af81e14d4233c0875856d7987a3ccc 7da27e2603852a0938dc0ff2bb3e9a4e0a902e12 5570f366ce01173b1a092b5c6a1fae9fb3472581 e37dedb0dadbde01e38fc949eca46997a410caf1 81088b0e72c0a51ba9fc1a09ae135b0f6c065586 dd01a4859e3b60298343c7a435002c0f80265484 84bd25466c35b677e9ecc12044ee92e7daa73c8c 8f59a064d407217c6d3fdc7f72a3c0753cd98a4c 2df0565915c393a3a018da8574bcb413281a81eb 6fb9830ac4befbc719c8ee95e8c92188d0f60a46 5dcbb5c322fa6f26e3d97826289d9aa47e2043ea 21e84bbd61df606d75a1de2a06ede9909f41f197 e2898cdffdd3314e4454af576911301b3008a6f5 4e6d41310cf3a3357a6fad1744b3a6ebc2e15468 927d2f0a21ecf648e36db8a4d846605a2b86d9e3 cfb8447164a4c33aee58020c0b6469bc0460d0aa 5cdfcebd5092de9cfc9cf2995d5e0a44edce37cb 2a9678567b0b9dec2683d60cba4b1abebcf5004d a56ca7cd92ed749998fac6ca59c9325b868058f6 75f5d92c45cd2dba93ed2da2ab254aa3d6efbd35 faf66b8ddcd93cc47d53b868c1c907139b355d2c 46e71784484f773682bd32c2d25e482d5c4ff5bb 79cf2c3d08d4b5e84110489b79357340ad629ad3 5344afc8f44219e4e67fd1f19acf97f1a323e999 600994b658b4fc071306237ea3d2db3fa1e0e4c5 d589f0a25c59ea9a800d851ea84c2f5df02fb529 48dec2b72386e8063f08e06285fde31eb0e0d87d 764194a97519970dd0da35c450d2bc1666a374c9 b47358f9dfdf99d96979f010c11be0bc76d966d9 da137602b14501f0b9485190fa3b39c2cb8b3863 d3fa31c89ab76067cfc90924dd6735af59d52d36 c875ab3b175e8df2220024586a2f41735f44829a b01403f80a85bc7b339adc03d4241dcd35ecdc07 2991bc7ade9c49fe6d97c4260b45062c5db07049,,Merge devel into release v3 0 0,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Merge changed from devel branch back into the release/3.0 branch.  Resolves ~20 merge conflicts.  
nasa/fprime,662,2021-06-01T22:09:14Z,2021-08-03T00:45:55Z,False,none,dfd39022ab1dce393a82276d736e048dd675cc02,3,1,e516d64da710b662d86c3156341a62851a657062,,Remove unused LogAssert,  | | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Logger  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    It has been superseded by the default assert handler  which logs to logMsg as well.    ## Rationale    This file was triggering compilation errors when compiling with -Wextra using gcc.  
nasa/fprime,673,2021-06-03T22:11:05Z,2021-08-03T00:48:54Z,False,none,796829002694289b15a32b33358bbaf3aeb6ec39,2,4,81e9f84dec398b8bb5bcd7e2a3a497c7b004bf8b 1d45f4361d56f240b4733ac3158aebc53c7b5507 bd6bf4ccdbc93605702f5e919637222f0832dc54 180a174a7ff153cef3befe3d25acc701113d6056,,Fprime extras install instructions added,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,205,2020-08-08T21:17:33Z,2021-08-03T00:35:15Z,False,none,5aa5be4ce6465fcb3266a8092e7830381a5af57f,9,1,73f5070c1c1d2c03f7ff1dbb1e9e467d451be7a7,,SocketCAN Driver,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| Aug 8  2020 |  |**_Submitter_**| sommercharles |  |**_Originating Project/Creator_**| sommercharles |  |**_Base Branch_**| devel |  |**_Short Description_**| SocketCAN driver implementation |  |**_Affected Component_**| n/a |  |**_Affected Architectures(s)_**| n/a |  |**_Related Issue(s)_**| #200  |  |**_Has Unit Tests (y/n)_**| y |  |**_Build Checked (y/n)_**| y |  |**_Unit Tests Run (y/n)_**| y |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description  Adds a Linux SocketCAN driver to the suite of already available drivers.  Based on the Socket IP driver by mstarch.    ## Rationale  Projects needing socketCAN implementation can use this.    ## Testing Recommendations  See this branch for test: https://github.com/sommercharles/fprime/tree/socketcan_driver_tester/Ref/CanTester    ## Future Work  Add documentation and/or wrapper functions for send and receive if necessary
nasa/fprime,880,2021-08-01T03:45:58Z,2021-08-03T17:06:52Z,True,2021-08-03T17:06:52Z,915196bda8b47445e876cc450eba07e71da53905,2,2,ad348280948c776dbd46379707bf23206bba01ef a2744296b7306f65fa0f39f979557b6e125bdaa1,,Bugfix docs Architecture related guide materials,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| n |  |**_Affected Architectures(s)_**| n |  |**_Related Issue(s)_**| n |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    The relationship between "SomeComponentBase" and "SomePorts" is Composition-relationship here.    The "diamond block" should be closely placed to "SomeComponentBase" but not "SomePorts".    As an example  the specific component base class "SendBuffComponentBase"  which is autogenrated based on   fprime-root-path/Ref/SendBuffApp/SendBuffComponentAi.xml.    The class "SendBuffComponentBase" pseudo-code:    class **SendBuffComponentBase** : public QueuedComponentBase{  // decalare some ports here  //! Input port SchedIn  Svc::InputSchedPort **m_SchedIn_InputPort**[NUM_SCHEDIN_INPUT_PORTS];    //... and so on  }    ## Rationale    document enhancement    ## Testing/Review Recommendations    no related    ## Future Work    no related  
nasa/fprime,883,2021-08-02T04:53:54Z,2021-08-03T20:36:27Z,True,2021-08-03T20:36:27Z,ba57967c5afa79dde4195fb90e098cc46bc4178b,2,1,ef7da7477d9e7ddcc808f6c0c92bd10a4c8e1616,,Fix 873 allow nullptr as an input with buffer constructor with an a ,| | |  |:---|:---|    |**_Affected Component_**|  |  Fw::Buffer  |**_Related Issue(s)_**|  |  #873   |**_Has Unit Tests (y/n)_**|  |  y  |**_Builds Without Errors (y/n)_**|  |  y  |**_Unit Tests Pass (y/n)_**|  |  y  |**_Documentation Included (y/n)_**|  |  n    ---  ## Description    Allows data=nullptr and size=0 in Fw::Buffer    ## Rationale  #873    ## Testing/Review Recommendations  I added an assert inside the Buffer ut      
nasa/fprime,889,2021-08-03T17:58:00Z,2021-08-04T20:35:28Z,True,2021-08-04T20:35:28Z,8fddb8c85ff5d8596345e54e9c0cf98ec9684004,7,148,366f93f175fe2c4729da099fecc12688f840385b 3ae468279b6e69b22ac48b3775b773359a1da21d bc050af5bd05d1d28461554ee9fd80a9ea9dc691 9a6e941024f32d85b0d132aa9f76734f89ed2ef8 4078ce35146d2ce6f8976140317d077b5e74f1a7 b0b380663ce7c4448cdf49df391b0dd0c5034154 45e99a1a0e866b8d5f61700e17877e62dce0b10a bce2af6aaffbef8e4acc13ff8719db24e71dc6e5 0811db7d03bb408f11b1f3039c493147fcccfcbb f70bb74e7186712b25fc8c2a5174bd8f61b2f98b 77836548145eab2b1027f1fc1898b36b0924c75a 2b47ec730556b14fc4c5985c9474f654b761b026 e80529ce7a47ea30bf6a5e09a5fc4af6bb211126 0a3d2e6de6cfd471874fab4d5b46b3e421d834b4 21036045c7c0ba6006c575116766b08cf4bba70d e03fd06c588c7298380b3ac8d49d73f66044609e 15374d07c641c9d617107b28000e8f9dfe596210 6ce47d2fed67187d06a67cb02131ad91efc89346 4c2c09f0d0f781c955f2d807ba3c0b326cf7c95b 91f3ab3d67b9fbbc85c0d805f3e9c347eeaa6f3f 61191bfe102d3f77216832dc068794f94ca0d470 c819a78131a2d7c006be960d1a70d7ea63e1cd28 1096697ec4c98c65fee4268e629509357812a1a1 202100b2113ed5553a597a524ea6969c823c2089 276118466bd907adb2818c2f2a95d8cf639d41ee a22de723d5902d117cff787e1fa41c7150b41814 8e7e1ca60c8f542d87b7fc0c80f0f7bb3a456f0f d6b1a7de362ce9f7983feaf2ca364c23b239bb4a e54d12d19ff7e4c629a7ca49057199e3c9e36c52 9c9540655e98150c64b0aae0c5c6a8d549355f27 a8b0f27f45f535dbfd217fa602c083e7ad1c305a 91e4a84ecea21bf9d3e13c99c4070b96d1f61e1c 83eb47212f9bccdfed3e8b1d1cbcb5144059ceda 8b261b46c40b7c781cc9d88e6ac862c9662bf3bb 09f7fad84d7ed4eefc55c63a54fb5ae7ce0fcadc aae982f1e783352cb7035c6ac0b60cf2c9d44f19 e09f537c6db164d596a28b2e6a4c9fd0e91f818f 051604e376680690a8e04a31ac9cc461c788af10 d0ad5f12e3245e81b6938c0e083f70aafdb9700d 0e0be62e217fd64210ccb6c30871c19a9670d8cf cb7bfca856ec1aea4e532686143ba6968ffd0ec6 68cc7201f7e8d1378a6466ffcd5679febf27350a b5754377d2488a8be250c0bc423a94de8c98d82d 62102b8f7f53e92d780face7e9e7ed1e7babab85 ee6e8f2e4bea086cc5b39b0271d1c44702f88f5c 3ccff2c85c4fbb0a373342e7b66e4a58a63b70d8 9000af62d1e0bb2eb72c21482a29c9e49bb23f28 f75fafcb9f4dc5bc5c4b3158b8735ed3d418740e 0aa43bd631831037fd65983f11e60a9144244c6f 7ff80f1b34c95c9f804cb55f697d7e3daebd7946 3a5f6d0ed11ceb584fc318900fcf8aadc1a25eb9 6e5cc22c73d1dad7467eb1f52fcee8e742c7fa34 8582422835362f69a3c86406092ace68275cbde1 1b1dab2d9a5b54f0774894f179de3b44ccb309b6 0c412ed7fb8249aa376936e480054cccd1920a10 21fa03179515980a582a0138c0f6bae15a3204bb b6f824762dc4e07c65edf7b53b4652d815a00722 e28745298b80141ea79b817094dea3eff86a70c2 458e1f95bd1466a3f89f3ef49fa32d12195ab625 793bb9b4b145e4bcc83cc9a1b5fd8b09b1f80bf7 aca3f787c77289af9c1c736dd6ba94d27bdc6276 b38764eb3a26124d341ee6964aaee1a7a2707462 6dcdb5deaf42c570ca7a410757098c37be66e599 b31b67ac1a1b659601efc190f750db83ff72d600 93ab84836fed2d703f257ac6e40fd0a4d8ccebf9 b82555759888ad51aec8fc32cdfd24a238c394a4 cd1f0c8da6234cf4a2e7b77a29a92930f5edb82d 326bef622a86ea210674394d03e7ce57d67faf10 b80827fd56cdb5935fda7175e2e36654e8965766 50c0cc3b429736ac5d849907ae8e5d49d7bd82ac ebe155d5ce5cd3d418df02acc22843a87826c3cc d01f825b93768f70459f2b306c8719a8baf92857 55f9c794dc2dbd71c4fbeb76c715e5f64cb0a6a4 32d4de7e9cc1a6c7ce33e96427747c4a4bfe3440 bf86771a1cd56f6004bde84671d5725b2bc78c41 7414f1b1b5b2284b14b7856dc569bd9a23f6bff5 442807d39dc82286f07646102d07869028f0e60c 322d7ced9cc612e6f672df5c0842b84d97f63c53 f0a2f16eeda07c845a55aec10d48da76cb07f5d1 8bf818a044cb35bd668e41b0c29c84d5e5236f8c 5ad6d7733103f74dfb829e252cb161c431333ea1 87da67301effb23e4d6a0db50398f1866dec6d3e 0b04c18a7497bf7f9cebe958afd7dfd621e49094 03e3871303e408ddcff8cef8aed443167ec79aee cf8aa08d7ba97fbbb6abd85bcbf235b9092556bf 8e92aef86243fed4dc3f2f06398cf7633446f3de 74f1eb07690e1849314d920671f2d9f41d0406a8 941037f702bfff6342287370e3b1bd5d0be89b42 e92e71454aa0a0a70a37db53fa25d4d1878b33c2 a79165be39344969f80f319d1f6599da9588ec64 b308206ddf900a2aa6c2926c4e0dde907471c3a5 7ade858abb98e0a25f918e66d152b69f50efd947 a31c10bd8e156375a2646eee828ad50703aabd01 158ecab7d3c3acfbff8bd91977de97fe6bfc1d55 aa26e28e859e1dfcb9409eafe9e54d83297ff52f 90e2b47ddb42328289ead073eb1c43555906d291 b7edab7bb4c89a1e357f226dbb8e9b23f70bd7b6 2310583403973ca290e8be7b4eb191d75d318b27 1418ec5ac409e884dd1d145979ff0d55a0cb4bcc b3e09c4a673358694af55dce7b3c7e52559340f9 713760c229b0bb7521bc9bb97c78a7b168becae2 6e0db346d0a0dd81f886e4760f17083b266cc061 47b5f8eba12a3d53cb4935b2b5a0ebbf2124bc42 d233deb37e65de7a018cd7835057b4ca3f041697 69341c17aac31735e25d3c13d711c52b26398943 68fd4b4f15f03671cf0336df6fa17db89feadce6 b4dda9736e964d737ce4fe04a9829ab352006b24 54699ce7fc8f8006ada36e1573b4adfa9d7c2942 d35cc3e49b9154d44c5777ef4f944402a37d8ed2 a2b0a526affe29c716d8d0701fcc142972151eb5 f4b2ced4d14e4002e2155efb95230c88558cfae7 5f90df07b4d1059bf24efa9688c08d34a1dd581e 8f017597d4255a4b5926d205adbeeb2ea97ed0cf fa70aba18d50cec6c7856bf6ff9fe1970ea03b51 e2fff8aa9d9b117dbf4c844e28c2b1acac26454c dcdc06661259d3565d39d40752ee2f65cfda6fbb 089c7e4e36793320c9a798cc7b1f8ba2d572e735 6c0a66383f7e57bc5d11be32074aab6db7f0101d 28a82fb791c38b441754e17edc928968266fec3e 6b2fd3a44be297da12e092af726d993c847c8951 55ac01e661df75c9d3aa3d510a3a03e27fae161a 01c0013afcb939c665adb403c0e4d9c213404e19 028d2832bf1c66fb97092c2d7ca48454ddf40070 e73448d57b937d77204408e6d022b33a8a263cad ceb92e62da98d66b553aec6e489ca8e289f64f88 d5d05207b087eb16d86dea90a412e269a7058c26 afa2cff14c6f9219fa37d73d495f976149d3a3ff 24388e5edbe507f6646526f309266a980f2296e0 366a18379de96dc529da99feddc97bed5aa33969 775d2c6fb0cd56d801d048c2484f4baa54d11bb1 57850a267a8fa2c50d1d5036b0eab28a0621f84a dc3dcdc96809f5397927e48a78e3bb8f32d5a1a0 0ff49c2dbe6a50f9c14aa6c3130a33e4b88f902f 8f2597d3cda4414f0410d6a94d959e90656bfef3 b9e5cdc5f498e185e0c0caef9b9dc2af62d9e266 59fc07815505a570713d7ccb9b96d41df75d2bff 0cb532151abef1283a62a67ab30083782014ef25 d65e78fb400dd7adc0b82b35725efd09131c479f 13f5d84d4fa4df009897890a51c824342af77195 a924751f4b69d906fbdd80bfa7f0026ad9918db6 2ed720eb8b98775112b91e886bb614307e4723b7 ba5e2937c700e65da3f6bb0c7ccd8181b4de94ab f77cbf5b6f6838a806bc92bab7b65f17ba230903 f9a9c46995246c98a1d5e86f9c8ca6863207230e fd6f830079dd779adec72f85bf1b1a37ee75758b dee313c23a295b9a96056ca55c5ad1026cab40d3 6b079aa8691b58fcda4c15e4bf54c0d157d6c77d 0f56bbe3b87e1b9d00b4654517f746d0abfc11c0,,Bypass master bash file in CI,| | |  |:---|:---|  |**_Originating Project/Creator_**| Ricardo Pena |  |**_Affected Component_**| CI |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Bypassed master.bash file to run test files directly.    ## Rationale    master.bash file was only used to run the correct test  which can be done directly from the job(s) arguments.    ## Future Work    Remove argument warning during the workflow  
nasa/fprime,891,2021-08-03T21:52:49Z,2021-08-04T20:31:45Z,True,2021-08-04T20:31:45Z,d66427df7427c5e813fe369c579ba999a7e643ad,5,9,ad348280948c776dbd46379707bf23206bba01ef ef7da7477d9e7ddcc808f6c0c92bd10a4c8e1616 a2744296b7306f65fa0f39f979557b6e125bdaa1 915196bda8b47445e876cc450eba07e71da53905 f2c791a07bf7992909ffcc970a3122a0e8753e0b e21b2d1803ebbc0c244115f6b93944963d456531 d06ab330aed8869d691b1faaa5cb9e08d93fc6e3 ba57967c5afa79dde4195fb90e098cc46bc4178b 017ce1020bd3e986453bfbb92b62dd12e0a5a771,,Sync release 3 0 with devel branch,Pull latest string bug fixes into 3.0 branch  
nasa/fprime,895,2021-08-05T16:37:02Z,2021-08-05T19:34:03Z,True,2021-08-05T19:34:03Z,e7ba8aa23efa6fc34ed2dde5b4e7d60a41e00783,1,152,366f93f175fe2c4729da099fecc12688f840385b 3ae468279b6e69b22ac48b3775b773359a1da21d bc050af5bd05d1d28461554ee9fd80a9ea9dc691 9a6e941024f32d85b0d132aa9f76734f89ed2ef8 4078ce35146d2ce6f8976140317d077b5e74f1a7 b0b380663ce7c4448cdf49df391b0dd0c5034154 45e99a1a0e866b8d5f61700e17877e62dce0b10a bce2af6aaffbef8e4acc13ff8719db24e71dc6e5 0811db7d03bb408f11b1f3039c493147fcccfcbb f70bb74e7186712b25fc8c2a5174bd8f61b2f98b 77836548145eab2b1027f1fc1898b36b0924c75a 2b47ec730556b14fc4c5985c9474f654b761b026 e80529ce7a47ea30bf6a5e09a5fc4af6bb211126 0a3d2e6de6cfd471874fab4d5b46b3e421d834b4 21036045c7c0ba6006c575116766b08cf4bba70d e03fd06c588c7298380b3ac8d49d73f66044609e 15374d07c641c9d617107b28000e8f9dfe596210 6ce47d2fed67187d06a67cb02131ad91efc89346 4c2c09f0d0f781c955f2d807ba3c0b326cf7c95b 91f3ab3d67b9fbbc85c0d805f3e9c347eeaa6f3f 61191bfe102d3f77216832dc068794f94ca0d470 c819a78131a2d7c006be960d1a70d7ea63e1cd28 1096697ec4c98c65fee4268e629509357812a1a1 202100b2113ed5553a597a524ea6969c823c2089 276118466bd907adb2818c2f2a95d8cf639d41ee a22de723d5902d117cff787e1fa41c7150b41814 8e7e1ca60c8f542d87b7fc0c80f0f7bb3a456f0f d6b1a7de362ce9f7983feaf2ca364c23b239bb4a e54d12d19ff7e4c629a7ca49057199e3c9e36c52 9c9540655e98150c64b0aae0c5c6a8d549355f27 a8b0f27f45f535dbfd217fa602c083e7ad1c305a 91e4a84ecea21bf9d3e13c99c4070b96d1f61e1c 83eb47212f9bccdfed3e8b1d1cbcb5144059ceda 8b261b46c40b7c781cc9d88e6ac862c9662bf3bb 09f7fad84d7ed4eefc55c63a54fb5ae7ce0fcadc aae982f1e783352cb7035c6ac0b60cf2c9d44f19 e09f537c6db164d596a28b2e6a4c9fd0e91f818f 051604e376680690a8e04a31ac9cc461c788af10 d0ad5f12e3245e81b6938c0e083f70aafdb9700d 0e0be62e217fd64210ccb6c30871c19a9670d8cf cb7bfca856ec1aea4e532686143ba6968ffd0ec6 68cc7201f7e8d1378a6466ffcd5679febf27350a b5754377d2488a8be250c0bc423a94de8c98d82d 62102b8f7f53e92d780face7e9e7ed1e7babab85 ee6e8f2e4bea086cc5b39b0271d1c44702f88f5c 3ccff2c85c4fbb0a373342e7b66e4a58a63b70d8 9000af62d1e0bb2eb72c21482a29c9e49bb23f28 f75fafcb9f4dc5bc5c4b3158b8735ed3d418740e 0aa43bd631831037fd65983f11e60a9144244c6f 7ff80f1b34c95c9f804cb55f697d7e3daebd7946 3a5f6d0ed11ceb584fc318900fcf8aadc1a25eb9 6e5cc22c73d1dad7467eb1f52fcee8e742c7fa34 8582422835362f69a3c86406092ace68275cbde1 1b1dab2d9a5b54f0774894f179de3b44ccb309b6 0c412ed7fb8249aa376936e480054cccd1920a10 21fa03179515980a582a0138c0f6bae15a3204bb b6f824762dc4e07c65edf7b53b4652d815a00722 e28745298b80141ea79b817094dea3eff86a70c2 458e1f95bd1466a3f89f3ef49fa32d12195ab625 793bb9b4b145e4bcc83cc9a1b5fd8b09b1f80bf7 aca3f787c77289af9c1c736dd6ba94d27bdc6276 b38764eb3a26124d341ee6964aaee1a7a2707462 6dcdb5deaf42c570ca7a410757098c37be66e599 b31b67ac1a1b659601efc190f750db83ff72d600 93ab84836fed2d703f257ac6e40fd0a4d8ccebf9 b82555759888ad51aec8fc32cdfd24a238c394a4 cd1f0c8da6234cf4a2e7b77a29a92930f5edb82d 326bef622a86ea210674394d03e7ce57d67faf10 b80827fd56cdb5935fda7175e2e36654e8965766 50c0cc3b429736ac5d849907ae8e5d49d7bd82ac ebe155d5ce5cd3d418df02acc22843a87826c3cc d01f825b93768f70459f2b306c8719a8baf92857 55f9c794dc2dbd71c4fbeb76c715e5f64cb0a6a4 32d4de7e9cc1a6c7ce33e96427747c4a4bfe3440 bf86771a1cd56f6004bde84671d5725b2bc78c41 7414f1b1b5b2284b14b7856dc569bd9a23f6bff5 442807d39dc82286f07646102d07869028f0e60c 322d7ced9cc612e6f672df5c0842b84d97f63c53 f0a2f16eeda07c845a55aec10d48da76cb07f5d1 8bf818a044cb35bd668e41b0c29c84d5e5236f8c 5ad6d7733103f74dfb829e252cb161c431333ea1 87da67301effb23e4d6a0db50398f1866dec6d3e 0b04c18a7497bf7f9cebe958afd7dfd621e49094 03e3871303e408ddcff8cef8aed443167ec79aee cf8aa08d7ba97fbbb6abd85bcbf235b9092556bf 8e92aef86243fed4dc3f2f06398cf7633446f3de 74f1eb07690e1849314d920671f2d9f41d0406a8 941037f702bfff6342287370e3b1bd5d0be89b42 e92e71454aa0a0a70a37db53fa25d4d1878b33c2 a79165be39344969f80f319d1f6599da9588ec64 b308206ddf900a2aa6c2926c4e0dde907471c3a5 7ade858abb98e0a25f918e66d152b69f50efd947 a31c10bd8e156375a2646eee828ad50703aabd01 158ecab7d3c3acfbff8bd91977de97fe6bfc1d55 aa26e28e859e1dfcb9409eafe9e54d83297ff52f 90e2b47ddb42328289ead073eb1c43555906d291 b7edab7bb4c89a1e357f226dbb8e9b23f70bd7b6 2310583403973ca290e8be7b4eb191d75d318b27 1418ec5ac409e884dd1d145979ff0d55a0cb4bcc b3e09c4a673358694af55dce7b3c7e52559340f9 713760c229b0bb7521bc9bb97c78a7b168becae2 6e0db346d0a0dd81f886e4760f17083b266cc061 47b5f8eba12a3d53cb4935b2b5a0ebbf2124bc42 d233deb37e65de7a018cd7835057b4ca3f041697 69341c17aac31735e25d3c13d711c52b26398943 68fd4b4f15f03671cf0336df6fa17db89feadce6 b4dda9736e964d737ce4fe04a9829ab352006b24 54699ce7fc8f8006ada36e1573b4adfa9d7c2942 d35cc3e49b9154d44c5777ef4f944402a37d8ed2 a2b0a526affe29c716d8d0701fcc142972151eb5 f4b2ced4d14e4002e2155efb95230c88558cfae7 5f90df07b4d1059bf24efa9688c08d34a1dd581e 8f017597d4255a4b5926d205adbeeb2ea97ed0cf fa70aba18d50cec6c7856bf6ff9fe1970ea03b51 e2fff8aa9d9b117dbf4c844e28c2b1acac26454c dcdc06661259d3565d39d40752ee2f65cfda6fbb 089c7e4e36793320c9a798cc7b1f8ba2d572e735 6c0a66383f7e57bc5d11be32074aab6db7f0101d 28a82fb791c38b441754e17edc928968266fec3e 6b2fd3a44be297da12e092af726d993c847c8951 55ac01e661df75c9d3aa3d510a3a03e27fae161a 01c0013afcb939c665adb403c0e4d9c213404e19 028d2832bf1c66fb97092c2d7ca48454ddf40070 e73448d57b937d77204408e6d022b33a8a263cad ceb92e62da98d66b553aec6e489ca8e289f64f88 d5d05207b087eb16d86dea90a412e269a7058c26 afa2cff14c6f9219fa37d73d495f976149d3a3ff 24388e5edbe507f6646526f309266a980f2296e0 366a18379de96dc529da99feddc97bed5aa33969 775d2c6fb0cd56d801d048c2484f4baa54d11bb1 57850a267a8fa2c50d1d5036b0eab28a0621f84a dc3dcdc96809f5397927e48a78e3bb8f32d5a1a0 0ff49c2dbe6a50f9c14aa6c3130a33e4b88f902f 8f2597d3cda4414f0410d6a94d959e90656bfef3 b9e5cdc5f498e185e0c0caef9b9dc2af62d9e266 59fc07815505a570713d7ccb9b96d41df75d2bff 0cb532151abef1283a62a67ab30083782014ef25 d65e78fb400dd7adc0b82b35725efd09131c479f 13f5d84d4fa4df009897890a51c824342af77195 a924751f4b69d906fbdd80bfa7f0026ad9918db6 2ed720eb8b98775112b91e886bb614307e4723b7 ba5e2937c700e65da3f6bb0c7ccd8181b4de94ab f77cbf5b6f6838a806bc92bab7b65f17ba230903 f9a9c46995246c98a1d5e86f9c8ca6863207230e fd6f830079dd779adec72f85bf1b1a37ee75758b dee313c23a295b9a96056ca55c5ad1026cab40d3 6b079aa8691b58fcda4c15e4bf54c0d157d6c77d 0f56bbe3b87e1b9d00b4654517f746d0abfc11c0 a0cb35edcd46c2e3256e5dd643d62ff6b049c6a6 1063e111692a5261d42ec87d4c578b79afb20db2 f4648e9a92f2fbbf3074d4b5b0419c81ce0360c7 a5e8892b9829b85ce67fb9a8798c2d03cbb89a4e,,Switched to direct use of Dockerhub fprime image,| | |  |:---|:---|  |**_Originating Project/Creator_**| Ricardo Pena |  |**_Affected Component_**| CI build test |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Using existing Dockerhub fprime image to simplify workflow and improve file extension capabilities.    ## Rationale    Optimize CI and file usage.    ## Future Work    Extend feature to Autodocs workflow.  
nasa/fprime,897,2021-08-05T23:55:59Z,2021-08-06T01:37:48Z,True,2021-08-06T01:37:48Z,963a1ece60c0832ef330de4822203c8872724112,1,1,1df67f1a1d9bf661d492510398e8605a056e285e,,Don t overwrite CXX flags when settings the default flags,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    This accidentally clobbering user provided C/CXX flags that were provided before options was imported - affects root level framework tests that set additional cflags.  
nasa/fprime,894,2021-08-05T01:17:08Z,2021-08-05T02:10:10Z,True,2021-08-05T02:10:09Z,53030642798ae03f7893c5c28e1e59e119c093d9,2,1,94632599e5ced26c6310f6a9688926b366449102,,lestarch reworking docker,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Reworking Dockerfile for installing `fprime-tools`
nasa/fprime,884,2021-08-02T16:00:59Z,2021-08-02T16:48:59Z,False,none,13170f2a601f9deed10b5bff8fa86bcdbcd6f511,1,1,c398ec2735fd0b77cb96c85f5a65087747b89178,,contibute nasa txt,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,886,2021-08-02T21:55:34Z,2021-08-04T20:35:07Z,True,2021-08-04T20:35:07Z,f287a7e91b5a6f2c9cd709e1c5abe90c41f252a8,35,27,f6736b71560c893e75f842476664b4906547498b 089c5111a3cffb7c3604eed65ae6d8e2fbfad4a8 593f0f0c6ebb95f830f49c35196a5398a7418a4c c8fa5c1810db908436e8dd81d5e7d2c67c8d9c54 255ba1b18d58819dc8e0869ca51f03a282d41253 de1637686681a38a723239578748402f0ac9771e bae26c1eb8fa341cd5b5b3bf3639e214b75714a1 244a3407b1cd1ba5ed0d05b844bcec1da2d744f5 736e8a2324d91021c1d11e13aab11b1de124fabd 9a6c8ea9d99c6cb02910d18a38a2258e16007ada cd615c68d4f83a86ab97405cc351ed96ffc8ddbb ded54723f77e4ac118d6fdd6785b94cce70f13b1 109cc0af1de6c02d3a8de855bc2f3d21dde46c17 e30ff43cd89a17f677d3c9309e897d6bc012e9f4 1899b542e6e701247b446e92067cfe5bc45c510d ee91027840b20c9ca147337eda017cb2e740a13b 2707de231f87c7df9da69766c9115dab945e73a3 4233930394d0ad456193b7f9f24cb19c72245c77 221e8695565a1e0c64dfdf17c7a8df97e5ce6b2c c79cd4af4836df35f64c8ba20e3d488504c63690 7cb2afb0a90306f266244b075cac8c54908f601b 0492ae23fc4d952aba85e0493111a6615d38ae43 77eaa6bf3d99893266cb21ba5e292c03e02e818c 8d74ea11cc2dc94b2f71266bf0a702c012f3ba24 6c87c334fdfeb35b60c87edffa68c08c6a6c6cb1 577feda5724ca38ccd59b35cf30070ddac6df697 1c09e5517981ed7956070d63b79f88197dd6d437,,Standardize component interfaces used in the Ref model,| | |  |:---|:---|  |**_Originating Project/Creator_**| F Prime Infrastructure |  |**_Affected Component_**| Various |  |**_Affected Architectures(s)_**| Ref |  |**_Related Issue(s)_**| N/A |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| N/A |    ---  ## Change Description    This PR standardizes the header file names  type names  and init functions of the components used in the Ref topology. The strategy is as follows:    * Where a component name and/or header file name is nonstandard  provide a "standardization header" with a standard name that defines the standard component name. The standardization header includes the primary header. The standard component name is a type alias for the primary component name. **Example:** Header file `Foo/BarComponentImpl.hpp` defines a component class type `BarImpl`. The standardization header `Foo/Bar.hpp` includes `Foo/BarComponentImpl.hpp` and defines `Bar` as a type alias for `BarImpl`.  * Where a component init function lacks an `instanceId` argument  add an optional `instanceId` argument with default value zero.    ## Rationale    These changes standardize the interfaces for the components used in the Ref topology. They enable more of the default FPP code generation to work  reducing the amount of manual C++ code in the Ref topology.    These changes provide an alternative to the existing component interfaces. They preserve backwards compatibility for code that depends on the existing interfaces.    ## Testing/Review Recommendations    None.    ## Future Work    Standardize the rest of the core F Prime components.    Fully rename the nonstandard header files and component class names. This change would break backwards compatibility for code that depends on these elements.
nasa/fprime,896,2021-08-05T23:52:01Z,2021-08-10T19:35:46Z,True,2021-08-10T19:35:46Z,b1afd222d1e5aa9af606e6c4673625ba4fbaf246,1,1,3bf537b3e7ea14d8bdff03025dde268ca30c9d04,,Don t generate zero size array for argumentless ports,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Autocoder |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    When ports have no arguments  their serialized size is zero. The autocoder was generating zero sized arrays for the backing serial buffer  which isn't valid ISO C++ and produced compilation errors when compiling with `-pedantic`.  
nasa/fprime,904,2021-08-10T17:57:05Z,2021-08-10T19:44:41Z,True,2021-08-10T19:44:41Z,6d9602fe74e098817674c48167905790d45899c1,1,1,48f4d70590d461cfb7ecd9bbf3fb62b734d50739,,Remove usage of GCC switch range extension,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  CmdSeqencer |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**|  y |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Using a switch with a range case statement is a GCC extension and causes errors when compiling in pedantic mode.
nasa/fprime,893,2021-08-04T21:36:38Z,2021-08-10T19:53:38Z,True,2021-08-10T19:53:38Z,4cd74518ada56c0b46bae7760afc6827f1098fa7,73,1,4e551a26cc2988d8976dac36b10a40fba50593aa,,Replace usage of 80 Char String with FixLengthString,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Replace 80 character string usage in the F' core framework with FixedLengthString  which allows for compile time adjustment of max string size. Unit tests still using 80 characters strings will be updated in a separate pull request  since unit tests probably should avoid using FixLengthString where possible to avoid potential compilation errors when users adjust the FixLengthString length.  
nasa/fprime,914,2021-08-12T16:16:11Z,2021-08-12T19:27:02Z,True,2021-08-12T19:27:02Z,3485228753c940a296c8722d12fe939bd0b10416,3,1,bbef2e0dacf84f74f589e8ce8c59cb8cb0867a80,,Fix autodocs github action,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Attempts to fix errors executing the autodocs workflow.  
nasa/fprime,910,2021-08-11T23:14:18Z,2021-08-12T19:29:50Z,True,2021-08-12T19:29:50Z,7b7757327ce4abe80f7fe4c1b81e9a34745487b5,30,1,87607fc2b111d9718c4589ce99aecfd381a801ee,,Remove test usage of 80 charater strings,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Remaining usages of 80 character string have been replaces with the default String class
nasa/fprime,917,2021-08-12T21:28:49Z,2021-08-12T22:14:33Z,True,2021-08-12T22:14:33Z,2706405916bfe431a3e71372ede4a06cd6cb89cb,8,1,37b09eb69c877d8f076860880522cb7092fcaf80,,Correct clang tidy detected warnings,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Corrects a variety of minor issues detected by clang-tidy and adds a default clang-tidy config.  
nasa/fprime,911,2021-08-12T00:17:21Z,2021-08-12T19:28:55Z,True,2021-08-12T19:28:55Z,eb1aee092f74834b227ad96600a59c46b6e127aa,1,1,a2bdb686463fb5f7d546fb44b4a88e2cacdaad45,,Cast pointers to void before printing with printf per C spec,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**| y  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    ISO C++ definition of printf only allows void * pointers for the `%p` specifier. The `-pendantic` flag requires explicitly casting most pointers to `void *`.
nasa/fprime,915,2021-08-12T16:31:07Z,2021-08-12T19:28:19Z,True,2021-08-12T19:28:19Z,43767bd9166e4de4aadd942b82ed543583d033c2,11,2,8b0d1c96ed2de2e299a2a991bddb3fd8b184b632 470c680f5a8ddd37e2adb33f72c8c66403a953b3,,Run cmake tests in CI,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Run the cmake test cases as a github actions parallel job.
nasa/fprime,927,2021-08-17T04:19:13Z,2021-08-18T22:42:01Z,True,2021-08-18T22:42:01Z,3302e84d97eb094265a7136924e4d4d9b1068875,2,1,eb23ea29f62274a7b547fb7f1ca8b293c26c9ff1,,fix typo spelling grammar,| | |  |:---|:---|  |**_Originating Project/Creator_**|  [slowy07](github.com/slowy07)|  |**_Affected Component_**| ``parseC.py``  ``MaxHeapTest.cpp``|  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| not include because just replace typo fixing |  |**_Builds Without Errors (y/n)_**| not include because just replace typo fixing |  |**_Unit Tests Pass (y/n)_**| not include because just replace typo fixing |  |**_Documentation Included (y/n)_**| **y** |    ---  ## Change Description  fixing typo and replace to correct words    ## Rationale  for more readable code comments
nasa/fprime,925,2021-08-16T22:43:55Z,2021-08-18T22:24:19Z,True,2021-08-18T22:24:19Z,f43a551fe2e79502497643990a9f87ee1668534d,50,1,00bb731fdd7e301a521af5ed70744599372d7829,,Standardize assignment operator signature,C++ assignment operators should not return const value to match behavior of primative types    | | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Standardize all C++ assignment operator signatures to: `class& operator=(const class& a)`    ## Rationale    C++ assignment operators should not return const value to match behavior of primitive types  See http://courses.cms.caltech.edu/cs11/material/cpp/donnie/cpp-ops.html for more details  
nasa/fprime,924,2021-08-16T21:32:37Z,2021-08-19T16:43:26Z,True,2021-08-19T16:43:26Z,13fe1814c17d74cc754acd3b7bebc7636c126b1b,1,1,cd87b6b8dd787837d9c922dcadf36272e034a902,,Switch CI to run in VM instead of docker container,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Instead of running CI steps inside of a docker container  run in the github provided 18.04 VM.    ## Rationale    CI was the primary user of the fprime docker container and releasing new docker containers was a maintenance burden.  Since we were testing in ubuntu 18.04 anyway the docker container wasn't providing value.    ## Future Work    This will enable the ability for us to more easily test against ubuntu 20.04 in the future without needing to release more docker containers.  
nasa/fprime,693,2021-06-09T17:12:14Z,2021-06-09T17:30:04Z,True,2021-06-09T17:30:04Z,0d717b0ec3c4c9c5a70de7d5f5bcfcdff48c35b3,1,1,b05dc37fb73e6a46460577b8b3ac3a9d744cf2c0,,lestarch adding revision warning to GPS tutorial,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    The GPS tutorial is quite out-of-date  but improvements are more substantial than should block 2.0.0.  Added warning and we can revise later given the "latest" documentation link.
nasa/fprime,931,2021-08-18T17:53:49Z,2021-08-19T22:41:56Z,True,2021-08-19T22:41:56Z,f4b601c186a20a105626e0c073ae6926a04fbb5e,9,1,ec5cbba05bf31fbcecc6b0fb071e86d423a78ad7,,Use ordinary char pointers for assert strings,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    As part of my C++ modernization work  I'm trying to replace all C-style typecasting with C++ casts.    The C++ treats chars  unsigned chars (U8)  and signed chars (I8) as three unique types.  The assert subsystem uses both U8* and I8* to hold assert strings. This quickly becomes awkward when trying to work with const strings and the string handling methods. All string inputs to the assert system must be cast from char pointers to signed or unsigned pointers  then cast back to char pointers when displaying the assert. Since I didn't see any benefit to handling assert strings as U8* or I8* type  rather than replace all these C-style casts with C++ style casts  I just changed the assert system to use char* instead.  
nasa/fprime,938,2021-08-19T21:52:58Z,2021-08-20T04:10:19Z,True,2021-08-20T04:10:19Z,6c542c789ef79d811cf6389eaa2ff0888ab8e98f,1,1,50c217ef3c44aea8375269e1b4e23b98d9d4761d,,Switch autodocs action to use VM instead of container,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Switch autodocs workflow to use VM instead of docker container. Hopefully this will fix the current job errors.
nasa/fprime,923,2021-08-16T17:51:18Z,2021-08-20T23:05:52Z,True,2021-08-20T23:05:52Z,9c4f2cc6c890e26dcabccdc98729a632a2c56551,100,2,0d63bbf05ce534f5a9693ca8e9567358a58ce885 9561e7590d3e6fd93e1a0a5b5729b2e70df7e113,,Backport 80char replacement,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Backport #893 and #910 from release/3.0 back to the devel branch.
nasa/fprime,935,2021-08-19T17:04:30Z,2021-08-20T23:01:28Z,True,2021-08-20T23:01:28Z,2df388ed7d5638b148d753a0069a7ce56400e084,1,3,e993b68f94a36b7df17e3daf6eaa3f51a84c33a0 774349e18c3cf184f5345b83b3235b400e9f0d61 6e0acde2ddcbf59f8fb11e857bf197abdd2838e6,,highlight section order and fix few typos,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| documentation |  |**_Affected Architectures(s)_**|none|  |**_Related Issue(s)_**|none|  |**_Has Unit Tests (y/n)_**||  |**_Builds Without Errors (y/n)_**||  |**_Unit Tests Pass (y/n)_**||  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Highlighted the sections of documentation and fixed few typos    ## Rationale    Seems more clear for newcomers.    ## Testing/Review Recommendations    ---    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,944,2021-08-20T18:08:57Z,2021-08-20T23:00:46Z,True,2021-08-20T23:00:46Z,93b604b27dfd2999f53a6af9b6d47fe8c4b2e157,1,1,1df2f5b88bfe2858b53157a38049feef1f27a44b,,autodocs check out entire history to avoid errors merging,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    The autodocs workflow is currently failing because it cannot merge devel and the release/branch. Github by default only checks out the latest commit  so there's no commit history to use for the merge. Instead  checkout everything to ensure the merge succeeds.   
nasa/fprime,936,2021-08-19T17:41:38Z,2021-08-20T22:59:31Z,True,2021-08-20T22:59:31Z,fcf436e348d8244ddf9af6206d05d5719751fc04,4,13,c2049850cb853ce83df7f34adefc87d36faec580 2018eaa11e763855647ffb04a602489a2138582c fe369d89c76340494f8f9dfe433447afe92fee84 6d565e5b6bff58626d724a7de19e8b16382c2802 7ddf7ce1f64e538d4e495302a9031eda482d6a18 07732cca858378dc9ab84ae49fb6a6813770dd19 750a3a5459c451e599ecd73ca41772eb1d440466 0d3b1196fe1cd2041201ea50f7388b0b0e853a2e c4c106aca7322ff1370213dffe5a52cdfa7b3089 daf230e6633beb392d5e1de22c8c7360466e2edc 6a5ea7d4181166be7c677305bf3e5fb871be2583 d58965ed7c3b6a16e7c1b0ef7f34cbd259295fc3 70f388e48b8e1ee7be79f761a03c4f8b20acdaf7,,Cookiecutter docs,| | |  |:---|:---|  |**_Originating Project/Creator_**| Aidan Wagner |  |**_Affected Component_**| User Guide |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Added documentation for fprime-util new command    ## Rationale    Explains use of fprime-util new command for users  
nasa/fprime,922,2021-08-16T14:42:21Z,2021-08-25T10:11:08Z,False,none,e9953c3a42b43373cbe0f46dd3024f5d635e8726,1,1,87e0ca1ee7024e4e5f065a5c1ded3675e50eb479,,fixed bug 909 removed duplicate component imports,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,958,2021-08-25T01:57:33Z,2021-08-25T15:37:27Z,True,2021-08-25T15:37:27Z,8636356a44008f98ee46fa571a07bbe586912473,1,1,3d31e93f92cc5d0cec5232f0ee528afe16f8e2aa,,Removed repeated imports,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,949,2021-08-21T17:20:19Z,2021-08-25T15:42:30Z,True,2021-08-25T15:42:30Z,e92fa06cc74a7d6bfd7e8f680f0551e80f2c5fa0,1,1,31af828d2b6ed9b4045637bfef32c3ccd7dccfda,,minor link fixes,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|documentation |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    minor link fixes    ## Rationale    looks more clear  ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,878,2021-07-30T20:09:21Z,2021-08-18T20:10:25Z,True,2021-08-18T20:10:25Z,da000c97cff30e2b6f87d8e63246ade950ad4703,23,23,1fcf1375155c7860dee32af982f2ed2c5272b84c 8f1829a09eb7ce5722071b537d390d63ca65bf4b f1f80632c28903dc557dba477cce82ba4734bc73 bf8f88e21f12887e59270412cd6aa1ac71b78ce3 5c8fd13f350cba7586d9b3b8edfb19022676edd0 46f79659d2239242b938312f6bf081946a1f9b1d 7c578c02cbb2b83b6359ecb1c1b949d76a93a44d 0018a1642e0388faa14181bd6b1462c71f2368a6 c82fba3d00f329a7ca693201ee97f3f5358e53b6 8478512d0b1bdbdb0e38b3688658724673e9e424 a403e875904e482e07128d665408cd45560187a4 58f415f2dde2ee4401bf2b348617782c46308649 b47ef5d4d5e742e343f5e6e8e6d51a1d5e0de74a 770c27fd91aebaff8fc4a8c043cfa2887d162db6 cfe5980db4719792b9771e71ff61c1802130e38c f4448fd5dba35412436190351b9a486647f6a1ab 6c5bfc0a06e216757988d9166d74f762f8f4eeb2 578106edcb68ff1d8383b4525679c49089a92c48 7df0f882240dc099013ee35e288edf62d3352979 9d728b4aad6f7908eaef3639b8b0982396234387 865517a83bc01bc7db6be0f5288c89a0a9d65654 5b683d6b272d626043a7d9b6cb65fd00d2f82517 3bf09f81c2ced8cc3462efbba4905154a0a871ea,,Import tlm packetizer,| | |  |:---|:---|  |**_Originating Project/Creator_**| @timcanham  |  |**_Affected Component_**| `Svc/TlmPacketizer` |  |**_Affected Architectures(s)_**| All |  |**_Related Issue(s)_**|   |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y  |    ---  ## Change Description    This PR contains the `Svc/TlmPacketizer` component and updates to the autocoder scripts to support generating packet C++ code. It is not the final delivery; there are some dependency issues to sort out  and the packetizer script isn't fully complete. This is meant to deliver the component and scripts to avoid diverging too much.    ## Rationale    This is a useful alternative to `Svc/TlmChan` if fixed packets make more sense.    ## Testing/Review Recommendations    The `Ref` application is tested to show it runs normally. You can exercise the `SET_LEVEL` command with a `0` argument and see the `LevelSet` evr and `SendLevel` channel.    ## Future Work    The dependency issues discovered during development need to be fixed  and the full end-to-end testing would need to be completed.  
nasa/fprime,882,2021-08-02T01:34:39Z,2021-08-12T19:14:33Z,True,2021-08-12T19:14:33Z,a214e6ea0a430e5cc93e7d4bd862a6d78f05fa15,93,12,1fcf1375155c7860dee32af982f2ed2c5272b84c 8f1829a09eb7ce5722071b537d390d63ca65bf4b f1f80632c28903dc557dba477cce82ba4734bc73 bf8f88e21f12887e59270412cd6aa1ac71b78ce3 a26a85fd92be198d6691e1a34a5771d99b9cb6a7 a6a5d86ecaa107f4003426212354aa0ca9188e17 fd1a1311ce48beb7e008bf33b40b94cd7d0629f1 14af21c800be8348566d83a877477b38e2c4797b c923ab5ad36f71cdca2bd324e0affdfab8c57fa4 a0c6a29d8104015e6515207d7cd3b6ae83b625be 1d3060a0faa1d9e11a0d8652db758dad48026686 73c0abd1420f606d1481a987eb360e0ed02500d9,,Update cmd sequencer heli,| | |  |:---|:---|  |**_Originating Project/Creator_**| Mars Helicopter/@timcanham |  |**_Affected Component_**| CmdSequencer  |  |**_Affected Architectures(s)_**| All  |  |**_Related Issue(s)_**| #696 |  |**_Has Unit Tests (y/n)_**| y  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    This change brings in improvements from Mars Helicopter that allows invoking a sequence and having the command return immediately and not wait for the sequence to complete.    ## Rationale    This allows flexibility in how the sequences are started. It allows multiple sequences to run in parallel if there are multiple sequence engines.    ## Testing/Review Recommendations    Review the updated command logic with the `CS_RUN` command with the `SEQ_BLOCK` and `SEQ_NO_BLOCK` argument options.    ## Future Work    None  
nasa/fprime,937,2021-08-19T19:55:07Z,2021-08-26T00:36:46Z,True,2021-08-26T00:36:46Z,dbef5e26f57ae54e795bec6891670d5826cd9270,3,3,64e0ea653847a2e14fad5a234f23614d69a846a3 a13740320260b33b865e90d1e9b406e53a00bb7c 5a354d762e802494b95c034a64a98469827571ef,,Fix enum vxworks macro conflict,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Svc::FileDownlink |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  n|  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description    Changed enum element's name and instantiation of struct.     ## Rationale    MACRO conflicts and compilation errors with older compilers.    ## Testing/Review Recommendations    Re-run unit tests.    ## Future Work    None.  
nasa/fprime,959,2021-08-25T03:14:53Z,2021-08-26T00:34:59Z,True,2021-08-26T00:34:59Z,001b4ce6f442beb1d827b338be80f57355f59b40,2,1,65f12a1ebafd36a4f9272157e4713aedb93cdc61,,remove unused extraspace and line,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    following markdown rules    ## Rationale    Blank lines serve no purpose and do not affect the rendering of content  Except in a code block.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,953,2021-08-24T15:38:26Z,2021-08-24T16:23:20Z,False,none,49f5fe47741408289ad72bf869d9d6e23d076f64,2,2,e7e0c636e274cb1cfc6449aee53e8ad763a0ae60 b2280f3eca053d27a550a75528856b6db966af87,,feat Add a Citation File,| | |  |:---|:---|  |**_Originating Project/Creator_**|@astroesteban |  |**_Affected Component_**| Repo Main Page |  |**_Affected Architectures(s)_**| None |  |**_Related Issue(s)_**| #946 |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Add a _CITATION.cff_ file to the repo easily citing this repository in APA or BibTeX format    ## Rationale    GitHub recently announced [support for citations](https://github.blog/2021-08-19-enhanced-support-citations-github/) using  `ruby-cff`. In order to add a citation for F' we just need to create a `CITATION.cff` file.    By adding this file we make it easier for users to cite F' thus bolstering the recognition of the project and boosting the reference count on sites like Google Scholar. This could have potential benefit when making a business case for F'  recognizes the work made by contributors  and making it easier for people to reference the project is just nice.    ## Testing/Review Recommendations    I added the authors listed [on this paper](https://digitalcommons.usu.edu/cgi/viewcontent.cgi?article=4140&context=smallsat). This section is up for debate. We could:    1. Add all the current contributors and keep updating this file as more contributors join the project.  2. Keep the current author list as is based on the paper.  3. Reduce the list of authors to the minimum of at least one.     ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,727,2021-06-16T03:50:13Z,2021-06-17T19:50:25Z,True,2021-06-17T19:50:25Z,2358d229200d8adb81427e4c6c40b6bce93658fa,388,114,fd0f27859790de038d026c78bcd06fec06d8da31 b7dc2915bc6de28b55871193bd430c32c1131542 2bb992476da1eac612221e6a49d60c215c7eb2eb 49fbb9bf18706a5b962c4e5ab5528a302e91427b 2e78177a83d35415980d2ddc3ec683ba505be50d 39239d5a76f4c162a95ffa8ad338b7b0333fbef6 31a0250414e2a7290978631192fef39aefc6ff50 2d1879cec26c9126ec1ed697edcdb6d70848e9e6 60fa8dd8d4d2c3bf38804176467851dbab6c8c14 775bc0a63f2a2cea28c0813658a13d6fa1e934c2 dd97b48311352343d96f9de2cb844831b84ef285 79528ce6576f63f2de8d3d9b05d236694f086da4 1c8f988421f9667ad7f663813bc7cf35cf0678fa e90200b90b096d8d0dd9250b34ea9d263e4336dc 62ad34058a89b782d2a33eb3c7b9741342686c67 70dc9da0df11dfeb57a4a388204f76618dade2ed 043e0d333478fec82273f5fbd0567e72cea83f5d a1db1bb8b3ec55356a0a028ff18a9bde2361840a 000efd7ffc1d6cfc7cce1823b5cc7b8a8801ae53 b8a5c804e4bd739d1d3319e7d3dcb4ce1e668375 ad5a99a09240ee24e341e2fc55b3bd6dcd99df8c c8c17cfeb4dad8a92751144ad8d1435feb210893 0422ebb12b1a04f466891738cea4a076ffc935a5 07ac7c41afc32565c43577cb0a9981ac45c5d9e4 c40929755952397a79519ae32f13dbf8e4f7eb4a 6fd91b55d98c651012fe0450faf1955e3e817c66 28a54e18a6752327b959852ba2a0a5b0923fc3cc 5e71fe7d64721472e32d9c5f25208dd28fde6f01 7463011bb1a9e6e1b7c8aa1b7aa6d2fb509f3960 f32868113171b6c28fe868030c28959ac386148d 8625cc5f28c44916a63df1783d500e63b41ec7f1 e347c41b2c0ef8bde7b7e158b7b468bcebef74d2 02d59a4cd83013203c0127136fbfb50da6631a80 f537d54772d24020b4643b12e2e06c95ca33090a ffae25240d97e087e0740bf7bab7a3753f02f073 bec541908477f19e7dc457f3d0c1676178248f69 f243cf7d725a28383c5558a74b9571143aafda8f 9a05921bd538cdad7eef1a578460c0287250bcab d095d79bf59f537a517aca2282b3a839dc53e4be 1868a417b111aded473ae1bbf764a4d19d6b0732 5ba50fbbdd6bea0eae2600588b626cf7d2b149ba 52375bf1a7894f1bc90c842953076cdb6feed0c0 4f48b04cefb56d672a1fa435649530ff09b618f4 d52a08cc0d445d0aee62dd32341970b571aa2e20 a31c12f1c0a9639da818d79da4f7ddd036c0b3d8 0290ca38dd0d54c621d57607a2eb9d4a49257b60 3ec13ec514bb31fb6eb200920bcaf8f28273412a 0fe9fde8a63740731d573733cd1fc77775a6de6c 81e30219ca91714c44df78c2943837383aeb300b aadce9411d8f52239f41a004ba4beeb9704c7219 9faba38ea90ef772872f92be8ab8664b84818871 45342b6bc84dd116f2b3381f2cff51af8fc42134 fb375811695d3b25460c79b7b9081c3642684edc ed5f8edcd27f2942681ae9eb217b3a3204cd8ad2 495e18b17dc6fa7135cd3ee96dd07e597793b8b9 843a2189ad1010bd24751c46c62309341e223c72 de1fadd73893d3a5cb78171e0f8e4e55e1ccdbcc 6a04e5a3baa8595b879208fb64d0def3474508e8 860b148f55853331decda0059a124ab6be370afe 2851c23fa4975b8f11e78566af494447bb1f15cd 5bf3938208a333011cf80635b9e3aea82d56d355 a757cf9be0e561e6354dacb31ceee185f1350cae d95438a9ead6c14e773d634e7d129b27014a719e f74afad6a4d144c9ad7b6c2422457630a47ce764 7f2f5e3cfb82867673b3cffd2205ba7e7db6068b f6d9114ba41bfa3a3f3beb803472941579b17087 c82cecbd6b078e64ffd086e0bf083ab8bb8fe538 a37914f9f71758ea1b1e884afae726c67aa82252 8e85a0c9f7035257a0f021c25211d85075057b8e 881987e4124a70c4437bff25335d693a76e7a465 79620e9442f594d0844c0718305c5cf6aa9822c0 a0cf0ee1a7b5567d0e3329fc750923074fa8bf96 dd2bb40c785c9f0a018a890765fb630bab49c89e 9b2df311668b9f547fd330ec798213a2130d6538 9084bb1fd862fa7acd051f624eeefe466841003e 24299661cb973b91939d006e544c5613f5a880a3 fb36caab4fcc0d4709bd7c30d06f7b966d4a04ce 2e59aa562208f0afe7a830d02cc003f6dbaa7cf3 49424be3501444dfb4b1cda1d5eef922c22b10ea 14360b2fe359285ba848f1c847e67e4c940ddcd5 6a19018776f150c8ef7842be8ef8f230e5751e38 32aac9825b752eb7cc6dd59c9ae881d23af47ea7 d8938bd2602e2a9836783cce05dbb69c43524e78 b2dfa8773679a50643c1ab0a654c246243ae5824 702c1761a86d49381cf6f58535226c44d4ffda91 0c09213afb5aef5c17719c6efc7d175d4dd45666 d0212212bbb7a7af1c57f5df8b277937c1a6140c 7add1964924bd773e33045545d952ef51c9b616a 48d4138b19bd502cabfbafa4cb49df21c9b58cfb a35798a73a56fcb8b8567f7462124ae6c451099b d5af8360232a9904b2a2eb2a9f5181c8c03b273d 1077a20575be0aa6ce6080d88dd6dc00187a3713 242d9dea5c371d37ea5664d56bfca67711c2f4df 15c8284a234978910ce917328e74f6286ff2134a a927c5cceab76cfd128322334261d1e1a1572ce9 f707422dbf763e5fbb456243bae66b3269675867 4fd9627965386b89f326fca1a31281635317440f 987ab2b4fbe0d8897df4332c38a97570d68ea7f1 1d8d706268686bd6ba91f5595cb43ea3256f06de f3045700f4f85a1856160c066cafca1163ebbd27 f799e0b7bc53a171d6afe99921440408bf755b58 bc9fff89db5c74221427b586472809f1a8597fd9 849f8e4f6b76586fbe789e7943dfb7c7cc4ad0d5 f5104305854818500672a4b4a0cad9031d42cd8a 98f0b033c2f921e72a9aed536f08d71a9539f715 db42aa85bedf85baf4b776af955f7aa3fa128831 ad9d95d337645eba04997d720feb18bfabb5e700 90d7e33a5a654ef2b1129434c8853d21acdff9d6 5e1b48dc5861627a60040abd1ee42f33c0aba9a0 d1afeafc3e8acb110dc9ceeac6c616eac9256e11 08373edde611f1fc7c8f3c86a10dcdb7e0da969b f334320cf4594e216e950e71c2ff258e78bfde64 6ddf656a243a36243c7dd4bcb3186dac2fc80cda a98f95f87594b61bf189dbe5d550bb1f676a2d3f,,FPP Types and Ports,| | |  |:---|:---|  |**_Originating Project/Creator_**| F Prime Infrastructure |  |**_Affected Component_**| Various |  |**_Affected Architectures(s)_**| N/A  |  |**_Related Issue(s)_**| N/A |  |**_Has Unit Tests (y/n)_**| Y |  |**_Builds Without Errors (y/n)_**| Y  |  |**_Unit Tests Pass (y/n)_**| Y |  |**_Documentation Included (y/n)_**| N  |    ---  ## Change Description    This pull request starts the process of integrating F Prime Prime (FPP) into mainline F Prime. It contains the following elements:    1. A prototype build system for translating FPP models into XML files.  2. Changes to the Fw code and to the Python C++ autocoders to remove inline enums.  3. Scripts in Autocoders/Python/test for building and running the autocoder tests.  4. FPP models for ports and types.  5. FPP models for the following components:    ActiveRateGroup  ActiveTextLogger  ComSplitter  Deframer  FatalHandler  Framer  LinuxTimer  PolyDb  Time  TlmChan    The prototype build system is based on redo.  This will be replaced by CMake in a later PR.    To develop the FPP model and the XML files it generates  you need to install [redo](https://github.com/bocchino/redo) and the [FPP tools](https://github.com/fprime-community/fpp/tree/main/compiler). If you just want to build and run F Prime without developing the FPP model  then you don't need to install these tools.    No docs are included because the plan is to replace the prototype build system before releasing this for general usage.    ## Rationale    Starting FPP integration.    ## Testing/Review Recommendations    No specific recommendations.    ## Future Work    * Extend the FPP modeling and XML generation to cover the rest of the components and the Ref topology.  * Replace the redo build system with an integrated CMake solution.  * Remove the generated XML files from the repo and require FPP builds in order to compile. This is necessary for full integration of the model (e.g.  integrating configuration constants specified in the model).  
nasa/fprime,980,2021-08-30T17:01:38Z,2021-08-31T17:19:35Z,True,2021-08-31T17:19:35Z,d6cc93fadb88425a1957a10086a7e189fb6f1255,15,1,6dbddc4dd00e2fb87518a8111d48945d25193292,,Fw Convert C style casts to C style casts,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Fw |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Breaking changes in #955 into smaller chuncks. This PR is just the modifications to the Fw directory.    Switch fprime from using a mix of C/C++ style casts to C++ style casts only. Add compiler warning to core framework project to error on use of C style casts. Note  using a c-style cast to cast return value to void and signal that the return value is ignored is still permitted.        ## Rationale    C++ style static  const  and reinterpret casts are safer than C style casts by forcing developers to be explicit about how they intend to typecast a value. This brings fprime inline with the C++ best practice of avoiding C style casts.
nasa/fprime,986,2021-08-31T13:34:46Z,2021-08-31T18:10:35Z,True,2021-08-31T18:10:35Z,dc82e7874ac5e31c110d3cacd24cd0cdb91b753d,1,1,82b75069e6594b48e29fee1c1d3627f586e57031,,fix wrong comments,| | |  |:---|:---|  |**_Originating Project/Creator_**| @ugo94490 |  |**_Affected Component_**| ``RpiSchedContexts.hpp`` |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| N/A |  |**_Builds Without Errors (y/n)_**| N/A |  |**_Unit Tests Pass (y/n)_**| N/A |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    Fixing comments that seems to be reversed.  
nasa/fprime,981,2021-08-30T21:51:01Z,2021-08-31T18:40:40Z,True,2021-08-31T18:40:40Z,5cb1e2ea4b55427d777bec44fa11b7b1da428259,1,1,dabce3d35e017b3504e25665398cb8cf0a79bcea,,LinuxSerialDriver Check for errors when setting interface speed,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| LinuxSerialDriver |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Check for errors when setting serial device speeds. Flagged by clang-tidy as a dead store.
nasa/fprime,989,2021-08-31T16:14:01Z,2021-08-31T18:36:17Z,True,2021-08-31T18:36:17Z,f1f5d499c04591919139b46bc9b67ddde7923a6b,95,1,ba4b44b0d2610f4cf33ad00efa18d6ad3d50de0f,,Remove deprecated C style headers,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Use clang-tidy to automatically replace deprecated C-style headers with their C++ equivalents. 
nasa/fprime,990,2021-08-31T16:16:07Z,2021-08-31T18:36:26Z,True,2021-08-31T18:36:26Z,da3bd77a01d28f7e851d88b5f6d7576b13c5075d,59,1,e68a81766cf2ae5ce4a39f4e059419dc71446620,,Autocoder Remove deprecated C style headers,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Use clang-tidy to automatically replace deprecated C-style headers with their C++ equivalents.  Template headers were manually corrected.  
nasa/fprime,943,2021-08-20T15:20:28Z,2021-08-31T18:43:17Z,True,2021-08-31T18:43:16Z,1c16e1e59e7d1d4237e82d3cad150ffd8e100969,1,2,d3c3af1640271f505ed50e50908df64994350025 bfbef108cddad3ac069ff1f565a5be2389c62077,,simplifying index md file,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|documentation|  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Simplified a file by:  - swapping tables for lists  - creating headline order  - editing urls  - reversing order of releases (current is on top)  - marking community forum as obsolete and linking discussions as current space for community conversations    ## Rationale    making it simple    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Probably will go through more documentation files  
nasa/fprime,955,2021-08-24T19:22:53Z,2021-08-31T18:43:56Z,False,none,f1a5a479f187351e5bc54aae8ad3d9990ed1078d,93,1,b6c9b886e512f3ff790571e3aedc98409f349a0a,,Convert C style casts to C style casts,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Switch fprime from using a mix of C/C++ style casts to C++ style casts only. Add compiler warning to core framework project to error on use of C style casts. Note  using a c-style cast to cast return value to void and signal that the return value is ignored is still permitted.    ## Rationale    C++ style static  const  and reinterpret casts are safer than C style casts by forcing developers to be explicit about how they intend to typecast a value. This brings fprime inline with the C++ best practice of avoiding C style casts.    
nasa/fprime,965,2021-08-26T00:17:38Z,2021-08-26T00:34:25Z,True,2021-08-26T00:34:25Z,6e090833828d26c9dc5d58644e096b607a3929d9,1,1,f4892bf0bccfceeb009b26f03b5551bf5182dd11,,lestarch removing lgcov flag to fix macOs unit tests,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Fixing OS UTs for --coverage
nasa/fprime,956,2021-08-24T21:20:34Z,2021-08-25T15:37:54Z,True,2021-08-25T15:37:54Z,2f6621f6090df56f067e58954de34275f2666166,2,6,22edeb69bee737583b6ccc9eab485527cb65b331 385a3ea6c1b1422d4e794d37e3fe8cc92fc52ef6 27d24f50d436a836b1f925f86571de753ae0db03 69f91e96cf6e74323191dd7341d7b2ee1e89f772 167747fbed0ab244bdc0dd6271f14e91dd22df5f aea59f1c8f8c821960e6b4ee3b1502edb882bd84,,lestarch compile options added correctly,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    The way compile options were being added forced a rebuild of UTs for every update to the CMake cache.  This adds compile options properly.
nasa/fprime,890,2021-08-03T20:06:50Z,2021-08-03T20:34:43Z,True,2021-08-03T20:34:43Z,d06ab330aed8869d691b1faaa5cb9e08d93fc6e3,1,2,f2c791a07bf7992909ffcc970a3122a0e8753e0b e21b2d1803ebbc0c244115f6b93944963d456531,,lestarch fixes an overzealous string copy assert,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    The destination must be large enough to hold the full copy without colliding with source...however; source is not required to  be that large and still not overlap (constant string on stack have this property).  This fixes the resulting bug.
nasa/fprime,823,2021-07-14T15:50:21Z,2021-07-14T19:44:24Z,True,2021-07-14T19:44:24Z,5cdfcebd5092de9cfc9cf2995d5e0a44edce37cb,1,1,9bbf86a9c32995fdcd027a113bb70637dcdea897,,Update tutorial support yml,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| Tutorial Support CI |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Tutorial Support shouldn't break a merge/PR to devel because we need the change to fix the tutorial.  However  it should fail on devel and PR to master such that we are warned of the failure and correct it before merging with master.  
nasa/fprime,771,2021-06-25T07:04:46Z,2021-06-25T16:26:51Z,True,2021-06-25T16:26:51Z,e93382913e502b6b6ebef5eaa8446b02a6e1f377,3,1,a893980515a51b1797e5f2e13bc77d20f43984ee,,lestarch fixing defaults for linux drivers default build ,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infra |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    The linux drivers were intended to default to operational  but didn't.  This makes the linux drivers (on linux) not be stubbed.  
nasa/fprime,320,2020-12-21T22:53:31Z,2021-01-09T15:40:11Z,False,none,d4f878825a02adcb9f3979d39ab098b40af4c7eb,100,13,31e9c1b2eb717b7c0bed64c3be710d70115ccef6 6310c50bf18c0753b3eb45873f2ce5af384ebeef c507c4ab5fa3367999ee1251186d70fe4922a3ed 694ed1effc859f2ef1e59651ef558a4789381da1 1ec45150484041964d047578e5664d5bf4098254 91b3ddb533ff6916efae0d70e7d1ebf1e4b9ec63 f925dcbad497e8f6621c352d75d1ca0cd5415783 9ca1089c769a95b692df7044cd610b8674adee25 12f3700ac6ae37b580e715af5cca84cdfe7165f3 ae564e08992293b52b8e0841d16bcf1f53eee6dc bf5d6e5ca1a0835540a8e2a7e0575fedd8d881c1 2d62980c4cc2217a8cd7ebf765fc0c8774b2d4d4 26f7600da45689da8f9d57f03e3d9456a657846e,,GenericHub and GenericRepeater Components,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| Svc::GenericHub and Svc::GenericRepeater  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**|y |  |**_Documentation Included (y/n)_**|  y|    ---  ## Change Description    This adds 2 components  a Svc::GenericHub and Svcx::GenericRepeater.    ## Rationale    These are easily sharable common components.    ## Testing/Review Recommendations    Reviewers should ignore the Tcp rework  as that is captured in: #316.  This was required to be built on-top of that rework.    ## Future Work    None.  
nasa/fprime,408,2021-02-22T18:24:12Z,2021-02-23T16:48:15Z,True,2021-02-23T16:48:15Z,b62a4dbd4eb5421d0cc4d7047be3f81e94fbd62d,1,4,e27f6c47d3a02813ab65e08af6313fc6a63d6880 314205820eed21ff6afb48eb4022cab07742ddc9 c30c61a6cb0f63d70d29c04ac31a60d53147947a 535c144375a53899341747137dfed25b92060739,,Master,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,354,2021-02-10T00:52:47Z,2021-03-08T16:13:59Z,False,none,879d198857db93d635c66f30e3065145137cdcb6,44,15,8c3ca83db918ad6b571fe9ba42a20df5b1c3ef90 a24b0a010dd075d9a47f524847258c7c76a1ca6d 5abebb4ef8ec588da6ace8852a3ff0ca3b0dc08c fbb1a38da19c276d700c94b4e44cbf849d154d04 6eb78d66780f470eb0f7aae023bbeb31892a1446 16fc390dda111b1ae23c569bc52c6e2afa69e243 05557c237eb59fc05ce0d194d1393a1cd827941c 573a293e628347efd40c55a6e3e2413957c149dc e3bfc4e3dbca1766c2cc89fd8da4136350c367ad fd6124e437f638cbcfc19f9d680a6eacaf62f107 df2089cc598cedf12cdd4261d43dfaeadb8f2658 b4249a4cb2d623b542c717c80bcdac17f17aa13b d3726de5faab13bd9923fa7e3a25c6ba83a243a0 468c7ae870c223b546fdc5eca09dce3682d4368a f5894ef2e89cfb3a047758befe1e2b7eaa745c32,,lestarch refactored IPv4 drivers,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| Drv  |  |**_Affected Architectures(s)_**| N/A |  |**_Related Issue(s)_**|   |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**|y  |    ---  ## Change Description    Refactors  SocketIpDriver into 3 specific drivers TcpClient  TcpServer  and Udp.    ## Rationale    More reusability.    ## Testing/Review Recommendations    ## Future Work    Need to fix re-connection code.
nasa/fprime,691,2021-06-09T15:56:20Z,2021-06-09T17:11:09Z,True,2021-06-09T17:11:09Z,d2b9c78486d594e0b2f198aea7de8fa6754daead,1,3,a23a1e4fa07df114be3b9c665b9abdb4e1bacb37 0cf6919e2fafd26adde8fe2215e557766bec831f 90cd77278c33047218accdfa82268f1ad116609f,,lestarch annotating the contributors document,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infra |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    The CONTRIBUTORS.md document is not kept-up-to-date  and will be removed in favor of Github contributor lists....once we have a way to capture the contributors who aren't registered on public github.
nasa/fprime,675,2021-06-04T04:03:46Z,2021-06-09T15:56:48Z,True,2021-06-09T15:56:48Z,2bcdc856b87c8681d7b13c7200b739760b4937dc,1,5,cb4d6fc29c359d8131c95e0d6a9cb56004e57542 8d78f0b1db6d93b12763cc735d0bf6d0fc7debf0 db0c93d7f6bb2c09689ad4a868d0b24b9fd1d0cf ece770321618e6ec46a5df0e81898cdfd8c7a124 d73bf6a5ed195c5d0c8a27f0152b001a7db63f29,,lestarch release notes for 2 0,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    2.0 is neigh....
nasa/fprime,994,2021-08-31T18:44:58Z,2021-08-31T18:56:48Z,True,2021-08-31T18:56:47Z,b4aee662125499581b1782425420847d9bee9ddf,6,4,12afb996d63a5a5c8e5715d0ee7d967200b8c449 b68d94ac785cd313c32b45b983bbe045ad7740dc aab67d3dc9e34bbc9cd3f1be2cd120d545f25796 5486ed648b79e08504d75b57ed0128addfb29509,,Revise syntax for FPP init specifiers,* Conform syntax to this change in FPP: https://github.com/fprime-community/fpp/issues/90.  * FPP tool update is required.  * [Incidental] Remove a few temporary XML files that were accidentally checked in a while ago. During the redo build  these files are generated and then copied over to the place where they should be checked in.
nasa/fprime,993,2021-08-31T17:39:48Z,2021-08-31T17:55:37Z,True,2021-08-31T17:55:37Z,3cc2d77b2be9177fdc9906653beace0b24bc862d,5,1,e92be24dcfeda7bbe17d16531a343ca3ab904fe2,,Minor fixes,* Remove extra line in FPP source file  * Regenerate FPP locs  * Regenerate XML from FPP  * Remove unused member variable in Tlm Packetizer
nasa/fprime,952,2021-08-23T18:43:46Z,2021-08-23T19:57:49Z,True,2021-08-23T19:57:49Z,a7e73ad7ffce94953c6bdafd6460c5c554996119,29,4,24515947193f8cd49c5a887caa741012c5973254 7d9d70391460c32bd65078d40252a3590ec74e6c fec1cc966e393266e76097c5c07139adfd672e74 b20aaf3e8c4b1fdb6060811a42909231bdd0724f,,FPP Codegen Updates,| | |  |:---|:---|  |**_Originating Project/Creator_**| F Prime Infrastructure |  |**_Affected Component_**| Various |  |**_Affected Architectures(s)_**| Ref |  |**_Related Issue(s)_**| N/A |  |**_Has Unit Tests (y/n)_**| Y  |  |**_Builds Without Errors (y/n)_**| Y |  |**_Unit Tests Pass (y/n)_**| Y |  |**_Documentation Included (y/n)_**| N/A |    ---  ## Change Description    This PR updates the FPP-generated XML to conform to the latest build of FPP. It adds the following to the generated XML files:    1. Default values for enums.  2. Default member values for serializables  3. Serialization types for enums.    ## Rationale    We recently added these features to F Prime XML for FPP compatibility and for general robustness. We then updated FPP to use the new XML features. This PR closes the loop  updating the generated XML to match.    ## Testing/Review Recommendations    @LeStarch Merging this PR will cause modified/deleted conflicts with your CMake branch. They should be easy to fix -- just reassert the deletions on your branch. This PR should bring the generated code on release/v3.0.0 in line with what CMake generates on your branch  using the latest FPP tools.    ## Future Work    I anticipate two more PRs with FPP-related changes to F Prime:    1. Separate array length from string size in serializable members.  2. Use const references to pass non-primitive port arguments.    These upcoming PRs will close out the summer work done by @rohandkn.  
nasa/fprime,907,2021-08-11T00:42:43Z,2021-08-11T00:53:18Z,True,2021-08-11T00:53:18Z,e45d3f99bb873ffe54d49124f069413fbcf32214,2,2,f8c6b966c668bd060d732ba869adbdeb9c167f60 a00f0777652ba7391f6d5e1ff31dd5e2292ae980,,Minor FPP fixes,* Regenerate Fw/locs.fpp  * Revise annotation in Fw/Types/Types.fpp
nasa/fprime,996,2021-08-31T21:25:54Z,2021-08-31T21:47:45Z,True,2021-08-31T21:47:45Z,618554610159c90d0dbb6aa4610b5434606119db,1,1,f755fb6ade9ee94cb35a7499f852c5de5d7b84a7,,LinuxSerialDriver Check for errors when setting interface speed,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Backport #981 from 3.0 to the development branch for testing.  
nasa/fprime,995,2021-08-31T21:05:05Z,2021-08-31T21:47:08Z,True,2021-08-31T21:47:08Z,79da6e0557318c3ca6db2606a2153709d0b80fe3,8,1,acfaa4ed18880b7b91ca9ff3cab8e20fd2f7bf19,,Remove redundant use of void,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Remove redundant usage of void (I.E. void for parameterless methods). Round 2  now backed by clang-tidy automation. Autocoder python changes were manual  all C++ code changes were autogenerated.
nasa/fprime,966,2021-08-26T00:37:02Z,2021-08-31T22:58:22Z,False,none,none,3,3,423f4b34165a5aca9900755b1ada7c352c937556 a00f4c7025eb0ba649ef991fa53b7fe80984b662 dbef5e26f57ae54e795bec6891670d5826cd9270,,V2 0 1 hotfix,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description  
nasa/fprime,997,2021-08-31T22:58:11Z,2021-09-01T16:51:31Z,True,2021-09-01T16:51:31Z,57d1e0c27eb61b26470d2bdbad649d23c66a0397,3,6,423f4b34165a5aca9900755b1ada7c352c937556 a00f4c7025eb0ba649ef991fa53b7fe80984b662 dbef5e26f57ae54e795bec6891670d5826cd9270 c72b2882c8beb2e1b03c75183ca627b0be171a4c d62207d018a78127bf36f0343be9bd0394bba876 73c53f8e112fb8f098ec51911acd22c22cc4b472,,Hotfix to devel,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,973,2021-08-27T00:19:34Z,2021-09-01T16:50:48Z,True,2021-09-01T16:50:48Z,563b4e8873fc73cd8934d58474bb9f99a10ccdbf,2,1,de1141ce90d9aa901b37f5ecbf58a2bae7306495,,Remove max and min integer constants in favor of std numeric_limits,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Replace numeric limit constants with std::numeric_limits  the recommended C++ technique for calculating a max/min value for an integer type.
nasa/fprime,991,2021-08-31T17:30:31Z,2021-09-01T17:25:07Z,True,2021-09-01T17:25:07Z,ee0200d4b0f663ddde297a738a9dab81e7644cd7,25,2,05f4557ca8c0a0e31d7ecf33fbdb2e8b1c1108be 1fd2bfcc038db8672d60918fe46eb870a8a39909,,Svc Convert C style casts to C style casts,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Breaking changes in #955 into smaller chunks. This PR is just the modifications to the Svc directory.    Switch fprime from using a mix of C/C++ style casts to C++ style casts only. Add compiler warning to core framework project to error on use of C style casts. Note  using a c-style cast to cast return value to void and signal that the return value is ignored is still permitted.      ## Rationale    C++ style static  const  and reinterpret casts are safer than C style casts by forcing developers to be explicit about how they intend to typecast a value. This brings fprime inline with the C++ best practice of avoiding C style casts.
nasa/fprime,912,2021-08-12T03:24:34Z,2021-09-01T18:23:00Z,True,2021-09-01T18:23:00Z,2bc9d80759d3575be528e01a21605e021849cf3e,183,30,4e7bd5a9dcb1b578df2200d47cac183a0f6efe17 db03544bfc0efacdbaafdfd93fe5ca41479080ee 21c28d3fb8f08ff2eb05afffd9930d3424a407f4 ef28ed5be6a2786b01d5698d82da34da65a4da8c 342cbece53c8880809137a3225e2898d6da17865 7eb156da51bbb70a350cb274c109455172c84740 744024e145fb902655bdbf94b9e582a4ca6f52ff 3b8769ab8994016bfce7bd3eaed00ade51aeb19c cf29d12956790c1b9f1a3565601511784f8b17c7 f8201408cffbe883dd3c7969f92d51485a11476d 61d8ef506b4688800c9160611cf4a9113d04fbaf 8c725b07ce3cb0d8ba1f3ede188bdb3f04f28f81 e1c086636fbaec43f8ba4d3defa181e5f27acd29 8b83ef9eff262bbbad8794b6abbba516898d0e10 a7cb690a987ea49f36c0f051fee80415687a1fca 6989241075d1faa50ac3e6771376a861991d2e45 7192e67c2cbba6fe265f37998ef4b5425e52ce59 4f494f0b92baf0f62c9853f6a3a8805800cac811 77b34b2b144a6dfd3dc25a6a595eaee10078d293 b9edc4d5654736eebfb8fc6bc05fd4e32687b91d bae4937213e6e79dbbd052723a41915745659e28 07a5ad50c8c62df6d5833fa8e9d11abddddcd99d 9ff14661657b16f9f8a1d669127657dd874d7c33 b101a23b7f950ddc07bd537c803d49118598614b 8ba0c95c182725bf5aaa1b470f6df11003dcdf01 7a1c6611753c014f7688c3d2d278734215dcfe5f 91b5ccd802cf94a06d832f08e484d92850e69e92 f6db8d563b65cbe77cc29e9d6aa959f90f6aa16d 822910afe57027b43b183c703ac9af0a0cac90e0 79a49924b62211506f408df2d464a0b4456f0f81,,lestarch integrate FPP and CMake,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Initial CMake + FPP refactor. CMake cleanup.  Autocoder subsystem drafted.    ## Rationale    FPP for the win.    ## Testing/Review Recommendations    Only the build works  other functions will come soon!      ## Future Work    impl  testimpl  dict  ...  ...
nasa/fprime,358,2021-02-11T17:27:16Z,2021-05-28T22:11:31Z,True,2021-05-28T22:11:30Z,d79bfde43965d89e0f71f79970ff819e1a385c49,4,1,01e8a7a949c30859941550e0a34e5ce3c9216b23,,lestarch adding in fprime util new,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| fprime-util |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| n  |  |**_Unit Tests Pass (y/n)_**| n  |  |**_Documentation Included (y/n)_**| y -- CLI |    ---  ## Change Description    Adds in a `fprime-util new` command to create new components.  Thanks to Georgia Tech's cookiecutter.    ## Rationale    Simplifies the process of making components.    ## Testing/Review Recommendations      ## Future Work    1. Add in Port and Topology cookiecutters  2. Allow specifying project-supplied cookiecutter package  3. Clean-up versioning of cookiecutters       
nasa/fprime,591,2021-05-20T03:47:24Z,2021-05-28T19:57:36Z,True,2021-05-28T19:57:36Z,7b99c948f906d8c7ab64810bc5f645ca2a02177d,5,2,76626526c60961af9455a46a1e34b4444a97264a 48137016bae1ffbe7833f395aad95c70a69f3fd5,,lestarch updating fprime to include versioning information,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**|  n/a |    ---  ## Change Description    Add an fprime version to dictionaries.  Here is how it is found:    1. Use python setuptools_scm to get the version  2. If the above fails because the framework is not store in a repo  use the `version.hpp` header    `version.hpp` needs to be updated with each C++ release.
nasa/fprime,642,2021-05-27T19:52:24Z,2021-05-28T20:19:24Z,True,2021-05-28T20:19:24Z,23d83854ae5e5a895ccc8649dbe59c2bcccb06f8,12,1,3dffa0d39d510f7668157aba869b21a6597abfd8,,lestarch changes necessary to host on pypi,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| Python |  |**_Affected Architectures(s)_**| Python |  |**_Related Issue(s)_**| Closing #405  |  |**_Has Unit Tests (y/n)_**| n  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y  |  |**_Documentation Included (y/n)_**| Not yet (intended) |    ---  ## Change Description    Changes to setup.py and other python to work towards hosting in PYPI.    ## Rationale    See #405    ## Testing/Review Recommendations    ```  pip install fprime fprime-gds  ```      ## Future work    Correct documentation to use PYPI.  Split off Python as separate repos.  Update CI.  
nasa/fprime,563,2021-05-18T00:22:58Z,2021-05-18T21:42:17Z,True,2021-05-18T21:42:17Z,6120dd7fd1a8645a5a05820d0025bccd7038e9da,3,2,4a1c4cbeef6450a389bd3215797cf3715a2a73d7 8e3071b1ea8fee467d5361f55d4de15eebc3d5ee,,mstarch fixing GenericHub UT to account for non stock sizes,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| GenericHub  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| n/a |    ---  ## Change Description    Fixed GH unit test.
nasa/fprime,554,2021-05-14T20:34:36Z,2021-05-15T00:42:25Z,True,2021-05-15T00:42:25Z,1bf69c3d92fb44a8d65402629479e0baf066b1fd,1,1,0c4c444aceebd5daaab2adbe60b0c647e1c949e7,,lestarch removing extra include from topology,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Removing extra include as requested.
nasa/fprime,540,2021-05-11T19:12:45Z,2021-05-14T20:27:45Z,True,2021-05-14T20:27:45Z,7a1c235b3852cd7dd25b8cc7ea22c49824101116,11,7,51a1c19b968dc291b2a3211c168a9351dbd98673 e7ad87d3b094f8ba0cc89242bbba581f42a11e7b 52fb2330039f4d44b1b7b2fb5a4e9f5128de57d3 4c2ce7ade1c5316c8c9a4e84508b5d568740529e 73b785c092c0d02d36fe98ef153f40732fc55380 5bcf68bacd8505ad22a2ffd77441c6cd741af369 e20486aaeb0988d9293ec8372227e7ca52d41c72,,lestarch update Ref with new components,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| Ref/Gds |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y  |  |**_Documentation Included (y/n)_**| n/a |    ---  ## Change Description    This updates Ref per #515 to use the latest in IPv4 Drivers.  It included the update from #538 preset for the new components.  If you still use the old GroundInterface  set checksum to use "fixed".  See below.    ## Rationale    We needed to adopt the new ground components in our Ref app.      ## Testing/Review Recommendations    Tested against Gds and a file downlink of 10MB.  Works without issue.    ## Future Work    1. Decide if we need both `StaticMemory` and `BufferManager` as examples or if we want to simplify by using just BufferManager.  2. Configuration for GDS (see #537) such that the checksum is not hardcoded.    Note: neither should block this PR.  
nasa/fprime,1004,2021-09-01T18:51:36Z,2021-09-01T20:46:44Z,True,2021-09-01T20:46:44Z,3df30d659c37187ccde79fb69a82c3446e38fa01,2,1,45dd5dc6d5c19ba7341379b5282c3609a6c37811,,lestarch allowing GTest to be disabled in UTs,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Allows users to disable GTest dependencies in UTs:    ```  set(UT_INCLUDE_GTEST OFF)  fprime_register_ut(...  ```    ## Rationale    GTest was always intended to be an optional addition to our unit tests.  It helps the test  but should not be required.  Thus we have the ability to turn it off.    ## Testing/Review Recommendations    None    ## Future Work    Ensure this feature is not lost in the move to `v3.0.0`
nasa/fprime,964,2021-08-25T23:42:01Z,2021-08-26T01:50:46Z,True,2021-08-26T01:50:45Z,052bbdb8c0d0b3934762823c2c9d7647d0289a6c,145,5,f8201408cffbe883dd3c7969f92d51485a11476d 21b11e44b4127ceaa68d80bcfa51938a9406e6ac 894b63eb278e981e5df9a9ec35a018bb3229e8ce 13249c8ca1365784def6b0df11fd8ae113f2d592 c8248ee59920626722b56ca9bd91f87d8512abf8,,lestarch merged latest nasa devel,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    devel -> v3.0.0
nasa/fprime,316,2020-12-15T01:12:14Z,2021-01-09T15:40:26Z,False,none,76ec2ef9b8e011e650cd51d22aee42fce92dcecb,75,6,31e9c1b2eb717b7c0bed64c3be710d70115ccef6 6310c50bf18c0753b3eb45873f2ce5af384ebeef c507c4ab5fa3367999ee1251186d70fe4922a3ed 694ed1effc859f2ef1e59651ef558a4789381da1 1ec45150484041964d047578e5664d5bf4098254 91b3ddb533ff6916efae0d70e7d1ebf1e4b9ec63,enhancement,Update ip driver,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| SocketIpDriver |  |**_Affected Architectures(s)_**| All |  |**_Related Issue(s)_**| N/A  |  |**_Has Unit Tests (y/n)_**| y  |  |**_Builds Without Errors (y/n)_**| y  |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y  |    ---  ## Change Description    This breaks the SocketIpDriver into 3 pieces: TcpClient  TcpServer  and Udp that all implement the new `ByteStreamDriver` model.  In this way users can select from the three IPv4 types available to run their ground connection  rather than depending on an hybrid tcp/udp socket.  These drivers are generic  such that they may be reused to support IPv4 Hub pattern bridges and other setups and are no longer specifically tied to ground.     It also refactors the `Ref` example to use two drivers  on to supply Tcp uplink and one for Udp downlink.  This was always the setup  but now this is evident at a system level  and not hidden in the details of a component.    ## Rationale    Customers have asked for Tcp drivers of various types. This was close  but not exactly  the same as SocketIpDriver. This puts forth some generic drivers for IPv4  remove the "magical" SocketIpDriver  and makes the split for Tcp uplink and Udp downlink clear in the Ref app (rather than hidden).    It also sets up a model for any driver to be used by the ground interface.  Those drivers should implement `ByteSteamDriver`'s model or at least the same ports.  Once done  they can be substituted in place of uplink  downlink  or both.    ## Testing/Review Recommendations    Unit tests for IPv4 now exist.  Tested Ref app and it functions as expected.  RPI build passes.    ## Future Work    I need to add documentation describing the ground driver interface  and the new components (SDDs).  Code review can begin  and I'll add documentation.
nasa/fprime,656,2021-05-28T22:35:25Z,2021-06-01T21:49:39Z,True,2021-06-01T21:49:39Z,d32dfa9ceedbc046db45b451c56de7f1f9196348,241,3,9738837e5588451f4e22775f142e684105349b3f e447d941565a1f6eb4ed4dd859ca1c154d9df758 744c8080b20aaa50314ba663de0410cdf31dcb4e,,Update remove python packages,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    We are moving python tools and python gds into their own projects such that they may iterate more quickly.  The packages are now hosted on PyPI so keeping the code together is unnecessary.
nasa/fprime,593,2021-05-20T16:05:34Z,2021-05-24T13:58:46Z,True,2021-05-24T13:58:46Z,939623b94d5da296540730e5075736a6dddd0d47,3,1,6471040034a0e66d412111078c397980e6d68356,,lestarch updating fprime gds to check dictionary framework_version,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| GDS |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y (error message w/ instructions) |    ---  ## Change Description    This adds version checking to the Gds.  This will error if a dictionary is out of the supported range preventing hidden errors from occurring.
nasa/fprime,703,2021-06-10T20:34:09Z,2021-06-10T20:51:38Z,True,2021-06-10T20:51:38Z,db086fd87eb27abe5cd93272960eca574e2a8da7,2,2,2c58d1c1af872800567d358c37414e3c968b81ca 7feacec262c706a935d8684f4afb572eab8f0a00,,lestarch last documentation touches for 2 0 0,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infra |  |**_Affected Component_**| README |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Two last documentation touches then here comes v2.0.0.    ## Rationale    Two more nits.
nasa/fprime,726,2021-06-16T02:45:08Z,2021-06-19T21:00:11Z,True,2021-06-19T21:00:11Z,b1c46445ddb4619422b66dc5213deba417cc28ed,12,3,d5acbf84aabbde0ebb7f89bb9341ed99925de878 5d4559fbbefaaed0724bb4de1277156cb6da97db f42cb0b1713d22049645dd3ce323d5c8f1cda68f,,Recover disabled uts,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infra |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Repairs disabled UTs. Fixes #710 
nasa/fprime,713,2021-06-15T01:29:58Z,2021-06-21T19:40:46Z,True,2021-06-21T19:40:46Z,3065968013f3806352a6397b7529724ef4e7147c,3,1,5ea2dab1bd9af53704007ae067b9a1edd9339895,,lestarch add in ability to override telemetry time,| | |  |:---|:---|  |**_Originating Project/Creator_**| OWLS |  |**_Affected Component_**| Autocoder Template (Channels) |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| n/a |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description    Some use cases for sending telemetry include overriding the "time" the telemetry was taken.  This may have to do with hardware  a previously stored read  or the need to correlate across sample.  This currently can only be done crudely by copying AC code into one's user code.  This breaks the telemetry call into two polymorphic calls: one maintains current behavior and delegates internally to the second  which uses supplied time not calculated time.    ## Future Work    Is there sufficient use cases enough to add this to Events?  
nasa/fprime,746,2021-06-21T20:52:32Z,2021-06-22T00:08:30Z,True,2021-06-22T00:08:30Z,919bbe87d3f5c17137af8680a5f12958f1fa597a,1,1,a2b21f6871cd97e38e4fa201dab09eecfc1253a6,,lestarch fixing health for UTs,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Fixes health UT for when a large number of components is configured.  
nasa/fprime,780,2021-06-26T02:27:21Z,2021-06-28T16:49:50Z,True,2021-06-28T16:49:50Z,2be7004c1c00a6ed58c0f32ea1bba2e3c3cec936,286,305,843a2189ad1010bd24751c46c62309341e223c72 de1fadd73893d3a5cb78171e0f8e4e55e1ccdbcc 6a04e5a3baa8595b879208fb64d0def3474508e8 860b148f55853331decda0059a124ab6be370afe 2851c23fa4975b8f11e78566af494447bb1f15cd 5bf3938208a333011cf80635b9e3aea82d56d355 a757cf9be0e561e6354dacb31ceee185f1350cae d95438a9ead6c14e773d634e7d129b27014a719e f74afad6a4d144c9ad7b6c2422457630a47ce764 7f2f5e3cfb82867673b3cffd2205ba7e7db6068b f6d9114ba41bfa3a3f3beb803472941579b17087 c82cecbd6b078e64ffd086e0bf083ab8bb8fe538 a37914f9f71758ea1b1e884afae726c67aa82252 8e85a0c9f7035257a0f021c25211d85075057b8e 881987e4124a70c4437bff25335d693a76e7a465 79620e9442f594d0844c0718305c5cf6aa9822c0 a0cf0ee1a7b5567d0e3329fc750923074fa8bf96 dd2bb40c785c9f0a018a890765fb630bab49c89e 9b2df311668b9f547fd330ec798213a2130d6538 9084bb1fd862fa7acd051f624eeefe466841003e 24299661cb973b91939d006e544c5613f5a880a3 fb36caab4fcc0d4709bd7c30d06f7b966d4a04ce 2e59aa562208f0afe7a830d02cc003f6dbaa7cf3 49424be3501444dfb4b1cda1d5eef922c22b10ea 14360b2fe359285ba848f1c847e67e4c940ddcd5 6a19018776f150c8ef7842be8ef8f230e5751e38 32aac9825b752eb7cc6dd59c9ae881d23af47ea7 d8938bd2602e2a9836783cce05dbb69c43524e78 b2dfa8773679a50643c1ab0a654c246243ae5824 702c1761a86d49381cf6f58535226c44d4ffda91 0c09213afb5aef5c17719c6efc7d175d4dd45666 d0212212bbb7a7af1c57f5df8b277937c1a6140c 7add1964924bd773e33045545d952ef51c9b616a 48d4138b19bd502cabfbafa4cb49df21c9b58cfb a35798a73a56fcb8b8567f7462124ae6c451099b d5af8360232a9904b2a2eb2a9f5181c8c03b273d 1077a20575be0aa6ce6080d88dd6dc00187a3713 242d9dea5c371d37ea5664d56bfca67711c2f4df 15c8284a234978910ce917328e74f6286ff2134a a927c5cceab76cfd128322334261d1e1a1572ce9 f707422dbf763e5fbb456243bae66b3269675867 4fd9627965386b89f326fca1a31281635317440f 987ab2b4fbe0d8897df4332c38a97570d68ea7f1 1d8d706268686bd6ba91f5595cb43ea3256f06de f3045700f4f85a1856160c066cafca1163ebbd27 f799e0b7bc53a171d6afe99921440408bf755b58 bc9fff89db5c74221427b586472809f1a8597fd9 4e2dffb80275006f17edcdc2ffb0d48419e0f9f6 2a8d9e25247cacb55ddc6e88d5d90209e5177447 5abeec3dd779cf2eaf50cd434984e941bcbff96b 6369758dcef84aad57c6dcf611b670f44c048403 3964810a3cb69ead2fb6d04047efb84c923f7462 eeab9901379df6ed83ab106ab695b0f8788127cc b2a255550b3dc145ef89948d9aff6435c3834823 2a17536f0ce1006ba659876f734e67474397c13c 854d1a81b5f191436df7022b53c6b09085f8be10 849f8e4f6b76586fbe789e7943dfb7c7cc4ad0d5 f5104305854818500672a4b4a0cad9031d42cd8a 98f0b033c2f921e72a9aed536f08d71a9539f715 db42aa85bedf85baf4b776af955f7aa3fa128831 ad9d95d337645eba04997d720feb18bfabb5e700 90d7e33a5a654ef2b1129434c8853d21acdff9d6 11a60bd408dcf9f5fdb06b3456b57d76a1b893a5 5e1b48dc5861627a60040abd1ee42f33c0aba9a0 ec1e75750d8bd55272df82410795001d7a8397e0 66217f4013be2dce7ea8e158b4d5a58b1f8a7caf 35c9b748c215c90386548529184f35d76a450f8a 97bc2125269aad5fa232a1bb47ada6749e549e9b df9200918c79cdc25b2b6de6876a1982c0252c7c 5be86ee65ccf5591677777651a609932155b54bd ebbdc145196e2c415709c0487e9587395228fe50 d2079543406948977fe2ce887245942b7619b19e bf85a3198400c1513f40d1591367b166ab0e4b19 9b85681244f79ee39d6a62cc829f6b2af2301c29 9fdeca7ecd05410b15fcf601d0a10fd226573ba5 6df9affbb7a3dd5f789b0dc49e1fdf6a067e2fd2 c858c90ee2ddb2f6add6d15b2b7b4cd6fbe22d21 321d6659804c0cf62f77ee5f40ef2454e7a799de 321e21528eb15d3631650e6817370520005562a4 2cea04ff627d4476a9b0e2cbcdde45676340982a e528243f01d0551904aca1035a5a54b7a3523ae7 262c46a3d37ad5a3c42e641085817a23bad1f8ab 621d5c8fe7aed4ebb27ac7469255082cf8ac5b23 1b985ee10cde54a55c40d762d24b8c3586253a22 57dd9d76c944cf55a09500a6d41488ecf49d27e2 4c0342c2126f09a815241fff779a5faa26126c1f ddfb42f54619636d42ccb7a6134cd78a9a795e82 0cd42685daf8eca91807182d0c763049da41b1ce 483c9a37d37784aedfc2ce6e2420fc54fcfe3610 4373db6fed5f47592563664ddd19cbd58df410ef 89aee6dd7b69012eec40221f77e0ae259b70091d 13bc400ecd8424ceb97e508d1ca34a899dcbea73 49dc824ec371cfb89fc5229a5049f5ba0c450751 8fd4ed873262370d3fcf3d0f3cd681f9e3260f81 0716fa646fb8b694dda667cac81a943c457cfad9 c32493b5c72592dfb23a4a9ee4b59b5aefe832c6 37d73806f2521a09191c5be5f18a93927d0823c3 7c3390abdb8df150cc9f1006747da15f292f1263 8c1915bf65897acee9128e544cd7b9a2cc66fd39 a6e868bdaededa20b2aca73ee2e5ad1489a1a4eb ceb8cbd01574b899e65793c9a175dcb211232028 d1afeafc3e8acb110dc9ceeac6c616eac9256e11 fcef211bf32953af6eb80ea0e64eebf1fb4d2645 2dfa44355972953cb2224680c3952daa6c09726b 359157540e56644dad0b2fea982373756f1f89a8 08373edde611f1fc7c8f3c86a10dcdb7e0da969b 2a794f741459ce431bd2cae229c6ae9b0310df2c 0abe7d25706381624dc34617cc692526fed8eaec f334320cf4594e216e950e71c2ff258e78bfde64 91895b3d581000d199e5de5ac5b782e06a755138 6ddf656a243a36243c7dd4bcb3186dac2fc80cda 633f9ca328dcbaaf415a6e84c8fde58e38c1bbaf eff094938b7e2870d2171d5aab821c2f1f514bdf b8b6b4d17b8a6c58f42b34fcc7a5d328b85f4daf 9ed4fdbe4b3794d48e360ea37e31ba0deeef8bd7 0398dc53909c67ea047279a76c85fb0570fe5ff7 307f645cabfab7b89ddec2a2623715634b56a46b 655e706fdc842edae4554bec2807beb03e62ae50 5720fdb63b8eba2f23a95a9053e292b3b21f117f d9279b002a43683ab70f7c6d5beccf1852632231 2f69dd4cc6a7b3cfb48b99b986819a01cdfdca85 043cacd6908e98752a9eb59aff0504772bc62923 f62b179046fcfe7c6d2d5c0734b7b19ef543f692 3a74c310db91db75d19fc7b63fbebda83733e1fb c2167308dfa18c29111aefe008938bab67527917 428dfca5ac9c1b7a8ed0d0b43179cac9ce514bea 070636a5f0b4f0f8d054a43821d3211c7d115b2f d6020d8572ef53ddef4d901e537c5d38e8350fc4 88941fbd2607b41a0faf21ff4249de55ba52714a b1b1da1309e816ba33f5d71921a4469c2b14f464 3a2af1b004e2d2481d8abb46061e312521ba36d9 709e613f8a8fc3ecaaf9ada83c243496f790ed84 81611f0b8b4ce135dafd3eb8a390bedb196b00ba 0c01b261d1d3b6248ba13f365fd8ad5acdb322e7 cd4a191940fc76e378f4c4dff1cdbd9a162c1b91 b48a70d97dfce0b91cb2c56d2d471d283b9a4aca a98f95f87594b61bf189dbe5d550bb1f676a2d3f bd3320d8316e3a7a08aba405bc8aecc9f7871f40 c74a4b2f09b5ccc2418999aea3ca90f0dfe42043 0e265a6e3d2c4064ab631495c7f2dc50c7370926 d5611b3cf28d2cfa05c1afaca7415d53cd75b3d1 65e77d8e52e192497ced0581ecacb3104f2e389d 6354acb1156c3f4218b2afc6fa694e4d658401d1 30df140f9e16a92bfa42f4743065f424d4f6becc 82f9a1b9ea4a64d832c1a0b7229674e97497ba04 26784a030a62649a7a1b187c979db005c6aba460 a8213f4b2134b8444a4d63197267d244ef9e5690 002f70518154c01e58c965bd07334bdaa462eec9 376165845b312c901b6e05b93835c63777cf2acb 5ca79cfa7d20ab2ae7e7907a3c87670e874f996d 9f615d75880bf5b3892cf9fbf96817df55323c1e 793d51325cdec7c750b17a0cc59e7206a035f85a 240f89eac34a25de3d2ff0a1d2e4dded08a01c07 138b05f354fb2f3c16dbc7346739855a4b0fc39b fb829e004454aaa4e76be3af0e56cabe8136d237 4812b86ee77373de3d4d5a65b81190b868f1f6fa ff207ba8e936c485ca1d24442fe75015f3f4765e ceccebcdbd323dad8ff8f461562c1693dea1f752 3b5d3ea11370cccfe74b9ef67c1a131adfd2d3b3 86ff51c827d36e431c4bc920362a623aad8a283c 2358d229200d8adb81427e4c6c40b6bce93658fa bb01e5d60088bff15a1684bc3a3e2b806154ca04 0a81e7daba12a001e654e9b75d4e592847adc032 5ea8e2bc20afaf27c68280bf48363efa09efc25d 4d1e436077ecafcc257ebc77cd7ceadc713c98df ca42c198f001b9abe3bf738dee3116e8efd37d7f 632b6e152d82b22ce46f124873699f9f361b2691 e66fbe91f73e57d73b8ffb74d3597ad181999304 38b70ab207b36eb129187e57a4ea19077a752c4e 79fc4252054154b190671920626594ab1b296e4d 5c8fc40de60ec50f9291bcae147429df5a498e44 9058fcd94ad9778446635a1d774c406b3dd5e9ef 64c477e6b404b7ac2d3e613783fd85ef3b8ee3b4 db253980a1cdb57f8719e5e7f3abcfe0b2efe1b1 ae73a00a7e83e0303935a62cf11af538cc087e15 96259f0fca36fce82497600d4569c885ad27ae75 f8fc2c39b2407e70f8ed0bbec4d057b404ef84a2 45aa029df50aa9b98662c72b1d846421ba8d0c59 ca32b01f90c96d28728e86b9c45958d56d0caf88 c65a423ebde3c45c1bcff957712a44c2ef1be18d abeb33b39473b53f1590dabf35dc5b6d9f70471e fb7cb5396b837e4e602a94fa75bf8308aa4df164 f40f6f8a9c01a79aa3f2c6b53176d46c370d35ad 40d2e0b51412c08b1d50687c47dd14594fe44a0e 1b224d71243686a749cb3a0add1490b21246c15e b8b6ad7e8a3659ef3e91599988cf00657abcdf5f 1d98c1373957848375c6f52825b26ec92d7de9ab 8f4971cd4b1b1a1ecb6b1ea59036ad4fa8184706 e134cda5764b325b357c692f6391abe78b2f02a7 9f8c15eced51e9f75b7e9ebd7413f1a3d2be064c 5fca62b3c155aa104a5e2c32203d7075332fb9b8 c0e10ba39cb957940c7c236c6ab778b4022d569d b23068e15a9838c0650106ecc6f32ced8828ad7f a6737612ddfc6bfce92abb55e5cfce55e6d52f6c 396599fb5a3a531b126b9bdbe03d0bd40caea472 849924c028e5ee319901c4b6b2a33df7c551baa4 a284ffbff6b7f72cc03f8cceb1ff68f7dd2b7f48 2c960de0620db9faad63b85cfd9d423568d1f6fe 5f64262cac6829f2e1c4cd623b49bdf48c00d160 4d73acd881eba4d7cbf0a3d352c47e611279cf1f b83b7b4626d311855d89181a9d92f3fb3121dc2f 8bc17eb09b6c7e7a9181d04e30b6987b37486362 25bd45dda45b4dc887ffd70943e20ab687be9657 06eae63721b21c3e49ffd2c99624e451730bff4f 92ec22c049548164dbb247efcb3040513aaf43ea fdcfbf06fb99e4bdaba66dd323a93d067a12d95e 9fbf96cc204ae79ed464470eea8e1de4e19496e1 f39a476b554bbf0ca101528733449614725bca62 2d7340f5cd1d2e459dd6e3ee8d94cb0564e2a07b 2234279a68e962799a5bbea204430c479647557f 9e2b0e89a325c3f011a390adcac4a7b6216ef41f a421b8008c973b5485722af28cafb97d8bd0b83c 3344254c2ad5c7655347d5e3b5f4377c89c09549 1f12a6be66a98331b96a33d66c090d59674aa79a 43b725b591a99f46f7c83a0f62a52e54a57f9dc8 b87512b0c0986a6ef86d6fce2767853098872c05 cf1a2210a83c82913eddc72a03b81457fc2c2a01 9bdbaa41030fa2c03c4f7ed68d467aa6b8ed4354 c68e1007cf22fd2cdde948100243e8212ad7d191 4a7785b47cba09682a1ce99855687d2459c77522 04b4d74d5227af7a31db04603e2d54aaa36ef885 918381e08d64206e4c7fb52a3883d11dd324639c fb5277e1d85d39c546b9787cc1d6abb6e76eeed0 e6a881591fcb9404c91287ad4bf31518b0a5b02c 8691ee48231353965fe3268eed3e9eec924c2934 ab986d0e75b7534ae41ac2e21bcc48fc3296b0eb 5ceb76e25fb3e754fc486450f81b632f6e66d54a 255a092a07c87e16165d1a9f08026f08d7f6ef83 f07c35b6d507e6d1d9f685e93745dfaded230f7a a992e4ad77354c300042381029c299715b2e480e 7cbb41490ec2fecb13fdd84a92e0f848b5917bc1 10e6a010c1334c008fb01e2f49d0fe6c9b5eb148 c5b21144efafc32846e4047f72c9fedadde7bcd7 dfa91d584cc7d19057cf2b109d17629931b81490 273d7707b1b76269a49af0558cae7b3d7374fb39 891b2fe9397efb4b3fe46a991bbbb9b430c5ebfc a7f584e3c014d8d68f5f0a3ee3745e09d3eff613 c56426d019c1ae413c2df0f96a33227723217c3e b85b3b80998019fd31b4ddf26603e45f0f68f9d7 d506bf4d861ec64f985be09f1f093562be03f42b 7976ace7bb7ad35d7d2f19160bb44e88a88eca41 4b4fef5b6bff7965f3a10006db4ca70905e8ebc0 f7bb81a733044d6fb01ac0109b4efdf42eba0fc2 8a0e771ab4acd3e04b8fe00815243a3dfc6534fb 9a60c68a55ebd23587fc3630a030bc63be1d0773 02a460cbfd8097733e33f8ef3409d0aab65bf9b2 59460ed23d71de55acc3def4cc2daac0a041796b 933e971a9f20b595f010f39d9527162405f19683 c99808f6ca62f110e0e40d345f5f8437acd0a546 79d614b08cf7a33f84680eee97880a8be21ffff6,,Fix pr 769,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,803,2021-06-30T16:34:54Z,2021-07-07T17:45:06Z,True,2021-07-07T17:45:06Z,927d2f0a21ecf648e36db8a4d846605a2b86d9e3,3,2,06580938d9dbb08ec08293f51c39a66ecbb58cf0 7270498fea52b145a99a1e540d9cbe62762f150a,,lestarch fixing Fw Time to allow comparisons across different time ,…bases    | | |  |:---|:---|  |**_Originating Project/Creator_**| Infra |  |**_Affected Component_**| Fw::Time |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| n/a |    ---  ## Change Description    Fw::Time doesn't assert when comparing across time bases  but returns INCOMPARABLE instead.  This allows comparing against ZERO_TIME.    ## Rationale    Comparisons shouldn't crash the system. They should fail instead.    ## Future Work    Look into add and subtract methods.  These are left for future work as it is less clear what to do in this case.
nasa/fprime,688,2021-06-09T06:20:01Z,2021-06-09T15:37:14Z,True,2021-06-09T15:37:14Z,401a9a7670526a79cdf154eca2e923c6758b3eff,4,2,43754645e56b456529e38c87c0ed012e13be5bf4 26f566dd2294beb338c4c35e83582a0e26838131,,lestarch capturing all CI logs,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infra |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description and Rationale    Removed STATIC (unused) step in CI action such that the log files can be archived for review.  
nasa/fprime,686,2021-06-08T06:00:27Z,2021-06-09T03:20:25Z,True,2021-06-09T03:20:25Z,61eb8195cbe2c4d12cbea93c8cac4440f2ebe78b,18,2,85c7653e888f48e986bd010a0ae55e14874f5ac6 5d868f176ea16ca169d3f7b256fdb23545765853,,lestarch refactoring toolchains to properly set and use CMAKE_SYSTEM ,…_NAME    | | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastruture |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description
nasa/fprime,682,2021-06-07T20:08:38Z,2021-06-08T04:09:45Z,True,2021-06-08T04:09:45Z,5ff62bdffd69abb42ba9f78756b7cb4ec3e89ae7,2,1,edfb9df32763e985537443af8bae6b74c622cdbc,,lestarch reverting enable UTs to OFF and a deprecation warning,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| UTs |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Make framework UTs enabled by default.    ## Rationale    Projects pointed out that framework UTs "are" UTs and thus should be run by default. Since this is not the best long-term way to handle this  we are also adding a deprecation warning.  
nasa/fprime,676,2021-06-04T23:20:32Z,2021-06-08T04:10:09Z,True,2021-06-08T04:10:09Z,eebef10711194f131128809ef9e6331acad8d733,51,1,783a366a94c5cb7121859e76680bf4858aec7def,,lestarch updating hpp and md files for clean doxygen run,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| Documentation |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    1. Cleans up all comments to improve autogenerated documentation  2. Updates and cleans base documentation  3. Sets up documentation to be auto-update on push to devel    ## Rationale    No more out-of-date documentation.
nasa/fprime,853,2021-07-20T00:43:27Z,2021-07-20T17:47:10Z,True,2021-07-20T17:47:10Z,79cf2c3d08d4b5e84110489b79357340ad629ad3,17,1,2062d1dad55510a4f8f59246932565c588c6c32a,,lestarch adding a ready port to bytestreamdriver and the tcp implementors,    | | |  |:---|:---|  |**_Originating Project/Creator_**| OWLS |  |**_Affected Component_**| Tcp IP and ByteStreamDriver |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    Adds a "ready" port signaling the byte stream driver has connected.    ## Rationale    Downlink queues  retry connection code  and more needs to know when a connection was established.    ## Testing/Review Recommendations    None.    ## Future Work    None.  
nasa/fprime,672,2021-06-03T21:27:08Z,2021-06-04T03:06:40Z,True,2021-06-04T03:06:40Z,97b4d51dbdf3796d030cc793101d3ac5f85a365d,6,1,06541a45629ce1b289323b5e22e368406f57cc8f,,lestarch removing framework UTs by default,| | |  |:---|:---|  |**_Originating Project/Creator_**|  Infrastructure |  |**_Affected Component_**| UTs |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Projects can now turn on framework UTs meaning they don't by-default run all the framework UTs that are checked by CI here.
nasa/fprime,1025,2021-09-09T23:14:35Z,2021-09-10T01:07:56Z,True,2021-09-10T01:07:56Z,3168f02cec716b3a39280b3c53498edac7850cf0,19,1,57aac456b4060bd37f2cfd62857e8e24c05513f7,,Os Convert C style casts to C style casts,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  Os |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Breaking changes in #955 into smaller chunks. This PR is just the modifications to the Os directory.    Switch fprime from using a mix of C/C++ style casts to C++ style casts only. Add compiler warning to core framework project to error on use of C style casts. Note  using a c-style cast to cast return value to void and signal that the return value is ignored is still permitted.    ## Rationale    C++ style static  const  and reinterpret casts are safer than C style casts by forcing developers to be explicit about how they intend to typecast a value. This brings fprime inline with the C++ best practice of avoiding C style casts.  
nasa/fprime,1021,2021-09-07T23:13:20Z,2021-09-07T23:13:51Z,False,none,none,249,47,1fcf1375155c7860dee32af982f2ed2c5272b84c 8f1829a09eb7ce5722071b537d390d63ca65bf4b f1f80632c28903dc557dba477cce82ba4734bc73 bf8f88e21f12887e59270412cd6aa1ac71b78ce3 a26a85fd92be198d6691e1a34a5771d99b9cb6a7 a6a5d86ecaa107f4003426212354aa0ca9188e17 fd1a1311ce48beb7e008bf33b40b94cd7d0629f1 14af21c800be8348566d83a877477b38e2c4797b c923ab5ad36f71cdca2bd324e0affdfab8c57fa4 8fddb8c85ff5d8596345e54e9c0cf98ec9684004 53030642798ae03f7893c5c28e1e59e119c093d9 e7ba8aa23efa6fc34ed2dde5b4e7d60a41e00783 a0c6a29d8104015e6515207d7cd3b6ae83b625be 1d3060a0faa1d9e11a0d8652db758dad48026686 bbef2e0dacf84f74f589e8ce8c59cb8cb0867a80 8b0d1c96ed2de2e299a2a991bddb3fd8b184b632 73c0abd1420f606d1481a987eb360e0ed02500d9 470c680f5a8ddd37e2adb33f72c8c66403a953b3 a214e6ea0a430e5cc93e7d4bd862a6d78f05fa15 3485228753c940a296c8722d12fe939bd0b10416 43767bd9166e4de4aadd942b82ed543583d033c2 da000c97cff30e2b6f87d8e63246ade950ad4703 3302e84d97eb094265a7136924e4d4d9b1068875 13fe1814c17d74cc754acd3b7bebc7636c126b1b 6c542c789ef79d811cf6389eaa2ff0888ab8e98f fcf436e348d8244ddf9af6206d05d5719751fc04 93b604b27dfd2999f53a6af9b6d47fe8c4b2e157 2df388ed7d5638b148d753a0069a7ce56400e084 9c4f2cc6c890e26dcabccdc98729a632a2c56551 8636356a44008f98ee46fa571a07bbe586912473 2f6621f6090df56f067e58954de34275f2666166 e92fa06cc74a7d6bfd7e8f680f0551e80f2c5fa0 6e090833828d26c9dc5d58644e096b607a3929d9 001b4ce6f442beb1d827b338be80f57355f59b40 423f4b34165a5aca9900755b1ada7c352c937556 a00f4c7025eb0ba649ef991fa53b7fe80984b662 dbef5e26f57ae54e795bec6891670d5826cd9270 dc82e7874ac5e31c110d3cacd24cd0cdb91b753d 1c16e1e59e7d1d4237e82d3cad150ffd8e100969 618554610159c90d0dbb6aa4610b5434606119db c72b2882c8beb2e1b03c75183ca627b0be171a4c d62207d018a78127bf36f0343be9bd0394bba876 73c53f8e112fb8f098ec51911acd22c22cc4b472 57d1e0c27eb61b26470d2bdbad649d23c66a0397 3df30d659c37187ccde79fb69a82c3446e38fa01 555897518acb314ecf654c00f572b1a6cba1bfe5 8a3194b0c35b17c03028541a3c4fea3a5801a66d,,Devel to v3 0 0,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,1017,2021-09-04T19:06:13Z,2021-09-07T23:02:13Z,True,2021-09-07T23:02:13Z,8a3194b0c35b17c03028541a3c4fea3a5801a66d,13,11,2cb97000aaf9074c3bf4d4f18239d40306f51e71 667be54e84311f99d6a785355419fa597b7b4d9c 96b6ebc6a93e492bc742c84752940ca116f38b8d 40e3df388b4096a70973be90c53abe0f31521e0d 5ef5dd39f55980cebf1610c8738e22459e72e14e 98ecb11324235b8ce0813a1cc05cd66578585154 5d9694104346eceffe33fec9fc9bf43d2e18e4ae 6353b2239d3ceb8bf4c495f844b5ee141216dff6 f254c03c372d5fd738db5ee4c7137b10a2eab5ee bb8ad79e6344f0a88531d531f3628bb13983d672 8a3f7d234c52663c9d303af8a1386893ff022a46,,lestarch deframer fix,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    Fixes a known bug in the deframer where packets aggregated into a single receive call will not all unpack when the size of each packet decreases from the previous.    Fixed UTs to work with this fix  and put in a randomized test for framer + fprime protocol.
nasa/fprime,1007,2021-09-02T18:22:11Z,2021-09-02T19:22:25Z,True,2021-09-02T19:22:25Z,555897518acb314ecf654c00f572b1a6cba1bfe5,4,6,492471b84ef833892926f9faa13f0a2ad4b12816 a5dc2b3ea973c1afe93e46e81635aeb976b88704 6780546403547507621c43ca4e237b207913c158 91913b94c1a71b3caffac1cab9cdf6460ba013b7 410c0c556bbdb30c2bb506e652720739b692631b 786fa7dbc3b9d81a0ea62a42ebd045c8d556eebf,,lestarch adding macOS to CI,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Workflow to run Framework  Ref  and Integration tests on macOS  using macos-latest runner.
nasa/fprime,1026,2021-09-09T23:26:48Z,2021-09-10T01:12:20Z,True,2021-09-10T01:12:20Z,bb3a76acc266399e400ab7f6eb0ba6b16fc01228,19,1,162347b04e97866d7a63d5365e95281d8814be41,,Autocoders Convert C style casts to C style casts,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Autocoders |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---    ## Change Description    Breaking changes in #955 into smaller chunks. This PR is just the modifications to the Autocoders directory.    Switch fprime from using a mix of C/C++ style casts to C++ style casts only. Add compiler warning to core framework project to error on use of C style casts. Note  using a c-style cast to cast return value to void and signal that the return value is ignored is still permitted.    ## Rationale    C++ style static  const  and reinterpret casts are safer than C style casts by forcing developers to be explicit about how they intend to typecast a value. This brings fprime inline with the C++ best practice of avoiding C style casts.
nasa/fprime,1040,2021-09-16T18:48:25Z,2021-09-16T19:26:55Z,True,2021-09-16T19:26:55Z,a4c8237e1961d0a6adb3657ddf971f2369e4dd6c,36,48,1fcf1375155c7860dee32af982f2ed2c5272b84c 8f1829a09eb7ce5722071b537d390d63ca65bf4b f1f80632c28903dc557dba477cce82ba4734bc73 bf8f88e21f12887e59270412cd6aa1ac71b78ce3 a26a85fd92be198d6691e1a34a5771d99b9cb6a7 a6a5d86ecaa107f4003426212354aa0ca9188e17 fd1a1311ce48beb7e008bf33b40b94cd7d0629f1 14af21c800be8348566d83a877477b38e2c4797b c923ab5ad36f71cdca2bd324e0affdfab8c57fa4 8fddb8c85ff5d8596345e54e9c0cf98ec9684004 53030642798ae03f7893c5c28e1e59e119c093d9 e7ba8aa23efa6fc34ed2dde5b4e7d60a41e00783 a0c6a29d8104015e6515207d7cd3b6ae83b625be 1d3060a0faa1d9e11a0d8652db758dad48026686 bbef2e0dacf84f74f589e8ce8c59cb8cb0867a80 8b0d1c96ed2de2e299a2a991bddb3fd8b184b632 73c0abd1420f606d1481a987eb360e0ed02500d9 470c680f5a8ddd37e2adb33f72c8c66403a953b3 a214e6ea0a430e5cc93e7d4bd862a6d78f05fa15 3485228753c940a296c8722d12fe939bd0b10416 43767bd9166e4de4aadd942b82ed543583d033c2 da000c97cff30e2b6f87d8e63246ade950ad4703 3302e84d97eb094265a7136924e4d4d9b1068875 13fe1814c17d74cc754acd3b7bebc7636c126b1b 6c542c789ef79d811cf6389eaa2ff0888ab8e98f fcf436e348d8244ddf9af6206d05d5719751fc04 93b604b27dfd2999f53a6af9b6d47fe8c4b2e157 2df388ed7d5638b148d753a0069a7ce56400e084 9c4f2cc6c890e26dcabccdc98729a632a2c56551 8636356a44008f98ee46fa571a07bbe586912473 2f6621f6090df56f067e58954de34275f2666166 e92fa06cc74a7d6bfd7e8f680f0551e80f2c5fa0 6e090833828d26c9dc5d58644e096b607a3929d9 001b4ce6f442beb1d827b338be80f57355f59b40 423f4b34165a5aca9900755b1ada7c352c937556 a00f4c7025eb0ba649ef991fa53b7fe80984b662 dbef5e26f57ae54e795bec6891670d5826cd9270 dc82e7874ac5e31c110d3cacd24cd0cdb91b753d 1c16e1e59e7d1d4237e82d3cad150ffd8e100969 618554610159c90d0dbb6aa4610b5434606119db c72b2882c8beb2e1b03c75183ca627b0be171a4c d62207d018a78127bf36f0343be9bd0394bba876 73c53f8e112fb8f098ec51911acd22c22cc4b472 57d1e0c27eb61b26470d2bdbad649d23c66a0397 3df30d659c37187ccde79fb69a82c3446e38fa01 555897518acb314ecf654c00f572b1a6cba1bfe5 8a3194b0c35b17c03028541a3c4fea3a5801a66d 34bdae99784de7ec1dfab7e071ba995a1c9c1d3b,, Merge devel into release v3 0 0,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Bring release/v3.0.0 up to date with latest changes to devel branch.  Commit a15aa027195880ba3672263c2c70c76e15b3c086 contains the resolution of the merge conflicts.
nasa/fprime,1030,2021-09-12T16:57:48Z,2021-09-16T21:04:56Z,True,2021-09-16T21:04:56Z,567e2c547ab2526c9ba6fe10c8af9cda5954b3fb,3,2,dc9f02682a15b16fcaf936c18f84620cb74bff58 fdb2b25b4e7cacb0faaa5851b06a9e334e1cf872,,docs Update MathComponent to Reference TestMain,| | |  |:---|:---|  |**_Originating Project/Creator_**|@astroesteban |  |**_Affected Component_**| Docs |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    The existing MathComponent unit test tutorial instructs the user to create a main.cpp test file even though running `fprime-util impl --ut` creates a new TestMain.cpp file. The changes update the Tutorial.md file to reflect this new functionality and now instruct the user to modify the autogenerated TutorialMain.cpp file instead of creating a main.cpp file.    In addition  the existing main.cpp files for the MathSender & MathReceiver components have been renamed to TestMain.cpp.    ## Rationale    Update the docs to reflect more features provided by `fprime-util impl --ut`    ## Testing/Review Recommendations    - Review the renaming of `main` to `TestMain`.    ## Future Work
nasa/fprime,1038,2021-09-15T23:07:16Z,2021-09-16T22:35:13Z,True,2021-09-16T22:35:13Z,30e43abb9da452f355be0a0adcae3e7c7b872868,16,1,b83ee6602e129718c8d35b5a5df934631c27fd6e,,Various Convert C style casts to C style casts,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| various |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Breaking changes in #955 into smaller chunks. This PR contains the remaining changes that didn't fit into previous pull requests.    Switch fprime from using a mix of C/C++ style casts to C++ style casts only. Add compiler warning to core framework project to error on use of C style casts. Note  using a c-style cast to cast return value to void and signal that the return value is ignored is still permitted.    ## Rationale    C++ style static  const  and reinterpret casts are safer than C style casts by forcing developers to be explicit about how they intend to typecast a value. This brings fprime inline with the C++ best practice of avoiding C style casts.
nasa/fprime,1033,2021-09-15T09:45:42Z,2021-09-16T21:04:21Z,True,2021-09-16T21:04:21Z,97e49a9c8fe5cc22850d9dfb29c7810fa62d200e,7,1,496c793fd5f7b85149b558fefd51e4da4569d2d6,,Fix minor typos in error message strings and descriptive comments,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Fixed a few minor typos in some error messages and a couple of comments.    ## Rationale    To improve code clarity.    ## Testing/Review Recommendations    None. Code execution unaffected.    ## Future Work    n/a  
nasa/fprime,992,2021-08-31T17:32:43Z,2021-09-16T22:33:47Z,True,2021-09-16T22:33:47Z,a08dd11292c1f965ec341c641b6b487d2e695e66,52,7,3079f39d00913e95b33ea209387be22c60ed3101 62a4103102ae1910e3826df5df96ea38e32279a2 ae37a92e4ddb280b5310a583b4c7182aec6667b0 3f6a902855957de847ae4d7e08405059d4cbb944 d1d60bbb94b00d137c6b3ff7e9c54279a492abeb 5e60aa896f527610da4d77570c262b38ee6d6e11 448b39eb9db6e8f7afcf34f931f1ad291cdf8406,,lestarch reworking posix tasks,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    There were several issues in the Os/Posix/Task.cpp and Os/Posix/TaskRoot.cpp.  These were:    1. Os/Posix/Task.cpp silently dropped priorities  affinity without any indication  2. Os/Posix/TaskRoot.cpp code-rotted and was no longer kept up-to-date  3. All posix implementations accepted invalid priorities  stack sizes  without validation or explanation  4. Ref  RPI deployments both specified invalid stack sizes  invalid priorities  and were incapable of using these settings anyway  5. Permissions prevent TaskRoot.cpp from running unless user is root.    This PR fixes the above issues by:    1. Merging TaskRoot into Task.cpp  2. Clamping out-of-range values to posix defaults (max/min priority  min stack size)  3. Providing argument-free constructors to use task defaults  4. Falling back to priority-free tasks when user has not permissions to run priority tasks  5. Logging warnings when:    - Out-of-range values are supplied    - Old function signatures are used    - Tasks set to use priority and were unable to do so because of permissions    The design of this PR is to keep existing applications running as-is  but produce warnings to indicate corrections that should be made.  In a future PR  these warnings will be removed  and users will be forced to upgrade.      ## Rationale    If a user specifies stack size/priority it should work  not silently be discarded.  For users that don't care  a default should be provided that maps to posix defaults.   If the user does not have permission  the program should fail.    ## Testing/Review Recommendations      ## Future Work    Given this is devel and we don't want to break all users  we have provided warnings for the time being.  As we approach release v3.0.0  we need to remove the warnings and replace them with hard-failures forcing users to upgrade.  
nasa/fprime,1043,2021-09-17T17:57:07Z,2021-09-21T16:31:14Z,True,2021-09-21T16:31:14Z,f58b8be9daadf87cc35f50aa1ae1785ac61f2295,127,5,5b0085805dc745c5c93195e5a02ef8491393bd26 3501e25a5c731ce28610a9ca8fbd33c55274c053 e62b14010f46746044a9b15de414ebdba6a8b824 9b3c1da7372242f5ebaeb50983e6054acfc316d9 7168c468a5eb2344793936ec7179c4b1541faaee,,Fix fprime typos,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Fixed a few minor typos in various comments  documentation and other text.    ## Rationale    To improve code clarity.    ## Testing/Review Recommendations    None. Code execution unaffected.    ## Future Work    n/a  
nasa/fprime,1048,2021-09-20T21:39:36Z,2021-09-21T16:36:07Z,True,2021-09-21T16:36:07Z,f07024ded7e5b23bf5ff8035d6a7d511ab8cb401,9,1,5b2b542bb242d58f80b3b029f5d66ffca0d4a061,,clang tidy enable modernize use bool literals,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Prefer true/false over 1/0 for boolean literals - uses clang-tidy to enforce and fix usages  
nasa/fprime,1045,2021-09-17T23:51:41Z,2021-09-21T16:30:05Z,True,2021-09-21T16:30:05Z,809d23ac346ea30a7ae5401e9cc89567bcdf03fc,69,1,a0b1f04a1cc6a7075972986692452e881ae5c511,,Add clang tidy job to CI,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Adds a code quality github actions job that runs clang-tidy and the newest installed GCC release   
nasa/fprime,1058,2021-09-23T19:40:28Z,2021-09-24T00:52:17Z,True,2021-09-24T00:52:17Z,1698071da171ff729703a88d5525176c9f982be5,3,1,438742901a4ebc99a1f2e947f00fcbb1b741a26e,,Use clang tidy to warn on uses of recursion,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| n/a  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Use clang-tidy to check for uses of recursion within flight code.  Because we allow recursion within unit test  this check only runs on the flight code. I added a separate clang-tidy scan to the quality CI job that only scans the flight code.
nasa/fprime,1059,2021-09-24T01:34:08Z,2021-09-28T17:48:15Z,True,2021-09-28T17:48:15Z,5003e4086ceb1a6027cd96eb2959ee609e982ec3,25,1,1039900d80b2dba05eef85c8f08424d1991e4795,,Check for object self assignment in assignment constructor,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| n/a  |  |**_Builds Without Errors (y/n)_**| y  |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Used clang-tidy to make sure F' classes properly check for and handle self-assignment.  
nasa/fprime,1063,2021-09-27T22:29:30Z,2021-09-29T00:39:35Z,False,none,e579710b2548e0cda4e887b6dbf76b2418e5315f,1,1,5445f8f000440e2c499b69a944f230840a38aacb,,Update index md,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
nasa/fprime,1050,2021-09-20T23:24:34Z,2021-09-29T16:01:53Z,True,2021-09-29T16:01:53Z,62d3b6ee10e23bc9f8b0bcf6b4c86cfe790132b0,2,1,b684cc647c4f8322d0ce393f4d5bad777d639749,,Compile test project with pedantic,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|   |  |**_Related Issue(s)_**| #945 |  |**_Has Unit Tests (y/n)_**| n/a |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Compile the test project with pedantic to catch non-portable C++. A few of the pedantic warnings had to be disabled but hopefully we can slowly resolve these issues over time. Ideally we'd disable specific compilation warnings only on the affected  files  but it's tricky to do in a portable way.
nasa/fprime,1056,2021-09-23T03:18:48Z,2021-09-29T16:00:46Z,True,2021-09-29T16:00:46Z,8e498c2c2f6dd317fd565191e839e02876f9179c,5,1,35268afa54a67cb36d3a3e0e2d345bbca12d22c4,,Switch to C 11 static assertions,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Switch custom static assertions to use C++11 builtin static assertions.  
nasa/fprime,1049,2021-09-20T22:47:01Z,2021-09-29T16:04:53Z,True,2021-09-29T16:04:53Z,234bb5d176faad652e87d7ff008a9767137fda41,109,3,de8d8d240a9d9af863b00d69f1c84d99b1af3ac1 033f8e598eb43acdb6026aff4b3365af375f88bc 0dd4e25e7d5f4f29ab069e3e8520f1c685a58a5c,,Replace NULL with nullptr,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Use clang-tidy to replace usage of NULL with nullptr  
nasa/fprime,1053,2021-09-22T10:37:16Z,2021-09-29T16:01:06Z,True,2021-09-29T16:01:06Z,401c142c7bfd2f8d48dc40a8db25830985b97043,1,6,524fdd2e0cd194f15fd0f9d7086a56fcccf35ae2 5a6162156e15924f5b6e9ba39aebe695c3b5339e 1adc912b5b85c9510b50f0b224ef416f26dd619e 3d7068e6d1c8004a1a2bfa0775af12335a04f4fc 828578ec7d7184bccd9b08c04d5a801c8bbb44ef 11f936d1145a74a2cfaad62a61d70e88ba358668,,Fix MathComponent Tutorial md typos,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Fixed a few minor typos in MathComponent Tutorial as some of the line references and code snippets had become outdated since refactoring of the files referenced.    ## Rationale    To improve code clarity.    ## Testing/Review Recommendations    None. Only changing docs - no code changes.    ## Future Work    n/a  
nasa/fprime,1054,2021-09-22T18:48:41Z,2021-10-01T18:16:08Z,True,2021-10-01T18:16:08Z,4a8a16d6fea0930779c88967de6877bcada34355,10,1,71c6cf761b26b17a0c8b3e5d0438844616b6691d,,Cleanup telemetry and event string classes,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Events/Telemetry  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    - Fixed broken string truncation for telemetry strings.  - Updated the way event and telemetry strings are truncated so that they don't modify the string class itself  allowing users to pass const strings into events and telemetry.  - Cleanup up telemetry and string classes in general to match other string classes
nasa/fprime,1068,2021-09-29T23:18:19Z,2021-10-01T18:12:34Z,True,2021-10-01T18:12:34Z,017f474a625238e8c4a91d31c69181d0458c831e,120,51,6ad598ba5c87faf5a4c9aeb665f03d93e06b30e5 2814a8aec6dce15baba53defc7a54ed468bc4b03 9fc1a6b662e8d421db08eaf53017e6272ea1b701 ae6fb18cbda0d87cbbe15d2e8082e7337df64728 31366311d48378c344b0e3577e0195a7a2ccf916 ad464394748df373c8f908110bb35778685b2a83 8e4a9d8c323aa11cf4de237567f09f8076f208b5 ff46cf18e9779d9933d5e9276179d87db3e47599 868e1299118aee21cb8691535b7cce4592138e36 041ee0daf2282046b32d8571cd56d3dbf9e567de d795f6129b1cbae483fcc6b10550d1ae2f0a96f2 5bb75dc0daa92294b0580720602b6379461188f6 03a87f252fe5e8614d01d6185a867d601f8a555b 7e1702395179775cb0bf046e1cf0858af12e36ae e1cb8cf63b2d7075b2fcac264086b9898cf9c5b8 29e783f6bea04a105f9e4ab3012e5118bbe2adb6 666b297ee8e63a31e3a7ad191bebb862a7ae76fe da64bcf1c70bbb22a06ed97038fce792f2ebf082 8e02596d4e57e9392dec5b8310a3ef22d8105a48 63bb87027db298a92cbdc3a3d9ae28679572d8f4 db42383bde8d824a981fd44ae7a9296bac91c207 12afb996d63a5a5c8e5715d0ee7d967200b8c449 b68d94ac785cd313c32b45b983bbe045ad7740dc aab67d3dc9e34bbc9cd3f1be2cd120d545f25796 5486ed648b79e08504d75b57ed0128addfb29509 7caf61686b119bfd76a5f608a603195584b2edd6 b70c0d9097477192e66a37c14c86c9126df5d6fd 58fce00bfc47f5d6e0a335a9fad3eca359f33cb6 67ae6da95c98916866a142f5ff8bae8966ad8b21 a10d260a74d03055574f5059cfc0505d36516115 a77c0c6bae2d43c2de1635efc5dbcb30231ba8ad 51a55b72903348a425da08bd78c798cd52b965b0 507c65b5faa3aaf24d159aad4429a9a75d1d86b8 8ebef1792fbdc296a0c31c6727fcb2751a1ec9ae 7381ed57c609033c93f6e6b824bade1e62ecab2e c2355190d1b1bdb8fbfc79e61a8e93c7762573b7 c74ef687509dae3a09a8744cc368164eb7330f68 858b3333695de5973c41e6ad9ecf2b96a9dc98ee 0aa162a0a9fae19c2ce51ef33c29d652bf0207a9 0e5f7822746ce1d22783fd47a9e2b30a3378c7f8 cb705a493984f422bd68d194045d5094d44a5f0f e9c47bd66ab2b6911b6ea417968cb56ebec1d418 7b0dc92f4736faec41019ad6ac88bf599e857f97 3eed63f2cf37f4bedc80df55f55a273bbe433322 3af84c2c252642c712750f623eb4fc87d793ce92 0bcb50ae63d7191556046dfda21b96c5fee50972 59dd3650ba5d48e2bb1f9bde58944b94d1b91bdc 3ac84bf85dc0c59328ca051d8a09842403bb5d2f 380f341b29c4100aafda99485e88acc594e5f080 da5fb7d953d19b1a97b416c86546c6a52df643b6 c14b35970d69280ed70ea84943418297f07073ac,,Revise pass_by semantics for port XML,| | |  |:---|:---|  |**_Originating Project/Creator_**| F Prime infrastructure |  |**_Affected Component_**| Various |  |**_Affected Architectures(s)_**| Various |  |**_Related Issue(s)_**| N/A |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    This PR revises the behavior of the `pass_by` attribute in the port XML as follows:    * Remove `pass_by="value"` from the schema.  * Revise the default behavior (in the case of no `pass_by` attribute) as follows: (1) For arguments of primitive type  pass by value. (2) For arguments of non-primitive type  pass by const reference at the C++ level. At the F Prime level  (2) is an actual pass by const reference across a synchronous port invocation. Across an asynchronous port invocation  it means (a) make a local copy of the data and (b) pass a const reference to the local copy.    This PR revises port usage as necessary (e.g..  remove the `value` keyword  replace pass-by-value with pass-by-const-reference in handler implementations).    ## Rationale    This change simplifies the XML semantics and is consistent with FPP. It removes a source of errors where large values could inadvertently be passed by value across several internal function calls.    ## Testing/Review Recommendations    This PR affects a basic framework behavior  so it should get a careful review. One might start with the new unit test here: https://github.com/bocchino/fprime/tree/pass-by/Autocoders/Python/test/pass_by_kind. This test covers the new behavior.    ## Future Work    There is one more PR to go to integrate the summer work from @rohandkn. It has to do with differentiating array lengths from string sizes.  
nasa/fprime,1071,2021-09-30T18:22:07Z,2021-10-04T19:55:33Z,True,2021-10-04T19:55:32Z,00dd6028b4a2516db35412ae66a327e471dc1759,2,2,0907d5b6863804b195bf4234e30dc3645819d6f0 a6072c4a696ee9edbbe6bce79c64b0ac3d8ee2b5,,Allow removal of text loggers from build with CMake variable ,Allow removal of text loggers from build with CMake variable. Otherwise build fails if FW_ENABLE_TEXT_LOGGING == 0.    | | |  |:---|:---|  |**_Originating Project/Creator_**| JPL COLDArm / Neil Abcouwer  |  |**_Affected Component_**| Build Process |  |**_Affected Architectures(s)_**| Any |  |**_Related Issue(s)_**| n/a |  |**_Has Unit Tests (y/n)_**| n/a |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| n/a |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description    In https://github.com/nasa/fprime/blob/devel/Svc/CMakeLists.txt   move adding of Text Logger components into a `if (NOT FPRIME_DISABLE_TEXT_LOGGERS)` conditional.     ## Rationale    If FW_ENABLE_TEXT_LOGGING is set to 0 (https://github.com/nasa/fprime/blob/401c142c7bfd2f8d48dc40a8db25830985b97043/config/FpConfig.hpp#L290)   the text logger components  ActiveTextLogger and PassiveConsoleTextLogger  will fail to build  as will the entire build.     Now  deployments that wish to set FW_ENABLE_TEXT_LOGGING to 0 can add `FPRIME_DISABLE_TEXT_LOGGERS = 1` to their CMakeLists to prevent the adding of these components.      ## Testing/Review Recommendations    None    ## Future Work    There may be a more desirable way to do this.  
nasa/fprime,1024,2021-09-09T00:41:56Z,2021-10-05T00:44:43Z,True,2021-10-05T00:44:43Z,c9058c0d43905b892ff34f8d9ef8e189cd3f9e65,83,14,1e68f4f5b0aa69a5e2eefa019cbf3f24ab138f2c 2ec4fe76a8b31c754a91800dbc0a0b43704bbba7 e49f89034bd70c79b8039d337789130c27d4f16a 79aa295d10fac26c6ee475fd22a458d1e7d7d558 7362fce130c9f11f89539964dc8718dab55017d3 ec6bc1c73fab02a2752b6d4830389968cd7656ad b61ae437cb00aa7024a7869d171c78dc6e59bd41 1302828874531ce0fbff0107ff974972e9b71e0e ccb8f6fc82b71e6e41ef467ce0a5cfa4b27579ee 3b5e42b7d638edd3db2de1154f69ba6cfac7ff69 239c6fe1f2d6df2f051f3fafb1111ed663977f00 ba4b3e9bba2c2bb347b8cd6c9e51efe8ae26fb04 ba0410e52a7ea690481d59031ef42e600e8c6110 e9507e0788752590602112d8edc619f5887d462b,,lestarch installing dependencies where necessary checking for other ,… dependencies    | | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Installs:     1. SBT  when needing to build fpp    Checks for (existing installation:  1. fprime-util (for autocoder dependencies)  2. python3  3. java
nasa/fprime,426,2021-03-01T17:16:04Z,2021-03-04T19:40:55Z,True,2021-03-04T19:40:55Z,54d36334a7ae9d1a81216ada6d7e06322c139847,2,1,03be75f342f10f92c5ced58dafdf859b14a1d8f1,,Rename misspelled private fields in Svc ComLogger,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Svc/ComLogger |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    The names of two private class fields (`writeErrorOccured` and `openErrorOccured`) were misspelled in the header and source file. This commit fixes that.    ## Rationale    Improve code readability  especially for for non-native English speakers.    ## Testing/Review Recommendations    These fields do not appear to be accessed from unit tests. The code should compile cleanly.    ## Future Work    None.  
nasa/fprime,1080,2021-10-12T06:53:57Z,2021-10-12T06:54:45Z,False,none,b2f35561f350c217915502975924d551f3be5991,2,1,3652522dfde71c98d6b975aa7a681e4657803778,,Initial commit,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.  
