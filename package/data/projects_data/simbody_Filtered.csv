Project,PNumber,CreatedAt,ClosedAt,isMerged,MergedAt,MergedCommit,nFiles,nCommits,Commits,Labels,Title,Body
simbody/simbody,16,2013-08-22T00:11:11Z,2013-08-22T00:12:24Z,True,2013-08-22T00:12:24Z,c7f71fdb569d9c8199f8c43ae5fe5f011397b4a7,2,2,08e63d99e18300fb78c0adbacac1161b3d497aed 70172d6df05cf86d46685be40ff2e02d876a18ba,,Two small fixes FindSimbody now works for 64 bit Windows MobilizedBody isSameMobilizedBody fixed,
simbody/simbody,45,2013-10-16T17:15:01Z,2013-10-16T18:17:51Z,True,2013-10-16T18:17:51Z,442127da6eaa3b02eaefc8651e199d555bb30922,1,1,9a987e31ff69cb77ce15bd40840a8def1e0cb766,,Removed debug message,This message is printed when someone uses the FindSimbody cmake file. I think it's just a debug message.
simbody/simbody,83,2013-12-12T23:13:37Z,2013-12-12T23:23:42Z,True,2013-12-12T23:23:42Z,774f5de04b5b76b9691c64e836dbbd717abb8891,11,1,e3ec7b4cbab077436fae8e1febdd1068a0099379,,Delete unneeded Doxyfiles for individual libraries These caused unwanted installation junk ,Now there is just a single doxygen target and it covers all three libraries (simtkcommon  simtkmath  simbody).
simbody/simbody,131,2014-03-28T16:34:25Z,2014-03-28T17:39:37Z,True,2014-03-28T17:39:37Z,a0c9d85796098fb64f99f1afdeb0140727fa9a86,3,2,a345bdcd56971403da91ee2bd4761652c2ab1d58 a78c840f6a3678a2f8c5f44fde97d85239d4ea2e,,Fixes 128,We should wait till travis passes.  Here's one of my commit messages  copied for convenience:  ``` In travis  use the -Werror flag  as advised by @scpeters. Doing so required me to improve how I add the -std=c++11 flag to CMAKE_CXX_FLAGS.  In the future  the way I set CMAKE_CXX_FLAGS should maybe conform to how @sherm1 has done it  with a separate BUILD_CXX_FLAGS variable. ```  By the way  I used cherry-pick here to get @sherm1's nlpqlp fix so that travis might pass. My first time using cherry-pick!
simbody/simbody,64,2013-11-11T12:22:57Z,2013-12-12T06:39:51Z,True,2013-12-12T06:39:51Z,dab32b92857050eb27f8da238258509657383b26,21,27,f4a95616709c43dcc69eb7977fc2e5c15d42c5e3 ce956537913bce77e54558cd43cf4c190a4afad3 bf915b90727d503d6ef9d23fead216b88e3a390f 3979bfa17b83a397f4054d7f1f1ac14e09fde4d6 0332d989601f7b85faf10791983a9414e670fb0c 88a6fcf039953b562171f80750a1a9e499f8b295 2b7c31060e86982dbc292697eb15e1cc80aa6887 87f5ea762399ff9348f41e88227daf0826723cbb ee4e224404c4b6f99ca1261c9c217ff5fe87f741 272842140d9899c7b23dd8892bb7fd0721fd547d b8e444256db03bf3ef9a6cb30b430aaf1319285b 763dbf4cf3eaee3f51a2ea36e26a017cd5df70a1 5df0ecbe1213afacb87ea7d864c42354d8eb05fc d80e89353d5ac18af99b465d24ff67c41dfd82b1 5d2f8fe712e56fa2dad389fe81d962c9bc8607da 1c88d6002d70980b0eeda71be3075dd147dc9539 e26c354174464db653a761742d2e96641f97a5e1 bb1f80d3379afcac078f2e9b49928dbe10423249 851f4d81eb8697c6d516d776919e85dcf352c4eb f67c917876384207996421cb232701901d91cb53 dec0e916ff96618a64391a363c87fa7a5876332d ff8fb771c5c693e182a6d2b6e6aed40e263ddb04 3061cdf18d964cb7597130fd65e5b95ebeea26be cf8fa6eecd2b128988dc660bc1e661d11eaa552a 2a3be0c12f290fb2a3f3265dde729df439837dc5 38d95ca333589088419b7abaa757e730f64a2d7e ac1e1b4a8099ce967c442cdda0a984d036d26662,,Standardize install paths and cmake finder,I've made some changes which should approach Simbody to the standard guidelines described by Debian policy and AFAIK they should be quite cross-platforms improvements  although testing in Windows/MacOsX would be nice. Detailed list: 1. Use GNUInstallDirs  which should provide canonical paths aware of the platform. 2. Change all the hardcoded paths to use the ones provided by GNUInstallDircs (CMAKE_INSTALL_DOCDIR  CMAKE_INSTALL_LIBDIR  etc). 3. Adapt and change name to cmake finder  generate it from a .in file to be aware of CMAKE_INSTALL_LIBDIR.   I will move the debian/ directory out of the source  but I have leaved here during the pull request so the great @thomas-moulard can review the debian metadata changes and maybe provide some feedback.
simbody/simbody,25,2013-08-30T07:47:49Z,2013-08-30T16:54:35Z,True,2013-08-30T16:54:35Z,8a80ec0a10d7c342b215d2521284d7e5d0998b2a,1,16,35aff561e8f0172812bb23f5eafc2badd32b996a 68c62fbea1db1ed6a36154d2364a6649492a682c 30230517e50eace1894198b010da189e6f3994c2 e26bb009c5d99efcffd45532710945fb45bdeebd 2a883cec9de062a1b5e0aa8c6a6d047032399c2c 3d18769d6daec83f215c6d862bb0db3b7234ac29 e03a99ffb4f021ab78ecea5d7f2d17d29be415b1 98abf8c4e96878d1759eee655dbbfbf96ba2aa1b c07a614feed15cab36198fd6d7701d254d5729d2 770acb2849b6937d73ca0ffc46be3b458bc32600 ccfab77e960aa429d8e7e25a426435fc33f7fbef b3457f87c866b5526b2c6fbbcc04d14810665175 4c177c491e55f31d1068708d46410c5d3700c592 c85f5acafd422ef82d5c6d7906a677d99968385c 496bcf8f059eebb6ee00fc3a17888ce9f53d0b1f 980de10badb5298a7fd13d3be489e100fd48c1ef,,Automated testing using Travis CI,You can view the tests as they're run  right after each commit  here: https://travis-ci.org/chrisdembia/simbody/builds. This is set up on my fork. You can see that the 8th test passed. To set it up on another account (user or organization)  see http://about.travis-ci.org/docs/user/getting-started/. Below  next to each commit  you can see a grey x  red x  or green check  indicating if the install worked  if the tests failed  or if the tests passed  respectively. The service is free for open-source projects.
simbody/simbody,53,2013-10-19T01:55:53Z,2013-10-22T03:47:41Z,True,2013-10-22T03:47:41Z,ede430174d64839747d3f137d88d4ffc00ae8aeb,22,4,c0fd1dc71870fb6501d819e52919e3a211beab8a e386b0ba33ffa42e747e9cfe16c303972f6d1b47 9d574674b6c2a5ee04548e4df42394cf3884e3b8 792d4a2ac0d734b80edf4ad8cdd6ef41367759b8,,Fix issue 27,Addresses issue #27. See commit messages for details. The text 'VisualizerGUI' does not appear in folder/filenames or in any files  except  Word doc's. The name of the VisualizerGUI is now simbody-visualizer.
simbody/simbody,170,2014-06-19T16:49:26Z,2014-06-19T17:08:54Z,True,2014-06-19T17:08:54Z,93532c28252be2c734d4a35cc626abc5a106be57,1,1,6f732f64fc3ff6705248febb031e4b642a4e0321,,Print test output upon failure ,One-line change to .travis.yml.
simbody/simbody,166,2014-06-14T23:06:48Z,2014-06-16T15:38:50Z,True,2014-06-16T15:38:50Z,40c50fba56f9ff7d83515194d365ada4af5da76d,2,6,ed2dd360d8329fed8d5d0d27a02bc68b6493bc6a 3b2eb98f4c2e6463aa4ae4066b43017c7d4483c0 144c35c8de33c19946b3576acd926210e9059a69 f1e00779eb7d65ff1f02dbd2eaf305e9f052ae92 7cd323b07f5970412b612d99b8bb62e229517a8f 450db53a9aa57f49d4a4b6d61f564d8ce554dc7c,,Travis and cpp11 updates,1. Cleaned up travis file; now building 8 times: c++11 on/off  build/release  and gcc/clang. 2. clang c++11 now passes on travis  b/c I'm using an up-to-date libstdc++. 3. On OSX  if using clang and c++11  we use the libc++ standard library instead. Tested on a mac and all tests pass.  Travis takes 19-20 minutes to run all tests now. Perhaps running tests for debug mode is overkill? I decided to do this because OpenSim's tests were failing in debug even though the tests passed in release.
simbody/simbody,194,2014-07-15T18:25:30Z,2014-07-15T19:21:23Z,True,2014-07-15T19:21:23Z,b1b446ad168c82e9cd006ce920ba01e01674689a,1,2,03bd33dec536b68dfa085792f196d8fa9911e3ee 4e8755d0577a4f4e4197296a8a453947e8fababe,,Add osx to travis ,Not ready yet. Need to make the PR to see if the osx tests get triggered.
simbody/simbody,200,2014-07-18T16:39:30Z,2014-07-18T17:08:04Z,True,2014-07-18T17:08:04Z,4bf2e164950bc5398b06755926862fe4243f7f21,1,1,dba6b7349788451338e18633352877ce82e0fe3a,, travis CMake not needed on OSX,See #194
simbody/simbody,202,2014-07-23T19:04:18Z,2014-07-23T20:32:22Z,True,2014-07-23T20:32:22Z,09b9d69e15b6d28fc229d8f1c8f5e8815398006b,3,1,436cc8564de0d3dc43da2a9543e35ce112fbc196,,SimbodyConfig cmake says where SimbodyDoxygenTagfile is ,This will be useful for resolving https://github.com/opensim-org/opensim-core/issues#122 in a cross-platform way.
simbody/simbody,203,2014-07-23T23:49:38Z,2014-07-24T15:45:53Z,True,2014-07-24T15:45:53Z,f4e5df779a959ed41c6b94b511dd33c57090f57b,3,1,ce69077f57d0bbd659449b37ad020321dba90067,,Need more info in SimbodyConfig cmake for tagfile ,This commit contains changes necessary to get OpenSim's doxygen hooked up with Simbody's.
simbody/simbody,91,2013-12-18T01:20:28Z,2013-12-20T19:22:09Z,True,2013-12-20T19:22:09Z,675c05bc0c023a92da4c17f95ad6b76fdeb1a411,5,5,7d21342c79d599d72d3ef4619aca905820fbd3d0 1348aae6e601f8895e970e139e9498fffee2e04c 16502f4f0fef961bf288442cc1c63d672f416642 9355e871634bd8a857890d3f5d0488ae55de2938 78cd0ef8645195c15aa426067d9c3983f81d5072,,Fix 65 Provide cmake config file,I've created a cmake config file that will be populated at build time with the installed location of include folders and libraries. I also restored the FindSimbody cmake module.  This fixes #65.
simbody/simbody,123,2014-02-16T03:46:30Z,2014-02-17T01:57:21Z,True,2014-02-17T01:57:21Z,712b94f9ea56c7ff738a1aee101194d12d478f27,8,16,3d9dd8e811da328ed6f8e501d9e37c51869a1a14 8494c7cf79e646a13d59efefb5c1fc410d63cecd 87f126b3d37200603a5839f8696d5ca753c98ec2 e03aa744f846c577ca770a137045231253d72f8c 63e2baef2ab4bdd1d6d0a966c5ca6485f2aedc2c 90b358c8d80fe586fc9f797173c90a205883b0da a0ba8041d712106597eff643e9eb7b45d7dfd0f8 3cf78b232cc242b81b8b961e398e59412c58a1ab 9330d7fb0c435f211a1e7ff3621acffea80d39bf 8a951acfaef87abdcf9dbec7a2c9705d8587da4f 83b03e1653384a5c3ada36254096cf1ba591411a 6f37c60392d1037f7fbf4034346cce0ee195b34a eeed4912542873126033d9fee9f570f2ae24fbe0 92081684653414f5182bf09f0d9c40cffa90aa08 5656d28aa3a07530b0cff9191ef862837ae4865b 4537b6cb732e89a8fe94a3d067121b1eb71802d3,,Be compatible with c 11 standard ,- Modified the source code so that gcc 4.8.1 and clang 3.2 would compile the source code with `-std=c++11` enabled. While the changes seem minor  please review them to make sure I didn't mess anything up. - Modify travis testing to build both without the c++11 flag and WITH the flag. So now  travis is building 4 times. This required installing gcc-4.8 in travis. (EDIT: see below). - Travis testing now uses the '-j8' flag for `make` and `ctest`  though I am not positive it is having an effect. (EDIT: yes it is having an effect). - Create CMake flag to optionally use the c++11 flag (`SIMBODY_STANDARD_11`). Right now  it defaults to OFF. This is because Gazebo would rather not use c++11 for now  and while OpenSim requires the c++11 flag  OpenSim trunk isn't currently used by too many people. Eventually  the default setting should change to ON. ## Testing  The following setups all pass with and without `-std=c++11`: - Ubuntu 13.10  gcc 4.8.1 - Ubuntu 13.10  clang 3.2 - OS X 10.9  Clang 5.0.0 - Travis (Ubuntu 12.10)  gcc 4.8  Other setups: - Travis (Ubuntu 12.10)  clang 3.3 -- ONLY without `-std=c++11` - Windows  VS2013 (c++11 flag not relevant) tests pass  The only setup that does not pass is travis (Ubuntu 12.10) clang 3.3 -std=c++11. I thought maybe it was because travis was using a different version of clang than I was using locally. But that is NOT the issue. Locally  I tried using clang 3.3  and all tests passed. Therefore  I am disabling the travis clang -std=c++11 build for now. I do not know why this build isn't passing tests (two tests)  and I don't really have a way of exploring why the tests are failing.  The only thing left to do is: - [ ] Finish getting travis to NOT build with `-std=c++11` and clang.
simbody/simbody,269,2014-11-27T04:37:12Z,2014-11-27T06:54:55Z,True,2014-11-27T06:54:55Z,9005488728fee26eee7c734cf2d25a19de64496e,2,1,d50cfdcab24f04be3116957287fe052582421f3a,,Support appveyor testing ,
simbody/simbody,238,2014-09-12T15:39:13Z,2014-11-04T21:03:31Z,True,2014-11-04T21:03:31Z,123a1e92ce19d303605eac00e9e783174434879a,135,83,5de5a30a9153e7b79d12fa50ed0c7d83bb0a3cff a4fe7501c7d8e8536a90be170c4c625e1ace1992 6743cffa0fbb89fdc204debbda0a964a56fb23f4 087fcdfdf2300d2b64d21a5926daf0b0b14bc1be 9053fbd6b58acd2d628988b142c347eddea99a1a 187b8ad8ba208dcdd8b5535e0c86b9fd7d9b6804 9448a24eae5780155a992bd409721b27cc3191a2 c08d1791f9b3fd08b922ec5b7f17984e1baf6a6d 6d407fe5ab16719c8d3af15804dfe1082c0eec1e 2cefb768522b21d198fc6398f8672bddb36f423e 59321586c1d8a981dc07123ecfd386d4ec85fc58 4ccad7c673c9272e7e4145a9616c58a580e32705 9562ccdc5f0ad160fdff6a7593acd2e9f4a4ad7b 3a1d3b03ea55d18425f3a6f1943be364e93f8f62 c559616bffdc04da539568479c6bc95e325b8889 6c68303d8fd70a5ebcc98a1968c8e224c0f4657e 78e58a195ec14b32ca51420df22c748d25e50c7a 0902665043969ffd45f7ee8f1594251d9c2d1eb9 5ce1155377bff79919b83fd7fd7c59588c8222ad 3095a23180140e5003953b25cb65ab60ba5eb37d 09228685d922ca1221d2d8dea4a7947762c72bc2 94275f0dec40ff5932043c33b2300fe97e300fb9 d438899d31e8a3917942e927e97d855d990d19d6 31f4371534f05af639222edaffafdf09ca9ed0d4 b5c1d84eb80f38e3014fc324e2aa5b85e124108a 8ee9e0ba3e4d58039159332914e36334b2030c05 b5e6ebca5b858f5d4fb0dadb44b0c69b27327f39 6202533301fe57e8edcb3a49a4419a04baebf472 1dcb021f9d65109e750fd6b1138776ae8e25b7dc b7f0687e2d6213a1a8e2a95ecf4d04bf491a0367 9bbe05d73cb3a33a6203ab62474fc1b08c05fbc9 ac115356f8a5e29652bcbfc24f1d0f43b4bab9f1 85cfc134578745303d65baa000a2782b75492229 f8304a4fa59d1d77667190155bb93181281bcf90 a9d3a20ce96ffd498e94541b4d55a21b83a06601 72dff3023a83120f9f1d42937342e5fbcd6a52c9 90e569ef38add9ec0f9df8d44826a0ee10ae02c2 14ba133efaca39418ea67859816b134f4acec743 4e744ee2bdfca66cb4e1afb7fc62fb169268cc9b efe254aa5f04f52f7eb8ac405377b8de6c2a1ede a73ff98a897ff03f4cf1f039ce9c80297926de29 9aa459f8f1961d12b98ece4bfdb489518fe43a71 296ad44507b183bc25e16fd5b641d36b39ecc73d 50f902c54538a21ecbe658b867e11db65349cdbc e4e300d87632fb9d23dea76040ad6362e5540406 76bdec117195e06dc0b3dd213fdf32dbbf231f74 6bc7165970eace60633affef0a6470433c877ad1 69a53e75b11db0097920cbea19a3b1f7d789b64c ae900b8894958353bd4e1bdbcebcf37e77e3cd6f c23ef74d0aed0abd27ce8a1e0ede0366eec484dd b969f0dc16525241e654212ef3bba322cb5c078d fdbf8355f5c76d7fc8d44adff47923480b6bc24b 43466a3923ab3ac11fcaa02e82f938a8dd155437 3b92ab3b29afeadc8723529dc65785b821759338 880653a7b783811f9f9f4b77276d7fe96c162c61 3da3ca8c0d3210cec600f050942ad1422fc6010a 6d5b556db6d71cccb34806744707207966451b72 c2edbfc7b102a65b7671947ff821fbec508616b5 f4f6fe1ff0c9ade7b3f011328c36197ccc479418 127922aeb9e4ecbe0f9e2e856bca6516451b4e68 b7d5593d9831783088d491523c496285f521d173 daa8f79e4b1fbbc1f734aefa28b3996cb02120b0 6a544df910c2568178d9388d49a2a2105fd4178f a60558ba4d17e51a7f5da3955ffc34aa3393917d b348fd171b6bb8db236a82ef3f37dba1d303dd29 58e9682af44f047c279271ae8a54896487a6041a b832c85941bf71c766eb6ffd2832932a00773a01 d7ef265497005958ce0d44592ffe88dc1114b9a1 94a9cc7d23cdd1690717a9db9e6b7ffb9eebb87f 4ee2bc62a54db8484d72dc2f35cd039f30f22e26 8d10047e0246960e20180a053f8973c0571a2e88 50341e0d0ce3ea1c8dd5cb81acdade5a195d8ff7 2cd4b1d1f8fca1233b729a622f77577e9ce921e4 98542b8ceb759b4d139eff604499893799bd6f95 dff0dbde73d3d11a7c75cd2d1a0830b136a3f711 9b0e4757b579e447a35c8754dd94149cb27a2ba2 9a47a137582e6b9fdcd5e39d1452167992e91990 64f7c9af220024961c45692ab7022883a1086f60 f49b1812add9b30d97e18d22d6213710c49be6b1 990c09d6d399aae0ecc2e4b1df402c62023264ea c0826f4ae0c97fa7bf2ba572da735c96faab0966 9f5fb749168dc83d2c3dc2d5a7c810916b6b2608 95f8e67f494c3c5001f1f9034bb76c36be272ede,,Task space class with UR10 Atlas examples plus example reorganization,This PR continues PR #210 but with the source moved into the simbody/simbody repo from chrisdembia/simbody. (via short-lived PR #237). This is so Chris and I can work on it together and with osrf.  cc/ @chrisdembia @hsu @scpeters
simbody/simbody,277,2014-12-05T06:00:37Z,2014-12-05T06:24:54Z,True,2014-12-05T06:24:54Z,c9bad432f8ecf8fffdee0c3240fcd202a2b12b29,1,2,4567c652b142c62e464c1785b53a567e45924255 b3df8a8c2ba4af8549c0d4c46eb4255a954425fb,, appveyor build as 64bit ,
simbody/simbody,279,2014-12-05T20:39:25Z,2014-12-06T04:06:13Z,True,2014-12-06T04:06:13Z,8ec478114114595c78670cb16cef6f940cf2af50,1,1,4321d7a604f327774b2556af287bf592fad6959f,, appveyor Don t nupkg for pull requests ,I guess to test this  we wait for appveyor to run its test and we make sure that the nuget lines don't execute.
simbody/simbody,283,2014-12-07T23:05:43Z,2014-12-08T00:01:39Z,True,2014-12-08T00:01:39Z,c6ff6bcb4a54657c2e31b21065b126e1a753bd80,1,5,fbe693458a9af79ce25077aa4b42172d346d93cb fe5032b77f773f1372f1b27da317bda79194d9a2 4c3c61db36a5c765492edc7810e4d66e10192233 f4c24a5d906dfc367e68765da9dc8c14f08b5889 cb19fd78b7dd021483279a14f6c20e4d8ac8d5f6,, travis Fail if tabs found in CMake cpp c h ,Fixes #280. Don't merge until #282 is merged.
simbody/simbody,284,2014-12-08T00:20:33Z,2014-12-08T00:21:41Z,True,2014-12-08T00:21:41Z,dca8f87d3cb1d2a974a62a43f5180581838d96c6,3,12,4321d7a604f327774b2556af287bf592fad6959f a4c5167c2ee793f1618a2717c7d885271c5f69c8 b36dfbb2e1d9f8da9eafb671c1851779808ecbf0 fbe693458a9af79ce25077aa4b42172d346d93cb 40e72230afaea834c7a65bc7a4e656e6a9fbd524 fe5032b77f773f1372f1b27da317bda79194d9a2 4c3c61db36a5c765492edc7810e4d66e10192233 f4c24a5d906dfc367e68765da9dc8c14f08b5889 cb19fd78b7dd021483279a14f6c20e4d8ac8d5f6 b31d95c3e1dca2af968a48537959d97051f41dab 71fcd3df5d5beca6187e57d5f01c6aab726b958e 1020bc03221c411819653aac574f5d18ad99d6e8,,Get rid of all remaining tabs in the Simbody repo,Builds will fail until this PR is merged.
simbody/simbody,286,2014-12-08T01:01:26Z,2014-12-08T01:17:18Z,True,2014-12-08T01:17:18Z,a1a8e3ff1d4764af6d8a8195d4db059a0afb5cb5,1,2,db0ca63ee83688f8ce0c78998cf259e2d93951f1 f90e08647f79ed472de2ddb1159d6934f7f65ec3,,Add feedback in Travis builds about tab check when successful or not performed ,Nice to have some confirmation about whether the tab check was performed.
simbody/simbody,298,2014-12-16T01:15:37Z,2014-12-16T03:41:38Z,True,2014-12-16T03:41:38Z,99300094e30c9ae43f9e1ee96340497784102404,6,1,5ad5afd73458286b452cd3c4ff0400fe6fc804a9,,Clean up installed doxgen,With this PR I'm attempting to get rid of some longstanding weirdness with the installed Simbody doxygen: - Got rid of unneeded extra directory levels so html is installed in `doc/api` directly  rather than `doc/api/Simbody/html`. - Shorten URL name on simtk.org/api_docs/simbody. Now the installed URL is just https://simtk.org/api_docs/simbody/latest. - The following links should also work:   https://simtk.org/api_docs/simbody/previous   https://simtk.org/api_docs/simbody/3.3  (etc.)  This required minor changes in several places where the old URL was referenced  and where the html files get moved around. I believe the changed doxygen install directory here will allow OpenSim to correctly find the tag file (now in api/ rather than api/Simbody/html).   @chrisdembia  do you see any problems here either for Simbody or OpenSim?
simbody/simbody,303,2014-12-19T03:04:10Z,2014-12-19T03:59:22Z,True,2014-12-19T03:59:22Z,643daed17cd3363c88c7ef9314927dba061a5c8e,3,2,84e9beef3bc8f3eb6321258956356bebcfdb57ab 30346e130145474cc8ba86ff68335ad4392d9581,,Remove SIMBODY_STANDARD_11 ,As of Simbody 3.6 C++11 is required so it is no longer an option. - Remove the option - Update README.md to match
simbody/simbody,304,2014-12-19T04:47:41Z,2014-12-19T05:45:03Z,True,2014-12-19T05:45:03Z,b4794f724042c60bf9dfdd36ddd218a2c814ba70,2,2,3bfae4d8545780538eec38ce961404ef368527a1 5c149d70f151b88b9a02ae8df1b860f07a37aa7e,,Nuke some dead code,We no longer support VS2010 so don't need to cover for it any more. Also  following Chris in opensim-org/opensim-core#296 I deleted the long-dead CTestConfig.cmake file.
simbody/simbody,306,2014-12-19T22:02:52Z,2014-12-21T01:21:42Z,True,2014-12-21T01:21:42Z,1a9b644215249e39d9db268f50d8b2b4691629a7,2,2,6c35df25081c3d35b05904acbd2b1b835bd5f554 2d46c3d933b1ce88eb9bb7dfc04aff324abee6c7,, travis Build visualizer ,Let's see what happens on OSX...
simbody/simbody,321,2014-12-31T21:50:40Z,2014-12-31T23:42:28Z,True,2014-12-31T23:42:28Z,9f60a6a11283899c39ff6d517b1c5ecbdc1bb030,2,3,6925471660df2c4f5feb99f86e212998a841a8e9 510fea8ea5145d2b9d3d57ae53a065f9367b0903 7a4c6a9d68df4160a45ec79344a46d4661585d04,,Fix Simbody 3 5 install problem on Mac ,This addresses osrf/homebrew-simulation#33.   The Mac installation failed due to inability to copy a symbolic link. The code that failed was over a year old so we think this may be due to a change in CMake behavior (seen with CMake 3.1). The fix here pushes the symbolic link into a subdirectory and then copies the contents of the whole subdirectory rather than trying to copy the link directly.
simbody/simbody,322,2014-12-31T23:18:20Z,2014-12-31T23:38:58Z,True,2014-12-31T23:38:58Z,1cdb9018f5db23f58d1f6ea5d0f6fc2abc861962,1,1,510fea8ea5145d2b9d3d57ae53a065f9367b0903,, travis Test that simbody installs ,
simbody/simbody,323,2015-01-01T01:10:42Z,2015-01-01T05:59:46Z,True,2015-01-01T05:59:46Z,613ca9926a21b6b6690ebb9c13cfc084bfc6d545,5,6,f00e2808d42563bbe778f4336b44403f798c1a27 e452d2e4e88ee725c33b32c52a7045d92be57e06 5542b65fe3926239cd15c3e276fa9a6f724ffe22 9aaaff7df20c76bbe3236ac25d73ef671301d281 03ffed282470e60352d4c86e60e802807e249a28 29957af01cf175845b4a5f8864753ce5dff1e319,,Backport from simbody 3 5 1,I cherry picked the commits added for the 3.5.1 release back to the master branch. This includes an installation problem fixed in PR #321 and a change to make Travis test installation in PR #322  plus some miscellaneous changes to changelog and readme.
simbody/simbody,339,2015-02-09T01:54:32Z,2015-02-10T20:20:49Z,True,2015-02-10T20:20:49Z,34258e257f669db09bbb234cd3be19a6d373415e,4,2,f1c9808fc7a2c9ab5d09455dfebe251042edbc11 17dd918daca381475849fd8c8985174c97cc8aad,,SimbodyConfig cmake allows relocation of installation ,Previously  SimbodyConfig.cmake contained hardcoded paths to the installation directory. This is fine on Linux  but may be an issue on Windows where users choose the installation directory long after the build process.  To do this  I used CMake module that comes with CMake 2.8.8. We currently only support up through CMake 2.8.6. Since Ubuntu 12.04 uses 2.8.6 and it is likely that our users will be running Ubuntu 12.04  we cannot use CMake 2.8.8 yet. Instead  I copied the necessary CMake module from 2.8.8 and committed it to the repo.  I tested this on Linux by compiling a Simbody-using client project  and by changing the name of the install directory after the installation was complete. In both cases  my client project was able to correctly find Simbody. I do not think a Windows test is necessary  as I did not change any platform specific behavior.  @scpeters @j-rivero could you take a peek? Thank you!
simbody/simbody,340,2015-02-10T20:24:02Z,2015-02-10T22:23:55Z,False,none,418670e0bf25fb8bddfc04de9e14df6bb3e43e35,6,12,62fd99e8d1eaab0888d03b0bca7a0a384f27e373 717c2376bb969b276e0b552c72ce10f7daa939cb bfbae4f6168a255a65689dfde7e65f3732b1e6be 88d37b831a9b26d0f594001bf0c55df0ba2fb20a aa13d2229e9e7a6a1a3666ea482777c58744adaf 9346dc5846f394237ec8bffa3b5dce74314de980 ed73dd53939f4c63491851469aa4691e1805d57a f1c9808fc7a2c9ab5d09455dfebe251042edbc11 17dd918daca381475849fd8c8985174c97cc8aad 8706c32b4637b1662772f39125f3df81b43497e0 7595e38279ece6ce0a0364c3a5e584f0eff9babd af3f0c65c4b88c940f16e7334db5c9cb401c87ec,,Cmake config relocatable 4 0,Duplicate of #339 for the 4.0 branch.
simbody/simbody,376,2015-06-02T03:20:30Z,2015-06-02T04:43:18Z,True,2015-06-02T04:43:18Z,6117c11dba4e670a859b8c833443b2b2f38b64b4,2,1,f3302649030f7079dcdb0d7f439099b55839d467,,Attempt to create v3 5 nuget package ,This is intended to be used for testing the opensim32 repo.  Related to https://github.com/opensim-org/opensim32/issues/19
simbody/simbody,362,2015-04-20T01:23:15Z,2015-06-07T01:48:56Z,False,none,b15a23bb442d07ff4680ccfd3fee03d09c7e081c,1,2,ddfcb46c4e65daea8d1f451c3f9045ec463a906d e673904f1a1774c74a0775ee0e6278752748aca1,, travis Use container based infra and ccache ,This should speed up gcc builds from 6 minutes to 2 minutes  and clang builds from 4 minutes to 2 minutes.  I'm not sure what will happen to OSX builds. Let's see what happens when Travis tests the PR.
simbody/simbody,392,2015-06-13T01:31:56Z,2015-06-15T06:47:39Z,False,none,6f5df609958d49c35ec4a2affebe2e270fc5e726,2,16,22b176d89e760c3c3ead8edf7d953f7b47003b1f 0ef65e2fdc8a63598799f378df17d06996e5de30 3296ffebba3791bb7d43eff1b0de4dd66e2ff06f 6a719d1c60e27ddc7bc446d163acb842e3fed4ce d830b194bd99b2408e8b025195665d83b80f4d02 4af4ad742f35f7a8242e97e73d8c8a92049824dd 8f51e70c9cdb5cac220781f2e5f4e30a505c9cd3 ca6e9c39f2e55038fc4c8b84abb5043cb2d8bfb6 1aefaa390c476bfde4b0d9cbb95264cae6a1acc5 8fcb88c5a508805b36406f7e6f0fb9b1c5de3922 710ddcd2bb7bbbf9f91c793821ce05908f710d4d 7a25b2e1b5a9c029d515cbc3537a6201c20e7e4e 70048b76e92c9ab42a3f14030f8a8c04420d6d08 c5ecabedc44c09b4d101f4c712b020ca95fd618e eda4af13dbf297ffe3aec8ea87633814bda9374e c5cf01f1f7506ece01bfcae7f20b7f05d74c62c4,, appveyor Try using vs2015 ,
simbody/simbody,402,2015-06-18T06:00:34Z,2015-06-18T20:04:14Z,True,2015-06-18T20:04:14Z,2733e4da5ae87a40e81d6ee89bbafd318922f315,40,1,fb861630b598ce76e3c58607285eda2f73e40bfb,,Descreamify cmake commands ,Performed with this bash script:  ``` for file in $(find . -type f -name '*\.cmake' -o -name '*\CMakeLists.txt' -o -name '*\.ctest') do     echo "Processing file [$file]"     for cmd in $(cmake --help-command-list)     do         perl -pi.back -e "s/${cmd}\(/${cmd}\(/gi" $file         perl -pi.back -e "s/${cmd} \(/${cmd}\(/gi" $file     done done ```  All changes were (quickly) manually inspected.
simbody/simbody,417,2015-07-28T00:08:01Z,2015-07-28T16:27:37Z,True,2015-07-28T16:27:37Z,cc41aa58f14314b95623d91779afa6e8587ef8ab,5,4,b52cc1a829b99cf778a905c35def447c467d01a1 78d6e7e8b297e0100339d2d6caca64553e76f736 29e1443df9de708043cf7fff32b1b85824b26f50 03081a0719ebfe92131f5d0a87f2f4ad701f4393,enhancement@OpenSim,Add NullOnCopyUniquePtr and regression tests,Added smart pointer `SimTK::NullOnCopyUniquePtr` which is the same as `std::unique_ptr` except that it adds copy construction and copy assignment that leave the  target null. This can be used for owned heap-allocated objects that are "local" in the sense that they should not be copied along with their owner. That allows use of compiler-generated default copy construction and copy assignment for the owning class.
simbody/simbody,419,2015-07-28T18:49:15Z,2015-07-28T19:02:19Z,True,2015-07-28T19:02:19Z,88c37a8811dd8a8583fa6b08787a39af9d8dd244,2,1,9578d0793fd71e0de0047f3e8061952b056afcb2,,Switch back to build with VS2013,Added some more constructors to NullOnCopyUniquePtr rather than inheriting them  so we can continue to build with VS2013.  This should allow the new smart pointer from PR #417 to continue to work   but with VS2013.  /cc @aymanhab @klshrinidhi @chrisdembia
simbody/simbody,421,2015-08-03T18:19:08Z,2015-08-05T17:26:53Z,False,none,b4cc175662987f365f711d3307938742d528e993,1,3,ddfcb46c4e65daea8d1f451c3f9045ec463a906d e673904f1a1774c74a0775ee0e6278752748aca1 aaaa12b42128f3a8c60b1a8197f0ed240f043831,, travis Use Travis CI s container based infrastructure,I think Travis-CI is trying to get people to move to their container-based infrastructure; build times should be faster there (guaranteed 2 processors and 4 GB RAM compared to load-balanced 1.5 processors and 3 GB RAM).  This PR does _not_ contain ccache'ing of the binary objects.
simbody/simbody,425,2015-08-11T04:48:54Z,2015-08-11T15:58:27Z,True,2015-08-11T15:58:27Z,95dcbf533c7d16284cf592e182ccb6dc2327b7e9,2,1,f989aff4bec8999a9fb5936527ee3da159ed3a47,,Update appveyor and README for vs2015 ,Let's see if this works!
simbody/simbody,445,2015-10-23T06:00:13Z,2015-10-23T16:56:17Z,True,2015-10-23T16:56:17Z,1c0193c09526d2aedc2a7fba7439efda44998c91,4,2,2df56fe9a779999139ac0f024d77e248123a9c0a 6ca9fba3c0a0a20bece3005265d43833bde3ec2f,,Upload binaries from travis to bintray,The simbody bintray website is here: https://bintray.com/chrisdembia/opensim-testing/simbody/view.  The download zips are here: https://dl.bintray.com/chrisdembia/opensim-testing/
simbody/simbody,446,2015-10-24T00:23:50Z,2015-10-24T02:56:13Z,True,2015-10-24T02:56:13Z,e0b7260d47a02cf5d3afb35dcceea0e7a7759c79,1,4,35c7b44981b8775d98f77ca95b244f93959d84df 782ceddc8cc3df8d53fd45abfc12bcb0bf04d1d7 6ae53acf307aae34d178b39b5128dc48aef57da9 d31b34269eaf3560dbeb0304f7ef312d76fdf862,, travis Upload debug build to bintray,This PR adds a debug build to travis and uploads it to bintray. The debug build is used to test OpenSim in debug.
simbody/simbody,461,2016-01-21T06:33:05Z,2016-01-22T17:34:53Z,True,2016-01-22T17:34:53Z,971acc19e584491b698e42e4a8033cdf21da5045,6,9,2e33cd0f48930ed8378f5f39563ac00c52f57193 275e0b54c1f3dc1f2800db06336a732d7bb553b5 03013bc0fe15de4b38d2356739480c4b772c7078 f3cea2f9bcd048ce9120d573438c3d7c311084bc 0351e6fc2fa64516a4d452b6fc1d769f0b4b9d90 68b022087e0ef925055794de815fa6bc3caeb4cd 961cd036fa04affa602a6864306f812bb51c68fe f2e8188fe492be2675febb2906cc45b5be0bb907 f6db5945e6a99040e829b3500ba1518573a2c9f6,,Canonicalize NiceTypeName and add XML friendly version,For serializing arbitrary user-defined templated types as is necessary to resolve issue #305 (State serialization)  we need a unique  persistent  platform-independent  human-readable  XML-compatible string to represent the type. That string can then be written to the XML file  and then used as a key during deserialization to find the correct registered deserializer for that type.  Simbody's `NiceTypeName<T>` class is the right idea  but was not producing canonicalized names. This PR modifies its `namestr()` method to produce cleaned-up names  and adds an `xmlstr()` method that processes the clean name to replace XML-unfriendly angle brackets with curly braces; that is then suited as the registration key.  There are some SimTK namespace free functions introduced for doing the string processing  which requires the C++11 `<regex>` facility. That in turn requires at least gcc 4.9  so this PR modifies the Travis installation to use that. This will affect the minimum supported Ubuntu level for Simbody except for users who are willing to upgrade compilers.  Known limitations: types that are in an anonymous namespace or are function-local still produce ugly names that are not platform-independent. These must not be used as types for serialization.   @klshrinidhi  @chrisdembia please let me know if you can find flaws with this -- the State serializer will be counting on these type names to be reliable registration keys.
simbody/simbody,449,2015-11-03T09:03:02Z,2015-11-04T19:28:58Z,True,2015-11-04T19:28:58Z,165e5c8b9a626878575aba8dacea07a9603f6fdb,7,4,07b44a4f2bc76d531fb0392257054d9bc43b6fd2 4f93be5f632657a9986f8948a80bc6e32d9fb4ac 9035fe1bcb132c4d04ffad4773571165c94ca0c4 ad2a0e6ee9f92631370f5480ee18182705f4419f,,Remove need for link_directories ,This PR addresses an issue raised by @elen4 about removing the requirement that users call `link_directories(${Simbody_LIB_DIR})` in their CMake project. This is done using imported targets that are different within Simbody's CMake versus in the SimbodyConfig.cmake.  This PR requires a little clean-up before it's ready for review; I'm opening the PR to test the changes.
simbody/simbody,463,2016-01-24T01:06:00Z,2016-01-24T02:24:12Z,True,2016-01-24T02:24:12Z,018c6c79cc06ae8f886c7d5fd5a58331b6ca22dd,1,1,4b1c5b966e137904c73fd59abc3e0288b9200b84,, appveyor TreatWarningsAsErrors,
simbody/simbody,481,2016-04-08T11:29:13Z,2016-04-18T02:12:06Z,True,2016-04-18T02:12:06Z,a5a6447718671d899f476754f5c95474b0a03b53,2,4,1563298fc9085665443ad4335cfc18c801427c45 d9770bfbb53fa89d0bdecd6c29c27ba05efbdd32 4ae2f7210912c3f9bf0cab1979fa2cabe0432dd3 140b4397b69ac02cbe07b723b9531ab6d09b86e6,,Added second AppVeyor job for CI testing of OpenSim on 32 bit,AppVeyor now runs 32- and 64-bit jobs. The NuGet packages ("simbody-x86.0.0.0.nupkg" and "simbody-x64.0.0.0.nupkg") are used by [this OpenSim PR](https://github.com/opensim-org/opensim-core/pull/921).
simbody/simbody,484,2016-04-18T19:54:40Z,2016-04-18T23:33:45Z,False,none,128a85828167b60294c8ff8d6b9d2f5fb8fc3ac7,1,1,fa66b22278e8db6b62c053161e9c657bea296ebc,,Use old AppVeyor build worker image,TestMassProperties fails on 32-bit AppVeyor using the [recently updated](https://www.appveyor.com/updates/2016/04/16) build worker image. Use the old image for now.  Fixes #483
simbody/simbody,551,2017-02-25T12:37:44Z,2017-03-03T00:34:01Z,True,2017-03-03T00:34:00Z,31333bb323945e4b08be5cb6151d43832895c7b3,9,14,f3fde410c627bd96117a034dea9230d1b545f4ab 4d4a402a708c4ddde83c7bae8d427e9a9d4b37b3 bbde5ca1ee6266ec76034fdc1014404974b4e374 c20ff7508ebcadb0d2374317bc138791894a0762 f3582377c45fd141849a852817d53e7f48cff02c 0bbf1efb0ff62ed65a71b8ac2f7cdba6d42a0099 f3d1ba96d73fee1b8b674f164780b3f153be29e3 5dd4fcbf3f3efe21d4aecd342e2b367e36beb127 9d8e689eaffbc21c68595482c31c75357c256a8b 5d6bc2625675b586c17389e0e6bb8fb3fb9ea76b 94f256dd5c8cca62237af58b810b4e793edb1f41 faf6321d153476ce8ba03c70444a22d9467975a4 5a71fd918bca2a109e4ece6fc9f951fe47793078 edeae475b1c128fa8a8166826323c9170be7e52d,,Add coverage status of simbody with gcov and codecov io,This PR adds the coverage status for simbody    It tells us that 50% of Lapack is covered with existing tests.    The current result can be seen here:  https://codecov.io/gh/Gjacquenot/simbody/commits    How it works:  It uses gcov to create coverage data  and continuous integration with Travis sends this data to codecov service. codecov parses the result and proposes a HTML view of the coverage.    I had to change the build directory: it is now in the source directory. Otherwise codecov fail to parse coverage result    Once this PR accepted  one should create a codecov account and update the README.md for the coverage badge (if adresses I have written are incorrect).
simbody/simbody,557,2017-03-30T02:57:14Z,2017-03-30T16:23:21Z,True,2017-03-30T16:23:20Z,9e5749187d9fdcbd55d0a7f01c7b98ada7f1fcb0,3,13,1fed6872021af4cd88205d76611211530e787628 02833e01a61a628ee2a9b66055c6de504ad914f3 c130b89bc11310319c4a14fb5202ad8dc76dc315 beff9e4005cd75971fb0bff578801f473abdb41d d40d66b5dedb94927c66187d82a1fc14d60b3103 e4c77b3a147b02a73242793c420c0560f95a2876 f315760c9c7065ff85e9e83dc7c1a054188d2fb6 53b6a7b1c8988172b56ccd4c2f90648ff9386298 04d101f4af4441e89581f4b47a59f532ecea968c 37814f07206ab3435e2344bf1e0b66768f771eb8 cb2e3d35ab49be64c23f9e19172086ba4a9a8cc6 646b37cc9131fa107ce4710b7f647e32d5655e04 4a81cf2c260d7d907509874dd538f8a2628c365c,, travis Upload simbody binaries to sourceforge ,To speed up travis builds for OpenSim  we previously uploaded Simbody binaries to  [Bintray](https://bintray.com/) after successful builds on the master branch.  However  we have not been able to upload new binaries to Bintray because  Bintray only lets us update a given release about 100 times.  This means that  OpenSim's Travis builds are relying on a very old Simbody build.    In order to maintain this type of cache  we must move to a different server. In  this PR  we now upload binaries to sourceforge  here:  http://myosin.sourceforge.net/simbody_latest_builds/. (Note: This location is  deliberately somewhat obscure so that users don't really stumble upon it; it's  really for development purposes.)    I wanted to avoid storing a plaintext password for ssh'ing into the sourceforge  server. This results in a fairly convoluted script/procedure. I have tried to  document what I've done so that I have a shot at reproducing the steps in the  future.    I verified that these changes work; you can see that some of the binaries at  https://sourceforge.net/projects/myosin/?source=navbar .
simbody/simbody,555,2017-03-27T07:16:54Z,2017-09-25T18:33:33Z,True,2017-09-25T18:33:33Z,931a8c241a2693a10a26119e2a9f00fd3cfb1ac5,1,3,61707f9c79e63ebbbe8150ac45972d6ba5c69aee 9de24b233d946a3bde49ec5f59843553d29ea3b7 ec609c1290f4f2c6aa0c80b282d8528916573746,, travis RelWithDebInfo Release,I would like for the Simbody binaries built by travis to eventually be used with the OpenSim binaries that are distributed to users. Initially  I had thought it might make sense to distribute RelWithDebInfo binaries to users  but since @aseth1 recently reported that Release binaries were substantially faster than RelWithDebInfo binaries on Windows  I think it makes sense to release *Release* binaries.    Therefore  I would like to switch Travis' build types from RelWithDebInfo to Release. This also helps make us consistent between Travis and AppVeyor (which is already using Release).
simbody/simbody,588,2017-10-19T04:23:58Z,2017-12-06T03:08:23Z,True,2017-12-06T03:08:23Z,0068aa460e353ca53e98225d663907d97cb0bd4f,8,23,e1ca69cfe07719c91d205c7037ab739707d266af 991265c2c9e3a8706bf43e703bc87269fb3f1878 f60587f22a97a24d01b07ea0418737cb2e933b1e 248eb7de0198e353bba1e149b810971f6067acb1 7c3546aab04279a5aae6e47a3cb847fb9f538e88 627511e38557f5c1e0d676f2a2896d8450eec8d5 c091834e35347241775a1a75699435cb18d75776 a1c05691ff4c4ed179823acf625af8395283dd78 496530edc8715074f4c41593c2096608bcd8d955 7d2275dc5b630cbc0b444ada533e9f7d854ab226 a2f33740a940be65be49f2dd0fb6f9364416c7e3 ddf8256458e91fb985ec67334f32f664fdc6ab0a a493e99811103ead6685680e0d438c4943a5f20f 9bc2fdc2ab41dd4f3eb1c9fc2df26aaaa0fa2477 cfbb42640babc6a90e7aafa2c4010d47eedfda36 7253364c566bd5caa164da24a9e6dbe611067cfa 1564700c130e189aace30104b9b1f0d65d65a103 df1c4e4bdd241e267d5bacf0ba2712e145e8835a 70bcd5801d57c4ec3299af996c296fafe26ddf73 bb29c91efd7927e24528e96e283f1e2b56c47d20 d5a72c48974c2ea00599b4af9a8bc529efa40789 29852ca63d64c4c3099b8a808a0b7dccae5a5a1d d2c3b0e421ce5f7ce230c94144f1c0e6c4169bb4,,PR CMake,In this PR  we modified the CMake files needed to build SimTKcommon with adolc    @chrisdembia     Note: @chrisdembia  there is still one of your TODO in adolcTarget/CMakeLists. Perhaps you were still intending to do something. We can look into that when reviewing the PR.  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/simbody/simbody/588) <!-- Reviewable:end -->
simbody/simbody,598,2017-12-15T00:26:18Z,2017-12-15T19:30:58Z,True,2017-12-15T19:30:58Z,81fc6c5d8c85e868063d128ed21822001927bf37,1,5,b71f6a07ab31419bc8cde5e41a9dc06186480aa2 3c972388c38f02ae61660aa9fa9191ed68592795 402f55cc1ccef9bff912da7d40b53530f84a9f15 21c987284cdd60c77ecfb6d579f283dbb0036ae3 2ce4e436120b14915a939809cbaead8b38d282d6,, travis Add test for ADOL C libraries,This PR adds a build to Travis-CI for which `BUILD_ADOLC_LIBRARIES` is `TRUE`. Ideally  we would reduce the build time by not compiling the non-ADOLC libraries in this build.  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/simbody/simbody/598) <!-- Reviewable:end -->
simbody/simbody,601,2017-12-29T18:36:11Z,2017-12-29T18:56:59Z,False,none,9ab5d51c5c3dff78dbb8f1d97e19f85519972350,24,36,a05c0c8a95024c291db4bd7bc3814841ba49e731 7579b65b5e2ae0a9485d2386fbb6c062539e75d2 46e6b249a4beb256356d868f9439ae9b34e37dd6 2cedab379b8dc4e22dd42ca24d25c8e3671a79b9 6c33e283166a5f9743759c89484768cf318ed3c4 4b329f1b8ca1d2c491fa9e8313018e931f559fe8 86d4243f8665b7b606011f6ca88c502f801e97bb 38be72e55d5258efeb1d8d738bc700b39dd0cc16 302d43c09240c0db4bd7af1e0bf15de0f6b2652d a50aca407cc0c8fadd4fbf27c7781a7bcb2a87ab eb3451524d6ab1ef29178c3bc22225f202440685 cfb68c86a6b21246e3751b7d9659a5fccf559be0 05dad3d0947920ec4b098821de30d135fa957695 bfeb97c6270ab1e7143dbed336cef1dc24e1414f fd5d35d693a555c43d2e67ebdfeca3a0b9439d35 6c7a06b26ee4e9d0a1acd98693af4185f6b9c61a c29ba434e78b466dbd898c6d7ac579d3b17110b9 4129737a977ee2dfba9dda881dd94453c038dcb3 ba66cbf95ba0d9c6a99c7ab57b02715ce2c30f47 2a89c5c1d1522556bd551e1ddd57b018f5ad75c7 ddae01fc332e808ec66a2ed9dbd2c841fee930fa 6ec69dbe49c67e325e54c51f116e02aa9e193511 a2a94422e66afb768e9d20b5c9f4380a4625d2b4 4a194db71c284d06637f0c890bac701247071d81 32e0054b1ce0d1fda774513325d49ccca637622c 095498b49531aac7fd4ec6b4a96390f1bc4b9071 db1842cd227a3be8dcaa040457592d08474b9731 8cbe2a1567332412f54fac9b7b5e74999a4208a9 368dd07b838d7537131106152a3999d6654eec75 4106d9c994e576d19edb1731018b62fcb66c1fb8 6ee985e9818f2dfda6521b50b3558d1b0e38293e a55583ae4bc35b1b84de93380683da41b1c391c1 44fe8cbd4d4b111306b7b8b34b07350b57a54747 18beda5f16f7b98a9fe87de68b76220de7cc7363 5e20972e5531bcd174f9453bd1acdf63e5827b3a f87d33ef4fcff2d7f2983206ef12441fe134f3bc,, WIP Replace pthreads,This is a WIP PR for replacing pthreads; see #584.  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/simbody/simbody/601) <!-- Reviewable:end -->
simbody/simbody,587,2017-10-02T06:46:08Z,2017-12-30T00:28:38Z,True,2017-12-30T00:28:38Z,37719af74295a50886f9954c8f052810430d89a7,16,9,4a194db71c284d06637f0c890bac701247071d81 32e0054b1ce0d1fda774513325d49ccca637622c 095498b49531aac7fd4ec6b4a96390f1bc4b9071 db1842cd227a3be8dcaa040457592d08474b9731 8cbe2a1567332412f54fac9b7b5e74999a4208a9 368dd07b838d7537131106152a3999d6654eec75 2471492af79127711d5c4628d706bfcada91d661 98a182f2b2c8b60bb53b93cd5167cdb47708eafe 917adf72b6474fea2d90829684ba0aa80d720254,,Replace ThreadLocal with c 11 thread_local,This PR replaces `SimTK::ThreadLocal` with C++11's `thread_local`.     Unfortunately  the Travis CI test fails on OSX because only Apple Clang 8 and up support this keyword (https://stackoverflow.com/questions/28094794/why-does-apple-clang-disallow-c11-thread-local-when-official-clang-supports/29929949#29929949).    That means that users will either need OSX Sierra (10.12) or need to use normal clang (not Apple Clang)  perhaps via `brew install llvm`.    Related: #423  #422  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/simbody/simbody/587) <!-- Reviewable:end -->
simbody/simbody,605,2018-01-07T22:21:49Z,2018-01-08T02:44:09Z,True,2018-01-08T02:44:09Z,a899db7be06ff3ae70c4b60a8922e62b5b6a8a63,43,67,a05c0c8a95024c291db4bd7bc3814841ba49e731 7579b65b5e2ae0a9485d2386fbb6c062539e75d2 46e6b249a4beb256356d868f9439ae9b34e37dd6 2cedab379b8dc4e22dd42ca24d25c8e3671a79b9 6c33e283166a5f9743759c89484768cf318ed3c4 4b329f1b8ca1d2c491fa9e8313018e931f559fe8 86d4243f8665b7b606011f6ca88c502f801e97bb 38be72e55d5258efeb1d8d738bc700b39dd0cc16 302d43c09240c0db4bd7af1e0bf15de0f6b2652d a50aca407cc0c8fadd4fbf27c7781a7bcb2a87ab eb3451524d6ab1ef29178c3bc22225f202440685 cfb68c86a6b21246e3751b7d9659a5fccf559be0 05dad3d0947920ec4b098821de30d135fa957695 bfeb97c6270ab1e7143dbed336cef1dc24e1414f fd5d35d693a555c43d2e67ebdfeca3a0b9439d35 6c7a06b26ee4e9d0a1acd98693af4185f6b9c61a c29ba434e78b466dbd898c6d7ac579d3b17110b9 4129737a977ee2dfba9dda881dd94453c038dcb3 ba66cbf95ba0d9c6a99c7ab57b02715ce2c30f47 2a89c5c1d1522556bd551e1ddd57b018f5ad75c7 ddae01fc332e808ec66a2ed9dbd2c841fee930fa 6ec69dbe49c67e325e54c51f116e02aa9e193511 a2a94422e66afb768e9d20b5c9f4380a4625d2b4 3d83174ad2122627d70400a2b1a29ca1c9903c7c 3aec875282ad0c86d17f647039a94cc9b7cacaf1 767010977846b28682f1860e240d6192cb3894da 4a194db71c284d06637f0c890bac701247071d81 32e0054b1ce0d1fda774513325d49ccca637622c 095498b49531aac7fd4ec6b4a96390f1bc4b9071 e4f21cf4018ccf00d5ba21e161b5bc884e4c4e01 db1842cd227a3be8dcaa040457592d08474b9731 8cbe2a1567332412f54fac9b7b5e74999a4208a9 368dd07b838d7537131106152a3999d6654eec75 4106d9c994e576d19edb1731018b62fcb66c1fb8 6ee985e9818f2dfda6521b50b3558d1b0e38293e a55583ae4bc35b1b84de93380683da41b1c391c1 44fe8cbd4d4b111306b7b8b34b07350b57a54747 82894d43690b60586121113f130c4d847559ad45 6ccb3199ff693dc9ade310720b3d2cebef9ff898 9cd33a575d9aeb6a16f769364bd9e48d904f0444 2471492af79127711d5c4628d706bfcada91d661 98a182f2b2c8b60bb53b93cd5167cdb47708eafe 82181264578c6feac40877bbb6631e1af0bfe2ad 917adf72b6474fea2d90829684ba0aa80d720254 18beda5f16f7b98a9fe87de68b76220de7cc7363 5e20972e5531bcd174f9453bd1acdf63e5827b3a f87d33ef4fcff2d7f2983206ef12441fe134f3bc 37719af74295a50886f9954c8f052810430d89a7 de5d815c3dd604bf7180e2c99771bf030b4db2ac 0b4ea669dca82e2893e5d055056dc3e83ed4989e 20db45ebcb87eb9cbaba77955f4bfe11084977ce 7f820b57a62661f2d2dba2e155b265d8733f3be1 d9773c0fcc747ac0e5361bea1da6db2ad4fcb03c 4a835bb68e5fced9f67afb7c0e4ec63a1008c043 15967d5e6acab0224aa778b512df5719eb45b989 db90ebbc65cc348d941a0bf222eec9a33dc1e1d5 4131e4994261346e6dad726800d8cf34db2f2f02 bbfd13710482b220345f9146f0901503f24d2b79 3b3a81e745c4f165a7e231a31a82536699378845 2548e80961849ef148af6a9d09f11698d032a44c 478c6113d70dcda0cd36fe70aa5ff566a25113c8 3a2523794f1391eba12bbddf14461123edfcdf9c 4465d917f5c8e3ebe1ddcfd9cb524ea3561513ea 6f092161ae2facbc60bee7d103e6186e0e5ea575 7e3075afbe14c0d52b1c85a94f77aa64861f7c7f e6ba3c225c00f1d3a2a2da64d34bb1d6e56d3956 d002a5ea7b0d7a058a9ebb7e1aa6c220d48d8b6e,,Merge feature branch feature_replace_pthreads into master,Now that #602 is merged  the "replace_pthreads" feature is now complete. This PR simply merges `feature_replace_pthreads` into the master branch.    Fixes #584.  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/simbody/simbody/605) <!-- Reviewable:end -->
simbody/simbody,600,2017-12-19T23:08:45Z,2018-01-15T01:13:26Z,True,2018-01-15T01:13:26Z,959cead5da6de88c1a0ed1b21ba1a7cfc0e59f3a,5,8,3b8454c06392cac1f51a8874ce2ff169eb8664cb ed5ed56e33530cf9ae5496366a594c7048a42ad1 cb3a43cdb8c91c59f56d25f6c7cf3196fcb4e2f5 8d2bfb5005eab4d7082cce66362306f05ca98d7e 5ea2ecb8c70cca07b72274e7e628292be7224f82 e0fb9e6cf1529321cda3e1c4ae5be28a8452d15f 56813b7c217686a18828a3676b75e1eaedbd89ac e98b2852ce1b018a707b96552ded92ec5fef3b5c,,ADOLC Common,+@sherm1  +@chrisdembia. This PR contains the changes in `common.h` that will enable setting`Real `as `adouble` when building Simbody with ADOLC. However  for now  `Real `is still set to `double ` so that we can build Simbody with ADOLC in CI and have tests. There are a couple of additional minor changes in `common.h`. This PR also contains some changes in the CMake files that were needed to copy the ADOLC dll that is needed in tests relying on ADOLC drivers. `simbody_cmake_macros` has been directly copied from one of @chrisdembia's projects.  Finally  this PR contains a simple test case that does some trivial use of `adouble `  ie it computes the derivative of a simple function. Please let me know if you would like to see other tests in this PR.  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/simbody/simbody/600) <!-- Reviewable:end -->
simbody/simbody,578,2017-09-17T06:35:31Z,2018-01-27T20:21:52Z,True,2018-01-27T20:21:52Z,51d423ebd2d8f5ca5a4c086131f43032592338f8,1,4,203443717ee4d07ea82deeb6af4b8315f9ad24cb 50a7881ed852a0388144e536e71d8289e3d21779 7d52765727f9c0bf79ab2b024154f33020691d38 105592a2bb0bdce282e9ee27baacd81a08dcd04e,, appveyor Disable publishing to AppVeyor s NuGet feed from pull requests,AppVeyor lets us upload Simbody binaries to AppVeyor's servers  using our NuGet "feed" provided by AppVeyor. As-is  strangers can open PRs on Simbody to push arbitrary things to our NuGet feed. This PR prevents that.  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/simbody/simbody/578) <!-- Reviewable:end -->
simbody/simbody,615,2018-01-27T05:02:07Z,2018-01-29T04:17:36Z,True,2018-01-29T04:17:36Z,801cd0e79a7c53bbc93f8aa52836c4f49f2b719f,1,1,4a98902ddb4355f9ceee1fd35ce20404ccf00f88,, travis Comment out osx_image line,In the Travis YML file  we no longer need to provide `osx_image: xcode8` for `thread_local` support  because Travis CI updated the default OSX image to contain Xcode 8.3.    The real impetus for this change  though  is that moving to Travis CI's new default image fixes an issue for opensim-core  and it would be good to use the same compiler for both simbody and opensim-core.  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/simbody/simbody/615) <!-- Reviewable:end -->
simbody/simbody,616,2018-01-31T06:15:30Z,2018-02-02T01:21:38Z,True,2018-02-02T01:21:38Z,8872a13144e1389105ee3f99d3a099cd387538b4,1,3,046f16105b9ae3cccc891b8b040785459abdfba7 9ce25c3188809429da0f05f5674a45e9f157ddda 6944195026ff78345e362e377c554a198b911c62,, appveyor Upgrade from Visual Studio 2015 to 2017 ,This PR updates the AppVeyor file to build Simbody with Visual Studio 2017.  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/simbody/simbody/616) <!-- Reviewable:end -->
simbody/simbody,629,2018-03-29T19:16:57Z,2018-04-04T23:28:18Z,True,2018-04-04T23:28:18Z,d9b4804334414538e74d81d17e974b8c45ae2cd7,1,1,48c1dfecf395076bd86202053591131500f09871,, travis Set CMAKE_OSX_DEPLOYMENT_TARGET to 10 10,In preparing for an OpenSim workshop  we discovered that the `simbody-visualizer` crashes on versions of macOS that are older than the version used to compile `simbody-visualizer` (that is  distributing binaries to other machines). We can fix this by setting `CMAKE_OSX_DEPLOYMENT_TARGET` to the minimum macOS version we want to support. This PR sets `CMAKE_OSX_DEPLOYMENT_TARGET` so that distributions of OpenSim will support macOS 10.10 and later.    Related: https://github.com/opensim-org/opensim-core/issues/1835    <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/simbody/simbody/629)  <!-- Reviewable:end -->
simbody/simbody,632,2018-04-24T04:27:00Z,2018-04-24T05:36:59Z,True,2018-04-24T05:36:59Z,6b4902300850a2215f2ccdaf191edb97ee79a50b,1,1,3a505e6f15e785df4e686b8a84b291dc89a2844f,, appveyor Build visualizer on AppVeyor,Previously  we did not build Simbody with the Visualizer on AppVeyor (the visualizer was built on Travis). This PR causes AppVeyor to build the Visualizer  which we can then use in OpenSim.  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/simbody/simbody/632) <!-- Reviewable:end -->
simbody/simbody,635,2018-05-07T18:41:30Z,2018-05-08T07:39:54Z,True,2018-05-08T07:39:54Z,665a70f405f2ec2f5405452773ac9cd568f50c0d,4,1,e7fd7530f4cc73c581f444122768d0f4e79e01b8,,Bring changes from master branch to simbody 3 6 branch ,This PR bringes changes from the `master` branch to the `simbody-3.6` branch  in preparation for the 3.6.1 release (#634).  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/simbody/simbody/635) <!-- Reviewable:end -->
simbody/simbody,673,2019-09-23T23:05:08Z,2019-09-23T23:07:16Z,False,none,f8df7d8b39b67fad1263b1938ac6ef7c0249c0ea,1,1,91aaa1f2542df99542e58067078f04f6eed26aca,, travis Update from Trusty to Xenial 16 04 ,This PR attempts to update the Travis-CI script to use Ubuntu 16.04 instead of Ubuntu 14.04.     This is necessary for OpenSim's migration from 14.04 to 16.04.  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/simbody/simbody/673) <!-- Reviewable:end -->
simbody/simbody,690,2020-05-20T07:54:26Z,2020-05-28T15:48:44Z,True,2020-05-28T15:48:44Z,360b2e54fc1c7ac3fb07d513899f5b4eca23bb7d,7,3,201945d4c5c2af25ba062c84f954a8a320549dc0 d4193fdb05998001f88822bcd933f1ae46b7eefd 834c8a1122dbadad2f9fd06c396a22cbb88205ab,,Updated vendored c maes code from upstream,- Upstream commit 0bd2e9e8ec69e9dcedc2b78716a5db5c2edf4e13  - Should remove compiler warning:      "‘strncpy’ specified bound depends on the length of the source argument"    This PR aims to update the vendored c-maes code in the repo to the latest upstream version.    The significance of this work is that the current (older) c-maes code currently produces these kinds of warnings when compiled in later (>v8) gcc version:    ```  simbody/SimTKmath/Optimizers/src/c-cmaes/cmaes.c: In function ‘szCat’:  simbody/SimTKmath/Optimizers/src/c-cmaes/cmaes.c:3118:3: warning: ‘strncpy’ specified bound depends on the length of the source argument [-Wstringop-overflow=]     strncpy ((char *)szBuf  sz1  (unsigned)intMin( (int)strlen(sz1)  698));     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  ```    Previous discussions about this fix are in [a previous PR](https://github.com/simbody/simbody/pull/689). Ultimately  the resolution was to [upstream a patch to c-maes](https://github.com/CMA-ES/c-cmaes/pull/25)  which was merged in [this](https://github.com/CMA-ES/c-cmaes/commit/0bd2e9e8ec69e9dcedc2b78716a5db5c2edf4e13) upstream commit. This PR essentially tracks the work necessary to put the updated source files into Simbody  which should eliminate the warning.    <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/simbody/simbody/690)  <!-- Reviewable:end -->
simbody/simbody,698,2020-06-11T20:28:04Z,2020-06-12T18:42:07Z,True,2020-06-12T18:42:07Z,8314e2f5d615dfb19e467babd8954aa747e887fb,3,6,57b638825d031878d0913fa16878fed872459d7b 3d97e5dbb29183772c7df9643699391b54eb3697 48ebbedbb551c963b3a473e80278cbe2b49d2b10 c4441da06b86fc09225901fc70bbe12ad639eaac 8fb79ea4151bb7d2c97116cbdc2c26ca796db10b f0ba68dcc3a13537d0ffd9469173073207750276,,Continuous integration using GitHub Actions ,This PR introduces continuous integration for all 3 platforms using GitHub Actions.    <!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/simbody/simbody/698)  <!-- Reviewable:end -->
simbody/simbody,708,2020-12-05T01:40:22Z,2020-12-05T01:47:52Z,True,2020-12-05T01:47:52Z,8cad2aa70b6c30410302c9d096ad3df1d2f73750,1,1,03bca779f07fcbcb2ec15309eac5f42a4e9d1ec6,,Update continuous_integration yml,use new syntax for add-path  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/simbody/simbody/708) <!-- Reviewable:end -->
simbody/simbody,707,2020-12-05T00:37:55Z,2020-12-05T17:58:43Z,True,2020-12-05T17:58:42Z,9daf0d26ea22551a5d10114bffd9b02fa51c53bc,4,6,c3e65eef20edc33eab48ccd42ea85dea4b1a48df 7d7f408602e9c531c109970468500cf2c95a30ca db22fd509d77207eda0ed0e170f103232462ff2e 03bca779f07fcbcb2ec15309eac5f42a4e9d1ec6 727ef376a3510dcd60c5c3881f0e1563a1b55264 8cad2aa70b6c30410302c9d096ad3df1d2f73750,build,Fix compilation error and some warning in Visual Studio 16 8 2 ,Visual Studio 2019 16.8.2 introduced a compilation error  fixed here. Might be a legitimate complaint.  There were also two new warnings which look spurious but are also fixed here.    Resolves #706.    cc @jasonmeverett @aymanhab  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/simbody/simbody/707) <!-- Reviewable:end -->
