Project,PNumber,CreatedAt,ClosedAt,isMerged,MergedAt,MergedCommit,nFiles,nCommits,Commits,Labels,Title,Body
dartsim/dart,11,2013-01-22T19:04:10Z,2013-01-22T19:42:40Z,False,none,f5094f3d4ba2012f6449a793899c5c08a68c718e,2,3,72416415bde4d027aaa2d2ffdca32de7437d9c69 47003314ef6fec2794ea1b8e795aac22d3f3326a 96b196c22f23a1284457f8cb9e0c5d003075f4bb,,Eric profile,Check out my changes  and accept them if they are OK. @pushkar3  
dartsim/dart,53,2013-04-25T16:51:40Z,2013-04-25T18:00:03Z,True,2013-04-25T18:00:03Z,b49383c269f067a50a7652dc80d90cd88d7a9ace,37,3,7f0e769719166192ac999ae3838a69e46634b986 3c366cd4ae16695f118737ec148272407421ca01 adba8c2a7cdae1152f4b151a3f917266210a0936,,Gazebo support,Changes for supporting Gazebo integration. 
dartsim/dart,54,2013-04-26T18:51:24Z,2013-04-26T19:28:42Z,False,none,74b1cf459c23093f6dec201e97fab4be4351dfaa,5,4,f04fd67242e3ccf111160c18e3c5741c7cd375b7 7e0531784962ee4ad70ff62af72141dd68fb57c0 1b879dd31f9f82197910a22f905069737a9092e6 795f61b708a14836f259f50140b2087e3474bab1,,Gazebo support,Fix bug: SkeletonDynamics::setInternalForces(...) set the internal forces as zero always because the default values of internal forces's min/max allowance was zero. Now the default values are -1e9 and 1e9. Balance app work well now. 
dartsim/dart,55,2013-04-26T19:29:45Z,2013-04-26T20:22:27Z,True,2013-04-26T20:22:27Z,412238cf62ec5b048e722b01665a522064645bdc,9,6,f04fd67242e3ccf111160c18e3c5741c7cd375b7 7e0531784962ee4ad70ff62af72141dd68fb57c0 1b879dd31f9f82197910a22f905069737a9092e6 795f61b708a14836f259f50140b2087e3474bab1 d2c630cb83d2ae3832509440095118107066320b 31d6a5f1b109529413b62944a88f0563542956ac,,Gazebo support,Fix bug: SkeletonDynamics::setInternalForces(...) set the internal forces as zero always because the default values of internal forces's min/max allowance was zero. Now the default values are -std::numeric_limits<double>::infinity() and std::numeric_limits<double>::infinity(). Balance app work well now. 
dartsim/dart,56,2013-04-27T03:40:30Z,2013-04-27T12:24:31Z,True,2013-04-27T12:24:31Z,3c907601933475837fe8306ae3c3489c82a06fc1,6,1,c005e60e5cfb2bcb6c9a9e4b2c88daf538c0383b,,change the interface of World class ,
dartsim/dart,66,2013-05-30T19:27:47Z,2013-05-31T12:02:31Z,True,2013-05-31T12:02:31Z,eb5c53ca99d7398221c3ecec0115c0045eeb838e,94,63,2be040f32672d243a77fa16c3916916d2e08c21b 71e5ac507c723201e54d89993439edfef3a94ff1 47c18fbf24860b6dd9bf9f38c5cc807ceada554b 0dc42615bcb336aef3ff04abd642d7bbc2361bca 8913fbe4cf12a3b5b423eedde67f8d291b724966 e35f6f2cb3578e47baddde286442f5cb6294466f 97f51863042445c08f7aab9cedd47fcb07b49268 6ad46c65748074656f6f4c838a4559f4feed77c8 5c0e5a2f5ed66ade39c9d618817eac217b3e0ccd 2078d5db8e6e063e28a4c88d586cce218dd9d159 efedf78c336884b8a2a153b0070d0a7048bd11c2 2ccd07293cd7550a3ec0ddf94f1f7f44ea1f49b6 f33484c4f5fafe122b655eaa5dcb3e2c602479e5 7becf48165fe54c7f23160209e8408573fb9f565 159d40efae209c259eba4b154b831a8421d1b10a 1a7557e254c83813189fafe3b50260de3b078c8c 0ae6d98d1f00a01e698969c393b64ad92e9b5c1d b0ae0000ba9d02cb6d5df629f300dd5bfff97259 d81928901c3d650a90d05aac5e59b4c85c57a3f2 12748df0ef42b339cea455d27b8ad3741e633448 d88f2f10d984e749be466669088f2c52190d0f76 23c737dcd84aae96d9a36f72759acfbc5068afc8 60145a935bb075bda79a10c6d8f5ba5038a85896 b817f6bc64e5fd3dc981c2b17c57c2b5e0cbe220 a8ad2e3fbf8c85ea6e28b47ebea6295dd5dfe3a5 b0e743dbf752366bb23418b1dcd3f971353e0990 34ed73339e711d76889460cab07dd6288a4fb153 7791669f34261e590fabd7d9a693ad498dd43645 566dbdd3fdcbe82c192652f375b571a5a682454e 8f164cfd13872882ae5056f9fb37472492623613 1ed6ef2f9ce1718a5e5516419f5640f841302546 28737959119a9e5d7ae555aa1a14fd9359e0571d eb1ae03f4e5b3081e07d97355c2190c49c88202c 8da01592d35b690388a5de0f9ea3d3c8063e1a01 87285130b7794a4ecf6c2c0bdf1a6ca4619f7d35 7949e7564f7d013cf27eb7cca14338aba7f20230 e6f95a89a3546ed9069eae44ce50887018beb063 d104ceffdcfd2ff63a3a08095890bf3fcddba052 bc5806e944b7d632b9fc4688c899491007bbaf2d 8791134f001316d9323f72ed112cd11b82612486 02acbb2848c1b9fc21878d096d24d4d28ddc477d 0ffb5845d40c753161a4045b75a03f7be5b149bb 324a70d30c3d8ccad51ba30239ddd456dbfa18be d536d90a4d29d069455c29db1f0c4a6423c2d30f 4ba658f3c4b8dfead46655893daf89d59c51c0ec e490f0f3ded97697e521ec3c8db3add43c16e5aa 4edf4f5df4aeac854231bf4cce8b7ba77ae97e97 9a8e1c9fb9281efec34b8f3420dffc61005f6d42 31b9bb13a0f343a6f173c75a73242f178b9438d0 bad3a20e1ae2cef6ae9b273b8050feb3d2795739 151d4a86eb56f2dbfe2b61d36ea8689885ad0a85 bfd34d1e22d300f96078132e45dcd1fceec4e9ea 4a9f1b1a1d1838c058bafeae11b5e3ade462eb76 aa1b0ddb973754518bdf63bd4b61e33f9229e223 d21f3b58f6a70599f6b413e970c3759cce81d98d 587e4cc782083a0e117a21a12e4db94e2a1e80f6 b879239735814d5442ec288d67ed805d782ad586 08517b3a63dad60060e9221c95d3efbc7afc6916 fddc0fcec5e0d9866d9e76b1a469572761213f7f f9ad833913d70899db98d71a57838094288cbb38 1be93f94c03912c2bb47ff00acd830f8d7c62ec8 bfe490a59245246727c014f87daaf1a9e3274d03 e57a2643f1c992d75f4f239f5a51d3b8bad25a42,,Gazebo support,DART has passed basic physics unit tests in Gazebo. 
dartsim/dart,80,2013-08-23T22:42:18Z,2013-08-26T01:44:54Z,True,2013-08-26T01:44:54Z,c3eb5ad09f7b1486e0bbb85758301e1ca10f4846,1,1,54012a97725de3cea61456987e76a0ff1b6cd3a3,,DARTConfig cmake in fix 79,Fix #79 by exporting @CMAKE_INSTALL_PREFIX@/include in DART_INCLUDE_DIRS 
dartsim/dart,75,2013-08-13T15:47:30Z,2013-08-13T16:41:45Z,True,2013-08-13T16:41:45Z,9ca42f8650f4899e49ddfc679d6e19928f882426,2,1,73a4f006e927c780446e78955279c7bbd25a33bf,,Create DART_INCLUDE_DIRS in DartConfig cmake,Copy DART_INCLUDEDIR into DART_INCLUDE_DIRS variable  which matches cmake conventions. 
dartsim/dart,69,2013-06-18T18:30:02Z,2013-06-18T18:37:14Z,True,2013-06-18T18:37:13Z,021a407932559fe5b337f6937fe58039444c46ff,1,1,aeb242877305c545828249b211f14ceaeb680040,,Issue 51,Modify CMakeLists.txt to add minimum version to libassimp-dev.  I don't know if this will break anything else  but I think it will fix #51 on for Ubuntu 12.04. 
dartsim/dart,93,2013-09-16T03:00:58Z,2013-09-16T03:16:16Z,True,2013-09-16T03:16:16Z,67b93d8e79283b8fd6a424bc37568989bf41c0e7,2,1,92645670371213d7ea1aba82bef6de8a1221b8f2,,Remove Skeleton mRootBodyNode and assume that Skeleton mBodyNodes 0 i ,...s the root. 
dartsim/dart,91,2013-09-15T20:58:59Z,2013-09-16T19:32:55Z,True,2013-09-16T19:32:55Z,a851003c4a2da576047b9ca099c001e0aa725ba1,2,2,50d53e6c6b53a873ea5f5f7b7e41b4b4bcd0104f 196922890b2fdf7d5584ec02146c4c06dc1b7de7,,Refactor Timer,
dartsim/dart,97,2013-09-18T02:37:24Z,2013-09-18T04:22:45Z,False,none,1ee6ca64a63d78036d5875d50142261b2d6d740c,2,1,08ec66e349433d6dade117b011cb0aa84aa1ced8,,Add name member to World,
dartsim/dart,99,2013-09-18T10:00:34Z,2013-09-18T22:04:34Z,True,2013-09-18T22:04:34Z,05d4d62269864dd9680537b31d9a653172ce1069,17,3,1fe2827aded2231f3e47bfb051ec32a82ac3eb47 c5f58048b40b7e60c6d09b268a9e3d0c08e0d4ed 8f7d598f0b64054a96a24ad49befbe97ebfc338f,,Don t return the whole array of class member variable ,For example   ``` class Skeleton {     // recommended     BodyNode* getBodyNode(int i) const;     int getNumBodyNodes() const      // not recommended     // const std::vector<BodyNode*>& getBodyNodes() const;  protected:     std::vector<BodyNode*> mBodyNodes;     // ... }; ``` 
dartsim/dart,96,2013-09-17T16:55:06Z,2013-09-18T10:01:34Z,False,none,0f12facb227882f93a2c8fe19ced5d09b4787995,16,1,1fe2827aded2231f3e47bfb051ec32a82ac3eb47,,Remove getGenCoords and rename getDOF to getNumGenCoords ,
dartsim/dart,95,2013-09-16T22:14:33Z,2013-09-18T10:02:15Z,True,2013-09-18T10:02:15Z,67c0264516ff1cdec5387d3fa1761fa67813fcaf,2,1,8232d25d0473a12aa45a310edd73d571467b77cb,,Remove Skeleton getBodyNodeIndex and Skeleton getJointIndex ,
dartsim/dart,90,2013-09-15T05:51:21Z,2013-09-18T23:38:18Z,True,2013-09-18T23:38:18Z,48f97b571afef888779373b19dde36a82cda42f5,8,12,c14a33e5a53ba955a39586389572de14d23cb398 451154e18dd4ae38f21223cd2380845d4b66a0d1 f508a3d0bbf4063b525063ba129ea8237c329c0e 2b3baac508a2cee61ce061c59cafa63b23794074 91f728653e1637991eb8f1cdad27638c5808bddf 1a46bcc0d8bb567e1493f8bdf149b9ca60b6d1b5 13f298b2ff3aaafd1bd72c7420e0bd263854d0d5 fb27d85733ac6f31111e9378fd0e66a2bc218484 498e880637912e6b2bc651a835371327635d782c b2d07f2853a627beacb225c118fe0a81a155d4d0 a9654437e2527dbebc7641a1fcacb05d01734fc0 e3de4fb06730c166d3d240633b63b2593214be98,,Move joint limit set get functionality from Skeleton to Joint,Previously  Skeleton controls whether joint limit are checked on a per skeleton basis. This pull request move the functionality from skeleton to each joint. Thanks to Tobias for the suggestion of this feature. 
dartsim/dart,102,2013-09-20T01:23:52Z,2013-09-20T04:03:57Z,False,none,6173e485fff6c8e04a7c8dfc76096370de8ef121,2,1,96c5c4b609147797166e370dd53d717eafc2d84d,,Add BallJoint getWorldOrigin and some comments,
dartsim/dart,107,2013-09-24T05:16:15Z,2013-09-24T16:59:59Z,True,2013-09-24T16:59:59Z,0315fae4bf0834003bddad6f3d433b4ea7b06f67,6,1,1bdc9e7fb6ff2ad20b346813b9b7e6e9e5640341,,Remove Skeleton setWorldTransform ,Remove BodyNode::setWorldTransform() because the world transformation of body node should be updated by dynamics algorithm not by the user.  (The title should be changed to "Remove BodyNode::setWorldTransform". Sorry for the confusing.) 
dartsim/dart,98,2013-09-18T06:32:10Z,2013-09-19T03:18:53Z,True,2013-09-19T03:18:53Z,5a871fdd745a299628226dc1c25134aa07198855,14,14,6a09c527fe9ee0c532adc092f3de410fe15bba4b f13e0e0af0b5be59f99b29d5cdd9e7b36037c99b 24f1d5fbec6791d76805fcb2cd14026ec3a69d49 170665dbbdcbba459db8773d07858ae548d4d39d a7ce50ca57adcfc0b0b306bc82f8e55b9b273d2f cf3de19dadf5117b0be48adb6f129ce4a4beb81c b394142e5b0a6ac4e64aeb76d25a40d8ba3dca89 5b919c54b29a5286886f74cbf6911365545797e7 5e5a509268d260256c8fc1b9cb05d0678e39c411 2ffc5aa82297fab89e72bc588489cb3fa2718313 4d2b3655656ea23692c9b6b8ba1607a7ac18e471 4fbef3537b87768a2f5c8c7cbaed44b608b97f1b 39a73d2691de7fad87255def9b5e0cf73877d4f7 3520b15837e5aa0d866d0fab5e9103b911aa9e74,,Sdf,SDF is an XML based Robot Modeling Language used to describe all the elements in a simulation environment which is designed by OSRF. This format was included in Gazebo but now it is stand alone file format. The definitions of SDF can be found in: http://gazebosim.org/sdf/1.4  We don't parse all the tags of SDF but this can be a good start. 
dartsim/dart,61,2013-05-14T23:24:29Z,2013-05-14T23:45:27Z,True,2013-05-14T23:45:27Z,a11e0e9591632c44fb568786f3b2d18939489cab,17,2,807035aad16e44df35386b4162b997232465e8ed 131ebb043233b3bdb16f01619b80152e277d094b,,Primitive collision,Remove ShapeEllipsoid. 
dartsim/dart,110,2013-09-29T09:40:46Z,2013-10-01T20:26:28Z,True,2013-10-01T20:26:28Z,3dca7d72942cd0b4117c2f785a41241b04f76372,16,9,d37fd7a568f21203f325975074af46fbf9d7a7f6 f32e48e4aa6f0c241701e091f21996968fee69dd 78f3aa7261d5d355d61c55fdc67761057c1fed30 83570b2ad1c193e240b2d49996c23402877751e6 5ca0678b001a9a0dbdb7c758c359b6b2f6b0baf3 aaf713af50908b05b746d208d7c08fa1522d93ba ca4422c2b23080a0dddcb3371a909f0ad8233286 cc25657cfaec247bd3e9fd2dc2b63ecfe198c033 9939cf480379d368b1f98dd34ecf3bb4fb123732,,Add built in collision checker that supports primitive shapes only,
dartsim/dart,116,2013-10-16T07:19:51Z,2013-10-21T22:51:41Z,False,none,d6c7b62e85b41d44752d27e3ed23a57d850c3327,5,7,088c804ee3b879cc4c548680fcfcae4d73b388d3 2fbe31426ca1b8436e5e07f5634b1fb6e3fc90dd 4c2be5f8ecc4e2423f2fe405247d17c88aa4bdaf 2650002fe546cc7cc5e9468e90e651114a72d696 8becbf4c47981de5b7e7457535aecacfc3ecd5d5 5df3be994261a94a31e27fea8bcb54b44ce65832 972c7857f5c833cdfde10c438b5f4c4148a2e1ee,,Update build options,Use BUILD_SNOPT option to conditionally compile snopt code.  Build shared libraries instead of static libraries.  Use BUILD_ROBOTICS option to switch between building dart_core and full dart suite (default is to build everything). 
dartsim/dart,117,2013-10-17T20:47:32Z,2013-10-21T22:52:16Z,False,none,93cba3f9d856dfbc16f0c087b9d389635af15620,1,2,d454f45bc105d0c53decb663154c294dbdf8150b 1b945d94ad16ee699c051ee940aac0156659f130,,Fix pthread linking with gtest,Otherwise I have linking errors. 
dartsim/dart,120,2013-10-30T22:21:16Z,2013-10-30T22:46:27Z,True,2013-10-30T22:46:27Z,6669e5635ef4d6a95c2b299a83167654a355f7ea,1,1,3534a823410afb3f0f7d86381a8ac044d335ed9a,,Switch to github repositories for urdfdom and urdfdom_headers,The urdfdom and urdfdom_headers repositories are being actively developed on github  not bitbucket. The bitbucket repositories are going to be removed at some point. This should switch your CI to the github repositories. 
dartsim/dart,128,2013-12-19T07:46:39Z,2013-12-21T00:49:00Z,False,none,ce34637ad899418056cf396ac4a3413a912e7ef2,4,3,4e76e06b8529363d6d657e2a9b95ac10fb972993 b60510271f52b45298db592758005d7572d9b59a 5a0afeffb1a9f86725af8c49cacd1938bc3db142,,Add world index field to Skeleton,Pros: - Easy access to an index of Skeleton in a World  Cons: - The user have an access to the index and might make unexpected change of it 
dartsim/dart,129,2013-12-21T00:36:02Z,2013-12-21T00:54:30Z,True,2013-12-21T00:54:30Z,32c83e7c98e310331ce4aebf06002785797d54ec,1,2,441a510a7d739b3ddea068d5adeef91d1583a4e7 01e4810b1d11858139d1f600eea0efffc3b6d567,,Fix link error in Ubuntu Saucy,I got link error in Ubuntu Saucy as:  ``` Linking CXX executable ../bin/tests/testOptimizer libgtestd.so: undefined reference to `pthread_key_create' libgtestd.so: undefined reference to `pthread_getspecific' libgtestd.so: undefined reference to `pthread_key_delete' libgtestd.so: undefined reference to `pthread_setspecific' collect2: error: ld returned 1 exit status make[2]: *** [bin/tests/testOptimizer] Error 1 make[1]: *** [unittests/CMakeFiles/testOptimizer.dir/all] Error 2 make: *** [all] Error 2 ```  I just changed the place of adding pthread to the libraries. 
dartsim/dart,112,2013-10-01T20:22:25Z,2013-10-03T07:58:57Z,True,2013-10-03T07:58:57Z,899f81be65fa606338d0f63305238736a83c9484,14,6,5815b1cf4e47f36e4edd3506a056ee49711b6f19 c3d3ab31d48e496075875d3b8716fd3648b5cbbc bbbbd696ba0f307a443a9962a141abba29ee8a61 d31b2a4bf9e6f0857efe59d2132b7ce1f00fc849 8750b077803f76051f69adf67eb73bb00116f444 d2c1764804de38bddcdd2d3b84d112cd2803b6c4,,Add a functionality of removing skeleton from world,
dartsim/dart,132,2014-01-15T12:01:32Z,2014-01-15T17:02:20Z,True,2014-01-15T17:02:20Z,1fb64535e24b503c87ed92551f8228da9870d72d,2,1,4e00ece7680b94cc6e39f76b7dc9d87437017d2e,,Re add feature for rendering scaled meshes,- This commit manually apply ca605c8dba1e3f8b976a7df68688afc498afc2de to the current master head. Parent of ca605c8dba1e3f8b976a7df68688afc498afc2de is of also master branch  f359e57  but it is too old to merge back to the current head. - Thanks to @tobiaskunz 
dartsim/dart,136,2014-02-02T14:23:02Z,2014-02-02T14:29:20Z,False,none,none,18,2,6deb40ee2c27a36564847a49cfa6d7761b812e9f 1ab50aa3f9362126c734319e9df8168f98869d51,,Cs4496,Populating the CS4496 branch for use for the undergraduate animation class over spring 2014 
dartsim/dart,139,2014-02-08T22:10:15Z,2014-02-09T01:02:56Z,True,2014-02-09T01:02:56Z,3d555b358733a7ee0d560f895fd1ad38a6f37460,2,1,e8ad74fcd498ac2c4575eba977f0dc6bad55dc15,,Added missing include cstdio for sprintf,Current branch does not compile because it is missing the include for sprintf (cstdio)  and the namespace scoping for sprintf (std::sprintf). 
dartsim/dart,131,2014-01-15T03:02:52Z,2014-01-15T17:18:41Z,False,none,none,2,1,ca605c8dba1e3f8b976a7df68688afc498afc2de,,Re add feature for rendering scaled meshes,This feature was initially introduced in 09162037a542c3f360c7e526a540040c3c85d46a  but got lost when merging in the refactoring for version 3.0 in 8cec16336adac9e22501b8a8c843fc69fae4f955. 
dartsim/dart,101,2013-09-19T14:31:04Z,2013-09-19T16:57:33Z,True,2013-09-19T16:57:33Z,5d793c0a2b8528bfe9c9fab9e170d0af61d42342,2,1,7743830aa4907a006181c65eb6639aa7ceaf859a,,Remove Joint alias functions from BodyNode,There were functions in BodyNode that were just aliases for functions of the parent joint. This commit removes those functions. I think it makes the interface cleaner and it does not make the user code more complicated.  @jslee02  merge this if you are okay with this change. 
dartsim/dart,146,2014-02-24T02:12:43Z,2014-02-24T03:41:59Z,True,2014-02-24T03:41:59Z,51c48d41d57cb61dc2db1929e966b6fdcb8d244a,24,29,467dbd2de518d93133f78ee71e0093f868ab1592 e4ae3eb59db217ed17344700d4970773a61f6220 d84dc25f9454e04f97c7125a44d997a8e2a6d184 123d90c8666812ff064a4584d5423ab5c5d90726 49a7d68d63bbff6b89babac00830a04feb097ac8 19f25e74e36016eceb80f81f793143a2e2706f4e 2ef42cbbc2c8de7efcc41792f591bb341637501a 161f93f6d86780a44c9fe13442caa53cf423a0c6 df68512ae3ca470e698dbe161b0a3795cbfe6b93 f3779fcdd54b76740809090968ad752d042afd1c 40d93210238e18570ed33d1f4152cb02eac167cd dd6a57b9790f45e306472a1a2f82c169b69b023b a809567cc06bf2fdf77ee8ac72bec78a1eb18d8d 32c3aabdae658ba95f88ea2c4a0df57f6d67cb76 60494a8604c3d4d5fbb5110a9753f03765445c9c 455326870271591c954e84ccbaac0016ba526416 94e7c2fbc6425ada7cfd1226c53faa662421d8cf 055ce2d078a410cf06e9ab30caedd8155c5c6f07 399bfdf048543f34045d99483d188150fec5f1b8 8df7983aa14dc341654114733a5b754b21a4eab7 cf1fafbaf924f2fc18a2be3a89915c79d9e93132 6945fafea6c057194d7b342faf97773b3ca76c58 3c5631961cfa71ef4ffb69d0bbf41541ffc5b596 50d82c3562634e030d1bca822dcbbfe69cd62596 8c4a08e98eff79d3e7a235bc0c8398d994767836 c4d18c147ce2b05289057e0882a297438ea4dfbe a3aa458d8047a7918f30d33b96b4b8f680246d92 26bc8d9bbf7fa7e469a7b8f1a554da08345af71a 955e75d1030f48ff9ef281aff3b63eb3f52fb0a2,,Cs4496,Working framework for project 4 <rigidbodies>  with a couple more changes still to come. 
dartsim/dart,147,2014-02-25T19:46:47Z,2014-02-25T19:51:55Z,True,2014-02-25T19:51:55Z,5eb28b95226ea36a91d7ed92c8c23a6c07f0bdbe,4,3,1000d0f5a3a1a51fe8feed33affed8cfb7e41f7d 6d7357c9d16383704ce65f2d7b5734fbbd05ad4e 0acbcfdc7e6c82e529ca48e908f9c7db3e2d943a,,Cs4496,Wireframing the blender  scaling things correctly  and checking added shapes for collisions correctly. 
dartsim/dart,148,2014-02-26T05:42:32Z,2014-02-26T10:36:55Z,True,2014-02-26T10:36:55Z,445c06b63f7cd032adc917c3a7c5cf5403dd2dea,5,1,90d55944753d595212da0aaeb00d3b40e377ba32,,Scaling urdf linear collision between static and moving shapes ,Scaling to 1 the urdf models for collision workaround. Simple linear collisions between static objects and moving shapes -- no gravity implemented. 
dartsim/dart,149,2014-03-03T21:31:48Z,2014-03-03T21:35:41Z,True,2014-03-03T21:35:41Z,93bfac2c3d3314bac17d16298316bdd3bd27ddb7,2,1,a8f25ed6cbcb0b71c83b553902b167c641f8d41a,,undef for IX before redef add to CMakeLists,Adding an undef to prevent warnings / errors on W4  adding to CMakeLists. 
dartsim/dart,161,2014-03-21T10:45:12Z,2014-03-24T18:37:27Z,True,2014-03-24T18:37:27Z,c2fce2343a8ba1d2e9b1c1c664bb146106ece0c8,64,11,8243914fb5c1126c83d8cbcb4af3a6dbba5beb5e 6f0e9e109a4699be464fe7b8a09042216048e385 b4b0b9f114266bede35e7ce86857506d1a12cbc4 f6b5a095a54f4531971917996aff1865c23d210f 119148aab639f38ffdce3bcc6bdcd70b3075d9e4 63ea3ecf18214d57304283a59273e4a8c45f4f81 eef55ba086ede981a699c9b80ffdcdecd7e06a38 7ef78edb01b44f65a5e0dd1f637acef565f51129 67fc6bf170433aee2edb174be8f4353e14268473 59a240b95dfe52d92ead6e4ca0f3a890a41095c6 2690703dffd76001b1ac7c1f873ec07c4f4b0e1d,,Improve interface for forward kinematics,- Rename functions pertain to generalized coordinate - Add setters for configurations  generalized velocities  and generalized accelerations to `Skeleton` and `Joint`  Here are some examples with improved API:  ``` c++ // We are able to set configurations  generalized velocity  and generalized acceleration to skeleton as skeleton->setConfigs(q  false  false  false);  // Just store q to skeleton skeleton->setConfigs(q  true  false  false);  // and also update transformations of body nodes skeleton->setConfigs(q  true  true  false);  // and also update spacial velocities of body nodes skeleton->setConfigs(q  true  true  true);  // and also update spacial accelerations of body nodes skeleton->setGenVels(dq  true  false);  // Store generalized velocity and update spacial velocities of body nodes skeleton->setGenAccs(dq  true);  // Store generalized acceleration  and update spacial accelerations and accelerations  // We are also able to set the values directly to the joints as skeleton->getJoint("left_hip")->setConfigs(q  true  false  false); skeleton->getJoint("left_hip")->setGenVels(dq  true  false); skeleton->getJoint("left_hip")->setGenAccs(ddq  true);  // If you want to update the spacial values at once then skeleton->setConfigs(q  false  false  false); skeleton->setGenVels(dq  false  false); skeleton->setGenAccs(ddq  false); skeleton->computeForwardKinematics(true  true  true);  // If you want more simple way not considering performance  then you can just ignore all the Boolean flags as skeleton->setConfigs(q);  // All the spacial values are updated as default skeleton->getJoint("left_knee")->setConfigs(q);  // All the spacial values are updated as default ``` 
dartsim/dart,163,2014-03-26T08:42:45Z,2014-03-26T17:20:44Z,True,2014-03-26T17:20:44Z,44a2cdb5122a3803a70777e0ed18870315f078a4,1,2,6c36941bd5d689dc83ac819c932a81f36a7ae445 be5925a8e34a7372f6f92b2dc0302ac5f0fec37e,,Add OpenMP option ENABLE_OPENMP ,- OpenMP was enabled only for Windows but not for linux nor mac - The default is TRUE - Some Eigen's algorithms can exploit the multiple cores present in your hardware (see: http://eigen.tuxfamily.org/dox/TopicMultiThreading.html) 
dartsim/dart,167,2014-03-27T04:31:18Z,2014-03-27T10:15:05Z,True,2014-03-27T10:15:05Z,2b06c0589e078278345f28b87b0a8bdba87036d9,17,4,afa34b9a742cfa751daab22333402e8a978ef67b 50587109795169c3dff2b66caf2689b45a9a839a 4f55bd5574d2d248200a39c3ecf34b84020bad25 eed78fcde8dd9e3287c5a667e32d5bd798f658a3,,Add portable isNan and isInf ,- Add following functions that can be used over multi platform  ``` c++ bool isNan(double _v) bool isNan(const Eigen::MatrixXd& _m) bool isInf(double _v) bool isInf(const Eigen::MatrixXd& _m) ``` - This pull request fix #166  
dartsim/dart,145,2014-02-21T19:51:20Z,2014-02-27T05:30:57Z,True,2014-02-27T05:30:57Z,2ce09750d84bcb2ce2c92791c171edaad2173920,5,19,548c0effc6d48a8333932ffe1e28c35c10837043 b8c6ebb8d8ba4aa75fedf341c0f23a5685aca4cd ab05d9ebab8690d0f6e7228b7ba99f4e73ff8f3a c4572a6672801ea47aa052afab265cde4f5aeb4b c28a3dd7ea24e41dd0e0668b245366dae5d8f17b 97dc8127ed6a2f500e39d7a9b8e18bf16ec452d7 a255d5b047731e9a0b4d9effda4fbd1ad4415507 b4a37e287696a485db306a31ca599e302db48cc1 07242f0ab83a9819666aaa2f342587ad8db5c34c f3d0ddb1b3c59279127f376930e055bb59e46423 2a33884c83600a06e7e7703a1b02ff953250e2b9 c256cc52cc7014c436fbfaf8e78fc4fdd876673f c832e31c3f535abf69bf87d6a301d2cdf159cbb2 58b9e4eb2cc20cf3a216af9a29506a10ac83f9e5 3491db5dbb36c0c44d106eb1b0a14884d12347dc 4a1a5ab401fff62050a5c55685d6cc9def9ec01f 2472c8cae1e0770a7be6e03df8b6672f3e1b5979 c1e74d9c1dc3bbd155e6b131bf8925cd13156fb7 d655ec79b55348209326c3fc720a9a81964ed765,,Fix 100 Correction for constraint errors,This pull request slightly modifies the LCP formulation so that additional velocities in constraint space correct constraint errors. 
dartsim/dart,135,2014-01-22T21:07:18Z,2014-01-26T15:05:37Z,True,2014-01-26T15:05:37Z,3191688e18b51e8af1de1f7340d5c1b69388d5a4,1,2,42d7bd353e1209581588626fff77e90953e24b50 98d48f93db3d7fd1395bbdc06e0a5bb78cea85a0,,Fix use of boost shared_ptr in DartLoader parseSkeleton ,`urdf::parseURDF()` create and return `boost::shared_ptr<urdf::ModelInterface>`  which is reference counting pointer  and the `boost::shared_ptr::get()` returns a pointer of `urdf::ModelInterface to skeletonModel`. Then  the returned `boost::shared_ptr<urdf::ModelInterface>` is destroyed  and `skeletonModel` is also destroyed since no other `boost::shared_ptr<urdf::ModelInterface>` references it.  @tobiaskunz Could you review this pull request? 
dartsim/dart,169,2014-03-29T16:20:55Z,2014-04-02T07:01:16Z,True,2014-04-02T07:01:16Z,54dca36df7b464ffca85a9ae7b8aaaedfb3bc2bb,49,4,6341a651f1232ac8b93f58b90928e28eae84afb0 6978f7d7e7b60a841f450eda2c16e40118c9257b cb3de512328313514f9aa3ba9c9044870d18747d a6b62f98427d8aec08bdd220769371226cef1544,,Read Skeleton from skel file,Read Skeleton (or SoftSkeleton) from skel file. Added following two functions:  ``` c++ static dynamics::Skeleton* SkelParser::readSkeleton(const std::string& _filename) static dynamics::SoftSkeleton* SoftSkelParser::readSoftSkeleton(const std::string& _filename); ```  The skel file should start with `<skeleton>` tag instead of `<world>` tag. For example   ``` xml <?xml version="1.0" ?> <skel version="1.0">     <skeleton name="box skeleton">         <body name="box">             <gravity>1</gravity>             <transformation>0 -0.325 0 0 0 0</transformation>             <inertia>                 <mass>1</mass>                 <offset>0 0 0</offset>             </inertia>             <visualization_shape>                 <transformation>0 0 0 0 0 0</transformation>                 <geometry>                     <box>                         <size>0.1 0.05 0.1</size>                     </box>                 </geometry>                 <color>0.8 0.3 0.3</color>             </visualization_shape>             <collision_shape>                 <transformation>0 0 0 0 0 0</transformation>                 <geometry>                     <box>                         <size>0.1 0.05 0.1</size>                     </box>                 </geometry>             </collision_shape>                                         </body>          <joint type="free" name="joint 1">             <parent>world</parent>             <child>box</child>         </joint>     </skeleton>  </skel> ``` 
dartsim/dart,173,2014-03-31T23:40:02Z,2014-04-01T01:48:07Z,True,2014-04-01T01:48:07Z,6ec4b61d591cbac2692cda010967859e4d30877b,6,2,970262d10e3f2d8d1c2710e91f1fa63126172228 e1d801573c6be6603ceeb8e194a2ee3a1eb45bc7,,Add self collision check option for adjacent body nodes,Usage example :  ``` c++ // Enable self collision checking excluding adjacent body nodes skeleton->enableSelfCollision();  // or skeleton->enableSelfCollision(false);   // Enable self collision checking including adjacent body nodes skeleton->enableSelfCollision(true);    // Disable self collision checking skeleton->disableSelfCollision();   ``` 
dartsim/dart,171,2014-03-31T20:19:41Z,2014-04-01T01:48:51Z,True,2014-04-01T01:48:51Z,3f7be6439281e87e72c9f4f7469335ada6f9071b,5,2,05fadc94dac4b326b957a43c3794598be942079e df526fec721bbab5c2998bc5551946d09e7e8f1e,,Parse marker,Parse markers on BodyNode. BodyNode can contain multiple markers.  Here is an example `skel` file for markers.  ``` xml <?xml version="1.0" ?> <skel version="1.0">         <skeleton name="box skeleton">             <body name="box">                 <marker name="box_marker1">                     <offset>1 2 3</offset>                 </marker>                                                 <marker name="box_marker2">                     <offset>-1 -1 -1</offset>                 </marker>                                             </body>         </skeleton>  </skel> ``` 
dartsim/dart,172,2014-03-31T20:32:00Z,2014-04-01T01:48:36Z,True,2014-04-01T01:48:36Z,a15def2eb1e3a9caa473dc795930f3fe4a6f0391,4,2,936ca3e6eab9d9eb7afacb6e95ffad6fef800439 696921622c7a3ad08627c653cdf34b65b864956d,,Parse markers for CS4496 branch,Parse markers on BodyNode. BodyNode can contain multiple markers.  Here is an example `skel` file for markers.  ``` xml <?xml version="1.0" ?> <skel version="1.0">         <skeleton name="box skeleton">             <body name="box">                 <marker name="box_marker1">                     <offset>1 2 3</offset>                 </marker>                                                 <marker name="box_marker2">                     <offset>-1 -1 -1</offset>                 </marker>                                             </body>         </skeleton>  </skel> ```  Note: This pull request is for only CS4496 branch 
dartsim/dart,179,2014-04-10T18:16:53Z,2014-04-10T19:33:26Z,True,2014-04-10T19:33:26Z,cf7ff55ee256a877e959d8a9e6cbc803929deb36,5,1,73013ccb6b4802de947e24894e2539430acf6223,,Add back deprecated functions to support gazebo 3 1,Gazebo 3.0 will be released with DART 3.0 at Apr 11. DART 4.0 will be supported by Gazebo 3.1 not breaking ABI of Gazebo in next one or two months. Not to break ABI  DART 4.0 needs to keep deprecated API which is exposed at header files of Gazebo 3.0.  We found the API we need to bring back are `EllipsoidShape::setDim()` and `BoxShape::setDim`. 
dartsim/dart,177,2014-04-08T00:56:19Z,2014-04-10T12:25:01Z,True,2014-04-10T12:25:01Z,9e20e4ccac56ca540c25785eb9b02623006c02af,5,4,77b70b170a151308c44072362844db39ec4c5345 46141e8e8ee827f2364f0be958ff224188445dc7 be4edf2a31f08e9293e683a3919240c82f01a05f a26f140d5acfb6970be2c981c70c73628a5bf93d,,Fix Bullet linking,This fixes bullet header file paths and adds bullet link directories.  Currently  DART links all the bullet libraries (LinearMath  BulletCollision  BulletDynamics  BulletSoftDynamics). We should submit a pull request to bullet to provide a cmake config file that allows to link only LinearMath and BulletCollision.  Related to #174 and #176. 
dartsim/dart,183,2014-04-14T20:43:02Z,2014-04-15T15:55:52Z,True,2014-04-15T15:55:52Z,7b9ecb21b06118f65fcd0e28ea5013719a475ad2,3,2,c5e0c806a7b77b16541147948c0ca4b0c6541304 d4597b83c3d3f7fe76700089001314f7ecc513e5,,Timer Use gettimeofday instead of clock ,- Use `gettimeofday()` instead of `clock()` since it doesn't count in milliseconds level on linux   - ref: http://stackoverflow.com/questions/588307/c-obtaining-milliseconds-time-on-linux-clock-doesnt-seem-to-work-properl - Add `static Timer::getWallTime()` - Don't print result at the destructor - Fix styles 
dartsim/dart,186,2014-04-30T07:09:00Z,2014-04-30T14:56:00Z,True,2014-04-30T14:56:00Z,3b0c3e03e5fc4a5d200aaa4985f7dee4df5d7114,13,4,9b596e296a401fa347cfc037085409a4d61a1c1e 2343f55086622e58b2fdb89f182252bd09e265a7 d47abecfd6d2a19980a13a9185cdfd1866fd09a7 5ee996ee88cc9fc222e4b6186ee5d3dc7bde894c,,Clean up PlanarJoint and parse it in skel file format,- Clean up PlanarJoint - Parse PlanarJoint in skel file format   - Add unit test 
dartsim/dart,184,2014-04-24T20:29:00Z,2014-04-28T18:17:01Z,True,2014-04-28T18:17:01Z,none,226,71,69f9bf774d7d08c1036b9a8712bc22b808049c75 6793fc4d76a33a7207a5ac8afecd430cf8c07b9a 82f59eb1560de0f6de12a22627ecc60196fd0f30 decb47384a6a1c5d31e39c9871c5ec52179ee023 203e21384b4193e6b88765d11285e94d18bc3c88 6ef27e26495c523bab903f047fbf1ab031ed2d57 941bfc33b37aa35aec7b3134150e79539db6f416 1c6642665e8fb6f66546e70c3722d7ba84674378 a52dd199447f4c89b6eaa23772ed210794200663 a15a789700ae9337998bbc7a2b2e9326dabca2ba 38b51ace653162aa724da14eadb72cafc946d493 da1333da9b1075d78ee282bd8742dbbdfac9ee9d e1e30af3b6d5626e7226d1b3d1cd82756d560bb4 265a23355f325cbed074dd889de721b9ba74e01c 8a820516ca101fb5044f8478f125001a8cea64e8 dd014e0b5dfdc9ae9b8f37a25d37d1c6c230ab0d 9082950a31ec4e2c5420b97c6394072fff3af2f3 9fa52b232333f94ae27505a0df0b512734009964 4f285281d3869a77609cff7be3939538af84f519 1271d4198addbb424493a41cb3dba093f33c32cb 88a6dfc351ba88e038064a822ca3000efe147249 8f3d63f9c8beddb39bc560d56b4a1627b1e880ff fb13cfdbc92a17335d558d3d91005b7af197a4e9 9ad05d82169dc594289b6ac3828777a6044c1bd6 c5fcdfaa3eb43e4738a51625f43ec56ec46f9264 003632e4526a7af177acd6bcb2179ff5dba66551 b2266546c00ca57a0721de13383f9b0d99fec8c7 eda11ad4f3d87e4ccce0842e9fccdfab0167e6e6 1f0aeaa2deee4de0925368fdcc97d18b572f54f1 1e608555f57634acaef3661b2a17ffe011815d67 43d4f5aaf8ea94f588e262aeff2316bf8af70637 e4be0edc606228d213ceeaedb18b2969a7cf5eb1 e89b2f5a490a4bb1fb96a43db101fab570e96716 6eea1343d4c54f23ab44e9a95621558674b1fd36 9944ed8f748b88389709dc2dfff25846bc901a79 8b358b260d54d6a696e8428532214f20e63957e9 afe4519cfeec4dc12e6dd29506b8b066e2103f34 6abe9143c854ac03796648849365c7738f95586f d15ef085d1ed88f400dc36a72d352561ef00a9d0 beb68576078ef6195c522f3b0f04793fd1e4b92c 6cfc5de8c176c846a179139e4354e140d2788f6f f69448e41c461e6e66942f54145d347da386d913 985648d3fdd1c8c666f662460234948340e2c1cd 835494c5af21ec662332bffdea3abff913f97336 2a56c6c5542e3d59d8c2e1f15081364fac867bb3 821a2e74558fa33921cd00223b80712304d30352 b9d684d47d6ad939dc5d463f85ca7ef8a26b0ab9 bb00913751f70f6c510119d1285794acbea2af64 7c79c108183ba9f939b5e24b00aedd7cbc7803a5 103c06ba819fa0f94f333206dd592e8fb52bdeb5 1ff6cf73ad5ce5b15b3c47401fe3b84e5671568d 3fc57277fc5d217b6c14b81c71a158286910c289 92c7364c7f75b9ece91b84ece5b9620a25d6a6c2 7d12797b88d91994be22c5462e2fc6fdf37738f1 1b5323d6191f2675bb0193a92be6cbf8a131df89 cb749936583fd6f69fd734187275075cd1fb72e9 dbccdba0f8ddac7737ac409853aba158852bf115 a7fdaeee8789d466ce9b57810d591ce41a46a252 76d7d86d19fa3484630e340e34d4c3bf6209c6c3 d35f03fc3c3a0d23477faf410ffa6d12f32cd993 2b36fb7b175f14a4623bf4e056bce291c925015e 6307a4e554edce994f3c6d153dad31db211f8a0d cf823d18af7be4450cf06d1f14673aaf245a08b0 bc2cde663d8945dd4dbb281d3dfa655efb285c74 8ce380a6d9ffbac6f2df9d73209bc871844c0420 d4e447c5ba7edb4c211efcec9ae346eee21a376e 8d4e154dc1413d065be1599478fc3e122d738991 f19f72d74e88818eed54dc0cbe9f86298f88fdec 29c958e53c5bced47c1f0ef0b37fde1f57e954d4 084cfb66716b79ee3474d82e1459507b06c841d2 a92319a0ae92ebefc4e504b8a9323ef1c1e0006e,,New constraint solver and softbody dynamics clean up,- New constraint solver   - Improve method to construct LCP problem     - It does not require explicit skeleton's mass matrix and inverse mass matrix   - Add constrained group concept (similar to ODE's Island concept) - Softbody dynamics clean up   - Merge `SoftWorld` into `World`   - Merge `SoftSkeleton` into `Skeleton`   - Merge `SoftFCLMeshCollisionDetector` into `FCLMeshCollisionDetector`   - Merge `SoftFileParser` into `SkelFileParser`  Note: There is more work to be done but I'm splitting it here. The API is not stable yet. 
dartsim/dart,181,2014-04-13T18:04:17Z,2014-04-14T18:38:40Z,True,2014-04-14T18:38:40Z,d05d9057655f19b827b492f24f817f1e6d58afc1,13,3,282c4b7c50247b7704af8939c125038baf944824 17ea9ee11f30acb456802a0a7c451a140778364c ed769db42aa4576d8a9ba8e77443ec48c2514f53,,Clean up baking functionality,- Continues work of 4952ce135e3b3a0fbd595f9480c79f8e7bd4e3c0 and 4d1ee4df4e6fe90c986c3fa44d159d48f86e6978 - Split `Recording` class into header and source files - Exclude missing app inverseDyn - Apply rewritten replay functionality to bulletCollision app - Replace `Recording::addSkeleton()` to `Recording::updateNumGenCoords()` to support adding and removing skeletons before baking simulation results. Adding and removing skeletons during simulation does not work for replay the simulations. See #180. - Fix styles 
dartsim/dart,193,2014-06-02T02:19:50Z,2014-06-02T06:15:25Z,True,2014-06-02T06:15:25Z,7ad972cbf19c7ea76566d925153a334391528009,58,2,d56eaff373dba98e06c9f6ffa5dcd0c8577745b8 4867314cd0c4b0cfcf5cef0ab91829079ac00af5,,Add linear angular getters for spatial terms of BodyNode,- API change (as examples):   - `BodyNode::getWorldTransform()` --> `BodyNode::getTransform()`   - `BodyNode::getWorldVelocity()` --> `BodyNode::getWorldLinearVelocity()`  `BodyNode::getWorldAngularVelocity()`   - `BodyNode::getWorldJacobian()` --> `BodyNode::getWorldLinearJacobian()`  `BodyNode::getWorldAngularJacobian()` - Fix #134  
dartsim/dart,192,2014-06-01T23:21:50Z,2014-06-02T00:06:46Z,True,2014-06-02T00:06:46Z,7669b997e0ffd65a2a0faa0dc2fc4eacd046ef6b,93,14,9bca1738ae6b4559ee5169b1bf9da43c43b65a34 cb49aad1d5478da35442dd7c80f2d7f7d246fec1 cc0ae76f12a72960e3840862cbc2dc27a53f77b7 f3a5f62d2322f3049546dbe47949e4f85a3b42b8 50f604311a1bdfb853a8263cf3d070c9c2474ac7 0f931de5973122cdde3b8c5e41d74d6199d1a023 5d7d91a6528387a719926af9f8c1030a4f7b8bf5 bd8ba34ff7174fccfb1a06d63ef04a37d0cf3abe 3dc28d6e586c77968ea9b25d2181eb786165c350 290577e024deed5f00137f98830cdf38723294da 92d9e7e26bdc275af53fd68a753701d456f45014 17399902f48ecc8f963a4b68c1bdbf8f1d8fbd68 04714336f045fa7666cf583c3ff9bc17dd6ea91c 768da01373ed3899da12ea11764fac31259dba54,,Remove GenCoord and GenCoordSystem,- Remove `GenCoord` and `GenCoordSystem`   - Compact API     - previous API: skel->getGenCoord(index)->getPosition();     - new API: skel->getPosition(index);   - Performance improvement by using joint's member variable directly instead of temporary variable created by `GenCoordSystem`  
dartsim/dart,191,2014-05-28T19:20:37Z,2014-05-28T23:13:12Z,True,2014-05-28T23:13:12Z,302219abc5eb37b35ee26e4e373b390ea8b95ef1,4,3,f61bee1e2cce20f196fa9287b2bc87ff128643f5 a329335d5ed552b5c8dfca890443f95e746e11d0 6a8b17d341d2837844da6929027c79048c25a098,,Reimplement adjoint mapping function that takes Jacobian,- Improve the performance by not taking variable size Eigen parameter   - Reference     - http://eigen.tuxfamily.org/dox/TopicFunctionTakingEigenTypes.html     - http://stackoverflow.com/questions/22585935/fixed-size-eigen-matrix-as-parameters-in-template-function     - http://stackoverflow.com/questions/22650112/eigen3-passing-fixed-size-matrix-and-dynamic-size-matrix-in-one-data-type-in-te 
dartsim/dart,190,2014-05-28T06:15:35Z,2014-05-28T08:14:51Z,True,2014-05-28T08:14:51Z,ddb20bfff593a11c9c0fcdaf779d50b1965a15e8,7,1,261cf2f5e8c2ec1cedbede9c3266bfa44943d60d,,Remove back build type definition,
dartsim/dart,188,2014-05-27T23:29:55Z,2014-05-27T23:55:16Z,True,2014-05-27T23:55:16Z,5e90ebd186c36f31bb7a21adcfc80c7fde714e93,142,13,4309d158620a7200fe61f76519b99ac190bc8954 f4052468c68c137bad0ae2faa9a4b5fa0997790a 8acc5d54b70a5ebf612588c73575c50b9fc142a4 c628eb752619955d594ed43c10d9252665a3f0e3 b5d3feef0d5f77ee23a8218798f2e8403fd01ba8 3a7c84b3d653efe8ef106d6e1dd623f6478af9a2 1d16032ff8960a626df61d6bc0c185c8c04cc377 955e07d439c9350ad110a492104c400af214c39a 583c038a3248788e91ec8ea3990c62f369d994b9 997d5717c36e20d7a1a52e3b9e7c4fa3c136e88e d30b4f7ea6b7f469c3ba7fc0135461de921a561c 3228d0a1a972cf3460688fb8f95e47406ac7c68c 1dd569a2106fd53655986e6d9f096326c8d4b124,,Performance improvement for forward dynamics,- Move variable size variables in `BodyNode` to each joint class and use fixed size variables instead - Create `SingleDofJoint` and `MultiDofJoint` classes - Update copyright years - Note: `EulerJoint` is unstable 
dartsim/dart,194,2014-06-02T14:03:19Z,2014-06-02T14:58:09Z,True,2014-06-02T14:58:09Z,c8de70a6888e3a992c583cf4043b3ca2c892e6e2,64,9,bad06cd1dbc4cf182212c39b64b12353e9f536b2 23524b2c5d6e0f024729c9abd93be0feeb7943ef 5659d2d4d922e0191a3fc84d1af4f704b10e06d3 6305cf07a20b6ddba0dc2d40e18a029c4631ddd6 31cec1b22fc81ff238cd15f9f80df60dc262b726 c277eb060f39bf941021059354002948ea49f8d0 33545c9630c3c5437ece18e26327f757012c33eb dd56a864b86992da406ff41a239d3ff245e97315 faa8d805b0acafeba369502e9994f624b8554c7d,,Debian meta file for release DART 4 0,- Ready for release for DART 4.0 - Fix build error on Windows - Minor bug fix and clean up 
dartsim/dart,76,2013-08-14T00:13:44Z,2013-08-15T22:24:53Z,False,none,bcf2a2ff2969050da77c7c77153f56e2dd384e2e,1,1,d945c10082afe2e4addb19dc7175451192e039a6,,Fix 41 don t force CMAKE_INSTALL_PREFIX,Remove the FORCE modifier from CMAKE_INSTALL_PREFIX  so users can install to their own path.  Fixes #41  
dartsim/dart,195,2014-06-03T22:47:49Z,2014-06-05T08:57:15Z,True,2014-06-05T08:57:15Z,2bba9b1b99718517623b120f38ba9d9381f5e0c8,3,3,dc3579035c7ea81c91eaa7d05363d48aeaac1bfc e297aa2cbd807109bd1e94788ed18b5b9757132b 48b0bacbcbea72ab4788f3e0d7a015b7a2289a51,,Transfer the collision objects to new constraint solver,- Fix #127 - Target DART version is 4.0.1 
dartsim/dart,189,2014-05-28T01:18:58Z,2014-05-28T20:40:57Z,True,2014-05-28T20:40:57Z,122fa38aa92e034a998da9e5be7b1c1c14985122,11,2,9b52eb207259e6323064f8049adbf82d23ca17e4 51ac9ebf375236e21a66a58ea5498274858c31bc,,Remove dependency on nlopt for dart core,- Fix #175 
dartsim/dart,60,2013-05-14T08:34:54Z,2013-05-14T20:13:01Z,True,2013-05-14T20:13:01Z,6298a33185de5231b473f95861a7d539fc67d8ad,45,9,73b27cd53e5eba75af53ead179bf32249d066b2f 94d2b7acd88323314d7a528c8fee0e5218b258e0 bf49ef97fd51e21511bdc308406baafa92309b0b 5895c970646d337f7c36d0df928dbdbc6d06d3ea 5983cc652e9386ca4ec176dd8a607f972cd4f3a6 344a46ab38ef4319c8e556bd9177268034be0e26 1912bb10bfc86c719d9ec6ddb926425ddef7b53b 3d4badad158e9c1724a8f82811848caa5f543e47 1f1991325d2bbc364f00b68f02880058558a31ab,,Ready to support primitive geometries for collision,- CollisionNode and CollisionDetector are collision detection interfaces in DART. - FCLMESHCollisionDetector is a concrete collision detector class uses FCL with mesh only (our old version). - FCLCollisionDetector is a concrete collision detector class uses FCL with primitive geometries and mesh. Currently  FCLCollisionDetector is now working.  This pull request suggests 1. a new interface for multiple use of collision detection libraries 2. a first step for supporting primitive geometries for collision  If we don't need to support multiple collision detection libraries  then this feature can be removed. 
dartsim/dart,133,2014-01-15T12:13:08Z,2014-01-17T16:51:39Z,False,none,b5dba1522d840e3dc72e54e594da8c55cc0ac1e9,1,1,b344a42b0730941256cacea84513090e9b07fb57,,Remove unnecessary line in drawRRT cpp,I think the below code work for nothing.  ``` fprintf(gnuplot  ""); ```  This commit removes compiler warning:  ``` /home/js/DRCDev/dart_master/apps/drawRRT/drawRRT.cpp: In function 'void draw(const dart::planning::RRT*  const dart::planning::RRT*)': /home/js/DRCDev/dart_master/apps/drawRRT/drawRRT.cpp:97:22: warning: zero-length gnu_printf format string [-Wformat-zero-length]    fprintf(gnuplot  "");                       ^ ``` 
dartsim/dart,152,2014-03-14T13:12:00Z,2014-03-17T20:46:01Z,True,2014-03-17T20:46:01Z,159ec95a5dfa12cbe5211d1a42965fc204697e41,36,37,9a4393528e556637969a3f4a3a8e7f760b707dbe 12f58c0b3d261a3a84a5323dcddb29e919383b8f 0fa16ea75311771cca49e4f9d5bf409dff521b2b 8fedb36aadc884c6f2f5c848c91818d85f7b850b 8660235aa4422af9d793ee81e85d06472464522a 6e413221508a7534e0e60326c50fb85a5b248bbc f8b54cd2fbdf76ef8da51e173dfaae4675e14e8d 18bb6487c51281212c26960097bfb8a1563c9e1c 08ffada69a000e54258fe5c3b02bc8e65851e037 39873a512387ecff5e9b3cf966b8e8a42b58fa1e 5132e8b5efd77af878780f12d7b776671b75b928 a89718af64fdeeb85edf331bb459c0ef52b87258 b64431c7c47618a4887001b453e7f9534e96d1a4 cb7f3d426253ede3afb5b87fac92b0d913d30580 5ce291f542512010410f12d4d6539bde0ed1d8f2 1f9134d2347537d681bef04dcb91977689584801 8f26bde97950a2602c60393a20c54ac544a16b0e 0219af6ff7fe89539f90f9844395f0d90f8f5962 f3809dd7923a9530769fc8699a3a04dda82d7648 cd1c4dfab38acc2b291968616d2a96c7bf1a4ba3 5a96e85a259c44a757b9a11f16d88a270c5d3b0b 68aba478ba1e6b1bcb71c7aa1fa21f07074135d2 d46b760ba7458d70436df37b611d1da03d4a506d a8e8fd2266caf9ff549c829b5794ab2b6fab73b9 3eca24f26b7bc0c4d6651f92cf974d586570dbf7 0c27325566e4dae0dff8d7677cea6e76fd9eb67b 8f6c130d9b1e53282e4db6899e76f6646f17bfb7 fe3d1eb6c204768bf48bf971c94c01e075edf80e 5c8c91b353161214fe527f1a930738fecf5716c0 692d7e7c3f66699e23251d68046fbb04a7ea0daf 41af2f5236abfcc2c564f3cf502e38070d89d222 d9129a259e33f3d3f62d37255bbed9c7a2a85779 9de9efc6c7d365341028343760f4e3f6d2aadeed 3c87d721479af6a1396ec641aa105fab1a250139 da8c0963c815b3b5640c96831b3ac8f36b73b390 3c48d66a3329d62d50f4680cf2db7905b60c9cf4 24c66f2ff195c616294758a508c15fef756baa58,,Clean up optimization interface and add nlopt solver,The previous optimization solver of DART was dependent on a commercial optimization package  SNOPT. SNOPT is well-known and well-made package but open source project  DART  should provide alternative options that use open source optimization packages.  Considerable open source optimization packages are [`nlopt`](http://ab-initio.mit.edu/wiki/index.php/NLopt) and [`ipopt`](https://projects.coin-or.org/Ipopt). Both packages are delivered by Ubuntu except for `nlopt` in Ubuntu 12.04. ([`nlopt` packages](http://packages.ubuntu.com/search?suite=all&section=all&arch=any&keywords=nlopt&searchon=names)  [`ipopt` packages](http://packages.ubuntu.com/search?suite=all&section=all&arch=any&keywords=ipopt&searchon=names))   This pull request adds only nlopt solver  and ipopt solver will be added by separate pull request later. 
dartsim/dart,202,2014-06-24T23:37:17Z,2014-06-25T00:43:46Z,False,none,8686e850370d127b674479d491b40d2b75b62129,1,1,7b5c7657c9b050a38a2ace3d1c447b1ea582df37,,Add a conflict with libdart core3 dev file issue 199,Development version of the package needs to conflict with previous libdart-core3-dev. Resolve #199 
dartsim/dart,203,2014-06-25T00:43:19Z,2014-06-25T00:46:15Z,True,2014-06-25T00:46:15Z,4fe2171fb2ba6dc5853f3c07831763d8e395cdb2,1,1,f74a8d7e44279291bf029cf523bf03a36e54c3c8,,Declare conflict on libdart core3 dev,resolve #199 
dartsim/dart,196,2014-06-04T00:36:40Z,2014-06-11T00:14:57Z,True,2014-06-11T00:14:57Z,82b358c036e2f2a679a80412118e84b7e18ee20d,1,1,674ee5b9d9f61eee25880302dc4f9d21f57e6c26,,Allows skeleton to have multiple parent less body nodes,- When a skeleton has multiple parent-less body nodes  then the skeleton computes forward dynamics for only the first added parent-less body node (as root body node) and its child body nodes. For example  a skeleton has two body nodes without any joint that connects them updates only (added first to the skeleton) one body node. Gazebo allows these case for model. This change doesn't have any negative effect on the dynamics algorithms of DART. - Target DART version is 4.0.1 
dartsim/dart,204,2014-06-30T04:06:32Z,2014-06-30T05:12:18Z,True,2014-06-30T05:12:18Z,051eee1f85c5520f8960757f945131d83fa61dcf,1,1,922af1af958702c104e831ea8966ee0dd7285cc6,,Fix issue on compiling googletest with Visual Studo 2012 VS11 ,Reference: http://stackoverflow.com/questions/8274588/c2977-stdtuple-too-many-template-arguments-msvc11 
dartsim/dart,208,2014-07-02T21:03:09Z,2014-07-02T21:13:59Z,False,none,9534d544d40c7443bff1c12256236e7653418eaf,10,2,3dfbe3070dcd453bf6edb32c463c20c2c8d88aa3 e9e636cb5a7283206191106ddf06d56f03f8031b,,Add cylinder shape for soft body,- Add cylinder shape for soft body - Add softBodies app to show all the supported shapes for soft body 
dartsim/dart,151,2014-03-07T09:19:46Z,2014-03-07T23:25:59Z,True,2014-03-07T23:25:59Z,dbb15114ce593ea5f4a5f695bfac912fb04eef2d,1,3,5f982c1e0bb55c1e3a6de53ea3c6edb2fdd25700 e7ad8c03baef94987c4e80429abb0f6e8f901122 ae8db1fb417047223858671e0237d82d8b88d8f8,,Bump master branch to 4 0 and add cmake config version files 150 ,The API in the master branch has diverged from the 3.0 release  so we should mark it as such  even if it's not being released yet. Also  add cmake config version files so downstream projects can identify the DART version to determine API compatibility. 
dartsim/dart,210,2014-07-02T22:29:03Z,2014-07-02T22:52:20Z,True,2014-07-02T22:52:20Z,465ad51a99c819dd3ccf6572270e99d19f1a5ec5,10,4,3dfbe3070dcd453bf6edb32c463c20c2c8d88aa3 e9e636cb5a7283206191106ddf06d56f03f8031b 999d5e502b26c4c38da40f37b3f0df472f82dcb3 9771b59daf9aadfdcc3dfa520f99267f0b3fd41d,,Add cylinder shape for soft body,- Add cylinder shape for soft body - Add softBodies app to show all the supported shapes for soft body 
dartsim/dart,207,2014-07-02T00:39:23Z,2014-07-02T21:16:20Z,False,none,2964989c6b4358685e2544cc7b9b32b3cc2cd712,43,1,bfd5b28e87e73191389064bdb9a3fa74acb5643a,,Rename getDof to getNumDofs ,
dartsim/dart,209,2014-07-02T21:18:10Z,2014-07-02T22:52:36Z,True,2014-07-02T22:52:36Z,476530836112c94ffc6ba7f3ecb14cd11dde116b,43,1,bfd5b28e87e73191389064bdb9a3fa74acb5643a,,Rename getDof to getNumDofs ,- Rename `getDof()` to `getNumDofs()` - `getDof()` is still there but marked as deprecated - #207 
dartsim/dart,205,2014-07-02T00:09:45Z,2014-07-02T00:09:59Z,False,none,91bc107bfe5a522528e27c9a2d97d34599c18a9d,79,3,77eadaee39ae36031eee727a34566baf214138b9 148ef400a94a31715191af83a2e3b65a9020cdf4 1278a29c991ee1a3fbb86782d0b7ed1d32f2737f,,Fix gcc warnings,
dartsim/dart,206,2014-07-02T00:10:28Z,2014-07-02T00:15:45Z,True,2014-07-02T00:15:45Z,8cdf3d790110c2173da8702e7820382b265ee8ed,79,3,77eadaee39ae36031eee727a34566baf214138b9 148ef400a94a31715191af83a2e3b65a9020cdf4 1278a29c991ee1a3fbb86782d0b7ed1d32f2737f,,Fix gcc warnings,
dartsim/dart,92,2013-09-16T02:20:54Z,2013-09-16T22:03:14Z,False,none,146465a5f93dbb1d14b99ae1b60362cebf8ae0d2,7,4,25e6855dae86c4fd9bf5c74dea700e69e110a554 e58963c9703a83da1ff687726f6320e3686ef17c e2423d3431e4c8b4902720bbc02d16592459db95 d8e51d24f7dd39165a7b81fd38c88f169478f4f1,,Shape store its parent body node,so that shape knows its global transformation  velocity  and acceleration. 
dartsim/dart,113,2013-10-03T07:54:57Z,2013-10-03T23:18:05Z,False,none,6f042fff43180d460ba44fcb141b03785b475713,6,8,548c0effc6d48a8333932ffe1e28c35c10837043 b8c6ebb8d8ba4aa75fedf341c0f23a5685aca4cd ab05d9ebab8690d0f6e7228b7ba99f4e73ff8f3a c4572a6672801ea47aa052afab265cde4f5aeb4b c28a3dd7ea24e41dd0e0668b245366dae5d8f17b 97dc8127ed6a2f500e39d7a9b8e18bf16ec452d7 a255d5b047731e9a0b4d9effda4fbd1ad4415507 b4a37e287696a485db306a31ca599e302db48cc1,, Issue 100 Reducing constraint violations such ,... as contact penetration and joint position limit.  This pull request slightly modifies the formulations of LCP for constraint dynamics. The goal of previous constraint forces  which is obtained by solving the LCP  just prevented more violations. New constraint forces however generate additional acceleration that reduces violations of the constraints. 
dartsim/dart,215,2014-07-07T22:44:36Z,2014-07-08T04:58:13Z,True,2014-07-08T04:58:13Z,990ce066831ea92b1c53bcd5610be32a300f677b,2,1,daf6a88080d971fe8008abc7715944e720024373,,Refer to debug version libraries for ccd and assimp on Windows,
dartsim/dart,214,2014-07-03T21:57:30Z,2014-07-04T15:22:45Z,True,2014-07-04T15:22:45Z,efb3fa8d254500d7e8437b3a83e1fde07e40b3eb,2,1,09edbd96ee1320934188c7beb99b452625ad987d,,Add cmake version files to debian packages,Fix #213  
dartsim/dart,130,2013-12-26T13:48:46Z,2013-12-27T20:42:53Z,True,2013-12-27T20:42:53Z,d69ace0428f9594d2db2530ed34662c014554a86,1,1,ace85ea1abd4b4af32f221959057bd5177249687,,Installing 3rd party library packages from ppa instead of building the sources directly,This pull request makes Travis-CI to follow [Linux Installation](https://github.com/dartsim/dart/wiki/Linux-installation) instruction. 
dartsim/dart,78,2013-08-15T21:43:27Z,2013-08-15T22:34:05Z,True,2013-08-15T22:34:05Z,5acf8b20d1f770daa61f0c9b51a86edf2631e2db,20,2,bfc63a9be37e0cd3c2e5865ed48bbcff58987400 09c072a17f830113faa3fd3fd0c2286a0430e208,,Improve support for out of source builds,It is good practice to support out of source builds (`mkdir build; cd build; cmake ..`) as opposed to in-source builds (`cmake .`). This way you can easily delete the temporary build files by deleting the build folder. Also  the `.gitignore` file can be simplified since you only need the `.gitignore`.  In this pull request  I change many references to `${CMAKE_SOURCE_DIR}` to `${CMAKE_BINARY_DIR}`  so that temporary files are created in the build folder.  Also  I was having trouble finding the urdf libraries  so I fixed that in FindDARTExt.cmake.in  I also removed a CMakeCache.txt file (#77)  since that should not be in the source repository. 
dartsim/dart,227,2014-07-17T19:30:11Z,2014-07-17T19:30:27Z,True,2014-07-17T19:30:27Z,f9415eb49bdda79575da98e973e2c820a41243e4,1,1,12cc6b2a04b207155fa672b84adf52aa3ffa9373,,Fix creating working directories for abi check,
dartsim/dart,226,2014-07-16T20:19:34Z,2014-07-17T05:31:49Z,True,2014-07-17T05:31:49Z,39af6be688fa141972857a05a17227a3b9c4b9ce,3,9,bb7c5368ba9c12d55317b518d007adcd50ba6dc3 81484dc9d04594829fb61471303e2d218803bfb3 6c9802573617ed2cc71a89d597c866f2af2a715a 3d5069ac3a2bc09a1e2b82a2fc3aa8474c3b60e0 99be53336d3359edde2ae9ee2e254ff974885030 3b8fd6d03d5d69ba48aa45e8fbce9f4b1fe98d38 f1c78a99f683c449bc47a572da2b5a56705cf499 2563e6c676225b9d14fc3dd08b2ce238740fd213 d9535bd474d53863eae2904c35bcb45543fea390,,Add ABI check shell script,- `abi-compliance-checker` is required - Usage:  ``` cd [dart_source_dir]/tools ./abi_check.sh <old_version_number> <new_version_number> ```  Example 1) ABI check of 4.0.0 and 4.1.0:  ``` ./abi_check.sh 4.0.0 4.1.0   ```  Example 2) ABI check of 4.0.0 and current:  ``` ./abi_check.sh 4.0.0         ``` 
dartsim/dart,225,2014-07-16T19:52:07Z,2014-07-17T17:38:13Z,True,2014-07-17T17:38:13Z,1a0b57647ed551a47f5274ef197aa3b825f14fd3,7,2,5792afbf5eaef09a73f2697d6988af0de7448fee 65fb5348be7726b0d0cb893be7b091f0d88e7a3f,,Clean up API of Skeleton for equations of motion,- Rename *Vector -> *s for equations of motion API - Change virtual functions Skeletons to non-virtual functions 
dartsim/dart,224,2014-07-16T16:53:43Z,2014-07-16T19:05:17Z,True,2014-07-16T19:05:17Z,58f9c79eb1aeff982d80592acf68763a71716b0a,5,5,1f9964a2feb5b95d4e7277626312a281cba1c199 d7650dafa20d701c2ce0780d1236f8420cf9847f 960e8d8dbbe2a925530e689552bbba3c20ff0765 86191c65be8f214103c3b8afe879643f41753041 f98a6aac888d55a0ff9bb6002abe987c4b39980a,,Fix weld joint constraint,- Fix weld joint constraint bug when two bodies are constrained - Not allow arbitrary relative transformation between the bodies to prevent instability of dynamics 
dartsim/dart,222,2014-07-11T05:25:27Z,2014-07-11T12:25:00Z,True,2014-07-11T12:25:00Z,a44fefa943442163b134a96eaeb809d91416012b,11,4,cd9d14495c239d289d5d486ee06f3c83afa60d76 e7b136da10091187b12666f27d2182a10ed6a5fa 5b7e059f1bbe690b2a3b2e1a8d4ed9d66c069f1b 4a0d7829c6a0d95f6eacb529e4e6ddf10cfff046,,Restore Skeleton getConstraintForceVector ,Skeleton has two kinds of constraint forces (impulses): constraint force on joint  constraint force on body. `getConstraintForceVector()` returns all the constraint forces expressed in generalized coordinates. 
dartsim/dart,223,2014-07-15T00:15:02Z,2014-07-15T00:58:49Z,True,2014-07-15T00:58:49Z,b1eedd5a96b5af4c9dab172272758658552a0ae1,5,2,0134d402a69f4ba165c75a976490ffcdbfb162b7 51a4d97451148381b5481b8ba0409c0ba96488d8,,Rename isImpulseReponsible to isReactive ,- `isImpulseReponsible()` was typo of `isImpulseResponsible()` - This function returns true if the body node can move reacting to internal/external force or constraint impulse. `isReactive()` represents more clear the functionality. 
dartsim/dart,220,2014-07-09T19:03:56Z,2014-07-17T17:37:49Z,True,2014-07-17T17:37:49Z,15643815a2db90508eb6d8697b9909a6d25968e1,1,1,4a1e7a62fd1f61ff914f27da6d9e45c1e893d8f5,,Fix uninteded error message when a soft body is created,There were unintended error messages when a soft body is created. For example  softCube app prints following error messages:  ``` ERROR: Collision checking does not support link 1's Shape type ERROR: Collision checking does not support link 2's Shape type ```  This pull request fix this bug. 
dartsim/dart,219,2014-07-09T07:01:45Z,2014-07-09T19:20:42Z,True,2014-07-09T19:20:42Z,fc2ceca3d7db5abee3bc98c43ee9fbb3e4fc084d,2,2,f6d64137c75a14ccc56f474d0fbacdcb6a04207f 51f6157f5dfe65b01a954270cf769f493102d5cd,,Set default debian build type to RelWithDebInfo,- Set default debian build type to `RelWithDebInfo` - Fix #218 - Fix typo introduced by https://github.com/dartsim/dart/pull/217 
dartsim/dart,217,2014-07-08T07:43:47Z,2014-07-08T09:32:25Z,True,2014-07-08T09:32:25Z,0de9d8837d9c46dff3c884b085373e1200deea31,2,2,d21d9d601841755a525ec0d349948d5fe4f28dd7 edf2a8fcc7a1e5d590671755ab903a86d7f77fdd,,Fix supporting Visual Studio with DART Prerequisites installation package,- Fix referring to debug version libraries of ccd and assimp - Add option for Runtime Library (/MD | /MT)  - Installation instruction is on [wiki](https://github.com/dartsim/dart/wiki/Windows%20Installation%20for%20DART%204.1) 
dartsim/dart,216,2014-07-08T01:08:32Z,2014-07-09T17:47:17Z,True,2014-07-09T17:47:17Z,e19afa98f0595ec756cb37d665cba6937ae4ff3b,5,1,7de4750e53083bd8c0d1f7e0e9eeadc9e17a5738,,Store solved contact forces in contact structure,- Fix #212  
dartsim/dart,168,2014-03-28T12:33:27Z,2014-03-29T20:56:06Z,True,2014-03-29T20:56:06Z,1587304979744b56994d6a4bb8add17f0066cc57,38,18,732432537da41b6ff9566882a586cf71ae026da3 f680f3af83b1c93f23d45eebcfbbdba6331ee0f6 4f0c5f867f32e1e96edc40b9720d7345d9e57eb0 53ef6ed4d7133d885c2f024c2772dd7ff2ea8fbb e03547c13c017cd71e8b130209bbd19c50164b19 45e29a809e638158d52208ac24020eb822dfb564 53d995258bb1a8db1880baaa466588f80a16483a e2bf91ac03e23bfffdcda3fd914dc762cf9b2f04 27c91f79b7dead704f30d1e3b93a74108c8b3272 332875c7bb24e4fbf6a5dd36c9926ff8868a16b0 efb398c944936349a91c91227f083a8bf95abe40 1b0c0428f7542f6a86258fed45c84ed7ede088e6 b847d1458da819ce5f9b9a7fda9665094285e261 cf71618e282ef5e9f93a25ace56376d19f69c090 8bf1676a8c27fc411093dec95dc60a2b07ada6cf f73dcf2dab7893bd1b9e2e6a5cbe6a0235a24bcd dc0a401021684962fbdfdb25a21f71043b41d06f 4af0c916bb05e470b245d87a9bb15e51632299fc,,Fix incorrect integration of BallJoint and FreeJoint using modified integration API,- Modify the integration API;  Explicit Euler integration with previous API:  ``` c++     Eigen::VectorXd deriv = _system->evalDeriv();     _system->setState(system->getState() + (_dt * deriv)); ```  Explicit Euler integration with modified API:  ``` c++   _system->integrateConfigs(_system->getGenVels()  _dt);   _system->integrateGenVels(_system->evalGenAccs()  _dt); ``` - Fix `BallJoint` and `FreeJoint` integration using the modified API (Fix #122) - `SemiImplicitEulerIntegrator` is added - Note: New API did not slow down the performance comparing with DART 3.0. 
dartsim/dart,162,2014-03-23T19:32:36Z,2014-03-27T08:00:51Z,False,none,7441ced3f86f099bff0255feaf17525188fb0cae,19,4,732432537da41b6ff9566882a586cf71ae026da3 f680f3af83b1c93f23d45eebcfbbdba6331ee0f6 4f0c5f867f32e1e96edc40b9720d7345d9e57eb0 53ef6ed4d7133d885c2f024c2772dd7ff2ea8fbb,,Fix 122 Incorrect integration of BallJoint and FreeJoint,- Fix #122 and add an unit test - Clean up `BallJoint` and `FreeJoint` 
dartsim/dart,154,2014-03-16T12:43:47Z,2014-03-17T20:25:39Z,True,2014-03-17T20:25:39Z,2080bfd70e080fea58b196f1270e1dc002161b08,20,15,cd1c4dfab38acc2b291968616d2a96c7bf1a4ba3 5a96e85a259c44a757b9a11f16d88a270c5d3b0b 68aba478ba1e6b1bcb71c7aa1fa21f07074135d2 d46b760ba7458d70436df37b611d1da03d4a506d a8e8fd2266caf9ff549c829b5794ab2b6fab73b9 3eca24f26b7bc0c4d6651f92cf974d586570dbf7 0c27325566e4dae0dff8d7677cea6e76fd9eb67b 8f6c130d9b1e53282e4db6899e76f6646f17bfb7 fe3d1eb6c204768bf48bf971c94c01e075edf80e 5c8c91b353161214fe527f1a930738fecf5716c0 692d7e7c3f66699e23251d68046fbb04a7ea0daf 41af2f5236abfcc2c564f3cf502e38070d89d222 d9129a259e33f3d3f62d37255bbed9c7a2a85779 9de9efc6c7d365341028343760f4e3f6d2aadeed 3c87d721479af6a1396ec641aa105fab1a250139,,Add inverse kinematics using updated optimizer interface,Add inverse kinematics for `BodyNode`. The main functionality is implemented to:  ``` void BodyNode::fitWorldTransform(...); void BodyNode::fitWorldLinearVel(...); void BodyNode::fitWorldAngularVel(...) ```  The functions try to find optimal joint states to fit body node's transformation (or linear/angular velocity). Each function solves nonlinear optimization problem using `optimizer`.  Not fully implemented but includes basic functionality which is essential to pass Gazebo's unit tests: - https://bitbucket.org/osrf/gazebo/issue/1011/dart-does-not-support-universal-joint - https://bitbucket.org/osrf/gazebo/issue/1096/dart-screw-joint 
dartsim/dart,137,2014-02-02T16:10:57Z,2014-02-02T17:11:10Z,True,2014-02-02T17:11:10Z,none,63,3,6deb40ee2c27a36564847a49cfa6d7761b812e9f 1ab50aa3f9362126c734319e9df8168f98869d51 bad50b7689ff45ef9108f77c4620314afa718ecd,,Populating CS4496 branch with galileo and tinkertoy,Pull request to dartsim branch CS4496 for getting project2 and project3 up. Removing unused apps. Making slight changes to fix errors caused due to additional of dart namespace in latest release. 
dartsim/dart,176,2014-04-03T00:20:46Z,2014-04-06T10:30:16Z,True,2014-04-06T10:30:16Z,55e7e08965b3d48824357209c90f550be3c96ff6,2,1,2290cb502f8c1985bda83e17ba2913fbe99e5ede,,Fix bullet linking using pkg config and BULLET_CFLAGS,This adds a step to search for bullet using pkg-config on UNIX systems. This is necessary to identify the CFLAGS which are not provided by the FindBullet module. The CFLAGS are needed to distinguish between single and double precision sizes of btScalar.  Related to #174. 
dartsim/dart,228,2014-07-29T18:18:24Z,2014-08-18T18:50:44Z,True,2014-08-18T18:50:44Z,5015a81f14fa58fcb43794790583469545df559b,1,1,59d3087e762ce20e6b459548351b5294497397aa,,Use default margin for collision shapes of bullet,DART has been using zero margin for bullet collision object  [which may introduce slow performance](http://www.sjbaker.org/wiki/index.php?title=Physics_-_Bullet_Collected_random_advice#Minimum_object_sizes_-_by_Erwin). Bullet suggest not to touch the margin unless necessary. 
dartsim/dart,231,2014-08-30T16:34:14Z,2014-08-30T16:52:23Z,True,2014-08-30T16:52:23Z,30a3d8a784e3cf3cf3667f6d6316ed700a103f21,4,1,fb56d4478cf6f350359abef988225555b02515bd,,Reset functions for Simulation and Recording class,I added "reset" functions to World to reset the clock  frame counter  and recordings. This is required for repetitive simulation runs in the optimization. 
dartsim/dart,246,2014-09-25T22:03:46Z,2014-09-30T06:30:16Z,True,2014-09-30T06:30:16Z,0c61dc84e36885049c8f5e1cd7056d6e2a30c8e9,3,2,3440c17576741f6a3f6f0fab7b721792acabc726 1e77d7c0ca7c7931563fb927fbb6f0b971ca374f,,Adjacent body pair check for bullet collision detector,`BulletCollisionDetector` was checking collidability its own routine rather than using the default checker in `CollisionDetector`  and it didn't respond adjacent body pair check option of `Skeleton`.  This pull request makes `BulletCollisionDetector` to use the default checker. 
dartsim/dart,247,2014-09-25T22:40:45Z,2014-09-30T06:30:21Z,True,2014-09-30T06:30:21Z,4c88dac80b68c998d3da1e04758f323d37311b01,7,5,0492767e7f2dcfa1b70d9720a3f0c44ff112fdbc 978ad7b9bb9741992c2ebd7c7d8d7b8e8b420888 8ce5ddbcf856719645df18dc6f035d1de4ec0aa7 dd949cf3afed6df857fca0a27f5c985e8dc5763f 81efc88007e500fd185e823a92b285b2f916ec2e,,Fix BallJointConstraint and WeldJointConstraint,`BallJointConstraint` had bug in computation of constraint impulse. For example  the closed loop in rigidLoop app showed weird behavior at the beginning of the simulation. The ball joint is passive joint but it looks like some impulse was applied to the ball joint.  This pull request fixes the incorrect computation of constraint impulse for `BallJointConstraint` and `WeldJointContraint`. 
dartsim/dart,257,2014-11-10T22:36:54Z,2014-11-11T01:05:20Z,True,2014-11-11T01:05:20Z,861161aab82a919b7a57c44363874ebfb7655982,17,3,e33b53030dceb5017a6346759d9f08a5ba00e5f3 3caff944738993d93633f147b7193057e67b0301 dcd940a52f3b923d934916d34bd403c58b4075d6,,Operational space control example,Implementation of simple operational space control example  Reference: [Synthesis of Concurrent Object Manipulation Tasks  Section 5.1](http://www.cc.gatech.edu/~ybai30/multitask/multitask.pdf)  ![image](https://cloud.githubusercontent.com/assets/4038467/4985099/b6db37c2-6929-11e4-8e4a-fb5e7efc315f.png) 
dartsim/dart,268,2014-11-22T12:16:31Z,2014-11-24T21:05:59Z,True,2014-11-24T21:05:59Z,c7a065f5c47d4c5edc4aa192e87183cd23cc8005,1,4,6a4c0fc61b9ea17293377bbefa490add99550d39 d0f21d510f6a2910a46028a8e5f8b50fc3fbf79c 7d4728d43b72bdb1e0cde56f41bf33eb552555ec 0c278d8bda3ffc65f3c1740247c007feee8ae9a9,priority: medium@tag: build / tools,C 11 support,- Add cmake cxx flags for GCC. - Visual studio doesn't require flags for C++11. - There are build error when we build DART with FCL supporting C++11 on Clang (see #267). So we don't enable C++11 for Clang for now. 
dartsim/dart,272,2014-11-24T00:29:05Z,2014-11-24T20:44:01Z,True,2014-11-24T20:44:01Z,e4202e6e5e5456a1beedc63169dec28c5d626eea,19,13,c9d4d95996dba3ca3175d158c6c2bacfa56a8242 629e98a082c16e051ce09c261a15692b03f4fdef f829033f09718b505f75842894cb6e1446b1d795 bb4bcbff86f8212a60f3fa9cb6dcd70fa33e3a08 5f19b1f2e450b9759e43ae7d83b3f75167327403 5c8290ae021557c72db17cade593c350ecb1d71a 64a0f96dce00fb94d9cc057831ddc2307ba38193 87112f9f8d6e916539f98c96a980035d0b252fa3 bd782292a69d8bec7ac9471e5aa47663a2d2ff39 d268f19678f0f03b09f65791bf6b3a23d9466188 9c316435344bd349666968ae32cba9b6d34f4429 860effaace7018307bd391dd2026fa7174ee884a 16fa368a4bd6b5f15cbbdf54c0ed8224be5c21fb,priority: low@type: feature request@tag: build / tools,Improve readability of cmake output,This pull request improve the readability of cmake output by controlling the extent of printing information and stylizing the printing format. Here are example outputs of the previous output and improved output.  Previous output:  ``` -- Generate makefile/project file for DART -- CMAKE_SOURCE_DIR = /home/js/DRC/dart_master -- CMAKE_BINARY_DIR = /home/js/DRC/dart_master/build -- Checking dart build type -- checking for module 'nlopt' --   package 'nlopt' not found -- Could NOT find NLOPT (missing:  NLOPT_LIBRARY NLOPT_INCLUDE_DIR)  CMake Warning at CMakeLists.txt:89 (message):   NLOPT not found -- Looking for IPOPT - found CMake Warning at CMakeLists.txt:104 (find_package): -- Looking for BulletCollision - found -- Boost version: 1.54.0 -- Found the following Boost libraries: --   system -- Generate the config file to /home/js/DRC/dart_master/build/dart/config.h -- Generate the path header file to /home/js/DRC/dart_master/build/dart/utils/Paths.h -- Adding test: testOptimizer -- Adding test: testCommon -- Adding test: testBuilding -- Adding test: testGeometry -- Adding test: testConstraint -- Adding test: testInverseKinematics -- Adding test: testWorld -- Adding test: testDynamics -- Adding test: testUtilities -- Adding test: testCollision -- Adding test: testParser -- Adding test: testJoints -- Adding test: testMath -- Adding test: testSoftDynamics -- Adding test: testNearestNeighbor -- Adding test: testForwardKinematics -- Configuring done -- Generating done -- Build files have been written to: /home/js/DRC/dart_master/build ```  Improved output:  ``` --  -- ============================================ --                 DART 4.2.0 -- ============================================ --  -- [ Mandatory dependencies ] -- Looking for Eigen - found -- Looking for FCL - found -- Looking for Assimp - found -- Looking for OpenGL - found -- Looking for GLUT - found -- Looking for Boost - 1.54.0 found -- Looking for FLANN - found -- Looking for TinyXML - found -- Looking for TinyXML2 - found -- Looking for urdfdom - found --  -- [ Optional dependencies ] -- Looking for OpenMP - found -- Looking for NLOPT - NOT found  please install libnlopt-dev -- Looking for IPOPT - found -- Looking for SHARK - found -- Looking for BulletCollision - found -- Looking for PerlModules - found -- Looking for Doxygen - found --  -- [ Build summary ] -- CMAKE_GENERATOR  : Unix Makefiles -- Compiler ID      : GNU -- Compiler version : 4.8.2 -- Build type       : Release -- BUILD_SHARED_LIBS: ON -- ENABLE_OPENMP    : ON -- Build core only  : OFF -- Build examples   : ON -- Build unit tests : ON -- Install path     : /usr/local -- CXX_FLAGS  : -Wall -msse2 -fPIC -- CXX_FLAGS_RELEASE: -O3 -DNDEBUG -- CMAKE_SOURCE_DIR : /home/js/DRC/dart_master -- CMAKE_BINARY_DIR : /home/js/DRC/dart_master/build --  -- [ Configured files ] -- /home/js/DRC/dart_master/build/dart/config.h -- /home/js/DRC/dart_master/build/dart/utils/Paths.h -- /home/js/DRC/dart_master/build/cmake/DARTCoreConfig.cmake -- /home/js/DRC/dart_master/build/cmake/DARTConfigVersion.cmake -- /home/js/DRC/dart_master/build/cmake/DARTConfig.cmake -- /home/js/DRC/dart_master/build/cmake/DARTConfigVersion.cmake -- /home/js/DRC/dart_master/build/cmake/dart.pc --  -- [ Unit tests ] -- Adding test: testOptimizer -- Adding test: testCommon -- Adding test: testBuilding -- Adding test: testGeometry -- Adding test: testConstraint -- Adding test: testInverseKinematics -- Adding test: testWorld -- Adding test: testDynamics -- Adding test: testUtilities -- Adding test: testCollision -- Adding test: testParser -- Adding test: testJoints -- Adding test: testMath -- Adding test: testSoftDynamics -- Adding test: testNearestNeighbor -- Adding test: testForwardKinematics --  -- Configuring done -- Generating done -- Build files have been written to: /home/js/DRC/dart_master/build ``` 
dartsim/dart,274,2014-11-24T03:24:46Z,2014-11-24T20:43:36Z,True,2014-11-24T20:43:36Z,191de0e02c5590865b19cb406ea9390960d918e2,10,1,860effaace7018307bd391dd2026fa7174ee884a,priority: low@type: documentation,Improve API document generation,- Create separate directory `doxygen`  - Split out the main page content from BodyNode.h - Add DART logo the the main page - Use default documentation style of `doxygen`  Usage 1 (to generate API document only when there is no generated document):  ``` make docs ```  Usage 2 (to enforce to generate API document anyways):  ``` make docs_forced ``` 
dartsim/dart,269,2014-11-22T21:23:12Z,2014-11-23T20:38:30Z,True,2014-11-23T20:38:30Z,3ce1c3cee6927eab60d08c8cf875916d1ae9ddd4,3,4,1b98c3d81f8cb82f3641e63bbfadff9672adba56 943052b6b87ecce2a04ecb0b42b6df179eb2cf05 09d9cd7c3776f2c0b7df664bea2aa045d600c9d2 a24ea03d07be33b6d3aee4aa145572701e0dc07d,priority: medium@tag: build / tools,Build test on Windows using AppVeyor,AppVeyor enables build test on Windows platform with Visual Studio. Fix #249.  Build test is enabled only for DART core. (see #270) 
dartsim/dart,278,2014-11-25T21:22:43Z,2014-11-27T01:26:26Z,True,2014-11-27T01:26:26Z,13c644fe7266ece77426b5151f28cfcc218186bd,111,7,ce8f94bc5894b02c821523812c7fe1f04b1b0ad8 bb7f411bf72728c626cdcebf1e4c28f29c45f291 cedc70b8ffa00f41fca41195301517ebe1f34305 198b4cdef2d9d68dccc51cfe3aef6ff5d986d6a2 455880a39dccd08b0c4d02b3202901ac7a8721d1 0f4257d274ab11f403b1198483f1fc7e28ea7fc9 1d149e1b6002ba5c6f5d0be1c47fbecfe4767d41,priority: medium@type: feature request@tag: build / tools,Use individual cmake files for each namespaces,This pull request divides the single cmake file into multiple files for each namespace. DART have some optional dependencies such as `bullet collision`  `nlopt`  `ipopt`  and `snopt`  and there are optional code  which should be built only when the corresponding optional dependencies are installed. Previously  DART has used single cmake files to build `dart` and `dart-core` (not examples nor unittests) and it makes hard to control the optional code to be built depends on the corresponding dependencies.  Additionally  this pull request adds all-inclusive headers  dart.h and dart-core.h. We had to include all the necessary header files of dart to write a software that has dependency of dart. For example  this is part of source code of `hardcodedDesign` app in dart:  ``` c++ -#include "dart/collision/CollisionDetector.h" -#include "dart/dynamics/Skeleton.h" -#include "dart/dynamics/BodyNode.h" -//#include "dart/constraint/OldConstraintDynamics.h" -#include "dart/dynamics/Joint.h" -#include "dart/dynamics/MeshShape.h" -#include "dart/dynamics/BoxShape.h" -#include "dart/dynamics/CylinderShape.h" -#include "dart/dynamics/EllipsoidShape.h" -#include "dart/utils/Paths.h" -#include "dart/common/Timer.h" -#include "dart/math/Helpers.h" -#include "dart/gui/GLFuncs.h" -#include "dart/gui/Win3D.h" - -namespace dart { -namespace dynamics { -class Skeleton; -class ConstraintDynamics; -}  // namespace dynamics -}  // namespace dart ```  This number of lines can be reduced single line as:  ``` c++ #include "dart/dart.h" ```  or  ``` c++ #include "dart/dart-core.h" ```  If we want to include specific namespaces of dart then:  ``` c++ #include "dart/common/common.h" #include "dart/math/math.h" #include "dart/dynamics/dynamics.h" ```  This fixes #158 
dartsim/dart,285,2014-12-11T16:54:50Z,2014-12-11T16:58:24Z,False,none,none,5,1,93d7680696ed854741e6ec23e67c925015797aaa,,Version numbering of the shared libraries in debian packages,This PR changes naming of the shared libraries. Since ABI breaking is done per minor version up  minor version number needs to be appear to the shared libraries.  For example: - `libdart-core4.2` package installs `libdart-core.so.4.2` - `libdart-core4-dev` package install `libdart-core.so` symlink  This PR should fixes #281. 
dartsim/dart,284,2014-12-11T10:37:17Z,2014-12-11T11:44:28Z,True,2014-12-11T11:44:28Z,c7ba42312ef9e1f50cf4bb46f05458a023555df9,8,1,4932c26e781f71e1c86970fa32a4a4a9377cac79,,Consistent Jacobian and its derivatives of BallJoint and FreeJoint,This pull request change the computation of the Jacobians and Jacobian derivatives in consistent way. Previously  the generalized velocities and accelerations of `BallJoint` and `FreeJoint` were the spatial velocities and spatial accelerations  which are relative velocities and accelerations between the parent body node and the child body node  so their Jacobians and its derivatives were identity and zero matrices  respectively. The benefit of doing so is that the Jacobians and its derivatives don't need to be computed over simulation steps but the problem is that the velocities  accelerations  Jacobians and Jacobian derivatives are not consistent with the generalized coordinates.  Note that the target branch of this PR is release-4.2. 
dartsim/dart,291,2014-12-31T17:24:43Z,2015-01-08T01:39:25Z,True,2015-01-08T01:39:25Z,18ad13eeaf74d2f5135b60a22301f4b216ea5d06,1,1,28209bd2a64bc1bf58770249fb5bdd047e5b59b8,,Fix bug in collision checking when a body node has multiple collision shapes,Fix bug: Only the first collision shape of a body node is considered when checking for collision without calculating contact points  The change is smaller than it seems here. When ignoring whitespace changes  only 3 lines are changed.  I have only tested this bug fix with DART 3  but it should be the same for DART 4. 
dartsim/dart,298,2015-01-07T05:04:55Z,2015-01-08T21:14:55Z,True,2015-01-08T21:14:55Z,7a610554062e72994a47643205bc79e0091c41f4,58,38,fd4df6d781d9e12e0883289c9d7b9b1dbcab63f4 a15e6d3de2ebada68d41abb2f5e685f73b72afdd 844ea919be7db939da92d3a0961c561c96ee8368 4b31757ecdfb0f64791fdbdb349cc245434e8398 46c398de22d6c342a8cd0d103620aa55a63b35fd e9b9040365bafbd896191a50d7b241b017dde0d5 4bca02c381080b716b6696a6a1695870f5be0805 905d5269e4f50c4145fd76f1c450e572ca503302 b0e5370251bb2c8ad88a0f504df86b833bc51fbd 6483a2a3133e201533b98e40f7b992d18da4d667 62614e5b3ef815494daf16a084fa0c45950e6994 26d41899ddf4c0e8c53f1159e1862158d54759ba 06426750d79a43bf8b83ce6d27cdd21f5d008847 1df33bc999fe6ea109f677d11ae2afc3423beb3f 27cf4dc6c885f7c8e2d0d736ab97ef3161d707d0 2219b4c4117ade3c301a6958ecfe75e3fb059085 e68ce598e70da6ade932a3b15f0e7602b44d4219 794cb82dc2e31da6e6a985137fc7112983fd1376 1a58c96fd2ea31555d6b2fd265df31e06b4f11ee a63491565ef5db459e3cc3df9071ed11e90be3af 1483844dd9210cc52c06f7385f2a5e29b7f39a20 39ab55d1b49220fc80bf602364bcb7a778f662d9 9efcffe14aaf8eb55ff5c355b1ef8c89624fa804 aa1411775c8fcf97522d6207dc949a588d96664b 49565ac459b62173457f37e436e533949c11719a 3d006d44e66ed87374e72823132ae3a28c523124 435ae62476a99d315d69048395f015fb4236bea3 64b78d88021a62a1f89ae171cb61f621a98e2b5e 79aa74f606fd15488a4a59067e7127df1a9c500b 3cffe2d94180ee0f0b39a12e08949b105b85003d 438e680001c099430c1d9b317b2e014aac6dee2a b6f7c915d8f4bf52b1ca63410f12f28e0d73d728 0e72171792157ba7dc75c251ee3f61211e5bf1dd 90a52ccb7dbdc86193e494c0172d7758ce39b20a 08bf6e29f4a5814881fb486284c665fb66af41cf 3fa032f173dca0e1fed27c7f07b0239de9820177 60af0bb2851ee5c07069fdb008d33d074a46c02b 958ea75faf30217cfa0f2d12beca71d655da72ed,priority: medium@type: feature request@comp: dynamics,Hybrid dynamics,This pull request adds hybrid dynamics. In the hybrid dynamics problem  we are given either joint force or joint acceleration at each joint  and the task is to calculate the unknown accelerations and forces. In effect  hybrid dynamics is like performing forward dynamics at some of the joints and inverse dynamics at the rest. Hybrid dynamics is used to introduce prescribed motions into a rigid-body system. [1]  This pull request also introduces joint actuator types: force  passive  acceleration  and velocity (servo is not implemented yet). The hybrid dynamics performs forward dynamics for force and passive types  and inverse dynamics for acceleration and velocity types. Here is description on the command input and the output for each actuator types. The command can be set by calling `Joint::setCommand()` or `Skeleton::setCommand()`. - `FORCE`: The command input is joint force  and the output is joint acceleration. If the command is always set to zero  then the force joint is identical to passive joint.  - `PASSIVE`: The command input is joint force and always zero (ignore command from the user)  and the output is joint acceleration.  - `ACCELERATION`: The command input is joint acceleration  and the output is joint force. - `VELOCITY`: The command input is joint velocity  and the output is joint force. - `LOCKED`: Locked joint always set the velocity and acceleration to zero so that the joint doesn't move from the current position (locked)  and the output is joint force.  The joint actuator type can be specified by calling `Joint::setActuatorType()`. The default type is FORCE for backward compatibility.  We define `FORCE`/`PASSIVE`/`SERVO` joints are dynamic joints while `ACCELERATION`/`VELOCITY`/`LOCKED` joints are kinematic joints. (see also: `Joint::isKinematic()` and `Joint::isDynamic()`)  Example app  `hybridDyanmics` is added  and basic unit tests are added as well. `SkelParser` can parse the actuator type as an optional attribute of `<joint>`. If it is not specified  force type is used as default. The description of the updated skel file format can be found at [wiki](https://github.com/dartsim/dart/wiki/skel-0.1). Here is an example of specifying joint actuator type:  ``` xml <joint type="revolute" name="joint1" actuator="force">     <parent>link 1</parent>     <child>link 2</child> </joint> ```  Minor changes: - Enabled `JAVADOC_AUTOBRIEF` option of doxygen - Deprecated `Joint::mWrench` - Deprecated `castUIntToInt()`  [1] Roy Featherstone  _Rigid Body Dynamics Algorithms_  Springer  New York  2008. 
dartsim/dart,286,2014-12-11T16:59:01Z,2015-01-01T19:34:51Z,True,2015-01-01T19:34:51Z,9e9d8d30a6ef8e7d19a35615600097288fa1a805,5,7,93d7680696ed854741e6ec23e67c925015797aaa 790d22a8879942f55c50f082de27e119280e3da4 a72a5f9a4283861dad590d1bc15e956a2494a225 80995b0d23d48c39dabccf9ebf650daba7836c68 4838d38e7b8bc9fb2d28fccc1faf7eb18c704762 6cfb66a504dc36390d0251c73853e1463735f7d4 97cbf358d59c192e7d4d9b01d253dae0c3cbd300,priority: medium@type: bug@tag: build / tools,Version numbering of the shared libraries in debian packages,Version numbering of the shared libraries in debian packages  This PR changes naming of the shared libraries. Since ABI breaking is done per minor version up  minor version number needs to be appear to the shared libraries.  For example: - `libdart-core4.2` package installs `libdart-core.so.4.2` - `libdart-core4-dev` package installs `libdart-core.so.4` symlink  This PR should fixes #281. 
dartsim/dart,304,2015-01-20T01:49:12Z,2015-01-21T20:15:32Z,True,2015-01-21T20:15:32Z,6584da7f3db56a7f6b83ac6e3414045b5786c131,21,1,856e9a6a3672fe6f1417d285e2032d54b7c0e288,priority: high@type: bug@tag: build / tools,Fix install directories,This pull request fixes the install directories introduced by #302. By #302  all the headers were installed in single directories  e.g.  in `/usr/local/include/dart/`  rather than take there own directories according to the namespaces. This is the reason that `dart 4.3.0` package was not able to be compiled in [the PPA](https://launchpad.net/~dartsim/+archive/ubuntu/ppa/+build/6732642). 
dartsim/dart,302,2015-01-17T06:30:33Z,2015-01-19T17:12:19Z,True,2015-01-19T17:12:19Z,9b2f67d715695c306b4292297d4ef484a1bf569f,43,5,e64e37d351cef330f569acc5527d999fcd4062f6 962b005e72e19a4f94ddab6d638ecce8457f8b5b 7184bfef26e5c8eeca9d8147b02c1d2d0d7860f0 a4ce9fbaff9ef4b13dd341bbd08df4cf9d9f69cc 76886ebd1dd0e2c2ec428ba2014e895e685fb96d,priority: high@type: bug@tag: build / tools,Fix build issues on Mac,This pull request solves build issues on Mac. - Cyclic dependencies between namespace libraries   By #278  namespace-wise cmake files were used to support various build options with DART's optional dependencies. The each cmake files generated libraries per namespace like libdart_common and libdart_math. Some libraries  however  are dependent on each other and it causes cyclic dependencies between the libraries. Somehow  Mac is the only platform complains this. This PR generates single libraries for each `dart` and `dart-core` while maintaining other useful features introduced by #278. - Case-insensitive   One of useful feature introduced by #278 is that DART generates all-inclusive headers for each namespaces like `constraint.h` and `dynamics.h` that includes all the headers in the corresponding namespaces. These autogenerated headers are all lower cases. The problem is that `constraint` namespace has `Constraint.h` and it conflicts with `constraint.h` on Mac. So  this PR removes the extensions of the autogenerated headers like `constraint` and `dynamics`. - Source file without any symbol   Mac complained to the source file that doesn't have any symbols in them. So `ClosedLoopConstraint.h/cpp` are removed.  Fix #282. 
dartsim/dart,301,2015-01-16T07:14:48Z,2015-01-19T17:11:51Z,True,2015-01-19T17:11:51Z,b3c90a04b27fcc9971d930101d90ac30f34f8a72,17,6,ac8ffca7a7cea314fc6f530349844cd065c9c43d 2a4e281cc7d1cd52490ce134ad05712b42d13bf1 ed4ef0234551456a7878e778a8675e95085ae415 7102dc6da22bdbd14493bd31b468e342e3664a92 8b96fc48ad93236f63f90ab8b6c59e26a7606566 e9c27c5dc3f650c40528d5015b1f3acaee5e0d7a,priority: low@type: feature request@comp: dynamics,Joint Coulomb friction,This pull request adds Coulomb friction property to joint. Figure 1 of [this paper](http://robotics.tch.harvard.edu/publications/pdfs/armstrong1994survey.pdf) describes well about the Coulomb joint friction.  Joint Coulomb friction works only for dynamic joint types (PASSIVE  FORCE  and SERVO).  To set joint friction:  ``` c++ // in code Joint* joint = skel->getJoint("my joint"); joint->setCoulombFriction(0  10.0); ```  ``` xml <!-- in SKEL --> <joint type="revolute" name="my joint" actuator="force">     <parent>world</parent>     <child>link 1</child>     <axis>         <xyz>1 0 0</xyz>         <dynamics>             <damping>1.0</damping>             <friction>1.0</friction>         </dynamics>     </axis> </joint> ```  This PR fixes #293 as well. 
dartsim/dart,299,2015-01-15T19:44:30Z,2015-01-19T17:11:39Z,True,2015-01-19T17:11:39Z,33764d99fbd6a341c2360849f278ea6f20167a96,4,9,e554522f07dac53c693a1bff712886a9734d41dd d46fba91744f71711e743cea49e114e6af1c24f7 aa4edd35104e44fea6582e920420f4cdc93b296d 68166e06645841a9248fffcc147d133c8c6c9158 34684431564f1a504102c31321f3cd868cd0de2c 162cadfcc419a721a04b80eb197bc52d367b7101 126d90ab59b8a83619d34f07ce250887dd4e139f 16ad610f46b67507f58c0a9c67e01028aa3e78bd 92ffbe5cf16eca8a9a7f61def5ad0e57b6413068,priority: high@type: feature request@tag: build / tools,C 11 support with Clang,This pull request enables the C++11 support with both of gcc and clang.  The dependencies gcc 4.8  eigen 3.2.1  and boost 1.55 are installed on Travis-CI for build test.  This PR fixes #267. 
dartsim/dart,310,2015-01-22T19:08:29Z,2015-01-22T19:08:43Z,False,none,160882f990e6954672221490f772a07ecd0ed93e,2,4,438922c9d74eb547582d42c1b3c247edeeb4d58b 23610d16770a3218c6192bb76657728173a524d4 74bb00bb334e9eede3636915231afea527be018f cbc0bf5eff03048829c2d59ea874888430173a24,,Fix joint Coulomb friction,The friction force was regarded as an impulse instead of a force. 
dartsim/dart,309,2015-01-21T22:43:18Z,2015-01-22T02:35:14Z,True,2015-01-22T02:35:14Z,d716c05453ca43936bc2104f3235fbc59d721f09,11,9,7844e83cc0eac9508b711fd564383a915bbf8558 f5e890ecc7a37751e54d826627628fb7b439c5b8 0c9b31a1eb483c38d1cae82603c0aab7e62fffbd fdca9e894cea3cbc791cb81a785b4094a332fc6f c025e3f0318c20cd63f36e8a282d9dcc9d81d4e2 89534ce88b6687cada99147cee04d2aff5e4ca50 4b95dec73c5d1eabf46617b066045ea6adc61087 5d23b6eab0680dcebe5c76dce41f0b796f798106 150f2260606cd40e45c018bcca9931044f13bfcf,priority: high@type: bug,Fix API compatibility of dart 4 3,This pull request fixes the API incompatibility introduced by dart 4.3.  Fix #303  
dartsim/dart,273,2014-11-24T03:00:19Z,2014-11-24T20:43:46Z,True,2014-11-24T20:43:46Z,716f2d4a2730b6a4b7854569d24540d2aadb3d36,3,2,9f24e5a5434e8da5dbf4241f37c782ac5db61247 680fae56aef1a7e0de7313f6a54187751e3f677f,,stopgap measure for handling use of package in URDFs for 271,Merged with the current master  and only contains urdf-parsing related changes. 
dartsim/dart,288,2014-12-16T01:52:55Z,2015-01-15T17:31:27Z,True,2015-01-15T17:31:27Z,4033e7b12918e3a6db40c8136be778807a7562b7,31,34,a93ba3b8de8ada5d74cfd49e3453d72ec2db1f18 441d8b2fa80294874cf4c3f87c1cea4df67d83e5 21ee5f502f2e853922c1e0949dba6a40daf2794e 1efb377c92d716aa03a93fe8da18a60f7b69435a 477c04861798b2a31fd8b0890ca5cdf6b009c336 a9a311a7e1d188d929c714f419286610978b253f f098b82bd53b8b21f81665c69ab438aff4cdb326 ecd227ffe1a414af1622c277c8264bb1f37ff166 cd6c826f6c3cda77c44e6718b3ba76d9b6226e26 31a787750773dbe7b1ab18b70c4d13d582956a8e c11170b4f4cc38389f4c73a281a92614c0cfc3c3 0bfcdbedbca3523508ebc0acd7a87ce0df777b6d d247b0d9aa44c2f5e8021933c532d177501ad503 43605e53e7f320d290053523da981a7b3c17725f b27fbea65157f57c976456a7f0304e01b52d48f6 df5e4613239f1f056a796f2f7a9b65f682d0158e ddc5882b47dd6aec74f1ca76e147ac73a5ebe381 4f11c66cd2b6018f9858f02ecca62a946eec57bf 80af6dea272bde4176c4fda2a9356fccca19fe76 8bd330f2ddcf23cf03eb98626ddfa20359c763fa 37c4f040a7e92210539eb63d12492b9fd51f225d 311d2d7609cb6a31f46994d5637565dcd77bc31a 24d301d57058391c374895895c9da090b37127f7 913d7fd02ef9b437d40544cf7cba8b5d5a47025c f7e48406a7184c0432d9072b44d3d680cdbedd9c 0b0de72655b988988a5fc6db25c49b45df80ca6d 5317dc655336f04693d16f8c0722881b5d204f8e 88836b2fc5dfc7925c5e1ef2295d7679ce1e40ce 81d68ac73308b180e806ba6b2aea88794b321d03 79b9edf379ef7d9ef036e1c82eba321a50490548 ce2277c733016c637081254832c390b50a7a2286 d083568ba7e038fca4052031fe639b4e790c1666 88e1f503e7bcd38fe93c2c3a2e72ea466d8d9b95 df8fe62d9a8a2c69673c4069e385769e8c672807,,DegreeOfFreedom class,This pull request introduces the DegreeOfFreedom class which serves as a proxy class for getting/setting the data (e.g. position  velocity  acceleration  force  limits  etc) of individual generalized coordinates (aka degrees of freedom). This pull request also gives names to each degree of freedom and allows each degree of freedom to be accessed by name. The name of each degree of freedom in a given Skeleton is kept unique by the NameManager class.  By default  each degree of freedom is given a name based on the name of the joint it belongs to. For SingleDofJoints  their single dof is just given the same name as the joint itself. For MultiDofJoints  the dof is given a name with the pattern "<joint_name>_<affix>" where "<joint_name>" is simple the name of its joint  and "<affix>" indicates its role in the joint. For example  a TranslationalJoint named "joint1" will be given degrees of freedom with the following names: "joint1_x"  "joint1_y"  and "joint1_z".  The user can rename any DegreeOfFreedom at any time  however names that match already existing DOF names will be altered by the NameManager to prevent a lookup conflict.  When the user changes a joint name using Joint::setName(~)  they are given the option of whether or not to have the joint's degrees of freedom automatically renamed as well (default is true).  Something to consider: Currently  if the Skeleton's Joint NameManager needs to change a joint's name to prevent a naming conflict  it will also rename that Joint's DegreesOfFreedom to match the new name. This could potentially wipe out custom names that the user might have given to that Joint's DegreesOfFreedom. Should we have a flag that the user can set to prevent this behavior? 
dartsim/dart,277,2014-11-25T21:07:19Z,2014-12-12T02:14:22Z,True,2014-12-12T02:14:22Z,3af33151069c8d664378402dc98951f572537a98,42,16,a0637658e7b118628fab7e25972aa04c9d1fbfdd f82a90313fbde8c2e74eca9489a2a807468715c7 2c8664a7d1aeb8491fcfb8dfcc8d1195c769a06f 18888ff27ba2209e804ce5dd69d0e7da19b0756b 20f4b05e725398387c574008b610696a482a16f0 78671a512b48d30087a717afba3f978ca31aa319 abe8e02f41c711de69d087c4714b8404f4640f47 0af26387ac1524b5076ddb30d0458efa7a29101e c2cdea81f9d63bcfc6167f6fa02707ee640765b5 41722b16d548a07a29006a0ab04750ac82d34ffe 0c6f33e945d9c5b889be320d11e5ac81c365da87 543cf8b65ac041216903a315bfa203a9777a9d77 9649c4b1919a9b368149b095b35a4821ba1cf4bb a31bfd6655c0263246f52a08d0fc08a443bdd98d 884c01bab1f15cd031dd36f41c2cf4935eab0388 04b43c892144af08849efee72807a2b24d9bdb7c,,NameManager const correctness,This commit contains a couple somewhat unrelated changes:  A NameManager class was created which has the ability to organize names of objects in a list and to generate new unique names if the user attempts to add an object with a name that is already being used.  The NameManager is being utilized by the World class to organize its Skeletons  and it's being used by the Skeleton class to organize its BodyNodes  SoftBodyNodes  Joints  and Markers.  This commit also contains const-correctness changes where accessor functions have been overloaded to offer a const version and a non-const version.  One final change was to create some consistency with out-of-bounds accessing behavior. Specifically  if the user requests an object from an index which is out-of-bounds  they will get back a NULL (which should probably be changed to "nullptr" in C++11 compatible versions of DART). This behavior already existed for many accessor functions  like Skeleton::getBodyNode(size_t)  but it is now the standard for all other accessors  for example BodyNode::getCollisionShape(int). 
dartsim/dart,322,2015-01-28T02:42:58Z,2015-02-04T16:42:01Z,True,2015-02-04T16:42:01Z,0bb3a3b52e702998fdb4b7448bb38b1eb9fd9c5c,7,5,9f2909488dced6c284e35bacf1a76f9bb598d147 a3cca9d907ff2fe8e482e2864f011f9b1ee3837e 31e7b4a6a0b748fd6e2fa4d50be6b80ed84d1205 e5767fdd810b2fb37056002081c3d2041e0c54d5 4401dcde3ba3ef216e4eb317a882e41fdaa0b1eb,,Added convenience functions to help with setting FreeJoint EulerJoint and BallJoint positions,I found that setting FreeJoint and other joint types that have rotations can be confusing or can require more lines of code than it ought to  so I made some functions to help users convert transform and rotation types into joint position vectors that they can pass into Joint::setPositions(VectorXd). 
dartsim/dart,326,2015-02-03T07:21:56Z,2015-02-04T20:08:17Z,True,2015-02-04T20:08:17Z,510e2031f2997dda9367edcc8a548279623deec5,1,2,87dc35ae91f28904b017adc053abb37130b02814 f7384206fdb981ff187af4255967f8e7cde6449e,,Fixing issue 47 and adding PlanarJoint support for URDFs,
dartsim/dart,331,2015-02-11T19:27:00Z,2015-02-12T20:14:30Z,True,2015-02-12T20:14:30Z,a9877c3aa4142907a9b1b1f04f4d670b8e98e6df,2,1,91d2bbe55fb1dfbe4aaa08882c785a3b9ae72411,,Fixed naming issues for Skeletons in World and created regression tests,This fix addresses two issues:  1) Skeleton names were not getting removed from the name manager in the World when those Skeletons were removed.  2) Skeletons were not being reassigned names when a Skeleton with a repeated name was added to the World  This fixes have been made and a regression test was created to ensure that these issues are fixed and remain fixed. 
dartsim/dart,324,2015-01-29T13:34:02Z,2015-01-31T17:34:52Z,True,2015-01-31T17:34:52Z,5cd1778538da47119407b0117bb6f40b034b3abb,8,4,4ad71cf9a8f6f51cfeb7c23c47eb32a1c2084a15 6230618da4ec8f91dc5be31f401226a462b40139 c7774f75b1f9043f2ee2523d22b57a54290c8e99 ab9d8b5ca9c3586c9d23264a2e90aec9a009e1a2,,added the feature to plot 2D trajectories see bipedStand for example ,
dartsim/dart,325,2015-01-29T15:56:22Z,2015-02-01T21:08:50Z,True,2015-02-01T21:08:50Z,9afe36ecf3c4e6e929117a33511076f1877e8c11,3,3,6bed081e2591e8793d95cc3ad6617cf3cb6d9df8 058ecef1ed45c7a35dd131b66d918605c4b8b5f8 3ba389b2c50b2adef92640db7dd3cfd74fb71f23,,Fixed a small bug in loading WorldFile,
dartsim/dart,344,2015-03-03T06:48:04Z,2015-03-06T18:18:31Z,True,2015-03-06T18:18:31Z,70063e006774b84c32cf14a4e275784686a719e9,1,1,4e937bec4139955da9a2aee8b928c5f3e4631a3e,,Utilize cached world Jacobian more in Jacobian getters,
dartsim/dart,341,2015-02-28T09:50:00Z,2015-03-06T19:08:14Z,True,2015-03-06T19:08:14Z,b45160b779011690b29355a20cea544e6372b8a2,3,2,8ab72b1db90346dfbbba83239398f471588a7cac d907c457beebc903227f2ed34d7a51210ece6f01,,Support Eigen VectorXd in parser,
dartsim/dart,342,2015-02-28T10:00:42Z,2015-02-28T10:03:35Z,True,2015-02-28T10:03:35Z,276edbe5e44e72319513b2bf00592eee97a6cd6a,2,1,674ef8f5a461b202a6a721235b1a92305514d178,,Add NloptSolver get set NumMaxEvaluations ,
dartsim/dart,335,2015-02-18T22:13:02Z,2015-02-21T03:32:00Z,True,2015-02-21T03:32:00Z,f8dee5c8d88ab9d0efce0045bd72358a304c382d,2,1,d41581c0fe6947701d34b6b335cc37d61af20a5d,,Add Skeleton getNumJoints ,... that returns `getNumBodyNodes()`. 
dartsim/dart,332,2015-02-12T06:14:36Z,2015-02-12T20:14:08Z,True,2015-02-12T20:14:08Z,dcdcf938f1cc1c8c3f5942c528b206290756c1a1,1,1,b0d4d66cb00fede505716535810b374659fc85eb,,Fix DARTCollide for sphere sphere collision,
dartsim/dart,306,2015-01-21T00:15:24Z,2015-01-22T14:53:53Z,True,2015-01-22T14:53:53Z,5eaa9737cff16ab9aa18d2f56b78703ee8c1ec41,18,12,fe8eca2fd13c287f1ead8e69fd0c8d908c2cf124 d2ab3a458ef7e5db114b98633ed36a9e5ce07b11 72a640482d053eb74f1ff312f047b338e49c4c38 e818f4a9cce9f5147ef3530d21b84adab2fa8796 5931f8ebb976742b91ee27979f04185f3b242ee8 ed472058b82ff5677ce2a11bb6a195bf6c6163c0 d91d75862fc018be8142ad91b586bb8801de5a42 82632a2d33da6bf4bdeb4ee45fab92ca8245ddf3 21e3ad420be087d8452836329c0ee57587949eb1 64a77c47b4738e741aeea4da8d592045bdda86c8 914478327fc61a9fbf406168aadf305c2561f9f6 7504c987262122b0f69a939b4ebe13fd75625142,priority: low@type: feature request@tag: build / tools,Specify minimum dependency versions on Linux,This PR just makes it possible to specify minimum required dependency versions on Linux (since Windows does not support pkgconfig file)  and remains determining the specific required dependency versions as future work. In order to do this  this pr: - Updates cmake find modules to be aware of installed version - Prints dependency version in the cmake output  Note that upper case module names will be used until migrate to cmake version that supports `FOUND_VAR` option for `find_package_handle_standard_args`.  This PR also passes DART version through DARTConfig.cmake and DARTCoreConfig.cmake so that it is able to print DART version in cmake process like:  ```   # Find DART   find_package(DARTCore 4.1 QUIET)   if (DARTCore_FOUND)     message (STATUS "Looking for DARTCore - ${DART_VERSION} found")   endif() ``` 
dartsim/dart,311,2015-01-22T19:09:19Z,2015-01-23T01:51:58Z,True,2015-01-23T01:51:58Z,c8dea726ed67c8fca29a266c94b035165d5b176a,2,6,438922c9d74eb547582d42c1b3c247edeeb4d58b 23610d16770a3218c6192bb76657728173a524d4 74bb00bb334e9eede3636915231afea527be018f cbc0bf5eff03048829c2d59ea874888430173a24 24a5da80438407dfad82f414879c8527ba596f31 92a1ceb110f654a2e7e88e2cacf2d977f8fec7e0,priority: high@type: bug,Fix joint Coulomb friction,The friction force was regarded as an impulse instead of a force. 
dartsim/dart,313,2015-01-22T23:21:11Z,2015-01-23T23:06:08Z,True,2015-01-23T23:06:08Z,e612a10e8a5e7ee880c87335f352d0091c9e8425,7,16,10decd38ad9a22a9f6c706455edfa5755bf76a4e 7231e74340cc7ae9b8ef4a4921daaf2e2ae6194f 9900e9906bd29ca426b63262016840b65f9d52a2 6c81c7d2f8628199b1047f230ef4babad11f45e4 ec7d1be1f92807251bc7135f1ebf94e1fabc671f 16971f41c5747bc909be03fb81eb34c7f739536a ecf3b723792e95048f2ca064eeb49c9a68f158fe a9744b27211c7af82c65a4a6a62810c720644866 cd5a267dd368282b5f5160ef19971a3fd0fc6df7 4355f8303d1003073fe35a7ce8b0c10e4ea63824 204f83a031b6178536c7638a8c474d92e2d38a49 ff9b53b6b3317870b3f125457ae0976a6568677c 23c3101b2f4d9b206f54074d9c6c5ccd4c85e32a d87d199a214a23350fe490f7d576c2d0a3a3213c ed3636f026b9c1de5bdae4073b8fc53d590b3c88 a02c1a0588797a8aa6b9ae6a2e1526c9a3a0c684,priority: low@type: feature request@tag: build / tools,Travis CI build test on OSX,This pull request enables Travis-CI build test on OSX.  Unit tests are disabled because gtest couldn't be installed on Mac (#312). Anyone know how to resolve this?  Resolves #258 
dartsim/dart,315,2015-01-24T02:05:32Z,2015-01-24T16:54:15Z,True,2015-01-24T16:54:15Z,d2116d23e23a38296f9b8ecb555adf72ac97f220,40,5,4e0e7d3eff0859a91afce2ffbaf463b275bcf39d bd56f3135e1a2bfdd8414095bf95d1e6e522588c d591a39d80c66e77f18f19870da7001ad67366cb a17d8999289efd66ee348159576e6528dfcd4099 6fad1785700f3f491249f9b07d993a0c3921ac95,priority: high@type: feature request@tag: build / tools,Add in gtest source to the repo,This pull request adds gtest source to this repo to resolve #312. 
dartsim/dart,323,2015-01-28T09:13:12Z,2015-01-29T20:57:32Z,True,2015-01-29T20:57:32Z,63bc1179f735762333730a1fadfdcbf14f97576c,2,1,b677c0593b89fd87d9b4bfb51f6fcdaa55d769e8,, Fix 321 Remove unsupported axis orders of EulerJoint,Fixes #321  
dartsim/dart,345,2015-03-06T00:36:51Z,2015-03-06T03:50:12Z,True,2015-03-06T03:50:12Z,a55d3a1b4c35bcee36af35b991d16cd210417709,2,2,564b20e1e60ddea709d7adf35c5807bb3f2754ad 7387869481f35cffbd9111eb3cbe5ee30160e69b,,Fixing segfault in SoftSdfParser,The atlasSimbicon app is failing in master because of a segfault in the SoftSdfParser. It tries to call "getTransform()" on a BodyNode that does not yet have a parent joint  and this is guaranteed to result in a segfault  because the parent joint is strictly responsible for the relative transform of its child BodyNode. The parser has been corrected to set the transform-from-parent of the FreeJoint according to the initial transform as read by the SdfParser. However  we might want to consider setting that transform to Identity and using the initial transform to set the initial joint values of the FreeJoint. Either way works  but one might be semantically preferable over the other.  I also modified the warning message for the soft boxes to be a bit more clear. 
dartsim/dart,319,2015-01-27T04:19:30Z,2015-02-21T03:31:51Z,True,2015-02-21T03:31:51Z,1ce8c7279195dd7ce6dd69f9daf877d9fae3bc0a,74,101,3823bca2bc04afad7cd05740f4efb017d24abc04 e2419a5c51fce9147481df538345861511952220 2b49a7688417213c374f09367f69584054fc7033 30c5e5599d0c3a00f176104c69e36cda2858212f a51d3f4971a1f26aae443eae9620da7a9ed6ba31 ea74a5f505d8517e6c72beb05f86308dd7064574 f72de76182b2120ff4558ee7b1c068e19175bdf9 1f2328b58c0125ec8c5fd0426b0617b69633bb60 8df2d5ca0b9ff823fe7c31be3c810c7bf978a1c9 1d3e9238e1d8821fd723c000fa8383924566245f d4cdf6a8dcf5a724b76e1285667123790b6d7956 d6af7c416cdbe8c81a660ef66304459a71f1a436 b8a20926f31936a2558bed8954516f802f774c91 61c4ba6fcdf12f4e382d58d99aba04827c1d9a0c e05052544265fb2a3b5ea310cfe7facab5390db4 6a50ac59c5624ba6e6b315351a144bf7259c2bc2 4890352ed484f086efc3a4261b90bb7118db1412 0bd6cbbc84eb101a3423d54535db8d3c7f8f3884 1357a11dcae81391683f1c557066f0bd8603ecbe d00e9f4d7f73fcb36e2bc55ae5bcedcc10f53dd9 72eb423c6175e71a2c28cd2493dca1ca9cfe4215 85e44d708543295cbcf74c24cc97ac36819aae81 677eab903a801f00c4105a7156a8571eb4fd78a1 61bb072ff965af2d2c0352ea228651d123bb2815 ef541d637349d208e78c6e1e8656553569e993c4 0520058e7a0aac46d147120624a0370883fa42e4 0499933601326899c6ad6f9460519c471859fe3c b9dabd1a10794d5a8c55b02beb3926f309b3d204 184301a699880a70cfc919f4e3305ac360950d49 f4f94d772da462fa17d9230cb9f99baa313430dc 00c39ff35d96b01a8e2d2c08d9f86d3a9c2fb128 233ee8492a87822c623eada4915ae1c05695b944 2a0fd739157b226af76310aab0ca89f8c033fe8b d213fa5a6ad8df607365a8f96b4e3cc7dabb3e42 cc7c08497c01a5c67a2d825718a06fd7678750a0 5c4aa6c14a91d8962f82311a65ed49daf1c09787 ec158655d46d515f62055023b9bdd6e52090e27a aed9493db19cb4a98b265f199d7aa18ed2caa25a 40898c66a0306bccd794db6781393e1f1400236a ffbefaa34f6d453f71b60834d0bd890e171df316 d58a0d19d5ac365707ccc0b9acb68f9b51e3fbdc 011b26d4ee20f459dc217edca46068a0666c3909 77aa44aed68355fb49b9a5308ab3c5297ece849c bba92a17d793ed3e3932384627c08b7954955c3f 92f434da4ed834140015654e0e7145f81ca03041 7a638624b8f5ec58558db29e5fae03b40518f1d8 ac9074c91563157bc25a3596c77d19672e569166 8e1655915428162635c9bbf7d14b9cc7ec713805 35a47e4798252985b15810ebabeead42830c355e d79f6c837f36d753e81bf2607011630f51f53cf4 1346645901f6ac3667955645bb34d54548cf3152 2d09965eaf07eceb024f45a80e96627eb0279733 1c3a1a204b00b7b716c9faf70549d4eead8d509e 2dc8eb72be244e93c656e7d8bc262075d57aa902 9c1906fc6d6c27324933c814aff9d74f8bf5a4b8 47966565ca54a54bbe7ca78bc4ca05751f002e1d 01fe794dc5789991d8f8e2d3075a19d535567964 90c4d9eba36c67cc96083abfd6d0882fac247b6e 4e5720e48df574d59d39f130c2e11293ed09cebf 6066b7de6cd2e3a0163671f07d1a427db9f5ba0c 171c5f988c7b19727aeec6b5026125ee2d5347fd 5b69da9f046119bc0c64162dc292f5d7ffbecf71 c57b48fbffe26ac7fb9a8f87964c7b2df19e7c43 0fd0a7bda7dc993f26779d522468d5bb3e059dd8 cd51cec3f5104d48648874554634d4d0dcdffbda 7b8e46d66f00139f0c116e79c0b93f970c2b3055 9845966c77ef9d471d2fac0b9de53b525b01574a 27fa8ec2d019080a0f7e6ba18b6ea1c7bf0b1761 773d9e3a10dadc66422d84ec1b01719bf2d640af a913a9f68ea178bc937c994d5d88acaaa080ee84 a8ef66d107e6194e2c6c345553aaabd2109880c8 90314ae00287420da47f5db104f0186abed6b8f2 391acd5a75a8e1f916e480d476028264c38b516a d3e5504d3cfa189e17792cce154c9060553e5a81 b7e7cc587026fc4205f0107bb96058c1a24c03c6 c7832c4630b2af3ca3d9c6e0fbad208a83563291 9ea388fcabd65830eeb57f7c356c12367de41b46 71b4b411f674c615b6497c62877ce912351bf0ca e6bd8b74eec8919b8752c242741ca11ffc06597f a47fdf4d01afc322e7af6b7cbca84bc29af18d7a 44cc773da779dea9cac25c862699d8495240730a b27583751bd9a72b9e0cea0304f0a6e671e8606e 34e7fd6bcb0b87c55caadaa2fa520fe312222a1d 9370e2d27bdc7615e66a0c896057aaf400acb057 738ce5aecab709e21486402c9327fa2ef0bcd69a 600789b3ec3c3ed419db813c125db589a16eafe6 8cc9c06857b5b9d55b0e412ae09157c620e431ba 9aba62e4f984f2164167369ccd9f17c3651de9db 3af4393a740c6c7747a2039601ef4b684646487d d4889d0a515734d9d5cf4b3e4168b31be41146dd fb474e6737756c5ae8989999317e64812e2f8d9c ce1784936b21c8376fa3f41f63ccf6164f67d7be 52219ab78549611b89db398005c5efa48c1774d3 15dbdf9866c4bd734a08db8e9b2e535bd335bd02 5bf0c0caa4eb14e8c8262360ab05f04dc76435b3 b57e2697155b81645808f93f2f8695e618f77211 22297dd6842773c7dc5b467d17c1c1d62aa3deca 86d3c2ffca8a135ed4184a389ae77c5fdcad11aa 5f3ced5e7bd8b791a610d1b15fca3a4d56b0bb53 5fac2732fd687aea4507d01dfc0bfdf47febcd1c 87b1e9a831916c90517ce2a96aeb2cc6b591ab78,,Frame class and auto updating for forward kinematics,This pull request includes two significant new features: a Frame subclass (as well as an Entity subclass) and smart automatic updating for forward kinematics. ## Frame  The Frame class allows a greater amount of expression when defining and requesting data. For example  you can now request positions  velocities  and accelerations with request to an arbitrary reference frame by specifying a Frame class as an argument for various functions [(as an example  see the getLinearVelocity() function)](https://github.com/dartsim/dart/blob/6066b7de6cd2e3a0163671f07d1a427db9f5ba0c/dart/dynamics/Frame.cpp#L165). #### Entity  The Entity class is simply a base class for anything that exists within a Frame. At the moment  that only includes Frames (because Frames exist within Frames)  but in the future it can include things like a Point class (useful for expressing center of mass or collision points)  an Axis class  a Transform class  and perhaps many other things. ## Auto-Updating  The other -- and possibly more significant -- feature of this pull request is auto-updating for forward kinematics. From the user point of view  the impact of this feature is simply that there is no longer ever a need to call Skeleton::computeForwardKinematics(). More specifically  forward kinematics will always be computed when it's needed and will _only_ perform the computations that are necessary for what the user requests. This works by performing some bookkeeping internally with dirty flags whenever a position  velocity  or acceleration gets set  either internally or by the user.  On one hand  this results in some overhead due to the extra effort of bookkeeping  but on the other hand we have much greater code safety  and in some cases performance can be dramatically improved with the auto-updating (for example  the computeForwardKinematics() function was inefficient when only one portion of the BodyNodes needed to be updated rather than the entire Skeleton  which is common when performing inverse kinematics on a limb or on some subsection of a Skeleton). ## Speed Test  To determine whether the bookkeeping overhead is worth the auto-updating  I wrote the speedTest app (note  this is not a unit test because it can take a while to run). When comparing this branch with the [grey/speed_test branch](https://github.com/dartsim/dart/tree/grey/speed_test) (which is the same as the current master  but with the speed test added)  the difference in performance between the two branches was not appreciable. I ran the speedTest on each branch ten times in "ideal" conditions (I freshly restarted my PC and ran nothing but the terminal) and neither branch was consistently faster than the other. Ultimately  the worst performance of this auto-updating branch was less than 1% slower than the worst performance of the speed_test branch.  By default  the speedTest app is testing the speed of dynamic simulation  but it also includes a mode for testing the speed of pure forward kinematics. Comparing the results in that mode  I consistently found that the speed_test branch tends to have _slightly_ better performance for computing all three (position  velocity  and acceleration); it seems to be a tossup when computing position and velocity (without computing acceleration); and then this auto-updating branch tends to win by a significant margin when computing only position (likely because the amount of bookkeeping overhead is minimized when only positions are being computed). ## Caveats  It's important to note that the auto-updating comes with one important caveat for all DART developers now and in the future: there are certain data members that **must not** be modified or even accessed outside of the appropriate functions  even for internal use. Some of these include BodyNode::mWorldTransform  BodyNode::mVelocity  BodyNode::mAcceleration  and even others that might not be expected like Joint::mJacobian  Joint::mJacobianDeriv  BodyNode::mArtInertia. There are too many to list right here  but they should all be noted in the header comments. The reason these members should not be used directly is because they are carefully monitored by the auto-updating system  so anything that writes to them when it shouldn't will invalidate results  and anything that reads from them when it shouldn't might end up using outdated data.  This raises a question that I'd like to pose: Should we append something to the names of these "untouchable" data members similar to how the [Hungarian Notation](http://en.wikipedia.org/wiki/Hungarian_notation) encodes information in variable names? Normally I would not advocate such a naming convention  but it might help future (and even current) developers if there were a clear way of immediately knowing that they should not use a variable directly. I don't really have any good suggestions for what the code should be  though. Maybe append "_dnu" (for "do not use") to the ends of the variable names? ## TODO  Mark functions that are now deprecated (there are many…). ### Final Comment  The changes that were necessary for the auto-updating to work fast and reliably were pretty exhaustive. Don't hesitate to ask if you find any changes peculiar  or if you're wondering why some were necessary. I had good reasons for each and every change  and I don't mind explaining those reasons. 
dartsim/dart,338,2015-02-22T22:21:04Z,2015-02-23T01:02:30Z,True,2015-02-23T01:02:30Z,b3b04f5ca02d9554abf63b688b459b18eed86d3e,2,1,404d66a322ab53702aa182781dc866e5cbe79095,,Fix the initialization for FreeJoint convertToTransform ,This is a replacement for Pull Request #334  the difference being that this one does not use Eigen::AngleAxisd for exponential maps. 
dartsim/dart,349,2015-03-13T07:26:14Z,2015-03-16T22:27:01Z,True,2015-03-16T22:27:01Z,97926ddea599d48aeabb8930c48e63c994261f4a,10,5,64295959171196de93962d152487ed6b937e5c51 b7efa05dae41cafbd4430362dd3db513ff6d14bb d54b89bfdfe40dc4bc80ba28b903856c26bbcf15 603e57db4586b4bd015bb8671a5b9ec051794c8a a397eb3211d4bd4be5f0d6df9f0875cff6a7eb92,,Implemented LineSegmentShape for visualizing line segments,Line segments can now be added as visualization shapes for Entities (but not as collision shapes for BodyNodes). Collision checking with LineSegmentShape has **not** been implemented yet. 
dartsim/dart,350,2015-03-13T19:10:43Z,2015-03-16T22:26:47Z,True,2015-03-16T22:26:47Z,76925e00879452928c54b4c043fe3a9a68602b58,7,10,85f534c7224d51bfecdc59064fd53e6a94ac2bb3 a236513381c7a370d23205c2094858883e510336 6164c70e413c4e7257ff67c4bc2fc6e17a7fe075 ff49814189516bcade980aa7d687be91a1e14ae0 e7fb94eb226724eee9185fed49a313bdb0576d89 cbc6996d2dbe93609570d89d24cf1444fa03c7e5 b69d852ff3a482467cda905c41df5d79594e613f 0f09836b6a5be7fb38bdaad25d5361fce00522e5 d2f8587df112c902db1159965e7b771c124fa126 292b78ced5c007b2406cbaabb6ab1bd2c6d33294,,Signal class,This pull request introduces the Signal class that provides signal/slot mechanism.  Basic usage:  ``` cpp void foo1() {} void foo2(int) {} void foo3(int  float) {} double foo4() {} double bar() {}  int main() {   Signal<void()> s1;   Signal<void(int)> s2;   Signal<void(int  float)> s3;   Signal<double()> s4;    Connection c1 = signal1.connect(&foo1);   Connection c2 = signal2.connect(&foo2);   Connection c3 = signal3.connect(&foo3);   Connection c4 = signal4.connect(&foo4);    s1.raise();  // foo1() called   s2(10);  // foo2(10) called   s3(5  1.5)  // foo3(5  1.5) called   double res = s4();  // foo4() called    c1.disconnect();      s1.raise();  // nothing called    signal4.connect(&bar);    s4();  // foo4() and bar() called } ```  This Signal class is quiet similar to [Boost.Signals2](http://www.boost.org/doc/libs/1_57_0/doc/html/signals2.html) but is light-weight version and faster than Boost.Signals2.  This Signal is not thread safe. It will be considered when we start to make DART thread safe. 
dartsim/dart,354,2015-03-17T00:17:51Z,2015-03-17T06:02:27Z,True,2015-03-17T06:02:27Z,fb6d367a5a0317ad3225d6ef79f75b1e633fd7ff,2,1,e7437b6c6dd2a80ecb213a0080cee3531b49526e,,Fix matrix dimension bug in operationalSpaceControl,
dartsim/dart,355,2015-03-17T16:52:40Z,2015-03-17T21:12:40Z,True,2015-03-17T21:12:40Z,8995c42275c46703f8931a22db8c4b97f6195f79,11,2,05cf589a8936aa5dc032ed748565f92d91fb89d9 3796b75432b034e576e8663c47e625bef7798e50,,Move glut dependency from dart core to dartsim/dart,Fixes #329. 
dartsim/dart,357,2015-03-18T10:26:00Z,2015-03-21T03:59:25Z,True,2015-03-21T03:59:25Z,4ce943e3efca17e625a4ee59a51f371d46b4c8d7,3,1,66d14a68574e1bfcdb4cd1b8ffc4db2c0484c6a0,,Add Jacobian getters to Skeleton,`BodyNode::getJacobian()` returns (6 x m) matrix where m is the number of dependent dofs of the BodyNode while `Skeleton::getJacobian()` returns (6 x n) matrix where n is the number of total dofs of the Skeleton. 
dartsim/dart,359,2015-03-19T04:56:42Z,2015-03-22T00:18:48Z,True,2015-03-22T00:18:48Z,83343a224681dab4326d3bab051a02c7dc17c742,7,4,c37ff5ca9b772a2bf141ab09cfeb80af237fb119 55cbd381c05db26b880884bbef4a6c248911cd9d f48585429576a995234c616d0b367cb3046fbf2d 8275988f1de8624edbb7f7ec9b80f7a4e7ab8618,,Added alpha channel and Color functions,I've added an alpha channel for Shape colors. It turns out the whole OpenGL renderer pipeline was completely ready for an alpha channel  it just wasn't being used.  I also added some Color generating functions. Rather than create a Color class  I simply made a namespace called Color in dart/math/Helpers.h and put some functions in that namespace. I decided to inline all the functions so that end users can just check the header to see what actual color codes are being used for each of the color functions. 
dartsim/dart,356,2015-03-18T08:56:54Z,2015-03-21T05:10:12Z,True,2015-03-21T05:10:12Z,ab3e114db4cc6dc7263e6da6d55c0bb5b6dabace,6,3,4b42861499679891526e7d3dc223945085591a0a 0a0ec901d8a20ec17478f78a4201a4fb6521baa8 4ffe80bf0c8fe7c5709e5031eade77462cf6e882,,Implemented ArrowShape for visualizing arrows,I've created an ArrowShape which is just a specialization of the MeshShape.  This pull request also has constructors and destructors for aiScene  which allows us to delete aiScenes in the destructor of the MeshShape class. The only catch is that there is a `void* mPrivate` in the aiScene structure which cannot be properly destructed without some hidden internal assimp data structures. It's probably worth raising an issue with the assimp retainers to understand why certain important constructors and destructors are not included in their basic library. 
dartsim/dart,364,2015-03-23T21:31:34Z,2015-03-24T20:21:58Z,True,2015-03-24T20:21:58Z,86afd55c89ea7c739084bf219031a3f2bf126422,4,1,18dacc4ee6fee712c0274c9beea70483708c0482,,Better robustness and package handling for URDF parsing,I made changes to the URDF parser so that it can handle package names and directories correctly (thanks @ehuang3 for the info)  and while I was at it  I found that the parser was rife with poor error handling (including memory leaks and poorly explained exits) and screwy formatting  so I fixed some of that as well.  Now the URDF parsing can handle arbitrarily many different packages (instead of assuming that all resources will be in the same package)  but it still depends on the user to specify the paths to the package directories.  I also added the ability to parse raw xml strings instead of only allowing xml files.  Note that there was a necessary API change in order to support multiple packages. This will not affect any users who were not using URDFs with ROS packages in the first place. 
dartsim/dart,363,2015-03-21T03:58:06Z,2015-03-22T09:34:07Z,True,2015-03-22T09:34:07Z,4ca4cdbd9ecec43c54f04555f6b7f74ef9338114,2,4,ee53a5e9f9691101fb5750262b3b5ffd75cf6bd0 39ca1da275a2690686451af4de112c0fa0045a87 328e7cd5e62c796e98c7523009902483bcdd78f0 5811f87866ae6851bcb1da4be3aaf970f62b2efa,,Fix BodyNode _updateBodyJacobianSpatialDeriv ,
dartsim/dart,352,2015-03-16T22:24:48Z,2015-03-19T12:11:49Z,True,2015-03-19T12:11:49Z,50e8caf4ca3401ec1f7dc05ca144e95877896957,1,1,47ef07631644f73d26fd6dd0a1258cee76baa43b,,Add missing bullet includes,Fixes #351 
dartsim/dart,353,2015-03-16T23:52:10Z,2015-03-18T17:13:26Z,True,2015-03-18T17:13:26Z,d73f36bb04c61e13a07bcae29ae4bc1eb871daab,2,1,0dd04767f046ba52fdba12c5165876471cd9ffc9,,Add build type definitions,
dartsim/dart,361,2015-03-21T00:49:26Z,2015-03-21T04:52:10Z,True,2015-03-21T04:52:10Z,c0b95c32249cc6b03b34e087f28b88fdb7447972,1,2,dbc3df4c803c9c10d6e6a310b34f249e020f26c1 0bada001415304dcd3ad0aeefbc8a6876eb8d2f5,,Fix BULLET_INCLUDE_DIRS in DARTCoreConfig cmake,The fix from #352 doesn't work if the downstream code doesn't have the HAVE_BULLET_COLLISION variable defined. This change just inserts the BULLET_INCLUDE_DIRS variable into DARTCore_INCLUDE_DIRS and trusts that it will be blank and not affect anything if it is unset.  Closes #351. 
dartsim/dart,367,2015-03-25T21:17:40Z,2015-04-02T10:12:51Z,True,2015-04-02T10:12:51Z,9e001edd2ea7c1d8de1321128e36c8fa65079847,4,2,62ff43b017ca7e4451e50863f4119f5f3ca1cc80 7e9bfa4a4092c817089dae463a7e6f62afd2786d,,Move visualization functionalities from BodyNode to Entity,
dartsim/dart,365,2015-03-25T15:34:12Z,2015-04-03T16:58:11Z,True,2015-04-03T16:58:11Z,0a4bd77a033c9d9b5c8c823c033f9907b06499c3,1,1,067f2e6bae6a055025f9acab7c30ae66e6c61148,,Add appveyor options for parallel build and detailed log,
dartsim/dart,366,2015-03-25T16:07:54Z,2015-04-02T10:12:40Z,True,2015-04-02T10:12:40Z,672582d32bdfcfe8536f3ebd0a33cba11764eb8b,3,1,e2ea441ed0f72ed91377fe75568c06f7c27de263,,Use scalar offset instead of 3d point to define a PlaneShape,
dartsim/dart,377,2015-04-23T08:13:54Z,2015-04-28T19:34:26Z,True,2015-04-28T19:34:26Z,d0e7ed36706bda1b8c6df92553d02c814317e5aa,2,1,fc1b28bb1da319f1683da2bcfb88b49abca6cfd8,,Reverting PlaneShape constructor taking normal and point parameters,Revert deprecation of PlaneShape constructor that takes normal and point parameters based on the discussion in #373. Also add setNormalAndOffset and setNormalAndPoint. 
dartsim/dart,384,2015-05-12T00:09:16Z,2015-05-13T15:34:56Z,True,2015-05-13T15:34:56Z,ab78611279845c416e02710d989da7f1bf41eb16,1,1,b41c66bfda5d33881e8535e73d67f81dafee573c,priority: low@type: feature request@comp: common,Add deprecated and force inline definitions for clang,resolves #379. 
dartsim/dart,390,2015-05-23T23:52:50Z,2015-05-23T23:55:59Z,True,2015-05-23T23:55:59Z,c364c858aa6db3b72f42b229c9f587d429638371,1,1,bea1eea48e91ab6846c8c92bc37b732bd8f51bff,,Fixed the range check in getRootBodyNode ,This pull request fixes a bug in the range check in `Skeleton::getRootBodyNode`. The condition was inverted  which made it impossible to call this function. 
dartsim/dart,391,2015-05-23T23:57:04Z,2015-05-24T00:01:48Z,True,2015-05-24T00:01:48Z,398281982df694059a68432270c47377759389fb,14,1,6c96391b074ba887aeed7bd98fc057690129ec45,,Added virtual destructors to joint properties ,This pull request adds default virtual constructors to all joint `Properties` classes. These classes are polymorphic  so this is generally a good idea from a safety perspective. This is also necessary for RTTI to work on these classes (which we need to create Python bindings). 
dartsim/dart,396,2015-05-26T22:41:39Z,2015-05-29T03:01:05Z,True,2015-05-29T03:01:05Z,b6474130e3476f91434d586af03d82428da6d5d0,21,4,59852e8db774ef5e76930a42b4de654e20171649 d02b9b2deea05413d8a258dbcace588bb7d0868d 6da27511e045841243393cc359e12696c69b3e35 49c52e612ede3ba6b4e4070f01e43637e22c685f,,Differences of generalized coordinates for DART 4 4,This pull request adds the same functionality of #389 to DART 4.3 for the users who want to stay with DART 4.3 but need this feature.   Targeting DART 4.4 branch instead of DART 4.3 since it's adding new feature. 
dartsim/dart,389,2015-05-23T07:15:39Z,2015-05-26T18:12:29Z,True,2015-05-26T18:12:29Z,129192179d23a810939d55e7e15376159f430069,21,2,6b5e239a9d7e5130a51bc9a8c5b21488a08b418f af95121f302439d61af4cc41e3f36ade6c216ca4,,Differences of generalized coordinates,This pull request provides useful API for computing generalized velocity or acceleration using finite difference method. Previously  the finite differences for BallJoint and FreeJoint required special treatment that might not be straightforward.  Example code (when the root Joint is FreeJoint or BallJoint):  ``` cpp // time step and recorded generalized positions double h = mWorld->getTimeStep(); Eigen::VectorXd q0 = mWorld->getRecording()->getConfig(49  0); Eigen::VectorXd q1 = mWorld->getRecording()->getConfig(50  0); Eigen::VectorXd q2 = mWorld->getRecording()->getConfig(51  0);  // Old API Eigen::VectorXd q_old = skeleton->getPositions();  skeleton->setPositions(q0); Eigen::MatrixXd Jw0 = skeleton->getJoint(0)->getLocalJacobian().topLeftCorner<3 3>(); Eigen::VectorXd dq0 = (q1 - q0) / h;  Eigen::Vector3d dq0_root = Jw0.inverse() * math::logMap(dart::math::expMapRot(-q0.head<3>()) * math::expMapRot(q1.head<3>())) / h; dq0.head(3) = dq0_root;  skeleton->setPositions(q1); Eigen::MatrixXd Jw1 = skeleton->getJoint(0)->getLocalJacobian().topLeftCorner<3 3>(); Eigen::VectorXd dq1 = (q2 - q1) / h;  Eigen::Vector3d qd1_root = Jw1.inverse() * math::logMap(dart::math::expMapRot(-q.head<3>()) * math::expMapRot(postq.head(3))) / h; dq1.head(3) = rootRotation;  Eigen::VectorXd ddq = (dq1 - dq0) / h;  skeleton->setPositions(q_old);  // New API Eigen::VectorXd dq0 = skeleton->getPositionDifferences(q0  q1) / h; Eigen::VectorXd dq1 = skeleton->getPositionDifferences(q1  q2) / h; Eigen::VectorXd ddq = skeleton->getVelocityDifferences(dq0  dq1) / h; ```  Also  getting differences from a Skeleton with new generalized coordinates does not affect on the Skeleton's generalized coordinates so that we don't need to backup.  Resolves #290. 
dartsim/dart,393,2015-05-24T00:11:55Z,2015-06-06T06:13:15Z,False,none,7ee0733093b52c7ad5fd0c9c932ebc12b2b13a5e,1,1,ed9816a5f2599e82c3589e15a5e8047fe8e916e9,,Remove GL_ACCUM flag from SimWindow,This pull request removes the `GL_ACCUM` flag from `SimWindow`. This flag was depcreated in OpenGL 3.1 and is not supported in Parallels VM.  Does anything in `dart::rendering` uses accumulation buffers? If not  can we remove this flag? 
dartsim/dart,402,2015-06-06T06:08:25Z,2015-06-10T12:20:29Z,True,2015-06-10T12:20:29Z,08c231da1ea62522a22cbd5da23fd7fd421a4c69,3,3,c6b2fad0984d05e239dcd45fd430ad86f3f7d4dc c08318a8ab5a49c121b781ada22d3e0484786b2a 4993cd3f8700e288607f07e2b77cf4e781582ad4,,Multisample anti aliasing,This pull request replaces our own multisample anti-aliasing implementation with [the built-in method in OpenGL](https://www.opengl.org/wiki/Multisampling#Rendering_with_Multisampling)  and removes the use of accumulation buffer  which is [deprecated in OpenGL 3.0](https://www.opengl.org/wiki/History_of_OpenGL#Deprecation_Model).  Also  `GLUT_STENCIL` flag is removed since it's not used anywhere. 
dartsim/dart,334,2015-02-14T00:52:02Z,2015-06-11T15:05:27Z,False,none,50e7301bcb97138dd59254cca866126f5cc95bd1,79,3,e6962a431925e276c882e575998bf03520159339 09593fe0c8fe0b588cd9eea577866795a41dc3de a69295bf4e4261f4b10c70418c3b79dad7aeb7a6,,Use Eigen AngleAxisd for exponential maps,A simple fix to FreeJoint::convertToTransform(~) plus a regression test. 
dartsim/dart,404,2015-06-14T23:55:32Z,2015-06-15T13:44:38Z,True,2015-06-15T13:44:38Z,973d59047a1911000b885978ba921d65d7f51a04,167,21,65b4f5b11d5c1e3614a94cb1a2ce034d7e25f1cc b163adb83cfbadbfe97b0d38bc2844c3abea975c 45779361602cb25ec57a4f79a25bbd443a6ea9cf 9678aa808aad194aa271bf7847352c24f3c6ce0a 0ea3304c71e926c1a5d58dc044bf1da923fa2eb8 6a3b88994b8eca1f59ceebed816a3ef285ba9eee 3e7565870bb5c135b49ee6ba931ecb03c49e7448 36777be73da5975ea0c5a31431fb0a22acdfb4bb 6dc95afc9e219ae52f6d549931db98d6cd4ee51b 8e5e7ac44cde44bcecc2ac2f4c51f14896dabf61 db8b1df822196417e9f65a8f1b9ee73a720ae4ec 3b09a3fc02a60ce9fbea082ba9e090de5c0f84b0 f3b2bc3ab3ef0556352029b121e07b7d394e42cb 672efb89a27f911fbcef825fdb4478634b64a78c 32b2fcd33c3419bc26d0b387c3da9b4715d6ccbd 6929f2ab55608b6c3763e8f43b974657011798de 14cae5890db90c224ecc90fbbc62b0b472e30349 ef5af9c7bdb8a9baf34da15abbcf1a3173c99f6f 99378bd8b6732c5f37d3ab5a3187f8ebbfc53e66 06594279624a79f7725ca3bb45b446d4a633fded fc87927662acbb1b2f16ce367a978e885aa1e0b9,,Polishing up for DART 5 0,This pull request - removes the deprecated API - suppresses all the warnings from gcc and clang (and most of warnings from cppcheck 1.67) - replace `NULL` with `nullptr`. 
dartsim/dart,397,2015-05-27T15:31:58Z,2015-05-27T22:28:29Z,True,2015-05-27T22:28:29Z,8c29a337321fb2bad2ab633933a11a05ebbe634b,3,4,15679cc838428b647306ccad030d2154ed46908f 856b499f634d4957679e7dc65330991231ababa2 bfff3c738ce5ccc96cfb58847f05572eb080468f 29ac9f5e03dfda956c8fc01c671064e7e2085444,,Store path to mesh in MeshShape,This pull request adds a `getMeshPath` method to `MeshShape`. This returns the path to mesh on disk if it is available. If not  it returns an empty string (the default behavior).  This information is necessary to render meshes with non-embedded textures. Assimp references external textures with a path relative to the directory containing the mesh. 
dartsim/dart,392,2015-05-24T00:05:12Z,2015-05-27T08:00:47Z,True,2015-05-27T08:00:47Z,800deca8250ab334553266487436af365791c367,21,3,974d7b07759d4591e1e67518bd9ef2bc52afa189 fb0ce925c9db90c4e4fbd41cc73fbd2e57a4d8cd 71cd7b33d6776baa666d3c44ceecc619f6526124,,Added getType and getStaticType functions to Joint,This pull request adds: 1. a virtual `getType` method to the `Joint` base class 2. a static `getStaticType` method to each concrete `Joint` class.  Both of these methods return a string representation of the class name. This is useful for debugging  for logic that needs to change depending upon the joint type  and for language bindings (where wrapping templates is difficult). This currently requires an exhaustive search over all `Joint` subclasses by checking the return value by `dynamic_cast`.  We were careful to make both of these functions return a const reference to a statically allocated string. 
dartsim/dart,409,2015-06-16T03:35:39Z,2015-06-21T00:17:34Z,True,2015-06-21T00:17:34Z,e82bdfa2ba9192237b58e4cab4d94ee445195d12,9,10,cc436448327d6b01af99184b11a98628785d22f3 101e29150dcf1ab09c0c8966fb7f78edea262bf6 8193686f2109494c6dc02af2f5888e48f1a33272 23b8c6ab19ca5a1bc5218cd0318b836621d73bd7 4971882fbc15c0560c4749b0ffa67473be1e6345 c24135443f35190e82f9d81c2d61a8a6f5d9638b 059352c14a01d5e923ba9f5656d8995d2c8555d6 0a58e41700ed294fac9a996a2afe653665c3bffb fca76df4e22f5f83b8b66d5762c7d1356af1da54 2079c4555be201e1d84aff4c190041433fc1d167,,Packaging DART 5 0,
dartsim/dart,414,2015-06-17T13:47:00Z,2015-06-20T23:10:40Z,True,2015-06-20T23:10:40Z,13e52dd9f29e10b8e4db6b7c29c00d17f5ebb2f0,24,10,e2d6bfe0658374dbe3f7757a2032d6c414dd4f61 5ff9acd8b20d7d568fa6cd2461ae987cb0e00feb 69e0374b8b6433e2b82cf21612e0e51f1d89e94c 37599aef7fe9d0bc7e8869e443217bb8e2142cdd 7eef4b3422bb64901c055618f531a5c8547c15e4 c130d4242b2fd897c413c3a437ef281b53c9f11c 61f2ebf21fd88be1c56c7b3702c3cfc7da2b9c1e 1353f497c26fb0748656856813669bcc95e2ac71 dd2d2216545bce5b7160f1e27ddc40a22554dc98 787ef73d01afbea905afb97d292415cae821a27f,,Eigen aligned memory allocator,This pull request resolves [memory alignment issues with Eigen objects](http://eigen.tuxfamily.org/dox/group__DenseMatrixManipulation__Alignement.html) in DART.  Also  some helper types and functions are defined for convenience such as `Eigen::aligned_vector` and `Eigen::make_aligned_shared()`. One thing I'm not sure is the namespace and names of them. `dart::aligned_vector` or `dart::aligned::vector` are alternatives I can imagine. Any thought on this?  Related issues: #413  
dartsim/dart,405,2015-06-15T00:41:16Z,2015-06-15T23:55:40Z,True,2015-06-15T23:55:40Z,d6dd2e49ee9156bd8d058d1520715c9cac00f69f,178,24,65b4f5b11d5c1e3614a94cb1a2ce034d7e25f1cc b163adb83cfbadbfe97b0d38bc2844c3abea975c 45779361602cb25ec57a4f79a25bbd443a6ea9cf 9678aa808aad194aa271bf7847352c24f3c6ce0a 0ea3304c71e926c1a5d58dc044bf1da923fa2eb8 6a3b88994b8eca1f59ceebed816a3ef285ba9eee 3e7565870bb5c135b49ee6ba931ecb03c49e7448 36777be73da5975ea0c5a31431fb0a22acdfb4bb 6dc95afc9e219ae52f6d549931db98d6cd4ee51b 8e5e7ac44cde44bcecc2ac2f4c51f14896dabf61 db8b1df822196417e9f65a8f1b9ee73a720ae4ec 3b09a3fc02a60ce9fbea082ba9e090de5c0f84b0 f3b2bc3ab3ef0556352029b121e07b7d394e42cb 672efb89a27f911fbcef825fdb4478634b64a78c 32b2fcd33c3419bc26d0b387c3da9b4715d6ccbd 6929f2ab55608b6c3763e8f43b974657011798de 14cae5890db90c224ecc90fbbc62b0b472e30349 ef5af9c7bdb8a9baf34da15abbcf1a3173c99f6f 99378bd8b6732c5f37d3ab5a3187f8ebbfc53e66 5369f80daeb52f6483903a7c3b7ba455858e2f12 c24b4d82768764ad157320e804144eba473527a6 0d11d2c5f6e6a67d7b1919d7440061bffcd94d75 36fdaf64855f44a933711be8bf3589f3158267ce a1cded975e85a85766c40c68a38d4517a604fca2,,Improvement of FCL collision detector,This pull request improves FCLCollisionDetector that utilizes primitive shapes and broad phase algorithm of FCL.  Related issues: #19  #20  #59 #### Caution  The current version of FCL has some issues in support of primitive shapes  but they will be resolved in the next version. In the meantime  you can use [fcl-dart](https://github.com/dartsim/fcl/tree/dart5.0)  which is customized version of FCL for DART 5.0. Also  debian package of `fcl-dart` will be released shortly.  You can still use `fcl 0.3.2` but the result will be incorrect.  This video shows the result when you use `fcl 0.3.2`: [![IMAGE ALT TEXT HERE](http://img.youtube.com/vi/uTwn4ZQpDtQ/0.jpg)](http://www.youtube.com/watch?v=uTwn4ZQpDtQ)  This video show the result when you use `fcl-dart`: [![IMAGE ALT TEXT HERE](http://img.youtube.com/vi/isNNFVvqsC8/0.jpg)](http://www.youtube.com/watch?v=isNNFVvqsC8) 
dartsim/dart,369,2015-03-26T09:27:02Z,2015-06-12T10:27:51Z,True,2015-06-12T10:27:51Z,675b8de65b028624ce0d284ce1f7428de0277c38,176,154,a629753bf7352e89efda174bdfd6f801846ad99d 446014d5db31f54b4ac3e049319117406fc0592b 0658888b31fe0dd304e26465dfd22cb67a448947 5e16a07c2dcc6ba7e11a74425320eadc0cd6a846 98573eb630c21315fe504c4f96de9b754b8ab421 4ba7e645f1377a3f9dff2b1dcc98eb12e688f88d 96769eea473cbe49939d09787bb592ee1cd3048c a38547e4f180a5d4ea64cbc33e66bf1d143cd7b4 2f224673ce081b1b6f30a67393d732f5c0ce7cd6 b479c30a84f328df3907b1979ddefef410da813c e76fbe059da9fe63ea807f8d28183d2043728356 e81642a59e62801c2a8910816f57329b55892385 9dad4be5bcbcb7eb87c33b4135679aef3b85895b 9704b68697840e14f68b6aac4d0b7b816cb1d075 64ade0aad151e74d68a96e6886ade1ae5b44722f 7e7c88914e661aaab6e4bb23ef1830732f1ada5a da507deb737207d43cf23306d26277ab3cede1dd c8e7b6cfa86d6481c0727e662578d31a472975f9 3d5881e72bcb8c320f70ecc82312f9801f8b6fa6 56d2d33866e96c605b6d1e3560430e2d8cf2343f b233ad2dca26f7760bcb6d38fa7ec5c4a8a8f559 a2a039f8aa9893e255694bae3320524aca6994b8 4fc9c947bc9bdbd7c1f5edfa4972049bf653d921 6888893f8307fb245f94331f016ce2218e0d543f ccd0602868b6252f3925417af2ccb7e520d06aa7 58e97f7ff2752e6f463ae424dfb93ec6c4a83165 449a0bb90bc60a7d38c494b023a8d6b29b73ee21 7914df33da84e7010b2736d9c529c2de8642a898 17a32d75945c922f9abce6b2e2580b641e38e651 1199d67a5e38cfbe432a8dddcef3240c21c03a82 e615aeae5652837f47e260b84024fd46e540e7b9 062a3527d60cbe94ae2f3c289c3b74db377e4a44 49b274e54b1bdee99086703347d3caabb71c8059 526ca6f8b488f48e8c834dc558be4b52965b1728 a011da152399697b3ae09747fa626c6e49e0fad5 8e06164eac66ff6c2243aebbbb430122e7d3f815 e84797d82a03dd21e6ed4ca82da6a69bc1ccdf16 c4971ffac192a355724e3110639c6ac505fbad5a 69ff775ed736ee2192f6776c50d0e3cc879fafdb 4432a95d2d8b28ccfaa11b7489ac70ae25cacc82 23b9e6183d4e2169d7d1e02ad0f5b27a6f78e08a 440b7c34782f0f6e23e235b0f0899b570f6af328 6f0c941336e3785b8f22a97c2c79623b055c85c3 92fa9315baf9529ddb1a147c425b7d99e4f973e9 c3faa2cf246877b27225503ca32dc763f4ccb0c1 1cd828cd4a3d04d6ecf247c0ad393c432e905a49 c61dacd7964ecab7e0e73f625fac1371857ccc5a fb142f1739ad47dcea3c9e4d27f62bf3f428d0ab fff1f9c5baba8ea15d64c6a139ae7868a390c812 f6cf92143826630d9d6f4d26961c46ad93872194 d0fe4619213706fc376e2b7be0cd48c24c55c039 370a333eefdc6c5295811ff07c78a3190a347841 bb9be3db5e350f37f5835b29bfefcfbeded05694 5ee2403d59759dc70e55249b3da0d79c58c8de31 efd4bd5df5bb6fc4b44bd4c5e9bebc9be0751863 34c5f3afd6e999f66063d559ab80428fdc20b32c 6fc059df3f34379fd03aee468ff6f2b0c2eacd15 c04faa12f3e495a8407ae42b98bb14ba98ee9c9a ed35861f94a4494edc4629b95bfe53008adb7df4 1130d27f953bd237d203731e3e2be41359db685b d0764aaaff9b5d919c8ea508d8baaf582b006c9c 4f327656645f1e61131fd5a17b9ab54477847a29 91ed8fccb55ef4aa0aff522be4fe04d8cb64e463 2648d4a6d752122d7d5e5f73b8ec8feb6550bf36 b1066e277fe1362a3d0131bb212a5104f843db97 536e7774297e23835236cd7a0c0b9852f07bdb76 98d02de24cef15ab121b8d96acd69a1a90528856 298450f307a590b1238689c5a4e2291e00751ac7 1dbeafa2c080c0502a9ddf66f1c83cc10e639eb3 4ad76eb432764d7c31d5de75f41832abc2ffbe41 046820d67ca7dd4f97a210c2d3802b87a332af00 e09f223325c02be17fb3cada3cb53ae5b860be35 8b87b1d5ad3c4ad4bff635b28c366d27a566a5dc 6d64995ee031164f3ad7c33ce492799050379be7 d601569031c6441ee45e414720c2c375319aa818 c60baa5951c8b3d84247dcc4ff943e8b9d9e50f3 adf63f4efb2ea5c8331c74a2935ebec2bc723113 56e2c2a44ec0a09b94b31a4cf1e0c1642c909fb5 f5f81d9e4b257472a30c1468c5b23d8d6e8106d6 f74a1141136da9f30f9bcbea6a27eb94a9317254 1d0c4e79c22ac00210132c6a8ae7c721a97e87f7 44fe5ab3835809aab93c2cea2e991d2fe083c081 35725fc4267d16247904dd6f8a1016c7c06ffede 2f2c52768aaf9d2653217507095d3d61a9e98697 50dfc08f4cca6ff3162d4543776b5a2902228466 a1cac456e460bd1f53164e6d531e829b81c0c5b3 60398f9b6914791a8be2c5a7f55eafa64d05e720 266a0c9691dfb84e78cabc27d44f6b6a184db489 3b36db4163f46587b698f0cd191430df731963f6 32408ce3e0e26d8daf9d6d35c7503f49fc15c403 a37ce7e679cbaaaaa95965556c8492763fc8595e 397c553188d808be4ea30541cb0c640bf0b4dcff f61ba07253a235ecd14731d0f8b46c8bb37a78a8 9671b0dded7b7f56ca0a9d958f937f33cba2e69f bb223d5e3d06149e70eed97be8be1c3108c06fdc c9aedfdc0a4743c6dc1617fec3d3bbed58463e3c e3043e3625c3943a4f31e6c0ed508fffcc99326a 3e3bb1fde4d1c8077cadb83c25089533f01ac74a 802ec21412079644ceb8b9485ab7705e3ab0e265 7aa1442b06223a656acd2871a4fc88594a021c8a dcd5b84e89268d4f028442a4b08c43e82714d64f 22aff66c712c258b6415cd338ee8e2c031c3610e f2ffefd19f97e2f13feb410a0b79aa28a0eaa6a4 bea1eea48e91ab6846c8c92bc37b732bd8f51bff 6c96391b074ba887aeed7bd98fc057690129ec45 44c299813ca88d1b4942d266b7fad1717b039c37 974d7b07759d4591e1e67518bd9ef2bc52afa189 15e71d621d8d77a8efa12cbfb7a3554c9b07f90b fb0ce925c9db90c4e4fbd41cc73fbd2e57a4d8cd e94d6a39b6e758a7c7f5f0bdfe60269640001fd1 041969bbb0619d937b2202815d3e2c18c5b17cd7 71cd7b33d6776baa666d3c44ceecc619f6526124 15679cc838428b647306ccad030d2154ed46908f 5f3275e92b842e6756f1909892be7ea4c25739d1 f63d0ff246b61da7e8d14bccfedfe2726d08c818 47415ca00058d8e633548e9512a07adff05661ca 344e64fadbbb18a1aafde1291e078732ff1ec10d 2d9e06b6e459ffdd1bd70907203a731cadd56ff6 54ae12f463d3d6e6de44d8b8fdb57bd08be6d41c 15a0259b095ff60739ae2b7df2fd05384d6f3a14 f7f7c28d20621d89b664deaeb1583b0496289ad1 169613c0ce1fa1888c20c26456822b57de896c02 8a58794ccb132f43b35627abcd0552c847238fb3 cbdb20d39654ccd46a0900437cd86ec91ffb706e a3945bca16e82c3ad6a71367955e0721e25d5b74 a5039c987de0f04087c80853ec743fc1306d0b90 856b499f634d4957679e7dc65330991231ababa2 bfff3c738ce5ccc96cfb58847f05572eb080468f 29ac9f5e03dfda956c8fc01c671064e7e2085444 c127038b91914f1a65d4e0b877cf053ce3ff8184 f2d94753d668cd77a2ad5efdc56af79e6d4b760a 1d066a27c801ea11cf93e7b8612180c99ddc3149 876fbebf38b3104c6cb40d0d38df908578561ca8 dd81f967ffba8e75d45e2da2a5823742dda8c65b 0e642f637db5cb85efa3dd1e706ea3dfa5ff94d1 3992a5aa55bcd08c8a5950cd8c66e6cba77e655c 2e4c7ccaa241773b776ffd32e36ec123c91508da ef20002c02d697dc8f433a922153149a95a6000b 640d8a264f771c7fc60af0161eb3ea03ec71bae9 7bfce9111156558f112d33ba9ee1d9a94068f6f4 ebde971490dd4b5d869aa9249ae1306c884e50b1 57cc22eda6ef96ea36224d62108e6680473b9167 6f00f803c0a99b21987472e4ed75ecc9ee5f38d3 9b10c63c3a4c0aab349227256dad755e5151fa97 11485eeda68dd16b9f39304d1960ba5a3cf9ee6d a4e011a4b1fd6e6227bf5bd58825114049418a18 9c97ec6b2e855a624e458b5d254c35d13ce81dd6 268245bb43fb14c416f4a93a2d46bf82bfe524e3 6094b7725648331ad17776d64124e611e7beecf2 06f137ea0a13f83c03bf19f99412ed0592a0ccf3 67064ebd6467dc743d61c202203641df9132f682 2e29332601efa8ac1f1ad0b2fb61b8f11900e517 bc6dbb27eb5695c8a8563eecc7e33f1c1c150a01 7e93e175136c549174aab9532a4dd4601303d324,,Eradicating memory leaks making classes copy safe and clonable,~~This is a premature pull request for review and discussion purposes  not ready to be merged yet~~ ### This pull request is ready for review  This branch and pull request are dedicated to removing memory leaks from DART as well introducing the ability to copy properties and create clones of objects. Spawning clones will be useful for making efficient multithreaded applications.  The changes being made here are pervasive  and some will require breaking the API  specifically the adoption of std::shared_ptr for the Shape and Skeleton classes.  Here is a brief list of the conceptual changes: - BodyNode and Joint classes will all have a Properties struct that can be safely exchanged between different instances  and this struct will be used to standardize the constructors for the different types. - BodyNode and Joint instances will be fully managed by their Skeleton. BodyNode and Joint instances will only be creatable by the Skeleton class (the current procedure for assembling Skeletons will be deprecated) and they will be destroyed when the Skeleton class destructs - Shape instances and Skeleton instances will be treated as shared resources  and they will be managed by std::shared_ptr. BodyNodes and Joints are not shared resources because they are worthless/meaningless without being part of a single specific Skeleton. - It will be possible to clone Worlds and Skeletons. - Cloning a Skeleton entails creating a new Skeleton instance that is filled with new Joint instances and new BodyNodes instances which copy the properties of the original Skeleton's Joints and BodyNodes. Shape resources will be shared between Skeleton clones to minimize memory usage and copying overhead. - Cloning a World entails creating a new World instance that is filled with new Skeletons which are clones of the Skeletons of the original World. #### To be determined:  It would also be good to have a concept of a "State" to complement the "Properties" concept. I am still hashing out the details for how a State class would work  so suggestions are welcome. At the moment  I think the State should belong to the Skeleton  but it's not clear to me exactly how much information it should contain. It could either be just Generalized Position  Velocity  Acceleration  and Force vectors  or it could also include information like external forces. 
dartsim/dart,422,2015-06-26T10:36:34Z,2015-06-26T10:37:54Z,False,none,ca1abf74d6e3dc3dac501d57b1bc6f0da96eb390,24,27,f7cbe318c278da010a88cf6be130b472a36867c8 7a470d324c96e5031d60301da45f6e2a31acb859 027c2a1a12f0fa441b7fc19f178eb223d8c4ced3 3fd483dddb7ba6a9ad09aca3cdfa16fc91b6edcd 54e1d376ae0f8963396b34ddec1b77ebaf5c8f07 ec8e9e2b2285c3c3384b2f9cc9b4c072fe6375c5 76fbf24cfc8da7055c962f869c85b1682b78bc65 dd21616a8d1cacaabb23fde622086b89454f9607 1491e78b0f81984eed8bb7c40f9baa8e5762e4b4 8cf601fe9471093447d815bf39dccd61023c8efa 72253b2eee1c4e0096936b222b201f3a600094eb 51e414c4abf3c062515544fd4b22cf60720fb26c 41b52b9baa37148ab7ba52cd55f0e19f084efff4 a3f56da0e71d59f9599850a689218ac95cb010a1 c558097d3edf387b9d37332672b32a021bbb8fbb 00a6369cc348ade37acea715ed896f93092cc3af 3d834243daee1b584f6a8da21cd838d227d9036d aca6e39fd4b2220ab8695b0399e13ccd9b102bd5 f9819fd3c9c5426db340571b00930feb8e0bb15d 3e3367535ebb36f4378f5e5f179c8050e303b831 ed7f141fb7721ebf0e1ef1903de50c4d9f14d209 0c743f5ceb3ef1cadaa26656b7208c0024371b74 b710756c31ae29fe137b612df16e918f6f636b3d 71763eb2b05898ea07e10544fc17489601f01187 beef607fa8bd320e5e8eae904a8de3a059df698a 3af870bd37d6a048e98d1cddfea23b1d848bfd84 966af760e8b2a65756bb13921edca82f88c59e42,,Basic structures of tutorial document,
dartsim/dart,421,2015-06-26T06:20:37Z,2015-06-26T18:20:25Z,True,2015-06-26T18:20:25Z,73c5c4e17910025c20d98ad8c4b6047c7fe509b9,2,2,ea28a0755dc8e19a0df4671eb0f29a52d5ee9e54 20507330bdf53c272ad138615c9d280fbd7c07c8,,Improved CollisionNode s index validity check,
dartsim/dart,419,2015-06-25T06:22:02Z,2015-06-26T03:35:47Z,True,2015-06-26T03:35:47Z,f1fbbf49584ff316fcda56b957663255dbc0b129,7,3,c1779241b7ffedaeb8ae6968d198ff455d3d38f5 e9dad61eb45e68fa4b08aea2ae5c56013db99979 c5b0b377ee9699ebd90cd49fc1863fd40b326a7b,,Clipping command when it exceeds the limits,`setCommand()` clips the command if it exceeds the limits. Also  force input now can be set using either of `Joint::setForce()` and `Joint::setCommand()`  but `Joint::setForce()` doesn't clip the force input. 
dartsim/dart,417,2015-06-23T06:33:07Z,2015-06-25T06:08:43Z,True,2015-06-25T06:08:43Z,ad63885e84a4c394e0b9befe5e3a2b3a029fad86,8,4,e9896b2b30f51602c11a4fd634e3351325f6ad94 771dfa8baa969982e671e3cda3870c2c1111072e b8677a30421db2203c4e557da197721c5bbba545 433b970df0282e87171d10354ef4da9694c3f523,,Improved app indexing for bipedStand and atlasSimbicon,
dartsim/dart,406,2015-06-15T18:16:09Z,2015-06-15T23:55:28Z,True,2015-06-15T23:55:28Z,8a3b44ea2e68275f79d81ad5c1ae3ff11ccc996c,4,1,1cd5c68a9381a4ea0a41340893c100d30384b5dc,,Fixed bug with renaming Joints and created regression test,A bug was found where renaming a Joint would always alter the DegreeOfFreedom names  even when the user told them not to be renamed. This pull request fixes that issue and introduces a regression test to prevent it from happening again. 
dartsim/dart,343,2015-03-02T23:37:35Z,2015-03-21T06:04:54Z,True,2015-03-21T06:04:54Z,11883d1627146745aca80b336f0a2ee82599ed65,16,18,6bae2794000bff853174e8b131adfd56ff3ec625 f0741227f58d8ee0beab76277784ce153da53228 0aae6a46395872b1c66a975b98521f89a5615e83 bdd30280248ed27466acbc4c14657f579c9aef14 3fe16c624b601593e723b8ce6875fb89b73ee79a 1d3ea56397aff06ea29387e039a5a5bc1eaac553 2191f5e49d12667c34cf7a155550c969dabd2c51 dd2248c35ca9ff4c39633a7a6a81fddac8a39017 350200ca1466a6fb729073c4fb2150397be7d664 189a97d8201cf7a32718ecddce34799da9bc6ee1 d7bc94d6dbdf67a80e4a23ab71ef2ef42065dcea e5393e03554b45f61df064b0ed8dc03cc19304fe a8858f7d7bc671adf2bf13478d0e51927fac6144 308508a6a20e762884e62311a01e88bf56ee7be9 42ea8a278a46d8068239e3fdb5f502442a573145 814335db86e62c6b5d2da53180c3db308bb01edf c517dcd63b7871741053210a3037efaf7f4b28d9 8e50c11ea38df9b82abe0cbf95169b9e7f6cb8f2,,Subscriptions for destructions and notifications,This pull request introduces a subscription concept  aimed primarily at Entities (but extendable to anything that inherits the Subscription class).  The motivation behind this change is that  in a complex framework  it can be difficult (or impossible) to know whether a pointer that you are holding is still valid. If an object is deleted in one part of the code  but another part of the code is holding on to a pointer to that object  there might not be an easy way to communicate that the pointer is now invalid. Additionally  when changes are made to an object in one part of the code  it might be useful to receive a notification about it in another part of the code (similar to the already existing auto-updating features  but more extensible).  To get these features  three new classes are introduced in this pull request: Subscription  Subscriber  and sub_ptr.  Subscription is a base class that is able to send out notifications. Any class that inherits Subscription can be subscribed to. A class that inherits Subscription will _always_ send out a destruction notification upon destruction  so all of its Subscribers will be informed when it gets deleted. Inheriting classes also have the ability to send out arbitrary notifications which are simply integers. The inheriting class is expected to enumerate the meanings of its integer notifications.  Subscriber is a base class that facilitates receiving and managing subscriptions. It offers virtual functions that can be overridden in order to customize the handling of incoming notifications.  sub_ptr is a templated "subscribed" smart pointer that works on any class that inherits Subscription. It allows the user to create a pointer to a Subscription-inheriting class  and that pointer will turn to a nullptr when the class it points to is deleted (no matter where or how it happens). sub_ptr will also keep track of the very last notification sent out by the Subscription.  There is no overhead added by the new features in this pull request  except for what the end-users themselves decide to create. If the Subscription model goes unused  it will perform no extra work. #### Why not reference-counting / shared pointers?  This Subscription model is **not** a memory management tool. It will not help to prevent memory leaks; it only helps to prevent segfaults that could be caused by dereferencing an invalidated pointer. While I do think that DART could benefit greatly from more rigorous memory management  I do not believe that reference-counting or shared pointers are the right solution  because the resources in DART have a very rigid hierarchy of ownership (e.g. Joints are owned by their child BodyNode; BodyNodes are owned by their parent Skeletons; and Skeletons are owned by their World)  and reference-counting or shared pointers would undermine that hierarchy. I do have a proposal to help with memory management in DART  but it would be unrelated to this pull request. 
dartsim/dart,380,2015-04-25T00:30:23Z,2015-04-28T19:39:39Z,True,2015-04-28T19:39:39Z,1eeac3ac6f54ee1f575c840cc9caeaf7c7bf9e0b,3,1,29d92fa50c899320475e56bc6fc4e0c41364898f,status: in-progress,New setTransform function for SimpleFrame,This pull request adds a new function to the API that allows the user to set the transform of a SimpleFrame such that it has a specified transform with respect to some other Frame. The parent Frame of the SimpleFrame remains unchanged. 
dartsim/dart,425,2015-06-29T19:59:07Z,2015-07-01T22:46:03Z,True,2015-07-01T22:46:03Z,b98d31e387b5185e7f6492cae214625950314031,1,3,223eab966816212d42247ae106e52d5c00a3c937 aed223196747c104e376e015637832825176d2bb faec071cf2d9c0bec339c85cdfc9b87b4572c21d,,Standardized warning messages for MultiDofJoints,There was a lot of inconsistency among the format of warning messages for MultiDofJoint functions  even though the warnings they were giving were basically identical: indexing issues. This pull request standardizes (most of) them with two macros. 
dartsim/dart,403,2015-06-11T15:06:41Z,2015-06-16T02:32:29Z,False,none,91fc73162fe0fe97599439b8e60acacd18794818,177,153,a629753bf7352e89efda174bdfd6f801846ad99d 446014d5db31f54b4ac3e049319117406fc0592b 0658888b31fe0dd304e26465dfd22cb67a448947 5e16a07c2dcc6ba7e11a74425320eadc0cd6a846 98573eb630c21315fe504c4f96de9b754b8ab421 4ba7e645f1377a3f9dff2b1dcc98eb12e688f88d 96769eea473cbe49939d09787bb592ee1cd3048c a38547e4f180a5d4ea64cbc33e66bf1d143cd7b4 2f224673ce081b1b6f30a67393d732f5c0ce7cd6 b479c30a84f328df3907b1979ddefef410da813c e76fbe059da9fe63ea807f8d28183d2043728356 e81642a59e62801c2a8910816f57329b55892385 9dad4be5bcbcb7eb87c33b4135679aef3b85895b 9704b68697840e14f68b6aac4d0b7b816cb1d075 64ade0aad151e74d68a96e6886ade1ae5b44722f 7e7c88914e661aaab6e4bb23ef1830732f1ada5a da507deb737207d43cf23306d26277ab3cede1dd c8e7b6cfa86d6481c0727e662578d31a472975f9 3d5881e72bcb8c320f70ecc82312f9801f8b6fa6 56d2d33866e96c605b6d1e3560430e2d8cf2343f b233ad2dca26f7760bcb6d38fa7ec5c4a8a8f559 a2a039f8aa9893e255694bae3320524aca6994b8 4fc9c947bc9bdbd7c1f5edfa4972049bf653d921 6888893f8307fb245f94331f016ce2218e0d543f ccd0602868b6252f3925417af2ccb7e520d06aa7 58e97f7ff2752e6f463ae424dfb93ec6c4a83165 449a0bb90bc60a7d38c494b023a8d6b29b73ee21 7914df33da84e7010b2736d9c529c2de8642a898 17a32d75945c922f9abce6b2e2580b641e38e651 1199d67a5e38cfbe432a8dddcef3240c21c03a82 e615aeae5652837f47e260b84024fd46e540e7b9 062a3527d60cbe94ae2f3c289c3b74db377e4a44 49b274e54b1bdee99086703347d3caabb71c8059 526ca6f8b488f48e8c834dc558be4b52965b1728 a011da152399697b3ae09747fa626c6e49e0fad5 8e06164eac66ff6c2243aebbbb430122e7d3f815 e84797d82a03dd21e6ed4ca82da6a69bc1ccdf16 c4971ffac192a355724e3110639c6ac505fbad5a 69ff775ed736ee2192f6776c50d0e3cc879fafdb 4432a95d2d8b28ccfaa11b7489ac70ae25cacc82 23b9e6183d4e2169d7d1e02ad0f5b27a6f78e08a 440b7c34782f0f6e23e235b0f0899b570f6af328 6f0c941336e3785b8f22a97c2c79623b055c85c3 92fa9315baf9529ddb1a147c425b7d99e4f973e9 c3faa2cf246877b27225503ca32dc763f4ccb0c1 1cd828cd4a3d04d6ecf247c0ad393c432e905a49 c61dacd7964ecab7e0e73f625fac1371857ccc5a fb142f1739ad47dcea3c9e4d27f62bf3f428d0ab fff1f9c5baba8ea15d64c6a139ae7868a390c812 f6cf92143826630d9d6f4d26961c46ad93872194 d0fe4619213706fc376e2b7be0cd48c24c55c039 370a333eefdc6c5295811ff07c78a3190a347841 bb9be3db5e350f37f5835b29bfefcfbeded05694 5ee2403d59759dc70e55249b3da0d79c58c8de31 efd4bd5df5bb6fc4b44bd4c5e9bebc9be0751863 34c5f3afd6e999f66063d559ab80428fdc20b32c 6fc059df3f34379fd03aee468ff6f2b0c2eacd15 c04faa12f3e495a8407ae42b98bb14ba98ee9c9a ed35861f94a4494edc4629b95bfe53008adb7df4 1130d27f953bd237d203731e3e2be41359db685b d0764aaaff9b5d919c8ea508d8baaf582b006c9c 4f327656645f1e61131fd5a17b9ab54477847a29 91ed8fccb55ef4aa0aff522be4fe04d8cb64e463 2648d4a6d752122d7d5e5f73b8ec8feb6550bf36 b1066e277fe1362a3d0131bb212a5104f843db97 536e7774297e23835236cd7a0c0b9852f07bdb76 98d02de24cef15ab121b8d96acd69a1a90528856 298450f307a590b1238689c5a4e2291e00751ac7 1dbeafa2c080c0502a9ddf66f1c83cc10e639eb3 4ad76eb432764d7c31d5de75f41832abc2ffbe41 046820d67ca7dd4f97a210c2d3802b87a332af00 e09f223325c02be17fb3cada3cb53ae5b860be35 8b87b1d5ad3c4ad4bff635b28c366d27a566a5dc 6d64995ee031164f3ad7c33ce492799050379be7 d601569031c6441ee45e414720c2c375319aa818 c60baa5951c8b3d84247dcc4ff943e8b9d9e50f3 adf63f4efb2ea5c8331c74a2935ebec2bc723113 56e2c2a44ec0a09b94b31a4cf1e0c1642c909fb5 f5f81d9e4b257472a30c1468c5b23d8d6e8106d6 f74a1141136da9f30f9bcbea6a27eb94a9317254 1d0c4e79c22ac00210132c6a8ae7c721a97e87f7 44fe5ab3835809aab93c2cea2e991d2fe083c081 35725fc4267d16247904dd6f8a1016c7c06ffede 2f2c52768aaf9d2653217507095d3d61a9e98697 50dfc08f4cca6ff3162d4543776b5a2902228466 a1cac456e460bd1f53164e6d531e829b81c0c5b3 60398f9b6914791a8be2c5a7f55eafa64d05e720 266a0c9691dfb84e78cabc27d44f6b6a184db489 3b36db4163f46587b698f0cd191430df731963f6 32408ce3e0e26d8daf9d6d35c7503f49fc15c403 a37ce7e679cbaaaaa95965556c8492763fc8595e 397c553188d808be4ea30541cb0c640bf0b4dcff f61ba07253a235ecd14731d0f8b46c8bb37a78a8 9671b0dded7b7f56ca0a9d958f937f33cba2e69f bb223d5e3d06149e70eed97be8be1c3108c06fdc c9aedfdc0a4743c6dc1617fec3d3bbed58463e3c e3043e3625c3943a4f31e6c0ed508fffcc99326a 3e3bb1fde4d1c8077cadb83c25089533f01ac74a 802ec21412079644ceb8b9485ab7705e3ab0e265 7aa1442b06223a656acd2871a4fc88594a021c8a dcd5b84e89268d4f028442a4b08c43e82714d64f 22aff66c712c258b6415cd338ee8e2c031c3610e f2ffefd19f97e2f13feb410a0b79aa28a0eaa6a4 bea1eea48e91ab6846c8c92bc37b732bd8f51bff 6c96391b074ba887aeed7bd98fc057690129ec45 44c299813ca88d1b4942d266b7fad1717b039c37 974d7b07759d4591e1e67518bd9ef2bc52afa189 15e71d621d8d77a8efa12cbfb7a3554c9b07f90b fb0ce925c9db90c4e4fbd41cc73fbd2e57a4d8cd e94d6a39b6e758a7c7f5f0bdfe60269640001fd1 041969bbb0619d937b2202815d3e2c18c5b17cd7 71cd7b33d6776baa666d3c44ceecc619f6526124 15679cc838428b647306ccad030d2154ed46908f 5f3275e92b842e6756f1909892be7ea4c25739d1 f63d0ff246b61da7e8d14bccfedfe2726d08c818 47415ca00058d8e633548e9512a07adff05661ca 344e64fadbbb18a1aafde1291e078732ff1ec10d 2d9e06b6e459ffdd1bd70907203a731cadd56ff6 54ae12f463d3d6e6de44d8b8fdb57bd08be6d41c 15a0259b095ff60739ae2b7df2fd05384d6f3a14 f7f7c28d20621d89b664deaeb1583b0496289ad1 169613c0ce1fa1888c20c26456822b57de896c02 8a58794ccb132f43b35627abcd0552c847238fb3 cbdb20d39654ccd46a0900437cd86ec91ffb706e a3945bca16e82c3ad6a71367955e0721e25d5b74 a5039c987de0f04087c80853ec743fc1306d0b90 856b499f634d4957679e7dc65330991231ababa2 bfff3c738ce5ccc96cfb58847f05572eb080468f 29ac9f5e03dfda956c8fc01c671064e7e2085444 c127038b91914f1a65d4e0b877cf053ce3ff8184 f2d94753d668cd77a2ad5efdc56af79e6d4b760a 1d066a27c801ea11cf93e7b8612180c99ddc3149 876fbebf38b3104c6cb40d0d38df908578561ca8 dd81f967ffba8e75d45e2da2a5823742dda8c65b 0e642f637db5cb85efa3dd1e706ea3dfa5ff94d1 3992a5aa55bcd08c8a5950cd8c66e6cba77e655c 2e4c7ccaa241773b776ffd32e36ec123c91508da ef20002c02d697dc8f433a922153149a95a6000b 640d8a264f771c7fc60af0161eb3ea03ec71bae9 7bfce9111156558f112d33ba9ee1d9a94068f6f4 ebde971490dd4b5d869aa9249ae1306c884e50b1 57cc22eda6ef96ea36224d62108e6680473b9167 6f00f803c0a99b21987472e4ed75ecc9ee5f38d3 9b10c63c3a4c0aab349227256dad755e5151fa97 11485eeda68dd16b9f39304d1960ba5a3cf9ee6d a4e011a4b1fd6e6227bf5bd58825114049418a18 9c97ec6b2e855a624e458b5d254c35d13ce81dd6 268245bb43fb14c416f4a93a2d46bf82bfe524e3 6094b7725648331ad17776d64124e611e7beecf2 06f137ea0a13f83c03bf19f99412ed0592a0ccf3 67064ebd6467dc743d61c202203641df9132f682 2e29332601efa8ac1f1ad0b2fb61b8f11900e517 3cc0a30378f54c5abdb91eeb46a35b53d7ee54fa,,Using Eigen AngleAxisd to compute logMaps,
dartsim/dart,407,2015-06-16T02:33:05Z,2015-06-16T03:23:47Z,True,2015-06-16T03:23:47Z,3406b4ef439eb57c2e7b5a8d9e81061bdc4b7304,2,1,3cc0a30378f54c5abdb91eeb46a35b53d7ee54fa,,Using Eigen AngleAxisd for computing logMaps,
dartsim/dart,415,2015-06-17T16:36:23Z,2015-06-19T15:59:44Z,True,2015-06-19T15:59:44Z,52bb981da66d49a7e30d4cc8e89487f1d5d319bc,1,1,a1d25143513811d3d06f4bdad71445758ed840cb,,Remove undefined behavior from SkelParser,We were using an iterator without first checking whether it was valid  even though the container will drop down to size 0 by the time the parsing is finished. Now we quit parsing once the container is empty. 
dartsim/dart,408,2015-06-16T02:51:33Z,2015-06-16T03:23:56Z,True,2015-06-16T03:23:56Z,5225b7ae473c99506e30175e90b97b055c7bee7b,2,1,eb7fe44ac0be05d999d8c3dd863bf9aa64328b45,,Added some missing API for DegreeOfFreedom,There were some Joint functions that apply to individual `DegreeOfFreedom`s which had been missing from the DegreeOfFreedom API. 
dartsim/dart,431,2015-07-02T08:36:14Z,2015-07-02T22:14:07Z,True,2015-07-02T22:14:07Z,3a5a769752816772d388c666bdf2ecd4953bd687,1,1,8c6ee6e24915327d6d5eb71b7ffccce157d66db4,,Correct child for a joint,Child of a joint was not correctly parsed in SDF files. 
dartsim/dart,416,2015-06-21T19:48:54Z,2015-06-21T19:55:13Z,False,none,981da5d30a4a20801e5aa249e2f95bed655cd93e,7,20,f7cbe318c278da010a88cf6be130b472a36867c8 7a470d324c96e5031d60301da45f6e2a31acb859 027c2a1a12f0fa441b7fc19f178eb223d8c4ced3 3fd483dddb7ba6a9ad09aca3cdfa16fc91b6edcd 54e1d376ae0f8963396b34ddec1b77ebaf5c8f07 ec8e9e2b2285c3c3384b2f9cc9b4c072fe6375c5 76fbf24cfc8da7055c962f869c85b1682b78bc65 dd21616a8d1cacaabb23fde622086b89454f9607 1491e78b0f81984eed8bb7c40f9baa8e5762e4b4 8cf601fe9471093447d815bf39dccd61023c8efa 72253b2eee1c4e0096936b222b201f3a600094eb 51e414c4abf3c062515544fd4b22cf60720fb26c 41b52b9baa37148ab7ba52cd55f0e19f084efff4 a3f56da0e71d59f9599850a689218ac95cb010a1 c558097d3edf387b9d37332672b32a021bbb8fbb 00a6369cc348ade37acea715ed896f93092cc3af 3d834243daee1b584f6a8da21cd838d227d9036d aca6e39fd4b2220ab8695b0399e13ccd9b102bd5 f9819fd3c9c5426db340571b00930feb8e0bb15d 3e3367535ebb36f4378f5e5f179c8050e303b831,,Tutorials,
dartsim/dart,432,2015-07-02T23:28:19Z,2015-07-02T23:52:15Z,True,2015-07-02T23:52:15Z,59990e0e0e01780c214ce5c82d1391b03f4ed298,1,1,b815527ea60936487007dd9842a6327ff741b05d,,Fix Appveyor build,There was [build environment update of Appveyor](http://www.appveyor.com/blog/2015/06/23/new-oss-build-environment-and-xamarin-support) but it causes [a problem installing DART-Prerequisites.msi](). Use [previous worker images](http://www.appveyor.com/updates/2015/06/20) until it's resolved. 
dartsim/dart,435,2015-07-06T21:17:58Z,2015-07-07T02:21:13Z,True,2015-07-07T02:21:13Z,cb1477330b9e0882e5773342812d4ebcd6d43e50,1,1,47e211b1aeb507471d4fef93183317446108eecb,,Added the SYSTEM flag to include_directories,This pull request flags `include_directories` on third-party packages with [the `SYSTEM` flag](http://www.cmake.org/cmake/help/v3.0/command/include_directories.html). This lets the compiler suppress warnings from those headers  typically by passing the directory using the `-isystem` flag instead of `-i`.  This is important when building DART with a modern version of Clang  which produce a large number of warnings every time Eigen is included. 
dartsim/dart,440,2015-07-07T22:32:34Z,2015-07-08T06:38:16Z,False,none,42daa8cdbf8f08d46f599886f055de9e02fd2952,1,1,5472953b390f6eb5fd6849326264302d0d42703e,,Chain constructor to not SEGFAULT when passed a nullptr,It's very convenient to write code that looks like this:  ``` c++ auto chain = Chain::create(skel->getBodyNode("start")  skel->getBodyNode("target")); if (!chain)   // error! ```  Unfortunately  this currently SEGFAULTs if either `getBodyNode` returns `nullptr`. The only solution is to do this  which is much more verbose:  ``` c++ BodyNodePtr start = skel->getBodyNode("start"); BodyNodePtr target = skel->getBodyNode("target"); ChainPtr chain; if (start && target)   chain = Chain::create(start  target); else   // error! ```  This pull request modifies `Chain::create` to return `nullptr` if either input `BodyNode` is `nullptr`. This enables you to write the first block of code.  **API Question:** Should `Chain::create(~)` interpret `nullptr` in `start` to mean "the world"? This would be necessary  in conjunction with my proposal in #437  to create a chain that includes a link attached to the `World`. This would be consistent with the usage of a `nullptr` parent in DART to refer to the world frame. 
dartsim/dart,438,2015-07-07T21:54:01Z,2015-07-09T19:03:01Z,False,none,bcdbf0175da30f17e3613aa022d3ea113cdce24f,1,2,d930d0add0b9e477fcfbab0158f3e9f8b3a3592c 9fb4d5fca1d0cdb1817faba458a9874f8ed8a046,,Joint rest positions default to zero even if that is out of their limits,The default `mRestPosition` defaults to zero. This causes a warning to be printed when a joint is loaded from URDF whose limits do not include the zero value. In that case  this commit defaults the rest position to the center of the joint range (if it is bounded) or one of its endpoints. The logic is a bit convoluted to handle infinite limits.  This pull request fixes the warning. However  even with these changes  the robot is loaded in the invalid zero configuration. My assumption was that `mRestPosition` would also be used to initialize the robot's initial configuration. Is that not the case?  Finally  I am wondering if we should always use this logic to initialize `mRestPosition`  even if zero is a valid value. Thoughts? 
dartsim/dart,446,2015-07-09T02:35:11Z,2015-07-10T01:41:54Z,True,2015-07-10T01:41:54Z,01b55181b1a7d4943c4cd103ca7bf8c0c0bf8c35,2,4,1432996171c651583f4869ba2f80b80687654dcc e27fae17cfd59a2669c5742ae11d0596a3297611 013920445c0deaa14eac17ce577eeafdf809f3fe 6d70b21a6941a354c8d9fc877ab5bc280dbcaf46,,Added a package xml file for REP 136 support,This pull request: (1) [adds a `package.xml`](http://www.ros.org/reps/rep-0136.html#having-a-catkin-package-xml) file for DART and (2) [installs it to `share/dart`](http://www.ros.org/reps/rep-0136.html#installing-a-catkin-package-xml). These are the minimal requirements  from [REP-136](http://www.ros.org/reps/rep-0136.html) to build a third-party package as part of a Catkin workspace.  I am generally not a fan of putting these type of files in  non-ROS packages  so I make this pull request with some trepidation. However  this is very useful if you are developing DART in parallel with ROS packages (e.g. the work I mentioned on `DartLoader`) because: (1) it allows you to easily link against DART without installing it into a system directory  (2) automatically re-builds DART when it is changed  and (3) insures that the DART build is done before building ROS packages that depend on it.  This **doesn't add any dependencies** and these files **have no effect** if you are not building DART in a Catkin workspace. The only visible change is that you will have an extra XML file in `/share/dart`. 
dartsim/dart,441,2015-07-08T02:23:35Z,2015-07-14T13:54:10Z,True,2015-07-14T13:54:10Z,9e5c3d0e71cda3620dbc2654a2f742b1057a8402,31,9,85fdd08b0866ece4e7857bc9046f70fa2b907977 bf258b88cc5c4ceb6ab484a72702e9523489fad5 57d93f3c7db8495b88c5093c8ffb3dbf1073abcc 78bbdf1458d61f093f1dbfdda26564d02edf5066 e5fc7c12ca1efc5ba9b4f6373c3194caeb5e7591 ede1cbc4ef85d248d380184bfb28c0f8cfee7e60 b11707519bfa4b6d85dd26451eb26fb95b8a9e4c 29f016749b44e7b742cf0c1cca4da802dd267871 db05bd3a79e1a5e193d6de1c8b3da01270462bb5,,Added Joint isCyclic to mark SO 2 topology,This implements the `isCyclic` function that we discussed in #433. 
dartsim/dart,459,2015-07-17T16:15:36Z,2015-07-19T04:41:58Z,True,2015-07-19T04:41:58Z,16b44630224abdba3e9179035e9f0c8e1d9ac354,1,1,5feacbcb932e871e9a5680ead92fa10c7b033452,,Require Assimp 3 0 dfsg 4 Patch for Release 5 0,This retargets #455 for 5.0.1. See #451 for details. 
dartsim/dart,460,2015-07-18T19:27:29Z,2015-07-19T07:30:15Z,True,2015-07-19T07:30:15Z,3005aa2972390920862f34e40f386012ae24bb25,2,1,775aae60cab7af0772f7679e3ea04ab681f49f73,,Fix typo in function name clenaupConnections cleanupConnections,Revised version of #457  ##   clenaupConnections --> cleanupConnections  Fixes #442  thanks to @mkoval 
dartsim/dart,458,2015-07-17T09:52:14Z,2015-07-19T03:11:07Z,True,2015-07-19T03:11:07Z,f4a88f3d25405c761a0082af4a233006629c9044,3,1,ab896b4479ce20d0314d352916d857ac10c5a3d7,,Add virtual destructors to Properties in Entity and Soft BodyNode,
dartsim/dart,423,2015-06-26T10:40:02Z,2015-06-26T18:28:49Z,True,2015-06-26T18:28:49Z,72b5888c783db93ae2d53ccea440de9219cabab5,2,1,966af760e8b2a65756bb13921edca82f88c59e42,,added tutorials introduction md modified mkdocs yml,
dartsim/dart,468,2015-07-25T07:49:22Z,2015-07-25T10:24:56Z,True,2015-07-25T10:24:56Z,2ba85f10a329dd59af73907448aa0d48de260ce4,1,1,f46df86027c50a6213edd2f0b9073607073a9296,,Update homebrew formula before installing pacakges,I believe this PR will fix the current travis-ci build failures on mac. 
dartsim/dart,439,2015-07-07T22:10:16Z,2015-07-19T03:08:54Z,True,2015-07-19T03:08:54Z,1b81c8e5fb6b78383e5dce74ff0a88f260d2304f,12,10,3f92882b719f326dbc1030db8bf3e9e0c3bb9535 b6e29a25a9f375cc7742289a14e656184a5d9944 a986fac80535551ba700c23bb92dc38781fabf5e 6b2a90668f2854a6ff09ec7dd4696d12f38a1769 c620a0178b9cf8545136ed041d56acec0fccf526 37092ded8dd3f60217503432f694a78e81f70437 412ccc8baec2eedbcf32c8e7bc916c07f4adfa45 e56f2c385d95ca2f3772c37df81638a2c89c16d3 f54c5586821c180314c4b884650adea164a814f4 5f77e0b8bddac525a5c4580059cfa5029b3294a5,,Fixed SEGFAULTs in DartLoader,DartLoader currently SEGFAULTs if it fails loading a mesh and  possibly  in a few other situations. This pull request adds error-handling logic that prints a `dterr` message and returns `nullptr` in that case. 
dartsim/dart,456,2015-07-17T03:57:35Z,2015-07-27T16:09:44Z,True,2015-07-27T16:09:44Z,4c1cc38b0b49cfad732c2e57290036233aa6ed5e,2,1,47ab982019b19951a5f16c45c713e1d3f3caa898,,Removed outdated packaging scripts,This pull request removes the `CPack` commands from `CMakeLists.txt` and the `auto.sh` shell script. From talking to @mxgrey and @jslee02  it sounds like these are outdated and are no longer used to build Debian packages.  I thought it would be best to remove them since they led me on a bit of a wild goose chase while trying to build DART into a `.deb`. If anyone is using them  then please feel free to close this pull request. 
dartsim/dart,469,2015-07-25T10:56:48Z,2015-07-27T16:21:18Z,True,2015-07-27T16:21:18Z,3c6ba3b4e4b8b3308d6d5ea3866ab7e434488273,5,6,b211877c5e41de5e980f5b2e0f4e81ffbb640366 cc64e78d3cc2c45f3fca133e2c4ed8d39150baa1 58c1107b91c32fda12f08607d6907304f038e69f ab3a2f3d738aae8ee9a0564c0747584a5b2e479b 91b0956ce667642d46192b9574e5131ee4458133 f309fc346391ff2ed4315ef4a68defc89dd8bacf,,Fix compilation warnings,
dartsim/dart,466,2015-07-23T03:15:28Z,2015-07-26T11:54:46Z,True,2015-07-26T11:54:46Z,0839dd7956349addcbdef151a9e31a40c609b3c7,2,1,b714d66aaf120a4fec5a4a079eca9ff890784f99,,Added a mutex to Skeleton ,This pull request adds an `std::mutex` to `Skeleton`. Most of the methods on `Skeleton` are not thread safe  so using some kind of mutex is necessary in a multi-threaded application. It's useful to attach the mutex to `Skeleton` so you don't have to manually pass one around to every function that operates on it. 
dartsim/dart,472,2015-07-27T05:23:45Z,2015-07-28T04:57:17Z,True,2015-07-28T04:57:17Z,70e69cf8c11eee71172449f542c8a90435ac93ed,12,7,6f594e54831336ed68b0334ba299b6bbd4b0ff05 0cb464c7a1d394b49f4a94c047a23d4c5832ba95 7d2600105ee875a3b42135eeacc2f3b79d2238c9 ddc7ed4c7cf8d530a28a1d5bced2df80a97d276a dc52495ccbe9a34fd92f50fb3a5ff215266a9ac2 b76415c53c2eb73aab18b78a863a69afab0e2698 58b92613bf13e0cfa35a4e60070838e6efba3133,,Fixed SEGFAULTs in DartLoader Patch for Release 5 0,This backports #439 to DART 5.0 for the upcoming 5.0.1 release in #467. 
dartsim/dart,467,2015-07-24T16:29:58Z,2015-07-28T06:17:25Z,True,2015-07-28T06:17:25Z,b34a77ffc8a6b1b0c1f34896fcba8f0bc0f7f0ed,3,4,9323ff7d61a74cbe0b0e25f781abb859eea04aba 75716dd5f20660412ad5b21ae98792bb280f5c33 2272dbeb4946269065ce1d1999315486b1a5793f b63bfc4991041425dd556b753afeccc29f4c2bab,,Packaging DART 5 0 1,DART 5.0.1 release includes patches for the bugs we found in DART 5.0.0.   [DART 5.0.1 will be used in Gazebo 6.0](https://bitbucket.org/osrf/gazebo/pull-request/1825/dart-interface-update-for-dart-50/diff). 
dartsim/dart,474,2015-07-28T07:13:42Z,2015-07-30T01:38:06Z,True,2015-07-30T01:38:06Z,c99558de76faa4b88fc9d75b57323371b85d1a33,1,1,45b85c91717dbf86c95457805c92c260522bb1c6,,Remove list of local source files from generated doxygen documentation,This pull request removes the list of local source files at the bottom of generated documentation. 
dartsim/dart,475,2015-07-28T11:01:44Z,2015-07-30T01:31:46Z,True,2015-07-30T01:31:46Z,5e85203ea8bcdbb355073844b511f89354ad6096,2,2,904bcfcc60880a12e968dc9a33f4f244f69abc66 c7871eabbff57437adb843aa69826ff62fab95d3,,Add Frame getTransform withRespecTo inCoordinatesOf ,Related issue: #471 
dartsim/dart,198,2014-06-19T11:00:53Z,2015-08-02T10:58:02Z,False,none,53d33b19e5ee702ddc1e95b76310f31acb0a5c1b,2,2,feece92a0cb3eb2a654640d0a99367be5971ab7d 0b7dc05f15c8c03b4ddb29614490f547af0a800f,,FindIPOPT cmake fix libraries ,This may also solve #153 by linking with Ipopt's dependencies  i.e. the libraries described in your `ipopt.pc` (possibly COIN HSL  BLAS  Lapack  etc.).  Compilation failed for me on Arch Linux with a ton of `undefined references` errors related to Ipopt. Now everything works (compilation + test suite  although apparently Ipopt tests are skipped). 
dartsim/dart,480,2015-08-01T10:29:37Z,2015-08-02T10:46:00Z,True,2015-08-02T10:46:00Z,7ff85e86f46d14e15bb20f5b77185ae8c356bb6d,3,2,e6024491d966c700e1de70ba83d5ee411dad53e1 b370483c5e2f6f3e0d878b3e001ffd967c586aee,,Fix compilation warnings and build error,This pull request fixes: - signed/unsigned mismatch warnings in atlasSimbicon app and testSdfParser - build error reported by #418.  The unused-variable-warnings from bullet are now suppressed by [adding SYSTEM flag to include_directories](https://github.com/dartsim/dart/pull/435) instead of [problematic dummy functions](https://github.com/dartsim/dart/commit/3e7565870bb5c135b49ee6ba931ecb03c49e7448). 
dartsim/dart,482,2015-08-01T13:27:29Z,2015-08-02T10:57:23Z,True,2015-08-02T10:57:23Z,2a96e37e6e9220659dfba84bcfcb4e6174de6df9,4,3,eb785c753d1b10daea6e5380e44cdf4e50896d9b 7419cfadcf3561947c5de11afa4f98758fc7de69 34b3dc6a7505da811350f11efb94825240f500e5,,Fix Windows build issues NOMINMAX and small variable name,This pull request partially resolves Windows build issues reported in #411: NOMINMAX and "small" variable name. 
dartsim/dart,464,2015-07-22T03:45:49Z,2015-08-05T12:54:40Z,True,2015-08-05T12:54:40Z,9552c1e351dfd7ceb1ebf29fcd8cc67f365f4ed5,35,58,fbeb9039e897ec7e98890b2b3df945bdd554f04f f6b27082c271b0365db5d5e9c3b750d1369dd79c f2b619b0110d7aeafee4bd4a4cffb41bddc16128 f64234ffce2902ff6fdf7ca34bfb24a7d40f12ee e896ccff9d1da3fc96d40ff947691d4f06752ca8 755c00d9dc5e04530d17846a61f0e2ff371487c1 0ae6658439f61bb1e3e5e623fe2eaf4ee3a722b4 02028bcb1ec4c7013fc77001fb8a51b9581e76db 2b2121cc23f7b0d5a5edcb50d5a6a943631589ea 82993bce192a16a2564491d1ed6d061057485962 6bf445b4e613d12f3197e90c6dc6678fa70f5f3a 224ff23b7bedc8176f1c127a80ace04ffb55bd56 23eaddcf92f2fa2f6e1bb6282466e9ba22c4322e 1853280c21bac9f94cc37e71299bafa010bb444a 8a7958c9aaa3df50dd93579882a2cb7c6d35d5ce 5f057891d957de876c3210e7f807b23536281f46 0e3d7181fa4b0bd9daa63a812cd29cece09ac085 533fa53693ff75a88b06e4a3a125beb60459916d 3dd3b1191bd39a8e6471473c25549db80919fd8d ac28d8f3d21f87a1f8138f2ae7195c307185c23e ccb131660e1492d6c6ec8fdb4cfc93b547bd310e f347112ce77c8bae1c9004a56ce88a157b61592b 483613e845bce78ab907d9766c8d5a0e69ea8ba9 f5e1ceef3925ddbf99ff4c48b45221ae72d8073c fce0a78a5f1bd5f39dee808fc2d6844822cec2a8 9fe0c18d22bf4769bc64989685bbf59eb9577860 f96e3e12dda0f1d3315c200300b33e6ee32d2189 956e0c5c7c8058f24193f31a69a9bb00b4dd6ad2 4467332fc510dfe4567d0aa76f9d04c6449ae5db a08abd5997640017322323bfe04b339acf65dc55 238b112389f8a7c60ee358f2badf01e6fdbf1f96 6618f95660ce2527aed248d3a7bfc57f233e4b5b c214bab33905de13eaffcdc930f795867b446927 d4693073c66d3d420190a4a846d6ad99c2e69f14 73fa9c3feb2d7ffae4b7072a5ee93d976e214dbf 7eb99bebbcc8b5676cd4acc095f611975de463e9 8d791ec0d5a7d4e4f9ea7316deffe965e99c2cdd c7e2245b087fda11cc81ee0ec290f47c7bdd42d6 f44394e8176d0c4bd3ca81915ccccf580b642f6c 14414c563f2607293841cfa039e19d69f197086d d8494278419bcefebf84ae1b238f10f6475d325b af7cb60d52febb85f4edc1fff9aa4a47a2959519 450e06cfc273ece0d0d4de3b0a89869c8427021c 7cc7cc3429bb02ec0a3298eed83795a0629ff82d 9cb8e11d6005f45f4af61253edd39845b6a77d7a 2729eb4a5fa1e7ea2cd39a15313c21ff91410963 5a737b6a46a22b5c0729be43a36d68cd400741e8 ac72ac754cd92e1a6d67db41893c334c692b3b55 dc4bc2c6152c98f7159f9fa520aa352f522e9359 20bbf8dbe1cf531ce2468b272e2da8473a3d2344 b74ed6672ce8c7b79c3211d83d21323132ab08dd a9c00426a55c40f623bc9bdd37c03e0cd0c28e6c 54dceab4d85e436a94a98ae42792f72de3c06634 913e945dafe4c921d904cf3082977d0765c65094 9171d340187f8f66988be7703e39077e1a9e9572 7c423c339a76c69dd4f18b963843f4026d26b265 0dd9c529651811d809e19c7d4105f69f9c7c9ec5 0b4de8d95845d008dae20b9581e379a77afad588,,Support for generic URIs,This pull request adds full-fledged URI support to DART. This generalizes the rudimentary support for `package://` URIs in `DartLoader` to the other file loaders and for loading meshes. I believe that this pull request is fully backwards compatible (with one minor exception)  so I'd like to get this into DART 5.1.  The key idea is that external resources should be specified by **URIs  not paths**  nested resources should **resolved relative to their parent URI**  and it should be **possible for the user to add support for custom URIs** without modifying DART.  This pull request adds the following classes: 1. `common::ResourceRetriever` provides a standard interface for opening am URI and returning a... 2. `common::Resource` provides file-like access to a resource using an `fread`-like API 3. `common::LocalResourceRetriever` provides access to local paths and `file://` URIs using the standard library 4. `common::Uri` class that provides URI parsing and merging functionality with no dependencies (painstakingly implemented from RFC 3986) 5. `utils::PackageResourceRetriever` resolves `package://` URIs to `file://` URis using a user-specified mapping. This mimics the behavior of `addPackageDirectory` on `DartLoader` 6. `utils::SchemaResourceRetriever` adds support for using multiple `ResourceRetrievers` at the same time; e.g. to support both `file://` and `package://` URIs. 7. `dynamics::AssimpResourceInputResourceAdaptor` maps between the DART's `Resource` and `ResourceRetriever` classes and the corresponding Assimp `IOFile` and `IOSystem` classes. This allows Assimp to transparently load meshes that consist of multiple files (e.g. external textures).  It also makes the following API changes: 1. `MeshShape` optionally takes a `ResourceRetriever` argument. If specified  this is made available through a `getResourceRetriever` function  e.g. to resolve textures using the same `ResourceRetriever` as was used to load the mesh. 2. `MeshShape` now supports arbitrary URIs  which are accessible using the `getMeshUri` method. If the URI is a `file://` URI  then it is also available (for backwards compatibility) via the `getMeshPath` method. 3. `SdfParser` and `SkelParser` methods now take an optional `ResourceRetriever` argument and use it resolve both the input URI and any embedded URIs. If not specified  the argument defaults to a `LocalResourceRetriever`. 4. `SkelParser` now resolves meshes relative to the `.skel` file instead of assuming that they are in `DART_DATA_PATH`. This technically _breaks backwards compatibility_. However  it makes the class so much more useful that I think it's worth it. 5. `DartLoader` now optionally accepts a `ResourceRetriever` argument (see above). If not specified  it defaults to a `SchemaResourceRetriever` that uses a `LocalResourceRetriever` to resolve `file://` URIs and a `PackageResourceRetriever` to resolve `package://` URIs. 6. `DartLoader`'s `addPackageDirectory` function is deprecated in favor of passing a custom `ResourceRetriever`. 7. `DartLoader` is refactored to use primarily static methods. In DART 6.0  we can remove `addPackageDirectory` and provide an entirely static API.  These features **add no dependencies** if the compiler has full C++11 support. Unfortunately  the version of `libstdc++` shipped with GCC 4.8 (this is the version distributed on Ubuntu 14.04) and below have [a broken implementation of `std::regex`](http://stackoverflow.com/a/12665408/111426). [There isn't a reliable way of testing the version of `libstdc++`](http://stackoverflow.com/q/31506594/111426) in both GCC and Clang  so I fall back on Boost.Regex if I detect `libstdc++` being used at all.  This is a big pull request  so I am sure I missed something. Please post if you have any questions or see anything that may break backwards compatibility. 
dartsim/dart,483,2015-08-04T05:29:09Z,2015-08-09T12:48:57Z,True,2015-08-09T12:48:57Z,cb3c92ec23d94bf6c9d1d84baca961afea219d0e,1,3,f3a055f02c96791355ecaa6ebedb9a783d57f5ef e3228ea2d6f5f433e1c19bb12e4c6c49db1081fe 940d64576df5a4a5912e450ebab2e3a3ce2e2012,,Fixed CMake warnings,This pull request sets the [`CMP0042` policy](http://www.cmake.org/cmake/help/v3.0/policy/CMP0042.html) in CMake:  > MACOSX_RPATH is enabled by default. >  > CMake 2.8.12 and newer has support for using `@rpath` in a target’s install name. This was enabled by setting the target property MACOSX_RPATH. The `@rpath` in an install name is a more flexible and powerful mechanism than @executable_path or `@loader_path` for locating shared libraries. >  > CMake 3.0 and later prefer this property to be ON by default. Projects wanting `@rpath` in a target’s install name may remove any setting of the INSTALL_NAME_DIR and CMAKE_INSTALL_NAME_DIR variables. >  > This policy was introduced in CMake version 3.0. CMake version 3.0.2 warns when the policy is not set and uses OLD behavior. Use the cmake_policy command to set it to OLD or NEW explicitly.  Setting this explicitly suppresses a warning when building with CMake >= 3.0 on OS X. From what I can tell online  `@rpath` is strictly better than the other options  so it is also a good thing to enable.  I also noticed that CMake was warning about an unused `@only` flag option in `configure_file`. It appears that this flag is case-sensitive  so I changed it to uppercase. 
dartsim/dart,485,2015-08-05T22:06:44Z,2015-08-09T13:32:27Z,True,2015-08-09T13:32:27Z,0e2692ea31da21e7755651d291391be7f3dc15a6,2,1,0e4d85173887a309809c617081926de60d185b8f,,Initialize mRestPosition if zero is not in range ,This pull request fixes the bug that I fixed in #438. This was intended to be fixed with the addition of `mInitialPositions` in #449. However  that pull request only sets `mInitialPositions`  not `mRestPositions`  in the URDF and SDF loaders.  This pull request restores the same logic to `mRestPositions`. 
dartsim/dart,484,2015-08-04T23:25:33Z,2015-08-09T13:30:20Z,True,2015-08-09T13:30:20Z,3c458a24fd95ca7130c55b2106e1345bdce41fcf,6,3,0880efac2be728ecc770d8aac27c911b67afb9ec 0ed5f646e2035d4dd39ea54ce97e6adf7994aa7a b693fc0589b0a1a189bcb10f8a7a9fe7ceaacfbf,,Add Disqus comment box and Facebook like and share buttons to the tutorial pages,This pull request adds [Disqus](https://disqus.com/) comment box and [Facebook](https://www.facebook.com/) "like" and "share" buttons to the tutorial pages. The main reason Disqus is selected is that it allows anonymous comments. These components can be added to new pages by adding following script:  ``` html <div id="fb-root"></div> <script>(function(d  s  id) {   var js  fjs = d.getElementsByTagName(s)[0];   if (d.getElementById(id)) return;   js = d.createElement(s); js.id = id;   js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.4";   fjs.parentNode.insertBefore(js  fjs); }(document  'script'  'facebook-jssdk'));</script>  <div class="fb-like" data-href="http://dart.readthedocs.org/en/release-5.1/tutorials/introduction/" data-layout="button_count" data-action="like" data-show-faces="true" data-share="true"></div>  <div id="disqus_thread"></div> <script type="text/javascript">     /* * * CONFIGURATION VARIABLES * * */     var disqus_shortname = 'dartsim';      /* * * DON'T EDIT BELOW THIS LINE * * */     (function() {         var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;         dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';         (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);     })(); </script> <noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript> ```  Note that `/release-5.1/tutorials/introduction/` should be updated for the new pages.  Here is a screenshot: ![image](https://cloud.githubusercontent.com/assets/4038467/9077042/96c9ede8-3af7-11e5-984a-d755d1e6f457.png) and an [example page](http://dart.readthedocs.org/en/tutorials_latex_test/tutorials/introduction/).  Project settings can be modified at https://dartsim.disqus.com if you have the privilege. 
dartsim/dart,444,2015-07-08T20:47:39Z,2015-07-11T00:04:42Z,True,2015-07-11T00:04:42Z,2624b4d64d74ad2466b2174fe6fec9ec89fc4ddb,4,2,c400ced28ec06219baa5c67c452247cd652a6aa4 b1d0a7b35705e72e7c91299a884a21aa791544e4,,More robust SDF parsing Patch for Release 5 0,The SDF parser currently assumes there is at least one Joint in the model  so it fails to correctly parse a model that has no Joints (i.e. all bodies are root nodes).  This pull request fixes that issue  and should be more robust in general because it iterates through bodies instead of joints when constructing a Skeleton. 
dartsim/dart,443,2015-07-08T06:37:39Z,2015-07-13T02:16:07Z,True,2015-07-13T02:16:07Z,b1a589de41de6741ed745a172cd7cb0863140f92,5,6,6c63502143d84670bc57b3bacefc21246d891985 5e91d1c1090368d5ae95d6969309008b37b9e0a1 05ea0385bb94c880cba0e9805860b2076e47cc85 3b31c6488c0e51b3d8d01a8a80634eb33b8e63d5 7ea5187303a87078732351b9ff4cb01e66d58354 ffd5f6ae08ce67b2f78d04debdd596d4be2763e8,,Changes to Linkage and Chain Criteria,This pull request addresses issue #437 and replaces pull request #440.  The changes are as follows: - You can now tell specify in your Linkage Criteria that a start or a target BodyNode should be _excluded_ from the Linkage. - The new default behavior for Chains is that whichever BodyNode is upstream of the other will be excluded from the Chain - An alternative constructor is available for Chains which allows the user to request that both the start and the target BodyNodes should be included  regardless of which is upstream - Linkage and Chain criteria now allow you to specify a nullptr starting BodyNode  which will be treated as if it represents the World 
dartsim/dart,449,2015-07-09T18:48:08Z,2015-07-26T16:48:55Z,True,2015-07-26T16:48:55Z,ff3539614d1304057fb68b3885700c4500742aff,13,8,3c3c7f8b50d100994650ce1b27bcca7a0dfa91cd 5a02109b15bfac51b8889ed7cb5c5b2156eb211d 9bed835351f1a6f2364ef3b78885efe36c64fba6 58e961878fa6bacf72eb7dfa42e96593295a4034 aa2888b6ad06f9573f0770b28d18c367c66abec3 2c400a8c70d3f15cf7809314db0dc4fccf1284b3 7e34787c492fdef8a1db6460143b6fab8661a84e 6f708893bc9e5f9754870bc2e64b52aceccfb7c7,,Added initial position and initial velocity properties,There are now properties that can be given to the joints of a robot for initial position and initial velocity. Calling the `resetPosition` and `resetVelocity` functions will set the joint to its initial position and velocity respectively  instead of zeroing them out. By default  these properties are zero.  The SkelParser will set these properties based on the initial positions and velocities given in the `.skel` file. However  neither the URDF nor the SDF parsers support this  because I could not find a relevant tag in either of those formats. 
dartsim/dart,429,2015-07-02T03:20:00Z,2015-07-03T00:28:43Z,True,2015-07-03T00:28:43Z,fd993810ccb582902ab2e817ea80d6cacc2e3a08,2,1,8d55be75ba5e7f6ad42c52efcf7e3f6422314ee7,,Improved joint warnings for Single and MultiDofJoints,Similar to the previous changes for MultiDofJoints  I've standardized and improved the warnings for SingleDofJoints.  This also fixes a bug that caused warning messages when a zero-valued command was set for passive actuators. 
dartsim/dart,430,2015-07-02T03:22:23Z,2015-07-02T23:52:08Z,True,2015-07-02T23:52:08Z,fb77682b49ddeeb5dd62ed7cbaad7fc498e4c4d1,2,2,ccb79b7e9e27dfe2317e4c2e122496c0864af1e7 1eeef6a8611d201333e1d27d711861b9497b1785,,Joint warning improvements,Same as #429 but targeted for master branch  because the other one cannot be directly merged into master. 
dartsim/dart,486,2015-08-11T15:23:46Z,2015-08-17T09:45:07Z,True,2015-08-17T09:45:07Z,710e4080c67e61504b3dcd59301a9e35093b3600,18,14,6118b37aa0758f6c81371e13527d3703a1194445 9c07b19589f1b30dbef71f2afcfe32c306480689 32ee5a3a7ec8835660006dcaad9a3280f357ba77 2bfb8a9ffa78b6c10ddccfa41a9f4d4e9a32d425 6d74c3af3c9b7ffffd0a33c4b07aa2700b3fe60e f9dd64624d490b0faf098359b6e452537dab2e15 c89e5835ccea051e7036943a33b1a29d1627b0e3 d0f11cfb0c0fbf4e0376ac145780c3cb535af047 e81dcec571d2e7bcafafe9e75a9d8ab031e17f53 484e829dc60585e803695dacffeae12dcc81f7c0 b5c32be441a14fea4dfb3afedfec0168f0f3cdf7 e69a56f645a37d878ddf1810d1896bf11f1b9b3d f16d6ad257be6e785e9a89b2c94276bf293ff220 a1a33fdba0bd07b65787c02b39183bc998fffa9a,,Fix build issues on Windows,This pull request includes fixes on multiple build issues on Windows: 1. **Predefined compiler macro for Windows identification**    OS identification macro is dependent on compilers. DART used to use `WIN32` for Windows but [`_WIN32` is the portable macro](http://nadeausoftware.com/articles/2012/01/c_c_tip_how_use_compiler_predefined_macros_detect_operating_system#WindowsCygwinnonPOSIXandMinGW). Here are another references I found: [[1]](http://www.boost.org/doc/libs/1_58_0/libs/predef/doc/html/predef/reference/boost_os_operating_system_macros.html#predef.reference.boost_os_operating_system_macros.boost_os_windows)  [[2]](http://sourceforge.net/p/predef/wiki/OperatingSystems). 2. **GL_MULTISAMPLE**    The use of `GL_MULTISAMPLE` on Windows is disabled until we find portable way for anti-aliasing. See #411. 3. **Default Run-time library option of Visual Studio**    Change default run-time library option from /MT to /MD for Visual Studio 4. **Linking libccd**    `libccd` is a explicit dependency of DART but the libraries and include directories were not added to CMakeLists.txt 5. **CMP0053**    Set cmake policy [`CMP0053`](http://www.cmake.org/cmake/help/v3.1/policy/CMP0053.html) to new. 6. **MSVC bug on template function specialization with default argument**     See #487. 7. **AppVeyor**    Updating appveyor script and dart-prerequisites-msvc12-md-x86.msi 
dartsim/dart,495,2015-08-27T04:27:10Z,2015-08-28T02:59:21Z,True,2015-08-28T02:59:21Z,5ccf9081834a54c8bc6e5095a20d660fe3d27a9c,1,1,4923136029806778d46aea2ab400503d73d0e2fa,,Added missing target_link_libraries to osgdartsim/dart,I needed to add these to get `osgDart` to build on OS X.  _Note:_ This is a pull request into the `grey/osg` branch  not `master`. 
dartsim/dart,498,2015-09-18T17:31:20Z,2015-09-18T18:46:56Z,True,2015-09-18T18:46:56Z,561a527cbec8043119aaf62c519e32ac184c86d2,2,1,ef5670dd0d27681d21e7489781aa90322ba7277e,,Fix typo adjecent adjacent,thanks to @sehoonha 
dartsim/dart,455,2015-07-17T03:33:37Z,2015-07-17T16:10:52Z,False,none,a792925f26c6bf995db0382ebe2499245c0e947f,1,1,b7a9620b4be6dc5054ef698d13954786cb000bf5,,Require Assimp 3 0 dfsg 4,This pull request makes DART depend on the version of Assimp that is missing C++ symbols; see #451 for details. This should stop DART from breaking when Assimp `3.0~dfsg-4` is released on Ubuntu. It would be good if @jslee02 could release a new version of DART with this change to stave off any potential problems.  Next  I will build the Debian packages for the updated version of Assimp and work with @jslee02 to get them in the DART PPA. Once that is done  we can modify the `debian/control` file to depend on `libassimp-dev (>= 3.0~dfsg-4)` and release a version of DART without the custom `aiScene` methods. 
dartsim/dart,457,2015-07-17T09:02:34Z,2015-07-17T17:54:00Z,False,none,b4835353091cac4b46c7ae55b0a53a922f5e0b57,2,1,b3af5c071fe74b08bdb5ffcb1776bf46c40312d6,,Fix typo in Signal,clenaupConnections --> cleanupConnections  Fixes #442  thanks to @mkoval 
dartsim/dart,503,2015-09-27T05:56:26Z,2015-09-28T06:29:27Z,True,2015-09-28T06:29:27Z,232e62a631f5be2205b4f6c329ee6f25fb1b98d3,2,2,ae3e01200ffaef230f15e8a492c27ceadb010648 2fb33b2a26fc5fe715c0b84a5b53122a249746d6,,More efficient Jacobian update checking,This change was made based on the discussion in #500. 
dartsim/dart,504,2015-09-28T02:03:42Z,2015-10-01T05:52:30Z,True,2015-10-01T05:52:30Z,ea916659a05ef9672f0ec1f6e7507553093c4cae,36,79,f7cbe318c278da010a88cf6be130b472a36867c8 7a470d324c96e5031d60301da45f6e2a31acb859 027c2a1a12f0fa441b7fc19f178eb223d8c4ced3 3fd483dddb7ba6a9ad09aca3cdfa16fc91b6edcd 54e1d376ae0f8963396b34ddec1b77ebaf5c8f07 ec8e9e2b2285c3c3384b2f9cc9b4c072fe6375c5 76fbf24cfc8da7055c962f869c85b1682b78bc65 dd21616a8d1cacaabb23fde622086b89454f9607 1491e78b0f81984eed8bb7c40f9baa8e5762e4b4 8cf601fe9471093447d815bf39dccd61023c8efa 72253b2eee1c4e0096936b222b201f3a600094eb 51e414c4abf3c062515544fd4b22cf60720fb26c 41b52b9baa37148ab7ba52cd55f0e19f084efff4 a3f56da0e71d59f9599850a689218ac95cb010a1 c558097d3edf387b9d37332672b32a021bbb8fbb 00a6369cc348ade37acea715ed896f93092cc3af 3d834243daee1b584f6a8da21cd838d227d9036d aca6e39fd4b2220ab8695b0399e13ccd9b102bd5 f9819fd3c9c5426db340571b00930feb8e0bb15d 3e3367535ebb36f4378f5e5f179c8050e303b831 ed7f141fb7721ebf0e1ef1903de50c4d9f14d209 0c743f5ceb3ef1cadaa26656b7208c0024371b74 b710756c31ae29fe137b612df16e918f6f636b3d 71763eb2b05898ea07e10544fc17489601f01187 beef607fa8bd320e5e8eae904a8de3a059df698a 3af870bd37d6a048e98d1cddfea23b1d848bfd84 f568f2400aad6a78f6694e8bd1066a47e69f8038 966af760e8b2a65756bb13921edca82f88c59e42 7bc9b60b5709738010eda439f7abc1e268677c85 a81b3e5048a4a4b6f801847d64e289d386be09fe 5e33c29d3647f89537dddacb9cbfb127c742c104 c09c97c339e42934d389138a64f93b4db411acab 5dc233e906d7df48406e4a09688cb5af7189eaa0 94ec483cf35ae3ac3fcd7da3fe406e1e0facaa13 c6b1e69298476542673fb3777c98d1b6b45c1907 a96bc35373515eb62e4c20fa64ec4350ee905c0e 50e717b640603869b9990ab62b2a5a57be6d2624 14bec82cc9e9fea70690a39784f1fb9d4879bcce 67cb2fb09036635f380fc9a2bda7f22f9b41379b 3d32915187a7548f4e8ba8c3cae3ad8cac5a76ae 0307a6e2e7a0c407216d4c5d93f267a628428e37 da3a168785a9bd996c943ad211af5a7938754075 19708b357deb5e102566801c247deaedf83bf737 b6cdfe584f64aec0d21aef7f04c0cef84657360e ad352870c497fd7bfb6fb8f90b85a40e85170e1c f11221558697a32702bd0ae78bed04c6098c21b1 d464123e28c1517156cadacdc36bb95f9abb48c6 3332edd732124a1a269ddddac6eca7b2c63ea3c0 d1911c1605bb4833e88fdcb6ca5700ee4ec1d4d8 1258c1556c9c35317c8adb413f21a4497b9e3a60 f38907f89c5819cfa6c86556d76c61afe5fda8e2 116a3ae2d2f538c3d0345aa258ceaa39f11b74f2 9e91b31208a8c03f8543343bca56b1954ef11638 0c5ed5ae614bcaa991d6effaff386ad33788157e 7f5b5e39a94a936e1cb678a94cd69ac2cad6bf08 7a67fd1ebca4bcbfd472334627024eccd9a9111c eee1c767d197793d63ab379e4f2dd82b575e81a5 261dad5fc7802737b604dd83c54ef958d7a179a0 cc9130142f9e79323833a2122077682efc1a3cbe b5d6bdde3cde6393acc312b6ac195fa9c8fc82c4 b5ee84c625b8ba7175ba7fb939c07d085721f9f9 23d34134f1c87bcf2081bcbabcb1962574fd4616 1034fefaf7664ecef590132c02459385c58261d2 6bfc19d5f39dff9a1a508ff860cc6e15d016abe9 33f88bf2810e69b05b26571ffce884eb8a3ab33b 9b1e09f4be609f9a12cddb5553e4165c1db5caac 2329367d52eb897a46523ed7cbcb5732dfbcd537 74346c0885349cb6e8b7f73d0d43f2235442bd7d 52ac1fc306e089db3e5eb2a1268eb09594dc9cce 0880efac2be728ecc770d8aac27c911b67afb9ec 0ed5f646e2035d4dd39ea54ce97e6adf7994aa7a 9267aa4ff8a46b1eec4447ff1877b113dafca02f b693fc0589b0a1a189bcb10f8a7a9fe7ceaacfbf 6e064107428466087fda2547f0bf1375928f7358 a556cea22933167d27e8bf095b54d5d33d1ff7b2 26cc82d596fc1eff6255bca5f57c6defda8da11c 1127f24bcc20b419da9a09334cf0485619473958 2a04bc89a8751b8e6cc8fc4b7ea3454ced57794a 12be7a167e608e9b5b1463beb530d9c5af980d20,,Tutorials,The purpose of this tutorial is to provide a quick introduction to using DART. We designed many hands-on exercises to make the learning effective and fun. To follow along with this tutorial  first locate the tutorial code in the directory: dart/tutorials. For each of the four tutorials  we provide the skeleton code as the starting point (e.g. tutorialMultiPendulum.cpp) and the final code as the answer to the tutorial (e.g. tutorialMultiPendulum-Finished.cpp). The examples are based on the APIs of DART 5.0.  [Here](http://dart.readthedocs.org/en/tutorials/) is the prerelease version of the tutorial site for this PR. Note that once this PR is merged the official tutorial site will be [this](http://dart.readthedocs.org/).  Any feedback is welcome! 
dartsim/dart,510,2015-09-30T01:53:34Z,2015-10-01T05:52:36Z,True,2015-10-01T05:52:36Z,5b49d5c945bf530ea300a6907f65cfdb6575b3b3,2,3,22f821c6743111d11ee6619bec185c5891ecf7f1 de49ef40ea970f34a1ed7da1915688d8076da53a 5b3487e240fa641dd0b327b586a4f3512a304590,,Use urdfdom 0 3 0 for AppVeyor CI tests,The DART prerequisites installer for Windows was updated to use newer version of urdfdom (0.3.0). This PR updates the script for AppVeyor CI to install the updated one. This should resolve the issue of missing `urdf::parsePose` reported by @jturner65. 
dartsim/dart,509,2015-09-29T23:55:50Z,2015-09-30T01:55:25Z,True,2015-09-30T01:55:25Z,5680a132701b39c0dbf56b676386f54bdaab0011,1,1,f415d0dc8ab6167e6e2fa17c2d5b9f5babc9dd12,,Don t use constexpr for vs2013,[Visual Studio 2013 doesn't support `constexpr` specifier yet](https://msdn.microsoft.com/en-us/library/vstudio/hh567368%28v=vs.120%29.aspx). 
dartsim/dart,470,2015-07-25T12:15:58Z,2015-09-29T18:49:52Z,True,2015-09-29T18:49:52Z,7101ceb0781e6a36174305a12593d9e520cc1e37,5,18,ff1273b131bb647f4b9383940360f89f59843d3f 0af53650ae741b0e85a3f5dc03a6c0cc5780eb74 c312ec2a36bb4b22d6dfe8daf612129e4e2e8d71 2c13733591a27e74f36bc1fd3e20a1a598acc557 3844f4aa38c8ddf351371bc2fb5dff773f846381 d15c116861c9947b3dea88db86c47a2fb842b993 ab7d4d9650cd3b006f762029a5f295b023f4e9f6 6aaed5a976ac6b21a2ce9c72beee124c881aad68 2c156345b545fa42aecc4b3e5e638d3f4132e1c8 66e385043e2aea37d146a4e6f655e5ad5a85a4c0 e8b4f1c40e26140d93ea803bcb4a76547ebe05fb e8e7b9c4d7fda4eed042102dd0432d6eb6c73483 daf0fd80163b0f89bee18b2307f1dac15a099176 e83548cfe9b6973594739018ae9e8be8fe65690d a9c27d7333786aec133a01bc520a7a1a0a31cee4 7fbe27b5329bbc1914e866f4847301cf3c6251e8 cfd9093788cd04b01ca3fc8891ccd46ac94c03d3 59cb97ec43a948e4526b0a83efff095461199fa5,,Convenience setter functions for positions velocities accelerations of FreeJoint,Since a BodyNode whose parent joint is FreeJoint has full degrees of freedom  we can set its transformation  velocity  and acceleration without any concern of constraints in kinematics level. However  current API may not convenient to set them because they should be set through generalized coordinates that requires some conversion between them. Although we have some utility functions thanks to #322  it still requires more lines to [handle transformations between parent/child BodyNode and joint](https://github.com/dartsim/dart/blob/master/dart/dynamics/FreeJoint.h#L82) and doesn't take velocity and acceleration into account.  This PR allows us to set generalized positions/velocities/accelerations of a FreeJoint given transformation  spatial velocity  and spatial acceleration. The new functions looks similar to SimpleFrame's ones.   We can consider another setter functions that takes classical terms like rotation  position  [linear/angular][velocity/acceleration]. Furthermore  it might be able to set these terms through BodyNode when the parent joint is FreeJoint  but I'm not sure if this makes sense in the point of API view.   Also  we can consider similar functions for other joints types (except for WeldJoint). For the other joints  we might need single-joint-level inverse kinematics to find best generalized coordinate terms given spatial terms. Would this be straightforward with #461 @mxgrey?   
dartsim/dart,502,2015-09-26T04:35:28Z,2015-09-29T02:16:28Z,True,2015-09-29T02:16:28Z,4599aede1073758f7303ded43558b5abac333047,4,2,018802f1ba403bb487c16be5e438fa729b4e66e9 23862c75525601a62f6d4d8e6a4778f65777cdc0,,Allow to specify the stream for optimization Solver s output,Note that this PR is targeting `grey/osg` branch. 
dartsim/dart,505,2015-09-28T06:37:13Z,2015-09-28T06:40:45Z,True,2015-09-28T06:40:45Z,830d64f6c3fecc844fdbb8b77ef1eeba28a11de0,3,2,197325a61736b2d3492196475084dd3244284a12 3ea0cd53ff60f84f88703b343b946402e56460f9,,Packaging DART 5 0 2,
dartsim/dart,493,2015-08-17T09:31:35Z,2015-08-17T09:41:34Z,True,2015-08-17T09:41:34Z,e4d1d0891ed607fca966d603900f42f9520addb5,2,1,7de0f8f13e8c94411320f88e71d4d7b371e7dd7a,,Fix testJoint test,This pull request a temporary fix for testJoint test failure for 5.1. Current command handling will be improved in DART 6.0 introducing actuator class. 
dartsim/dart,494,2015-08-17T14:19:42Z,2015-08-17T15:09:42Z,True,2015-08-17T15:09:42Z,201c4668e0319f71e9d2ebd889c9efbed2658785,1,1,41b6c5559b8e14a9e7ea92f928853bad679a025f,,Enable Linkage test since it s fixed by 491,
dartsim/dart,513,2015-10-02T20:47:12Z,2015-10-03T05:21:26Z,True,2015-10-03T05:21:26Z,226826b7626ae6996fe94b4447d93be14d066f77,5,3,f8cb3c65fa50b8443a659c3f4b5184e4e4692bb7 19a7dcb0b9f2c3a12601e4620bca60f66290abcb 578ab7252afa846656f2cfbdd44b7828503ba9e7,,Resolve Eigen alignment issues of recent changes Fix 512 ,This PR is a patch for #512 and other similar errors. 
dartsim/dart,445,2015-07-08T20:49:32Z,2015-07-11T00:05:12Z,True,2015-07-11T00:05:12Z,a48fec72b72a3ab84b95b2bf3741e6e9d84cab5f,4,2,c400ced28ec06219baa5c67c452247cd652a6aa4 b1d0a7b35705e72e7c91299a884a21aa791544e4,,More robust SDF parser master,Same as #444 but targeted at master. 
dartsim/dart,522,2015-10-15T07:12:38Z,2015-10-15T07:27:57Z,True,2015-10-15T07:27:57Z,35e89ae0459c19eae3674a7a5e0f30a2827fb98a,1,1,07cc1cb51b90b7d91eb8eac9b5cd3015c9b12713,,Add boost dependency for debian build,
dartsim/dart,519,2015-10-12T13:43:00Z,2015-10-15T03:32:42Z,True,2015-10-15T03:32:42Z,e74f45a16184cf9fee539c05365681af40fd5b0c,7,3,4c9a5853d77e3091a7cee02a980c75fc91c79f01 26ab5acf5eb27f9c1b3fadc28a5d8a541b560acb fdc6ef0c54764ba11231177da6d25d57fae7e7ec,,Packaging DART 5 1 0,
dartsim/dart,527,2015-10-17T04:32:31Z,2015-10-18T01:33:30Z,True,2015-10-18T01:33:30Z,68b7ae8c589183a574f894bf4b36f468dd00a489,1,1,e8bbcce2f17f402b7b28ebd3608ff0847c387822,,Aligning a map with fixed size vectorizable Eigen structs in testDynamics,This PR fixes segfaults on 32-bit systems ([trusty](https://launchpadlibrarian.net/221507472/buildlog_ubuntu-trusty-i386.dart_5.1.0.ppa4~trusty_BUILDING.txt.gz)  [vivid](https://launchpadlibrarian.net/221507681/buildlog_ubuntu-vivid-i386.dart_5.1.0.ppa4~vivid_BUILDING.txt.gz)). 
dartsim/dart,511,2015-10-01T05:57:44Z,2015-10-01T05:58:10Z,True,2015-10-01T05:58:10Z,7f1d1680064e3fcc5b7de9a168a46ca892c1b096,1,1,85caad027d8180283dd0db1bc4a3f7d4c98f31e3,,Fix file names and links in collisions md,
dartsim/dart,517,2015-10-11T05:18:08Z,2015-10-14T17:33:23Z,True,2015-10-14T17:33:23Z,9111b5cc62577916c9687cd67de8b4992e4c5089,50,36,d3648fb5dceb341af69ced5715e82b25cedc4ca3 6bf01b5ecb70751a143eca6a8fa97d279163f278 28015cc4458b762442fe8dabde7af7132eb0c0da caabef01ef2357065c9c164ba5bb9f020c4b4820 8da05d17fa250277295d950ffe24d4d9251ee425 f59420d39628e955689801b11d4b85abd45483ad 24e4b0ea0bb21374ed6264031ffc9fd00dc91e87 d509dbeabb68ae8b4b858509dbee561768170a27 2616b754cc1ffbc9f3aac0afb66358a78a80ed0d c731e993ed790ed2a466a9f1fbb95bc454e760be e1dc055871685a1dd73be95def304d6f757e7307 875de883ea73f7eefc5daf4fae4278c4e4fa7f1c 363d430bf4185acd671cc5c872e04c71decb6e44 bd79ad39877b234ee80a1fc986f287ecab8d97c5 968615e20acbfdd2148a371be899c777c1918632 29dbdfcc1d66b9a5534f9ebd2dc0fee052139f5d fccd529d61ff43bf6f6e486424e698521c891be6 a1cc97bd9b0d68099646e29bc2037ed488ff4d77 12c79ec19de8b9a91b8cbe1662f0fb3456eb621f d0a2a0475ec2a1c304afb142fb8024d149677e84 a220ee1db3aa970b4c2abb2f588eba00d8bb5d5b 5c835af09e03b14ff153ccf2dd05a6e6e0f91f15 236135835bfddba0cd28c6f4fa9d917d3d679aaa d20b6b94e0abfae9f050f008ea2a3724eb22bf30 9f3a6f92af03d9e9eb846c6d3d8d96097574f929 d2a164fccbe30e225420d04f335c7f7fdb378014 03882507ea1a78ae6d4caa7d31a9f5260b836c29 78051d095a7d10cdb31c7ddd454e72f078632678 3390cacb5d4dce7ede70d06610fd7f6dfd640e4b 7352b359273f75954677cb1048f3b9b6af6dda0d 3c44d64b3b85b70bf228ef05a548631cce1339eb 252012d11e7f0362a1b67a0165628f41a599181b 42515bd51f9af8e09e73397b963acb201a7a581e ed369f585b0d88c03ea971e1b29e87d6666908ee c9b21ce8f85b03792388b3a169d986f1f3c4a650 78557fd82588af662a8064a02c92f661f84ae5af,,Improving URI to be compatible with Windows,This PR makes URI to work on Windows and resolve issues reported in #488 and #497.   Most changes are related to file URI (file://your/path) to make it compatible on Unix and Windows. Here is a summary of the changes: - Every function that takes in a filename as a string (e.g.  skel/urdf/sdf parsers) now takes `Uri`. - In order to pass filename to those functions as before  you can use `Uri::createFromPath(filename)`. - A `Uri` can be created from file URI string (e.g.  file:///foo/bar.txt and file:///C:/foo/bar.txt) or raw file path (e.g.  /foo/bar.txt and C:/foo/bar.txt). - Every path should be absolute path.  You can find more details at the discussions in #497.  Note that this PR also makes the AppVeyor CI tests to pass on Windows so afterward PRs of this should pass AppVeyor CI tests as well. 
dartsim/dart,518,2015-10-12T12:08:50Z,2015-10-15T03:27:17Z,True,2015-10-15T03:27:17Z,58a90c37b0ed436a6563bfbe3d63c0b520d8835b,10,6,f28d6e5a59465d1eff7d850889e92180d1f0c4a5 273376d438572e1f784c6d1b427f54ae40834f6d fbc44789aaff7c8837f333dee087516bc03556bf 4ff70fbefff2d3adabd214ced5e56ced0682bd38 c3cd476d4220616daf535a4f162a2eddf65df377 95992d2dd14558e1f6f6fbec9f75584192596d64,,Fix incorrect rotational motion of BallJoint and FreeJoint,This PR fixes the incorrect rotational motion of BallJoint and FreeJoint near +/- 180 degrees. 
dartsim/dart,520,2015-10-15T05:06:08Z,2015-10-15T06:08:24Z,True,2015-10-15T06:08:24Z,d3960a43345e5d681de803d7ee82030b70449da7,2,1,7d5c6980a226f223802f262c9fc47fc9d999e287,,Don t use material if the material index is 1 in OpenGLRenderInterface,It seems [we started to set the material index to -1 to indicate no material](https://github.com/dartsim/dart/commit/6b0266cfad6aad4cdc40befdf8d5994479a78491#diff-ed1bdc3b52a7df5f3d58c16da27962e4R262). This is correctly handled by osgDart but it was not applied to OpenGLRenderInterface. This should fix segfault of simpleFrames app. 
dartsim/dart,521,2015-10-15T06:06:57Z,2015-10-15T06:08:31Z,True,2015-10-15T06:08:31Z,232ae02a91e885bbf677960011df7c1953fa3d2d,5,2,c205790c5246e961ac7bdcfbe9cf154eddaff964 39aaf6d0717dc0d5f737bf6166825b0f99e63fe7,,Fix segfault of rigidShapes app,`SkelParser` uses `Uri::getRelativeUri(Uri base  Uri relative)` to resolve the path of a mesh given a base URI and a relative path to the location of the being loaded skel file. The problem is the relative path is converted to a file URI since the string object will be converted by `fromStringOrPath`. By the merging algorithm  the path of the merged `Uri` is just the relative path (since the relative Uri has a scheme)  which is not our intend.  To resolve this problem  I simply added `getRelativeUri(Uri base  string relative)` that calls `fromRelativeUri(Uri base  string relative)`. `fromRelativeUri(Uri base  string relative)` uses `fromString` to convert `relative` to a Uri object so it will have no scheme. This function addition would also be good in terms of API consistency; we now have `[from/get/createFrom]RelativeUri(Uri base  string relative)`.   Also  I removed material properties from *.obj files since they are missing.  These two changes together should resolve the segfault of rigidShape app. 
dartsim/dart,515,2015-10-08T21:01:09Z,2015-10-09T03:49:53Z,True,2015-10-09T03:49:53Z,86615993617eb4acf86a20795df704c97a146b47,2,1,dbf7da11fb8c1bb24946a6c36cfb4eb7bb44c9ea,,Remove old documents dart tutorial programmingGuide,This PR removes two obsolete documents. We have up-to-date tutorial webpages [here](http://dart.readthedocs.org/)  and new programming guide will be made through discussion in the future. 
dartsim/dart,516,2015-10-09T04:51:54Z,2015-10-11T04:11:05Z,True,2015-10-11T04:11:05Z,4e5d94e11389f6bfc43dc85acf8ee999d3deb83d,5,5,ba064939b68fd5d84c48be43f1117c4333a406a5 81d6b35b4d9675f5be6951723849f3a52743aef7 f755f95a279a8a5efc59bd6ece3cb1cb797d09ab d9a3e33c2540eff1c066fd5dfd599e00af5ef9d5 96f7bffefce1651e7af622566e66fa46e9f1ef2f,,Fix compilation errors and warnings on Windows,This PR: - removes macros for some c99 library functions in odeconfig.h   - The macros was required since old Visual Studio does not support those functions; they have similar implementation in Visual Studio but they are not in std namespace and have slightly different names   - Visual Studio 2013 and after support those functions and now these macros cause compilation errors because of the namespace issue. For example  std::nextafter(~) will be modified by the macro to std::_nextafter(~) but _nextafter(~) is not in std namespace. - removes use of deprecated function - removes duplicated header inclusion  Note that AppVeyor CI build test wouldn't pass since #488 has not addressed yet. 
dartsim/dart,533,2015-10-20T02:50:23Z,2015-10-21T02:26:24Z,True,2015-10-21T02:26:24Z,c3001c5529b2bb8275c50aaa612ecb5db355ca37,1,1,053d516923538f9a83a29b9df462bb89bb6ce1bc,,Workaround for ftell bug in Linux,`ftell` returns `LONG_MAX` as an error code  instead of `-1L` as specified in the documentation  when invoked on a directory. This behavior occurs on EXT4 filesystems  not but NFSv4 file systems  in kernel version 3.16.0 possibly with Ubuntu-specific patches applied (tested in Ubuntu 14.04).  This was not a fun one to debug. :sweat:  
dartsim/dart,536,2015-10-22T20:05:43Z,2015-10-23T06:17:22Z,True,2015-10-23T06:17:22Z,eeb53ce5559f6224c4c678f12ef0d99e7c640983,1,1,6edee88f0c5e3cf423205b77394827dc157f2c14,,Made osgDart honor DART_BUILD_EXAMPLES,This pull request makes `osgDart` obey the `DART_BUILD_EXAMPLES` variable. 
dartsim/dart,535,2015-10-22T20:03:48Z,2015-10-23T06:17:51Z,True,2015-10-23T06:17:51Z,9fcc05cf0f01e9edec46f4767665b1899f782e78,3,1,282dc368973162a149084f0f1c880565ce87ca93,,Added missing override keywords,This pull request adds several missing `override` keywords that produce warnings in clang 3.7. I also removed a few `virtual` keywords on functions methods that are flagged as `override`. [The `virtual` keyword has no effect if you're overriding a `virtual` function](http://stackoverflow.com/a/29760395/111426)  so this is not necessary. It also seems to be the style used in the majority of DART. 
dartsim/dart,534,2015-10-21T13:28:01Z,2015-10-22T13:12:30Z,True,2015-10-22T13:12:30Z,7c8fd627322a7cb179df31e240bcd25782ab3d49,8,1,f0c47b5f493524a88182a8229ef894f36c93c95a,,Remove const qualifier of ResourceRetriever methods,This pull request reverts the const-qualification on the ResourceRetriever methods introduced by #517.  Please see #532 for more details. 
dartsim/dart,529,2015-10-18T11:34:41Z,2015-10-21T13:35:16Z,True,2015-10-21T13:35:16Z,12788287d289b75ee08e746194f5d30fdc0d4127,1,1,62b99ed422ec8590e3dbf394d3503c08306a02bd,,Reduce Travis CI build log on Mac,This PR reduces Travis-CI build log on Mac based on the idea of: - https://github.com/osrf/homebrew-simulation/commit/f3cad8c9ab2639d5981418b96002d02a1d6955ea - https://github.com/travis-ci/travis-ci/issues/4936 
dartsim/dart,525,2015-10-15T22:36:58Z,2015-10-16T03:37:45Z,True,2015-10-16T03:37:45Z,4e04d1872f862e09c0785953195cacfa96d28838,6,1,ec4502552d6574016723c5ced0d2775b165fb4ed,,Fix Copy Safety,As pointed out by @mkoval in issue #524  we neglected to delete the copy constructors of various classes that are not copy-safe. This pull request deletes their copy constructors. 
dartsim/dart,526,2015-10-16T02:08:56Z,2015-10-16T10:38:35Z,True,2015-10-16T10:38:35Z,0fa122c0c9bc34074235735446c59ed8f3634ed8,6,1,b4edd4e2c4cf7bbc49eef2bab69e1302254a1a19,,Fix Copy Safety Patch for 5 1,Same as #525 but targeted for release-5.1 
dartsim/dart,541,2015-10-29T22:55:49Z,2015-11-02T18:52:26Z,True,2015-11-02T18:52:26Z,daa1f2ebe3345237f96c8914704a7f6edc7a3cb7,2,1,4e8abc8a323646ba4bcff8631525333d59f0bd38,,Fix const correctness of BodyNode getMomentOfInertia ,This pull request fixes const correctness of `BodyNode::getMomentOfInertia()` as reported in #540. 
dartsim/dart,542,2015-11-02T18:31:51Z,2015-11-05T22:20:38Z,True,2015-11-05T22:20:38Z,009b0d8bba3aff6c67586512d80293ccbe6bb3cd,4,3,643f8188b584d15dc073c50b7ed54a9ba492a71a 0af147f533f06a33a282864ec17dabff5db71f08 827a4492703615c062d358f17bbb936dc5534a2e,,Conditional build depending on missing symbols of Assimp package,The Debian packages of Assimp in Ubuntu is missing C++ symbols so DART has our own implementation of them  and we made DART depend on the version of Assimp that is missing symbols by #455. However  it can be problematic when DART is built with Assimp version that contains the missing symbols.  This pull request enables DART to detect whether the installed Assimp has the missing symbols or not in cmake time  and compile our own implementation of them only when they are missing in the Assimp. 
dartsim/dart,550,2015-11-04T05:55:36Z,2015-11-05T22:08:43Z,True,2015-11-05T22:08:43Z,781315b2569ecd774be856ce2ef9a6253f6431dd,3,2,3f4a9db35b9258752849915e90a5bb9255ca7283 c629eddacced5bac035ea89ac0b2190b499993de,,Suppress warnings in Function cpp,For backward compatibility  we have to call deprecated functions in Function.cpp  but the compilers complain for these calls. This pull request suppresses the warnings only for those calls. See also #544.  Note that the suppression code couldn't be made as macros. It needs to use compiler dependent #pragma directives but directives is not allowed to be declared in macros. 
dartsim/dart,543,2015-11-03T03:55:33Z,2015-11-06T03:04:11Z,True,2015-11-06T03:04:11Z,d861ec95bf312bf8fa636e6d8b4e9d616efc3462,3,6,b4b43935201fef012c7607379e3ee72ad256354b 0d2425ecec9181ecd7d6503a7dd8be4ad25d7734 207636224b9dd3f482c50af5d2907c929fe01299 9adad4381a277430f14c53d19231ee9eac37849a 7969f2d4825826244427379cad3a502893aefa0a 49b8d7bc42e8c0309a08168d3f534780ebc6e90b,,Add cmake option DART_MSVC_DEFAULT_OPTIONS for Visual Studio build,We have optimized build options of Visual Studio to find best ones for DART. However  the customized options seems to increase the build time so that it can not pass AppVeyor build tests: every build should be done within 1 hour  which is allowed to a testing project.  This pull request adds an cmake option that builds DART with reduced version of custom options so that the build time is reduced. This option is only turned on for AppVeyor tests  and  by default  this option is set to off so the default behavior wouldn't be changed from the previous. 
dartsim/dart,544,2015-11-03T04:31:51Z,2015-11-04T04:28:27Z,False,none,6f789609d61ea7e80204b2a9062a3e9a948efcea,1,1,7438794daaaeb40bad9d48330ba2b0a69f4f57f6,,Switch caller and callee to suppress warnings,
dartsim/dart,552,2015-11-06T15:18:26Z,2015-11-06T21:09:18Z,True,2015-11-06T21:09:18Z,8b03498cb074e173992d67740ebf82ea9abe19ae,11,19,1ba52e5bbd4c4b7b6bb1cbbe177a90e93dbabe08 ebc0ad8891c419ae2e35062ccdaf07e8e91c399a b4b43935201fef012c7607379e3ee72ad256354b 0d2425ecec9181ecd7d6503a7dd8be4ad25d7734 207636224b9dd3f482c50af5d2907c929fe01299 643f8188b584d15dc073c50b7ed54a9ba492a71a 0af147f533f06a33a282864ec17dabff5db71f08 9adad4381a277430f14c53d19231ee9eac37849a 3f4a9db35b9258752849915e90a5bb9255ca7283 c629eddacced5bac035ea89ac0b2190b499993de 827a4492703615c062d358f17bbb936dc5534a2e 7969f2d4825826244427379cad3a502893aefa0a 49b8d7bc42e8c0309a08168d3f534780ebc6e90b 8d003b11e02cf427c58eb3b2e02d7d644c37b310 7ee9bc33fe411fd278138534ea4f4a1477b4f244 2f49a259c68773d5ae5543b40c533b261dbc34f1 0ab5d773d4fd824cf7c5f6ee3fec5c5cbb0175e5 b961d29cbce2bf7231c0cd2612146a47885215fe a8edf3f23d06d87defc37067082bf09fc72a1e3b,,Merge release 5 1 to master,This pull request merges forward a few pull requests that went into `release-5.1`.  Note: `master` and release branches are now set to [protected branch](https://help.github.com/articles/about-protected-branches/) to prevent accidental direct commits to the branches. They requires pull request to merge changes to them with status checks pass. This applies to `master` so we need merge pull request from release branches to `master`. 
dartsim/dart,559,2015-11-20T23:30:31Z,2015-11-21T13:55:08Z,True,2015-11-21T13:55:08Z,6a21d575dff5e4b80c7909890d4bf96543fcbf9c,3,1,2d165673e2b2e5d43966c7b6e046933545686a71,,Fix packaging of dart core dart libraries,This pull request fixes incorrect packaging of `dart-core` and `dart`.  `dart-core` library should contain following namespaces: - common - math - integration - lcpsolver - dynamics - optimizer - collision - constraint - renderer - simulation  and `dart` library should contain following namespaces: - `dart-core` - gui - planning - utils 
dartsim/dart,547,2015-11-03T20:15:37Z,2015-12-03T19:19:35Z,True,2015-12-03T19:19:35Z,2a45e5384f7d2c084cc0b62c8d7f0fff68a56b29,8,5,bdb6cdb2e3f94dfa733fd998796adb643ed320cd 71bcedc49e95fd2d4b4122a54185aabe0e0f47ea 55e1266f6ebb5c38135b6a7b314d26be5bd746d6 b962cebe0ae1c772eb74ab3107003a9b3096f593 86d8d4642a58c19c9613edcffa1b8382c4002b71,,new bounding box semantics,Replaces old `boundingBoxDim` semantics with a new `BoundingBox` class that has a minimum and maximum. This reduces ambiguity and allows for off-center bounding boxes. 
dartsim/dart,561,2015-11-28T22:59:39Z,2015-12-05T17:24:23Z,True,2015-12-05T17:24:23Z,17400bcc6f0ac1409879e7590b55c4ced453b1c4,40,14,0aa402175398215af9e6fb7331a4e86f85484bc8 04098274b7404845b96620b6dcb6ebd321690113 984e1c2e9acc949dbc6ddaba855493852f79b4a4 482d17c2527e10a5aed6ae549e11bc45186442fc 9d24b2f2337169abc12599ef3aa5ae8bf0655fba 5dc38cfb09fb187ba93c3dcba3a48015197174d7 37cd00ac426f2e4427fdcdf1430cf8bdcb1e514a ff27c7bff4f5249a57ca8be826623dfe09572f09 172d8d09d5cc8e98e4ba963405e4bb636fc7af39 ffc5e7b0d7a331f9c76c7a4fd43642362e8def31 958c181a4e6b53b525f5741921108441df700122 de250158793c53d9986aa4916e3b94738fe30ccd 97f0cd14d3d0b4de5d711ebe2017862a184a91db 16c325db18ebe04be83197075f4bfe1e246f844f,,VSK file parser,This pull request reinstates VSK parser that was obsoleted since DART 3.0.   The VSK file format  which is developed by Vicon Motion Systems  contains skeleton hierarchy and markers. The specifications of VSK structure can be found [here](https://github.com/jslee02/vsk/blob/master/docs/VSK%20structure.pdf). Note that the VSK file format lacks some information to build dynamic skeleton models such as body node's shape  mass  and inertia. The missing information can be provided through `Options` parameter to the parser.  Also  `Parser.[h/cpp]` files are renamed to more relevant name `XmlHelpers.[h/cpp]` with some improvements on parsing xml attributes. 
dartsim/dart,570,2015-12-10T08:26:47Z,2015-12-10T19:30:18Z,True,2015-12-10T19:30:18Z,633c68df5adeaf98566a0e0f2d2e218d4f8f7037,2,2,8e1034c523ccd1b706cd5698f2782473df2de7d9 976fbdfd05d0dde0666cba9d21aec2f955415e5a,,Change Travis CI to build DART on Trusty,This pull request switch Travis CI to run on Trusty as [they supports Trusty](https://docs.travis-ci.com/user/trusty-ci-environment/).  It is still in beta stage  but this seems to fix recent build failures. 
dartsim/dart,564,2015-12-05T19:15:35Z,2015-12-13T01:17:56Z,True,2015-12-13T01:17:56Z,7e81b4d60ca65a80e8f0cc7d2206777ed547e31d,2,4,9946d62877f7c06c71b43415a42cacb5ba945829 e0fdd9f9469222b4d93eba1fd578fbe72031741e d72a371271fbe18db08cbdf544e27a1b4353d9aa e9661e97066cb12bcfe66f2b9a20970a5771bcc8,,Fix 554,
dartsim/dart,572,2015-12-19T08:29:05Z,2015-12-19T08:39:21Z,False,none,ae25d7db3b2da19d7e3a2b37debacb72384fe22d,1,5,26a926f95ec30d6742fbe55bc495b8d5d18cd17c 3ba48e1b6109801e20543a0cab9508862bae60f7 b10c491b04602700dc4f4256cf5d8abd9f15e694 cd1349c495d0bb75ef4fba5180b0d71daf845a1d 850271298d3a264a9273238ddb59ea77cbeaa54e,,Typo error in Tutorial Collisions md,There is two Lesson 3d in the tutorial.  one of they must be 3c. 
dartsim/dart,574,2015-12-19T16:10:39Z,2015-12-19T22:41:10Z,True,2015-12-19T22:41:10Z,a210b919d9bbf98acfd0e2f559de0895e5bf7d31,3,3,c4295f04498a488aabd6289331838ba1b15482b2 220ea220fc8fc239ed38dcc7273f53ed4f5d17e6 d2427a342be7b80c43ebb2e4e0b987e89209c0c9,,Fix control file for missing urdfdom dev dep,Fix for missing `liburdfdom-dev` dependency. See #571.  Should I add something to the changelog? 
dartsim/dart,573,2015-12-19T09:10:19Z,2015-12-24T04:16:54Z,True,2015-12-24T04:16:54Z,a83867d067c36a82597239356c5c1364b4a916b5,2,1,cbbc97555d9cab59c5b92915d54e04b1228b8dd8,,add more hint to Pendulum cpp revise the typo error in collision md,There is some code in lesson 2a of Pendulum: for(size_t i = 0; i < mPendulum->getNumDofs(); ++i) {   DegreeOfFreedom\* dof = mPendulum->getDof(i);   double q0 = dof->getRestPosition() + delta;   dof->setRestPosition(q0); } the variable delta may be the parameter of the functions  but the tutorial don't say where the variable 'delta' comes from. http://dart.readthedocs.org/en/release-5.1/tutorials/multi-pendulum/#lesson-2a-set-joint-spring-rest-position  User may need read the finished file and get hints.  There is a typo error in collision.md 
dartsim/dart,580,2016-01-08T05:27:42Z,2016-01-08T17:30:32Z,True,2016-01-08T17:30:32Z,e09d50493951d38ad8e623d0b3890abc78b1f1d3,5,5,b0f4ee72db2e81701eba3c1f73c44a02f880f10f 8d23ecdf98106946507d3ae297e594fd8ccdfa9d 7318372d294121bbd92bf7b0e473d88aa0025372 bec9a8d517482e0d010634a23721a008aa98192e c68f92b29624fb2926ffddcb96b5825c24e5751b,,Fix Visual Studio 2015 build errors,This pull request fixes all the build errors that I encountered while trying to build DART with Visual Studio 2015.  CMake would fail to configure if you weren't using exactly Visual Studio 2013  so I added a conditional for 2015 as well. 
dartsim/dart,566,2015-12-06T22:09:43Z,2016-01-07T20:27:32Z,True,2016-01-07T20:27:32Z,feef2d450594232fad2bb09f0fdd3a3bc5d0a867,12,4,d8ee39cc537296779a98bdcee83cddef83569ce4 c65383570c364ff7877ece13ac1f5840282671d6 074b654f7412bbc1fa2f9b42ca2fe554f1ce582f 3d88a47956dab867ded4aa6139a45526982b7b87,,Preliminary implementation for servo motor,This pull request is a fundamental work for servo motor joint.  The current implementation of the servo motor joint works fine for general cases  but there are some corner cases it can't handle properly. For example  a servo joint is allowed to use infinite force to achieve the desired velocity  and  at the same time  the joint is reached the position limit where the desired velocity is toward the position limit. Then the two constraint forces will race against each other to achieve their objectives and will be ended up infinite constraint forces that will drive the constraint solver to undefined behavior. This confliction can happen with Coulomb friction as well.  There are two possible solutions to handle these corner cases I can come up with now: 1. We just don't allow infinite joint forces for Coulomb friction or servo motor. 2. We treat a joint with infinite Coulomb friction or infinite servo motor force as a kinematic joint. For instance  a joint with infinite Coulomb friction theoretically shouldn't be moved at all  or a joint with infinite servo motor force should perfectly follow its desired velocity. Then  we resolve the conflictions by setting their priorities. For example  position limit should be satisfied always  and then Coulomb friction constraint should be satisfied over servo motor constraint.  Also  some user might be interested in getting how much joint force was applied to the joint from the servo motor  but there is no place to store it in the current API. This will be addressed in Actuator class later. 
dartsim/dart,579,2016-01-08T03:40:55Z,2016-01-08T17:30:26Z,True,2016-01-08T17:30:26Z,f2ccf63057879a3155d34187435795e2beef2bc9,5,3,fe3e6fe8829758151758c1d6cb41bbab4504ec99 0656ad9ad7852d6faaa1f586e8c6238337f53b9e a29a3e4dabb80b88d9ce54ebd5cee983d8f9d5c8,,Fix incorrect applying of joint constraint impulses Patch for 5 1,This pull request fixes #317 for DART 5.1 as fixed in #566 for DART 6.0. 
dartsim/dart,578,2016-01-08T03:40:39Z,2016-01-08T22:59:12Z,True,2016-01-08T22:59:12Z,1958e55029cdb1d5248adfcb022b6d724eada55a,14,7,a558fecf6eb37903113e84796a14aaa9fd96606f 3f68bfb0ba6f474ef79d63e329ed2b381f09c406 ab17051cc2ef4d48d9f8d0dbca99d0964ed33bd8 745d7430709146662d32829e5690b544779218f4 e98694c4b32cad46bab9903610fd60992bb05e14 15c236cb72802178da7573cab2feec24962ab6d6 5249d84f53c6109ca62a45f10c2ae6d7997081fc,,Fix incorrect applying of joint constraint impulses Patch for 4 3,This pull request fixes #317 for DART 4.3 as fixed in #566 for DART 6.0. 
dartsim/dart,581,2016-01-09T13:16:13Z,2016-01-09T13:19:27Z,True,2016-01-09T13:19:27Z,693e656bf25236a74aca7c06f5694b0749953e30,4,4,f160a8dfdb4cdfa6ed062c0dbe1a00f3c4859b59 4f97999d7ffd1f53ef393af21a10693f838bd38b 214c93e34c90beb15d90d55cc47c4e6b5dfa9749 5f9a0264a0cd87490012a6eef63c4a33083c5253,,Packaging 4 3 5,
dartsim/dart,586,2016-01-15T16:24:05Z,2016-01-16T11:07:02Z,True,2016-01-16T11:07:02Z,a8b152e3ef37da5040c53d1d491843f41ac80d24,2,3,34a2c1bcf814838d023c40042ca37fdee0fa52e7 43585eacf6bc1f11a9608c6955a8a8cf80f9251f 8c994dc2d4f145fcba1cbc21c2a4e4622c7b1b7f,,Implement missing implementation in ConstrainedGroup,This pull request implements a missing implementation in ConstrainedGroup as reported in #584 and removes a private method ConstrainedGroup::checkAndAddConstraint() as it's not being called anywhere. Also  this makes ConstrainedGroup::containConstraint() to be compiled only in debug mode. 
dartsim/dart,595,2016-01-26T21:36:38Z,2016-01-27T05:52:03Z,True,2016-01-27T05:52:03Z,b9d491f8bbada1f9dd125cd3ddfa297666c472bc,3,4,fb664e76d3d066aa4eadd75d3836ca8287587f92 7d5d074bc35cca39b1aa1172b0cd157cfa90496b 2e73697912495f4cd6b7797874d8d03910d50f87 580e188f6dae5c77721ba2eb72cf23c748654f3b,,Set AppVeyor to use Visual studio 2015,
dartsim/dart,591,2016-01-21T17:34:49Z,2016-01-22T15:12:16Z,True,2016-01-22T15:12:16Z,0d1345004871d92cff37df55d51c27e2cb40d1b7,124,114,4de3375232af021b5372ceb0711a44ffd00670fa 4dd49d40b1e4e49e031a468e48472053e9f73d10 bc49d40c1306f5097bd58cf5256ddaa8201ab3f0 667ff1c2e7b3f96bfd84f65ca0e55a4de0680c96 8e1034c523ccd1b706cd5698f2782473df2de7d9 1ba52e5bbd4c4b7b6bb1cbbe177a90e93dbabe08 701929e80daf345ed80bb9e1d9de0c34694486df ebc0ad8891c419ae2e35062ccdaf07e8e91c399a b4b43935201fef012c7607379e3ee72ad256354b 0d2425ecec9181ecd7d6503a7dd8be4ad25d7734 207636224b9dd3f482c50af5d2907c929fe01299 4e8abc8a323646ba4bcff8631525333d59f0bd38 643f8188b584d15dc073c50b7ed54a9ba492a71a af3d1cd3f9fcf6751e9ae4d8afed35801f83787b 0af147f533f06a33a282864ec17dabff5db71f08 9adad4381a277430f14c53d19231ee9eac37849a bdb6cdb2e3f94dfa733fd998796adb643ed320cd 71bcedc49e95fd2d4b4122a54185aabe0e0f47ea 55e1266f6ebb5c38135b6a7b314d26be5bd746d6 3f4a9db35b9258752849915e90a5bb9255ca7283 c629eddacced5bac035ea89ac0b2190b499993de 827a4492703615c062d358f17bbb936dc5534a2e 7969f2d4825826244427379cad3a502893aefa0a 49b8d7bc42e8c0309a08168d3f534780ebc6e90b 8d003b11e02cf427c58eb3b2e02d7d644c37b310 7ee9bc33fe411fd278138534ea4f4a1477b4f244 5c5c5afb603e07a0e173a6e231c9a9183eed4c3f 2f49a259c68773d5ae5543b40c533b261dbc34f1 0ab5d773d4fd824cf7c5f6ee3fec5c5cbb0175e5 b961d29cbce2bf7231c0cd2612146a47885215fe a8edf3f23d06d87defc37067082bf09fc72a1e3b d22bba74631ad3a1ff25ff28c74ebd3136974a35 a5eda7ea4188337041c8329a1d019a1a0a5f618e 1048a0657ca5a60272edc40c96037741e8a920fb b66b6794865783ae703fb2d1f0e2462750b6186f e65a82a167e21ab450ac5337b1e7350d494305d6 1e34ac5138fb9546a18bfd4fbd6206a22bd1085d 1a750fd6665c95566a6fd1392594c63d8bbce061 71f6aa2f8644138e321fe6bdfbffda6bcbf16289 71b04561554f3ddfe8241d8e269759db12965490 105a0735aeb5b2609d960d38ab3df7cef6fd5df6 fa37f1c68066733e5b35828032b4589620dc5145 934448c56d41fde1c1202bae8971b71e8dad1370 1a5356dffb9b46b4deade850c903c7d4b0d29369 4dfe4b5735f171cb11ed3ba8919ecbb54df77ee0 f1808c8c2024c5c28d92cd98f7990ae5709c0666 e5aed46d5f17119188c52fa6a3708d3b2238519c cba5ffb8cc23b132e5b4e5e4ff1c2c6d96719a32 bc57bc26ef04129f8f878e1e7eb55b524dacfad2 4ceafe1f94a0b4c0f4ecff697c367481e6ee76e3 e14110c8f94cef2cfd93d3d4dc054ba8a8cb2a6b 0dee94005d5c0d021b15c6f182e764e28bdad7e2 2d165673e2b2e5d43966c7b6e046933545686a71 ed746f6ac1ae5a2e0ca2e5c0ed9e16f1f33e4fd9 2e1709efe94a6c4eabc016e4f086d54d368d33d8 0aa402175398215af9e6fb7331a4e86f85484bc8 04098274b7404845b96620b6dcb6ebd321690113 984e1c2e9acc949dbc6ddaba855493852f79b4a4 482d17c2527e10a5aed6ae549e11bc45186442fc 9d24b2f2337169abc12599ef3aa5ae8bf0655fba 5dc38cfb09fb187ba93c3dcba3a48015197174d7 37cd00ac426f2e4427fdcdf1430cf8bdcb1e514a ff27c7bff4f5249a57ca8be826623dfe09572f09 172d8d09d5cc8e98e4ba963405e4bb636fc7af39 ffc5e7b0d7a331f9c76c7a4fd43642362e8def31 958c181a4e6b53b525f5741921108441df700122 d8ee39cc537296779a98bdcee83cddef83569ce4 c65383570c364ff7877ece13ac1f5840282671d6 074b654f7412bbc1fa2f9b42ca2fe554f1ce582f b962cebe0ae1c772eb74ab3107003a9b3096f593 86d8d4642a58c19c9613edcffa1b8382c4002b71 76485a3dc24c7f7d0d31b3630106571a69ef56a4 de250158793c53d9986aa4916e3b94738fe30ccd 95d019c61db1edf9ac07c6999a21697dd1c3b996 4efda838a9980d664fa812eb7798017ce413e897 97f0cd14d3d0b4de5d711ebe2017862a184a91db 16c325db18ebe04be83197075f4bfe1e246f844f dca2755ca800ca1712ba93376ab804d41eb46c4b 9946d62877f7c06c71b43415a42cacb5ba945829 e0fdd9f9469222b4d93eba1fd578fbe72031741e d72a371271fbe18db08cbdf544e27a1b4353d9aa 976fbdfd05d0dde0666cba9d21aec2f955415e5a b333113a7c0cd7673bd36f4ecb338bca892d4520 e9661e97066cb12bcfe66f2b9a20970a5771bcc8 3d88a47956dab867ded4aa6139a45526982b7b87 77cb772469b3fceb6b917a2003e954b5b4de5e7d cbbc97555d9cab59c5b92915d54e04b1228b8dd8 c4295f04498a488aabd6289331838ba1b15482b2 220ea220fc8fc239ed38dcc7273f53ed4f5d17e6 d2427a342be7b80c43ebb2e4e0b987e89209c0c9 ed208fc856983da3f8fa4201d73675045e297cdd de4b14bd7ac0f79376689424a98d06815a2720e1 e6ae75b4f7c2d3c41b0340864a433578665381c3 51f23e0c2b9388dcdcb52a95e4bb6e11190e88d9 99491af6292e22ff8752ee40a4ab797e8c5b0e90 b0f4ee72db2e81701eba3c1f73c44a02f880f10f 8d23ecdf98106946507d3ae297e594fd8ccdfa9d 7318372d294121bbd92bf7b0e473d88aa0025372 bec9a8d517482e0d010634a23721a008aa98192e 6b71d13210d45225918afd266ee41b1c276f08f4 e8e0e6311307d75d7e63a0440704a0136ad9324f c68f92b29624fb2926ffddcb96b5825c24e5751b fb06b0b54ad6345856d97115663dffb51c846cde 2305827c413f602dfd46bcc041d6deefff5cc2e2 ec269b5f21425950ecf7c6018ea0f7d41164c889 d0427594a93f7dcd3f0cd39305a0ebcb2835f0d7 0c91dca69534179fe382518f3f48725e2a07db89 34a2c1bcf814838d023c40042ca37fdee0fa52e7 43585eacf6bc1f11a9608c6955a8a8cf80f9251f 8c994dc2d4f145fcba1cbc21c2a4e4622c7b1b7f c3bfb608cd69bda05f16a5b6ad0693331736f50d 4ec1be80348f1b89b2dc8d75d7aac62f9a71bdc9 2194f99d179487454434f2c60436ca2ce1c3798e b10b4a3b5de9aeaee4aa533c3ac249264ddfc29f,,Merge master branch into 531,This pull request merges master branch into `grey/addons` for #531. 
dartsim/dart,587,2016-01-20T00:54:17Z,2016-01-21T13:42:48Z,True,2016-01-21T13:42:48Z,9dfb2f912eaedbdd42186aa6f482630190a4489b,151,31,fb8bd596d9d25547c1cd794837233dcdffae2f4d 8dc80edc309c2c55c9598ce28e2252d1c79f7010 d4db9c210c3e444f5efe456022b9d6d2dd3e2ddb e7d2f996c7e923196bd499cfb90ed803af19c54e 5ce6914087c67e60df13a56a7bb054ad48a3daef 2be5d4e678d0e11621da6d112305249be7c15840 795d5209c7915b187941558365bffd483890c399 23edf458451096033df573ebd2ae71d42881fb81 dbf04726d3c18a41a94af2edab4b44646b787044 3c659fdb4b3aa81f911552d7919cd9387b34cbe3 887ce4f9312307859525ef77917fc7a3c1d7183c e5d6bd83c513605819e061ec8e854cfd0d08bb67 99d58cb1ce33b643d45181fb3c8029ca8179a8eb fd3148263c5723c2233cfa48dde38cf4ac043e39 4413cc9b4baa8c7760a0d350a771545e1c13a67f 8890f0611a6d3a822fcfadc612ac112acaf165a8 24ff5c42b6e0bd52ed527d0ddc144c2cbdb22525 eebbe36451286fdbf46fe53c43b73b1471dbee86 70abb5de73361697aad1d86d3db6b9ef6e6297fb 17d9fee95b5a84eb16587f0c56dd3b0f01a5739a cefd85a93fb048e330fffe67e05e097c589c92e2 dcc849c7d81f392a078f6434f1665e3e2f1decc6 f36f21ed5403d447c44b57f916654228de1a7d36 4a7ed505c7e3957e44eef2f0473c1fc626516173 adf210f569f41ee41f29ed79ed4a28a253c2be68 0476bc74c329076ea5396960edbd286215760c19 69ea914aa843eeb548cff2a974524dad7b535dd6 1bb64a7f63440bf2fddea198947d2efb52e71848 2088d232c5c59cf8a7b03494dda6ba1cdf405be0 d7118fe1678f7147d3b5955d108785e43903e674 097f0cfdc6687cfee14d12469ad0fc06244516ed,,Package reorganizing,This pull request reorganizes packages of KIDO into new composition as discussed in #477.  In the new composition  previous `dart-core` becomes `kido`  and the additional namespaces in `dart` are splited into several components: `kido-planning`  `kido-gui`  `kido-utils`  `kido-optimizer-nlopt`  and `kido-optimizer-ipopt`.  `osgKido` is a separate package rather than a component of `kido`. So `osgKido` can be used by `find_package(osgKido)`. But  it can be merged into `kido` as a component easily if @mxgrey wants. 
dartsim/dart,588,2016-01-20T19:43:58Z,2016-01-21T05:27:25Z,True,2016-01-21T05:27:25Z,3d440fd0816e20f1ef2b67d185ae159fbaf73125,59,10,eebbe36451286fdbf46fe53c43b73b1471dbee86 70abb5de73361697aad1d86d3db6b9ef6e6297fb 17d9fee95b5a84eb16587f0c56dd3b0f01a5739a cefd85a93fb048e330fffe67e05e097c589c92e2 dcc849c7d81f392a078f6434f1665e3e2f1decc6 f36f21ed5403d447c44b57f916654228de1a7d36 4a7ed505c7e3957e44eef2f0473c1fc626516173 adf210f569f41ee41f29ed79ed4a28a253c2be68 0476bc74c329076ea5396960edbd286215760c19 69ea914aa843eeb548cff2a974524dad7b535dd6,,Change namespace and directory of osgKido,This pull request changes the namespace and directory of `osgKido` to `kido/gui/osg` and `kido::gui`  respectively. Note that this pull request is targeting to `package_reorganizing` branch of #587. 
dartsim/dart,582,2016-01-12T10:33:33Z,2016-01-19T05:10:13Z,True,2016-01-19T05:10:13Z,a8522548817f3df0ceb7d94ee65d499b0a1dcb23,581,28,cbd6f4a4559242dfa058138a8d206acbd551e21d ed8bd0c28e4ecf51eeadecddd561c4b8f425d1e2 a533e5d60d6d19618d1a0555112db1b7e1fb7db4 348885883724e98a979ffb80492819c9f0356551 f38d8f2b98b7b10a64ebb5a779301fde39d32da1 4958d7f78b8aea26d9181f949f136227c2fe9d59 03f2c996ef7a2f851983a6bdc5fc44dacb263215 cbc62e91299273e2f9daae2d14ce2dc840deba2e da39779872f023f869723e8f3a6e72fa3937c124 6ef2654f2ff3520b5c45689ef0cd5a84ed880c6c f7f447ea722340dee3941e455dfff96df7637ede 36acfc40e52125024f6bde04579d2b2a7138e687 4b16865b5adb7eba2cad708f9cdf78953dc0d094 f7123087e5a15005b90837ad614a0d0be4babe46 7ce12e50d650cd914ef95549b35419ac86ca4b1b fb2cd04b10798760e9c05c4655abc07dbeece3e3 2547bfaa48db13ec50fd2743331226ffe248e25e 945741bae96b81403bb0d56da527de3a78e95747 6616636a923765ef55b14f55e3cdc7270a4b8eef c9c3930c7ce60778f9d6b99615ff4baa544cf163 c49816e7b20909126c1535ca8e90847ba258f538 729bfd2c809c497e195a0eaf3e2637c981a07015 cb4dbeac7704e84931b83feaa40b5acaeb811377 eb383322f3835c458191d7d79a38aa04727fc3e3 396a73952fbd2677dbef2fc6035a869da14cf532 f98ea5a36961f57af8a2a503dad5a99fbe5df84e 63cba047b530adee3351c9eda2b98208f08a42f6 f47f65b47c3c5a443a3f79322b02a6fab9ec7e42,,Renaming to KIDO,As discussed in #479  we are going to release KIDO 0.1.0 first for the initial submitting to Debian by around Feb 18. This pull request is the first step of it renaming DART with KIDO.  Also  `kido-0.1.0` will be used as the release branch for KIDO 0.1.0. 
dartsim/dart,598,2016-01-30T01:36:49Z,2016-01-30T17:58:26Z,True,2016-01-30T17:58:26Z,44635b1c8b9408248d108bf1a748f7cea236fa22,12,9,b4e2e64a9eb93509be595089e0f45342e31349a7 4ae6e8ed363c04afcef04514fa3b6aa8ea6130d0 2cdd8d6407980cf6e62ecd695139ed370b16aad2 acf7573a1f888f4b91fed2d7ff9b76ca7e845e10 480422923fd9eb6e7b81c1a091ae745c52d78d63 b3294838e57ccb0f6f5fe6adeaa1a48c721b45eb b97d7f539c2793e2c33aed05fa64e83925cfbd0d 668d3343c2f694f5253b2c89d8ffad7a1a4b0694 585cf4c94b703a475ce97acaee2e17f358a37589,,Revision of 531,This pull request - merges master branch into #531 (should pass appveyor tests) - revises as discussed in #531 
dartsim/dart,596,2016-01-27T06:34:05Z,2016-01-27T11:46:09Z,True,2016-01-27T11:46:09Z,a4bd3fa9c984a1fed4e9ec1d79986b938f5abe92,4,1,4ae6e8ed363c04afcef04514fa3b6aa8ea6130d0,,5 1 master,
dartsim/dart,490,2015-08-16T19:09:21Z,2015-08-17T09:45:36Z,True,2015-08-17T09:45:36Z,987e571d22b251446371722f161e07d3699fdb46,1,2,794675afe28cab23509f30551a35775baed72386 524be4da45f3d155de8092341872b355b5dd005a,,Fixed segfault in Linkage Criteria Patch for 5 0,
dartsim/dart,491,2015-08-16T19:10:12Z,2015-08-17T09:46:09Z,True,2015-08-17T09:46:09Z,3d9b71933719e92b9f49e7f6f1dd9f04d2664b65,1,2,794675afe28cab23509f30551a35775baed72386 524be4da45f3d155de8092341872b355b5dd005a,,Fixed segfault in Linkage Criteria Patch for 5 1,
dartsim/dart,492,2015-08-16T19:11:16Z,2015-08-17T09:46:15Z,True,2015-08-17T09:46:15Z,d89e382bc1ec923652470906494acd79d32c85c2,1,2,794675afe28cab23509f30551a35775baed72386 524be4da45f3d155de8092341872b355b5dd005a,,Fixed segfault in Linkage Criteria,
dartsim/dart,461,2015-07-20T07:45:19Z,2015-09-29T16:11:08Z,True,2015-09-29T16:11:08Z,29cfa40b378b3aa3527504f07a101229ede8dd2a,134,270,18acc252b0c70132f4abf5bdb7880bfd333e131c 9494377e5d2648ab9eee36bd8481d674457f1b21 1c9e4a0ed4211a433099e73d01fb0ab28e4cada6 2bd1face6500b546496a068aadc159b0b125a900 ccb97068c763de277b54bde8362926a46315ea8a b3b08ae6d2c5c6eb550a5b6d7ad76032f41a96dc 0b31f2e73f6a7a06f08bbd658d73d3e327daa515 2ff4c7e22c168aeaa8f0ad3e7a1736825fb20384 645ca94f5b09a921eaa2050f5aa09e7797dda089 30cd5c2c4ed60a40711f66478e35ea54d8cfa84a 0e96a4d074ae7ab4154f364703c7cc4e0dbad8b0 e10bbfcb97a88f1cb7a43f02265acefb8bcbb750 ad701d5f7dc87081f0ca050f974ab35a1e55d097 5994f7dde0d4f4b6f45daebed8b0e23fcb2f51ba bdf46cdbd62173a45a474f71a4f57cdc370fb5ac 37419018a1ad8a83c69ed238ece5d5af07b8b68c 1534432b1ac61e56d22fef6ded7005144ddee2de c9d6b4cb34b9826feed0390a7b2feff97c20444b 048af0051439e9802d9e4943a91a5016ee8368ba a5487b571ffd64c421dbea7d0212f251367b0e74 b200d3b8370516bf7ed21f39e89e6d447e9e5be5 f31dddbdd3093cc6d9097d62a42fe0b940015d0e 5f44b1ffa4f88fe494637ed12550c56ddaa6439c 1d2fdd95b06723cd7d83fa622bf1226921cf1065 f39b8299e207aa893e812fc5302ff8c78a951e40 a9040a6373607e70faa495eb4bb3ea244e1f560a 9bb263d010876ffc6ab38c84d1d0a901a2a0c54e 96ab0b0f201b70a5b538133c19f58573a07b6254 179a995cbed78275f247781055c6a326de4b0b07 6989b8fd89622f4b6dff9dce393bf21f03e8b5ea 122b011d371250e028f5cf45a32ac5a4ac5761db 5fbbb688be6e87b37f43c891b13192a49343e863 ba4a5fac99525ce5d27649fe15df2756099603ca 5da4071ad137f4799287bd52d0b01e1d2f3eafc4 d62c62e68a78179e15714fe59194dce9f411a848 7073caa70bbe524e578131335b9187effeaaf14e b8b0091e29437bf93bee61cf6c618009dd6468f7 6af9cd0a7853d69e27de143f1ccb3b7e4bd232dd 5c9c20aec2741a81655bb71b50b3377dd319e963 ad21cee520f5c89a246a59f7d710a325c21a9807 9bc26c9ec7cdf0052fea099dc9f4c1c5a4b056db 44c780366320a69e2451f8cd1f4d24a2ffe0b833 f5e8c7d8836d96b3b9c1ae6833a459e1f7c349e9 2a66009b66956e9c68d4b5bfb78971fe604a0286 10514408056a6ff0e66135358e2c54ccc058fe98 164574fe3c7e7bd6c8a79dbc8f0029dc824efeac d04b8bae43eb97791a3d730d9484bca21bfa3723 e4cab7127822da99b943dc76e07694d0149d3ca1 c297d120df7ce8805f4379624e1302ccfa9b18dd 5644214343fd82e7c99ca11f23e749d22e67fe77 5567391512b51269843e41d1e9821fd2edf55568 ce3101babf5f042243448c4bfde217213105c1bd 57e23af14ea358d6361d1314d0080f686f8cb4dc e0cf25c94bd9e74520b49a34023d9ec7222644eb 63163c3daf153ca5965bd7f10d195e2881ad9c8f 59e70f9a91c4d3e9a0235490377cafa4a3c2726b 34559164e24225e454382e735eb585a745249a5e 553c472966179d051ab116d9893ea2a75cd80eb5 8a6f442fb346fce9abc70a5447988ad75d453363 6b0266cfad6aad4cdc40befdf8d5994479a78491 22042bd4ee7671823e7a9fa72d880cfc449b224e 17d4b4de1f390f9d92dd81740a09ee516bbe0758 6038d2a5307740817a8d05c1a0ab779f76c50f76 0686412d194404ae5f1b63aa7e0d235baa874647 818d1430ef7d44c0b739b8a2736ee942edfe56a6 ccaf7422249405b0e0ab3cc80f1b327a68b07905 95831000f659ff1e5ad6dccd1185db42adce0d05 0a544e8b75703b8067b9efe2a11cc15c6e83121f 71abcbaefce7f2920f99c14e5825d56e3a0b5ff4 994cbfc58a1499cee2d4db75c0e39971b40a3653 ba60dbf01a199f3e74671077b3b7e3c7ca4c7543 d918baec36e5daa85cec4d5c11c8494b54e86f30 d48b85afb444a1951ef4483c153c0d4e7e5197c6 b4fd8b8ff2b5847c4ff1bd57e157cb6d41fad708 84dde14a6bf89659fc3f52ec06b351231f3616c0 a92fd2a6d724cea1323f627bdc873bc4d2ebfcb1 8a614de3f843f49e3a105719409ddd079ce58ae5 8f1757f65bbd1a47a629778160ba67ff15ef96b4 802199b53f85aab0a673f5399446d5ed953bfd07 2241159147bd2bb89d3de491c6fe1ba15c8a15f5 c26aef0d14e6c482b5b4b2bd4704b10264ef588f 71f344dd48199845b7db9eb09403063c87577197 e85d7580934273ca6aab4d2226939587cde59f6a 98321e9e28604f343a4e1df2fe609ab260be1a8b 2dfe7573776ba59fd0536674e71c20d913083958 b5d14f26715148de31d170751613303e4ce3a11c 795d0b3e59e78d5737fa4829e49478b3e6377d99 a4a4cbc93d797eb0591ff0aa49a629a4fa64bfe1 cf2210e94771437fe958bd35d5a0e7e263dc33a0 3439b1c69b37500d9526e2ff9bd9c0c5137a3d0a 4e0c1f3bb088c52e0ab337d6bb980d7c6d77f2c4 fe221c85eb8c294d2e5f1a0dc6e16dcfad63d449 5bae0a7c8997c8d06fc78c3b95bf9640d5863891 877bb5bc12049f921a1f0c470fb30a60a04609c9 af5eaf97c47a44a6473932f05ecf7dcce655585d fb30636a9a14b0ba2a4e786a454004183b8d7fd4 9e1704f26802588eef6942049b9c852363c9c53b 682359d157943857a909dc1d48a8b598c089071c d0d85f6dc48bd0dfd6102ad2b9d257dcac690f9d 4152bf63467b3e5b47a7e8f3dd87e4fd4a537107 d1881ce2e29734934af6324b08665bbca02f7c36 7ca39bbbaa885ca448c4f0d9bb77163176b0abce 0529d02e5e9d1f727021ca00a7dc1b6c7984aba8 5358ebb6348bf8036484430f5b04a16e12e92d6c ec13db0b6f8e82a812f99f5cbc593333e8827cf3 b2fe5d9d6bc5afbf0b22c323ac20e39153eb5917 6f72a7db08f60b08bd4a0a2359501780bb7ea1ca c30a5380c21171c8053d1644213c150fbdfe1fa8 948fb44086eefa7fc9ea6c25dab17d0622dbfc10 259b0a442d0e08fb23d1e066119f4d04790ce6b4 7ed9107668c6e13dd37beb97d0105bd2339f40d6 f34af54498f9983b9ebeb73ffe5ee9d76d871e77 63db57eea1df086e43f9c81137f15c7823c6ee4e 8b0214f4720f1ebd91abe21a03f7bd230b51c845 34917852f9b7fbc3b3dbcf86fda46c4b14c8817b 57ac9b254ac5c958d48ead88603e6a93bd502bdf 375a975b19a09556b24beacc43aad1228bac3977 92c5a65c9048f865b3978c9a6c8650702353937e 5c3facafc4578ce00a5cad68f9e6bc9576d20b0f d17e8fe75fe78f79c22078e8d73a1bfc4e5a193f a9de01f89464584d34333e71f5645ce921c32a7c 59438c64a388bc10fd880148ef787dd9aead72ec 1d9f3b55e94fe07413d4b078280412c2bb88725b 928341d928333460979aec88345d313fed8934a5 94c53879b5a073e47d61d3ab01275180097e692e 394ce47c5e45ba987511a80ae45db6adfc885174 0df7db175272d17efd5bec4cd342494fc7323ae8 628e50f7ba529eb6a75de6f4b1503af3ed9a295e cf035e747541839d76991ff49bf5f42e7564c082 0c9c844cd58fcfdf176ac184d3baada65cabe6cb a41438df6a405947429be8c0dd01f663c2932127 be68ccf9f69840ece6dc0f2b871a3333ea60aa53 9907c8e5c14f4d51b8f1a1c52b8b55f6777c1c58 4493279566166ffd8ff0f0f3b471c1b5bbd8671c c9fd59d97f85b29b61ae376ec02d38c94bc365d7 2addca2ca6fe49e6eef8a92f11d80eba76e2c887 a0dffdd979e8e7d6a94f3104ae92d1be35106a18 3fd336decc811d234f1aba4cdb427a6b38237ff7 780ba065406d0a91cb70630ca990d70e2cacd276 7881cd1872674775fe7365b3e0691ae42fea41dd 62a508dd7795ec034ffc20f7f67e7563c6e41c75 e450038f742b8f1139dde4e4913d36a60f4beaa5 cb753837979c042da8868a22d07d9b08b396b5da fc0932a9ff00aaa5262dc9e38b782bb348b0b312 cb2b0f5d1431932e19c8acca50e306220b7c3bfc d9dc2d42a39289b0238aba50e22dca6d844de4ed f90fc46ba9158c9af216a903e9d2bd9c55f3c99e 51e0473aa3e8a94617fa61022f48479b95a6ee57 ddbd0c7b7bc333897996722959a632f70729ba9a 3176c602806413bc2946d0139d184959dcbf15bf 8ff3213d0cceda84bd6225b6b6c52c01aea426d5 3657966f00fce183df38d45f1bf27f806c8fa635 f8f7eb4235fbca9978f2b6d148184cd27d133827 485a9d58803bce7b66656869eb183fc392a53328 8812b537930fa8ab542a8693f43209479a948771 7cf0081a8a6162f35bfafc0c6bea4868b8d4ec1a c5abae53181619eac38426e3d153876973f91388 7b41b1c978b0fae08d5b6e24a50e0822cb2fdf88 b9a53e7f3c5b16fb93c194d18250b8a5661555da 7d119c01b098877f5653a3dfe150c59ec49788d4 741c7c2413109c1de53b671aa3c48dc560346824 2adfba1b80f8edf2b4e553e3bebfe17529f11935 2a0078018c710678cf54c4ff0b312a895bafc420 3fd1b8c45512cb862e8c8eb0c04ee06b68cdbc50 5211c76bb6375ce477e05b56561e44afecbf6177 4ec11f4675bed65f3da77041d0694554f3c0c312 63983832534450b194571e7ec36d44ba757a7ca1 dbcc196b60a5d0844e249b4f2e4975d405ce4559 699f6536ed9f17d9eb2f9f6d03637872d3df2841 12190696d67d53991dd31b7fc575d4f790d6a457 634f78098e275407c51a63e6b88e79dba50e65b9 a5d1a5092313fa360bb0951c6e371347ec3b394b 20aed4487b3a326233b421e52066937c419ce923 7be1bfb7995ed3df179d56392fd7105741436c92 7a540b80553db9923bea1b32b505fdbad5c22339 993ea3354ea9afa269959b77a3ecfb2461dfe174 b36b18329d471828e1648de93ba3ed48f070922f 0bf5b90b095d65cc3359a81ba8c060a6983c6d05 4ec7b4490868e5e7c24f86e10254ff165b40c9cb 6c92edda9e4ff9f1467402a6fad161b84e32bc05 7c4d37e91d6733bbb2da2c045a7ccaa82945d18d 4bd5485e86794f436ce159c2c480a30ba8877c41 c824489dc4ef3fae4474b14beaa4ca66bce618b7 311dd688c9bc93ef8db2e2286eb7ac4819a35617 56f4097237bcfd639c7144cc9fa5b1877d27901a fe9ca9491be808658305088aebcca06898f461bd ab8fc7ebfd83a6c7be783f8f655b32b06cf14f0e 886bc15769e6cd60b08051fe78a8b9848afdf6e7 0ab5673e4060a5583d6ed060c203c682e2333849 358628a58ba48f77e2e4aa50549e169a707a3308 6768773c3f960c986358f0301ad4bf81955bc652 bb80cc57514f743905b1f5e1df08cef3381196da 76362cd2d0e9f8cd9fd7a3c71ac02a7ec701f420 1e9da74271babfc147693b11df43ce3c39d78d35 e252ebccc21d4d811b0ad61ed93891b15e7e54f0 176d2b66dfce68a7391a9f9fbe2c7be913c95d33 e99ef9852f24db158cf667a7c49ed1cd0eae4108 60c2f26f7ece085a673bf629b40222a26625b0b2 02cd3625d4650a3819f6a2d06e6a9a8ae636d4f0 a438b35ac4e3f198e75fa78d04b4838b0abefa22 0fc5fc72807f072bfd60b6b9218993e36190a9d1 c39c4a72ec5afc81ffe7a18f2405df2c2efe9676 b015f48c922da29be43d980749395807d5fa33f7 1328d61c3c76c54c3c2306a90655ec7dc6bf8c23 2d0d43d53863ad17c421a33441614955b97a8334 7ff8ac4e3b63734b2f09c4cd729f614bfe7b926a 4923136029806778d46aea2ab400503d73d0e2fa da2be6b00c473d04268dcfa133ffaff9267370f4 8c456401965524205d60c68497f376d5d179704f cfee556c6faad4f85e77c500fe50afda55101676 6d47a924f1ecc22b6e50954926d08bd9c63e6574 5e6440cf942f33608e2f697626c3237eec9e2d22 8aa6a5f324648ef3b8ec8d341df262bf82543e96 71de290abb8aca0fe1e84323c315ec0052e6b1e0 016117f68805d073bdd9b8b7d7ebe7fd6b77a9fa 2ab3080ee0501732af92ad6fb4701e8548dc4adb 44a06f772d18ad4a4ab75a415fb31549a92b0573 2997c9f53dbb753bf04661a99a4d70b7afdcb401 3e18fd3a4d2cbb51284033fe34bf069dccd529de 1bb07e06719a177acc9f99bec6c05119452251a3 5ad6ad3d67e15fb8ce05b5b98c263ace746c56c8 9b33c5119fcc23ac0c37c3db212619663b5477b2 50e8788b9a987ffd2cdeb5a7d3d2ee8963a863db 6d6a81887e7c1f9c7ff601765325835592f18193 9b45d90d0fb77065b02e64f8df1b05d693a992af 018802f1ba403bb487c16be5e438fa729b4e66e9 ddfbed8a2d68569a041cce8d0a60e1b4a7cf27f5 2683e16950c7fb511d8759360a75d77b60a45e0d 6d093a647b800045e0f1ad24d2de3bc7d967723b bdb1d458914a19547245204f5f55ba03d8ee5ea9 38da51e888a977f4020d5afb7ef47c476c9ba5c7 7200dbeb2917c1406c94bf8d55e2c8dcd3467af5 ff28db1ab4c222dcf7712b809666222ba14b8576 0048e38697c362757169779e0f5ad1e8600dc92e bcd7e36ac7dcd3421a4a749a5b8b70fbadac8c49 23862c75525601a62f6d4d8e6a4778f65777cdc0 e7dec700a985055b575fe121de9048332efebeb1 4180fdb5a018dcb691a9223308ec4ac930a6f43e 6f668af88794c4e006b8b6ded4100a4a4e23571b a24ce0248b9ba75fe6b5809947ef6923870d8a6b 7ea9c8742e43e0beeec6129d9ee435ce5f2acc54 a3f323accf8fa8e738396d5432db185af9d53b5e 76b7a35eeccf858811d69da0541ec8ca5a400aa9 b975db2c3230bcb9dd423abfb9ba89300353bc01 41aeebde4fc5766f711ef80b3ab197fcee7a4b3a ae2694b00d661b5b90b04bdc9a71a389f7984521 97a623d1949eabc7e466b2de8c8057167b8c4949 026ce865040b597660fee83292b1094a16d73384 bd9342e29d348514bb7968c03e6363f3102437cc 68d5d27ba9fae2474782351896fe82a02e03e48f,,End Effector Inverse Kinematics and OpenSceneGraph,This pull request introduces three new major features. While it's not preferable for me to dump out so many features simultaneously  this is happening because the features were all developed in parallel and tested by using each other.  A very brief overview of the three new features is: ### 1. End Effector  We are extending the Jacobian features of the BodyNode class to an EndEffector class which is able to rigidly attach to BodyNodes with an arbitrary transform offset. The Jacobian API of the BodyNode has been moved into a new `JacobianNode` base class which is inherited by both `BodyNode` and `EndEffector`. The EndEffector also provides functionality for specifying support polygons  and in the future I intend to implement grasping context information into EndEffectors. ### 2. Inverse Kinematics  The new Inverse Kinematics module in DART is a force to be reckoned with. With the Inverse Kinematics module  you can customize the: - Error Method - Gradient Method - Objective - Null space objective - And everything else  The way the IK module works is it sets up an `optimizer::Problem` with Objective and Constraint functions that it ties together. The `Problem` can be fully customized  but the IK module starts it out with a setup that is sufficient for most standard IK usage. The IK modules are clonable and can be cloned to operate on a new `BodyNode`/`EndEffector`.  There is also a `HierarchicalIK` class that can tie together a hierarchy of individual `InverseKinematics` modules. Modules that have lower priority in the hierarchy will be projected through the null spaces of the modules with higher priority. ### 3. OpenSceneGraph  OSG is an open source C++ wrapper for OpenGL that has a very nice API and a boatload of features  like mouse picking. The new `osgDart` library provides an interface between DART and OSG  and offers drag-and-drop functionality for `SimpleFrame`s and `BodyNode`s.  Some of the nitty gritty details inside osgDart are not fully documented because much of it is liable to be replaced with the upcoming `ShapeNode` changes  so it would feel like a waste to spend time on that. Also  all of my changes to the `Shape` class will be migrated into the `ShapeNode` class once it's implemented  so if those changes look unappealing  don't worry; they won't last long. ### Other notes  I've split out the nlopt  ipopt  and snopt portions of the `optimizer` namespace into their own libraries so that they're not hidden in the source code. I haven't updated the package management to support either of them yet  because I don't know yet how DART does package management  but I think it would be good if those could be packaged up and offered on the repos so they can be utilized without needing access to the source code.  I wrote a simple `GradientDescentSolver` that optimizes using stochastic gradient descent. This way we have a solver native to DART instead of _requiring_ a third party library. The `GradientDescentSolver` is what is used by default in the InverseKinematics modules.  The SNOPT extension is definitely clobbered right now. Tomorrow I'll try to take a pass at it and attempt to make it functional  but since I don't have access to SNOPT it probably still won't work even after my fix attempts  so I'll need someone with SNOPT access to get it fully functional. ### Atlas Puppet  A good summary of this pull request can be found in a single app: `osgAtlasPuppet`  which you can find in `osgDart/examples/osgAtlasPuppet.cpp`. The app lets you puppeteer an Atlas by clicking and dragging. You can see Atlas's support polygon and watch it try to solve its balance constraint.  Here's a screenshot from the app: ![atlas puppet](http://i.imgur.com/Kr7eTJ0.png)  The green polygon is its support polygon  the blue sphere is its center of mass (projected onto the support polygon)  and the green sphere is the centroid of the support polygon. You can also turn on interactive targets for more precise control over the end effectors: ![atlas leaning](http://i.imgur.com/rlypFun.png)  You can even toggle whether each foot can be used as a support polygon  and then have it balance on one leg: ![atlas one-leg](http://i.imgur.com/f9XAoj0.png) 
dartsim/dart,500,2015-09-20T03:12:34Z,2015-09-28T06:30:15Z,True,2015-09-28T06:30:15Z,8c3aa8304bc9e8787fb0575ec724fd7fab71703f,4,5,b680e9605994af92003d720ed20bfc07aecacabf cb245b52905447ea69eef3cc463731890b04c0ac ae3e01200ffaef230f15e8a492c27ceadb010648 2fb33b2a26fc5fe715c0b84a5b53122a249746d6 948c964aea3aa51d64a24a184921cb01df6db3cb,,Dirtying Jacobian update flags whenever the parent transform is changed Release 5 0 patch,This is a bug fix and regression test for release-5.0 which fixes issue #499.  Thanks to Nathan Ratliff for bringing this issue to our attention! 
dartsim/dart,501,2015-09-20T03:13:45Z,2015-09-28T06:41:05Z,True,2015-09-28T06:41:05Z,840f5bd781e405d51d07c411107ee5eaf613a0a7,4,5,b680e9605994af92003d720ed20bfc07aecacabf cb245b52905447ea69eef3cc463731890b04c0ac ae3e01200ffaef230f15e8a492c27ceadb010648 2fb33b2a26fc5fe715c0b84a5b53122a249746d6 948c964aea3aa51d64a24a184921cb01df6db3cb,,Dirtying Jacobian update flags whenever the parent transform is changed master patch,Same as #500 but targeted for the master branch. 
dartsim/dart,497,2015-09-01T23:34:53Z,2015-09-06T02:12:45Z,True,2015-09-06T02:12:45Z,1d9ee7704db7755c05b813b65eb050afca6c837d,6,5,457f3daf9372baefe3d9cf9bab6db8806eb1370c d1ee4e15c0afbc45451387e7f4995e3c3d695deb 84dcf20acf8019808588092828a13d84c9f765a0 17d6082eba11849adecf617df29ed828eb456dd6 d49311c42297d29cd87312bef81d016d1eb91c94,,Enabling proper URI resolution for World URDF parsing,The changes that were made to allow for correct URI resolution had an unintended side effect of breaking the relative path resolution for URDF files that represent an entire World (as opposed to the standard use of a URDF file  which is to represent an individual robot).  This pull request fixes this issue and allows World URDF files to correctly resolve relative paths. 
dartsim/dart,507,2015-09-29T16:08:12Z,2015-09-29T16:10:35Z,True,2015-09-29T16:10:35Z,2a77ecbeccf192f332325734700785fe503bf2c5,2,1,7fbe27b5329bbc1914e866f4847301cf3c6251e8,,Give default Frame World parameters to setTransform functions,I thought it would be good to default the `relativeTo` parameters for the `setTransform` functions of `SimpleFrame` and `FreeJoint`. 
dartsim/dart,514,2015-10-05T16:04:40Z,2015-10-05T18:17:19Z,True,2015-10-05T18:17:19Z,730447622495b61e226c0a1d3338a892461c30b2,2,1,9fb7d0c0716e54b2582397f23ab333c37a151993,,Enable compiler optimization by using final keyword for Jacobian functions,We can devirtualize the Jacobian function calls for `BodyNode` and `EndEffector` by using the `final` keyword on their Jacobian function implementations. 
dartsim/dart,523,2015-10-15T09:34:19Z,2015-10-22T13:12:15Z,True,2015-10-22T13:12:15Z,1e188d4a18238f4168fa5e51e4327a6f4a4f614a,1,1,0402e37f0fe7e2186e322e074014d3c46407be14,,package xml depend on bullet,DART is using bullet for collision detection  but bullet wasn't listed in the package.xml file. 
dartsim/dart,300,2015-01-15T20:30:03Z,2015-07-27T04:56:13Z,False,none,477d58746ba8fd44030f7a62e4796e650659d4ce,6,17,1fa6a485666299b8135a3dbff71411acf5890396 dc1c0afe5b7926c11aa5a44466dac0f062133b47 3b12680be1b5474c39d8a8420bd295d7a101caab d49461012686c9d4f3e56f48c271370283c399a8 e813224c0381d72c61d8e0ff534610e0e6c8196d 784666627a0365c90d2d0a90de2e2fbabd1d0d35 b693c639f87bcf207701b14766b65ae3e9c2e777 51f6fddfc530088e51a7ef9b78a965ac7a4a6a41 203d72963ca92d0bdfcdb16dc5509e6a3d8727bd 724f993f388e8624c999c4e0b5983765a605aaf1 90bc74824091f18a1cb546434a04d4221c26318e 6339332f01f62164c188e31a0e59d34243025251 9bd18b2483fc49674c8208837d752b1554896c7d 4804a5a28dc6522fd119b788918b306b5325fe9a af83472bf5caaa7debc46ee6f686b0e9da3445ff 53bc6157b4b0460390bcaec8a990f4be77e7c0ec 025e43c3cd2d07fc97c0a1ea0c98855d3220a037,comp: math / optimizers,BSpline class,This pull request adds `BSpline` class  which is a wrapper class of `Eigen::Spline`. `BSpline` provides essential interfaces such as modifiers of knots and control points that `Eigen:Spline` doesn't provide itself. 
dartsim/dart,557,2015-11-16T20:15:42Z,2015-11-20T03:57:02Z,True,2015-11-20T03:57:02Z,fea6016ef0ab6ff75091fc1d902ef9a4433878b1,7,6,105a0735aeb5b2609d960d38ab3df7cef6fd5df6 fa37f1c68066733e5b35828032b4589620dc5145 934448c56d41fde1c1202bae8971b71e8dad1370 e5aed46d5f17119188c52fa6a3708d3b2238519c cba5ffb8cc23b132e5b4e5e4ff1c2c6d96719a32 bc57bc26ef04129f8f878e1e7eb55b524dacfad2,,Improvements to ReferentialSkeleton,This pull request is in response to issues #548 and #556. This fixes the issue where BodyNodes with zero-dof parent Joints will be left out of ReferentialSkeletons  and it allows users to add and remove BodyNodes and DegreesOfFreedom from Groups freely (i.e. without any coupling between BodyNodes and their parent DegreesOfFreedom).  However  in the current implementation there is still a 1-to-1 correspondence between BodyNodes and Joints  even though BodyNodes are decoupled from DegreesOfFreedom. What this means is that `ReferentialSkeleton::getJoint(i)` is always equivalent to `ReferentialSkeleton::getBodyNode(i)->getParentJoint()`. This is despite the fact that there is no coupling between `ReferentialSkeleton::getBodyNode(~)` and `ReferentialSkeleton::getDof(~)`.  So I before this pull request can be considered finished  I'd like to pose the question: Should `getBodyNode(~)` be decoupled from `getJoint(~)` for `ReferentialSkeleton`s  or is the current setup okay as it is?  I should also note that this pull request introduces a few changes to the behavior of the API of the `Group` class as a consequence of the decoupling. I hope that this does not result in any headaches for the existing users of `Group`. 
dartsim/dart,508,2015-09-29T17:58:25Z,2015-09-30T02:10:32Z,False,none,9c1c08c5fb7df09c265a6eb42f6495b9856a05c8,1,1,10eb09ec2e8ea2b9f812b608daa2992a759a8393,,Bring back declaration of urdf parsePose,It seems that the Windows versions of the urdfdom headers are not declaring the function `urdf::parsePose`  as reported by @jturner65 and as seen in the Appveyor CI tests.  This pull request brings back the declaration. 
dartsim/dart,558,2015-11-16T21:32:25Z,2015-11-20T03:55:29Z,True,2015-11-20T03:55:29Z,f89f821561d8b7b1c7a4f7db4293bf1f0baa9c0d,12,5,71b04561554f3ddfe8241d8e269759db12965490 1a5356dffb9b46b4deade850c903c7d4b0d29369 4dfe4b5735f171cb11ed3ba8919ecbb54df77ee0 f1808c8c2024c5c28d92cd98f7990ae5709c0666 4ceafe1f94a0b4c0f4ecff697c367481e6ee76e3,,Fix missing definitions for various functions,This pull request fixes the missing definition issue brought up in #555. Most of the fixes are just removing the declarations of the functions whose definitions were missing. 
dartsim/dart,531,2015-10-19T03:43:57Z,2016-01-31T02:28:19Z,True,2016-01-31T02:28:19Z,2b62d7b76106c7865463a1347843394d054d3b9d,104,117,eeb6221007e84f3ffe44526eb3552029eee6b40f 3b35ee6ea92d5f6e83783cfece708aa2a3004ee8 87b31668acd465ff2249f044db7fb412e42bd7f2 0002f9414f8c75ba262dd24e57868df1d188fbc4 dac3ae06fd8b4ec25e274a29acec7ed20436c00b 2e6b5c5b396d352f949ab199b0f7c277955f1be1 3a00af8596b2585136469292b220403f31d38bec 29a11c03b4d4c53c7cb7fd819a2d4dea1c9ecc03 40f3fd5a7ec81cfb3c749e21e6df2ee1357d5935 9ea14a6f4cd35829fa316a76dd30f67f20d5c999 e20743d3eb072c249eed63b5ac4168c6ce12d4a9 84170f28f16d63795240c7afe9df91d06ac78458 cbde581a294ff2fefe3847b6849b7c3f12bed671 a1edd2149d77ac450b4450df9bd0788b81162ef8 878c9785ee84e5e407b571eb822f9bed4f46411b d9da5e9d6bcc2e280a7771314a9bdee1f695e28e cf511abbca3bd79413ca5a75315e6ba7397e997f 839ea29a4d2c1dcf5591f20f81db145b8126c8e8 f9ed75817b8d4b229206966838092a1602a926a2 b17d0a0999718b5037901cd9caa581725a62037d 468002e37ae6aee5e60c173b317b80b4fce0487c 7137d081f3dd8acd3f68713e0f9f53ed81578c87 a3d30defdf0ef122770120c1f7af5210c5f69213 4979c59d33ece58774cb962e2c8ae0395b3a015f d01178f4143b1228964449ab3a6e00926ff0b549 5211a7d433434eb43afcfdab74fbe8e53feeaf44 d58690cc09b2df3e8b79014bae329609cfb04b32 e59beb3c72d0f9c78dd2b47275b598ba446ea372 61f06c85b8ae23fb80c3c3d9d21dbbf0b298e1c5 86c976cb6164cbf57a66d9be3eeeebb29a572489 521891c2c1aee706f08411bd15cd592832b10010 a66fc66887dee14bf0e58aee5ee89834d24e8f51 e7f62492d60b29ddfb0fcae03b0f928c85f2a86e 62430bd042ffaf039ce8230765b903e71d2fc7ba 4134152834c3f17e323f7b0f3d9a0d8e178b2ff9 52ad9e5940ab86ec4eb2dc47ba67d106f51b5bd1 77e9b9c5f0980af3cb9d65844ff6b03b4fec9479 7a6aa44c0b586ef492afaa926d818aacc03dc562 00e5ec3c8c96d074310b42699271c3cf44157d86 6c46071321d60233fad35f72e11cf085cda9189b 06e39af2dcf703dc9bd5bb7bed303e744c77c12a 7da22af16463d367ea4ff303b462800803b16b56 4ef6be7ca37f601956ecdc4c40216898a3c77b2d 3c158456620698a7b2fdf146ad8adcfc211d93d7 418dc67e2996a39a2b649e12c4698e43ab3cbf0e cd0d25ec4ab902958d753d03ce6ced218fd4dfb8 e98d37df41fdd550071bcc7d42391cf6690abb39 338d2c9708615abf1bb9fe2465127f3cd7fdd1e5 8425fc20364042d1cb5ea3b928125971839f5f3b 8b4d73f3c32b624286f76b63c2baef7cae269372 10d5bfad1e561b86518287dae6b89c5bb3ac5de6 1a79f4a0ce12692bcdba76c3c01f51ae50b984d7 1fcb734e5facd5c6962ec7997dc5b55207bd630f 72f593870063d00229a643d469b8df62d3bb38c7 1ba3f8d6cbe6c4539fce392851a39939521c13cb 1b080b1841fa1102265e4c45bfcd6e5cba476cd5 33d77d7494a477ec004763f2526cd4c33ebfce4f beaee494a5cc1d9894a04f03bb1d154f616562ea 8461bc172ca10853d964dca30633c04a99d4b80c 09a60df1e24fd804a97089b9f5c2cf26ecbb6788 38f2f3923db5fac37fb75e393fecbbfa59886853 0e8261c35eb780cd75a96715ed893f634173b6d6 3f390da72fd410357575d8965bfca610b1ea0a81 00310f31617ef3fabff260a808a342a7f3e40be9 2612a4965739503799455e3fa79b2b0ecb0058e9 1ff2d542151817f9c69cf9f0a3a2afb8e829e3d9 517bf8086d1d40c8d39a33fcc6b7a321d2adffc9 3955285d0c596843ae29859f80ea9e03ba29d6bd 54a14f5611353d6ee18818739368da3843f31ba3 1a505335cc248834f1caa991714afcdd79c8a49c 52dfb53e7ced20cde14e5b7873e60feb9ebb289b dedb9ce83abbbbd69a0fb374b9b05da8ce531b47 92108e9ad78340098503f0384d1730751cad27f7 df23eabeb118e8b452e15b38248c3029cab3eba8 85d8954c19d39df266c1a9f36870db481e74de73 8660680abad762f3c93b7e235643c08dc223dbef d711b28f686dc287edf1a9a13cf1a4936f5b4ec0 3ddcbff38e953f7a7608b9b1398400798ba4f481 c8d57beb8b2eebe900d156407e1dd6553e75e709 dd7aabf621a479be3ae70eed82c70666d64715f9 7b6d6ef9ba6a20d5ea85bd93a9f37e43ec346829 00075323696c0ab8db8a89207010ac151c15831a 86c548ef2286bcf448f181ea22553dd84799b4b3 5ad56d2b44f70efc4d03f3abb107450734eccfac 03e775781c0969a8551f4b2bf9390bb01d4df35b 5448d048ee240be81c1900ac73b469b6501e6f82 6bf9bf2ec3965ba4065f08da0f794eb20310ca43 0304a2486b223d61907f5829fa103c55cb39912a a182162bc14372436468e6dc37d0dac20d393dc5 92b4b01c1d4dfea691bb7c56b6c75a359db33fc8 d2c3b950cb52d0c0b0078768cedf5ff84c99d003 336c4c41dc5592a1b4a25842d7539a4aad5094b6 8f22d12b54137d37dcb76c30692d4a8a84ca2689 40eef30e94fb78520b8bcd3641d3e318ecb490cb e6b81f286c149b00df04e43f167ca5f4f6ada859 4dabe285f15e025c61f5905dd218fbea171cff53 c34aa86717addd928f685a2c6de27d388db1a359 ee20d57a2a274896720ee7d079677b3f4999c1dd 2716e74049ab6e06a9ed0d98e3c3dd0429b93beb 747dd5c3aed7887a9353739ea80b7c3c89b2adc4 efd04d7f0c4c2cd48457fd054b67f9582fffe553 4669f72f0c07facfb0d2c8fa0990ea25ed010a5a a343d3a89bbe1dd7313217bc585afe53d28caeae fadb2ec0181a889dfdd6ab4a76b1daf69fe9052b c07f7dbc72463dba9da7f1772ed73d350a4db127 4ec1be80348f1b89b2dc8d75d7aac62f9a71bdc9 2194f99d179487454434f2c60436ca2ce1c3798e b10b4a3b5de9aeaee4aa533c3ac249264ddfc29f bded5301b75e49760d9fcfc71522b54524becafd acfe8d2fe4e57f7ee1202f92b179c540242651c8 acf7573a1f888f4b91fed2d7ff9b76ca7e845e10 480422923fd9eb6e7b81c1a091ae745c52d78d63 b3294838e57ccb0f6f5fe6adeaa1a48c721b45eb b97d7f539c2793e2c33aed05fa64e83925cfbd0d 668d3343c2f694f5253b2c89d8ffad7a1a4b0694 585cf4c94b703a475ce97acaee2e17f358a37589 7b7a4b1e893d31f3ed4d27c33b0f72ff37454b6b,, Preliminary Nodes and Addons,### This is a preliminary pull request for facilitating review and discussion  _Current Status: Everything is implemented except the SoftBodyNode Addon. More unit tests should be created to ensure that everything works as expected._  This pull request brings a tremendous amount of additional functionality to the `Node` class and introduces the `Addon` class.  The `Node` class exists primarily to allow users to embed custom classes into the kinematic/dynamic structure of a Skeleton. `Node`s are objects that attach to `BodyNode`s  and they are allowed to contain a `State` structure and a `Properties` structure. `Node`s are also cloneable. The State of a Node will be saved when the State of its Skeleton is saved  and same for the Node's Properties. There is no limit to how many instances of a single Node type you can attach to a single BodyNode.  The `Addon` class allows the user to embed extra data into any class that inherits `common::AddonManager`. An `Addon` can contain `State` and/or `Properties`  and Addons are cloneable. Unlike Nodes  you can only add a single instance of a particular Addon type to an AddonManager.  In order to deal with the huge amount of boilerplate code that is needed to produce Nodes and Addons  I took some creative liberties with CRTP and macro patterns. I think my CRTP implementations should be fairly good (even if they don't look very pretty)  but my use of macros could probably use some heavy critiquing.  I try not to use macros too much since I consider them a rather gross legacy of C  but they were the only way I could think of to keep the code reasonably DRY. I'm pretty sure we can't avoid using macros if we want DRYness  but I would be very open to any suggestions as far as improving the naming conventions or style that the macros are written with.  Note: This pull request already includes the changes of #530 
dartsim/dart,585,2016-01-12T19:33:21Z,2016-01-13T17:25:48Z,True,2016-01-13T17:25:48Z,e6f0c75ec95a3aba78a634b24729a996ed27e552,3,1,ec269b5f21425950ecf7c6018ea0f7d41164c889,,Fixed segmentation fault for null meshes,I found that there is a risk of segmentation fault for meshes that are not immediately initialized. It occurs when the Mesh::_updateBoundingBoxDim function is called. This pull request fixes this issue  and adds some more initialization for `ArrowShape`. 
dartsim/dart,577,2015-12-29T19:42:32Z,2016-01-03T19:25:07Z,True,2016-01-03T19:25:07Z,32dcaa8f89412c47828abb9f9a8cdf2b03cef8e1,3,3,e6ae75b4f7c2d3c41b0340864a433578665381c3 51f23e0c2b9388dcdcb52a95e4bb6e11190e88d9 99491af6292e22ff8752ee40a4ab797e8c5b0e90,,Fix World Concurrency,This pull request is meant to fix the segmentation fault reported in issue #576 . I managed to create a unittest which reliably triggered a race condition which I hope corresponds to the race condition reported in #576. 
dartsim/dart,553,2015-11-10T18:01:21Z,2015-12-05T07:51:46Z,True,2015-12-05T07:51:46Z,d40274ee557436318822ec35024028f1b6bd833d,1,2,1a750fd6665c95566a6fd1392594c63d8bbce061 95d019c61db1edf9ac07c6999a21697dd1c3b996,,Improved wording of the cmake warning messages for ASSIMP,I felt that the wording of the cmake warning messages for ASSIMP might be difficult to understand  so I attempted to improve their clarity a bit. 
dartsim/dart,584,2016-01-12T18:58:53Z,2016-01-13T17:21:54Z,True,2016-01-13T17:21:54Z,093904ca6c9f6aa2ba130bec1f5eef0e13170a4a,19,1,2305827c413f602dfd46bcc041d6deefff5cc2e2,,Updating the constraint namespace to C 11,This change is motivated by issue #583 where it was found that the `ConstraintSolver` class is leaking memory. Frequent deletion and creation of `World` objects can dramatically exacerbate the issue. By updating to use C++11 smart pointers  we should be able to eliminate these leaks. 
dartsim/dart,538,2015-10-25T03:51:49Z,2015-10-25T22:01:41Z,True,2015-10-25T22:01:41Z,012cb5ce6fcf4e970e2d31fbd882ba7a988e2dbc,12,2,4de3375232af021b5372ceb0711a44ffd00670fa 4dd49d40b1e4e49e031a468e48472053e9f73d10,,Delete copy constructors for non copyable classes round 2 ,Some invalid copy constructors were neglected with the last pull request  so this pull request deletes more of them. 
dartsim/dart,537,2015-10-25T03:51:34Z,2015-10-25T03:52:39Z,False,none,1086665b067c870118cedbe9cc8c1866901fa8d3,12,1,4de3375232af021b5372ceb0711a44ffd00670fa,,Delete copy constructors for non copyable classes round 2 Patch for 5 1,Some invalid copy constructors were neglected with the last pull request  so this pull request deletes more of them. 
dartsim/dart,539,2015-10-25T03:53:31Z,2015-10-25T22:01:35Z,True,2015-10-25T22:01:35Z,c8887b78ea0a7c46885e77a21dcaf0216282df7b,12,1,4de3375232af021b5372ceb0711a44ffd00670fa,,Delete copy constructors for non copyable classes round 2 Patch for 5 1,Same as #538   but it's a patch for 5.1. 
dartsim/dart,600,2016-01-31T14:57:33Z,2016-02-02T12:40:25Z,True,2016-02-02T12:40:25Z,7e2d3d9c145247779d163e85921c7cb67b686799,48,2,79ae728381045a04ef0f6e8bfc642b3c823819fe 76047c88c351f00b330a1a53f429b93a3bcd040d,,Add gcc warning flag Wextra,This pull requeste adds gcc warning flag [-Wextra that enables extra warning options that are not enabled by -Wall](https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html). Also  the warning generated by adding the flag are suppressed. 
dartsim/dart,602,2016-02-01T03:58:10Z,2016-02-02T12:41:02Z,True,2016-02-02T12:41:02Z,9d9fa8a46b42abfba3d3d912dc9c3513c463eebe,2,2,120200d427324a9a937509261f66805d79567f95 e93b0e5246dd5f7f23be9ce6c411f3b99d2a8e09,,Improve VSK parser with extensions,This pull request updates VskParser for following extentions: - `<Shape>` tag to change the shape of the character - `DENSITY` properties to `<Skeleton>` tag - `MASS` properties to `<Segment>` tag - an option to remove the redundant _end_ segments.  The original work was done by @sehoonha . 
dartsim/dart,606,2016-02-10T13:15:34Z,2016-02-13T15:11:23Z,True,2016-02-13T15:11:23Z,09739de3f0d907181d1502fea32b5e269685373d,8,2,6404dda64b2005c032ed5234d6723490c87feb97 e4b8aa2d78eadb2e61e306dbbd7ad507fa0c6906,,Fix memory alignment in loading meshes,This pull request addresses the memory alignment issue with Eigen object in loading meshes  which was reported by @jturner65 in #599. 
dartsim/dart,603,2016-02-02T05:50:50Z,2016-02-23T02:49:58Z,True,2016-02-23T02:49:58Z,64391bb6c25888f936e538e1b16fea4ff5be396d,3,3,82469b7a95f534e29c383891ac99c5d0f62bc5a7 10d14d56ac5bb5d5a9439a67d24b23a85003f194 142b3aad4f1023c78595fd7955ffc8ce16e62d0e,,Added namespace scope definitions for constexpr static members,This is necessary to ODR-use those member variables. See [this StackOverflow post](http://stackoverflow.com/a/14396189/111426) for an explanation.  I honestly think this is quite bizarre - I never knew this was necessary for template classes. However  it did resolve my linking problems. :smile:  
dartsim/dart,616,2016-02-22T21:17:54Z,2016-02-23T22:02:26Z,True,2016-02-23T22:02:26Z,e035ee084c013cbecd042c6cfc99fd9cf6584a0a,3,3,f59af76e8bd159cfe0b4eaf511e83af7fd55d7f8 d0ca1074b13b3cab2a54baca8de934f00369a1ef c6679599842ec10b791c1d19a8b6dfffca170171,,Made ConstraintSolver obey C 11 ownership conventions,`constraint::ConstraintSolver` takes ownership of the `setCollisionDetector` passed in to `setCollisionDetector`. This is not clear from the API because the function accepts a raw pointer. This leads to a SEGFAULT if you do not expect `ConstraintSolver` to delete your `CollisionDetector`.  I modified `setCollisionDetector` to take an `unique_ptr` to make the ownership transfer explicit. I also switched to storing the `LCPSolver` in a `unique_ptr` to remove the other manual `delete` from the `ConstraintSolver` destructor. 
dartsim/dart,617,2016-02-22T21:34:15Z,2016-02-23T22:02:29Z,True,2016-02-23T22:02:29Z,82a270e9769f69d0e93cd15dd52c3ddb57457781,5,1,55e4dcfb55fab40e476336300898cb080e0a7f3e,,Added missing override specifiers on draw methods,This fixes a bunch of `-Winconsistent-missing-override` warnings in Clang 3.7. 
dartsim/dart,621,2016-02-23T02:56:32Z,2016-02-23T22:02:34Z,True,2016-02-23T22:02:34Z,763c18143d58849f336012426a69449bf9e46ad4,2,1,119c807a6d201062d85b8a34708410b6c0fd6b40,,Fixed initialization of position and velocity,The position and velocity of freshly-constructed `Joint`s was being set to zero instead of  respectively `mInitialPosition` and `mInitialVelocity`. These values would only be applied if the user manually calls `resetPosition()` and `resetVelocity()`.  This pull request modifies the `SingleDofJoint` and `MultiDofJoint` constructors to use the correct values for initialization. I believe all other joints (except `WeldJoint`  which has no DOFs) inherit from these base classes  so we don't need to make any other changes. 
dartsim/dart,530,2015-10-19T03:30:09Z,2015-11-11T03:25:29Z,True,2015-11-11T03:25:29Z,b76e9d7dbc4b756222b59680c690b93c70a7822d,52,44,c75fa6ec6f8a81a4904251ab20a97bbe310a5118 f72650380d1a28cba19b2bb569f6997b26666e41 e704e5c05151b9c5477b3bc9cd9545b6c15cf9b4 ffa522fd324cac2b9215e4f22d24b9bece9ab296 d04c1ac1fd3fcd1a651e07c9d7c61ae2c8506918 d0a16f1d7580fa0aa5e05e8e12a4351d7402bfd7 c4e2ae1e83a7f9fa814adc2078a0054c8af0be3e 353a9a80266fa0d983b8892f79d6db7d502c5d6c 773a76db08294fa6ff66256127f4f0005fc19abb d9a6c3ce35b7bdb75b931614e1420058189b1cad e7958a9b6aea2060b687f70bc8275b29d85babf9 2190f7bcb7640c768d38ca19ba04c6871ef5686f 4317f800bf0edaf1a8b0d4020a5fc96d594ac8e6 3430bded4ec89520843d4fe0594dc5f5655d9fd5 1cc0c2df0f318990394233c7cd6f5cef67db8fe8 b635aff0aee4c67340938aa7f45902784b585377 7527a7b095dbad972c8e8c2c7715acfe917ed1a3 4006db3f0c669b53b541f0e9506e2a24fa0b7850 dc3aae571b84db722a40aa191c87c8d3011ccf41 34a404f7c3c965f742ee2f60e7b90478a97b6b94 6a7d18d1fbd0625b7e2ed7cbaac8f23b7ae9cd83 b6259bdfa01e386aaacb336afc3e93735eeb10e9 0b4b00cfed444c42ac0c17c38ac3413ea773f6db 6c3f112649496d8bf163c290f3dc276f55af68da 29f737a6eb9a3265e76c06ab0efce0f94a35affd f18d30f9c8de7aa2a2e2ace06939afd820b0d508 5058e70ca021280f5c224c859632eb7cc7cf5fe7 0ff0c46f8874115480a9b704310891c6b96c3a2f 07d05383c93b77f5d8d4375c3d59389355783792 ed2cba11b4600a6499001734993553009ff9639e 29e65d1a65b452a20ffee6f8cbe6d19482cba0a4 085dee2a1045e70a96fcce7fc15af6225515d792 7a7b543a970a3d9736187ef6c2b4268ce6cf3155 dedb36fec4bb946a7f3c74e75413e8638542da49 8ebd23d97d7f6eb9259ea58ef2f3db5fc96cff5c c64f140d7262165602ecebf67cfbe541eb550ac3 b9e534c29f7d50aaacb61843ac03d61da79ac873 16adfa1a396668dbaf1de49b62ff37c25b0156ec 5c5c5afb603e07a0e173a6e231c9a9183eed4c3f a5eda7ea4188337041c8329a1d019a1a0a5f618e 1048a0657ca5a60272edc40c96037741e8a920fb b66b6794865783ae703fb2d1f0e2462750b6186f e65a82a167e21ab450ac5337b1e7350d494305d6 1e34ac5138fb9546a18bfd4fbd6206a22bd1085d,,API for utilizing Analytical IK,This pull request introduces an API for creating and utilizing analytical inverse kinematics modules into the IK framework that was created in #461 .  It should be noted that implementing an analytical IK solver for a particular robot is up to the user; the role of this API is to allow user-created analytical solvers to be plugged into the framework in an efficient and semantically meaningful way. 
dartsim/dart,628,2016-03-07T17:09:29Z,2016-03-07T19:40:08Z,True,2016-03-07T19:40:08Z,be5c3c76e29e0321972174c91a3b43aa1a076539,4,1,e691d14ac49cf7e1c6ce97400e170dc1fb19f88b,,Fix for issue 626,This fixes the ambiguous overload that was reported in #626 . 
dartsim/dart,623,2016-03-02T13:23:26Z,2016-03-03T15:06:31Z,True,2016-03-03T15:06:31Z,984084592566df8070333a73f81b7da355c5743f,1,4,f4912c85f78e4fc5b88d5c19e65178f15350f538 143b1e7960297052083e41d8fbe9cf8f5239fd3e 4813bb0730e3c0b5d928e43a3d3c7ac6f11ae084 7ca0af539658b64dc0f67e42468c45b318db9a30,,Create frames directory if not exists for screenshot,This fixes #395 thanks to @olzhas. 
dartsim/dart,630,2016-03-08T00:36:34Z,2016-03-16T16:30:12Z,True,2016-03-16T16:30:12Z,0db1b312f58e15e08acc47fd14c3ed0a053a5514,1,4,4837d19d95173b8e9ab35de77fd8ea4d968b465d e733d66b12d4baacbc8021f25ee11ace885d1033 c3f589d40b5afd2fe9a44f47cc33b1075cc35a2c cd3724a23a8eccd33bb879cf61a15025aafd6606,,DARTConfig relies on exported targets rather than find_library ,Referencing the recommendations here:  [https://cmake.org/Wiki/CMake/Tutorials/How_to_create_a_ProjectConfig.cmake_file](https://cmake.org/Wiki/CMake/Tutorials/How_to_create_a_ProjectConfig.cmake_file) and here: [https://cmake.org/pipermail/cmake/2011-June/045050.html](https://cmake.org/pipermail/cmake/2011-June/045050.html)  I changed the DARTConfig file to refer to the autogenerated targets in  DARTTargets.cmake  rather than searching for them with find_library.  This resolves issue #629 on my machine. An updated test project is attached. [CMakeLists.txt](https://github.com/dartsim/dart/files/162348/CMakeLists.txt) [test.txt](https://github.com/dartsim/dart/files/162349/test.txt) 
dartsim/dart,607,2016-02-10T20:47:36Z,2016-03-18T00:38:30Z,True,2016-03-18T00:38:30Z,cca2e298ad0c265cabd042a8bd7902fc4985b912,28,3,188c387f933a9907047a829653ed2adbb252356f f961cfab90c4dbc7d46c73d777397939404a81e3 091266d0d8e007053fbdf8a749786f823b595c74,,Changing authority of Optional Required Addons,In the current implementation of "optionality" for Addons  it is an Addon that decides for itself whether it is optional for a given Manager type. This is semantically backwards  since the Manager owns the Addon and should therefore have authority over whether the Addon is considered optional or required.  This pull request reverses this relationship. Now a Manager can specify which Addons are required for it in a similar fashion to how Addons can be specialized for it. In fact  declaring an Addon as "required" will also automatically specialize the Addon for that Manager. 
dartsim/dart,632,2016-03-17T15:34:37Z,2016-03-18T03:23:08Z,True,2016-03-18T03:23:08Z,a092f5219fa13ce20ba7dcb74e9b44c6769ba01c,9,3,b26be0822fb0e712620877ff46ecbfffc27b72b7 246a6a57cdfa7ac3a2c8ca7075c605d9e00632a2 7d39ea44333c736372b21d69af8f4cb24cf4c100,,Code coverage test,This pull request adds code coverage testing for DART. [`coveralls`](https://coveralls.io/) is used to show the results on the website with nice charts and tables. External cmake scripts ([`coveralls-cmake`](https://github.com/JoakimSoderberg/coveralls-cmake)) are imported to generate and upload coverage data to `coveralls`. 
dartsim/dart,638,2016-03-18T17:03:42Z,2016-03-18T18:35:41Z,True,2016-03-18T18:35:41Z,e4539849db033ec21c7885a9f150525f0decd296,1,1,16dc3bbc0b18323336bceffc81e6f36f9496960e,,Fix invalid coveralls report file generation with multiline commit message,This is confirmed by the upstream. [Issue](https://github.com/JoakimSoderberg/coveralls-cmake/issues/12) and [PR](https://github.com/JoakimSoderberg/coveralls-cmake/pull/13). 
dartsim/dart,634,2016-03-17T20:06:56Z,2016-03-20T14:57:39Z,True,2016-03-20T14:57:39Z,34ea2f5feb52175550a06496df8366e71623d30a,1,2,031fad654c8b6195deeaff34c69ce99496511658 1e591968d8857564c1e22dcf96ae300ac26a5fae,,Fixed DantzigLCPSolver when getTotalDimension 0,The code previously checked for `getNumConstraints() == 0`  but not `getTotalDimension() == 0`. This caused the LCP solver to access invalid memory if constraints were present  but all constraints had `getDimension() == 0`. I ran into this using a `ServoJointConstraint` in a completely empty environment.  Thanks @jslee02 for helping me debug this. 
dartsim/dart,635,2016-03-17T20:19:06Z,2016-03-20T15:02:44Z,True,2016-03-20T15:02:44Z,b6b18de53eecf13ca274259b9838ff94decc2a2a,3,1,524d67c48cb1c1c28c95c16fcd5e65c4ddae09cf,,Use FCLCollisionDetector by default if version 0 4 is available,DART currently uses `FCLMeshCollisionDetector` by default because FCL < 0.4 returns incorrect contact points for some primitive-primitive collision checks. This pull request changes the behavior in two ways: 1. Prints a warning about the bug if CMake detects an old version of FCL. 2. Uses `FCLCollisionDetector`  instead of `FCLMeshCollisionDetector`  if a new version if FCL is found. 
dartsim/dart,636,2016-03-17T20:28:23Z,2016-03-20T15:08:29Z,True,2016-03-20T15:08:29Z,fe13724b2e124bf675391861d7d256703fc9ee29,1,1,ca10a406bd52543a908cbda83e30b0f75f8490d2,,Removed version check for Bullet ,This fixes #625 by removing the test for a Bullet version. This is important because Ubuntu 14.04 ships with Bullet 2.81  which fails the version check for Bullet 2.82 in the current DART `master`.  I would prefer to remove the check entirely  instead of simply lowering to Bullet 2.81  because we have no evidence to believe that the interface will not work on earlier versions of Bullet. We can re-introduce a version check if we find a compelling reason to do so (e.g. DART fails to build against very old versions).  I also removed the logic that uses `pkg-config` on `UNIX` systems. The `find_package` command works fine for me on Linux and was unable to find a justification for these gymnastics in the `git` history.. Does anyone know why this check was introduced? 
dartsim/dart,639,2016-03-20T16:24:59Z,2016-03-21T19:36:48Z,True,2016-03-21T19:36:48Z,5caf7b4bc1f4d18a43f82d71516e724d3f84ecb3,16,3,c5541eeb4d3cae8be532dfc3baa6bb6d2d8f41d1 9dc9430d98c64a819853bf2eac4f6ec6b6eead5d 263903f3dd98c71a7a2bc7176b9f6faf4c5f0b13,,Add make_unique function omitted from C 11,This pull request adds `make_unique` function as suggested in #633 . 
dartsim/dart,633,2016-03-17T19:11:10Z,2016-03-21T19:37:49Z,True,2016-03-21T19:37:49Z,8fc3c03bb931e99f0101c926771236f19e6550bc,2,2,363feed12778e525e1c2758df197cb67b31032eb cd667d6a09e2522dbeb02a7d497aa951858016d1,,Added get setLCPSolver functions to ConstraintSolver,There is currently no way to use anything other than the default LCP solver in `ConstraintSolver`. This pull request adds functions that parallel the `get/setCollisionDetector` for the `LCPSolver`. 
dartsim/dart,640,2016-03-20T17:08:57Z,2016-03-24T01:04:18Z,True,2016-03-24T01:04:18Z,cb149b2739fc64511520cd1d02ca5ae959d48fe6,2,2,c7c03b94e480d54c6be3dde74b5770b68cdb18cd 3204328f1f6a8ecdebde6820bc8ad347e8adb75f,,Fix FCL version check logic in the main CMakeLists txt,This pull request fixes the FCL version check logic that was introduced by #635. 
dartsim/dart,637,2016-03-17T20:56:26Z,2016-03-24T19:49:58Z,True,2016-03-24T19:49:58Z,4e67f0df444cca487dc371017f188be54a168d23,3,1,07fa098e3273427a8044d6576f43bd59e34d1dd9,,Fixed find_package DART on optimizer components,Merging #630 uncovered some latent issues in DART's CMake configuration. The optional `dart::optimizer` components (bindings for `nlopt`  `ipopt`  and `snopt`) were not being added to the `DARTTargets` group and  thus  were not included in `DARTTargets.cmake`. This caused finding those components  e.g. via `find_package(DART COMPONENTS nlopt)`  to fail even if they were built.  I thought the same issue would be present with `FCLCollisionDetector` and `BulletCollisionDetector`  but it appears that all of the available collision detectors are being linked into `dart.so`. There is dead code in those `CMakeLists.txt` file that indicates this was not always the case.  I found this surprising because merging all of these into one library seems undesirable. Was this an intentional change? 
dartsim/dart,506,2015-09-28T13:48:20Z,2015-09-29T03:57:09Z,True,2015-09-29T03:57:09Z,19371efc34879b6491e88489fb0e5f68927ffc25,45,33,cfee556c6faad4f85e77c500fe50afda55101676 6d47a924f1ecc22b6e50954926d08bd9c63e6574 5e6440cf942f33608e2f697626c3237eec9e2d22 8aa6a5f324648ef3b8ec8d341df262bf82543e96 71de290abb8aca0fe1e84323c315ec0052e6b1e0 016117f68805d073bdd9b8b7d7ebe7fd6b77a9fa 2ab3080ee0501732af92ad6fb4701e8548dc4adb 44a06f772d18ad4a4ab75a415fb31549a92b0573 2997c9f53dbb753bf04661a99a4d70b7afdcb401 9b33c5119fcc23ac0c37c3db212619663b5477b2 50e8788b9a987ffd2cdeb5a7d3d2ee8963a863db 6d6a81887e7c1f9c7ff601765325835592f18193 9b45d90d0fb77065b02e64f8df1b05d693a992af ddfbed8a2d68569a041cce8d0a60e1b4a7cf27f5 2683e16950c7fb511d8759360a75d77b60a45e0d 6d093a647b800045e0f1ad24d2de3bc7d967723b bdb1d458914a19547245204f5f55ba03d8ee5ea9 38da51e888a977f4020d5afb7ef47c476c9ba5c7 7200dbeb2917c1406c94bf8d55e2c8dcd3467af5 ff28db1ab4c222dcf7712b809666222ba14b8576 0048e38697c362757169779e0f5ad1e8600dc92e bcd7e36ac7dcd3421a4a749a5b8b70fbadac8c49 e7dec700a985055b575fe121de9048332efebeb1 4180fdb5a018dcb691a9223308ec4ac930a6f43e 6f668af88794c4e006b8b6ded4100a4a4e23571b a24ce0248b9ba75fe6b5809947ef6923870d8a6b 7ea9c8742e43e0beeec6129d9ee435ce5f2acc54 76b7a35eeccf858811d69da0541ec8ca5a400aa9 b975db2c3230bcb9dd423abfb9ba89300353bc01 41aeebde4fc5766f711ef80b3ab197fcee7a4b3a 97a623d1949eabc7e466b2de8c8057167b8c4949 026ce865040b597660fee83292b1094a16d73384 bd9342e29d348514bb7968c03e6363f3102437cc,,Feedback on 461,
dartsim/dart,608,2016-02-12T02:31:33Z,2016-03-18T05:42:49Z,True,2016-03-18T05:42:49Z,03baa745eb41a23707c305003757c02d63bd3339,161,52,07784f444c964ffe4f45635c89e6575de92dd36b 3e5a5fa43db764f2ea162fd182e9bdf968e8bee8 a03a354010a73df64517c0dd34e9b025a961baa7 6918b71182c541b2645147ab90934754063c0648 e22d8a1b770ed413c4043cf54d7af2ca9ed47f07 0dad52ce561600b508ee9826ece5817269eec4a8 b575f521f9a83b117760ac60e23db4d847e4dfca 01ddefd635b6d06b710334039809244bef102717 da334eb8fdd3d061398e41afcec8b92c054dba2a 426108151bcdf585756d7e9872d3e5addb758219 77914fa39b32fbea3e4c29361884f122785b82a2 2bc092cec78d0639dc9d31f16824f77ce07817c0 536f5e39166a0cd7abf8e03476b9f226475506ee afe3b9456e5365fb420399c3c4caa0078e641e4f 8de374743e1e915be60532fad43bd055c0c42261 6acf1553be790731da189d8ca8b9dea39788ae57 6ed5afae481e031586099d4240a014692847c23d 675b6d0aa1d64fd3b21e2f8b55cb0f4abdecd9c3 723399ffc58a67884e1c4be55e8676ff0131db10 65e8a467546ff5d220dbeaacb3d3ffcf76145d28 94335298d3345695c54a97b8a62501a201e25480 5a35ec196fa2a1c89adb96baa96be20d8580c389 ee3ad23b18901cc490c36aecc93860c4957a31bd e469db293781503a03f82c763eda6affd0253a8b 3ed100c6399861eec0c485cd4fe2dfe325a6146c 701d8a8d98ec50a5f9a69efcca5b6b9fa31ddd4f 4359057dc2e2083b05ddc3343e888191fb93b334 3b755dbda8333cddd59d1dcfe1e3462dc63053b8 a553448b323081e591109be6f3a1c08b66eb8ca9 ef86e8cddecdad8ae9e4b17fbc88586a317779b7 4c99fb8db164fe26894426d26413a8049074b930 6d529fd333d2660ccf9b9b5a862a5ee43e9b7f6e 602b50ce36bd5f382ffc2c5b3b985cf96cbff5e0 9dd12571bf89de7c4dc9a77078429d64b1982269 a76819977ff751b8334c7ddb52881697b8974e2d 3f7d8442a4dfede8b2b58058b2f5c88cd3d5f876 14c831f3a4472d8e0c307a561d9eca2a0c2135ca d34fc7fbfedea145e3addfe15bf2f18680b81e15 1e2b402c7545fcd5e8dbd3983337f4e6a903a986 d9cc6418057f80b88e29afaa467c6adbee3c38e5 43a29b339d009b9cdce1aaf4f019aa4d37426514 401449ea231e24b29fffe6b6ff76fd6c4f00f511 d53d3e468a820d0059a350ef737dd703678b7b00 0b55af376efd32990c29895c2f68ea1a6c859e82 edffff902a89f682e52e72a7728dcab41f85aa42 71858d0f5ca40d8f519ff276c8bbed0e1aa2635c 0b667e6967a8f4514265ae5e9baae333140c1549 0ccaaa121d95734ad2e6c7d9762a7f2d7cf985e7 410b68893e14102b94b5885d6acf6564d190bcf9 3cf2f2343c8ef667f3a4f9f06501a6c75ee45911 d643e52c2fd90e3dad37d07ea6968cba6daa4761 7dd0277e447740ad8193692c484156d50064287b,,ShapeFrame and ShapeNode,This is a work-in-progress pull request for implementing ShapeFrame/ShapeNode as discussed in #394. 
dartsim/dart,641,2016-03-20T17:39:43Z,2016-03-28T14:07:24Z,True,2016-03-28T14:07:24Z,6cdbe4e48876a3daffa7586f4587f92f7598e41e,8,1,60d7f683b94e77cacf74f19490e5e71f621fe372,,Use cmakedefine01 instead of cmakedefine,`cmakedefine` defines only when the cmake variable is set to true or 1 in cmake script  whereas `cmakedefine01` always defines either `#define VAR 1` or `#define VAR 0` depending on the variable. `cmakedefine` will go along with `#ifdef VAR`  and `cmakedefine01` will go along with `#if VAR`.  This might be arguable  but `#if VAR` seems to be more intuitive to use to me. I would like to know other's thoughts. 
dartsim/dart,646,2016-03-27T04:14:06Z,2016-03-28T14:06:08Z,True,2016-03-28T14:06:08Z,a3093063299f8aa90715dbea6888cfb2365b84b7,3,1,b0d1276173df3e504fa829fda26c2ed6b4ca3f81,,Suppress unused variables warnings in release mode,Building DART in release mode disables assertions. There are a few parameters in DART that are only used in assertions  so this generates `-Wunused-parameter` warnings. This pull request adds a `DART_UNUSED` that suppresses those warnings. See [this StackOverflow answer](http://stackoverflow.com/a/777359/111426) for more explanation. 
dartsim/dart,648,2016-03-28T17:26:10Z,2016-03-28T22:35:58Z,True,2016-03-28T22:35:58Z,d5ac451ffa2b9d92bd0e6ecbd9f8af1c8d8e6d11,1,1,4b2831bd1ea0b2fb932cb9ea0e428da4c918b8d3,,Needed to change ifdef to if,It seems like this was overlooked from pull request #641. This change was necessary for me to successfully compile. 
dartsim/dart,644,2016-03-24T02:17:54Z,2016-03-29T02:33:53Z,True,2016-03-29T02:33:53Z,11a9d9e832b34b013b0969f7f520f66155768cd9,9,3,a057c2809dfadabe57122d6d95fe22bfeaaca33d 72b20f4298b1e2ab2712e54bfdaa7b004b715265 ad93f3b2cbd643da429cd1f2683cfac75dc502f3,,Split tutorials examples and tests into separate targets,This pull request replaces the `DART_BUILD_UNITTESTS`  `DART_BUILD_EXAMPLES` and `DART_BUILD_TUTORIALS` CMake flags the `tests`  `examples`  and `tutorials` targets. These features are no longer built by default unless the user explicitly passes the corresponding target(s) to `make`.   The key advantage of this approach is that targets are specified at _build time_  whereas CMake flags are specified at _configure time_. These features are optional and take a long time to build  so I prefer having them disabled by default. It's currently awkward to do this because changing these settings requires re-running CMake with new `-D` flags and  possibly  deleting your `CMakeCache.txt` file.  With the new paradigm  this is as simple as running `make` during development and passing the `tests`  `examples`  or `tutorials` target when you want to try re-building that code. Note that you can still run `make all tests examples tutorials` to build everything at once.  I am not sure what @jslee02 and @mxgrey think of this change  so this pull request is mostly intended to start a discussion. 
dartsim/dart,650,2016-03-28T20:34:39Z,2016-03-29T04:01:58Z,True,2016-03-29T04:01:58Z,878d3a4de163ac5fceab16c20c2f1c66ec38d661,1,1,af3cfc2254a6548828e191ebd111d8837a47cba5,,Travis build test with Bullet,This should resolves #376. 
dartsim/dart,649,2016-03-28T17:33:10Z,2016-03-29T11:38:48Z,True,2016-03-29T11:38:48Z,836d16f1f18e24af2b2fd4b2f466c8396f50e1ec,3,3,4b2831bd1ea0b2fb932cb9ea0e428da4c918b8d3 85d95751ef5fb33cc89d12cf78a1243d9fd0198d 3743eebb4acbf7c104e5e773b3fe631290be7353,,Make a default argument for MultiDofJointAddon,This should fix issue #645  
dartsim/dart,655,2016-04-04T15:11:26Z,2016-04-04T23:14:38Z,True,2016-04-04T23:14:38Z,7c04754e70ae7db33cfd8f47066b32a685e491f7,7,6,e0828bf297d88b5fcad4534ca7d1c485f190f22e ed06d75a115a2c071a0cef49597b076c25d4f01a 8e354e0fd4a92c9464f0c1a8a1bde198fc45dcfb 6eea2596464723e5464c5f020565e1c24441a224 25979f4bd3542afc79345ae818d2d972aebceeed 2a8ee91c274b8e7310cc73b68e1313b82420e8fb,,Travis script polish,This PR (1) fixes the build order so that `coveralls` target is built after `tests` target and (2) polishes travis script by removing dead code and merging duplicate scripts which are the same in both of linux and osx. 
dartsim/dart,663,2016-04-12T19:09:42Z,2016-04-13T02:59:45Z,True,2016-04-13T02:59:45Z,9f1c6424e8b9ca1beb5f0cb9f8af7b04d8311ed8,2,2,a35fb396194facb92d4d3453508f875172ac4384 e29e10486116dd75be6e4ce319e8a36494c9b554,,Assign resource retriever when nullptr passed to SdfParser,This fixes SdfParser fails to load mesh files  which was reported by @sehoonha . 
dartsim/dart,631,2016-03-11T18:58:23Z,2016-04-13T16:11:11Z,True,2016-04-13T16:11:11Z,25e3a8b74f3419a26134c452ac8cfdcef782608a,81,79,37d59b8633ce6f4dbee0ed29a3875015a277cb0c 0b2da84a59207de7491fa3bc5ec31dfb00b01b43 a0b1305efa1fe15cc2edce236706d5f373ed8ed1 054fc149b4efd994e29779d34e929a90f8569d18 1d437c632ce6d5e9482e7dcc3cf2c28f6b7977eb 88d56abe9cf27becbd40a879b5d83ff4b68e1895 0c931ddd0aa7d7ea6eb6968d2efb8449b77ee98b 7adf6b8b14ee3b2f16715d6ca200e326626eb429 10397b0df5b8df73614853db7c8eacab6a00af5f 889ccf8c7f4573d7f9a5ba172eb972d02b93bc61 da625ecb9ed899bad4d47975e3b23844c25ecd73 c0b4dfec3b41c4bb40782e00c3c2bf1c30cc8c70 321e136d205d4d090812c03dbe78500b96c13b2c 634192f45e456e0ebfa653ea0e4dc8fefd1acc69 22fb8f85e020d230160b8bb214a53b477ed73fff d094bd74cecd59208c3c776355b9762f12e2069b e330676dfb74588ac9f173227e34ef367f931cf9 e22f4ce2b743801461704bf8e614a8388d470e3b 522b2a974ff822bb67303497e6a7381b2dd3705d 6004a1bb57a211d7c5cb21f318d886688086af65 87e17d99dfc49225ca9b84d0084aada8706d7536 ba69ba7bf2f2ad140e75446f961b9cae20f5718a 60bd53b4d61bec1f5e1a5d063c0f947069201832 d85b74bc574fc2bf65726a00c1c1f384fb566225 e93f921b111f99128880d9790823c8924a479be4 0de9993f1e37f83c17608ebf12c4901e55a9cd16 f3a89c7e57bb832aa6fc41dcbcbb22f322036c88 5039629a534e09885fd2dcb0b5993d12a61bfbf5 25cac6b46eff74176f946935104e6a9bf14695e1 5d803257cd6c8667fb35c295e57f7ceac922bfd9 161a396b5601c6f87c966760bbd4fc2e1d1fafae a6653d60657dcb80dcef7f756660442525355d8f f91a19079ecbbd0c0f46e59e4f2b2d95304b18b4 4bf1ec7cdb63ccd655a15da91ed312113e53d751 b935da178c867442bb403a8b95d8625c7b234bce 0be239c756b8c702f5b88df74176ed4752c899f0 c0d83266b840ad68cba9f1fd533a34397be8e849 12743da18fbf1e69ffdc1d048abaa574a21b0455 19fdc4b317697b596eb503da3a7a18db2b4ac80e a18f4ddfbd30b290b17e3a4d69ddd8acfc30d76f efc9699cd94722e07ca723f982d31908688432bf 0a265e6fe81ae5184c866588884e5b9295c84fdf 0888b9c8d349f24daa0439f8a7e5fd70d9ebfc0b ce6f5589c190a101c26073ce63c5b9df4b518eab 555d6ff0a009b124bd3d0bf8f3fc5ca2ebf0baf8 65c4d9669ec46f36f44e862f5666e58e8d111406 aac9ac904829636e8a3d190a22219a71a51188f5 54a2316657425572dccc3e590c254d3a7aa00480 5b89458cd812c2fa23877df0317b90c05fb6365e 4993f060adb7d7cb430e4e195bdde78d7c67f306 c3223828f0920fb137c235a777c80ec94c6f647a 123e87d1420debd42fa151de672edac62f8141a8 e6739511f3acec6c957a94e2698f94d8a8c366e5 40d9a382bc1467132984183ab885d29f6e4eddbe f52833517ee8bb541d0c061e37870c59ea5dd2a4 97c97362c1606cc507a2e0136b3272ce7ce37f33 3f4921190d9476d63458fd12e6e709e1e462264a 7a5863c18084e3b5e12a01877932a486458e2c0d 1c8e36fb61ee2e835bf8722035ef2c667f43ffbe 14d60cba5ab6b0f1b6f32064c62c9949efd760db 202ab75604c945ed5bbfb2395e768d191f34248f 1230a2d82db670ce38ef7d007b660919118912c1 b66ed5fd7fde27bd0fea7cea8ac1a93ed74ed112 517203503ff37c177409b23f72ce7fb8f6d82787 01c8e418e6e4107a62408de5e07046087e649dfd 8927ebb4d7a674353c292538b6c860b815439d0f df324db5758211c5441cd7d928f41f8e063bce0e 9070bc968c975b652ca019d45c52988137f97164 79604162976001c21ae7e98be80331905e84abe5 f36a12c3d21fdcbf79827abf79033ae08d9b02f6 5a1652bdf1d003a4260fd00c1341d36ff83e8838 540802aaa433890a365f2ad5c322124ad8f30d5a 67369481c6e54e73419a55a80a04483ac7ea0a5e 12ecc2f019045a5314cb2b61dab9d629a3e59c4c 538d1c26736e03e455c9cab559600eee66cc61b9 8ec2c2e1e171d870736a4406ef1a7a820588f06c 76b866323eeecc95d0d2426f96045eaae24b5ab0 6a16e8de7b594ccd0d1c9e945bda5e6abca3fd8c aa6c545d0e5bc8e44f1431b5e6b4f2ab721c072f,,CollisionGroup class and refactoring of CollisionDetector,This pull request introduces collision group feature with CollisionDetector refactoring.   An overview of the changes is: - `CollisionGroup` class is added. Collision detector used to containe collision objects in it and only could check collisions for the objects. So we couldn't be able to check collisions for arbitrary (distict) collision objects. `CollisionGroup` now plays the roll of collision object container  and collision detector can check collisions for object-object  object-group  and group-group. - `collision` is now only dependent on `Shape` class. So once we move `Shape` and the derived classes to `common` or `math` namespaces then `collision` would be completely independent on 'dynamics' namespace. - `FCLCollisionDetector` now takes the advantage of broad phase collision detectorion of FCL to avoid checking all pairs of objects. - Collision detector manages Shapes so that the collision detector doesn't create multiple collision detector specific collision object (e.g.  btGImpactMeshShape  fcl::BVHModel<OBBRSS>) per Shape.  This pull request is not completed yet. The major issue remained is the ownership between `CollisionDetector` and `CollisionObject`. I'm considering apply the same mechanism of the customized shared pointer `BodyNodePtr` by making it general to be able to be used for `CollisionObject`.  Note that this pull request includes the changes of #608 . 
dartsim/dart,651,2016-03-29T02:12:23Z,2016-04-13T21:50:57Z,True,2016-04-13T21:50:57Z,11a6145674b67ba7906350b2a0acece2c63cb3fa,51,10,063e552a7f384a7925ecae5649225a8e3c140e42 df3c1a7f4f1e028c0a6b0db378e178b412fa5f96 67d74ad4933cb9403950034ca59f823bd59fe494 f56dd2e353a3144e3703d7fe5a9ffa6cc145dbc5 9d055d4df21e5fdf267a6ce4c375c70efce66c8b f514069b8c0bf4e6293dc43cfd77e327dbc50f53 66812897f61dca773bf653bd8ee15f6496a6049a c63de2012e1d8e0bfa08fea22ac496c599652758 d544b19a23d8f252216d4d1cb48f289f97ff5ca9 8d174e656096a9d232d79622b42ac9fa4f72c84d,,Rename osgDart to dart gui osg,This is the first round for reorganizing DART packages with components as discussed in #477.  This pull request includes #631. See [this](https://github.com/dartsim/dart/compare/collision_group...packaging/osgdart) to see only the changes made after #631. 
dartsim/dart,658,2016-04-06T22:10:59Z,2016-04-14T00:00:09Z,True,2016-04-14T00:00:09Z,8c895a201c916ea34c6725c9c8522cd45052dba8,9,4,5c023f1613ff30b3042dd3d563fe78d4f276dd8f cc3891ffc4be7fc4397bd42b92442d1e8f4881cb 86c3194b80b3e1a1dafe2c8d110256ebf8458b28 b2fe43467e4ae7cb9219b227832584a562b835c2,,Fix World clone doesn t clone the collision detector,
dartsim/dart,667,2016-04-14T12:25:46Z,2016-04-14T12:56:18Z,True,2016-04-14T12:56:18Z,cb1a272debade203edf4d7c843552137535acfea,5,1,19d71b5739830e24e5387628b0e5f7c91aab79d1,,Removing OpenGL dep from main lib,I removed OpenGL (and renderer) libs/includes from main library (libdart) and moved them to gui library (lib-dart-gui). Also  I minor fix for installing properly the gui-osg include files.. 
dartsim/dart,668,2016-04-14T13:07:00Z,2016-04-14T18:14:27Z,True,2016-04-14T18:14:27Z,751304019ca20c493e1c93d3958fc2ef0229798b,6,1,fcb3fba29f532f0d7a5b28d71b091dfcfacef956,,Fixes collision problem,Fixes #666 issue. It's done quickly and dirty. So feel free to not accept or polish it. It's just that we are using this functionality and needed it asap  so I coded it and sharing it..  Many thanks.. 
dartsim/dart,670,2016-04-15T18:47:08Z,2016-04-16T00:07:55Z,True,2016-04-16T00:07:55Z,bb5ef56d0eda4c1207fbd6298bea42c0cbc12dae,16,6,5d0d9ffa34425a46c379022b0fcfea5d92219e09 88dadaaaa0b4e3a224730ef964d6790992089915 8b27d8267233cc5258630b88caaac4077360dcc1 0cf7037d66565496c6a66882ce3e3619304fe72f 7cfbb56a2d7270b731025e157c343be88cefcd2a 2eafa54a769aaf562bfdcd263a559425ac2628cf,,Adding collision sets to CollisionResult,This pull request addresses the discussion in PR #668 
dartsim/dart,652,2016-03-29T15:02:16Z,2016-04-16T04:29:09Z,True,2016-04-16T04:29:09Z,830b321b1d9089f4c22861346f164311e403a3eb,142,33,26497a0f8a7643797891e39c83112198f61385fe b259145e2701b7d369816fd9bdf19a9e9c978cb8 63a697c15009d04573cd56f31029ac718160f5a5 30ca7fea06303343a1ca3764774eb66da2ca7113 eb00773c2e1dc5d6d1610fe74594d634d8560ece bb31f964e1eea66f98770c3400099da86903e304 75ab087a3ce445d5a619b49ed2dd45c323546851 ecb5aff432d15ef3b838e7283895e63affcf71c4 1c4e7476bda80e81c8da0262f44883987eb9bf23 9d00105399f3b6be05025cedcc0a3ee5c953258c f767a9bb291da36e1938d45e27b23edd7d985440 19d71b5739830e24e5387628b0e5f7c91aab79d1 cb1a272debade203edf4d7c843552137535acfea fcb3fba29f532f0d7a5b28d71b091dfcfacef956 05846ae97dfd22f13586901fd5e94ff6b5cd4fe9 2782aae1015745476b722efd27e8e356579b5a3c c4ae8771462e2fc291030a5b630b5f1675ea34dd 4309abebec99c40e4163f0bc6871a87628b740e7 f084f493e328a1d9e107bb387c2b8c3c7bc1a17e eeaebb71f12477a1fbb931bbd12ce257bd7913fb 3d26c2af5bec9e9403fec9ddf4d86d93a0cdbc38 751304019ca20c493e1c93d3958fc2ef0229798b 46e9c03516f9bc71d60c7e066b0e02d82cf66277 d22b556e954354e2dc7fc85e756fc8c25868ebda 5d0d9ffa34425a46c379022b0fcfea5d92219e09 88dadaaaa0b4e3a224730ef964d6790992089915 8b27d8267233cc5258630b88caaac4077360dcc1 0cf7037d66565496c6a66882ce3e3619304fe72f 7cfbb56a2d7270b731025e157c343be88cefcd2a 2eafa54a769aaf562bfdcd263a559425ac2628cf bb5ef56d0eda4c1207fbd6298bea42c0cbc12dae aeedcbf3bca6b2a582a71b0bd31473c605fee7d2 9499a5a8ec2e8cb58400912b291d8634627aa536,,Reorganizing DART library composition,Similarly to #587  this RP changes the library composition of DART from {dart-core  dart} to {dart  optional components depending on the 3rd party library dependencies).  This pull request includes #651. See [this](//github.com/dartsim/dart/compare/packaging/osgdart...packaging/components) to see only the changes made after #651.  Componentizing `collision` is saved for later until we figure out how to handle dynamic library linking of `dart` to the components. For example  `dart` should be compiled without `dart-collision-bullet`  but also `dart` should be able to load `dart-collision-bullet` in runtime to use the bullet collision detection in the constraint solver. 
dartsim/dart,653,2016-03-29T16:43:22Z,2016-04-16T05:34:32Z,False,none,0ba8afe6777bd5f1c2350ae023515a3004d77f80,576,66,37d59b8633ce6f4dbee0ed29a3875015a277cb0c 0b2da84a59207de7491fa3bc5ec31dfb00b01b43 a0b1305efa1fe15cc2edce236706d5f373ed8ed1 054fc149b4efd994e29779d34e929a90f8569d18 1d437c632ce6d5e9482e7dcc3cf2c28f6b7977eb 88d56abe9cf27becbd40a879b5d83ff4b68e1895 0c931ddd0aa7d7ea6eb6968d2efb8449b77ee98b 7adf6b8b14ee3b2f16715d6ca200e326626eb429 10397b0df5b8df73614853db7c8eacab6a00af5f 889ccf8c7f4573d7f9a5ba172eb972d02b93bc61 da625ecb9ed899bad4d47975e3b23844c25ecd73 c0b4dfec3b41c4bb40782e00c3c2bf1c30cc8c70 321e136d205d4d090812c03dbe78500b96c13b2c 634192f45e456e0ebfa653ea0e4dc8fefd1acc69 22fb8f85e020d230160b8bb214a53b477ed73fff d094bd74cecd59208c3c776355b9762f12e2069b e330676dfb74588ac9f173227e34ef367f931cf9 e22f4ce2b743801461704bf8e614a8388d470e3b 522b2a974ff822bb67303497e6a7381b2dd3705d 6004a1bb57a211d7c5cb21f318d886688086af65 87e17d99dfc49225ca9b84d0084aada8706d7536 ba69ba7bf2f2ad140e75446f961b9cae20f5718a 60bd53b4d61bec1f5e1a5d063c0f947069201832 d85b74bc574fc2bf65726a00c1c1f384fb566225 e93f921b111f99128880d9790823c8924a479be4 0de9993f1e37f83c17608ebf12c4901e55a9cd16 f3a89c7e57bb832aa6fc41dcbcbb22f322036c88 5039629a534e09885fd2dcb0b5993d12a61bfbf5 25cac6b46eff74176f946935104e6a9bf14695e1 5d803257cd6c8667fb35c295e57f7ceac922bfd9 161a396b5601c6f87c966760bbd4fc2e1d1fafae a6653d60657dcb80dcef7f756660442525355d8f f91a19079ecbbd0c0f46e59e4f2b2d95304b18b4 4bf1ec7cdb63ccd655a15da91ed312113e53d751 b935da178c867442bb403a8b95d8625c7b234bce 0be239c756b8c702f5b88df74176ed4752c899f0 c0d83266b840ad68cba9f1fd533a34397be8e849 12743da18fbf1e69ffdc1d048abaa574a21b0455 19fdc4b317697b596eb503da3a7a18db2b4ac80e a18f4ddfbd30b290b17e3a4d69ddd8acfc30d76f efc9699cd94722e07ca723f982d31908688432bf 0a265e6fe81ae5184c866588884e5b9295c84fdf 0888b9c8d349f24daa0439f8a7e5fd70d9ebfc0b ce6f5589c190a101c26073ce63c5b9df4b518eab 555d6ff0a009b124bd3d0bf8f3fc5ca2ebf0baf8 65c4d9669ec46f36f44e862f5666e58e8d111406 aac9ac904829636e8a3d190a22219a71a51188f5 54a2316657425572dccc3e590c254d3a7aa00480 5b89458cd812c2fa23877df0317b90c05fb6365e 4993f060adb7d7cb430e4e195bdde78d7c67f306 c3223828f0920fb137c235a777c80ec94c6f647a 123e87d1420debd42fa151de672edac62f8141a8 e6739511f3acec6c957a94e2698f94d8a8c366e5 40d9a382bc1467132984183ab885d29f6e4eddbe 063e552a7f384a7925ecae5649225a8e3c140e42 df3c1a7f4f1e028c0a6b0db378e178b412fa5f96 26497a0f8a7643797891e39c83112198f61385fe b259145e2701b7d369816fd9bdf19a9e9c978cb8 f52833517ee8bb541d0c061e37870c59ea5dd2a4 67d74ad4933cb9403950034ca59f823bd59fe494 f56dd2e353a3144e3703d7fe5a9ffa6cc145dbc5 63a697c15009d04573cd56f31029ac718160f5a5 30ca7fea06303343a1ca3764774eb66da2ca7113 0bd36fe0af889832c4abd78aaaf2bc223f7557cc 62f52d2950b04a63b50be221084d430002b195bd 9559d1f16fec4b797cbda99fe782625b4e9351bf,,Changing header extension from h to hpp,This PR changes head extension from `.h` to `.hpp` as proposed in #568.  Exceptions: ode files and lodepng.h  This pull request includes #652. See [this](https://github.com/dartsim/dart/compare/packaging/components...packaging/h_to_hpp) to see only the changes made after #652. 
dartsim/dart,624,2016-03-03T20:32:24Z,2016-04-16T10:36:21Z,True,2016-04-16T10:36:21Z,3bb800dd03a965fc6ae6f008402cf2c6ad2e32f5,3,2,bd75185a8ff0862cebe9b97e5dc19fa6eb583d55 a7a0b4e6cc7d161189ce2a60b26da6316c7f8b5b,,Add more description on InverseKinematics solve ,This comment might be a bit helpful to understand how IK problem is solved internally especially about what is the initial guess and how seeds are used. 
dartsim/dart,669,2016-04-15T17:45:23Z,2016-04-16T10:59:26Z,True,2016-04-16T10:59:26Z,2eaf7322538731d7cb06ba13d89d51078e889a30,33,6,aa2d02ea84f8e3adf5f5e2e1c4a900f6f06685e8 40643dc6f2c78b7c4a2e0af0f85749594d2cbaaf 159035e5de1b2911a1a537c93bdb5b8cb6f0df40 5489619db4f244c09cbd7846f39abb0a5e5045de 1b1bed81f1d6a3d05725993047b4e1f65d6a538b 138d8b44f3a0f29c7ec12b2c147b5f91759cafb9,,toRadian toDegree and mathematical constants,This PR replaces the macros for mathematical constants with type safe template functions  and addes utility functions  `toRadian()`  `toDegree()`  for degree-radian conversion.  This resolves #314. 
dartsim/dart,673,2016-04-16T15:22:24Z,2016-04-16T15:35:47Z,True,2016-04-16T15:35:47Z,ff6f8a30ca1c6f2e71572c756fdf50cf46b37d5e,2,1,480a6d419a66e834a276d970de442c72cf9494b3,,Packaging 4 3 6,
dartsim/dart,672,2016-04-15T23:17:01Z,2016-04-16T01:11:49Z,True,2016-04-16T01:11:49Z,0e38f6359ae6bac68b64a75f5fe145a57b10e9bd,3,2,228ccf5e9886110e0ee1f94ffc58dc273bd525dc a149314ff9b791a2cda4e29b52c8c2fd078b4166,,Patch for double delete issue reported by 671,
dartsim/dart,674,2016-04-16T16:11:26Z,2016-04-16T19:06:23Z,True,2016-04-16T19:06:23Z,b408ef5562c3a244f6e7199830c653017a9f4847,3,20,a558fecf6eb37903113e84796a14aaa9fd96606f 3f68bfb0ba6f474ef79d63e329ed2b381f09c406 ab17051cc2ef4d48d9f8d0dbca99d0964ed33bd8 745d7430709146662d32829e5690b544779218f4 e98694c4b32cad46bab9903610fd60992bb05e14 15c236cb72802178da7573cab2feec24962ab6d6 5249d84f53c6109ca62a45f10c2ae6d7997081fc 068ab7b658e7de82cd2686a5ae4ef13024bd638c f160a8dfdb4cdfa6ed062c0dbe1a00f3c4859b59 4f97999d7ffd1f53ef393af21a10693f838bd38b 214c93e34c90beb15d90d55cc47c4e6b5dfa9749 5f9a0264a0cd87490012a6eef63c4a33083c5253 7e3e36cb8117f682860a150e6fe5956b58b83a79 228ccf5e9886110e0ee1f94ffc58dc273bd525dc a149314ff9b791a2cda4e29b52c8c2fd078b4166 0e38f6359ae6bac68b64a75f5fe145a57b10e9bd 480a6d419a66e834a276d970de442c72cf9494b3 ff6f8a30ca1c6f2e71572c756fdf50cf46b37d5e 4b6fad6d68b2b995d0600ff5cf165cf51a96680d fc52599e0fac8ce94413495d9a718e90bcb70e12,,Merge 4 3 6 into master,All the invalid changes for DART 6.0 are ignored. 
dartsim/dart,675,2016-04-16T18:46:19Z,2016-04-17T00:34:55Z,True,2016-04-17T00:34:55Z,15649113ab97da129a08fc32347cc7b10fa53392,15,3,ebe4a12964551f6175637fb5836ecd92c4ad0c94 0e936b546fb8140c53a7a06b15508aca7ea8a6a3 1e9e5b955d1d6dae86ab048fb8d12b7c07b43f77,,Update debian files,- Renamed library names to `libdart6[-_component_name_][-dev]` - Added `libdart6-all-dev` library that installs the core and all the component libraries. 
dartsim/dart,659,2016-04-08T08:16:50Z,2016-04-22T17:20:47Z,True,2016-04-22T17:20:47Z,6a3de0a00562ce819acadaaedb12a865339e2f18,190,78,09feabf1ef4c364d2fe6b63ebd2c6d2b43cf2257 4d4f84c1951965031f657f0e2489ebd5690fb120 c341b9723f209ecdf863fd644fb897987ac2ca96 f9bce3bbc0be16fc5f2f4924d9b61ebebeb60e3d b392be2cd7e6d923425bc2805dfb71bf1b5f41c0 733f21920ecd1baa0c8ec8bd6341180c965cafd7 7b5abbb866de54551f946936648024e841292f94 96cf10feb8ccdded34479a93c39190eac8aa8b6a c7bf610ae4f4332c5488d73cedb690e373bb71b2 29c7d682a96fab76a8c918dd6c173b97673c448c 8e7cd2d54e9efcf5932599ab163f13917234c9a4 fb05138b67b7f3631935210ff6326c0813ef6bc2 aa068c009375374806777ebaa9fac1c9337bdb5d bfc05a687a9fbe5c2f1cb9e262cfae3ea2f40457 f5a1a0b1adc72dc5eea112ee8e9e0fb45176c012 0c11c9bf685672450c580267c3aad8c55887c3b8 233454ee6dcddc4c450d5096e8dad71ffe563c47 b7c20dc97b5c0f7e97e9ba2f9ba57a79d129e0ea 9da9949414dfffcc9ecf9af2334102a2d1bfdf02 2a30fde1d70340de05d4bc70fba43b591163f1f8 75dff54c411b05c0f7cc8d496e86f98ee78cc6ac b6cd7823d42f1c1c532b6d45941ab6fa15abe4d5 8cff9c0232ecd5b6aab64da8ccee66321ae0335e b63c8ffb9140dc6d2be1acd7660ea7a81da17a6c 2c387fa621732b0bce0da951abbe92552f18b25c 83947d3984c36b31e82191ee17cf98b3de8d6886 d7d23637d49b850dad90b387d0ec283ef4c99e32 3ab44771d5451aee995b089e085167564e53ca84 275c07b8f069d2302cdb3683e6a3745f59315af8 6343eb35aa5145c0f997b2db6fb717dec8d6a3b9 402f8f40e87b172ceae370efe0be9831c000af9b 2566ff8a8d8bdc63539376d30c6d50085124406a c9ed0744adab81fd93ad58565421155f62016fba 7b60b84c0282c2a7fa8876f63147539d81a288d2 bcec8afb85c8ebfc2b1ab5897871349f4dba0b1b 02d1ba527d56cad8ecb48c36c01c97f54d751fdb c5d937582fd0c33a984d43179875dd49224747f1 62c2a35f79bd473998aa0d787aea82f060cd7876 14c89d5a816e67e93a633f94cc72ddbfabca5a35 6be41240831bb429aa393d379bcc2f2846c45240 870337c781a75d087c4bfc327c6db30de1e49503 b44d428fe8d1fd212e701655b29aad5edc34e6a6 d60ce30b23816de4776d6331727d96c564b99e13 16eec9608b8c4132708d118406a06b3347642e82 11b85b388f7c0357423328d5652e5c29fbf2fc8b 118a723c10085c738f3caac2b28c64eac95661ae 5b1d82d4d03bd1d3a94a3791966f6c6ed5fc2c94 1114b10331c3efa8ac138da398ad4b7a5cd0ddb7 e174114d05597cdb949c3808e398d7edf6d0c026 a405a0d10a985f27dfc5596ea355880001ba14a0 5c0c0f84a0b0daba34aee630aa9d775d64860973 b3c131fabe2bf3925a5cb1aa0dbfbd8ffd117e6c e621f51b4424311bc494949a50fae1576ef1d461 fe60a44935a6435e366a48b12dfcaacb5c672bd5 a4af75c411d3d5ac48f7b7266bbe44a3e0b8c6bc 281785a8e2344a18a4b6116fa3f25e50b5e0b0be 863e0c51f2a0bd4c26064b0f29f42bc6929399c5 ec1b27aa5e6f33cc6445f778b0829bb1ac2c0b33 33db6c2e2732bc1dc21399bfd47cc932074808e1 81a345176ebf535f4108cb384fcd6a433926d945 1f487a6593488040259523f0fa8c67d4d2cd5355 a97e6dd9322a5092e42d6d6dbcf96dc6651a4f31 23ae8b8e0de0fd35ac3a4d87af56219671c6e7f5 2c7b24b4f3e7e37cc061678faab11bb233948e1a eb189a88724eb564cc3ddfb282cd5072850c358e 401bd26c80b51759ffdfb18f519fbd05d99eb01d 93436e82b7ba2aca518e98276071d20cc90a1585 5189938acefcab207de00c37c6e7e10ebccdb6cc 89843ec4779e835c63d101755d3555250cd6374c 2e5f422bb4f9c61b23ea24eb0682dea6f8d5c20c e00ffecdb7dcd7ddf46e5543cc982af6ac19b4fa a15b9c36a07553f7b644c2166da58871cc39898e 6acb6934f8e2757cf16398a084dbc70f1386e638 e5e808ae790252f399a64eccea6053ccff05d1f4 1f3ddc281d3beea8a299d5515a573226b549735f eb63515e04e5a7312f6f3c1a4f7edbf34be35c22 628a273b72a2b1e22c6eb81bd484449ed25c66e8 3f8c8adba256bf6203d1827602421192d578001f,,Aspects States and Properties,This pull request addresses #643  #627  and some conversations that were had offline. It's a doozy of a pull request  but I think it provides a lot of valuable improvements and features with minimal impact on the API (besides the renaming of `Addon` to `Aspect`).  Due to the renaming  the diff that's available on Github is going to be virtually unusable. That being the case  I'm going to provide individual links that highlight important parts of this pull request. ### Air-tight (albeit complex) inheritance structures  [First I'd like to start with a simplified diff which illustrates the primary value of this pull request](https://github.com/dartsim/dart/compare/grey/compare/aspects)  The key thing to note is that we eliminate a huge amount of code duplication between these two classes. EndEffector and ShapeNode no longer store their own relative transform property because now FixedFrame stores this information as part of its `FixedFrame::Aspect`. Moreover  EndEffector and ShapeNode don't need to define `Node::State` or `Node::Properties` for themselves  because all of their states and properties -- from the beginning to the end of their inheritance structure -- are stored within Aspects. This allows them to each inherit a class called `CompositeNode` which will wrap their `Composite::State` and `Composite::Properties` up into a `Node::State` and `Node::Properties`.  Essentially  every class that has information which could be labeled as "State" or "Properties" will store that information with one or more `Aspects`. An `Aspect` can embed its information within the object that owns it (completely eliminating any overhead for the object to access it)  or the Aspect instance may hold onto the information itself (allowing for more flexible memory usage). This decision is up to the developer/user to determine which approach is best suited for any given Aspect.  The bulk of the implementation for these features can be found in [dart/common/EmbeddedAspect.h](https://github.com/dartsim/dart/blob/grey/aspects/dart/common/EmbeddedAspect.h) and [dart/common/detail/EmbeddedAspect.h](https://github.com/dartsim/dart/blob/grey/aspects/dart/common/detail/EmbeddedAspect.h). ### Direct access to members of Composite State/Properties  Up until now  when you have a `Composite::State` (formerly known as `AddonManager::State`) it was completely opaque. You had no way of accessing or modifying its contents; you could only pull it out of one Composite and pass it to another Composite. Now  however  you can do the following:  ``` Composite::Properties properties; properties.getOrCreate<BodyNode>().mName = "Body"; if(SoftBodyNode::AspectProperties* softProperties = properties.get<SoftBodyNode>())   softProperties->mDampCoeff = 0.3; ```  This allows you to dynamically construct and access individual Aspects of the Composite State. Identical features are available for Composite Properties. `get<T>()` will return a pointer which is `nullptr` if the Aspect didn't exist  whereas `getOrCreate<T>()` will return a reference  since the information will be created if it didn't exist already.  [The implementation for these features can be found in dart/common/detail/CompositeData.h](https://github.com/dartsim/dart/blob/grey/aspects/dart/common/detail/CompositeData.h). ### Seamless integration of both internal Aspects and user-added Aspects  Because of the new system  any Aspects (formerly known as Addons) that user adds to a `Skeleton`  `BodyNode`  `Joint`  or `Node` will get sucked into the standard `State` and `Properties` of the BodyNode/Joint/Node that it's added to  as well as the Skeleton in which that object exists. This is in contrast to the prior approach where the was an `ExtendedProperties` class that mangled together the basic Properties and the `Composite::Properties`.  The new system is completely unified---functionally  semantically  and mechanically---instead of having different information handled in different ways and then getting mangled together at the last second so that it can be delivered to the user as a single object. ### Template Madness  I think the biggest catch to these changes is the ever growing usage of templates. As much as I may adore templates myself  I do recognize that not everyone is very comfortable with them  and they can result in very complex (read: confusing) inheritance structures when CRTP is involved. This template-based implementation is high performance and very flexible  but it will probably be confusing for reviewers and future developers. With that in mind  I encourage people to post any questions they run into while reviewing the implementation. Even if you can manager to answer the question yourself  it would still be good for me to know the question so that I can address it specifically when it comes time for me to get serious about documenting this implementation. ### API Changes  I tried my hardest to keep the API changes minimal (with the exception of renaming `Addon` to `Aspect` and `AddonManager` to `Composite`). The biggest difference you'll see is in the `SomeClass::Properties` **constructors**. Only the **constructors**. The actual member variables of those classes should remain virtually unchanged  but their constructors won't quite work the way they used to  especially `BodyNode::Properties`. An easy fix for this is to allow it to perform a default construction and then fill in its member variables after construction.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/659)  <!-- Reviewable:end --> 
dartsim/dart,688,2016-04-22T15:58:57Z,2016-04-22T19:37:55Z,True,2016-04-22T19:37:55Z,d0563b336c517fb3f45412d95ea993c94033253a,1,1,29df2fa84f144ff2762bc139d13cc703054edd5f,,Remove coveralls token from travis yml,This PR resolved #687 .  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/688)  <!-- Reviewable:end --> 
dartsim/dart,684,2016-04-22T00:12:54Z,2016-04-22T22:07:43Z,True,2016-04-22T22:07:43Z,8134697b71b2a52c1af6fede2207dab7bdd85adc,8,3,47b9af719bc9820970ef4fbce58b8751ae684e6a 30ebde3b324384841f96b5720515a7885c94cc33 d42b13ae5cc46f70c4a6d1fea8da7f1ab7d43574,,Fixing Inverse Kinematics for 5 1,This fixes the issues reported in #683  but it's targeted at `release-5.1`  and it does not have any changes to the ABI.  Inverse kinematics and `EndEffector`s were introduced in 5.1  so this is the only release that needs to be patched.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/684)  <!-- Reviewable:end --> 
dartsim/dart,678,2016-04-21T20:23:37Z,2016-04-22T22:12:59Z,True,2016-04-22T22:12:59Z,849a721b48c3c24bc306989b41c67af71514fcfc,24,4,2c71220010bd129d26ef7e0ad0e4777f8995b2dd 30d74f547bc19dc36d8eb71648d0c72ff946ac86 7ee359cab392134cfe2d3d6177a34d1f9235cdf1 60df9a0debd8a7232510573559d402469beae4d9,,Remove deprecated APIs made for DART 5,Also  this PR resolves #447.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/678)  <!-- Reviewable:end --> 
dartsim/dart,690,2016-04-22T23:48:55Z,2016-04-23T02:51:38Z,True,2016-04-23T02:51:38Z,b91ca7931ea2a7e1ab5d3b7bcee95e51e14f83fc,2,2,fac99e5aecf20b3550e0276d9363c79d7beca360 8ed2785ed32d0bf08fb4a7ea90654ae25052aca6,,Generate doxygen tag file,[Doxygen tag files is used to link to external documentation](https://www.stack.nl/~dimitri/doxygen/manual/external.html). This would be useful for the external project that depends on DART.  The url of the tag file is http://dartsim.github.io/dart/dart.tag.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/690)  <!-- Reviewable:end --> 
dartsim/dart,691,2016-04-23T02:02:17Z,2016-04-24T00:58:43Z,True,2016-04-24T00:58:43Z,346c1bd476544992e2566e7c624f316aa9ed9ad1,7,6,7d687406928ca5d8d24d4d41355cf1498a8eabac 56f1bb30123faeee7b123d7615d59646daef1ca8 48764caffba197ca639bc3df6fb7dfd8307d7379 205aff6cfa7030f76a13dbd839e2752d87dde2dd 4b0898ff4dc9408d510c0e84482b97eb6bcb71fe 366e6141a69f0c6c204c74ecdabbe183ab6c1b82,,Small updates for 6 0,There were a few `TODO` tags related to version 6.0. This takes care of two of them: 1. Now  when we clone a `Skeleton`  the full `State` of the original `Skeleton` gets copied into the new `Skeleton`. (Before now  only `Properties` were getting copied) 2. Initial positions and initial velocities are now included in the constructors of `SingleDofJoint` and `MultiDofJoint`.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/691)  <!-- Reviewable:end --> 
dartsim/dart,679,2016-04-21T20:49:51Z,2016-04-24T01:34:08Z,True,2016-04-24T01:34:08Z,d70b316144f92198affe98b510ae4d9a78638883,454,4,3e889a9b3624aa22fe65df3c58579bed4988c808 5e17c52545abdb1186901cf272479f064636dade bc9a0007d5ad556bdd3af410067c8d303c9f0bca 2de4d8ce97759c6371586f6b31ef1efa81f69d2b,,Update copyright years,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/679)  <!-- Reviewable:end --> 
dartsim/dart,680,2016-04-21T21:33:15Z,2016-04-24T15:00:51Z,True,2016-04-24T15:00:51Z,7576ae007e17d3f9df9c0c690ab4db6fff1c60af,64,4,2ed319c1267ee14b9697af95061e2112a037e5dd 19c6e2820a70fb0668fda23ff39a3b55f6450634 29faf4559d0c15b3c86684f55dcb73b9ad29347d 5e977385ff34a652087c73f883bb0916001b448b,,Don t need to use virtual keyword with override specifier,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/680)  <!-- Reviewable:end --> 
dartsim/dart,681,2016-04-21T21:40:46Z,2016-04-24T15:11:52Z,True,2016-04-24T15:11:52Z,b2d392404a3a63928b57ea7ece0f832f959a44e0,213,4,6dafbae2d7852d9a9f83c0f3db9ad740b26ed5e4 bff821f5deea0b1bee136077262b7e6f92f895b4 5aeb3d007bbd96627746100cfe710478e039f0af 1313cab35b24f96c235b2daac94982e6f2d44ef4,,Use std size_t instead of size_t,resolves #656  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/681)  <!-- Reviewable:end --> 
dartsim/dart,682,2016-04-21T22:26:01Z,2016-04-24T15:16:36Z,True,2016-04-24T15:16:36Z,23fd076894318c0e64524cf8425536e562e7e549,4,5,028e214458d1b710de77360582b6239da434efa0 4fb1b7fe49ae3eb8cfa3d1b40bbec27caae36064 439de079a4c996149d431d4c790bf2c51e472d4f a83ac7bac8faec7927626495af5d7c1850fb36e8 c8fcc6a29090800a3745ce1266525fa6e1c592f6,,Configure Travis to treat warnings as errors,resolves #677  <!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/682)  <!-- Reviewable:end --> 
dartsim/dart,685,2016-04-22T06:07:59Z,2016-04-24T15:19:42Z,True,2016-04-24T15:19:42Z,cda180e618b8059ba19330e730cefe1a3fe1d6e2,96,4,017e148187acee54673b544e40c5e6e440c8da45 95ad8b598d742f4f7f1a5a593e284e205f430c05 da94a6ba546780167c0d980513eb7be733c6ef43 426f393ef568ca523ecdbe346ae550edc59675ec,,Rename apps examples,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/685)  <!-- Reviewable:end --> 
dartsim/dart,696,2016-04-24T19:20:08Z,2016-04-25T01:14:01Z,True,2016-04-25T01:14:01Z,90978a214406c6ecc48842c681939d19a97577c7,3,2,6ed0aaad1786859cdcb0fd3c1e3b2decf6f4e56b d43e084f28e7bba5844cf60e86b8986bf6b3abd3,,Backporting of 630 and 697 for 5 1,This PR includes two patches of #630 and 697 for DART 5.1  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/696)  <!-- Reviewable:end --> 
dartsim/dart,697,2016-04-24T20:02:12Z,2016-04-25T01:14:09Z,True,2016-04-25T01:14:09Z,421d48d5c3d22df7442617d3bf40001d0955f14e,2,1,a1c10331a56e1683932a99b8afe3e2391991875d,,Fix BULLET_INCLUDE_DIRS in DARTConfig cmake,The fix from #361 doesn't work if bullet package was failed to be found by `find_package()`. When bullet is not found  `BULLET_INCLUDE_DIRS` will be set to `BULLET_INCLUDE_DIRS-NOT-FOUND` rather than blank as we assumed in #361.  Instead  we set `DART_INCLUDE_DIRS` in the top level CMakeList.txt by adding `BULLET_INCLUDE_DIRS` to `DART_INCLUDE_DIRS` only when bullet is found. `DARTConfig.cmake` is then configured using `DART_INCLUDE_DIRS`.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/697)  <!-- Reviewable:end --> 
dartsim/dart,698,2016-04-25T01:45:54Z,2016-04-25T02:58:49Z,True,2016-04-25T02:58:49Z,61fbee8a703ac96114082deae59ca85c1d730ef9,3,23,a558fecf6eb37903113e84796a14aaa9fd96606f 3f68bfb0ba6f474ef79d63e329ed2b381f09c406 ab17051cc2ef4d48d9f8d0dbca99d0964ed33bd8 745d7430709146662d32829e5690b544779218f4 e98694c4b32cad46bab9903610fd60992bb05e14 15c236cb72802178da7573cab2feec24962ab6d6 5249d84f53c6109ca62a45f10c2ae6d7997081fc 068ab7b658e7de82cd2686a5ae4ef13024bd638c f160a8dfdb4cdfa6ed062c0dbe1a00f3c4859b59 4f97999d7ffd1f53ef393af21a10693f838bd38b 214c93e34c90beb15d90d55cc47c4e6b5dfa9749 5f9a0264a0cd87490012a6eef63c4a33083c5253 7e3e36cb8117f682860a150e6fe5956b58b83a79 228ccf5e9886110e0ee1f94ffc58dc273bd525dc a149314ff9b791a2cda4e29b52c8c2fd078b4166 0e38f6359ae6bac68b64a75f5fe145a57b10e9bd 480a6d419a66e834a276d970de442c72cf9494b3 ff6f8a30ca1c6f2e71572c756fdf50cf46b37d5e b8d4bcfe5a35b112ffd71f1ec04a578dba214dad 4bf779f9de222f1d3779b7f5f60c0ea903a4547a 1a8aa7a2eacc3acf135f4b8fb2541bcde6a37c11 21f246e35e897383aaae427dd6dfb253f811efd0 7d405892352ea7a894c27d4b42c01651c5c0e296,,Packaging 5 1 2,Waiting Launchpad buildings: - trusty: [i386](https://launchpad.net/~dartsim/+archive/ubuntu/ppa/+build/9627598)  [amd64](https://launchpad.net/~dartsim/+archive/ubuntu/ppa/+build/9627597) - wily: [i386](https://launchpad.net/~dartsim/+archive/ubuntu/ppa/+build/9627604)  [amd64](https://launchpad.net/~dartsim/+archive/ubuntu/ppa/+build/9627603) - xenial: [i386](https://launchpad.net/~dartsim/+archive/ubuntu/ppa/+build/9627606)  [amd64](https://launchpad.net/~dartsim/+archive/ubuntu/ppa/+build/9627605)  ---  <!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/698)  <!-- Reviewable:end --> 
dartsim/dart,700,2016-04-25T18:25:35Z,2016-04-25T21:00:01Z,True,2016-04-25T21:00:01Z,ba3502eab3bcefea0e7542832ae4145d8da2c205,3,4,c8d6d7d00d66c36a46dea59edef12ca45248cc1e 93fefdb74a381bfa3025ac08f8450b258b7898dc c9639335480007f9711734c74434052c80dacdda 7db3fbd56c8c9aebd15ec78e7f6dbe38508d7f1d,,Simplify Travis test for general push,Up to now  Travis tests for 2 x 2 x 2 (os  compiler  build type) builds per general push and pull request push. However  this may slow down the development process since usually it takes 1-2 hours to see the result.  This pull request simplifies the build for general pushes by testing only two builds (linux-gcc-[debug/release]).  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/700)  <!-- Reviewable:end --> 
dartsim/dart,683,2016-04-21T23:37:31Z,2016-04-25T21:00:15Z,True,2016-04-25T21:00:15Z,a3be5a9ec676f16f6ba1468a06733326a1ab2077,9,6,46478e9ea3288c8f39993560f3a8e13f161ebe13 7ba63d3e9af8d9d64d6de807322da9f1fd83b6f4 436c891ba81aeb664c1f1e63288de4beb9f487e9 5239ddaf2187b785b4b37f3f8c8fd451aa8f88d9 29769639df057ef30bc812df8fbc3d9675de64a5 e6b8ff93158da120939ab5c68678a9a5f6baa89d,,Fixing Inverse Kinematics for 6 0,This PR fixes some issues with Inverse Kinematics which pertain to `FreeJoint`  `BallJoint`  and `EndEffector`. It is targeted to be merged after #659.  There are two primary issues which were identified and fixed in this PR:  (1) Because `FreeJoint` and `BallJoint` positions cannot be integrated by simple addition  the Inverse Kinematics for these joints behaved incorrectly when they were not at zero. This PR fixes it by taking advantage of `Joint::integratePositions(double)`. In the future  we might want a position integration which is agnostic to the current state. E.g:  ``` Eigen::VectorXd Joint::integratePositions(const Eigen::VectorXd& positions  const Eigen::VectorXd& velocities) const ```  (2) When `EndEffector`s and `ShapeNode`s were being attached to their `BodyNode`s  they were not recognized as being `JacobianNode`s  because downcasting a pointer during construction is generally a bad idea. This PR fixes the issue  but now child `BodyNode`s are identified as child `JacobianNode`s via a separate pipeline than any other Node type  which is kind of smelly. In the future  we should probably unify the whole construction pipeline for `BodyNode`s and all other `Node` types. BodyNodes might be kind of special  but I think we can still work out a better process than what we have right now.  I'm now going to attempt to patch these issues for ~~5.0 and~~ 5.1 without affecting their ABIs. Wish me luck.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/683)  <!-- Reviewable:end --> 
dartsim/dart,692,2016-04-23T02:05:29Z,2016-04-25T21:03:58Z,True,2016-04-25T21:03:58Z,297d2f68c9e081fdf8f1a41123cf75030868a347,17,7,2cfd9c56d34896abb07aaa4c2533a50af5e3d6df 316a583e5e5a5c23360678c44fdf3834bd3573da 2985e15ef442a93e774b7a339b26151d5f3119bd bc7fe49e4dc1a1a1cb6be101cdf4b1e40b285514 a3d24aca2448b346061ae0f377faf402a07981b1 9d9a8a0366384d667008dcc54db2b7237666329a 5eab0d1e644f697eb7c52eace8fbca5b2f70471c,,Change Markers into Nodes,Up until now  Markers have been managed separately from Nodes  because Markers predate the Node concept in DART. This PR changes Markers into a Node type so that it shares all the same machinery as Nodes instead of having its own machinery.  Note that this PR builds off of #691  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/692)  <!-- Reviewable:end --> 
dartsim/dart,689,2016-04-22T21:49:42Z,2016-04-26T12:15:34Z,True,2016-04-26T12:15:34Z,579cb2e67cb62d052b96a950cc05e238cca0f999,2,2,bf8cdb90adc8ef549c38932bedc2fdab984ab0c4 a4e06543804fdb54429a890e06b62151eede2387,,Make ConstraintSolver to return CollisionDetector CollisionGroup as shared pointer,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/689)  <!-- Reviewable:end --> 
dartsim/dart,693,2016-04-24T06:34:18Z,2016-04-26T16:51:58Z,True,2016-04-26T16:51:58Z,7641f057c66f2569a3e0881a068ce5f4dea9b21e,571,19,64e55a3e32afdc73bb78aef96bf7f67b13feb96c ae49ca92fdec4453d15208555bfc37ec8162a74f 87beee63070d28d8e5aee714d8d426a80f18aa0b c6f4b6a2b2cdfd180b7f162a2ca066ded31f6970 929a5ea423d5956daa1b21d002dcfa96b1cb5dc5 fc8c7c46a44a76e8b63587bf6c1c272cfec7cb9f 0800968f9207ccc682790f3a41506307105f4772 be5b29b12a4d0fdebd86ca37221da0734e7a7017 b5e9aedb8d188cc7cac5aef1b4c392d7e8fac649 a6a061578873f41b256620a9caa64d1cef183967 4c6de40d660e29a1a5ee73eebb574efe60f0b6eb 0d04c564106042aa12235cc17bbdd2deea51ac0d 987ccc28cc1c0a25ad183b52b773db35dec8a625 5ae80c311a9f3a8ec0d0d86e191ea134f99acc6c 08a7d450c4a50b099ffe29c481009960fe494aef 46f39028511aca6aa29d10bb3ff27adf345dd0db 82f7556123971b3c522d22b7eb0baf6fb59b0859 46ab700043ff3d9305bb5765e71b50e0c49da2c2 e0dab8872c233168acde9d9fd3553107912a907c,,Use hpp for headers,This PR changes header extensions to `.hpp` as proposed in #568.  Exceptions: ode files and lodepng.h  It is targeted to be merged after all the PRs created before this PR.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/693)  <!-- Reviewable:end --> 
dartsim/dart,703,2016-04-26T23:17:39Z,2016-04-27T17:25:39Z,True,2016-04-27T17:25:39Z,bb3580d782e3c11a9559520f95d38bca0bee6318,2,2,16d7bdee1ad1fdab1db0d3446078544812ca18b1 94a02ca4ec8b8024f7e934f3de6ecb9c92cdd910,,Convenient functions for setting joint limits ,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/703)  <!-- Reviewable:end --> 
dartsim/dart,704,2016-04-26T23:21:24Z,2016-04-27T17:26:29Z,True,2016-04-27T17:26:29Z,a20857889259d2d6cceaaff9ff689816a314a3e9,2,1,c31b8d571e3228a887c9449ea2c6148d46a62e96,,Switch CollisionGroup to take MetaSkeleton instead of Skeleton,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/704)  <!-- Reviewable:end --> 
dartsim/dart,706,2016-04-27T17:29:50Z,2016-04-27T20:24:03Z,True,2016-04-27T20:24:03Z,904daed3bb0f38a8ec1d6653d77c4066071588c1,1,1,4e17446f7e8cda36b75c4e45074cc00282cea07b,,Fixed a CMake typo that was preventing dynamics detail headers from being installed,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/706)  <!-- Reviewable:end --> 
dartsim/dart,707,2016-04-28T15:36:48Z,2016-04-28T18:21:12Z,True,2016-04-28T18:21:12Z,46e531dccec87578a262362c34046757e44ef51b,1,1,1410e2bba5742c593278c73dd969d71ea5909d32,,Fix typo in utility macro for specialized aspect erase remove,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/707)  <!-- Reviewable:end --> 
dartsim/dart,709,2016-04-28T19:48:23Z,2016-04-28T23:02:09Z,True,2016-04-28T23:02:09Z,7e6c58c6a408df3f17064460d4446b274afd644e,1,1,f96d2004b895791f509ae03e0d8948621215fac0,,Update debian script to install hpp instead of h,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/709)  <!-- Reviewable:end --> 
dartsim/dart,708,2016-04-28T18:34:17Z,2016-04-28T23:02:13Z,True,2016-04-28T23:02:13Z,716bc85aacbf3a33c3b1147ddcf4f58dc70cab4d,4,1,29f5fcb87c7a60e4bf05f9e9e8af462d653dea05,,merge feature for Composite State and Properties,Up until now  `Composite::State` and `Composite::Properties` has had a `copy(~)` function which will do a deep copy making the contents of one instance exactly the same as the contents of another instance.  This PR adds a `merge` function which will allow the receiving instance to hang onto any entries it has which are not present in the sending instance. So suppose we have:  ``` Composite::Properties receiver  sender; sender.create<Aspect1>(); receiver.create<Aspect2>(); receiver.merge(sender); ```  Then `receiver` will get the `Aspect1` contents of `sender`  but it will also get to keep its own `Aspect2` contents. On the other hand if we used `receiver.copy(sender)` instead  then `receiver` would lose its `Aspect2` contents in order to be a perfect duplicate of `sender`.  I've also added a `has<Aspect>()` function for `Composite::State` and `Composite::Properties`.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/708)  <!-- Reviewable:end --> 
dartsim/dart,711,2016-05-02T17:00:12Z,2016-05-02T20:16:40Z,True,2016-05-02T20:16:40Z,e5cd20dd7c4e91a247f06f3db21d59621f462831,3,1,43196c10a742eef2b271367ef8062f5019f728d4,,Added function to retrieve ShapeFrames from CollisionGroups,I wanted to be able to make deep clones of `CollisionGroup`s  so I've added the ability to access the ShapeFrames of a `CollisionGroup`. The deep clone will still need to be done manually by the user for the time being for a variety of reasons  such as: 1. `ShapeFrame` ownership is still a complex issue without a decisive solution. 2. The deeply cloned `CollisionGroup` will probably need to belong to a different `CollisionDetector`  since the motive for deep cloning is usually multi-threading  and I can't think of an obvious API for automating this right now.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/711)  <!-- Reviewable:end --> 
dartsim/dart,713,2016-05-04T02:54:57Z,2016-05-04T15:58:49Z,True,2016-05-04T15:58:49Z,3adc2386828469ccbf94ba88afcffc2051280adf,15,1,17370776a443e90911987472763d638451f5b0ef,,Removing the requirement that Aspects are created within Composites,This addresses #712 and lifts the arbitrary requirement that every `Aspect` be created within a `Composite`.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/713)  <!-- Reviewable:end --> 
dartsim/dart,715,2016-05-05T22:06:41Z,2016-05-08T13:01:55Z,True,2016-05-08T13:01:55Z,8ae76d40b0304b3b7c9c21daab223dfad97bba39,33,2,b4a918b4479ffddfdc8b4d5651b5f1e407ca5fda 0f2c2627a2bd770daf2cd4ac069f7dd58ac1c9c1,,Rename Joint Local to Joint Relative ,as suggested #714.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/715)  <!-- Reviewable:end --> 
dartsim/dart,719,2016-05-09T00:19:12Z,2016-05-09T10:08:46Z,True,2016-05-09T10:08:46Z,7da9b652925ec68c59726228f65f9c3195407fe2,1,1,93490df9a9aec90703a77f3cd907f1d8f58b5acb,,Fix Eigen memory alignment issue in testCollision cpp,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/719)  <!-- Reviewable:end --> 
dartsim/dart,718,2016-05-08T20:10:10Z,2016-05-09T18:48:40Z,True,2016-05-09T18:48:40Z,15d7f8464c815a4619fe3a08c1a52652161fc48e,5,2,45e0e0a54d567127b02aee94ff896cf67a58e1f6 880fed79614ddca2bc652a24a3cbaf91f070a4b3,,Separate enableSelfCollision into two concrete functions,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/718)  <!-- Reviewable:end --> 
dartsim/dart,694,2016-04-24T16:57:13Z,2016-05-11T01:04:09Z,True,2016-05-11T01:04:09Z,0c4b55ade62382c6208d56b55b0cfe2cf37a04d6,20,20,ef60ea4de8ad17e27bfdbe9c407bda97e226e82b 2455923f670054f8acabdb9eee49ae1d9dbd6391 9222a155ff3f229304923c4ae7b32ae012758eba f9d4b51e66cce6cadfae784f9722dcedd33063b7 c86bbff159807f9216040aa54104df1cde741c5c 045fa7ceb57cfbc7d4f01ae0d24a55fbd4975e88 62fb94b131aad7cf8330774733f9bf105283f901 b6b31836628449bd8aaa027aa9443b5520f07cd9 4be219ef71ad805a20b7f75e18c30a76bd1a04dc 08b5dc3868a55c9ad7dd8a26bc1b42eeacbc49ff 93ab34b5922dbdeda1430307258199a88c5ca41b 8cf65f25520c0f92f5676cf543668b55241171fa 7299ba7105f730fc2bdd68c5f06528788639f46f 5bfe8d429205791586dbf4b3b973231f008e97e1 a8f094a7930a498c8311c370a019ef320779fec2 9a95a321a9120f10a7d2214746f0f4d012d30f60 6a318a7bfc9e7a64f1d152f63a1da98c3a327e52 584d942e27d3b0f86665ad4e19c27a457a657c71 fe08fec3e6bdff235b0660725121ea82279d10dc 863151c2d1f0370d959201578969b47b82d83945,,Improve collision detection API for binary check,In the current API  we always pass collision options and result to `collide()` even though we just want the binary result. This PR adds some convenient functions for binary collision checks that don't take `CollisionResult` or for both of `CollisionOption` and `CollisionResult` so that we don't need to create a dummy `CollisionResult` for nothing. When `CollisionOption` is not passed in  `collide()` interprets it as binary check.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/694)  <!-- Reviewable:end --> 
dartsim/dart,720,2016-05-09T23:17:40Z,2016-05-11T01:04:21Z,True,2016-05-11T01:04:21Z,4452ad0e80454a760f2d157d6c970fbcb38f3e40,2,3,114f7257dbc8b92829401b11580eab5c551ee8bf e3dd667d317c76328664ddd992db13fb660bf21e 8f85313ce5d324060de1fa2590b2063446c1d080,,Packaging 6 0 0,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/720)  <!-- Reviewable:end --> 
dartsim/dart,722,2016-05-12T15:53:44Z,2016-05-13T16:51:46Z,True,2016-05-13T16:51:46Z,bb2b12136488771141888260821d17ae4844405f,5,4,4aeef6dce3e99d9d2d4de2cba6cbb56a03d1244f 0bbcfa4677a479ad6743f854c6d5ab2ad7723a04 42f90b8f5e61abb7df99a928b91bd3d85cda56f8 a0a5a5f7e9960f53f142dd2975b6d5ec82759638,,Add warnings for unsupported shape pairs of DARTCollisionDetector,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/722)  <!-- Reviewable:end --> 
dartsim/dart,723,2016-05-12T16:12:05Z,2016-05-13T16:58:53Z,True,2016-05-13T16:58:53Z,5131609cff7065d47c4072eab3d8b1b68a2f3bce,527,8,036f373946e3324dd27b4cb22468f53fa72c1775 e0e49d82f005d6fa11b444a2ca3d79db6a0952de 9392191b691ae2e87dde104ee099699d3a1e526b 327cd498710f36c02496624767895d405747edf9 9e8cef80afa304cdb34b11fb9350f715f8f8afae 2d293eea9b049ea009dcd44f712395e4d3009d35 5e3d126a54f327731f3906b866e5e1a4a5d431e3 0eaa902cd36a810fa4c1722d7b49725c60bc9961,,Update copyright,Since this year  DART has become a more collaborative project as being supported by three research groups of Graphics Lab and Humanoid Lab at Georgia Tech  and Personal Robotics Lab at CMU. We believe it's the right time to have their names on the copyright.  Also  the individual contributors have moved to a separate file `CONTRIBUTING.md` from the copyright with short descriptions of their contributions. We've tried to fill the contributions at our best  but please let us know if you found any incomplete or incorrect information  or even you're not on the list.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/723)  <!-- Reviewable:end --> 
dartsim/dart,725,2016-05-13T02:27:08Z,2016-05-14T22:56:25Z,True,2016-05-14T22:56:25Z,7c860cd5782aa80fcfbabfa7521df45524c4220e,30,6,4aeef6dce3e99d9d2d4de2cba6cbb56a03d1244f 0bbcfa4677a479ad6743f854c6d5ab2ad7723a04 42f90b8f5e61abb7df99a928b91bd3d85cda56f8 a0a5a5f7e9960f53f142dd2975b6d5ec82759638 a20d290108e999b8b547b4ca3b5b4b6e1d779309 04d4ed8fa29e1a0c7cb1d762c65c8aaceb5aedde,,Add Shape getType and deprecate Shape getShapeType ,as suggested in #722.  This PR targets 6.1 since this adds and deprecates API.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/725)  <!-- Reviewable:end --> 
dartsim/dart,727,2016-05-16T01:08:03Z,2016-05-16T15:43:28Z,True,2016-05-16T15:43:28Z,f53cb4dab6cdbbe0f2dee6e408af9ab8733f690d,1,1,35eaed27214bf1feffd23ef4312769c81151cbae,,Minor comment typo correction,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/727)  <!-- Reviewable:end --> 
dartsim/dart,731,2016-05-31T22:24:22Z,2016-06-01T01:21:22Z,True,2016-06-01T01:21:22Z,d6e2d3dedad90fb4ac4cc0ac6c878f4657943d5c,2,2,fbb6da418d072b381c524fa8c9d7ed20d3856acc 22444c0961c24d58c5a0fc508df9ec061f49c5c9,,Update total mass when removing bodies,The total mass of a Skeleton was not getting updated when a body is removed. This fixes the problem and introduces a regression test for it.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/731)  <!-- Reviewable:end --> 
dartsim/dart,740,2016-06-28T20:57:34Z,2016-06-28T20:57:45Z,False,none,8740c9eca41682c4fd771466a8367893b6c8bca4,6,3,73c2fb731816daeebe0177d007d21747cc4476c7 3c0cc798a79847a794cd4cdc6565fcfddbac3a19 ae9d1057a554c49a42af2a97aa67979aea8c4d6c,,Packaging 6 0 1,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/740)  <!-- Reviewable:end --> 
dartsim/dart,742,2016-07-06T02:27:36Z,2016-07-06T20:14:44Z,True,2016-07-06T20:14:44Z,35679e26c73a8c26402192394299d51c8701411e,14,2,db9274e82f2382c5422cfdc135a8a755d31191ba 4a643b363bf171bad6ee8395435c3a7ae2811f55,,Prepend DART_ to DEPRECATED and FORCEINLINE macros to avoid name conflicts,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/742)  <!-- Reviewable:end --> 
dartsim/dart,746,2016-07-20T20:42:39Z,2016-07-22T02:34:09Z,True,2016-07-22T02:34:09Z,ef41e05ba41eef153194be9e027a56e7b5a59713,17,13,2cae8d8d3debe937bcce4b157e377057a8982411 9643ac5218a422de331fd4cfd4768a26becb476b 66093682c069b29d9caf07c0864435473ea612e8 602f983ea69f2f9ec2c4e92ef62ea0095f6ece4c 05c59450992788c173f87f4015acefef2238024f 9ddb31470bb0a1fc1932ad3615692bf9cba4b158 fbe4f36ca716146ec9805fd0ca3c70be18578064 970d73fa10dbf6957c0659fb4e006ada22fb0b0a 2523d37fcd712ae76c17d5756bc8cdf125972d26 eaa10ae2b4e0d29de003921d868f0c62e12ed0dc 2996db414d2e784e3523065496dfa5bf5ce3da4c c35d83b49a975f203904efb05396397d3d19a73a c1c434771c7f336fb79581973dc09dcdf167de18,,Add computeLagrangian to MetaSkeleton and BodyNode,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/746)  <!-- Reviewable:end --> 
dartsim/dart,755,2016-07-25T15:37:16Z,2016-07-26T11:19:15Z,True,2016-07-26T11:19:15Z,7b886b7d04186e0131bd464fa49a42d9a529401a,26,6,94d065ee4a12cbd55ffd4d4068bb2fbca932aba6 021db222e91ce2d884736a64bbd7599fa0466aba 708aefba949efc47105fca9fd76b54dfd36deb79 05f726aa6688cba87d9f2bdd02b774abcda6bf88 2c94393b6fe0b1f6aa0735e6a810a2709d50fdb6 b3d3349ea76c629bd968d8d69e29dba11fdc9cc1,,Fix typo grount ground,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/755)  <!-- Reviewable:end --> 
dartsim/dart,756,2016-08-03T23:24:30Z,2016-08-04T03:36:56Z,True,2016-08-04T03:36:56Z,38a068c21766709fd3abc207f0f9dd8fd1a45de0,7,4,cca9ff0015893bb5119b6431cdc18bf5367791cd 5e7d1f4016a8791b30f375d37019e7fe5c2c3ca5 5cf6bfbc15f599a19013d4899d31a7f6b665ce6d aecc9d83d24deb1f9e24d4b153009a22e5f24028,,Fix spelling errors detected by Debian QA checker,The Debian QA checker detected some spelling errors while submitting the package to Debian.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/756)  <!-- Reviewable:end --> 
dartsim/dart,745,2016-07-20T20:20:01Z,2016-08-06T14:57:13Z,True,2016-08-06T14:57:13Z,3ccf020789c98b5a1c84b9475c80850c79c11a21,55,27,03d3cbdf158425bf1fef033926b7dd5d2537d120 ed7ec817f16fd66990cb57de705a095bbbbf92eb c1cac77b36c5a566e4d1f7b78f84818f4a590799 224b56fe8a3c9f68cffeead3ad722a70d381b4bf 47700e279537df846c5217ea1760b606bbbc2ffd e55e4d9d24a4982d329ce6171992b332ee655c91 d8c7f07e8c85f9baedf28f284a6c441f757950d6 602f983ea69f2f9ec2c4e92ef62ea0095f6ece4c 05c59450992788c173f87f4015acefef2238024f 9ddb31470bb0a1fc1932ad3615692bf9cba4b158 742a5ef80b26902fb513f039565281c15939e8fc 686e14c9d70c7bb3430ea2a3145aa8443c895c7e 2523d37fcd712ae76c17d5756bc8cdf125972d26 eaa10ae2b4e0d29de003921d868f0c62e12ed0dc 2996db414d2e784e3523065496dfa5bf5ce3da4c ba20021d2219502f27f5a727db066c653ee1e2c1 2b41c3da6cd7c494b02da803d69f46ce95bb3686 64ac82cb66061066359c00c32c2d10604fa7584f 8c68d52d35b79a90bc694b6a6d3e62d6ef89caf6 7b886b7d04186e0131bd464fa49a42d9a529401a cca9ff0015893bb5119b6431cdc18bf5367791cd 5e7d1f4016a8791b30f375d37019e7fe5c2c3ca5 5cf6bfbc15f599a19013d4899d31a7f6b665ce6d aecc9d83d24deb1f9e24d4b153009a22e5f24028 38a068c21766709fd3abc207f0f9dd8fd1a45de0 1e35c39862d584b667352cc8f0e62ef500b05177 6eec6e10e1b544bb6298c5977bd929d0cc5f289e,,SphereShape,as proposed in #724.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/745)  <!-- Reviewable:end --> 
dartsim/dart,747,2016-07-21T01:59:13Z,2016-08-22T18:36:29Z,True,2016-08-22T18:36:29Z,284cd3a6e33faf231c85c4cd6aa402e170461861,65,37,3482c35f933fcd4fbab8150b966b45bb42d3b9ba 58923c643ba456357f4ad0e2510badafd627d3d0 5bd784c1fe6c4432b0a2575bde168ba98bba624e 6511375ea8a2c7a54f86ca778fa5d012ef9aa7a9 b7ffc2e785eb256c39024b90aeb8289d375b2f68 be346b8b0cad30c2a0b39e66d6d8132f0e5d494f 4f632652a27568da49c1f077c22a45ae6f8fb677 c89a6860fb5e2528d69d5850409ec556b070ee09 dd1f251d84f595a1a381707bb43d690d137ff5f7 0f6f916ecb9cd9159913152bf36b6e06e94bd3ba cce496e90b6f5528f3662a3a6057e44fcaa623a8 04d9f9627717e1107cf5d77ce85f876d4d08545b e39f35bc0f6c6b838fb1501066344c9af30ae877 9702228e49029850e242dff5aff46a99e84baae4 a3e783dbebd4af3397dbcb0eb8162b397fefe48a c40f39fbe8748429c20859f974918046e3c60409 a3220d508309c9c6158544abdd28f199802ea1e2 cc485a24ae65bbf3c3cb13924a5976da056e5cf5 f6084471106b545d4fd39fc588ee227785f5d440 da1b139967a74a41a2ef7015b1b4c5d8c1346237 9d914c3447715a7339bb2ce6ffe0991211d4c18e c8cd73b1c1c0dc5e04b195795635b8d663c9c6c7 01e88dd4a0768b8ac42f6a2cb6211d1960ec3f8f 3cc569864917aca54448ca6e86a4e8b8d9064fbc c441bd884a79a8c238088f49887ccbbc030a1145 139e9fd11a774e999cbbf2fe14635c48f8b827e3 60461c7395d9a1392e1329796923c9765ad23261 602f983ea69f2f9ec2c4e92ef62ea0095f6ece4c 05c59450992788c173f87f4015acefef2238024f 9ddb31470bb0a1fc1932ad3615692bf9cba4b158 84a44fd8433afb650f76e1e7263eb6f9a1743d4c 2523d37fcd712ae76c17d5756bc8cdf125972d26 eaa10ae2b4e0d29de003921d868f0c62e12ed0dc 2996db414d2e784e3523065496dfa5bf5ce3da4c 5d9f64d05f2d0195fe96e9ac01700f0b851183d4 8adf64b19914af1c4df208e8403e95e4a63f2f70 186caed054dc0ea7be332b985a9aaf943b8f1373,,GenericJoint class,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/747)  <!-- Reviewable:end --> 
dartsim/dart,760,2016-08-25T18:49:35Z,2016-08-26T13:22:50Z,True,2016-08-26T13:22:49Z,d59cd328e8a396e7b757f41d7ef5355760311043,1,1,b86aa2e0ae280247423cb81650239471a6a70e18,,Remove explicit SSE2 compiler flag,We add unconditionally the SSE2 compiler flag when using GCC. This is making [non x86 arches to fail](https://buildd.debian.org/status/logs.php?pkg=kido&ver=0.1.0%2Bdfsg-1).  The bug report [comes from Debian](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=833817) and the developers made a couple of good points about it: - SSE2 is enable by default if you run 64 bits on x86. - We can not assume that i386 supports it since i386 for Debian implies 686 (or greater) and SSE2 was introduced in pentium4.  I think that the impact of removing it is really low.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/760)  <!-- Reviewable:end --> 
dartsim/dart,759,2016-08-25T01:08:49Z,2016-08-26T13:26:14Z,True,2016-08-26T13:26:14Z,9d7a51cb1a0bc83cf9cc71bd85184d92393cfa2c,4,2,6d40cb0f86f90636208fe52d106f0fe3dd8a482a ad2109c3727a0735d1b8351675327085ba84afc8,,Backport 749 to DART 5 1,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/759)  <!-- Reviewable:end --> 
dartsim/dart,761,2016-08-26T14:18:55Z,2016-08-26T17:41:06Z,True,2016-08-26T17:41:06Z,dcf0d7b493d6102ab26effb772455e2c3278b349,6,2,b6b1b136bc460caf9a4a9a1dcd13ab6bf2d0bd29 f13f319322b88d69a70f99f7c6119a69cc751ef7,,Link to flann properly,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/761)  <!-- Reviewable:end --> 
dartsim/dart,763,2016-08-26T19:43:28Z,2016-08-27T05:15:12Z,True,2016-08-27T05:15:12Z,fa69d5ef3769004ad57cda01d242cafe16ad06de,4,5,5d27f88957050f933a61cdae92ea9847cf0992b6 6077815eda9670e5ba5d9d7726670db5dbcbbc5c da5e45118841753e2a602ab3bcdf865d22269f22 23c7a2772dc36cff7537b28481ee102190b21ab4 5b7474937f77c5628f4d210f81245bafe6c2568e,,Fix direction of contact normal of BulletCollisionDetector,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/763)  <!-- Reviewable:end --> 
dartsim/dart,765,2016-08-26T20:35:26Z,2016-08-27T05:15:19Z,True,2016-08-27T05:15:19Z,f8214aa426a8191c208781df1cc31decaabec645,2,4,b122302cdf79f28f5297e516d3716b572eddcdff 59ab65f32ac64c3072229de2e08df648d48d8cf4 73a4d38f80410d9065021a131cdeda464cd281c1 f0bfd5bf297f911942cf8afc1a07ee12c0eb756a,,Add cmake option that enables building DART with SIMD,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/765)  <!-- Reviewable:end --> 
dartsim/dart,764,2016-08-26T19:56:13Z,2016-08-27T12:30:06Z,True,2016-08-27T12:30:06Z,1c1f4583e3d8766bb1db67ae8d4a302bb9ce96e6,10,8,b7e9fdd62e12c8c00cc0f28b04a2d8a6863315b3 b3c21005ef18876db8c7a198b9ec60ad4140135a 20457320836132d1555f398e216a5d484b31590d 6fedd1057d7bf1a525bd5258ab59b5441c38a90d 1a5d9593fa0044f984e2799011a8b0ece6eb48c7 7c2c3a352eff6d7bb76bcc2744aca0e4c0cb8811 eb6c050df22c5627bd66d703eadd612ba43cac6a f3910c88c2067c94c0431f338a7d0173303d74a7,,Use btGImpactMeshShape instead of btConvexTriangleMeshShape,This pull request switches to use `btConvexTriangleMeshShape` instead of `btGImpactMeshShape` for mesh shapes to support not only convex but also concave meshes.  Related issue: #762  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/764)  <!-- Reviewable:end --> 
dartsim/dart,766,2016-08-27T16:45:16Z,2016-08-27T22:32:34Z,True,2016-08-27T22:32:34Z,6c313683a4d595c541ceb971d4b6327b578a1753,6,3,9060b2e583b1822e80d0cc70f130f81248f94417 8e8b833960a2a692d021c7d8c7494dd3cf4256d2 7b873824defc367c4d812b1bc90dd75a770a5dc8,,Support urdfdom_headers 1 0,`urdfdom_headers` 1.0 [is released](https://github.com/ros/urdfdom_headers/releases/tag/1.0.0) with API changes. The major change was replacing `boost` with C++11  which is a relatively small change.  This pull request adds support of `urdfdom_headers` 1.0 using different type aliasings depending on the `urdfdom_headers` versions.  This should fix [the build failures on Ubuntu `yakkety`](https://launchpadlibrarian.net/281296686/buildlog_ubuntu-yakkety-amd64.dart6_6.0.0-0~1541-daily~ubuntu16.10.1_BUILDING.txt.gz).   <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/766)  <!-- Reviewable:end --> 
dartsim/dart,768,2016-08-31T04:16:29Z,2016-09-01T06:47:57Z,True,2016-09-01T06:47:57Z,57de024a16bc5729331465f0ace6aa2f30d6a59d,4,4,503d9e60f3359060181498d45afebba22c412284 86058d6229fa3568305a3ee27fc6e5f073dd982f 3f27ba290060a344ca32c1943081f887a739c6a4 d51d5c48a40d631ccc344736dd9e308372cf693e,,Show class members declared by macros in API documentation,The API documentation generated by Doxygen hasn't displayed when they are declared by macros. This pull request changes the Doxygen configuration file to show the missing members by expanding those macros. Also  all the inherited members of a class are now listed by default (we had to unfold them to see  which was quite inconvenient).  We still have a bunch of warnings from Doxygen. They will be addressed in later pull requests.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/768)  <!-- Reviewable:end --> 
dartsim/dart,769,2016-09-23T01:18:48Z,2016-09-24T16:51:19Z,True,2016-09-24T16:51:19Z,dc1ecd65926fb95af734b3be7fb67408c9586635,32,11,e39435f91fe2f326f290e7fbed3d0ea333ddea2c d471d58746727566b5f964c06c3c9759d91a63d7 31bf69d8e89deb27b53289cccfd713d29509a77e b38e31961571f302ce316a196144acbf091e0af2 6ddc1016cfe9f70d9f979e7224a74e0699738d9f 3ede3b28d6d46ba03cb09f1d1ba496f7e26348d0 47d0e4ab0f72266330017a9216d62d1da5fcf917 b7e2d07141f86607c484a27f5fd0fc1cd53403c4 37586a85d8b572d41cd17d6c5dac1b1bf6c80767 eba7a31aad6e0f78350a0a12b801c9de9fe2dbe4 f3889bdc2b8c7198d399c3cb49ec9551d10b0d15,,Add CapsuleShape and ConeShape,This pull request adds two new shape classes: `CapsuleShape` and `ConeShape`. Currently  only BulletCollisionDetector support the shapes. Both of OpenGL and OSG based renderers display the shapes. Also  these shapes can be parsed from SKEL file format. Here is part of an example skel file that contains the new shapes:  ``` xml <visualization_shape>     <geometry>         <capsule>             <height>0.1</height>             <radius>0.05</radius>         </capsule>     </geometry> </visualization_shape>  <visualization_shape>     <geometry>         <cone>             <height>0.1</height>             <radius>0.05</radius>         </cone>     </geometry> </visualization_shape> ```  Additional changes: A syntactic sugar function `Shape::is<SHAPE_TYPE>()` is added that enables us to check the shape type from a `Shape` pointer in more convenient way. Here is a short example code:  ``` cpp auto shape = bodyNode->getShapeNode(0)->getShape(); if (shape->is<BoxShape>())   std::cout << "The shape type is box!\n"; ```  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/769)  <!-- Reviewable:end --> 
dartsim/dart,744,2016-07-20T18:58:28Z,2016-09-27T02:29:22Z,True,2016-09-27T02:29:22Z,59eff53b50b8230f9b84b8bef1e89e94643d393f,27,18,51d31a1e35a306cf597f2f3b46ea4239876e6093 554a01da94d10a3794035623088be56e8a6e9814 784bcbb3a0e30fb22247f9a7d62d5a1991da1911 a2a226356a166666d2ff73ffaed31e25792e0ace fd53ab64bcf12e017e809c05a68bd64a9df74186 487a8fec4af50fdeb82a0fe3e4b16b64756450a5 a4007cfadb835f9b432dc2be3806e5bce0361495 e0207271dd3bf64368f2f4903756146224569d06 19d06e159cb5b1f2e17087495cc6e6e729fdbfe4 a2881d9a390ff746b83e5dc3464838f6f012c35d 6135739fb40706008a03c7c7a5330671d8179d12 ad151c86695da74fb5adc1278a22c71d7fc25c8e 211ac63264d32ffb29660bd8e5b35ecf170649d4 bca391506e38b162ac4c3eea6a7949374c7dac8b b38d9429f58b155e7cd690b92948509182feed29 019e478c0c1523d7a2dbf0979951f9155c82f599 7a868d419db08c5d343fe4635feb88790ffdd8d7 c239ad0b3d4cf30f51a2368980f12bcac4ac26e5,,Distance API,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/744)  <!-- Reviewable:end --> 
dartsim/dart,770,2016-09-24T21:28:41Z,2016-09-28T11:49:45Z,True,2016-09-28T11:49:45Z,ca0b8376db400f265d9515d8307d928590a1569a,13,5,e354c06c575935e9f8c8df3732c243aa21d4f792 4cd2af314c138e29f426717cb29eecd3041781a3 258ee752ef71603976d1f49e9a9c0f832f9137e7 11367951fb2cb44fa1eb1bdde4f8e7de8d4e5d3d f5a49ab51e0de77e7ac563dcc904989a82ff8df7,,Add MultiSphereShape,This pull request adds new shape class `MultiSphereShape` inspired by `bullet`'s `btMultiSphereShape`. A multi-sphere shape is a convex hull of a collection of spheres. #### Collision Detection  Only BulletCollisionDetector support this shape.  #### Visualization  Both OpenGL and OSG merely draw the sub-spheres instead of the actual convex hull. This should be addressed in the future. #### Parsing  This shape is supported by SKEL file format. Here is part of an example skel file that for a `MultiSphereShape` with two sub-spheres:  ``` xml <visualization_shape>     <transformation>0 0 0 0 0 0</transformation>     <geometry>         <multi_sphere>             <sphere>                 <radius>0.05</radius>                 <position>-0.075 0.0 0.0</position>             </sphere>             <sphere>                 <radius>0.075</radius>                 <position>0.075 0.0 0.0</position>             </sphere>         </multi_sphere>     </geometry>     <color>0.6 0.6 0.8</color> </visualization_shape> ```  This figure shows all the shapes supported by DART (from left: box  sphere  ellipsoid  cylinder  capsule  cone  multi-sphere (two spheres)  mesh): ![image](https://cloud.githubusercontent.com/assets/4038467/18811545/5fbd64f6-8281-11e6-8b29-14837045541e.png)  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/770)  <!-- Reviewable:end --> 
dartsim/dart,772,2016-09-30T17:59:50Z,2016-10-01T02:44:23Z,True,2016-10-01T02:44:23Z,f4f2e7a8a5ed34ca8c7245f0d0ee6f82015a6889,1,1,8036bcb9dd70074d0c5ec4117d63b8bd7250ca49,,Minor change included memory from FCLTypes hpp,This is only a minuscule update. For compiling with fcl-0.5 needed to include <memory> from FCLTypes.hpp.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/772)  <!-- Reviewable:end --> 
dartsim/dart,773,2016-10-01T19:51:10Z,2016-10-01T21:23:26Z,True,2016-10-01T21:23:26Z,cc41247d75f432268111473e9277c61ff31f2016,2,2,674f247105d5733aa7a490e9f1e219b252992c29 573f14c8ea131b2f2099fbf6df6d065f6a283bf1,,Fix incorrect file search for math detail headers,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/773)  <!-- Reviewable:end --> 
dartsim/dart,774,2016-10-02T01:06:02Z,2016-10-02T01:56:00Z,False,none,d4a191cb595e341dd1e9fcbb043f3a6621b2226d,1,2,f07bb23278a6116f806da677f35c02c52414f089 21b8cd5af21e60337badcb333fe9a529372787c5,,Sehoon sdfparser,This branch fixes minor bugs of SDFParser.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/774)  <!-- Reviewable:end --> 
dartsim/dart,775,2016-10-02T01:57:56Z,2016-10-02T16:19:20Z,True,2016-10-02T16:19:20Z,3fc8e1759a55984dd6b26ed09db9e0aa078a2a9b,4,7,f07bb23278a6116f806da677f35c02c52414f089 21b8cd5af21e60337badcb333fe9a529372787c5 7a4ca025ca298fcfe3e67af1f7d5b3e88c610c86 cc16b1c5125985594f615c16d38493f5877b7dfe c19dea87172388c65b1a323c651e5eece198057a 8b83059221bbf5ee81cd266b4af1ac551c88167b 46c81092fe4aac7232c87604370fbeb677409301,,Sehoon sdfparser,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/775)  <!-- Reviewable:end --> 
dartsim/dart,660,2016-04-08T21:27:43Z,2016-04-11T12:04:53Z,True,2016-04-11T12:04:53Z,18549158853f3e0ee654f88c392f8129ec8d2e6e,9,3,5df66bfcfc2da09b6918360ac1c4a5fc6a650b3f 69936f50fcbde2adff0fdeb8ad5f87c03d247737 dcc9b4eb10959f2a011563f6704c163a02c8e359,,Support for Bullet built with double precision,Bullet requires a pre-processor variable to be set before including any headers to determine whether the library was built with single or double precision. Failing to do so may result in a linking error.  This commit: 1. Forces CMake to use CONFIG mode (`BulletConfig.cmake` shipped with Bullet) instead of MODULE mode (`FindBullet.cmake` shipped with CMake by default) in find_package(Bullet). 2. Updates references to `BULLET_INCLUDE_DIRS` and `BULLET_LIBRARIES` accordingly 3. Test whether Bullet was built using double precision floating point numbers by attempting to compile code that produces a linking error when the necessary preprocessor definition is missing. 4. Set the necessary preprocessor definition in `config.h`.  This fixes #657: it turns out that Homebrew builds Bullet with double point precision by default. 
dartsim/dart,777,2016-10-04T18:59:20Z,2016-10-05T02:30:02Z,True,2016-10-05T02:30:02Z,39c04b94b6e6f005d139177eab77898bd51685c7,10,2,c6d5b2d8a36ea1228e1d78701045f2acc1e4c88f ce4ade37bb02efea28d83b8b36c81d20150a5222,,Support for Bullet built with double precision backport 660 ,I squashed the three commits of #660 and applied them to the `release-5.1` branch. Closes #776.  Bullet requires a pre-processor variable to be set before including any headers to determine whether the library was built with single or double precision. Failing to do so may result in a linking error.  This commit: 1. Forces CMake to use CONFIG mode (BulletConfig.cmake shipped with    bullet) instead of MODULE mode (FindBullet.cmake shipped with CMake    by default) in find_package(Bullet). 2. Updates references to BULLET_INCLUDE_DIRS and BULLET_LIBRARIES    accordingly 3. Test whether Bullet was built using double precision floating point    numbers by attempting to compile code that produces a linking error    when the necessary preprocessor definition is missing. 4. Set the necessary preprocessor definition in config.h.  combined with commits that Reverted to using Bullet MODULE mode. and Minor output message update for consistency  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/777)  <!-- Reviewable:end --> 
dartsim/dart,779,2016-10-04T21:57:04Z,2016-10-05T13:31:11Z,True,2016-10-05T13:31:11Z,6f9e490ba0819972ca2775ee916f3d15725a6a34,22,2,795d4c181078c82ada2e19346b3b7dfdea31d336 37aabcdba0bbbe52d8acf4296fe5c32fbf956aad,,Revive Shape getShapeType for backward compatibility,This pull request revives `Shape::getShapeType()` for backward compatibility that was malfunctioned in #769.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/779)  <!-- Reviewable:end --> 
dartsim/dart,741,2016-06-28T20:59:09Z,2016-10-06T17:36:59Z,False,none,6d955ecdfe98c105261d9c30723dcb5a3b57af4e,23,15,3c0cc798a79847a794cd4cdc6565fcfddbac3a19 ae9d1057a554c49a42af2a97aa67979aea8c4d6c 66a37156f5d29deac713c867bab69fed57407b68 4b2773eb5fff4f9ca91e984cef8988a6e962803d be8c286fa1167eaf611f35a7edef69669c4de612 01dfd3f2cb4cce3909a43097434fcf118abc8b65 e106e27dd3cc4b36bf7414ca344ee04d372de647 74379b249cb0f7a58699313f3648b8d7a80ab747 af34c65d99e09e15582f7a8b1cf755e00744b38d d3e62b7e26725b42bda4822ed662a3bfca6bb998 3cf17bbd0d5214d98d2ad05d8280bf132adbd68e 7fa6ff03db880412b607b6bc009cefb068c6053c 3e8617a8ddf214062c03a42dcda42291ac46c62d 02c38fb98b0526764527372f0812b19755ea8b11 be1875ab72a3a8bbca71ad964cfe0b4cffd1c8d2,,Packaging 6 0 2,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/741)  <!-- Reviewable:end --> 
dartsim/dart,782,2016-10-06T17:40:25Z,2016-10-06T17:41:01Z,True,2016-10-06T17:41:01Z,c8852c087aee32ecf4a3e6a0316b3d1df1b62cec,6,2,328c005978c9b8a316bd3b0ae2249d61b53b0e21 2ba0848d598858321971e810130ecae78e362322,,Packaging 6 0 1,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/782)  <!-- Reviewable:end --> 
dartsim/dart,783,2016-10-06T18:07:27Z,2016-10-06T23:18:07Z,True,2016-10-06T23:18:07Z,c935862f1f30dd4d1d8aef3d4d9525359e6d9589,4,42,fe3e6fe8829758151758c1d6cb41bbab4504ec99 0656ad9ad7852d6faaa1f586e8c6238337f53b9e a29a3e4dabb80b88d9ce54ebd5cee983d8f9d5c8 7df1a700504a73473b9aefa4db3942b15729fc30 fb664e76d3d066aa4eadd75d3836ca8287587f92 7d5d074bc35cca39b1aa1172b0cd157cfa90496b 2e73697912495f4cd6b7797874d8d03910d50f87 580e188f6dae5c77721ba2eb72cf23c748654f3b 8bc2e3a8de7581ca778af58339ada4f176e65370 6404dda64b2005c032ed5234d6723490c87feb97 e4b8aa2d78eadb2e61e306dbbd7ad507fa0c6906 388b847bdb9730a71cd9f94b4933940768632624 47b9af719bc9820970ef4fbce58b8751ae684e6a 30ebde3b324384841f96b5720515a7885c94cc33 d42b13ae5cc46f70c4a6d1fea8da7f1ab7d43574 8134697b71b2a52c1af6fede2207dab7bdd85adc 6ed0aaad1786859cdcb0fd3c1e3b2decf6f4e56b d43e084f28e7bba5844cf60e86b8986bf6b3abd3 90978a214406c6ecc48842c681939d19a97577c7 b8d4bcfe5a35b112ffd71f1ec04a578dba214dad 4bf779f9de222f1d3779b7f5f60c0ea903a4547a 1a8aa7a2eacc3acf135f4b8fb2541bcde6a37c11 21f246e35e897383aaae427dd6dfb253f811efd0 7d405892352ea7a894c27d4b42c01651c5c0e296 61fbee8a703ac96114082deae59ca85c1d730ef9 6d40cb0f86f90636208fe52d106f0fe3dd8a482a ad2109c3727a0735d1b8351675327085ba84afc8 9d7a51cb1a0bc83cf9cc71bd85184d92393cfa2c b7e9fdd62e12c8c00cc0f28b04a2d8a6863315b3 b3c21005ef18876db8c7a198b9ec60ad4140135a 20457320836132d1555f398e216a5d484b31590d 6fedd1057d7bf1a525bd5258ab59b5441c38a90d 1a5d9593fa0044f984e2799011a8b0ece6eb48c7 7c2c3a352eff6d7bb76bcc2744aca0e4c0cb8811 eb6c050df22c5627bd66d703eadd612ba43cac6a f3910c88c2067c94c0431f338a7d0173303d74a7 1c1f4583e3d8766bb1db67ae8d4a302bb9ce96e6 c6d5b2d8a36ea1228e1d78701045f2acc1e4c88f ce4ade37bb02efea28d83b8b36c81d20150a5222 39c04b94b6e6f005d139177eab77898bd51685c7 b4004a6baaaed80a938d6b32ac664bfcfdf9b937 324f116c0da4587eca7fede865a201f216365422,,5 1 master,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/783)  <!-- Reviewable:end --> 
dartsim/dart,781,2016-10-06T17:09:27Z,2016-10-07T01:59:14Z,True,2016-10-07T01:59:14Z,fc7644a6e3c578ffc9cf0038eb1da13f606dd086,70,39,659feb07c7d1d39fe41e06607487e0acd8164824 3a67ef4d0ce50990e8ad0f7cd826b70578fd81a2 3dec2a582406451b22bc6fc5cc50645bc90f1b9e b2e39b4e3e8c288ba34215fc861f9e1b66a774f7 a5d23d8b50c8de6b1a45e616610b7539c6be9390 c27a45e1b5542c892c658254784f4afe7348bfbb f4e55c3f4a56492bddf38e56fb48cf085b569097 651e1c7c90ca893da23264ad2848f48e9be3bbab 3f269ea8cf94cb7fc19bebfcae593c33333f1925 3b431b94036f6cf5e7bfee7b57d57d7e8ba87e50 3cfaf1d5dfb0c2a8bf3e9cfd844aae8c8c438519 9c502314d97f507425a0e08f22a1e7672eed2a5b cb3b44ab43de9fae22550ae5b3bd0f8bd6136444 838ad2cae046ba4c10ff4eed47942b4a827b9a59 f76cefa5c865b7c0518b07e38621c05aaf60f4a2 5bee2c49ac917e2277f1c1a6a5bd51672a9e6d36 59b00d6aa7cbbea871cd928907ca53fb2a29be9e 6d206155f916ffa56cea31919ba05a081ee51f5d fca0156798450f111c7615df05745b1ea992f88c d525ee951641cf7c378eb04fc83c258a00c9342e 143d71dc5804f7a915fa7afd95b05e408b749a11 2ab7e1acffe39f9b68af094b3ae3be59d98d4b57 2d2d4c7f5a10f8b90e49e158c18afb64d420aba7 fbe9a16349df1f9c580ce5a81eabb3f177caee9c fe17b3b7c21ff18584944ecdda28939a58ea9771 68b4d5aec200bc663a04a4f72fca4b4960302904 6d09c3a5d0cf76eb2d5218e822695d8dc5cf53e5 f7a398a5dd1a16a77210ac72b5746d7b4a7ede7a ce160834d3b1807515afac8bd8d9297e1695b10b 41e1392211770a10f2af55d9386be314df012476 02b01dd20e2c06095ec657dc6dd0530f33d34510 abd6c05878f5b91cfc8776a2d63544dbfb2ae475 b6bd9fe4f63a7a18f408d076a2430c7a4fe2aeef 5646800888a517040ba1a6e3ce7d8ab68cd7cef5 439c4114f63157e08bd35296c4811fb18eff9599 272160ddf9d230eb2d052eefa70874a08fdf1a0f d85295a0e81449bc4fb1a722bc2f20483da26644 b4554ae920cf68ec57acdb74aea7e2eb5b98bcf1 726b784462e4d540214272b6999acc306718e23c,,Add osgAtlasSimbicon and osgTinkertoy examples,YouTube videos for [osgAtlasSimbicon](https://youtu.be/Ve_MRMTvGX8) and [osgTinkertoy](https://youtu.be/FiKtZWShv2M).  Subordinate changes: - Move OpenSceneGraph based examples to the examples folder - Use [ImGui](https://github.com/ocornut/imgui) for 2D graphical interface - Add two template examples: osgEmpty and osgImGui  Also  we have a good news. Brand new [DART website](http://dartsim.github.io/) is now open!  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/781)  <!-- Reviewable:end --> 
dartsim/dart,551,2015-11-06T03:51:51Z,2015-11-06T14:43:25Z,True,2015-11-06T14:43:25Z,b677ff5f3727c1c5c180b01fab24755e4f45cce0,3,2,0ab5d773d4fd824cf7c5f6ee3fec5c5cbb0175e5 b961d29cbce2bf7231c0cd2612146a47885215fe,,Packaging DART 5 1 1,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/551)  <!-- Reviewable:end --> 
dartsim/dart,784,2016-10-07T03:05:15Z,2016-10-07T19:37:49Z,True,2016-10-07T19:37:49Z,fd0befdba4fc3f1685150885f5a3129109eb51d7,3,2,2ee0850046d04bd46c7c43e16b8d12ab5cac201b 32d9f878a03b9b3af819d0c5e8cbb1880ed5acf9,,Packaging 6 1 0,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/784)  <!-- Reviewable:end --> 
dartsim/dart,785,2016-10-07T20:49:39Z,2016-10-12T00:35:30Z,True,2016-10-12T00:35:30Z,ac990a173783b7d590205b66442a67846292d986,3,1,08ef7589630d653795af98549c3bdce9c947daa8,,Packaging 5 1 3,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/785)  <!-- Reviewable:end --> 
dartsim/dart,786,2016-10-09T16:44:52Z,2016-10-13T13:04:12Z,True,2016-10-13T13:04:12Z,458319efbe1ee8b546bcac883356962b3d7f8e8b,47,21,0302acee220c03a8585ec7a668c05274b6d1923e aecbf8543ddaa87527891b6250eb53df84091b4b c8513a849049240bec9a90b6d84dbb0d631d4e11 2ca4ae2c12afb9826e87de6606dc4e1704030c18 425d9ad9ea2dd926f37fb34c1a8e7c0471b79592 f0374b7775cb8ee81b12c7e903e12c1975774c65 d82d49517330ed1f4609efe1f34ea7236f847b85 2ba310834ed4fd42eb18c37b04197229ef45dee8 286aeb8a856fc922cbfd771827391ee7a55f79b9 1cfbe1a72de7b29f1fa83bdb4cf8c68c035604cc 0f9d4cfcf33c0dc8bc32c29e390acdc9ca1c02f6 3509ee69142afb36583b425352e1da7c83f68386 e7f78b87b588bab14a0aad80275aab7b12edb658 5f6e47d92db0a29ff20ece37f5fca2ef5ffbb93a 4fc45e2ab2579d329a051eca19443c80ef3012b4 83bc548e0f38653ecb43b17c6fb4f0ba10d3ff19 7cf9118c84fa7fa40a58eb0fc370773609cc150c 40aa795082b9dba00a071fc4c02cf5ebfbbddb4d 119fff95899bd93c8b854bec0322c1b49bd7dd54 42c7003ef500201a70babd2acc49e9d062e8db5f be0567b3319fe0c3a1f63a6da2de2928f7ab5766,,Export each CMake component target as a separate file,Since #652  DART is built in several components depending on what the optional dependencies are installed. However  all the exported CMake targets are shipped in a single target file  which is problematic in finding DART components when the DART packages are partially installed. The single target file always attempts to check the binary files of all the component while some components could be not installed  and it returns errors in that case. This PR is to fix the problem. ### Main changes - Adopted component system of [personalrobotics/aikido#107](https://github.com/personalrobotics/aikido/pull/107)   - split target files per target (previously single target file was used)   - Introduced _component_ targets. A component could have multiple targets.   - Note: Component `dart` is the default component so we don't need to explicitly have it `COMPONENTS` variable in `find_package`. For example  `find_package(dart)` is identical to `find_package(dart COMPONENTS dart)`. ### Subsidiary changes - The bullet collision detector is packaged as a separate component `collision-bullet` (or target `dart-collision-bullet`). Component `utils` now depends on `collision-bullet` because `SkelParser` needs to parse the bullet collision detector. -  Introduced CMake option `DART_VERBOSE`. If it's `Off`  which is the default  CMake prints minimal messages like:      ``` shell   --    -- ============================================   --                 DART 6.1.1   -- ============================================   -- Adding 9 components including the default component 'dart'   -- Adding 33 unittests   -- Adding 25 examples   -- Adding 8 tutorials   --    -- Run 'make' to build all the components   -- Run 'make tests' to build all the unittests   -- Run 'make examples' to build all the examples   -- Run 'make tutorials' to build all the tutorials   --    -- Configuring done   -- Generating done   -- Build files have been written to: /home/js/dev/dart/components/build/Debug   ```      If it's `On`  CMake prints the full messages as [before](https://travis-ci.org/dartsim/dart/jobs/166222750#L1017). - Used CMake _property_ instead of _variable_ to manage global values ### Caveat  Edit: Let's stay with using upper case as before and reopen the discussion later if needed.  ~~Adopting the CMake scripts  the CMake package name for DART is now lowercases  `dart`. Subsequently  the CMake variables use the lowercase prefix such as `dart_FOUND` and `dart_INCLUDE_DIRS`.~~  ~~It wasn't intentional at first  but I'm starting to be inclined to use lower cases for consistency with the library name. Not sure what's the preferred way  though. If we use lower case then the consumer project should find DART as `find_package(dart)`  which breaks the backward compatibility.~~  ~~So I think we should do either of:~~  ~~(1) provide both of upper and lower case versions at the same time until the next major release. (2) just return to the upper case. In this case  I may need to ask help to @mkoval. I tried to tweak `Component.cmake` and `DARTConfig.cmake`  but it wasn't clear to me.~~  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/786)  <!-- Reviewable:end --> 
dartsim/dart,787,2016-10-10T22:39:56Z,2016-10-13T17:41:05Z,True,2016-10-13T17:41:05Z,8e19a4d098063e967f38e13bfa9df2d92c8a1a30,58,8,bea8b7fc1f78c03563bc47da782abf9edc25261a 79ef9497f388d8e7854c2da05ae85f50e328d626 7c1a834fe1fe911835e874fc2c840fae000cd88a c8674e311583da3b1d940f641e3a49563a3b7d6b ab2cd237d62fb42017fb838b0b041d114d670dd5 151a87eb584b2c262e9c743670f402b665f0eab9 3f489ba5ea097e2c709e00c80f3a8395b1b447c9 c4410db0818337a6f9ad77ff1f0d9c43b6f8a537,,Distinguish external library files from DART code base,### Motivation  DART contains several external code files  and they are placed in the DART directories without distinction. It would be good to separate those external from the DART code base for better maintenance. ### Changes - Move external code files to separate directory (e.g.  `dart/external/THE_LIBRARY_NAME`). The being extracted files are `ImGui`  `lodepng`  and `ODE` (the LCP solver part). - Build them as separate targets and components - Link to the targets if needed ### Note - #786 should be merged before this PR. [Actual changes](https://github.com/dartsim/dart/compare/components...external_libraries) of this PR - The targets are **intentionally** exposed to projects that depend on DART because they may want to use the targets. For example  `osgAtlasSimbicon` example uses `ImGui` through DART. - One positive side effect of this change is that the code coverage measure would be a little more accurate since we don't check the external code files. - The headers of the external code files are no longer listed in the _directory headers_ (e.g.  `dart/dart.hpp` and `dart/dynamics/dynamics.hpp`). We could add them when we find it's needed.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/787)  <!-- Reviewable:end --> 
dartsim/dart,789,2016-10-11T22:50:09Z,2016-10-13T17:41:17Z,True,2016-10-13T17:41:17Z,d08ce8adcfaddbcc3a861726079fdf9c6eb7e23d,39,6,5421721ea1a3b29854854565378587e2a910a2a6 191fb657a5852663b0b72d8c566e9bb8190907f8 141d303830fce9ad768c889e87db17acefc45d23 2f71cf295a7acb2d3426667da992eb0060b894b1 f3c119637cae0eb6eb9af95d845b603f7d510597 646114ccdb0ab0c94c7f41ca4e93a2f4779f9997,,Categorize tests comprehensive regression and unit,### Motivation  As the code of DART growing  the number and size of tests are also increasing. I think it's a good time to categorize the tests depending on the purposes. Here I propose the test categories as: - **comprehensive**: high-level tests to verify combination of several components correctly perform together. - **regression**: issue wise tests to verify that the GitHub issues are still fixed even after further changes are made. The test name would include the issue number such as `test_1234_InertiaBug.cpp`. - **unit**: low-level tests for one or few classes/functions. The test name would be the same with the testing file name or class. ### Open Issue - Naming. Please let me known if you have better names for the test categories.  This PR should be merged after #786 is merged.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/789)  <!-- Reviewable:end --> 
dartsim/dart,790,2016-10-12T21:02:33Z,2016-10-13T20:35:18Z,True,2016-10-13T20:35:18Z,277d2a44b1983b32452ee6192e0a63b147e419cd,14,8,6392d9e8357210f1280401fe0367496555eb7fbf 32807c684bde227a89c14cc61e26833d4d2622be b3731ad60bff497d066a3ce5e59feda061fb20b7 62d7349f90ebcd3cd8f0b77879d7c9847e3c1a46 bdfd7105d533545e89fba3f181ef6c4f988dfc8f 4c5100cf8140ff205dfa902f4c34e516418b7b5d a5c3d43c3e5c4324d7ffcb0a4708fd0f83ecc935 16b562b9bfb0c00bde8c3c215738bec67c062154,,Disable DART_ENABLE_SIMD by default,### Motivation  When `DART_ENABLE_SIMD` is on  DART enables SIMD instructions by adding compiler option `-march=native`. This compiler option [enables all the available SIMD instruction subsets of the local machine](https://gcc.gnu.org/onlinedocs/gcc-4.8.0/gcc/i386-and-x86_002d64-Options.html). This way has two caveats:  (1) We don't convey the compiler option to the DART dependent projects (e.g.  Aikido). So the DART dependent project don't know whether DART is built with SIMD enabled  and it could end up building them with different SIMD options  which may cause segfaults in runtime. I guess #780 is the case.  (2) Even though we pass `-march=native` to DART and DART dependent projects  still they could be built with different SIMD options if they are built on different machines as @j-rivero mentioned in [this comment](https://github.com/dartsim/dart/pull/760#issuecomment-242502019). This could happen  for example  when Aikido links to DART installed using `apt-get` (the debian package at `ppa:dartsim`) and your machine's architecture is not the same with `ppa:dartsim`'s one. ### Changes  This PR first pass `-march=native` as the target compiler option to `dart` target so that it is automatically added to the consumer project by CMake when `DART_ENABLE_SIMD` is ON. Secondly  `DART_ENABLE_SIMD` is now OFF by default. We regard this option is an advanced one and should be used when you know what's happening exactly. ### Note - The reason this wasn't an issue before is that we used only `-sse2` option  and this is enabled by default for the modern CPUs. However  `-march=native` enables more options such as `-avx`. - #786 should be merged before this is merged. - I hope this PR resolves #780.  Please let me know if I missed anything.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/790)  <!-- Reviewable:end --> 
dartsim/dart,791,2016-10-13T22:50:13Z,2016-10-14T14:46:17Z,True,2016-10-14T14:46:17Z,f72ad7177888ecf48fed0b995764d0079068f672,3,2,1df6cb4b30ee9eeb887984ec67b7b8d246d1b9db 0fe33a1777dff5679bcf01d1fa086e8b703e6df5,,Update LodePNG up to version 20160501,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/791)  <!-- Reviewable:end --> 
dartsim/dart,794,2016-10-14T21:22:35Z,2016-10-15T02:41:57Z,True,2016-10-15T02:41:57Z,80c4cba6ccd45b314037475583dae27111637626,17,4,d67821618e51f4ad4d7bc3ab17fe658bb69d7d23 9e583fbed6761e59b7e740a99978ca80111a14b9 77a104cb05ca23cc88bb32da9ba88bcadcad3cd3 94d47da58653458b641ecf1ad613df841cc75c39,,Fix inconsistent frame rate of GlutWindow,SimWindow and the derived classes (e.g.  `MyWindow` of apps) call `glutTimerFunc()` when resuming the simulation or replay. However  this leads to calling the callee function passes into `glutTimerFunc()` multiple times because `glutTimerFunc()` adds the callee function instead of resetting. I believe this is why the drawing rate was increased as reported by #729 and #792.  This PR fixes it by calling `glutTimerFunc()` once in `GlutWindow::initWindow()`.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/794)  <!-- Reviewable:end --> 
dartsim/dart,796,2016-10-15T01:46:03Z,2016-10-15T02:42:21Z,True,2016-10-15T02:42:21Z,fd57e9b008793b0748663febb02b95535f22d98b,18,5,d67821618e51f4ad4d7bc3ab17fe658bb69d7d23 9e583fbed6761e59b7e740a99978ca80111a14b9 77a104cb05ca23cc88bb32da9ba88bcadcad3cd3 94d47da58653458b641ecf1ad613df841cc75c39 cc4684650282e5c45ad637ff02747474856c4647,,Packaging 5 1 4,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/796)  <!-- Reviewable:end --> 
dartsim/dart,795,2016-10-15T01:37:47Z,2016-10-15T04:41:21Z,True,2016-10-15T04:41:21Z,eaf8539805ec049314147453bc957361f4d4813e,15,1,9f13d1b410fc52c84d6969634a089f4e124d5f14,,Fix inconsistent frame rate of GlutWindow DART 6 1 1,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/795)  <!-- Reviewable:end --> 
dartsim/dart,797,2016-10-15T01:51:16Z,2016-10-15T04:43:47Z,True,2016-10-15T04:43:47Z,0cbe160579ccb17c0452c8e7d64135aef53a62ff,16,5,6a4042caca55bcba1fd0faa68853f588bf6e8129 b032b68838a920234a1f568cd5801f1a835cb701 af03c17ab71790618bb33c50142ef0ee7c147cfc f8958325e9494f03ac7f02bc5d73fdbe8c4587c6 56b51988a38e3b4f85418697b9ee770050cb5e23,,Packaging 6 1 1,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/797)  <!-- Reviewable:end --> 
dartsim/dart,481,2015-08-01T13:03:11Z,2015-08-02T10:50:34Z,True,2015-08-02T10:50:34Z,a83a05580442d7cb0313b1bb0b6983400c9d919f,5,5,5ff493d263d8b00dfa7fd0b05476e52914061158 32453370488d20aa5ccbbbd3e827294480a82500 ef28081d2313e880739a36aaac06c27c69f9be91 8a6e4571c7e0faad0805c31c51500dbbaada5e73 49b9b5327f28c93cbae6b04cc8707f8c73682e3e,,Fix IpoptSolver bugs,This pull request is a revised version of #198 with more bug fixes. 
dartsim/dart,799,2016-10-17T00:42:20Z,2016-10-17T04:41:06Z,True,2016-10-17T04:41:06Z,851d60aa6b1a45521001fa0a55384fe6f13e114d,9,2,99a2790e5faa32531626c038488df3cc2a1d0b0e 74bef16e6d0e02c16f9a1a6fcf07fe4aec2f5c14,,Support urdfdom_headers 1 0 for DART 5 1 backport of 766 ,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/799)  <!-- Reviewable:end --> 
dartsim/dart,800,2016-10-17T03:25:16Z,2016-10-17T11:20:47Z,True,2016-10-17T11:20:47Z,c332ec77070a98dd453548e53380c15f44b084b5,10,4,99a2790e5faa32531626c038488df3cc2a1d0b0e 74bef16e6d0e02c16f9a1a6fcf07fe4aec2f5c14 32052f6624c997b4fff6f20c70fb5b6112b6bb87 d4c72bd5987103f4d114327f78958ab5d83f1c79,,Increase minimum required Ipopt version to 3 11 9,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/800)  <!-- Reviewable:end --> 
dartsim/dart,802,2016-10-17T20:40:16Z,2016-10-17T20:45:44Z,False,none,843148d8bef96623c0221d29e9f89c8afe90c702,241,56,0bd6a63ef0ea94c6db323db63056abafb69e5d7f 066155bba6b76e45ce329f34e8c898dd5c7fbe4c 87dd197161ea0a91fc15d7d21c53d18f8b6f599b 7a5d0ed2c038b3d7a72c3b9c8996cce6e15ad4ea b721e200f1f0203d32154be1be000a0d00d49cd1 4f0fcdde8d95375c6304cb7de5eb063c800f7272 ad06bb5910e10c3d8a2b7232f257fe70ae4b78d4 a4c4ddd10c54c7e1efc23cfbb0daf02da5a433e5 985b33995be79836c178038a1112dc840e514192 2a7cae318a54e958544f616515b8bcf3586f6d38 a67bd725def9a429c26733a4469efa3a0e3ccfa1 b250526e24430355c9b80c2f5b708a712a226944 55a068651855fc69bc41cf7fd371315601cb7bfa a1fba724e9a39dfcc03d17d672d3e3349e74087e b843cc9558b8bda6bd942ab50f809175d2b2acca 91291aa066e2ec0abd9b4b9f123b882e6f8064c3 13e2b848921071c806c0e9f4d2535a66453768de 21153bd31f90ff173d68ba0e688c93fe72d5548c 77b3458fd2ba432671b674f93eec99c25e999b2c 43b5925ca0df5f9feb15c32771c0be69cf3ce111 7ea7f6e3450f617d4362d6165ebf153ecc3a04fa 27d11ff283c66bce6e60ed51565c8f989766bc45 cf381bc91ccf771698a38714415f0693e6ea9f89 be3de6a45753c6cf6f669a6a45becc8795ac6ef1 c779b4cee15e15c0393ace45df65ebbb0512661f 2b23fed7b7f4afaca22a85f369aba990948cc24c 35e8ac4cc55983306372716f856df10e0099043d 1d67928815bcefcc79b83ec5d8aa779e960ecb50 ed2f2d692b4afb520e65627d3ef96c3bd5ff4b82 173e6dd94fba51914627853ec630dc884a9fe390 baa31686b5b43f2ae1228260e2f9568b27ed3d00 00ef8f2704f5c44cd26fef41537f1c27a8874a98 4e6995952b5ae9240fcd1e757a18d0369c6e408d 49655b2aa33d69fb7465151555a310482298d1c2 c5ce7ba2b067bcd6c1b682245c547fac2e565faa 122c4ee852dc99a5d4315c7dcd0f6772081ddfe3 80c0deb296232fbe19d674a7075be65a4a8d8570 47c7db3b262e71f18aa010fa76bb61fa26c6e93e b053bb39dbea554dad21fbc49d2705980ae5b6c2 1a75f0900c770c72a3e97c172d4387ae4d4ecc3c 30343d350f2e3482202b1dd9216d350aab58272a 0a1fceca6715b08af386e6f2c84433e9780f4443 8e4e65da9f174e9f4a9efd9dc33df849ceea4727 2b58bd3ca725b77412800cbd1ca0537947246009 4e86b9a281c321c3b15f94d8d70079e0d8b1de5b c72d410df2e317814f558dad6dab15e333f6d6e8 3a6aa1d564295da7cca2aff2bc1a140320e19176 ca4d0f77bf5f82fc22d4ec3ebfc9e9509c618e23 db74d44216a0a1698baa88c6dbe4a0d1517cc2f2 26fe9f6b3ef362243418712cdd013f8c69598c68 69d0298e183eb9bc39cd2a70fd5b61a3860886c9 2ad230b0e2ae33632514afba2a901a2cb12608b2 e669ef9b54633dd905679b680952c9ceacb69129 070423506dfeeaf4296d4319a6b031aa8ead430b 80f7a4ada2115a85949aa4d108b8ecb80e75f025 2f2700c7e584ed4d6411da7961e8df3bf5450b9b,,Lemke fails trivial LCP problems with release 5 1 tag 5 1 5 ,Lemke implementation fails trivial LCP problem  where both A and b are 1-dimensional. When b is nonnegative  the solution is trivial. When b is negative and A is positive  the solution should simply be (-b/A)  while A is nonpositive  there would be no solution.  Test codes:  ```     Eigen::MatrixXd testA;     testA.resize(1 1);     testA<< 1;     Eigen::VectorXd testb;     testb.resize(1);     testb<< -9.8;     std::cout<<testA<<std::endl;     std::cout<<testb<<std::endl;     Eigen::VectorXd* f =  new Eigen::VectorXd(1);     int err = dart::lcpsolver::Lemke(testA testb f);     std::cout<<err<<std::endl;     std::cout<<(*f)<<std::endl;     std::cin.get(); ```  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/802)  <!-- Reviewable:end --> 
dartsim/dart,801,2016-10-17T17:19:47Z,2016-10-18T00:15:51Z,True,2016-10-18T00:15:51Z,56325a1cae1b89183e4898606dc55141f43ae61a,2,1,6649c82c3b270d5fd067a5880a0bb066a6c74a8c,,Remove unnecessary static_cast in optimizers,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/801)  <!-- Reviewable:end --> 
dartsim/dart,805,2016-10-24T18:26:18Z,2016-10-24T21:16:50Z,True,2016-10-24T21:16:50Z,85ca03598a1535df2daf9cba96efd23b15686369,1,1,537842a81ccb10a0498b1f17bd7611fcf1385913,,fixed issue 804 Rendering white lines with nvidia driver,The non-osg display shows strange white lines with an nvidia driver. The fix is based on this proposal http://gamedev.stackexchange.com/questions/31941/opengl-behaviour-depending-on-the-graphics-card that I found by googling around... I tested this with GTX1080 and NVidia driver version 367.48 on debian linux. The strange white lines disappeared.  Compared to the rendering result as shown in issue #804  the new rendering is as espected. See:  ![non-osg-fixed](https://cloud.githubusercontent.com/assets/1280457/19658376/0372f0f8-9a28-11e6-9ca2-5db57856dc26.JPG)  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/805)  <!-- Reviewable:end --> 
dartsim/dart,803,2016-10-17T20:56:39Z,2016-10-28T00:19:40Z,False,none,ad4e363b4309f46a9c24f228bd7d9e44ced3d0b6,2,3,78edb2aec92ef056a0c4d9d533223f28592c5a88 fc04bba863ca4bea574725e9bd2e6686eef61679 cae33a3c4809be843343b70677d7ea418a7c09e7,,Lemke fails trivial LCP problems with release 5 1 tag 5 1 5 ,Lemke implementation fails trivial LCP problem  where both A and b are 1-dimensional. When b is nonnegative  the solution is trivial. When b is negative and A is positive  the solution should simply be (-b/A)  while A is nonpositive  there would be no solution.  Test codes:  ```     Eigen::MatrixXd testA;     testA.resize(1 1);     testA<< 1;     Eigen::VectorXd testb;     testb.resize(1);     testb<< -9.8;     std::cout<<testA<<std::endl;     std::cout<<testb<<std::endl;     Eigen::VectorXd* f =  new Eigen::VectorXd(1);     int err = dart::lcpsolver::Lemke(testA testb f);     std::cout<<err<<std::endl;     std::cout<<(*f)<<std::endl;     std::cin.get(); ```  P.S. Please ignore previous pull request which includes my local meaningless commits. I have closed it. Please see this PR>  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/803)  <!-- Reviewable:end --> 
dartsim/dart,807,2016-10-27T20:32:47Z,2016-10-28T14:29:47Z,True,2016-10-28T14:29:47Z,e44059325d4ad3d26d40b8af6843bee36100def0,1,1,bfc4eaabccd02612410d4c3ec3c7f8ca17e548b3,,fixed tutorialDominoes Finished this did not work,I tried the tutorial with the dominoes but it did not work. I could never add a new domino. There were three issues in the code.  a) The new domino was never added to the world. b) The collision detection was always detecting a collision because    the new domino is in contact with the floor. c) The tutorial description on the website is not related to    the code for the collision detection.  I fixed a) and b) and added some comments with this commit.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/807)  <!-- Reviewable:end --> 
dartsim/dart,809,2016-11-01T03:46:11Z,2016-11-01T14:58:35Z,True,2016-11-01T14:58:35Z,7366f42f769d4d5d760be74e02bf44a387f47c55,7,4,7cabd1ede8b2888c57517d0cf8abc32caa453969 ae1551b9b1c96522b1c9fbd50f92b85bfbd7baac da5c99854556b0859b7d4fc0f1a799e58c7e1821 9dc2275fe409d3f5f292a635cb25089b6945258c,,Fix bug of ContactConstraint with kinematic joints,`ContactConstraint` ignored the velocity of kinematic body nodes (body nodes with kinematic joints such as VELOCITY  ACCELERATION) in the relative contact velocity computation. This PR fixes the bug.  <!-- Reviewable:start -->  --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/809) <!-- Reviewable:end --> 
dartsim/dart,806,2016-10-27T14:37:13Z,2016-11-01T14:58:16Z,True,2016-11-01T14:58:16Z,66beee9a4a4f3a8083a5c21ea8d1c920fdc33975,3,3,3ec63b2e813241b4a7824d2cd7b54a3ee6995520 a6c54e6a596b60529b163362b81f7d2b00ea42e1 e12635a1636e3d3c4f0fea7bbcf7885e9dcbeee8,,Use Codecov for online code coverage report,Coveralls and Codecov are all promising coverage reporting services  but it seems [the layout of Codecov](https://codecov.io/gh/dartsim/dart/branch/codecov) looks more organized and intuitive to me comparing to [Coveralls'](https://coveralls.io/github/dartsim/dart?branch=master).  We could use Codecov with this minimal changes of this PR since they both work based on `gcov` but uploading to different services. There are some CMake scripts could be cleaned up  but I'd like to save it for future PRs.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/806)  <!-- Reviewable:end --> 
dartsim/dart,808,2016-10-28T00:27:51Z,2016-10-29T17:05:45Z,True,2016-10-29T17:05:45Z,bf0549f2fe55aca61c65b25389212dc72f09c73d,2,3,78edb2aec92ef056a0c4d9d533223f28592c5a88 fc04bba863ca4bea574725e9bd2e6686eef61679 cae33a3c4809be843343b70677d7ea418a7c09e7,,Lemke fails several LCP problems with release 5 1 tag 5 1 5 ,Hi JS   I have cleaned up my fix and provide a unit test for it. Please check `testLemke.cpp` in the unittest folder. You will find that the original implementation fails my unittest  while my fix should work.  Yang  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/808)  <!-- Reviewable:end --> 
dartsim/dart,811,2016-11-03T06:10:04Z,2016-11-04T14:38:58Z,True,2016-11-04T14:38:58Z,4ced794594ed7ce3bdb6e3a200514d9f3cbf22fb,6,15,bdb9f0b73ccffa66d02dc82335b8a6ce4fca1b45 6ee5e925eb3b2a4d0ad17bed5a560ed8d566a34d e26063e890f6ac5618bef00446127fab9024be50 fb5d8f7bb754ff6cff2abede163a9387a62c9cde 7c9131c6444586ce98e35198964a00226e314bb3 1d2f1d2b8ff36c8f5b86cb804f597c39b3cb7513 b2545d1bf6dd9920f102b87feada4ee93e2cd640 32194556b862c0cddc40bd2d6173cc83f7de01e7 522bd17d59dcd73e8fff50ea498d1b9dddbcdec9 08e04aa1ccd9059244a1cf2210684dc99ddbb5f8 6158607e7eda6b019d2f532a558721df3a8134c6 6c42f64864dda2c51a1fc2aa5cd3513b520e8c1e e5e61bd6ef14536cbb285ffa8a693ef73ccfbd12 0adee4bffce29223203bef1766e6c28ca1b3503d b4c67968befb88f33a138f7c922e8cfca8433a96,,Setup clang format target,  <!-- Reviewable:start --> This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/811) <!-- Reviewable:end --> 
dartsim/dart,812,2016-11-03T06:57:44Z,2016-11-04T18:15:53Z,True,2016-11-04T18:15:53Z,1fdd68c2e9ddbd6fa28c0020610c9ebbe51ec3ca,8,8,d6919e9fbbfa128de4eb9c74441061f072548151 5ff4d6e784d124f63a943f91e6cd87af2bae1de7 c989138a86bc10b211827428e5045e657ada9360 d52945687ec303e978c47e80c10989546cb79111 34ef972a4e28464d50e260597708e95a281b097a 1ffc330257a3cd06471b779c1dda4062e6a230e8 87f9420f65ef7a3b50965315261ec929d54bc390 a5a398833beadc04db3e2b435084d9f1481279b6,,Fix Lemke LCP solver 808 for DART 6 2,  <!-- Reviewable:start --> This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/812) <!-- Reviewable:end --> 
dartsim/dart,817,2016-11-04T19:37:02Z,2016-11-04T21:35:15Z,True,2016-11-04T21:35:15Z,b10e4de75153a7a0b57aec92f6defa620d6319ed,1,2,bbc0d363ff37c494a3c04db7c5f4471b060d12c4 fdb2d9a99b3a281679c01fdc0b9da4e41011849b,,Fix clang format setup,This is a complementary PR for #811 that fixes syntax error and improves messages for the case of that the target sources are empty.  <!-- Reviewable:start -->  --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/817) <!-- Reviewable:end --> 
dartsim/dart,818,2016-11-05T12:44:30Z,2016-11-05T15:57:19Z,True,2016-11-05T15:57:19Z,c6603fc64c9afc0cefbfe2d6cd0ed7a0416c2561,3,4,bf3255b5e0f462086476b4596d5a5486f47d50c9 7f69002d07ba264d0c36c850e8310b256039e3e6 e4f310d663d5d2f1810cff703b3ada379de20173 08b8f21f545debeab4c89e3f5815201caa91dee6,,Fix that ZeroDofJoint getIndexInTree is called,  <!-- Reviewable:start --> This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/818) <!-- Reviewable:end --> 
dartsim/dart,825,2016-12-04T14:39:50Z,2016-12-04T17:25:28Z,True,2016-12-04T17:25:28Z,f7339ae9454920e24b542aad7d25507ef28cecd2,1,1,4052d5b4023985cf338dd6fbdf436254fbb63da4,, addDeleteSkel Set inertia according to size and mass,Related issue: #824  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/825) <!-- Reviewable:end --> 
dartsim/dart,832,2017-01-12T15:02:20Z,2017-01-13T15:49:30Z,True,2017-01-13T15:49:30Z,f7842c7238e583d3cd35e773442f5369005d1f3d,3,2,bb9af1b8b26697befe36520f9e80bbc47fbd6982 95c84b649b7fcb7d5fef1eb617f8db166e2a7566,,Add Skeleton getRootJoint ,  <!-- Reviewable:start --> This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/832) <!-- Reviewable:end --> 
dartsim/dart,834,2017-01-13T20:01:42Z,2017-01-14T01:11:20Z,True,2017-01-14T01:11:20Z,6c21492b11fe89bf31c800b5400e2385e354f75f,571,2,4b0c48fb4f9e01e4e69eed362d67c04f91fc2d09 f264cdca274e7765529796b0646582b8903ddeca,,Update copyright,  <!-- Reviewable:start --> This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/834) <!-- Reviewable:end --> 
dartsim/dart,833,2017-01-12T18:58:33Z,2017-01-14T01:15:29Z,True,2017-01-14T01:15:29Z,06588ca9a2406799549d5b2e6de8202099830432,38,4,8bdc69bad56b24bb1588e7b1703c2a843c202f97 7783e30aedf2168ce68546167f1a36814c7dff2b 0b72dd1dd198a71d6f6b3f4b302a7663a3308327 0e4ddfb33f28d8bfae0a1a668b1460653c0abad1,,Rename notifyXUpdate relevantly,This PR renames the member functions of lazy evaluation mechanics properly as suggested in #816.    #814 will be addressed in the next major release since it introduces API breaks.  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/833) <!-- Reviewable:end --> 
dartsim/dart,829,2016-12-22T13:54:00Z,2017-01-14T03:25:02Z,True,2017-01-14T03:25:02Z,8307ed066bd2e9a43dfa632959cb795c4cad7f60,12,4,0d211a796d49f419d1112ad29a97889e106411a5 1b6424b48114fe87e99c1006fb0a9dc84766ed4f b17f83882b9b5d9c1a0693a04fb26e1d94cffa36 76569999431512505859baf838508a42c3f2dfe8,,Add getters setters for radii and diameters of EllipsoidShape,DART currently uses diameters for the primary properties of `EllipsoidShape`  which is not the commonly used convention. This PR is preliminary changes for replacing diameters with radii that include:  * deprecate get/setSize  * add get/setDiameter  * add get/setRadii    In the next major release  diameters will be totally replaced by radii.  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/829) <!-- Reviewable:end --> 
dartsim/dart,835,2017-01-13T20:05:33Z,2017-01-20T00:01:03Z,True,2017-01-20T00:01:03Z,3524365829dc9621f0f89d460b787d4eb98cda8e,2,2,58906522b0c63a40b7a6d4a8771797f606aa98b1 110feb418fac0c8ddc000300f7780bd3a8b5d4e5,,Packaging 6 1 2,  <!-- Reviewable:start --> This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/835) <!-- Reviewable:end --> 
dartsim/dart,836,2017-01-20T15:43:46Z,2017-01-20T19:00:02Z,True,2017-01-20T19:00:02Z,11437f56cdfb39a4293530e6f663d064b5595c7f,2,1,2c387dd7bfde31f3ac834746526a8fe08f48bdf5,,Packaging 5 1 5,  <!-- Reviewable:start --> This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/836) <!-- Reviewable:end --> 
dartsim/dart,840,2017-01-26T01:28:41Z,2017-01-27T01:35:59Z,True,2017-01-27T01:35:59Z,cfac68118c778ebffd25879b5b4d6993970f786e,3,1,612129d26d6aff9c10ce7c2da0d89e193114fa96,,Add MotionBlurSimWindow to GUI,1. Add Motion Blur to GUI by extending the SimWindow class  override only render() and displayTimer()  2. The Motion Blur class supports change of motion blur quality  in 0-5 scale  0 means no motion blur  5 means highest motion blur quality.  3. Only change needed to existing files are in line 86 of "GlutWindow.cpp"          From  glutInitDisplayMode(GLUT_DEPTH | GLUT_DOUBLE | GLUT_RGBA | GLUT_MULTISAMPLE);          To      glutInitDisplayMode(GLUT_DEPTH | GLUT_DOUBLE | GLUT_RGBA | GLUT_MULTISAMPLE | GLUT_ACCUM);      To enable Accumulated Buffer of GLUT  4. To test on existing examples  simply replace "class MyWindow : public dart::gui::SimWindow" with "class MyWindow : public dart::gui::MotionBlurSimWindow"  in "MyWindow.cpp/hpp"  5. Code is written in a style similar to existing files in "dart/gui"  6. The quality of MotionBlur is set to 5  highest by default. So it will be slow  lower the quality to run faster.  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/840) <!-- Reviewable:end --> 
dartsim/dart,842,2017-01-31T05:55:14Z,2017-02-05T18:50:51Z,True,2017-02-05T18:50:51Z,ad7544370669c6088337ef3bcae3a694cf6d7e99,197,14,bc443fc04a7fb593d91c1f5a5a772bb32386b116 27efcdb1889833774947fa882b8f49d5dbc7bfb3 95b80d434d219692728a8edc83641e5a80d1b062 4363ec8556f4a3e89de61bab86eebe6710f1e8a2 162b7a842ee737c03339c6d6554954748fe69e46 764900674f0f8d924ac3ffa2c66622644513dc5c 260ce8d94b942c56368f9abb9e99e3bbf8b7c9e7 c62c56a7ff1c2999e8fd00beeba9e8f611674a03 dd6cbdcba6faad7fd90de4b4de280d9c6ef3598b b490cc6e487f47ac16eddb604943cd2faa953b90 762c693f9befd54ee4bbac15f5ea61d40ed4483d d3b609ad45fb01c2ae9620c73dddc42bd1f21703 c89f7073c022281bc8b49f9f7060be6c52a1ba06 3cbbbc76586f6be8fa878039274413dfc98f761e,,Allow examples and tutorials to be built out of DART source tree,This PR allows the examples and tutorials can be built out of the DART source tree when DART is installed on the system. The examples and tutorials are now installed under system directory (e.g.  for Linux  `/usr/share/doc/dart/examples` and `/usr/share/doc/dart/tutorials`) with sample data files (`/usr/share/doc/dart/data`) when DART is installed. You can copy the directories to your workspace to build them. Detailed instruction can be found in the directories.    We are still able to build examples and tutorials through the DART build system. It requires distinct build script  which is in the main `CMakeLists.txt`  because the build scripts in the examples and tutorials assumes that DART is already installed which is not always true when building DART from source. One downside of doing this would be that we should keep maintaining two build scripts for the same projects.    `SampleResourceRetriever` class is introduced to be able to load the sample data files from either of the system directory or in DART source. It first tries to load from the system directory and then from the system directory if failed. A specific URI is also introduced to refer to the sample data (e.g.  `file://sample/skel/biped.skel`).    TODOs:  * [x] Add instruction at the root of examples and tutorials  * ~~Add debian packages for examples and tutorials~~ (will be done by other PR)  * ~~Add Travis-CI tests for out-of-source build of examples and tutorials if possible~~ (will be done by other PR)    Note: This PR will be squashed and then merged.    Related issues: #751  #752  #839     <!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/842)  <!-- Reviewable:end -->  
dartsim/dart,847,2017-02-18T06:32:15Z,2017-02-18T17:49:19Z,True,2017-02-18T17:49:19Z,e3af1427f650358eeb8738bb5152a433a7c90f7c,1,1,5387930fc8a2cbf53f34c3d2c1a3ac45af8a4966,,correct the right retriever in getRetriever function,A quick bug fix for file:// URI in SkelParser  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/847) <!-- Reviewable:end --> 
dartsim/dart,849,2017-02-28T04:16:53Z,2017-02-28T17:29:52Z,True,2017-02-28T17:29:52Z,7068682c56186e12c62f276235726c5e4cf572d2,1,1,204e66639616dcfffbda443c44e10887e1e3f9ef,,The same bug for SDF Parser,  <!-- Reviewable:start --> This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/849) <!-- Reviewable:end --> 
dartsim/dart,851,2017-03-05T23:40:01Z,2017-03-06T15:57:29Z,True,2017-03-06T15:57:29Z,912b21e229054d7f592e1d93b02746564a40b719,9,5,432e9f1a1b1276bd1ec0159e68bbbc89f7a7477d a08db28e518078235686c2760e4c21b8480c7918 dd7b12b5b2dfd7ca626de50a38c2c3523de97b58 317d49d3cf6f69515f6565cc6fa134e87194c0c2 0202aac96b2320518eb772ac91e0407acd4128c0,,Fixes for Issues 838 and 676,This pull request fixes the issues brought to light in issues #838 and #676. There are three specific bugs being fixed here:    1. urdfdom has some strange behavior where it treats the first entry in ``Link::visual_array`` differently from the rest with respect to its material information. If a material for a visual is defined globally in the urdf file  the first entry in ``Link::visual_array`` will be correctly linked to it  but none of the other entries will. This issue is discussed in more detail [here](https://github.com/dartsim/dart/issues/838#issuecomment-284209519). This pull request fixes the issue on DART's end with a bit of post-processing.    2. When the ``MeshShape::mScale`` is anything other than Eigen::Vector3d::One()  the normal vectors that are used in the OSG extension also get scaled  which produces incorrect coloring results. This pull request counteracts the scaling to make the coloring normal.    3. It was reported back in #676 that collision shapes were unintentionally getting rendered in OSG. While working on the other issues  I realized a solution to that problem  and it is also in this pull request.    There is a regression test for problem (1). Issues (2) and (3) are visual problems  so I can't think of a straightforward way to regression test them.  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/851) <!-- Reviewable:end --> 
dartsim/dart,654,2016-03-30T20:11:16Z,2016-04-03T22:32:25Z,True,2016-04-03T22:32:25Z,896a678e409eddd41256c38757401a6ffd30d0ae,67,3,fadf20c2062f61af0903fae8647b8acc64da5087 d949ca0a8ad023832deafa5a07196a520b34b97e deffdcd008b9fccb919f412f49b567bfc3a9cc05,,Deprecate draw functions of classes in dynamics namespace,
dartsim/dart,853,2017-03-15T03:03:15Z,2017-03-16T11:53:58Z,True,2017-03-16T11:53:58Z,abbe49e3d1892b149bada7b44fe60fd7e5bb3185,10,1,b9c429404e14d83ab38624711f56e5145e66968d,,Move out debian meta files from this repo DART 5 1,This PR removes the meta files for debian packaging from this repository. The meta files are moved to https://github.com/dartsim/dart-debian.  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/853) <!-- Reviewable:end --> 
dartsim/dart,859,2017-03-22T20:25:52Z,2017-03-25T17:34:12Z,True,2017-03-25T17:34:12Z,aa795f932ca70c30a63a9ab0f81b2f19be7475fd,7,4,856fcaa67d6b64fcf44229f000f25ab7e2ffdcf0 23ea6c127fe991affecb259223ae63d271a3fd75 466dd0ec93b15f2693e08c73a46f1420ec09f24c 2a6aae77fab942709a963aa04ccbed8a705a7937,,Fix collision filtering of BulletCollisionDetector,**Problem**  In the dynamics simulation  some primitive shapes were sinking into the ground because of insufficient contact points generated by Bullet.     **Causes and Fix**  Bullet internally uses convexity based collision detection algorithms for some primitive shapes (e.g.  capsule)  and they generally return single contact point while at least three contacts are necessary for face contact. To overcome this  Bullet provides *persistent* contact concept that preserves the contacts of previous steps as long as they are valid (still in contact with the distance tolerance). However  DART didn't correctly exploit the functionality. This PR fixes the problem without hurting the existing functionalities.    <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/859)  <!-- Reviewable:end -->  
dartsim/dart,863,2017-03-29T19:14:40Z,2017-03-30T01:55:59Z,True,2017-03-30T01:55:59Z,f565c2701f38be2d9d1fed937eefcee2a3a3043b,3,1,702c58e79b3db349fc959b5fe464677bd7527b75,,Clear collision result on reset ,
dartsim/dart,862,2017-03-29T04:49:19Z,2017-03-30T01:57:06Z,True,2017-03-30T01:57:06Z,a617d4ce6ccbbecbdc5a08a2da38a378aa9f8254,5,2,d7ce580b5fce6118ea23eef546af10b833fa96e5 3ce5504dfb4e4ab78446ccb4ed4118b5e36678ae,,Improve MultiSphereShape rendering,Previously  DART only draws the spheres in a `MultiSphereShape` while the actual shape is the convex hull enclosing all the spheres. This PR still doesn't render the convex hull but improves the visualization by drawing the cylinders that connect the pairs of the spheres.    Before:  ![image](https://cloud.githubusercontent.com/assets/4038467/24438991/5e2a72c6-1419-11e7-9898-8099ba3f0157.png)      After:  ![image](https://cloud.githubusercontent.com/assets/4038467/24438883/96d64628-1418-11e7-9e71-7df90f55e908.png)  
dartsim/dart,865,2017-03-30T02:12:02Z,2017-03-31T17:37:33Z,True,2017-03-31T17:37:33Z,f4cbcc13cca41ccf79dc2cf340584b191835991f,11,2,72d25f614c86608ce28bbe8669dbeec0d03c6376 87bf41e5fe75093d89409ef6712e08f8efd9b18d,,Rename MultiSphereShape to MultiSphereConvexHullShape,This PR renames `MultiSphereShape` to `MultiSphereConvexHullShape` as suggested in this [comment](https://github.com/dartsim/dart/pull/862#issuecomment-290128731).
dartsim/dart,866,2017-03-31T01:00:23Z,2017-03-31T17:37:55Z,True,2017-03-31T17:37:55Z,8e8b6320933879ad1f33ab277d66e7ffa016c3aa,1,1,a4345fbc61457d31b08c017f9c2842117342f7d8,,Use make_unique with full namespace,If DART is built with C++14 enabled  `dart::common::make_unique()` conflicts with `std::make_unique` (introduced in C++14). This PR adds the full namespace where it's missing to avoid the confliction.
dartsim/dart,861,2017-03-28T22:23:33Z,2017-04-14T20:39:02Z,True,2017-04-14T20:39:02Z,48a5aaf9c05a0b00631e88b08369ac00753231bc,56,19,231be36a0ad226a42dd9d7f17f34a7d04590e37f 2df6066a7c7809e46aca7cf0353b297c875e1ff5 747e9cb189ecc58c299f062d3fcb0aa9f8c3afde 874d84687ee87fe7de82198e8890a28fdc79efcd 6b19ceec92888c4c501fb6822b5a27009cd35eb1 0059d9eab4830f9c90d9e86fd0b1635d9628b946 cb7572ad7ef68769acb0f4a87f748a5de598cd4a 627df80b99ce8dea14854cca2afd45494f7b5a04 7f78285ca16e529f68e221755c798908b968764a 3408890cd5388b2dfc0eb4b0ff82b55fa279f7b1 ebb5759b4e130326ea331d2f22ba885e7f307fe1 f44c7723f38d438d59b6b1edb9376be30749597a 4b564d037d735b7236d022381032d5ac62f32beb 845d1124cf221a4cb4b405f283cf3186a180114d 130e2fffec05bcdc8c2e4aaa7ff21946849756d7 cee10843acc7f8882d5945e60a568308ac721614 5fb11bf0c079ccd8b0ec0c3ed860368b1e64cbf9 f7833f8dfdc32539ae9a51dcaa7b9435fc6ffe17 64f7eaecea177c2dd5c26b83c5604b4c36e5bdb7,,Add ODE collision detector,This PR adds the ODE collision detector support to DART.    The supported shape types are sphere  box  capsule  cylinder plane  and mesh; and the unsupported types are ellipsoid  cone  multi-sphere  and soft mesh.    The ODE collision detector only supports collision detection queries but not distance queries.    The ODE collision detector is only enabled when ODE 0.11 or later is installed on the system.  
dartsim/dart,877,2017-04-18T03:12:09Z,2017-04-18T11:39:42Z,True,2017-04-18T11:39:42Z,b53ab221cbeaecabef807c2cca82f70d29b7553d,1,1,bca5ffa66a559a681583472787c0c3e7fbb3e947,,Disable COLLISION SphereSphere test for bullet,
dartsim/dart,875,2017-04-17T18:36:20Z,2017-04-18T14:42:14Z,True,2017-04-18T14:42:14Z,52bbd15f8d01e97ed4bdf91b7731daffb4929de7,10,6,596332699913f58f5f2927c65f9747efc58f3849 6e9bb3c82b230f1f86038f06143cc7545eb0b36a 32de52df8f9471a290cbcdb4b56f7fbe098360fd 02b6adf7e8581a3132c0dbf7195e979a22dd9ccb 26ef4e0f1917f43c98f5f65f567e500478608444 5b470f388cdd50332cf4017429f041ead8ca405f,,Add readAll to Resource and ResourceRetriever,
dartsim/dart,864,2017-03-30T01:40:38Z,2017-04-22T18:26:56Z,True,2017-04-22T18:26:56Z,9dec595c84f2994bc7b8defcecc7c80c42c97352,23,23,e2eb4376323b80a813dc3a1a0ae67bd457778c21 6b1a72550731dfee7fe58ac99b024d0da1334dc3 679a953234241b06128c52be3514fafe492fc537 c202407dba54f88c2179cb5f84cdf7002dc0f647 9b148c8f46f62bbc0dc65d81dd8dd54cbae38db7 5e44e81a45a0ef000106fbc4a51fcf1fa652ce9f 1c1928dd5779df313c74a73b5f48da2e8e86c3a5 7db66477f83f76a0a7aed51c4717d48a65fc9f83 ad5ce8a181fceb3bb2e9ca6662a11dcd2d08cb6b 5fdd74d69d3b45085d27bb4612f9c82454dacebe 972c26961df9994d9057cecd4d5311100cd3d646 31d57eb4642d9b2cf35536d109412a8289f5414a edf90c8367ccadeb432a53a2000dcb5d6cf060d7 e5568af5e893e8824feb3c021b1ad8fc42bb5118 1a10dbda747c0703205aeea9a7c03841a242aa4b 19a20a21fbc988c6fb2e7c9763b7c34e00c73f96 35032e8f3de68fb359f92daf0801f532a479391e b19b40fed566d20148bc3b1751184b237525c1b9 923442a136b17edce34419c55d4dadb9b137a086 662e7266ee35e271a54b7f3963272667b03f9cb3 52f3cf99a5ace91b6a52c92165f27b30f89a58ec f030e954ffebd37515d504ed711ceaef3c79acac e25800b12cc6a18a336cd17a260937d4763f85c5,,Add Factory class and collision detector factory,This PR adds `Factory`  which is an implementation of the [Abstract Factory Pattern](https://en.wikipedia.org/wiki/Abstract_factory_pattern)  and applies it to creating collision detectors from the key of `std::string` type.    By doing so  it decouples the dependencies of bullet collision detector from `SkelParser`. Previously  the bullet collision detector type was hard-coded in `SkelParser` so that `dart-collision-bullet` had to be one of the dependencies of `dart-utils`. Now the optional collision detector (only bullet collision detector for now) can be created through the factory when `dart-collision-bullet` is linked.  
dartsim/dart,879,2017-04-19T20:51:34Z,2017-04-22T18:27:27Z,True,2017-04-22T18:27:27Z,d1e11267a1628bb690371a7daaf56629981bd040,7,9,91a52dbfb510d5a6a9400f7e03d1cd25e78525df 39dc27c9af93ffb00a18f225113011c33080367f d7c6cbc8c54d335b94e08d02be0df25c7eb7dcbb 1375e8492c56cac813689d56ea5b856299f27ad2 75e06eeb6e698624950d7e3415adca0d0a3ebf37 d72047a367cb4974abbf95eda99fa2df940508e8 b5c787e266f6d8a669d71bd02ea73ea9d63e8134 717ca2ccf41174ed2bcdcbf3d739f51860007849 b441808d00ddac94001b1602e0332e74f119a877,,Add getters for joints bodies to MetaSkeleton,The newly added APIs are just syntactic sugar to get the joints and body nodes with a name. Probably  some of the implementation are not that efficient.
dartsim/dart,880,2017-04-22T20:04:15Z,2017-04-25T12:01:34Z,True,2017-04-25T12:01:34Z,7ec76a19aa7172960a880fec9e947ec36898fbcf,45,9,600b428994c3dc93fcd901818f7b26224269da16 d258f67bfb230eb8a9d9c0ef5ab6c37a4a5d133b d2b9900618e88cf90e4b7047d9063f9cb8ddb1a9 ddf01289a08b4bf580864acdc19c256cc5573ca9 37251a29ba56624d3fca3758b9501ed3b3c0214a 4e2d0164ecb4d8658e1deef6e53aa24daba55e4c 254743d3602e77654503d72378a7f6d02dd0b6f0 bd1473499b649dde1bb91c699b3994d7929e4aaf 189212ffcda646c6267829524e169d2e830e67ee,,Rework on dependency checking,Currently  all the optional dependencies were searched in a batch whereas those dependencies are required by different optional components. I think it would make more sense to move the dependency checks to the each component that requires them.    This also should resolve #830.
dartsim/dart,882,2017-05-14T17:58:52Z,2017-05-14T22:55:44Z,True,2017-05-14T22:55:44Z,7fc046515db62c3a5dcc2f4182d150017db14ee2,19,2,8e3fecbad05307629be1713aaa5012de86e3b94e c4e518bc9cfea7364d618fd4eb1ad004b0d20c42,,Remove coveralls,DART changed the online code coverage reporting from coveralls to codecov by #806. This PR cleans up the vestiges of coveralls and enables reporting the coverage diff using pull request comment.
dartsim/dart,883,2017-05-14T19:21:26Z,2017-05-14T22:55:53Z,True,2017-05-14T22:55:53Z,02c769a40d5aae9bc51fa4a70808fe08dfd0e8bf,3,2,257cad3ce2f39406135bc2fc07fc77241e6b8d4d 2bb6c48c1722783adaf04a607814741c5b01e5da,,Add back rigidCube to the in source build list,
dartsim/dart,885,2017-05-15T22:46:04Z,2017-05-16T00:03:21Z,True,2017-05-16T00:03:21Z,e37046f0d75c2513bbbc23bd4b25b941578bb5d1,3,6,a185fa48f24bd0104644a4911a2ad45658c53dd0 2f9609edcb46caac883c2f473a1e5611bfd46fb3 a0aecedcdbf71c7ec6930a2232553b53a604f923 d5828bc2a7599507e99acfa5e3e2d986039c0428 a3fffa7e2756614f73b64aaed482d73956b1a1e1 fd50e0f221ecafed9e86fc2ba8954b8b006bfa94,,Packaging 6 2 0,
dartsim/dart,886,2017-05-16T05:57:24Z,2017-05-16T22:05:54Z,True,2017-05-16T22:05:53Z,d85688d9ba6d483f5c7ead0dd3505d14075fd7ed,8,4,81f3598b594b21b2383b83afea93860b249f5209 5778a55a3fb2fb8bd900e7afd252c6a33caa6fbc 70f2bd138f193d989d107a5243a43904c30d1d95 07d16b2d622b1ff7271ce54fc4a83e8661d89f34,,Fix missing overriding method OdePlane isPlaceable ,
dartsim/dart,889,2017-05-21T18:07:37Z,2017-05-21T19:56:01Z,True,2017-05-21T19:56:01Z,0a668d9acad4e24cbc6494f3961e5071779239ec,33,1,7cb9b65f5fd20bb60d7c5d387883634f541d06f0,,Use CONFIG mode to find DART in examples and tutorials,`find_package(DART)` uses [`FindDart.cmake`](https://github.com/Kitware/CMake/blob/master/Modules/FindDart.cmake) of the [DART programming language](https://www.dartlang.org/) by default. This PR changes the DART examples and tutorials to use `CONFIG` mode instead to find our DART using [`DARTConfig.cmake`](https://github.com/dartsim/dart/blob/master/cmake/DARTConfig.cmake.in).    This PR resolves #888.
dartsim/dart,893,2017-07-15T00:55:09Z,2017-07-16T13:12:18Z,True,2017-07-16T13:12:18Z,cb887c17802d9a58905e934c67f8d95b1a47b01a,1,1,76b78b6bd38cd4f72cecd47e317b0a688709bb96,,SdfParser use_parent_model_frame tag,While working on a Gazebo plugin that uses DART  I noticed that `SdfParser::readSekeleton` incorrectly loads sdf models that have the `<use_parent_model_frame>` tag enabled. The problem is that the parser applies an isometry to joint axes marked with the tag while only a rotation should be applied. This PR modifies `SdfParser::readAxisElement` to only use the rotational component of the isometry.
dartsim/dart,894,2017-07-20T22:00:30Z,2017-07-24T17:28:24Z,True,2017-07-24T17:28:24Z,38fdd581040dea2ae1510e196d67d04939345062,4,5,98eba25dd912a5636f97a08fd4156cdd29803d91 dccd81a60c77a385905a5afa0cdee7ab31434dad 8d05b1ffefc79ca8bc3b51b21741397663be0e91 12c5e44a79bd4e3effafd8d4a0c389685e81e55b f01ca963f0e9ece3c564ef719d878ebec89d7226,,Avoid collision checking between objects from the same body node,I noticed that if I create multiple collision objects for a single link in Gazebo while using DART physics  they are collision checked against each other even though they are part of the same link (body node). The proposed change to `CollisionFilter::needCollision` prevents collision checking between shapes attached to the same body node.    See [collisions.world](https://github.com/dartsim/dart/files/1163781/collisions.world.txt) for an example in Gazebo. It contains a model with two links and self-collisions enabled. The top link consists of two flush collision meshes. Without the change  contacts points (blue dots) are detected between the flush meshes.  ![before](https://user-images.githubusercontent.com/5615894/28440399-f1f395ec-6d5a-11e7-94e4-1c225e8c8603.jpg)    With the change  no such contacts are detected.  ![after](https://user-images.githubusercontent.com/5615894/28440459-3b345f5c-6d5b-11e7-913b-e83a9af5015b.jpg)
dartsim/dart,891,2017-06-12T13:50:44Z,2017-06-12T21:13:22Z,True,2017-06-12T21:13:22Z,b05200ce8d7264f86a7faf5dbc48ea14cb774df0,3,2,c7d5161246d3ea722d5c8bf8e69595bc0b05ceee 29ce8d9416ed0ad39d937b47632411324bff44bd,,Read joint friction from URDF,This PR fixes the URDF parser to read joint friction.    Resolves #890.
dartsim/dart,899,2017-08-04T00:10:10Z,2017-08-04T00:35:47Z,False,none,7c5e8e2aaefc252756325ac0026dfab1e0d82373,1,1,a31672f2924fe565a2e6d25106caf15fa103516c,,osg CMakeLists txt allow building without osg,Fixes #897.
dartsim/dart,902,2017-08-04T01:04:43Z,2017-08-06T16:54:51Z,True,2017-08-06T16:54:50Z,a31fa9976e71528a202e293647efae741ca6685f,10,10,651946bbf7002e948156edc33cad2e635980373c dcf91102a89b0f62b8f9613faf1bc4a26d5b4f2c 4def26b22cd01840667d76615b94ce1b411e0e32 01fec0f9ade6f2d6325f529212ff82b2421f67eb 3c9d3277fc7c801438967f71ba988d04fd8a73f7 b05200ce8d7264f86a7faf5dbc48ea14cb774df0 244d89c044b53f262443ad460647b731d296c175 cb887c17802d9a58905e934c67f8d95b1a47b01a 38fdd581040dea2ae1510e196d67d04939345062 e363d1c20e41123dd1cc9a20884ceb1ed7f47e9b,,Merge master into release 6 2,There were some PRs for 6.2.1 those were merged to master instead of release-6.1. This PR merges master into release-6.2 to resolve that. Once this PR is merged  master will bump the version to 6.3.0  and all the future PRs for 6.2.1 should target release-6.2.
dartsim/dart,904,2017-08-05T03:56:33Z,2017-08-07T17:11:34Z,True,2017-08-07T17:11:34Z,d48763abc471985f619724086ad3027c830eb64f,2,1,8f4b7903cb2bf8a4e1be4e359b076c501ec9314c,,Add definitions for constexpr static members,This PR adds definitions for constexpr static members for ODR-use like we did in #603.
dartsim/dart,855,2017-03-15T22:59:36Z,2017-03-16T11:53:20Z,True,2017-03-16T11:53:20Z,4da8b36f9e24c5501711fea26ed99fd344741980,3,3,ee6057586d5ca3651dc97e1037b4c17976e7f95d 18661a5f86df1bd0725e785473ce6275703cabac 90862e3d4964bce3f6f68faef10944cb91c66baf,,Fix transform of ScrewJoint with thread pitch,There was a bug in calculating the transform of ScrewJoint with thread pitch. This bug was found in a [pull request of Gazebo](https://bitbucket.org/osrf/gazebo/pull-requests/2547/dart-6/diff#comment-33149101).    <!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/855)  <!-- Reviewable:end -->  
dartsim/dart,854,2017-03-15T03:03:18Z,2017-03-16T11:53:51Z,True,2017-03-16T11:53:51Z,5ceca172c120fdf3ce511e21d4fb0876c1b4e218,31,1,027401bd5a579ce86ada105eb4b6ff2688412cf3,,Move out debian meta files from this repo DART 6 1,This PR removes the meta files for debian packaging from this repository. The meta files are moved to https://github.com/dartsim/dart-debian.  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/854) <!-- Reviewable:end --> 
dartsim/dart,852,2017-03-13T19:19:02Z,2017-03-16T11:54:26Z,True,2017-03-16T11:54:26Z,e87382aca3f54cef12cf2c3adc320f6c0e7ac367,1,1,4d3874261ee97f5d94f4a862e738323ee8e82dfd,,Use static constexpr instead of enum class,  <!-- Reviewable:start --> This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/852) <!-- Reviewable:end --> 
dartsim/dart,856,2017-03-18T19:15:54Z,2017-03-19T16:30:38Z,True,2017-03-19T16:30:38Z,2945b273cf0f868822c27b29680a17604035f604,38,1,f0197cef1a6304992965df8bc90e701e8369e014,,Use gtest_main,This PR links `gtest_main` to each test target so that we don't need to repeatedly write the same `main()` function.    [Reference](https://github.com/google/googletest/blob/master/googletest/docs/Primer.md#writing-the-main-function)    <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/856)  <!-- Reviewable:end -->  
dartsim/dart,906,2017-08-07T21:14:57Z,2017-08-07T21:19:30Z,True,2017-08-07T21:19:30Z,a2157f702dd566b2280262a276f0546478035561,3,3,ac8b6bd6ce2b377ffdda7c2e479452a579d7b80b 8794c03307152793aee6bc1b8af4fb3232ffd598 99ae46d03bdfba30e82f8e82cf20572746428fe6,,Packaging 5 1 6,
dartsim/dart,884,2017-05-15T16:08:56Z,2017-05-18T21:13:11Z,True,2017-05-18T21:13:11Z,aadc0476b500f2c0dc3b440b74e914d2f612a607,1,4,23733546f8276494e5050baa1b445d16655ae4aa 651946bbf7002e948156edc33cad2e635980373c 84487c25f157755da29a8b001b1209c824eaa13b c26154483d0097eefe0d3555aa6a0767579e2adc,,Install libccd enabled ODE on macOS,[`test_Collision` fails on macOS](https://travis-ci.org/dartsim/dart/jobs/232230503#L3479) when `ode` is installed that was built without `libccd`. This PR makes Travis to install `ode` built with `libccd`.     This PS is dependent on Homebrew/homebrew-core#13590.
dartsim/dart,900,2017-08-04T00:10:10Z,2017-08-07T21:53:01Z,True,2017-08-07T21:53:00Z,956b13ab18d08f24f933efa2d8e626ff7f6857a4,1,3,75f465d3646e5deef2969a38c5492eb4e64518c7 d4d6fbbc7dfc1e105da78f89502c4099e210ba15 51d3a047300b443e9ab610313b04ba1742bd91a4,, 6 2 Protect dart gui osg and check more rigorously for the presence of OSG,Same as #898 but targeting release-6.2 branch.
dartsim/dart,898,2017-08-04T00:08:05Z,2017-08-07T17:50:29Z,True,2017-08-07T17:50:29Z,71e31c9052f8fa213c4f9b8ce15554e38e182834,1,3,75f465d3646e5deef2969a38c5492eb4e64518c7 d4d6fbbc7dfc1e105da78f89502c4099e210ba15 51d3a047300b443e9ab610313b04ba1742bd91a4,,Protect dart gui osg and check more rigorously for the presence of OSG,This PR has two related (but independent) purposes:    1. Prevent `dart-gui-osg` from being built when OSG is not detected. ~~This is done by wrapping the second half of `dart/gui/osg/CMakeLists.txt` in an if-block.~~ This is done by returning immediately if OpenSceneGraph cmake variables cannot be found. This was not needed in the past because the call to `add_subdirectory(osg)` used to be wrapped in an if-statement.    2. More rigorously check whether OSG exists. In the process of fixing this  I discovered that the version of `FindOpenSceneGraph.cmake` that is provided with `cmake-3.5` will set `OPENSCENEGRAPH_FOUND` to true if it finds libopen**threads**  even if libopen**scenegraph** isn't actually installed. I believe this is a bug on the part of either CMake or OpenSceneGraph  because this behavior contradicts the variable's description provided by `FindOpenSceneGraph.cmake`  but I found a workaround by checking both `OPENSCENEGRAPH_FOUND` and `OSG_FOUND`. The latter seems to correctly return false when OpenSceneGraph is not available.    Note that the vast majority of the diff is due to white space from indenting the content inside the if-statement.
dartsim/dart,907,2017-08-07T21:59:22Z,2017-08-08T06:41:34Z,True,2017-08-08T06:41:34Z,5826080bd3696148d82387c4cff0bab72353666e,1,9,95fc3f5df4b39d5a1089560a0d89b8a62509dd7e e964e40de558b568ffc8ff889c1d77d5c3091ebb abbe49e3d1892b149bada7b44fe60fd7e5bb3185 a2157f702dd566b2280262a276f0546478035561 b5246120a78e7edbf2a502323fc1ac2540498c7e 24ed58f746a80a3ba09732278535a57a5f072e6c dda9aae7c039363eabc2272458a312c6288340a0 3908788a82deed2bd9f0611964d44ba949ae1cd0 3158f34119fb01756d2378f3805194df2dc1925c,,Packaging 6 2 1,* [Ubuntu PPA build: Trusty](https://launchpad.net/~dartsim/+archive/ubuntu/ppa/+sourcepub/8152637/+listing-archive-extra)  * [Ubuntu PPA build: Xenial](https://launchpad.net/~dartsim/+archive/ubuntu/ppa/+sourcepub/8152539/+listing-archive-extra)  * [Ubuntu PPA build: Zesty](https://launchpad.net/~dartsim/+archive/ubuntu/ppa/+sourcepub/7804596/+listing-archive-extra)
dartsim/dart,909,2017-08-24T23:54:20Z,2017-08-25T00:32:42Z,False,none,f6c023293f103bae71ed0d8ff9db7da0bd285fb7,4,3,6a809f205e3084126a88c2f019a505d179506c99 a268c2488329a8638385adc733ad765419dffc68 b5e87860e5f579052a778c471b52eec061dbced5,,Provide setters and getters for WeldJointConstraint mRelativeTransform,I couldn't find any reason to restrict access to setting `mRelativeTransform`. I also couldn't identify any other data members who would be impacted by changing `mRelativeTransform`  so the setter is just a straightforward copy.    This addresses #903.
dartsim/dart,910,2017-08-25T00:35:35Z,2017-08-28T08:03:30Z,True,2017-08-28T08:03:30Z,7b5c6c1da2dbd9f04fc52409b141e6c66cd0c55d,2,1,e8405ac2c74c68ffcd78db10ac60f1d85c210142,,Adding setter and getter for WeldJointConstraint mRelativeTransform,I couldn't find any reason to restrict access to setting mRelativeTransform. I also couldn't identify any other data members who would be impacted by changing mRelativeTransform  so the setter is just a straightforward copy.    This addresses #903.
dartsim/dart,912,2017-09-03T08:45:47Z,2017-09-04T01:23:56Z,True,2017-09-04T01:23:56Z,5c0c014cf6eab0b3ffbf30e10a7e339b80b355ee,1,2,ce9176eaff8f1df93c8d686e74703a198b9c4e52 c3a69944c4dfb284591c2c9a86253bd5a458c341,,Reformat LICENSE to be detected by Github,This PR slightly changes the format of `LICENSE` file to enable Github to detect it correctly. 
dartsim/dart,913,2017-09-03T13:38:52Z,2017-09-06T02:09:25Z,False,none,14c0cb7a0cd982057f50aaaef2e678e0c2973104,5,39,b7f223f9b4a208e85e5955e300a13883bdd6a133 e69e9849f0216ddeb74ce1564785382497e8f193 70cfaeca2696de171d174414c0da7c229c1a5725 fe9fdd9dc8011debc8aafd464cea933c01ecd7e2 dbb1d7c4795ca046dcb069313cbd252748283377 9f268d972725d0a00f786ee4b18800e597ab94c7 b8578a74474ebefc42baf1478c89b1d3e6b93ab6 170bb5742b2e09f0e44349b0ffe59df925dbfb0e 2fbce42b5a1fc8c9fed3cfdedc82c755d543cda9 d6a52f0fb77c0c709e0864bf7b74ab5aede4dbc7 3f0937f52760f0faa32b8b6df927d509429b255f db401761958acd230ed45647bc1eee4331d777f1 792c16e663cf4fcd4034ede025171cc764fcad9a 8f4463104e6bae006000cb60033ecc0d42fba748 2fd50db61c043744627c6bd213877799c1a7678a 1edd3ee8b30d929b82157c0285f17d5167969f8a 5d7bf989a2eeb81b5f5d06996249d33eede7ed55 bdd5dcd8f904bbb48f63b5f5bc23d9ef55ec3ff6 f7170528a5d3818af2dbc179893c5ef86fd11e3a e8575d9d2485745078b689cf4a893309fc8ed4d5 4a9a22d29df482c5c43b4f26032259752e6594bf 336834636076d7c5349fb9cf5d47176f1c82a6a2 229cae6aeb97739e67d04c63aafb22ece180e175 7b2ce7f631bf10e1bc8a1d381edd268c548741b5 76533cd259f20f2722ef16e5d75a47fd8dcef749 07f341358b18f97bf1cf847b77b38951d233efe0 9972a5422517e1b4dca1f0ab6454d4132eb881bd 158ba1a8c175e5940aad9208c49723e5f6b7ffbd 89c77c8e9f1f9e9a6c8681da787831c1b05f13cc 8cacda1b3603e058a11f87751bd5637a9ce3eb5c fcafdc195a3e390147536124fec1e9af99317705 535c084fdc39f48844918d30fc8391778c0e80fe 8cf6340699fe81ada7aec0e7195fa0f456bf9fd8 2d21f354def0be2f044974ce0a2a92a02436db30 751f514b7e81d476a63459c9322557b226b9f9fc 4b6839284cf0ad239367816c8abeadfa43373042 11bd145790cf245b852eacedd1772e1607d2a5e1 ef251a0a01e29d1710c6d3f984d0985e508781bd 9869ba1a31c8bb6a554d497cdebfccdbadc92e04,,Switch to vcpkg for installing DART dependencies on Windows,We've managed and provided own installer for the DART dependencies  which was tedious work.  [As discussed](https://github.com/dartsim/dart/issues/260)  this PR hands over the duty to `vcpkg`  which is a package manager for Windows developed by Microsoft.    Note that we still don't build DART on Windows until the [existing build issues](https://github.com/dartsim/dart/issues/753) are resolved. This PS only changes the way to install the DART dependencies.
dartsim/dart,914,2017-09-12T05:39:16Z,2017-09-12T20:48:41Z,True,2017-09-12T20:48:41Z,6e94625081a1b1fe00619690b6ba73fc9f0d2642,1,2,b98d13e96562dd68262085ab530fa31fe276688d d8288cf9f6be487e3d7bba9f1ff8a4b02e95788c,,Read alpha value in Skel file when possible,
dartsim/dart,916,2017-09-28T15:48:44Z,2017-09-29T12:42:32Z,True,2017-09-29T12:42:32Z,b8b4a14a5267abcda96ca609de0a25e4b07177cc,2,2,cbc6004394d45b60180a531ce89958819fe574f1 a3f368133bf394a6fb3732d98321953f2e0013fd,,Chimera friendly version,We're planning to another python binding package for DART  namely dartpy  that uses chimera to automatically generate the bindings. Unfortunately  chimera has an [issue of using lambda function parameter in a variadic template class](https://github.com/personalrobotics/chimera/issues/148). This PR workaround the issue by replacing the lambda function with a static member function.
dartsim/dart,921,2017-10-04T16:08:11Z,2017-10-04T22:20:00Z,True,2017-10-04T22:20:00Z,8090aaec352e6198c4606c98e4990c7942864cb2,1,1,dd7afe7fe5055649130b2d6a216efbbe74d76fe0,,Packaging 6 3 0,
dartsim/dart,923,2017-10-04T17:37:51Z,2017-10-05T21:05:50Z,True,2017-10-05T21:05:50Z,395a78faf67cb8b12a09a5d50f0f187f00ae697a,17,2,f75a4067458d06b726bb5a33c267a022fa653662 b947520de2c47ea50c16e88cae0c9ee077c227b9,,Remove planning component and FLANN dependency,Resolves #920 
dartsim/dart,926,2017-10-10T03:29:08Z,2017-10-12T02:59:18Z,True,2017-10-12T02:59:18Z,a9d565e13aade70eecab3639a1c501ffc37effe6,1,1,e925f4b6db741413f0e8db7d9c6e73fd35fa7f39,,Create PULL_REQUEST_TEMPLATE md,
dartsim/dart,928,2017-10-14T01:13:55Z,2017-10-17T14:49:47Z,True,2017-10-17T14:49:47Z,dcfaec906db449b415e38ee1c0fe321cd80918ce,13,7,8090aaec352e6198c4606c98e4990c7942864cb2 b7193d023f6ffad08ea9373221a37250eb964dd9 d685eaaa4276d85c76d1565a06b4c3f89e9977c9 f7bc96bbd5811a8cd410cd290e4c13987aef0a13 e1e0ae99896904f7fbe2a1d4c13a81a7f399b8a3 146ba5637c2337935d352f60222e14d378e9a6c7 1a93a50517cd3a7a97e4ffe2714db9e639247dee,,Change Function eval Gradient Hessian to const functions,Resolves #927    ***    **Before creating a pull request**    - [x] Document new methods and classes (nothing new)    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (nothing new to test)  
dartsim/dart,929,2017-10-19T21:56:18Z,2017-10-23T02:57:21Z,True,2017-10-23T02:57:21Z,118b45df0108c78b39771876e5335a77410766a8,627,8,da509716ef1e0c72bdda6a9fbd33623fa51f0061 a777a3cde93e5be38e2a5f751a221fa8181d3138 0e9fbea1111477da9a8dc09e6223c1462ac69a48 1a177e9489e31baafb5d197e96cfabeb20f88235 29820706456c91f02f2abfa65b24fd6657d9a21f 6791394afaa4499b76d7d188c7ad0cf85e351c35 1c0f116ae52714e6b0547e71f47b60ec9a15f1db 695e35143241df73c4bcc45dfef10df04c06e4aa,,Update credits and copyright holders in license,This PR includes:  * updating the copyright holders adding [Personal Robotics Lab](https://personalrobotics.ri.cmu.edu/) and [Open Source Robotics Foundation](https://www.osrfoundation.org/)  * adding [Siddhartha S. Srinivasa](https://homes.cs.washington.edu/~siddh/) to the list of the contributors as a project advisor  * simplifying the list of copyright holders by replacing it with a statement that refers to the main license file at the root directory    ***    **Before creating a pull request**    - [x] Document new methods and classes (N/A)    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,924,2017-10-04T17:48:12Z,2017-10-23T16:45:17Z,True,2017-10-23T16:45:17Z,8964ce7320719a1ef09a6aaeb51053c6b44d6e48,93,6,f75a4067458d06b726bb5a33c267a022fa653662 b947520de2c47ea50c16e88cae0c9ee077c227b9 88f45a0f9898ef8a90ee1a9c77ffbc34f283517b 2d9b39fb6a611d48d2edbf0433ee07fb70e20d52 876d7b16893714926486047f37810482c4fd7b26 63c5f950565ce0a26208ed2684c44cd330c60271,,Rename utils namespace to io,Depends on #923   Resolve #815 
dartsim/dart,931,2017-10-24T20:17:06Z,2017-10-25T06:08:03Z,True,2017-10-25T06:08:03Z,e5fe91c30064349eeeeb2baec82231cea1f36eed,1,3,810774313a554e89c34876ea7dd344f85bafec2e 4586fcb9f73cbd0f3da223153c4e443db390ccc9 a0f78b17dddfaa9794cc1b9dbccbf7dd528a2183,,Install fcl using the full formulae name,I haven't figured out the actual reason  but it seems tapping `dartsim/dart` isn't working and it causes the CI test failure on macOC. This PR changes the script to install `fcl` using its full formula path so that it doesn't require tapping.    ***    **Before creating a pull request**    - [x] Document new methods and classes (N/A)    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md` (N/A)  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,932,2017-10-24T22:03:44Z,2017-10-25T14:22:14Z,True,2017-10-25T14:22:14Z,30483bf36beee436ef9b4b3fd8e21fe2fab98d39,1,2,57e4213e0a0e1ea781905f64dfb0f0629cdc40b5 da3f6279b0936f6a28cb84e316124c04e3333193,,Cache apt and Homebrew to speed up Travis CI,  ***    **Before creating a pull request**    - [x] Document new methods and classes (N/A)    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side (N/A)  - [x] Summarize this change in `CHANGELOG.md` (N/A)  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,933,2017-10-27T15:30:32Z,2017-10-27T15:40:20Z,False,none,00ad4f07f19e20d622309378d9579484f9e6ae99,1,1,445fa001cbc09c4327f630451123f1bb949d1b8c,,Fix unused error variable,I'm a member of the Pinguem.ru competition on finding errors in open source projects. A bug  found using PVS-Studio:  dart/dart/external/lodepng/lodepng.cpp 5265 warn V547 Expression '!error' is always true.    The variable `unsigned error = 0;` was initialised but never used. In this function errors was realised as a return code  f.e.:  if(bpp == 0) return 31;  So variable `error` is not deeded here.
dartsim/dart,934,2017-10-27T16:13:04Z,2017-10-27T16:29:02Z,False,none,67dc28f11cb0f0c68e2e052e2f652355c39da467,1,1,218f6764ae04eb268d4d251412c407c612e01c49,,Fix condition,For competition: the Pinguem.ru competition on finding errors in open source projects. A bug  found using PVS-Studio:  dart/dart/collision/fcl/FCLCollisionDetector.cpp    998     warn    V523 The 'then' statement is equivalent to the 'else' statement.    The `geom = createCylinder<fcl::OBBRSS>(radius  radius  height  16  16);` calls in any case. So condition needed only for `TODO:`(not yet realised) operations.
dartsim/dart,873,2017-04-12T17:03:16Z,2017-11-10T11:50:46Z,True,2017-11-10T11:50:46Z,12894a2580e3b6b2c520c00f60ccc5cc9259e0d2,41,26,702c58e79b3db349fc959b5fe464677bd7527b75 04c7497b24d5d59c1a697310875de72f07925183 ea9687b20a47de044c784cccf241bb60598ed39d a8923ac4acfd942865622219141be2907078360e 0c5fa27d33db5f62a0a60263e9b49fb43343e0d9 3f76d7c84864284aa5f74d5539b270bdcfe6fd25 5b44ddf171415daf004f30c988409f16a9217436 e89b8269a1b04aa196092fc40a38585ed0d50eb6 33d5204ad911567b04ed67d867444403503cec8d 090852e1990593ae7c7c8b09c653e4dad2174c0d 3a1e823f31047459f56bdb73ef0efb870e2188c3 c239ce4c0958ba56ce2707cf18f1d8916dbf1d05 1f6b7a518ac81eec40a6bef5172464e3660e94bc 264adc4918d70a7abb9f6306f18adcb539b4b033 b71d9f7f03eece9f5860526740f0643daef2ecf9 06590df519c93fb3fe9c79dd59495894cb3b7021 bc64ece7827a951f7e4ab8e38c0f266ff4cc0f11 4dd9f7b973dba44f334053896772d9c54402535a 3cb7d0deeb797b8f67037cfadfaccab11fade283 dd0d610d2569fcb7e64e0b589389dfaf65a2a747 01d490d7ff111007e3802cdfb7e76e18ee84fbb5 2a81929d1641d4b7bac21c6c53afd7efd23ae3b2 64f48944a712d27932d272276d6a3775a525b117 e6c23bfb5d92d0053888fe8853d433e330b745be 9901e3ff9abea0bb7fd7b6d782afb33ed326c678 58b76a909dd047ee8ab286dd5b1c6ea7cad1c420,,Handle FCL 0 6,I abstracted out the FCL incompatibilities by typedefing a bunch of the common FCL types in the header  depending on which version was found. This likely needs more thorough testing  as I only had FCL 0.3 and 0.6 to test against.
dartsim/dart,936,2017-11-10T14:01:55Z,2017-11-11T04:03:59Z,True,2017-11-11T04:03:59Z,cbf82772f055f51ad551378600b8fbb698c91852,43,8,aed89bac7d8a48185ef810915cd6f4fcfd0aa6c5 be1531aecfdc986650b6a7ee0e99915af7d97b89 d08fe621734515b1df28880f267385fa74e58584 ba8bc69340b63f463b9852dd47bebed6d5f20daf 48ee2c28102402ccbe12fa898f5998eb394a89ae fd1b2be98fdbfaa304920f5dda2443f5791466c2 821f6bf23c3d5638456813ffe20a974ef79c2808 c5ac0a1ea248d21589ea360b94a76364bb909cea,,Backport of 873 for DART 6 4,Backport of #873 for DART 6.4    ***    **Before creating a pull request**    - [x] Document new methods and classes    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,937,2017-11-10T14:21:25Z,2017-11-10T20:44:15Z,True,2017-11-10T20:44:15Z,003447fcb9d802a5490bd600b6067a0ba6d66377,5,3,f0150b411e0092fff75a5768b4e9794076329a28 2adf8ab64b3c4df8bce7db20e558c4dc1ae0e49e c9866a30883708ee619b6933bf4099634353e10a,,Suppress Wdangling else warnings,GCC 7.2.0 prints warnings of `-Wdangling-else`. It seems this is because if-statements with a single line macro is prone to dangling else. This PR suppresses these warnings by adding explicit braces around the single line of the macro.    ***    **Before creating a pull request**    - [x] Document new methods and classes (N/A)    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,881,2017-05-07T23:31:30Z,2017-11-11T06:17:46Z,True,2017-11-11T06:17:46Z,5bebbbf7c55d4179ad27190df5b2a76f610fbaa8,11,16,88cc17cbadfd1a2558df06717ea1356b740dd161 01f9ee3083bd2e3cc32870addf381d1d4c0cf236 0b355c64dde758ad77c669a4a032b87df225092e efb9fbc29566f24034b4db9cad3e9e53b670ebb0 ed5bedd4098b721c568f64ea4596a34c410b8434 323eda21d062e803aade28be67875b7742a50783 549d28bb4a718e3e5521a2c1078233cd1ab5d5c3 0bf9b06953eaa5cf57b6708ffba08596dd8a5478 c6b8c27d32f6842a498e6804da1e6753354ae227 149aa59582837329dd36eb4d00f2f49abb8f98ca ab9df6dce8df77a2f8b5e2b0c5297e9a57e96231 823c6aa998ece8ec0372937bc821285e5ecb2b81 56a6c3f565d1db316e4c80eafee38ccab16efa5c 3d871d6e0b412f133f9873ed909c611965e17469 114a229eda449c539d6f12736653ecc478c851b5 85db7ac008e8477350175fa6af9d3391089851d6,,Avoid NaN values caused by zero length normals in ContactConstraint,When testing the integration of DART 6 into Gazebo (see [PR 2547](https://bitbucket.org/osrf/gazebo/pull-requests/2547/)) one issue was found with the iRobot Hand model: Some contacts with a zero-length normal were generated  which lead to NaN values  which in turn lead to a crash.    This PR fixes the issue  though it is only a suggestion on how to handle this. We could also prevent zero-length normals from counting as valid contact altogether (e.g. in ConstraintSolver.cpp)  and not insert them to the list of contacts. That would prevent the issue as well.
dartsim/dart,938,2017-11-11T05:15:07Z,2017-11-11T13:09:04Z,True,2017-11-11T13:09:04Z,6d8058d5b3a5453418a7d7a9a27672efc0c91d6d,42,5,003447fcb9d802a5490bd600b6067a0ba6d66377 cbf82772f055f51ad551378600b8fbb698c91852 f8a017cd498d99163ced908ba74d60118ad310ca 5bebbbf7c55d4179ad27190df5b2a76f610fbaa8 2382fb38516c2655310838bf64b70f607b56cb5c,,release 6 4 master,    ***    **Before creating a pull request**    - [x] Document new methods and classes (N/A)    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md` (N/A)  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,940,2017-11-12T18:35:50Z,2017-11-12T18:37:34Z,True,2017-11-12T18:37:34Z,a798db79546323c6d69c87673442a215614f2f85,1,1,21c34fdfeae8b007b60dbd248c0a62a2c2219b20,,release 5 1 release 6 4,  ***    **Before creating a pull request**    - [x] Document new methods and classes (N/A)    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md` (N/A)  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,941,2017-11-12T18:39:58Z,2017-11-12T18:43:56Z,False,none,none,51,4,003447fcb9d802a5490bd600b6067a0ba6d66377 cbf82772f055f51ad551378600b8fbb698c91852 5bebbbf7c55d4179ad27190df5b2a76f610fbaa8 a798db79546323c6d69c87673442a215614f2f85,,release 6 4 master,  ***    **Before creating a pull request**    - [x] Document new methods and classes (N/A)    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md` (N/A)  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,943,2017-11-15T21:55:01Z,2017-11-15T22:24:04Z,True,2017-11-15T22:24:04Z,4d4ff591293c5d7db1a59d8a00c01e6aeed6f278,1,6,8578363601b458b04567c1800bd334933ffaf33f f7a5600323064acee50b7bf0728354dc9b764dfa 28234adb19bc87ada82c79f7acd66750a3fee3ba a267ba32451236eb7f9e763f6c63df431451e1e6 b26154e17b8bb671c3471bfe08dbbcc671951f3c 4f51f5dbab36bb1229e2edc61d8b022b92e6dded,,Add issue template,
dartsim/dart,944,2017-11-15T23:15:56Z,2017-11-17T22:38:02Z,True,2017-11-17T22:38:02Z,1fbb68eaf84b2f57bb9ac5ab9913a541bdd81a1b,2,20,dfb00e5c589436f4690785f2131276b5c134509e 128dd000836a590c6b3412e268655659f195ecad dc12df59d4d85f1ddd6a753d0194b5a09b8697e0 927934a9eb6c4bbd7070a1f3d0bc9e2f1c0cca87 8c62bf4632f581503c9f48f0f8f869cfa9aedcec b91c238fb222a12b6826669e8df16585c58054fe 42d228e8681559ee4837d902593a672366835bce 105c28d0bf1695fae105182ba1d8bbdd3c302dc5 e2de1985163477fdba0485e6c198821e035d979f ee1f412f10fb3ba04101e37342320e54e2e816f6 977eca3fe750de5c5072d50ce35ee9b8a81f84d1 f6f3d10d117b3210d824d9c44390470c8dd7c78f 2afff840ffee0a932da7a6c27050cc13fdddea02 6fce5b01049d3c0de642104b8f1cb501af34a0a7 8c728a54a5e762775aeb798a40b15c5df643b257 ef33673114b0cd2f6852dcae95ce0235f0710ac2 591aa0f0189d1ba3220ff9761ed00f170ef1c46d 18a566623ddffa7b8252ed9142c15fac33704edf 1df3ee3603187e7df5161618f2509501a0e8bbf4 3632e0afa9563d8c31a03bc60ad52a7998c89e05,,Preparation for submission to JOSS,We're submitting DART to [JOSS](http://joss.theoj.org/)  which is a journal for research software packages. This PR is to prepare the submission with following checklists:  - `paper.md`    - [x] Title    - [x] Summary    - [x] Author names    - [x] Affiliations    - [x] [ORCID](https://orcid.org/)    - [x] Key references    - [x] Date (assuming submission date)    - [x] List of ongoing research projects using the software or recent scholarly publications enabled by it    **Links**  * [Author Guidelines](http://joss.theoj.org/about#author_guidelines)  * [Submission status](http://joss.theoj.org/papers/f0cc65c89f6bbb55a35be08189e32bd2)  * [Pre review](https://github.com/openjournals/joss-reviews/issues/460)  
dartsim/dart,945,2017-11-19T01:11:13Z,2017-11-19T02:54:39Z,True,2017-11-19T02:54:39Z,e48afbae94f3dcacf30edf757d41e009728cce36,1,1,1d9cc17bc96d884b81cabfbcf594b3b73885c237,,Fix affiliations of authors,
dartsim/dart,156,2014-03-17T23:45:58Z,2014-03-18T00:05:35Z,True,2014-03-18T00:05:35Z,f5735d9dfe84a15ab22c13b869b398dbd01c7461,16,2,e61dfc27d7e6ab4995e782a74d4b0c39543c60c0 65496eec617a729ff80b59f8e48c03b6356dc1c1,,Add optional collision detector BulletCollisionDetector,DART has 3 collision detector types: - [`FCLMeshCollisionDetector`](https://github.com/dartsim/dart/tree/master/dart/collision/fcl_mesh) (default) - [`FCLCollisionDetector`](https://github.com/dartsim/dart/tree/master/dart/collision/fcl) - [`DARTCollisionDetector`](https://github.com/dartsim/dart/tree/master/dart/collision/dart)  Both of `FCLMeshCollisionDetector` and `FCLCollisionDetector` are based on [`fcl`](https://github.com/flexible-collision-library/fcl). The difference between them is that `FCLMeshCollisionDetector` convert all the primitive shapes to meshs for collision detection while `fcl` uses primitive shapes of 'fcl'.  Some simulation requires analytic collision information using primitive shapes for example rolling wheel for vehicle simulation. In this sense  `FCLCollisionDetector` or `DARTCollisionDetector` is good solution instead of `FCLMeshCollisionDetector`. However  they have issues to use as default collision detector of DART.  `fcl` returns only one contact point for one collision pairs. This leads to unexpected behavior. See [#59] for the detail. Whereas `DARTCollisionDetector` does not cover all the shapes of DART. It supports only `BoxShape` and `Sphere`.  Under current circumstance  `BulletCollision` may be considerable solution. It supports primitive shapes and mesh together and returns reasonable number of contact points for primitive shapes. Of course [`Bullet`](http://bulletphysics.org/wordpress/) is another physics engine as it is. We uses `BulletCollision` component only for collision detection and separate [debian package](http://packages.ubuntu.com/search?keywords=bullet&searchon=names&suite=all&section=all) of it is delivered since Ubuntu 13.10.   This may not our long term solution but I think it is worth in case of that analytic collision solution for primitive shapes and mesh support are required at the same time. Also this pull request does not increase mandatory dependency. When `BulletCollision` is installed on the machine  then cmake detect it and add `BulletCollsisionDetector` of DART.  
dartsim/dart,950,2018-01-03T15:50:21Z,2018-01-03T16:32:16Z,True,2018-01-03T16:32:16Z,f4e1a5dcd791996521328d84972353ea3b7b8688,1,1,2b4b43614cb0d849c78def007e4307450e6efc41,,Add DOI to bibtex entries,This PR adds DOIs to the bibtex entries for the [JOSS submission](https://github.com/openjournals/joss-reviews/issues/500).    Resolves #949 
dartsim/dart,953,2018-01-05T14:20:59Z,2018-01-05T18:12:34Z,True,2018-01-05T18:12:34Z,cb6ac0106a6ad82167261b322b9a5c527c267444,35,3,8e30728b93ef9016ff99f2776e24d89b84518261 fbf7f7717d95c40af850bffb5dc0e4b0f659422c 5bbb8ec43cd05100c7d14c26ef5da7dc31f94cb3,,Update CMake scripts of examples tutorials for DART 7,Resolves #952     ***    **Before creating a pull request**    - [x] Document new methods and classes (N/A)    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)          
dartsim/dart,955,2018-01-06T00:29:18Z,2018-01-06T01:09:49Z,True,2018-01-06T01:09:49Z,1337d55990b6187b9b7df2d68f02092963a68145,9,4,092b0f80c8d779d8eba6ad7b06bc592333098755 3e0b88350db13d00f1644e49c554ad0acce00ed4 08e3b58fe07ca86944484519c262f144c2fade7f f323e7dd1d8f9b29b3e6d308c400aab0f16d3256,,Update DART 4 3 to be compatible with the latest macOS,**Before creating a pull request**    - [x] Document new methods and classes    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,956,2018-01-11T22:09:04Z,2018-01-12T16:57:36Z,True,2018-01-12T16:57:36Z,fa304321d8f310398763bbaf211a0995da661ee1,19,7,bbd6be3aef965ef44af0afa6d1d92e9e7e7f635b dbec50c0e36ba3f1dd9e150e2d585db38792d398 714f097c8166b9f0792062f317d0b42b84961564 db6a2d83da0266862f5046e0cbbf35459b3303cf ee0ea1fb93d315d3c7fe9bae2a5a42e6966e5e8f 3f623d70b6f88cb96fb04c5b519c458cded555cb a110a8717226233c603d189943b52d80fe460a03,,Fix various build issues with Visual Studio 2017 15 5 3 ,This PR enables back the build tests of DART on Windows with Visual Studio 2017 (15.5.3).    Summary of changes:  * Use [`vcpkg`](https://github.com/Microsoft/vcpkg) for dependency installation (resolves #260)  * Increase the minimum required CMake version (to 3.8.0) and Visual Studio version (to 2017 (15.5.3))  * Use `/permissive-` option (resolves #753)  * Disable many warnings; these warning will be addressed eventually    Caveat  * Unit tests are not run by AppVeyor CI yet because custom CMake targets are not shown in Visual Studio (building unit tests are tied to a custom target (i.e.  `tests`)). [This post] says this is fixed in the latest VS preview  but it didn't work for me.  * `ipopt` is not installed because it's not supported by vcpkg yet. (https://github.com/Microsoft/vcpkg/issues/233)  * `osg` is not installed because `gdal`  which is one of the osg dependencies  is not built by vcpkg. (https://github.com/Microsoft/vcpkg/issues/2551)    ***    **Before creating a pull request**    - [x] Document new methods and classes    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,958,2018-01-17T15:51:45Z,2018-01-19T15:28:04Z,True,2018-01-19T15:28:04Z,536d7208cdc6dd1509c4298b5a6791a0aa388380,1,2,79c130a6cedb3072cd0d294659fb4af44cc1245d 1991f22743ad3091f64637eae26b8443a1b6db08,,Fix for 734,This is a fix to #734. In short:    - There's a small bug in `setScale` method of `MeshShape`; i.e.  `_updateBoundingBoxDim` needs to be called before `updateVolume`  - The calls to `updateVolume` and `_updateBoundingBoxDim` in the `setMesh` method are not needed.  
dartsim/dart,959,2018-01-18T21:59:56Z,2018-01-19T23:02:07Z,True,2018-01-19T23:02:07Z,d22fde09b2d5ed4e401b349132fb6901433a5abd,26,6,584179d27eb26ad1a33d1c55f47bdfb5756542bf 15846aaa2d66082b3bf37a14de8d843099a62df2 097d6fbdaf8b77b042995473a7548f074681daf3 b68b624f4bd9409dd0e2d8c5e0289494c885f407 1fe0ce2888102e144a136fc4a9773fce57836114 fe2d49e50193f7d80da7ebb976223ea40b7930e4,,Lazy evaluation for shape volume and bounding box,resolves #734     ***    **Before creating a pull request**    - [x] Document new methods and classes    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,962,2018-01-27T23:31:40Z,2018-01-28T14:07:34Z,True,2018-01-28T14:07:34Z,c65d78778c994b34a6592265c00af7431e90ce5d,15,5,be36bccd066a7c649e2929e8d1ba7fc0545d9a20 7c7ba76babd1077754170564e7593c16389bf1f6 2d5d01623c80c932cbc22b7c44ac0ae6b1684419 d99a9b547478989819bb2b01db8900f6aaa9e031 7063678a1b7128e9b51c8c329d3a56a399d0e1e1,,Add World create ,    ***    **Before creating a pull request**    - [x] Document new methods and classes    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,966,2018-02-01T15:07:19Z,2018-02-01T15:45:02Z,True,2018-02-01T15:45:02Z,e65f57e7b505a58a0c5c52e1368c310c437f6483,1,2,f75c7b1b9927cb24a6dbaf7d864c7e0ab8612e92 6ef54f9475aae79dd22f3956379488f702569126,,Update changelog for 964,  ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`    
dartsim/dart,964,2018-01-31T06:02:10Z,2018-02-01T15:45:42Z,True,2018-02-01T15:45:42Z,fec4c243b4b702d37fb223c691b30dfa90e2d7d8,2,2,d1f5a920341d29963c65c6cee71e3146e7418fb2 e65f57e7b505a58a0c5c52e1368c310c437f6483,type: bug,Port clang warning fix over to 6 4,Same as #963  but targeting `release-6.4`
dartsim/dart,963,2018-01-31T05:52:53Z,2018-02-01T15:46:13Z,True,2018-02-01T15:46:13Z,443300ddc77a39634ce30e092963db3677d35b72,1,1,8d67219412a2182c6a9bba32d3872a6ba48cd95c,type: bug,Use template specialization to sidestep complaints from clang,This fixes issue #954 in which clang-5.0 emits a warning about a typename being interpreted as a constructor in certain contexts.    ***    **Before creating a pull request**    - [x] Document new methods and classes    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change    ***    Do we care about the changelog for a warning fix like this? It doesn't have any effect on API  ABI  or behavior.
dartsim/dart,975,2018-02-06T01:18:21Z,2018-02-06T04:21:10Z,True,2018-02-06T04:21:10Z,0408ea823f15efa2ffa8fe6536e2448ab98d5071,1,4,c0337c9916afd7ba366be07b80e566a3682478e9 4b93c85dd749e6c37a8fff5a5fd2d339d36e7868 62889ae53e733fbfe0c259b84dfaa56e09025b97 ce409ffe4db2f8166a3b23e0055979d65f74ddb1,,JOSS Paper,Happy to announce that DART has been accepted to [JOSS](http://joss.theoj.org/)!  :tada:   Here is the paper webpage: [![DOI](http://joss.theoj.org/papers/10.21105/joss.00500/status.svg)](https://doi.org/10.21105/joss.00500)    This PR adds the JOSS Paper badge to `README.md`.
dartsim/dart,968,2018-02-04T13:06:48Z,2018-02-06T16:35:57Z,True,2018-02-06T16:35:57Z,844e4cc98ddae75e77c4a14df28a373a9022bbba,1,2,627d1f908e2612e18c2d81b5f05eed9837526d1e 5e6f11247ad610fba87f2321936534996a00ae23,,Setup online static code analyzer Codacy,[Codacy](https://app.codacy.com) is an automated code reviews and code analytics service. [Here](https://app.codacy.com/app/jslee02/dart/dashboard) is the dashboard for DART.    Codacy has several static analysis tools where two of them (cppcheck and shellcheck) are applicable to DART.    I found two other alternatives to Codacy  but they don't fit DART because:  * [Codebeat](https://codebeat.co/) doesn't support C++ projects  * [Code Climate](https://codeclimate.com/) isn't free for open source projects
dartsim/dart,977,2018-02-08T20:00:07Z,2018-02-08T21:51:21Z,True,2018-02-08T21:51:21Z,a8df7989851cc6d0541b5e5a5e7905332e05b9a6,1,1,da94eae2855956b3525b38093387fdcd7d898a3e,,Update dart_format_add macro to handle relative path,
dartsim/dart,976,2018-02-06T16:55:07Z,2018-02-09T13:02:38Z,False,none,bd7c8c72abcdd7b999e2595434cf48a015750ea5,4,5,8a995f6af97d1bc6ec5f252c3db8ced8dbb767fd a3d7dc662e87fc772b47ebcfa2837ae37fd3a10e 9cd37345dee83ae70bb291224a8625e8b2a67056 0ae7cdc1ce173c35c17f8f5cd2e719f180871b65 551340c9fc46026dc374247e04f2f8580f950ded,,Osg shadows and lighting,This PR enables shadows in the OpenSceneGraph (OSG) wrapper of DART and solves #971. In more detail:    - There was an issue in the OSG lighting setup:      - The turning on/off of the lights was reversed. I fixed it.      - The lights were always directional; directional lights do not have any attenuation and this results in unrealistic scenes. I selected point lights with distance attenuation in order to produce nicer scenes.  - I created a `ShadowedWorldNode` that overrides `WorldNode` and provides the shadow capability (using the ShadowMap technique). I did this for 2 reasons: (1) someone may not want to use shadows (and they can be computationally intensive) ~~and (2) for some reason in OSG when no shadow can be casted  nothing is shown; I am still investigating this issue and ways of by-passing it.~~ **Edit: I misinterpreted this; see below (everything is fine).**    Here's a demo:  ![hexa_shadow](https://user-images.githubusercontent.com/1283922/35868254-427a14d8-0b5c-11e8-802a-497ad9e62f2c.png)    Let me know what you think...  
dartsim/dart,974,2018-02-05T15:23:52Z,2018-02-12T03:22:12Z,True,2018-02-12T03:22:12Z,37fc5e8b3942402bb9c3a1ef11716055d37fcf64,3,8,01272653e36a27b2724fffa0d66e84b257616a07 42349b93f3335c3bd2530b420f86949b3233e5e3 f1a5631723dbe057b14bfa60443e32199261a50b 69393c814daf0b5c8b407b7955b4d09fbbb7e331 2b32a81cf8fa45c866b0e17010bc1ce3c56fa0eb a90bb253220ce01a9fcfbcbb54cebbd0a1b046be 753df2943f532a575f25dda9470a7d2fc392dda0 b7bc5a2e1d0b38ae808cf27d15dcd4d8f73a49eb,,Use Brewfile to install depedencies on macOS,[Homebrew will fail when it tries to install or upgrade a pacakge that is already installed the most up-to-date version](https://docs.travis-ci.com/user/reference/osx/#A-note-on-upgrading-packages) like [this](https://travis-ci.org/dartsim/dart/jobs/337454320#L68).    This PR introduces use of `brew bundel` and `Brewfile` as recommended by the [Travis manual](https://docs.travis-ci.com/user/reference/osx/#A-note-on-upgrading-packages).
dartsim/dart,980,2018-02-11T05:54:30Z,2018-02-12T03:23:01Z,True,2018-02-12T03:23:01Z,ca450391985155cf05faeacd48af284052bb42af,2,2,43cbab654adb68359db11f79c82e6aa96b7245a2 02df639a0e1a4ca9b82f4edb732e339efdef9ea8,,Cleanup doxygen,This PR ports https://github.com/personalrobotics/aikido/pull/319 into DART thanks to @brianhou.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  
dartsim/dart,981,2018-02-11T06:06:13Z,2018-02-12T03:23:30Z,True,2018-02-12T03:23:30Z,f128d8e76c70c568716d0aebbb1219b30fdf7966,1,1,63df1bbb7b173f7c98791bb4cb30aa18e27cca07,,Add style guide documentation,This PR adds the style guide documentation ported from [AIKIDO's style guide](https://github.com/personalrobotics/aikido/blob/f09ef8476f2aac45c89726aef46cbb881f2840e4/STYLE.md) that is initially created by @psigen and improved by the AIKIDO development team.    This is not complete  but it would be good to start to maintain the style guide document for the contributors to DART (and ourselves :smile:).    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  
dartsim/dart,979,2018-02-11T05:35:40Z,2018-02-12T21:28:04Z,True,2018-02-12T21:28:04Z,88e5186e2145b04a5a8461176921bf1e3204e294,3,1,22927fbf42a057f9db59185c2ba165d5cafd7365,,Update clang format configurations,Once this PR is merged  we will apply this to the existing code and enforce style check using Travis CI.
dartsim/dart,972,2018-02-05T05:49:46Z,2018-02-12T21:31:58Z,True,2018-02-12T21:31:58Z,a4208af107f5ac75bbf4884b866ea904e77305a2,16,8,f15f1965fc506b5fc08ec5b8cc6869ae68cc110e deaa6f3d5cc7d1f16f0aaecfc9693554fd926f67 9ed3b58e4ce043ee90cc381d03e6065f986d9b50 872ef693e31fa9f411b05e4e301b8b4918e12b88 2e0d73d5fa933ef8ea8b5a8c4d0e3282dc2ce735 c79de2dd272ffe16db4acc7caa9ab53b4af7318e 951cf24ac09600f0b2f99de94ffafb7713f7ed08 5c7455721a8beceed38960fb359d9188df4d63b1,help wanted,Add ResourceRetriever getFilePath ,Revision of #970 retargeting to `release-6.4`.    ***    **Motivation**  In some cases  it is required to extract the (absolute) file path of a URI (if available). For example  `MeshShape` needs to know the path to a mesh file to infer the path to a texture image  which is given as a relative path. Currently  we don't have a public method to get a file path from a URI unless it's a file URI. `PackageResourceRetriever` and `DartResourceRetriever` have similar functionality  but it's not public.    **Proposal**  I propose adding `ResourceRetriever::getFilePath()` that returns the absolute file path specified by a URI or an empty string if unavailable.    ***    **Before creating a pull request**    - [x] Document new methods and classes    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,750,2016-07-21T11:19:00Z,2016-07-21T21:34:40Z,True,2016-07-21T21:34:40Z,2841967fc6628c9aea58c93227b28abdf5dfbcc2,7,6,602f983ea69f2f9ec2c4e92ef62ea0095f6ece4c 05c59450992788c173f87f4015acefef2238024f 9ddb31470bb0a1fc1932ad3615692bf9cba4b158 2523d37fcd712ae76c17d5756bc8cdf125972d26 eaa10ae2b4e0d29de003921d868f0c62e12ed0dc 2996db414d2e784e3523065496dfa5bf5ce3da4c,,Update API to support fcl 0 5 and tinyxml2 4 0 for DART 6 1,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/750)  <!-- Reviewable:end --> 
dartsim/dart,749,2016-07-21T11:08:09Z,2016-07-21T21:33:08Z,True,2016-07-21T21:33:08Z,d52dd29793ebd42c190ab219b2eeddde6c1bb886,7,5,602f983ea69f2f9ec2c4e92ef62ea0095f6ece4c 05c59450992788c173f87f4015acefef2238024f 2523d37fcd712ae76c17d5756bc8cdf125972d26 eaa10ae2b4e0d29de003921d868f0c62e12ed0dc b2ac9702fa32872b16b5db70a0d7d8396c80e68f,,Update API to support fcl 0 5 and tinyxml2 4 0,FCL switched to use the smart pointers of the C++11 standard library since 0.5.0  and removed `XML_NO_ERROR` since 4.0.0.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/749)  <!-- Reviewable:end --> 
dartsim/dart,982,2018-02-11T19:54:38Z,2018-02-12T21:27:22Z,True,2018-02-12T21:27:22Z,b42de6bf9a579885fdf7da81d649692a33564f89,1,3,ca171d1cc9650ec592f81f1ba52c046a58dc05eb 20fea4f6491316729ec1e028bd73b799d6b92e1e 6e24003290910335025afe263f50925fea0936ad,,Add probot stale configuration,See https://github.com/probot/stale for more details.
dartsim/dart,973,2018-02-05T08:35:12Z,2018-02-13T04:33:57Z,True,2018-02-13T04:33:57Z,f1ea7fcb76469208b9d065887cdc450e332147ad,11,12,f15f1965fc506b5fc08ec5b8cc6869ae68cc110e deaa6f3d5cc7d1f16f0aaecfc9693554fd926f67 9ed3b58e4ce043ee90cc381d03e6065f986d9b50 872ef693e31fa9f411b05e4e301b8b4918e12b88 9e93be971557e7a93c0917050aea4779ff0b3aca fe2f40cfd25ea66722f7d1e4c60c2794d4976483 bd05583f723a61852c7bb95fff29d9e88c342c08 9d00eb1cf3c7eb63697e91d9d21cbd7b0a62e18f 450827cc5d9d996bf7cdf9bda1812f93ddda4bea 6dd32031835ae468c27299fc4390cfcc8bc16ab3 4a54b7de7957119a7f40a5298d526557ca20c577 c8459f145bccb7dd0efada92b50ca1ad83de9cbc,,Render texture images when available,Before:  ![image](https://user-images.githubusercontent.com/4038467/35794923-5ffccab0-0a0c-11e8-9c00-2fef853253ee.png)    After:  ![image](https://user-images.githubusercontent.com/4038467/35794908-49ecdb16-0a0c-11e8-92a6-80ca0358ba3c.png)    Depends on #972   Resolves #965     ***    **Before creating a pull request**    - [ ] Document new methods and classes    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,970,2018-02-04T21:29:06Z,2018-02-05T05:50:08Z,False,none,b996f6ada1f862b6480de455eee03c34477a867f,10,2,cfd9c9d65f6d092aeea9435e9b95dab7a4dcf3c5 b2270f97280b43954bb21ef970da97aeac589eed,, WIP Add ResourceRetriever getFilePath ,**Motivation**  In some cases  it is required to extract the (absolute) file path of a URI (if available). For example  `MeshShape` needs to know the path to a mesh file to infer the path to a texture image  which is given as a relative path. Currently  we don't have a public method to get a file path from a URI unless it's a file URI. `PackageResourceRetriever` and `DartResourceRetriever` have similar functionality  but it's not public.    **Proposal**  I propose adding `ResourceRetriever::getFilePath()` that returns the absolute file path specified by a URI or an empty string if unavailable.    ***    **Before creating a pull request**    - [x] Document new methods and classes    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,985,2018-02-13T21:42:40Z,2018-02-14T04:08:52Z,True,2018-02-14T04:08:52Z,52c729f9d9a6c3dc55154c93504e95a60edfbc8a,7,1,6bd7ac01fcba3f3edf733e53e56eec887ca9f35a,,Add missing texture images of Atlas robot model,[Describe this pull request. Link to relevant GitHub issues  if any.]    ***    **Before creating a pull request**    - [ ] Document new methods and classes    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side (release-6.4)  - [ ] Summarize this change in `CHANGELOG.md` (nothing but 7 jpg files)  - [ ] Add unit test(s) for this change  
dartsim/dart,986,2018-02-14T21:28:00Z,2018-02-15T04:55:09Z,True,2018-02-15T04:55:09Z,68aef6b6d66d3f032971752b3f30c77aa13b3c7c,6,5,a4b3b676c4dfbd60bd6601c9442e9579338c1dfe b5f8ff977e31c3815e4debd4b1eee741415a91f5 695fa256b29908911197b700a582e79db9e69400 05b3d2e2143876b5935547f24a110c40be298fe5 f5de86a21c9502838cffa1e0a3593cd43031f352,help wanted,Extend createShapeNode to accept more types of arguments,GCC 7.2.0/Clang Apple LLVM 9.0.0 fail to build `createShapeNode()` with errors as follows:  ```  BodyNode.hpp:149:16: error: ‘class std::shared_ptr<dart::dynamics::SphereShape>’ has no member named ‘mName’       properties.mName = getName()+"_ShapeNode_"  ```    Travis also reports the [same error](https://travis-ci.org/dartsim/dart/jobs/341632273#L2118-L2120).
dartsim/dart,988,2018-02-15T04:58:21Z,2018-02-15T08:43:37Z,True,2018-02-15T08:43:37Z,d472c120d82597c06df4386e85a5b7ea6185de36,5,3,dff5bda27f49c21b91b61be637edd74c0c99cdfd 9218483a7bcdf685ca4058ad08c46689bbd56119 f4b2167d91f67dfc9e148044fd390b2fb6a95c27,,Fix some warnings from cppcheck 1 61,    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  
dartsim/dart,858,2017-03-21T14:07:59Z,2018-02-16T16:21:31Z,False,none,7dd7e7752511b9132f2a48ad6316f97084f7000b,10,1,bcb717ebee06329a8eba116a80dabcf7c18b2246,status: blocked,Drop tinyxml dependency,As discovered in #434  `tinyxml` is only a transitive dependency of `urdfdom` and DART doesn't use it in the public API. This PR drops the explicit dependency of `tinyxml`.  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/858) <!-- Reviewable:end --> 
dartsim/dart,978,2018-02-09T13:15:49Z,2018-02-17T13:22:19Z,True,2018-02-17T13:22:19Z,a673c871577a1e912b716330e1effb0c393b9172,12,19,70b6d2fe2a5f19d71ef4960e62626bb9050b8e6e a4b6cb40e194b647aa4a0dec718b7f7792d33d1c 655952851ab07a72f51849587d672d86e1b05ea3 37476527351a63a3dffdaa4fa16b3a3df59cfc88 53b8a05c348f171e593cb037ed45118f05ce0371 1fd3aec5241707a0b05364aa4871ca15b3d2c9c1 6a3c530054684407d06d7b9df6ca596cac3f728e 104e0e4da98b6250aba23ec3decbfce039ce76c0 ab72b9d25c89ff174541004aaa1187960ddb4357 47b7e41620c95a5000114c7ec38f7637c7b40f63 a996028b38afb28635793f4a24516b89c4deb9c2 62bb1efdd09e1798259d33bce1cd55888fefe8ba 68dc5db133198ed0d135d67cb4002bfc84b4846d 5ddba86573db80b4c0f836736e75f5abfcbbb33d d7b83e8e56bb53aecc2b3e06df5d59cb33809ba0 c05a17fc687172d0a351fa242ef2e25f73507476 d0d3b82b87b67f1ae43529ca391d800bfc9820a1 6ec30054aee590ef040cff085cf87d688ad4abd6 568631ea4acd53b6dee02e8adb78d8a49a1b53b1,,OSG shadows,This is a better version of #976  where:    - I changed the `dart::gui::osg::Viewer` class to be able to enable/disable shadows. **Edit: I mean that now there's no `ShadowedWorldNode` and you can enable/disable shadows directly from the viewer**  - **Edit: I also added the possibility of selecting a ShadowTechnique from OSG (not all of them though  because some of them require complex settings)**  - I did not touch the lights (this should be in a separate PR)    There are two issues (one minor and one major):    - For now we select the `mLight1` as the light that casts shadows (because this one is higher in the up direction). I am not an OSG expert and I do not know how to combine multiple lights to produce shadows. I think this is minor as it should mostly be ok. Here's one example:  ![hexa_shadow](https://user-images.githubusercontent.com/1283922/35868254-427a14d8-0b5c-11e8-802a-497ad9e62f2c.png)  - The `ImGuiViewer` is not working properly once you enable shadows (either black or distorted views on the ImGui panels). Here's an example:    ![image](https://user-images.githubusercontent.com/1283922/36029209-950b7604-0da2-11e8-9e2d-e13c5f6f9c67.png)    I am investigating why this happens and I will try to provide a fix..    @jslee02 let me know what you think..  
dartsim/dart,991,2018-02-16T15:16:16Z,2018-02-16T17:58:46Z,True,2018-02-16T17:58:46Z,5428e5c0ef5299ae7f893be9ddd7a2bb2dbccd0a,3,3,d1b3c29d8a2ebc3bb4c11f77cf6b2a2542067ab8 429c724ce14f93681c5bbe471e9e1d97f3cd9263 ec73119a260c1b406dd7b4b4c34659c2bce8a077,type: maintenance,Remove Brewfile,Installing dependencies using Brewfile on Travis doesn't work for some reasons.
dartsim/dart,992,2018-02-16T15:17:43Z,2018-02-16T18:00:06Z,True,2018-02-16T18:00:06Z,89e4eb104c9d389f5d3828934ec91291d05a6b4d,1,1,b7039e10cb018b6a135e92afae62c87b8c8d53e7,type: maintenance,Delete appveyor_install ps1,We don't use `appveyor_install.ps1` anymore in favor of vcpkg.
dartsim/dart,983,2018-02-12T03:36:09Z,2018-02-18T01:40:28Z,True,2018-02-18T01:40:28Z,c70af9a46bf79e353e970e9f987785a936ca6c7a,1,4,cb6717a1716eeb6279618cff4e1cd2b68c1fb047 e8f895e42f995bf77632318bc4c9fbeeeedaa4e4 96eb134b5b03705fbddd0d5358f1af4980fb6b87 459604d8246d0249355c70d466090665ac9ee6f5,type: maintenance,Use newer osx image OS X 10 13 ,
dartsim/dart,993,2018-02-16T17:03:53Z,2018-02-18T03:33:33Z,True,2018-02-18T03:33:33Z,cf80373ed89bb1fdce5d25afd9ad2bf2e7b81ee7,9,6,bcb717ebee06329a8eba116a80dabcf7c18b2246 ec87c8fd73353e37cbef72e83e9d05aadc043de3 f9c23a61c2ecae1979a9372278d6756b734e364f c4dc85eb9ee96a3bf75b1cdb8b6847dc7cc2ba6e 01683a863104e27edbba2a7aa61fab89950f6d5b 9a7e83deb805b157bc0d48deca77e461a3456704,type: feature request,Remove tinyxml dependency,This PR is a revision of #858.    As discovered in #434  `tinyxml` is only a transitive dependency of `urdfdom` and DART doesn't use it in the public API. This PR drops the explicit dependency of `tinyxml`.    Resolves #434     ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  
dartsim/dart,996,2018-02-17T14:47:39Z,2018-02-18T03:33:51Z,True,2018-02-18T03:33:51Z,4cb405472da7bafb3bf36963cfd6d8930906a3d6,7,4,652957c8bcea7db52b23c5a6db64235834403e34 10df7e7dc32eb5e7e25cff3b3f064f92564824e3 cc46eeea1ebc71a2c57a66ddec3f8253ba9c2be3 12eeb52173e0cca35d47034fb1c32aac05b6a707,, Add vectorized joint limit functions,    ***    **Before creating a pull request**    - [x] Document new methods and classes    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,995,2018-02-16T18:52:55Z,2018-02-18T18:23:01Z,False,none,94d683dc96e5f4e07ec660653ed157922b671ce8,1,2,7d3c3196c40aa86c35eec5cb5ae4e7522d61823f 78d5b5eb5478a49767e1b1c153a95fb3df3c3175,type: maintenance,Install dependencies only when not installed,
dartsim/dart,994,2018-02-16T17:08:36Z,2018-02-18T18:23:05Z,False,none,5e5247b9be5131ad5213ffc5033e7872df1d592e,4,4,4952dc8d8aa4510542f57ad8419d5bcf13eef6bd f879d862faba1bb67307c9b0a145103c8b5baff2 23457f561f0a1aeb344b2b2ce03f48a6e500e9d4 d5eb8ccba8d2b368d9476af89833072380f288d6,type: maintenance,Add missing shebang to shell scripts,
dartsim/dart,788,2016-10-11T05:12:24Z,2016-10-11T23:40:30Z,False,none,4b702c322cc256cb7d6220be7d9c1315af1686cf,305,29,0302acee220c03a8585ec7a668c05274b6d1923e aecbf8543ddaa87527891b6250eb53df84091b4b c8513a849049240bec9a90b6d84dbb0d631d4e11 2ca4ae2c12afb9826e87de6606dc4e1704030c18 425d9ad9ea2dd926f37fb34c1a8e7c0471b79592 f0374b7775cb8ee81b12c7e903e12c1975774c65 d82d49517330ed1f4609efe1f34ea7236f847b85 2ba310834ed4fd42eb18c37b04197229ef45dee8 286aeb8a856fc922cbfd771827391ee7a55f79b9 1cfbe1a72de7b29f1fa83bdb4cf8c68c035604cc 0f9d4cfcf33c0dc8bc32c29e390acdc9ca1c02f6 3509ee69142afb36583b425352e1da7c83f68386 e7f78b87b588bab14a0aad80275aab7b12edb658 5f6e47d92db0a29ff20ece37f5fca2ef5ffbb93a 4fc45e2ab2579d329a051eca19443c80ef3012b4 83bc548e0f38653ecb43b17c6fb4f0ba10d3ff19 7cf9118c84fa7fa40a58eb0fc370773609cc150c bea8b7fc1f78c03563bc47da782abf9edc25261a 40aa795082b9dba00a071fc4c02cf5ebfbbddb4d 79ef9497f388d8e7854c2da05ae85f50e328d626 7c1a834fe1fe911835e874fc2c840fae000cd88a 119fff95899bd93c8b854bec0322c1b49bd7dd54 c8674e311583da3b1d940f641e3a49563a3b7d6b ab2cd237d62fb42017fb838b0b041d114d670dd5 151a87eb584b2c262e9c743670f402b665f0eab9 3d5eac6041b120d04c6dd8183de8848d76fbb008 760fe2404a9335a541e2fe661887ebcfed0f2fb0 0b052e19fece04dff83eecda0c056896a4d42bfd 236ce013033c5bd6cef42c403f4c0c8fd65032a4,,Update Google Test to version 1 8 0,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/788)  <!-- Reviewable:end --> 
dartsim/dart,998,2018-02-19T16:12:26Z,2018-02-19T19:02:04Z,True,2018-02-19T19:02:04Z,67c9485b05198216097021077ee53bf7c8c1d548,1,2,57527da09a5e94c62d775ef679d31bb41378f86a debcff8a78e015f785f27e2a6fd15340773ff20a,type: maintenance,Add installation test to Travis,Resolves #362      
dartsim/dart,997,2018-02-18T17:36:14Z,2018-02-19T22:17:50Z,True,2018-02-19T22:17:50Z,ca6596cf1eac3ab84713163cdb125b7d975b8ec9,5,10,5349a376414c9c1ad0a4608f5b22cde58288b0cd c1922bb749874dda80a0d0a517696676cc35da2d f015358cdf881a022fad627cd78c989713715875 87d943f436dc51cb334df5bebf81b473d4c7c08b 8b9616100c39e66b071c7e528e4ac595d216eec8 53f94daab473a2f5f3dffaf9816623ad09d94202 a82c43ba6957c6d231cc3381ec3006ea3577bd56 c5d681bf33bc538c0c65c532d2e031cae5ff8144 e1d19159c9f732ac43357406ebea3664a740dcc7 2a3c2ef0f64b892fb322e8a671ff43935963068c,,Add relative Jacobian functions to MetaSkeleton,**Summary**  This PR adds additional Jacobian functions to `MetaSkeleton` for getting relative Jacobians (and its derivatives) of a frame to an arbitrary frame in the same skeleton.    **Caveat**  Functions for getting the derivatives of classical relative Jacobian are missing. This will be added in future PRs.    Resolves #230    ***    **Before creating a pull request**    - [x] Document new methods and classes    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1002,2018-02-21T16:23:34Z,2018-02-21T23:08:49Z,True,2018-02-21T23:08:49Z,da6a8fa184cacf472289dc4b6f166b4b6138869b,2,3,d6930cb678e0fa73547ed948136021358e9393f6 84abad34ba37bff56806efeee83f1c39c05c30f0 0ed6f48142bf49993244cc238db49bc9e1fd6c26,type: maintenance,Update boost dependencies on Windows,based on https://github.com/dartsim/dart/issues/1001    
dartsim/dart,999,2018-02-20T10:53:15Z,2018-02-22T13:33:40Z,True,2018-02-22T13:33:40Z,9da967327ad4924121bf0892d01f4e0b214857b6,5,1,d8a2af2f7bd0d6f1d714674bd5e9a2e6b99aa17d,,Add const qualifier to Joint getForce ,This PR resolves #990     ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  
dartsim/dart,1000,2018-02-20T12:17:20Z,2018-02-22T13:34:48Z,True,2018-02-22T13:34:48Z,b56db03b061b427e3a63464ca7530b0c8bfb99fa,7,4,e338f1b2158cbaf4beec8c28ee14f2c79c9aebf6 6ee7da9f4fe7fc56d617f78b6579d55adb74ed98 5c16c72ae49d019cab9a9fd19058e39d55f36ce1 640e37a48c3bb3ea5549d6949a26b2932b70260e,,Add hasBodyNode and hasJoint to MetaSkeleton,  ***    **Before creating a pull request**    - [x] Document new methods and classes    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1006,2018-02-22T16:16:14Z,2018-02-22T18:08:07Z,True,2018-02-22T18:08:06Z,6d949f9f67eef579cf8c8d67719baf2acf44db10,1,1,316e6985315345076d597fe9ccf213dd007f4f01,type: maintenance,Update stale not to close issues automatically,
dartsim/dart,1004,2018-02-22T15:59:03Z,2018-02-23T00:00:54Z,True,2018-02-23T00:00:54Z,9b28e973240044c233750c0f194d43db4a780798,647,4,4ad14effb42657041a9a735f49ecea825c828b43 fcb8d94dfc38c66c6ace5f1b2df4c28efb43a0c7 218dd246ef50ed897f936247fb36fb95923e45f4 10883def61012505a52dc8dc640614bbf78dce5c,,Update copyright years,
dartsim/dart,72,2013-07-26T20:32:29Z,2013-07-29T18:17:35Z,True,2013-07-29T18:17:35Z,cad9c86bc99ac358ead93ef619da35cc18ab41f5,1,3,2abf06d4e6c9298ada42cc8151889517551e9546 0cbd87b2f571c10af5d140e311985c92968a8e29 92100e7d3074787d82bfae1f19c48b7148b6db68,,Add fPIC option for 64 bit linux machine compatibility ,When dart is linked to gazebo on 64 bit Ubuntu machine  the below error is occurred:  ```  :-1: error: /usr/lib/gcc/x86_64-linux-gnu/4.6/../../../../lib/libdartd.a(UtilsRotation.cpp.o): relocation R_X86_64_32 against `.rodata' can not be used when making a shared object; recompile with -fPIC  ```  CMakeLists.txt was modified to fix this issue.  
dartsim/dart,1003,2018-02-21T21:54:47Z,2018-02-23T22:55:41Z,True,2018-02-23T22:55:41Z,d8802f4f111c3843fee670416e96389677bb3937,10,16,b38e0bc93693b93f9b2b3d5163050d12787f312a 9ff5d8a1b988bd204bc0ebc39505733fa8e630f1 78ac036e2977389b007f0f46b71bd76a53dcfe09 d811ff2b0a8ba598a6b2d9c2e14a7a5e58e2839b 5394bd103c8c7f74c59bb8a9d1179955a329e4ad 1e577c2123009af02ddf019322c965732d9e9d4e ae31d3c47b7b2c3a0c3321d1043a4e19360dd178 768af911865a97fccbf5fe4ab76c769ef36cc6a7 94a8587f520545b162086091c87e825d498b09d9 707aa24a724296af4d5f9f470e93ee927aff79ae 14f7658334c77d7a86a41722b7eff010ca192ffe 4f28e34277ab84cf5d20a5d93d0f8afc9ba1f4ff 9d11cfd8af893ee440cb9bb3bf40a90a54ca4034 0811b50c232eba8dec99d908ab75cfde471c0eaa ce19816043b1bef2b2b87f98567ca8b65cd26836 6e0f7cf4903a59796485beff9a0828c400fbe85b,,Add TranslationalJoint2D,`TranslationalJoint2D` is a 2d version of `TranslationalJoint` or `PlanarJoint` without the rotational axis.    ***    **Before creating a pull request**    - [x] Document new methods and classes    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (need tests for `SkelParser`)  
dartsim/dart,1010,2018-02-24T00:53:33Z,2018-02-24T06:33:56Z,True,2018-02-24T06:33:56Z,b3156efd92a28873cad17ace53582cf9ab37e042,2,2,ed35db18fcbbcbcb3afed1ffb0e9b270b4fa7231 b4e8b79fdb8602a7d50c31b6b32676713be20e06,,Use global namespace resolution in macro,to avoid namespace conflicts    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1013,2018-02-24T08:32:04Z,2018-02-26T01:31:40Z,True,2018-02-26T01:31:40Z,be579d220d7465e156a859d51c3046cd39c570ac,1,1,1baa2ae05a794d7aaa0e828fe8611d0a176450e0,,Fix Eigen aliasing issue,Resolves #748     ***    - [x] Set version target by selecting a milestone on the right side  
dartsim/dart,1012,2018-02-24T06:31:26Z,2018-02-26T01:32:55Z,True,2018-02-26T01:32:55Z,1bcb2bef82129620307f8f881030ce073dfb3f3d,2,2,69cf2117325e21a7d6b2b7d30275237256a4b9be 9a0b20cd8f080afd04fe10aeaf5b2b81d6998685,,Change CollisionGroup removeShapeFramesOf to take MetaSkeleton,This PR is a sequel to #704.    ***    **Before creating a pull request**    - [x] Document new methods and classes    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  
dartsim/dart,919,2017-10-03T03:08:03Z,2018-02-26T04:26:45Z,False,none,b18bbce5fc8536988c63db9ff3daf712d1a6fa19,187,11,d36e0a690eb7d8253bd455607d460b3f35ee798a 8b8c887a881cc8d2a2bd67093ed2a665fe84d185 69077606812a98f5dcfee0235f8b8a5c16b6e08d 20a95c264813bb68d648608000ed774c613dbe92 0a32f16dad8bc09c18cb4f34937c3255115f8da0 c7f3274ac6d8a106bd53f148cabda3f9510ca232 62d1ffa295e5678193a234d10949da51b6143356 6c04669ccbb376098791e411647179a1fb44e7f6 1d1ce4d69b8608e37c8da496e548558963fbdb5e 1e4dfee20e9f6743a27d8cc298752586153f34c2 8a3090ccfd71cbaf0c22f37369ee2fb2a0825d2d,,Human joint constraints,Hi all     This PR uses Neural Nets to simulate realistic human range of motion:  https://youtu.be/wzkoE7wCbu0  http://arxiv.org/abs/1709.08685    Basically  there is a learned neural net function C(q); C(q) = 0.5 represents the boundary of valid human range of motion.  In every timestep  a forward pass and back-prop of the NN is executed to evaluate C(q) and dC/dq for current q. If q is invalid   a constraint force in the dC/dq direction is generated by LCP solver to push q back to valid region.    In practice  there is one NN for the arms (C_arm(q))  and one for the legs (C_leg(q)) to make training and evaluations easier.    Tested on MacOS 10.12; Not sure about Linux.    We need to figure out how to include the external library tiny-dnn: https://github.com/dartsim/dart/issues/918  1. I still have tiny-dnn headers in DART headers; so currently I am unable to build my example outside dart source.  2. I am not sure how to make C++14 optional.    Thanks in advance for helping with this.    Yifeng
dartsim/dart,845,2017-02-13T19:27:12Z,2018-02-26T04:46:43Z,False,none,1af6d1322b82d4794b63d20d0808160a6bc02e08,35,7,c68ba09c3a11bbe93afe119ee8abe4f356cdbd0d ecf0871ca03b6c32e8bb9a08fa1d2be2d0399515 04d22858b850a4bc07a89234fe2ab48fbf8b3cd3 e8d76f65a4ab5d1348965371ad51813ed54517b3 0086555f0a9d69d025a057124802fe5e510ee67a 4066168b02499e95dc15c44dae8c35706b4929e1 6c8ccc06ae76ad73678518bdce30c8c58caef7f6,,Apply naming convention of createShared Unique to clone functions,  <!-- Reviewable:start --> This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/845) <!-- Reviewable:end --> 
dartsim/dart,1014,2018-02-26T00:17:03Z,2018-02-26T14:24:01Z,True,2018-02-26T14:24:01Z,39eb9a057f1d213be16e9dd651c2e980c993a07e,9,5,9f73e109c791323efe451e62e28574b98ebf084f 6dfec32be8e8a9c58acff81a90b16dad62426283 999582ac2a235117b3e28e884f678b81d6e49889 0bdbeefb98036b7e2ceb90624dd91ebf7c11e32a f55e2162abbfe9a9ce7ec43a52a51e3791560e78,,Add Mutex class,This PR is a prototype of mutex(es) wrapper class based on @psigen's [comment](https://github.com/dartsim/dart/pull/1011#pullrequestreview-99150832) in #1011.
dartsim/dart,1018,2018-02-26T14:20:06Z,2018-02-26T16:03:22Z,True,2018-02-26T16:03:22Z,93215cffbd2365200d20a24b813c131e3a4a8ebd,1,4,72f9c93eed607fd2ff1fc8b18a2cc217069744a6 dfb0a7136ab6020e87e2de39d26b246f233a3983 953d463d66d898e4af2b5b21233a3baa1e0f171a 08f232e0f2caa7bb5a8524e4fa0bca2ab549b124,type: maintenance,Update vcpkg before installing packages,This PR fixes the recent build failures of AppVeyor tests.
dartsim/dart,1015,2018-02-26T03:36:07Z,2018-02-26T18:48:48Z,True,2018-02-26T18:48:48Z,b637b9f069ccecad172ac2e3cc32ebeef858c214,73,7,fa9dfc97258ee097d68b801c12c84845595355a0 b9f7e71938a5b476d5fbea305e275583c72c1502 94c37dee23abc95458d217f26907ab2a66abf864 ab5bc4cab80398a2dc1833d6c7847594b0f2f545 a079111d3e9e245c3a1badc6b06c1e2e916bea0d a69ce11efd2353b767feae5d0141c56ad2cbd621 e831b907e14aaf76726281414785c81508ee74ad,comp: examples,Add in source build script for examples tutorials,This PR is prerequisite work for having examples and tutorials with various build settings like requiring additional dependencies. Up to now  in-source building for examples and tutorials was handled by macros (i.e.  `dart_add_example` and `dart_add_tutorial`)  but it wouldn't be straightforward to handle various build settings.    This PR adds separate build scripts for in-source builds (based on [this suggestion](https://cmake.org/pipermail/cmake/2008-December/026130.html)). We are still able to build examples/tutorials out of source with installed DART.    **Caveat**  * I found that osgWamIkFast doesn't work (at least on Ubuntu)  and this will be addressed in another PR.  * Out-of-source builds are not tested.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Once #1018 is merged into `release-6.4`  merge `release-6.4` into this PR
dartsim/dart,1020,2018-02-26T21:15:44Z,2018-02-26T22:31:37Z,True,2018-02-26T22:31:37Z,6e5416e36a9b262ffa6cda8f7d56761eca6623b6,1,2,436796fd4ccbdd8db9348e06bbb37daa32e00048 8b3f8c2d268a9c0f476d41411983e7412cf57c46,type: maintenance,Install ode and bullet w o options,so that we can speed up CI tests on macOS    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  
dartsim/dart,1019,2018-02-26T18:35:08Z,2018-02-26T22:45:46Z,True,2018-02-26T22:45:45Z,5309abb25d6ed56af0ec4b9bb4148be0cd990e83,1,3,89f5dea09cf82d8e72ca328dd0ba14db33bcf831 366f9b8fc917592652dc3ba44421d5603f1a9eb1 372ec2e3c45e4fa2a6255d3cb51505056fdedd19,type: maintenance,Use simpler vcpkg commands,based on @ras0219-msft's [suggestion](https://github.com/dartsim/dart/pull/1018#issuecomment-368595079).    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  
dartsim/dart,726,2016-05-14T03:07:21Z,2017-10-17T14:51:56Z,False,none,812451693ef523f1547b227c685cbf80b34fae64,50,3,586b263956ef5ab4d42de9d90a05fbd0a9d49885 88a189afb4179716fe7e8d4bd28e55cb78ea3493 f3cd480114aca6ea35de4267d86a5819d9860a90,,Discussion Code style,:warning: This PR is for discussing DART code convention  but not for merging. #### Code formatter  From my experiences  [clang-format (> 3.8)](http://llvm.org/releases/3.8.0/tools/clang/docs/ClangFormatStyleOptions.html) and [uncrustify](http://uncrustify.sourceforge.net/) seems to be promising options. In short  clang-format is more robust while uncrustify is more configurable. I'd like to begin with clang-format to see if it fullfil our requirements. If not  we could then try uncrustify. #### Style options  [Following options are from clang-format 3.8](http://llvm.org/releases/3.8.0/tools/clang/docs/ClangFormatStyleOptions.html). clang-format 3.8 is selected because `BraceWrapping` option is supported from 3.8  which enable to set the brace style that is most close to the current code base.  As a start  I set the initial option values to see how it formats the code. If you have strong preferences and it doens't match with the option values  please initiate the discussion for the options. For some options  it might be not easy to converge since it would be matter of preferences. Well  let's see how it would go. :sweat: I'll update the check box for converged options  and update code to see the changes. - [x] Language:        Cpp - [ ] BasedOnStyle:  LLVM - [x] AccessModifierOffset: -2 - [ ] AlignAfterOpenBracket: Align - [ ] AlignConsecutiveAssignments: true - [ ] AlignConsecutiveDeclarations: true - [ ] AlignEscapedNewlinesLeft: false - [ ] AlignOperands:   true - [ ] AlignTrailingComments: true - [ ] AllowAllParametersOfDeclarationOnNextLine: true - [ ] AllowShortBlocksOnASingleLine: false - [ ] AllowShortCaseLabelsOnASingleLine: false - [ ] AllowShortFunctionsOnASingleLine: None - [ ] AllowShortIfStatementsOnASingleLine: false - [ ] AllowShortLoopsOnASingleLine: false - [ ] AlwaysBreakAfterDefinitionReturnType: None - [ ] AlwaysBreakAfterReturnType: None - [ ] AlwaysBreakBeforeMultilineStrings: false - [ ] AlwaysBreakTemplateDeclarations: true - [ ] BinPackArguments: false - [ ] BinPackParameters: false - [ ] BraceWrapping: - [ ]   AfterClass:      true - [ ]   AfterControlStatement: true - [ ]   AfterEnum:       true - [ ]   AfterFunction:   true - [ ]   AfterNamespace:  false - [ ]   AfterObjCDeclaration: true - [ ]   AfterStruct:     true - [ ]   AfterUnion:      true - [ ]   BeforeCatch:     true - [ ]   BeforeElse:      true - [ ]   IndentBraces:    false - [ ] BreakBeforeBinaryOperators: None - [ ] BreakBeforeBraces: Custom - [ ] BreakBeforeTernaryOperators: true - [ ] BreakConstructorInitializersBeforeComma: false - [x] ColumnLimit:     80 - [ ] CommentPragmas:  '^ IWYU pragma:' - [ ] ConstructorInitializerAllOnOneLineOrOnePerLine: true - [ ] ConstructorInitializerIndentWidth: 2 - [ ] ContinuationIndentWidth: 4 - [ ] Cpp11BracedListStyle: true - [ ] DerivePointerAlignment: false - [ ] DisableFormat:   false - [ ] ExperimentalAutoDetectBinPacking: false - [ ] ForEachMacros:   [ foreach  Q_FOREACH  BOOST_FOREACH ] - [ ] IncludeCategories:   - Regex:           '^"(llvm|llvm-c|clang|clang-c)/'     Priority:        2   - Regex:           '^(<|"(gtest|isl|json)/)'     Priority:        3   - Regex:           '.*'     Priority:        1 - [ ] IndentCaseLabels: true - [x] IndentWidth:     2 - [ ] IndentWrappedFunctionNames: false - [ ] KeepEmptyLinesAtTheStartOfBlocks: true - [ ] MacroBlockBegin: '' - [ ] MacroBlockEnd:   '' - [ ] MaxEmptyLinesToKeep: 1 - [ ] NamespaceIndentation: None - [ ] ObjCBlockIndentWidth: 2 - [ ] ObjCSpaceAfterProperty: false - [ ] ObjCSpaceBeforeProtocolList: true - [ ] PenaltyBreakBeforeFirstCallParameter: 19 - [ ] PenaltyBreakComment: 300 - [ ] PenaltyBreakFirstLessLess: 120 - [ ] PenaltyBreakString: 1000 - [ ] PenaltyExcessCharacter: 1000000 - [ ] PenaltyReturnTypeOnItsOwnLine: 60 - [ ] PointerAlignment: Left - [ ] ReflowComments:  true - [ ] SpaceAfterCStyleCast: false - [ ] SpaceBeforeAssignmentOperators: true - [ ] SpaceBeforeParens: ControlStatements - [ ] SpaceInEmptyParentheses: false - [ ] SpacesBeforeTrailingComments: 1 - [ ] SpacesInAngles:  false - [ ] SpacesInContainerLiterals: true - [ ] SpacesInCStyleCastParentheses: false - [ ] SpacesInParentheses: false - [ ] SpacesInSquareBrackets: false - [x] Standard:        Cpp11 - [x] TabWidth:        2 - [x] UseTab:          Never  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/726)  <!-- Reviewable:end --> 
dartsim/dart,989,2018-02-15T17:28:13Z,2018-02-16T18:01:21Z,False,none,c2e75ec53d25bc0053da0b691b1cbbf38560971e,6,6,9562fac2bbc3d701694c1c9ddd2f142eb683d6b9 e13bdc3a41973aa9808b3d47b4a5e90148a5ebf4 63a2c8723eacd4d067cefa7b725403e68fb24370 bf4286697c243b54d2c488915bcaa2a170746154 46fe3e19a75feb4b6bef686420d9911df1f429f2 0a8c9a879964b9aa1c4b4fda1d4b1224ab243283,type: maintenance, WIP Setup clang tidy,  ***    **Before creating a pull request**    - [ ] Document new methods and classes    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  
dartsim/dart,901,2017-08-04T00:33:30Z,2017-08-06T16:59:15Z,False,none,a93bc470ce43b3c82177940ba85f0b6fbd7a8089,1,1,7517e2712745834e36cb8137d8c552c7773195e2,,Fixing handling of use_parent_model_frame tag in SdfParser 893 ,Backport #893 from master to release-6.2
dartsim/dart,844,2017-02-07T03:26:33Z,2017-02-12T19:52:02Z,True,2017-02-12T19:52:02Z,c2386d815f1ec9ff77f5f89fbaca5689df1fa8f7,55,13,d278b3e633ef490bd45f873394df392c2953941c 0b78a0c4740c71724770a6a4150df4bad0eff15e 5a80d6f659c6f10520f5553feb1f9aa9bc985f6b 17319af0d8a6376856c486ce37dd9a8ee929b4b7 563b033f0fd724c6a1447958e63204400a512fd3 f4a417c371b4c1f365e7e97b93bf933d2dead6a8 e862bff2a2f818ec9a3c8948db53c5c0bfc2c055 f8cdcf1e3689ebe3e3026c7e70c8724123683523 c2e983b2f4927f6ed1e2e104d76f0b9dbf5993f3 46c6e206a6fa80d3dbe23c0674d7f131a541f534 b05d056947bb51da092b847b70da39db6b14d546 a1be12f8aba92d339122ef0532f9019aaa9dc578 aff8661d4d22f6cb942de3a730c405ca6e139d60,,Add createShared and createUnique pattern,This PR adds a set of macros that defines two static functions ( `createShared` and `createUnique`) for creating shared and unique instances of the object. Developers must carefully choose which macro should be used depending on two factors: (1) whether the object requires aligned memory allocation and (2) whether the object's constructor is `public` or `protected`. Whereas  the users are encouraged to use `createShared` and `createUnique` without worrying about those factors if the static creators are defined.    Related issue: #813    **Open Decisions**  * [x] Name for shared object creator: `create()` vs `createShared()`: We use `create` and `createShared` for raw pointer and `std::shared_ptr`  respectively    <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/844)  <!-- Reviewable:end -->  
dartsim/dart,1021,2018-02-27T14:52:02Z,2018-02-28T01:40:51Z,True,2018-02-28T01:40:51Z,80100ffc683826bf79bb0dbf2c3de9c8bda90772,3,2,2d3375e7844cb4b6fa904c16ad01f81b0cddb3d9 6c7db7eaaa9cca2f0dc509e0089ca14800c17624,,Replace utils with io,  ***    **Before creating a pull request**    - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  
dartsim/dart,1024,2018-03-06T19:18:51Z,2018-03-08T00:23:44Z,True,2018-03-08T00:23:44Z,bf7ba806e8e43a0595e45c9a5144b3d0d3546125,1,1,35e8313b64c1a743e776e0d1c4069ab7a9636d18,,Skip bullet check if bullet is not installed,    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  
dartsim/dart,1025,2018-03-07T16:24:51Z,2018-03-08T12:08:47Z,True,2018-03-08T12:08:47Z,002112ebd06cac0e760ed2cad854006db03d5ec8,1,6,82ebcea7001902c6881a4a1aabc7f49c219cfc3f d952d1d6f59fcb3149adc160a9141c7ebd10eb7f 81a7650a0fedc06abe467d5f111c9a9751efdcd5 9115fc025a5c1e441c5e670648b1de833183436c b267c08fd8e1d244d4efc4c514dfea1efa71ddfb e730b3fc22de11a40b5cdbd961b04e890aed387d,type: maintenance,Add build testing on Ubuntu 16 04 to AppVeyor,It's a good news AppVeyor supports Ubuntu 16.04 (in beta)!    **TODO**  - [x] Fix build script for Windows
dartsim/dart,1027,2018-03-09T00:03:05Z,2018-03-13T00:25:43Z,True,2018-03-13T00:25:43Z,e498b8696dca12d13fdf239f6782838f0daf40f3,3,4,f097877435fbe3bad9c834d6fcb531856e9f1fab 20a505a7c3f898cdf918ec9b52f5cbc6598f49a8 cf77c3c54bef39b8da7453febbd874bce49e2057 c7341396ae9204889f498999aeb471dd20cd8eb9,,Update package xml based on catkin documentation,This updates the package.xml to (I think) more closely adhere to the documentation [here](http://wiki.ros.org/catkin/package.xml). If anyone has more experience writing package.xml files  please critique this.    I named myself as the maintainer so that if ROS users/maintainers have issues with the package  they'll direct issues to me first. I'll go ahead and take responsibility for that  since I'm surrounded by coworkers who are experts at ROS package management.    I'm not totally clear on whether it would be better to put this in 6.3 or 6.4. I'm thinking we can do a 6.3.1 release after merging this and make that the first DART release into ROS. If anyone dislikes that idea  please do say something  since I'm new to this process.
dartsim/dart,1030,2018-03-13T17:18:05Z,2018-03-13T17:25:53Z,True,2018-03-13T17:25:53Z,5771f72bd3253171f39741c84b1f15ce4d97aad7,1,1,2eff9a4062c65bb6e786152018f4b8734fe11f95,,Disable stale bot,I installed `stale` for testing but didn't find useful for DART.
dartsim/dart,1016,2018-02-26T04:20:25Z,2018-03-15T14:42:53Z,True,2018-03-15T14:42:53Z,2f40699bf30d86f7a528056789736b2dc7ad28e2,23,39,fa9dfc97258ee097d68b801c12c84845595355a0 b9f7e71938a5b476d5fbea305e275583c72c1502 be77d75263dd949c141c865a1bccc567d6eff6f8 69ed7db1320fcab3a1fef78d48077baac3579cd3 3858617fd3d6941d8670b8c48251382155284032 b048fb3f288a6b2b74e4394bca0208a46a3d0301 c47ac0f2168ead0af2ce960a1d9b5cbfa6dcf62b 9941bf04f6d857a690d526b4f900b0059248da34 9f938b3b660a61e7aa67b67f2066e9da40bca1df b2f302e86b2ffcfd75567ad99743ff0353c49fc4 952ce67bbcdc33bf4a7c170df3c30cdd0589d1b6 d612a5a8266e55d37496434c2ad3e950d597ee34 ade6c8d20bc4b1bab7289c5d255351b1f476e199 b9787f23be2f3ed10a4f7c29cf1a9f0227103938 f1fe20410214ae268603bab0f79fca1af3f8e3bd 9e7e86518f8a71e512b5ce14c95ab5984fdb803f 1378ab374988ae01ff43e7f0ec5b77e787e9f4ec 3d5199f15b64f983b4e7a5838e377e6bd4bdd8a9 f694cf338aeb46cccd159b5e18cecda64e8b9f55 94c37dee23abc95458d217f26907ab2a66abf864 ab5bc4cab80398a2dc1833d6c7847594b0f2f545 388f0cf32122661af68c4eafbb77b239badcfb03 0e1339e8965544109bc02ccbf49a00a6bbe326f4 15984bde0f117519a202a49d7157ef4130b5d7cd 9f2e264691edec60565604a6ff6d361b3cff62a8 a079111d3e9e245c3a1badc6b06c1e2e916bea0d a69ce11efd2353b767feae5d0141c56ad2cbd621 661f66b1fe05ce6284854a23f7ed5b3a8f9d6842 ad0e4d1a26483095fd860e7a096c956bfb49b4e8 72f84c7ae1b5c42610fcd6269fa2aca025d23540 c4285382b2b043106e5085ef83c7ed4a44bf5155 b9e564238b87d0903806877234862fb6d658d711 68ea963812f2701535f3d09588633d8eb83a2ff0 05718ba93177765318ee3a6d35377551500b8bab 7c743ce0a8b22a8c8fa584e987661fca633bdaf7 c2cae3c4407ce80d74f6edd197e2fb8e45ef253e 3f2c2cdf12de51a9d51a3ad57a660fd7a7de1d57 552b878d7db1ac24fbd72ea21cfb3e9f792a93b7 2ef2eba96e216d464fbec7512d71a84ef6331acc,comp: examples,Add human joint constraint example,This PR is a revised version of #919.    Summary of changes from #919:  * Make `tiny-dnn` as a dependency of `humanJointLimits` example. In absence of `tiny-dnn` installed  the example target is not built. If you are on macOS  you can install `tiny-dnn` as `brew install dartsim/dart/tiny-dnn`. Otherwise  you should build and install it from source.  * Remove C++14 requirements from DART libraries. But `humanJointLimits` example requires it.  * Move `Human[~]JointLimitConstraint` classes to the example directory since they are application specific at this moment.  * Fix invalid box dimensions (i.e.  negative size in z-coordinate).    Depends on #1015 ([diff from #1015](https://github.com/dartsim/dart/compare/examples/multiple_cmakelists...example/human-joint-constraints_6.4_js))    ***    **Before creating a pull request**    - [x] Document new methods and classes    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Code format for new files  - [x] Install `tiny-dnn` on CI tests to test build of this example (only macOS for now)  - [x] Update README.md of the example adding author and paper info  
dartsim/dart,1022,2018-03-02T14:43:32Z,2018-03-16T15:22:28Z,True,2018-03-16T15:22:28Z,9b39dea624edbed3f0248ed8735c0013726ae3fa,9,10,1be12e261902bcf11bbe3f00e84d329fc1c98ae0 479ee9b68139379af48f15b10d1b07ee31711afc 0b616b88fcbdbcb3ee103b6442dd37376d35ef54 8bae5d3e21851366fb83362fbdfe791557f40e1a 58c742b9faf47a2ac71f59952c835a571769da19 092888039eb1b9f189ffcb1b32e476c124a96435 84f15bdf276b36aeb6038b05a412e32e78a7f831 4d9cb72a47eacdcbc9fa20d2ae66b568c9cbd901 973c9631b0339688ae8d29ff1238863d9a9d87fc 108d074be4496b18f9d34a92889e4ce74afc4893,,Add DART_COMMON_DECLARE_SMART_POINTERS macro,**Summary**  * Add missing `std::unique_ptr` declaration to the pointer declaration macro  * Use `using` instead of `typedef  * Rename `DART_COMMON_MAKE_SHARED_WEAK` to `DART_COMMON_MAKE_POINTERS`    ~~If this change makes sense  I will replace the use of `DART_COMMON_MAKE_SHARED_WEAK` to the new macro.~~    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1033,2018-03-14T20:45:42Z,2018-03-14T20:53:00Z,True,2018-03-14T20:53:00Z,b4e751866c07f2ce36148f7807d213f69f58d735,2,3,5c5489a455ad08b7fd8dd97cb18bbe760f5e6f17 9ece6369c4a1d4fffd0f90ae3345042d5a688e6a 1dc14c023831aec11a106bb65e1d309fdb6c9714,,Final step to give dartsim stable status in ROS build farm,Sorry for all the PR spam  but we're almost there! The last thing the ROS package build farm is complaining about is a cmake warning that we expect to occur. This results in an "unstable" status  which is acceptable  but I'd prefer we make it stable since it's such an easy fix (and this should probably be a status message instead of a warning anyway).    I also updated the changelog to include PR #1032 which I accidentally skipped.
dartsim/dart,1032,2018-03-14T19:41:08Z,2018-03-14T20:04:21Z,True,2018-03-14T20:04:21Z,4457ebf5fad59622bbaf22b48b065fefd4f3c0a7,1,12,42bbf8dab9dffbb01c7b55ecc5739cc0073c574a 17a071e581604b694bc80b8f30dae7091040c6e4 998bfaee5eec3ce81aa75114725aa9374f55cf2e c15a852dc342902c4e4af8cf8db3259c899e2361 fad993112d326fa65a9c78579ec426b4877947fd 36bcc000876aa6d4746c1c6906bb7a0f38e52508 49d3cb72c8c6500f035f4c68f49c862020ca8f63 ad6c3ea1519fccbf00f12a14d6ace76fab04e9e9 5a4ef3dc91f666f5acb5c1dbe5da92075c70590b d6d028fe87b2d14383d22d16ce56f10bfe45b9ce 6e89405661447786f6d6009e29e206ef7231b62e e82cb5945fb5ed46ae0e1b9b751ee7069568af52,,Conform to package xml format 2,It turns out that the recommendations of REP-136 are only using terminology for format 1 of package.xml  but we want to use format 2. This change should accommodate both needs.
dartsim/dart,1031,2018-03-14T00:41:19Z,2018-03-14T18:13:52Z,True,2018-03-14T18:13:52Z,d530cdb32026267f94a8a8f4a49171c3d7d761c7,2,10,42bbf8dab9dffbb01c7b55ecc5739cc0073c574a 17a071e581604b694bc80b8f30dae7091040c6e4 998bfaee5eec3ce81aa75114725aa9374f55cf2e c15a852dc342902c4e4af8cf8db3259c899e2361 fad993112d326fa65a9c78579ec426b4877947fd 36bcc000876aa6d4746c1c6906bb7a0f38e52508 49d3cb72c8c6500f035f4c68f49c862020ca8f63 ad6c3ea1519fccbf00f12a14d6ace76fab04e9e9 5a4ef3dc91f666f5acb5c1dbe5da92075c70590b d6d028fe87b2d14383d22d16ce56f10bfe45b9ce,,More fixes for package xml,Since DART does not depend on catkin in order to configure and build  we can specify that it's build type is cmake instead of catkin. This prevents catkin from complaining about the project not being a catkin package.    This brings us back to conforming to REP-136  which I had naively erased  since I wasn't aware of the nuances between a "catkin package" and a "third-party package" (dartsim is considered the latter).    This also adds a boost dependency that was missing.
dartsim/dart,1029,2018-03-13T17:01:45Z,2018-03-13T17:39:42Z,True,2018-03-13T17:39:42Z,3afb9664e72f2bec5b42fb85f14b48c261e0fcf2,2,3,42bbf8dab9dffbb01c7b55ecc5739cc0073c574a 17a071e581604b694bc80b8f30dae7091040c6e4 998bfaee5eec3ce81aa75114725aa9374f55cf2e,,Fixing package name of FCL and removing libccd in package xml,After running some experiments with the ROS release tools  it seems they expect the package name for fcl to be `libfcl-dev`  and `libccd` doesn't seem to be recognized as a package (but we only depend on it transitively through `libfcl`  so it shouldn't matter).    This version of the package.xml seemed to work with `bloom-release`.
dartsim/dart,1036,2018-03-21T17:10:22Z,2018-03-21T21:11:31Z,True,2018-03-21T21:11:31Z,f3442685a43657702e1b38a24bbb7adee280fe96,2,3,75532d3a7444c2b6905502770f713b92be187cd1 6397dacfbc90625be5af43e9f78e30803e1defea 36c38e2cbc10c5ef89b1e1db148f9bf7d24d284f,,Avoid using an undefined cmake macro function build_error ,This has been causing trouble in the ROS Build Farm  because the build farm passes the argument `-DCMAKE_BUILD_TYPE=None` to cmake.    I think in general we should consider a redesign (mostly a simplification) of how we handle build types  but I'll open a separate issue for that.
dartsim/dart,1041,2018-03-23T19:57:57Z,2018-03-24T04:23:07Z,True,2018-03-24T04:23:07Z,677a3c5d7fd7a8af395f20c4ccdeb278adbec90b,5,2,9e0404b4138b2d37296336685002cde7418ac852 31c86d1d552852d4ab6d008bea784ca8e35570a8,,Update CI scripts to exit immediately on failure,The current CI tests pass even on test failures (see [this build](https://travis-ci.org/dartsim/dart/jobs/357492491#L2600)).    This PR add `set -e` option so that it exits immediately.    Caveat: By adding `set -e`  Homebrew fails to install some packages (`flann`  `ipopt`  `nlopt`) successfully (e.g.  [this](https://travis-ci.org/dartsim/dart/jobs/357492491#L1221)). Those packages are disabled for now  and we will revisit this.    
dartsim/dart,1042,2018-03-24T04:44:13Z,2018-03-25T06:56:16Z,True,2018-03-25T06:56:16Z,77902c16e28ccf4c88c4485b19bc59aabeb6d2b7,2,2,90107d7bc6f2b10c3d1042ab901d3b0beda12cad 549a0e886ae3172bfe48b75e14e50cee859ff886,,Fix build with Eigen 3 2 1 3 2 8,This PR partially resolves #1035.    ***    **Before creating a pull request**    - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1043,2018-03-25T18:37:48Z,2018-03-26T03:05:28Z,True,2018-03-26T03:05:28Z,a3fc10209ab2eeacd0ed1e20e259f08526c91746,13,18,f3442685a43657702e1b38a24bbb7adee280fe96 f4a4fe84a21945bbcb74a7b6d763b7511bffc8d4 b8c10fe8164caa22f72046b2e43016b55a057aa1 3ef464bc68a745b9a2a74d9be77fcc8ab7688ec7 610247c71c5c486397d5e4f69da767e62ddcb98a 695c6a9a01146f27faaaba1972147fed11e333e5 caab5150520df99354991b38f7ace92b9a615d2c 24e1621f7789a85afa25e336f9a82021e92ced9b a5e2f4724eef6580a93f800cb3c04cf4580e4211 e3db15539b3800b0b8560e1eb0dfabc2de54941b e90094e49f707acdf8a6dffac0aea57a5ec1e12b f3a189107d7c392a191dd694945600137c265dd8 18caf079a2c74013d003abbad6517b154c609c6c f3a20b924cb255a1f7e39ec4a6a950dd9f247f77 84f1d6a98a7ef51b2f0446bc58d030c19e7dae75 9d11bd4c747bc9cfa6aae348d85b741f2a9ee8f4 c5b8e5ffa1176805400113c729e601e55a75b5b1 5b44806329a0fc567b743e71476d74778e4107cc,,Build tests on Ubuntu Xenial Artful Bionic using Docker,* Tests newer Ubuntu distros (Xenial  Artful  Bionic) using Docker in Travis CI  * Disable AppVeyor's Ubuntu image in favor of Travis CI + Docker (Travis CI is faster than AppVeyor because of Travis CI's concurrent jobs)  * Add -x option to scripts to output the command  
dartsim/dart,1044,2018-03-27T00:03:47Z,2018-03-27T02:53:56Z,True,2018-03-27T02:53:56Z,4457841b61aed22a757be2628968c3a5e01e77b9,1,3,f3442685a43657702e1b38a24bbb7adee280fe96 e0b2924d0ffc9215cdbbe62ab22e0aec19afafe7 677b8af93d34afd2aadc011baae036bb5c3ee7b1,,Update changelog for releasing 6 4 0,
dartsim/dart,1046,2018-03-30T16:27:33Z,2018-03-30T22:30:22Z,True,2018-03-30T22:30:22Z,9d468919a26105383bbd40084f469e4c7e8d1ebb,1,1,d6a74d25bc38784db9d6dce80465ee78c459c4c3,,Exclude examples and tutorials from all target,DART used to exclude examples and tutorials from `all` target  but they are accidentally added back to `all` target by #1015. This PR fixes it by adding `EXCLUDE_FROM_ALL` option to `add_subdirectory` for examples and tutorials.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  
dartsim/dart,1048,2018-04-01T14:38:08Z,2018-04-03T13:26:32Z,True,2018-04-03T13:26:32Z,6d7b4535c2eb5bf306f63a6d2471b34a860b9472,3,7,b2af096479d62037279a420fbae45ea016401535 9d6f74167b87154dfcebf9d347ea3b16dd732429 0fc0d21e42b15047b948a47e4a45eec2865207e3 039d4c3bdb7d6fc3d07ab391ace6fc768669a75e d3425d4515db1967258400eab0fb1deb5246ddce ed2f98c43e00da24dcb5c4f258408b277c6b01d8 4d70ca62cfcf29c76cf7f11b43a2801683cfbc27,,Add FOV API to OSG viewer,  ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1050,2018-04-05T22:36:40Z,2018-04-06T16:54:03Z,True,2018-04-06T16:54:03Z,a93d7e0e6bf50fd5496b2427d2dfd227e506b833,4,3,bf7da0f6dd390db0718b664eb1d66920f8088c92 69e1fa38256e4095bf2320d3ead858c91c7ed668 894121eb359a7987d7686fc89e26ed4dcee9edda,,Add World hasSkeleton ,`World::hasSkeleton` takes `Skeleton` as a shared pointer since `Skeleton` is enforced to be created as a shared pointer by calling `Skeleton::create()`.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1054,2018-04-19T21:33:58Z,2018-04-20T04:13:02Z,True,2018-04-20T04:13:02Z,efeaf98970144759336bafb2c0fb86a5f7ab471f,4,1,de503f15346214d8eb1ea312e697f5575bf23368,,Install only required boost components,
dartsim/dart,1057,2018-04-26T01:02:03Z,2018-04-26T12:43:04Z,True,2018-04-26T12:43:04Z,7a7a8b23bff1ee26de3230a3b964e5ab2c1230f4,2,3,981abdbb135aef276ba012ac8dde2b19dd2c724f 6bed7be278227c4f9fa9c972d26d116dd71ef4a1 cb8009d137ae5ed24fb08a6879adbdba0c1ff96f,,Add missing vector to Memory hpp,  ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1059,2018-04-28T15:09:22Z,2018-04-29T03:47:35Z,True,2018-04-29T03:47:35Z,373434a24c85e39f9ccce176bfc868240299add6,4,3,d86fef26b720afbbb47594d84e9dcfd604d982cf ffef292037ca74d6de514f968d6ec55c72daf5a1 9d1ec681395d0ead56690365697202e86162b096,,Remove CI tests on Artful,As Bionic is release  testing on Artful is pointless.    Also  this PR removes code format test from Artful because Artful doesn't have clang-format-3.8; A higher version of clang-format outputs differently.
dartsim/dart,1061,2018-04-30T20:44:48Z,2018-05-01T00:01:09Z,True,2018-05-01T00:01:09Z,ddad78033684bb099f173bbaba9d752a54955e7f,1,2,b923d8d6c46a5d16f96354f9713536621779e645 0a0d052d5f2160d0bf12f8db15c0e5986e27f6a7,,Enable C 11 for Assimp 3 3 0 or greator,The Assimp constructor/destructor checks in `DARTFindDependencies.cmake` always fail due to lack of C++11 flags for Assimp 3.3.0 or greator. [Assimp requires C++11 since 3.3.0](https://github.com/assimp/assimp/blob/master/CHANGES#L167).    This PR adds `-std=c++11` flags for Assimp 3.3.0 or greator to the checks.    This is reported in #1060 thanks to @Aneoshun.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1011,2018-02-24T06:23:23Z,2018-05-01T08:56:48Z,True,2018-05-01T08:56:48Z,e527ebb2466a5fe35557539e317fcdb9cced7e7d,11,24,ead07a0560d0eee8aeb12d6751709824eea9af2e 39eb9a057f1d213be16e9dd651c2e980c993a07e 284bd0f46d32e53a366ca0e869f8271e39a239a9 a3768a62bb871f426198b37d43a1bbb3ba4c9cbf 504f584878ccf4fa9bf28b597bfa4edb05391f20 f30a19be9e0f6a999b06b79943d95047503a61d0 cb2c5dabb603f645c99d4323ade85356443220fc f34b2de560358ec6464b970663af237c1aff4551 cc606cdb4e79006c4a9cdda3dc85addb85121943 6c551f3c8673af0aebf4ec7b168ce5b8c7d2c0d7 94d6a732a19c25d7129ffb5cb28057d845e7ac65 86d6a9c2089db9f1efd114c1d3da3688a882be91 bc45bbbaaca6d189ccba98c0fe7e91af265a1f6d b92032aaf32ea5ad92f3d4b61f903eff8d0ae2e8 570c60d2cb446881f7db287f0dbfc5853f9d72e1 67413c35ed1abab9227b647ca550683aaee12beb f77d391109c1d51717df41d42cc9b1a457c5bbdb bb73762976959ccc6541b0b848c7bd8158d9098a fb20d83a464c93773f331f5f26ebef58ef21f236 36b600b3417fea3f8e7198c2021cd7372569d654 6add1a8cd71948cb690a2e9951235de66d2f22a2 c042de93c67ab0b1f5699e7ca7a969adbc296576 9535e45b6e1e1e02d50a0aa254ae65ad06dc86ce aa44019d2041605659db3f5423d9d387345fb2c4,,Add LockableReference classes,This PR is a minimal set of changes of adding `MetaSkeleton::getMutexes()` with two helper functions to lock and unlock mutexes.    * Related PR: #466   * Resolves #1007     **Possible Improvement**  As pointed out by this [article](https://www.justsoftwaresolutions.co.uk/threading/acquiring-multiple-locks-without-deadlock.html)  locking by address works for small numbers of mutexes  but it could be inefficient for many mutexes. Suggested improvement is using "try-and-back-off". But this PR leaves this a future improvement since it could be achieved without the public API changes from this PR.    ***    **Before creating a pull request**    - [x] Document new methods and classes    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  - [x] Update `CHANGELOG.md` reflecting the changes  
dartsim/dart,1062,2018-04-30T23:52:39Z,2018-05-01T08:57:25Z,True,2018-05-01T08:57:25Z,c95fc2bdc2014aa3656cf65704a41a8bf8af96dc,2,2,07e6d8f0a5b87bca03ecfd1ff8b8657188b35d74 c70dd33fc857cbd2beecbfa264c97c5f73971432,,Add warning for invalid mass,    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1064,2018-05-01T21:32:07Z,2018-05-03T03:47:37Z,True,2018-05-03T03:47:37Z,1affe8820b515e433eb6853b49591efcccd3cb16,3,7,456cca0dd0db934ec84026cf4001d5c23e5cc10a 5eff95de2eb7a9b7eb9c1e89ed5f6d1a6821e7d2 9d8d3168fcc945ee3921fd4fdc2d2b19d751ab97 766e0f569b80874c263e34f3722c8da56994a00e 4351d021bc43705d0d73792ffe90785ce4e67586 642af97f5fc037a0fc397ab25779855528ad55a9 ded0393b7f0a5150b4e7278914e4a1888248f201,,Bugfix urdfparser,Continuous Joints have been previously parsed with joint limits set to 0 resulting in incorrect behavior of the joint and relevant functions [For instance  `isCyclic()`].    This PR corrects the parsing for these joints by setting the joint limits to negative/positive infinity.    To show the behavior:  Commit 456cca0 has a test to show that current implementation has a bug.  Commit 5eff95d provides a fix.  Commit 9d8d316 has the test to show the fix works.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1066,2018-05-03T23:57:36Z,2018-05-04T10:04:36Z,True,2018-05-04T10:04:36Z,d79d04c4081d3774b3200f95783bc34452f0eb9c,3,2,93abd0996f7c315ce6fb6fd62cac52fa828d7443 cd48576b765fcfacafe0d86646eb7ddb243fdd1e,,Fix memory leaks in mesh loading,This PR fixes the memory leaks reported in #1063.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1070,2018-05-12T10:14:09Z,2018-05-12T15:35:53Z,True,2018-05-12T15:35:53Z,4749f24262e2906a8f3df116e8a2ea50d018533f,2,2,7a7a8b23bff1ee26de3230a3b964e5ab2c1230f4 f873b4ed47bb74f57be426edc2a33ac6cffed277,,Packaging 6 5 0,**Summary**  * Include #1057 into 6.5.0 instead of 6.4.1 (decided not to release 6.4.1)  * Update changelog    **PPA builds**  * [trusty](https://launchpad.net/~dartsim/+archive/ubuntu/ppa/+build/14872022)  * [xenial](https://launchpad.net/~dartsim/+archive/ubuntu/ppa/+build/14872024)  * [bionic](https://launchpad.net/~dartsim/+archive/ubuntu/ppa/+build/14872014)
dartsim/dart,1072,2018-05-25T17:31:21Z,2018-05-26T03:10:05Z,True,2018-05-26T03:10:05Z,22d381e3c5c2e8df4cfcd9a7b0b559d123b62aec,1,2,7ca1595a79e1d57f3fa953571de33310e233e376 ff3db9da298b7de266dad2080b909541fcab57d0,,Add build dependencies to Brewfile,
dartsim/dart,1074,2018-06-28T04:13:00Z,2018-06-28T14:54:01Z,True,2018-06-28T14:54:01Z,3f6aba41c28af1efb3412384e0ce327d710d69c6,1,1,9ca99fb95268421237b26510549d415b7a39134e,,Remove inclusion of math in common,
dartsim/dart,1075,2018-06-28T16:59:28Z,2018-06-28T18:44:47Z,True,2018-06-28T18:44:47Z,ab7016a7d1b7934458194e738b48070d5f7c0670,1,1,ee488dcfd7f96b13c7f17faf9840a63483e98951,,Fix incorrect bullet header inclusion,This may not be problematic if we include the system include directory (e.g.  `/usr/include/`) since bullet is usually installed under the directory  but this wouldn't work otherwise.
dartsim/dart,1076,2018-07-03T04:19:12Z,2018-07-10T04:21:43Z,True,2018-07-10T04:21:43Z,9c3e1380244bb325efe3b9d76db12b17899c1acc,20,31,0e77663e4af829f03f1bf81eecc39480a9d868fb c2eb2526818fc2c7f495fc3d0d2c637ebd75cdb4 54096cf1b8ea9dd41cc9c405528ecddddb4ac9a0 6a80b0761c15c9dcb32dba176daf0a2d67edde50 3ad8fc867ac7419eb8b641525fed0a07879c107c e7a693b94c76d2acedc4bed28ba433b9678edea7 fa44fe71ae304ba635df5c36973354f6e172322e b978c929b23a199a82653d2553f42156ab7519d4 0b3e89b4c555feec288fa67a9cbf15c7cb43cd27 f9d787f56b27cd2ddc83f52786090ba226c805fc 7d01bdddf95b8d0a1d1891f5a5e8904dcd2e8464 0f740da17956173b2301534cac9c56df3c2b3b70 2b50a1364ad64cbd2e62c60d4edcaf0128388623 fbed8e5ef0f2dd9b3f0134ffde75c9ac6b03bc8d 054c36b34ade315c36e97732b10054796ef2a43e c2d54dc7bc0b3739703fffb3ea5452069fa0a336 9b4be5809502cc3fab62ed02dc50e0ec3a51f461 472eb5baed25250b6c666d60a17fdd4a0c3a8344 a4fe14d79ae834a28a7d6c985c777494836edb6b c64bb227aa26418436f2c05c0dc4cc47e1d16b11 2f2898730d67ede053bd9a35e3895b871611dfe0 b469593be0094e451b6c3ae3e6c89719cb9f1a0d 220233be8a5fcde01dcd2c17fa32287fe653c76c c25a803329feb493372fb338c55a9d606f272803 98175352011718e4c4a5df56147f6dccc2767fc8 f1e008f8eb2c4fe5cf408921f9cb9b7d5269ed9d 7f08f1e6c10c57a06635869995f3f45ca06ab5a1 e4a8cc2b08016b0f2258bd8b18340d57347e74bb b9cf90746ed34e980f3a8a57781627187fbdcea2 3432c7888e497ebb49b378c86aedee99bf30f3c9 4e20a8c57522ece6a6cb7d4e34873b61080f7cc5,,Add VoxelGridShape,This PR adds `VoxelGridShape` class and its collision detection feature using fcl. `VoxelGridShape` uses [`octomap`](https://github.com/OctoMap/octomap) for the underlying voxel grid representation.    This is a minimal implementation for rapid test for voxel grid collision detection. There are many rooms for improvements  which will be handled subsequent PRs in the future.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] ~Fix test failure on macOS~ (disabled for Octomap (>= 1.9.0))  - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1080,2018-07-11T04:41:43Z,2018-07-11T07:25:55Z,True,2018-07-11T07:25:55Z,ccdb5cf422bd38dff7e421f21f1e9c7bfe11322e,34,3,73273857ba2cb443c2f6b9a41f9bd39f4de9f3b0 1b7d5ea6936a9a3487ecd58bee44ccfabb1df590 90306e364b97200212f0805090f824b89a7ba9fc,,Update DART versions in examples and tutorials,Additionally  this PR fixes #1079 by adding missing `collision-bullet` dependency to `tutorialBiped[-Finished]` tutorial.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  
dartsim/dart,1082,2018-07-14T21:21:18Z,2018-07-16T04:37:16Z,True,2018-07-16T04:37:16Z,afed7b0a235a62b06f8dd3bf6126506a4fb3ce00,2,3,f8b2684fa0f99643034a3378c9596f08bc60a17d 30ad4181f18e508734e5255fbc455cf9b02caee7 6192cef9f920d1c3ce933eb1688ca87a23a746fc,,Fix path to glut h for macOS,This PR fixes the path to `glut.h` thanks to @ilovezfs (see this [comment](https://github.com/Homebrew/homebrew-core/pull/29620#issuecomment-405043890)).    Additionally  this PR fixes linking to glut. According to the [CMake doc](https://cmake.org/cmake/help/latest/module/FindGLUT.html)  it seems we should generally use `GLUT_LIBRARIES` rather than `GLUT_glut_LIBRARY`.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  
dartsim/dart,887,2017-05-18T14:33:04Z,2017-10-26T06:35:16Z,True,2017-10-26T06:35:16Z,cb4e855301640bbec963782412daec780cf74435,62,35,a79005e203403f42052f622b0c3a09e7ba5ffea7 e3cb034f3068ebdf115e223d53b3e474a3ca1bd8 23663fed56fd4d79a50c1072bbe5a335cc7c16ce 420fdcc62a5af1755ab9a91a5cac4c3495e2369b 58def8d7aa5f99fa11f3fca407480884d4cec3ae b2c375cd39d1c7579a12082f73a97872b6a08d78 2fb059858de32743a55894d4de021a71c3273c8e a6400fe4a3ad33487883c39eeecf72b0429cfb3e 7208821c2d12eed39963031e4811a61925251c6b f02d6e4de7b66d36323f60e57a5bece79cfe8be0 54d8b8ff66e6196250659e213c2ead6774153d43 5772209fcf77b1163effa909a4160e633b6f7c8d ddad0be91f9e1cc20826c1f20889cae4bacaa89e 1f1c1099c8e52d6f11b98e03e3405da7c7da9a2f 4267167a6a71343bb674bb175d500dd4c055c6d7 19b59a9c4570e75ae46e9dc37859682db8036d44 a83f2b371c599601949e78e6d2b68fa95461f87d 139a48164ab28c0b19fd89b9d4c111ef5ab25a7a 4ef6064b77f26a718c0e5411c0da4a3e462067cb b562f276c73992e461decc43ad2c8bf8fb4b7333 d506cb5e01ba321e7f403f2c920650d4a37607f6 3eb787cbddbc2144bb6c521dea56630a149fa771 4be62225b20ec66dce32e80eaf24616b6ca85e74 a5dc8b1ed61ed767e8447130cc6d558859d80965 0c91abc61b3fdeaf9174986a9668895f9d8410e7 6f5f5183c47794ce3937e56fbd52bae7db19fe0d 92a7916acfcc352c44db722a9d0e70cdaf3f9174 5a91bf3f8be7b3d473251c18bdc21ddcdd3a8ed1 8720989966f5ad6c4be1bc50e55e30994fe49c02 6bbf6e4852ddf38ab02864e5d33563ce75bf49dc f4efb77e8dd30cdde7f6edb686054f62f1efb21a 9cc2fd0725a41d7607655a7812f87b6a06e2815f e70d4bdaccf02ddb72463b01bcd27299d23aca16 db317d57bc0b03950f5ce6ffcd01523c548ba9e5 554f6bbbfcf1afcca2958a457726ff2b88207386,,Add an analytic IK solver IkFast ,This pull request introduces an API for [IkFast](http://openrave.org/docs/0.8.2/openravepy/ikfast/)  which is an analytic IK solver that is a submodule of OpenRAVE.    Here is an example of Solving IK using IkFast for Barrett WAM Arm:  [![IK using IkFast for WAM](https://img.youtube.com/vi/JBFiLsv5VHQ/0.jpg)](https://www.youtube.com/watch?v=JBFiLsv5VHQ)    TODOs  - [ ] Add benchmark (IKFast vs iterative Jacobian based IK solver) of the Barret WAM Arm demo
dartsim/dart,1087,2018-07-18T07:41:59Z,2018-07-18T21:22:39Z,True,2018-07-18T21:22:39Z,6659c690d37ab9313f9f3702c0a5fb655631ff6c,5,1,332e5c6fd8b7a49323b5d18d2149f75aa3b539a4,,Fix osgWamIkFast build,Fixes #1085     ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  
dartsim/dart,1083,2018-07-16T04:20:23Z,2018-07-20T02:23:13Z,True,2018-07-20T02:23:13Z,9613b3ca33d93e8edb6f5b48ed9dc1bb530c6092,3,9,1b030f10565da84e22e23b168a10a49a1f485f70 c615d05894cb0493db34bf3e0e6cdfb85ac7ae86 4878d565a177d8f36174e38121ff245346ca48ef e56bf2782c6671b9956e50564c211cea1476fba4 d14558c433e6c605ed5ee9543ebc0fd63ba77f92 d1b75dcb4213c622e848df8fbce0865cd2e0ebaa 01a9c17c7036753b0e2d54146e09fe17f3d27f8a 8829c337dc0f9d2f60c6fe8cf4948791400948bd 6b7d5594d4614ace4415d86115ce5bd79b673bfd,,Add more occupancy update functions to VoxelGridShape,This PR adds more occupancy update functions that can specify reference frame of the sensor origin and the point cloud.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1069,2018-05-11T09:07:19Z,2018-07-22T23:14:53Z,True,2018-07-22T23:14:53Z,52120edd4619df21059ffc22afdbdcffc9858fce,20,31,e1b5eb198ef6918d8c616135914ab9089fb9bcc9 12a89e34bed94a6673cb36f68589044334eb753a b34b78abcb36388df363b8b9e27269d32c56534e a5a1ac0fcac54ab8180904bea331036c0b0fa8bd 659564d18f3de47bc70fc3de8dee7b5d626b71e4 b4c85850aa4948a0aff0b1d85d05c9c33db1a048 6ce95213532bde5f8b26df2046d19f7718e5497c 2a0025ba3e10e02dada8c039e96a66c5bea875fa 0fd730adf794a6acf43f987e0f5fc4c3b521428b a21ca04c846b770c37e0eb267f1e9e87256335b2 30b9ac28394dd1858dd8bb1c6c93bb0c7a9eee34 ecac45721ba14cbcab17f87d5a0be07e06ed62f3 1500f0a50a8e84d1940564c8c847c68b7ed0e2b1 e91c33f8913d2951a489f68be8a259533e53eb7b c90f54e59631f2de23c9bd00622df0daff4acb2c d43f38bc722b037e824efe3441b2b739fef58bc5 91e32ca515436fa3d9d42300cc23bc81032dcc3d c863fbb5b2e4c784869e5a848d52e26e080b62c8 96e6ef9b67c9de0807c4d4c7eb04cae89fceb07e 920b1d9b4e578285149695d60064709000b3fca3 a9e3f6a10ab2f61a0b2f219ff399a5a77f9d0a8e 21743de4a7d2f3dcb2bcd1ac4ae21f24bce61a15 85e3823cc80bad42a153ea9b262c23a804fb67e0 7b404d820ebdb5216dc485adbf6362188f77348a 80d006bf7ec49d3462eb42841f1f909b0c843828 ed0a766ee643520161fc09e13a856da4ccb4cdc6 3c0abef1382ddfb4d49b5930cae1fcac375157ad f82a0a981f108366f56504210c985c67e00a7441 47c112a9776fdf9d339756049a6239401e21add8 c5f28077aa3908b1df41457d1efff406c92854d4 f59475f559929627fe045928117d0ae802595255,,Bullet ODE heightmaps,This adds support for heightmaps with Bullet or ODE collision detectors.  I'm also planning to add FCL support by using the Octomap  but I think this should be a separate PR.    There are a couple of things yet to discuss and agree on before this could be merged.    **1. Flipping Y values for bullet**    I  still don't find the solution for flipping the Y values proposed here very pretty (flipping y is required for bullet so that it has the same pose as the heightmap in ODE). I've thought about a couple of different ways how to to do this  but all of them have something undesirable about it. The main issue is that ``dynamics::HeightmapShape`` is built (possibly externally) before the bullet collision object (and with it the bullet ``btHeightfieldTerrainShape``) is created from it. If we create and fill ``dynamics::HeightmapShape`` externally (e.g. from within the Gazebo [DARTHeightmapShape](https://bitbucket.org/JenniferBuehler/gazebo/src/1e8ad5554a8a82f658462574add4908f2cb3b8ea/gazebo/physics/dart/DARTHeightmapShape.cc#lines-65))  we would need to know at this point whether the Y values need to be flipped or not  so we need to know which collision detector is used. However ``dynamics::HeightmapShape`` cannot provide this information; we could instead query ``World`` for the used ``CollisionDetector``  and if it's bullet  then flip the Y values. But  this imposes too much required knowledge about the internals for the user  and it also requires a pointer to the dart ``World``  so I don't consider this a good idea. It's best if the flipping of Y values happens automatically "behind the scenes". Which brings up the next issue: ideally we'd like to have the option to use an existing height value buffer and pass it into [dynamics::HeightmapShape::setHeightField()](https://github.com/JenniferBuehler/dart/blob/659564d18f3de47bc70fc3de8dee7b5d626b71e4/dart/dynamics/HeightmapShape.hpp#L96) (at the moment  a local copy of the vector is kept  which can be a waste of memory if the caller aims to keep their height field vector as well -that's the case for gazebo's [HeightmapShape](https://bitbucket.org/JenniferBuehler/gazebo/src/dart_heightmap_with_bullet/gazebo/physics/HeightmapShape.hh)). But modifying an external caller's buffer data is not such a good idea. I'm not quite sure which solution would be more desirable  they are both not so ideal. So for now  I am just copying the height values vector  and flipping the y values in [BulletCollisionDetector](https://github.com/JenniferBuehler/dart/blob/659564d18f3de47bc70fc3de8dee7b5d626b71e4/dart/collision/bullet/BulletCollisionDetector.cpp#L933) (see also comment in the code linked).    Any thoughts on this? Which solution would you consider more suitable  or you have other ideas?    **2. Relative transforms**    Bullet moves the origin of the heightmap to the center of its AABB (see also [comment in btHeightfieldTerrainShape](https://github.com/bulletphysics/bullet3/blob/ab4b6638002c86d7d0c5d4a1b8e5728a227a92e3/src/BulletCollision/CollisionShapes/btHeightfieldTerrainShape.h#L44)). This is different to ODE  so again we need to make the behavior uniform. What's not so lovely is that [BulletCollisionDetector::createBulletCollisionShape()](https://github.com/JenniferBuehler/dart/blob/659564d18f3de47bc70fc3de8dee7b5d626b71e4/dart/collision/bullet/BulletCollisionDetector.cpp#L406) only returns a ``btCollisionShape``  which has no information about a geometry's permanent relative transform to its parent object. So this relative transform has to be returned additionally from [where it is created](https://github.com/JenniferBuehler/dart/blob/659564d18f3de47bc70fc3de8dee7b5d626b71e4/dart/collision/bullet/BulletCollisionDetector.cpp#L955).  For now I've solved this extra return value via an output parameter in the affected functions. This relative transform is then "dragged around" as parameter until it is remembered in [BulletCollisionObject](https://github.com/JenniferBuehler/dart/blob/659564d18f3de47bc70fc3de8dee7b5d626b71e4/dart/collision/bullet/BulletCollisionObject.cpp#L68)  where the relative transform can then always be applied when the shape is re-positioned.        What's not so nice about this: We only need this extra relative transform for the heightmap shape  all other shapes don't use it. Although maybe in future there will be other shapes for which relative transforms have to be applied to the geometry in order to make it uniform with how the same shape is handled in other collision detectors (?).    Similar issue for ODE  which uses Y as up axis instead of Z and therefore requires a rotation  but for ODE I found a solution which is less invasive (temporarily remembering the relative transform in the geometry itself  until a permanent geometry offset can be set after it is assigned to the body  which overwrites the geometry transform).    Is the proposed solution OK  or is it totally not desirable to keep an extra ``btTransform`` in ``BulletCollisionObject``?    **3. Target branch**    I'm not sure which branch I should submit this PR to  I've just used ``release-6.5`` for now. It would be good to have this available for Gazebo ASAP  see also implementation in the [dart_heightmap_with_bullet branch](https://bitbucket.org/JenniferBuehler/gazebo/src/dart_heightmap_with_bullet/) for Gazebo.    
dartsim/dart,1088,2018-07-19T05:58:29Z,2018-07-29T01:14:28Z,True,2018-07-29T01:14:28Z,84538aaa89d770d69df8179efbcc9619731141a9,65,14,a5c4cec1757b3eb2f1b5acdaae296b57a2346aa6 8a62cb2370b15ca2cb45d5b164d920d70d260f0b 91080d3244ec1cd7d70f3590c3d98cc85ce656de 7d7d7c387aab315fd5f0b851c0811c267ceced98 b0d564e65f88da12d39484e0dd9472b57b76c278 a8b6c7b49fb28a3b7eb32dcbb123a4a2c4b30a8c 30964d48f9b23278a82762cb1d2684ce3fcd5787 65a6f31261431b4cf951040cbdbd7d31e111c69c 0411d9c243e64bf6460b22d22fc3468f1b62b8e6 f4862ce512309a0d99fa4573e9aba5c756558743 8034eb07a77b5d62d84934c978482fad21903655 b99b10c94bd39ffdcc071ca1984fba824ce747c1 dcde2dd48147b87eea92abec57f08541bdd2b454 0090427c73cb72e9bffc2d2061d04ff0ff5b4978,,Reorganize glut preparation for glfw ,This PR reorganizes glut. This is a preparation for having glfw  which will eventually replace glut since glut is deprecated.    This PR shouldn't hurt any existing code except it will generate warnings if glut is included by old files.    glfw support will be followed soon.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1090,2018-08-02T16:24:01Z,2018-08-03T03:09:40Z,True,2018-08-03T03:09:40Z,828589a9b7354282b410fdf33c3be9633efc79e1,1,1,5382898762b013747067a114a378f73dd9308035,,Packaging 6 6 0,
dartsim/dart,1094,2018-08-05T06:13:58Z,2018-08-05T06:25:40Z,True,2018-08-05T06:25:40Z,bf69f5a7f4fc586d290720baea226defd2416423,5,3,b1b60eec2640594f1d2a69e38dac86a7abb3de1c e2b0e7bf544fec74a8e1d95a442349c07e606519 2e00860e0dbdafdcd31e000556f31bed34f8389d,,Fix example build 6 6,This PR partially fixes #1091.
dartsim/dart,1093,2018-08-04T04:56:20Z,2018-08-05T06:13:20Z,False,none,7e0528e05409b00d0804fac99024c11d19959b13,2,1,4263f2fc43d4b52cbe38a1fa199d3bb38e521de1,,Fix example cmake scripts,
dartsim/dart,1095,2018-08-05T19:24:57Z,2018-08-06T02:36:40Z,True,2018-08-06T02:36:40Z,9cb9699a791a740e6e3423192cb6fbbdc3ed7471,3,2,9067bca3fd19bd4f68c79be17df66dcb84be4106 22c0d1eba6f21b84f15fdc6359c5bf7e49331395,,Add option to DartResourceRetriever to search from environment variable DART_DATA_PATH,This PR adds a fallback option to `DartResourceRetriever` to use an environment variable to search DART data files. The existing preprocessor  `DART_DATA_GLOBAL_PATH`  doesn't work if the package manager uses temporary install directory (e.g.  Launchpad PPA and Homebrew).    This should resolve #1091 and https://github.com/dartsim/homebrew-dart/issues/54.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1097,2018-08-09T04:43:24Z,2018-08-09T05:43:09Z,False,none,5100443376cd1af96d20d2529191e3709c68f08c,4,9,c5dce4cf5d0b8629dbe1b878b5d76ddca35cccd8 2b608f043ab7002dd15297e9027894d8c0fdedf4 d76655044984c9036e982f95ed5f68ae69897f4a 979c56653e77b67b3bc0aba382c5177fa86b1ce8 671efa7558821a5f9d351578043ded073b2c56ff f274c43213eab202cdbc10cf383490b95ca9a958 fa3f8c86f80ea6b752fcd4cfe3984a361a333e5c d92c9ee2ac446b697aa14eae18cbb1e9f8a47740 83963e2d47cc5d89ba00c52830337e59964174cb,,Add CI scripts for automatic API document generation,This change is inspired by https://github.com/personalrobotics/aikido/pull/403. Thanks @brianhou!    
dartsim/dart,1098,2018-08-09T07:12:00Z,2018-08-11T05:00:49Z,True,2018-08-11T05:00:49Z,b22a915bfd6ceede81c95321f29b7cce6d58b823,7,2,ecbc09e0b6dcacbaa714ad1878ad083044e8f114 58a38716bef188c2092b743035a6b047df2a8780,,Setup automatic API documentation generation,This PR adds the CI scripts that automatically generate API documents when the changes are merged into `master`. The main API document page would be like [this](https://github.com/dartsim/dart/blob/gh-pages/README.md). Note that the versions to be appeared is specified by `.ci/docs_versions.txt`.    This work is inspired by https://github.com/personalrobotics/aikido/pull/403. Thanks @brianhou!    Related: https://github.com/dartsim/dartsim.github.io/issues/12  
dartsim/dart,1101,2018-08-14T05:54:59Z,2018-08-24T16:17:49Z,True,2018-08-24T16:17:49Z,3698fcf49f98b0899c68c5e682b615defc4ae6a4,11,14,2d1970603fa478c0c43529fbccbcee13916ad08c c2c3fb8cb5953110247335604cc8e4aa2a306c10 0428b708cb1f9a2c68d783b790c4fb737c57d7ae 468c3f7d906eb5a9dfa79e53c07871b107a6c778 a4d61fdd48f6965d7f4c30997be6f5f71d21b93c dae1968a6faf229f32c6ada342b5b92a0e74659b 2ac12cabf78d8e6768e3088c797b4c805fdd1b70 1787103a1640b61316e3900837c637c0b34ad5c6 d20f25e9d29aaac0eac1d0db14fadad2c95d8590 c99eab830db62cbe500dd78c8becbe3cfa41a9de 6c80c20cd4dc704beefb37585495fa47170db216 559b19eea14f54093dac274ce97e78ffdce19317 f3de7d1a15067c94b4edf54d999e2c172d19d92e 6855278e3828497b38c73cd732463f12b3f40beb,,Change BoxedLcpConstraintSolver to use Eigen instead of raw pointer,**Summary of Changes**  * Use Eigen objects instead of raw point in `BoxedLcpConstraintSolver`  * Assume `ContactConstraint` handles only one contact  * Make LCP related terms as member variable to avoid frequent memory allocation  * Format code of `BoxedLcpConstraintSolver` and `ContactConstraint`    Depends on #1099    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1104,2018-08-24T06:11:12Z,2018-08-24T16:18:16Z,True,2018-08-24T16:18:16Z,a8b4f996c7a9c85ecf5ec0030924fb106e632790,1,1,0fc3e419c0b1ebb4b2dcf707920a549f2b082310,,Add build option for adding O1 flag in debug mode,Resolves #1100 
dartsim/dart,1103,2018-08-23T17:02:36Z,2018-08-25T02:23:50Z,True,2018-08-25T02:23:50Z,da9d27bfa03680295a0b31def0b5e785e47944e0,19,7,b6f5b1a9a0964cff99746f932edc07bcd9981a21 63329dfec2e1d00eef90176f827d62026065b859 43cf24f544e8caaf00702f3d7d1cc71dc2c729ce 03581825415bfc47705bdf47b1b93805589db911 81bb9f63ee9d9904d824b2f8c1867d3a521c1c5b 5223eb9916c452aa56a211a5d8e1dc51c8a0967d dba41ace560fca889880390a8f7cf2469d549bf1,,Add initial work for DART C API,This is an experimental project of adding a C wrapper for the C++ DART.  
dartsim/dart,1107,2018-08-31T05:34:01Z,2018-09-03T18:37:31Z,True,2018-09-03T18:37:31Z,4fdbfbbfc3322dff7ad7bb4ed0497b16df3bc186,4,3,46ea90c4f9c7ab1f5ff0035f4eda933e7c3a8bdd 432e96a55553abc01c0d557182ab42a95f482621 f2ab7d6094a6549ecc0c21c05a5e7fe21f1fd802,,Fix checking file existence in DartResourceRetriever,    ***    **Before creating a pull request**    - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1106,2018-08-28T06:18:03Z,2018-09-10T06:26:52Z,True,2018-09-10T06:26:52Z,7a713eba2e529a4766b747cc98ba650046e19556,30,34,486594c55ac5515f2abbf86fcccf59a71c801d19 3ba91775c503842ab20189c469b95509a368f594 6fe2b7a9b1e0456a9209dd23e2f8701b5b1dfa37 4d023abc29e288184a004527a37a32b8ef893034 0d2b347d45a6cda17a36f2c443059d28729923b8 7b781f7d92cc2d35536aa535c28d20063acdd4bf bdaefbca7aeebc2e8dd4c1abac0d061911cf486f e3517d5a76ada910cb31a7d7a00d03f472fecc5e d316eb8a557ea0709b7398f0193328b243da9682 fcf9a75b190714cf95869f328b0ba52755538861 695fff230a1cccb5d97875a37b995eff1ecbf7c1 9b944c7792c8d146a6f8a7e24fdb4609160e2f3f f623514cc676be83c540146f76cc0aba670babe6 a2e1dc0e88d2e335f95a77c61c3b3abfd7d67af1 356c6192f941e2aca76e8034611ece1afbe879a8 f8c315a38d83dda8d216557e7e5d99454adce71f 130996c5949095b57910fe49394bce9c3c9c62db c1c6f921104e8046a666c486c85e984b1fde6f38 d496c641e3b032abf07f852d3572e57d37e4c1e3 6ca4edb5c2c317fbb8e042724c415bd6899b8d72 c124df84599a31a4341f3e60043e6d62ecdee1e8 db6c570f8533968299f7f8b438b6df76770dcfd4 01f66f39fe458d141cc33c3b5003d1b157e6c4a3 ec19e2e4f87e27b5e5e9d2b315fe3d31cb878a2f fb60ee2f3813461232c2db8f004c97ea3eea45a4 210e14860f29189ac996192e6bc0218b8d31c7cc 90c072136a08a9502664119eab28f40efb0661d0 642cd9097441267de88591465db7bcf9a68b4806 bee55be9757d711f1e9beca1025fb3a708e433b7 3d49cdeafb2ad8a97960c98c9f9717e0a44f4bf9 5a42bfe17c4ec582d5bd1ea9a03e8eb6730930f8 dee444893a99e0e0bb14b7c1ee2bb639554bb25e 34cdbc21e6f28eda786fcaffd22f10abfb10207d f2e6fe3c1a0ba59a3bc9cfe4fd82871fd8143f3c,,Add multi objective optimization API with Pagmo support,This PR is an initial effort for having a pipeline for multi-objective optimization.     **Summary of Main Changes**    * `MultiObjectiveProblem`: Class to define a multi-objective problem. You can compose multiple objectives  equality constraints  and inequality constraints by adding `Function`s to this class.  * `Population`: Container of populations and their fitness. Pagmo2 inspired the implementation.  * `MultiObjectiveSolver`: Base class for concrete solvers.  * `PagmoMultiObjectiveSolver`: The first concrete solver that depends on [pagmo2](https://github.com/esa/pagmo2)  which is a population-based optimization library for single/multi-objective problems.    The implementation is based on other project collaborated with Daqing Yi(@dqyi11).    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1109,2018-09-07T04:46:24Z,2018-09-09T06:12:06Z,True,2018-09-09T06:12:06Z,23f46cb3a46947f463da9c456d6c343dd78e3cb0,30,20,d316eb8a557ea0709b7398f0193328b243da9682 fcf9a75b190714cf95869f328b0ba52755538861 695fff230a1cccb5d97875a37b995eff1ecbf7c1 9b944c7792c8d146a6f8a7e24fdb4609160e2f3f f623514cc676be83c540146f76cc0aba670babe6 a2e1dc0e88d2e335f95a77c61c3b3abfd7d67af1 356c6192f941e2aca76e8034611ece1afbe879a8 f8c315a38d83dda8d216557e7e5d99454adce71f 130996c5949095b57910fe49394bce9c3c9c62db c1c6f921104e8046a666c486c85e984b1fde6f38 d496c641e3b032abf07f852d3572e57d37e4c1e3 6ca4edb5c2c317fbb8e042724c415bd6899b8d72 01f66f39fe458d141cc33c3b5003d1b157e6c4a3 ec19e2e4f87e27b5e5e9d2b315fe3d31cb878a2f fb60ee2f3813461232c2db8f004c97ea3eea45a4 210e14860f29189ac996192e6bc0218b8d31c7cc 90c072136a08a9502664119eab28f40efb0661d0 642cd9097441267de88591465db7bcf9a68b4806 bee55be9757d711f1e9beca1025fb3a708e433b7 3ecab91ab9c272961e22474a91dfd6c692369c97,,Consolidate random functions into Random class,This implementation is inspired by [`ign-math/Rand`](https://bitbucket.org/ignitionrobotics/ign-math/src/default/include/ignition/math/Rand.hh) with some extensions for `Eigen` objects.    The old-style random functions are deprecated.    The list of functions is not complete yet. Missing functions will be added later such as generating vector/matrix from normal distribution and multivariate normal distribution.    This is a prequel of #1106.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1111,2018-09-12T06:08:23Z,2018-09-13T04:28:40Z,True,2018-09-13T04:28:40Z,b038c639a52379a1b752c93b5ca1185dccfabfb8,3,1,3ab9277a07514e85de7b0af2a3a74704aab1720a,,Remove redundant function name,as suggested: https://github.com/dartsim/dart/pull/1109#discussion_r216658502
dartsim/dart,1115,2018-10-10T12:34:43Z,2018-10-10T21:06:43Z,False,none,42d58d595311822b8eb63ac55bd88c5599e3984b,1,1,362d98f524e55604e1fdfd1a78317b478ef356cc,,Fix for aligned in newer compilers ubuntu 18 04,In a clean (X)Ubuntu 18.04 installation  when compiling with SIMD option (native flags) and gcc (version=7.3.0) or clang (version=6.0.0)  some tests (and examples) fail because of segfaults.    The flag `-faligned-new` solves the issue (alternatively  one could enable C++17  but this flag enables just the right feature for the job). This also happened with clang. I do not know (and I cannot test) what happens for Visual Studio  so I left it untouched.    Let me know if you can reproduce the error and if there's another way of making it work.
dartsim/dart,1116,2018-10-10T21:07:12Z,2018-10-11T07:18:17Z,True,2018-10-11T07:18:17Z,7d830c2462b0ed560f412a8c098fbd8e50523abc,1,1,f07fc771a5a22c27dfff37dd019ef2c23c2106d2,,Fix for aligned in newer gcc ,**Duplicate of #1115 (rebased on release-6.7)**    In a clean (X)Ubuntu 18.04 installation  when compiling with SIMD option (native flags) and gcc (version=7.3.0) or clang (version=6.0.0)  some tests (and examples) fail because of segfaults.    The flag -faligned-new solves the issue (alternatively  one could enable C++17  but this flag enables just the right feature for the job). I do not know (and I cannot test) what happens for Visual Studio  so I left it untouched.    Let me know if you can reproduce the error and if there's another way of making it work.  
dartsim/dart,1173,2018-10-14T17:42:23Z,2018-10-16T15:34:23Z,True,2018-10-16T15:34:23Z,dfa1bc8d8a248f942f03031885968a391e5ba9f9,2,1,b2332abd22f3261b480795a5f1fa408f96a089c7,,Remove deleted default constructors of AspectWith StateAnd VersionedProperties,The default constructors of `AspectWith[StateAnd]VersionedProperties` are deleted  but the other constructors of them actually allow to create them without parameters because of their default parameter values. This leads to a compilation error of an ambiguous function call when creating them without parameters. This PR removes the delete declarations of the default constructors.  
dartsim/dart,1175,2018-10-16T19:27:30Z,2018-10-16T22:20:46Z,True,2018-10-16T22:20:46Z,749d8bb9183ff615a3ac60c4cd5287af6274b4a2,1,1,5c9a12735ad8e7bc90966761037678d33d4137aa,,Disable build with pagmo on macOS,Building with `pagmo` solver increases the build time that leads to time out for Travis CI's maximum build time (fails all the time because of this). So this PR disables it.    It'd be great to test all the components of DART  but it also has no point if it fails all the time due to the exceeding build time limit.
dartsim/dart,1174,2018-10-16T09:26:40Z,2018-10-17T02:44:50Z,False,none,e935547a34680dc283ea0a595b5d474d1b6175b4,3,3,af401ec38fc568e4315a323a4688ac5702becde0 17aa29cb89f29ae128b1b3b06c011ea88ebb07ea ccd44acb7937f8cdbf63e2970b38c03d8d4b960d,,Fix compilation on Ubuntu 18 04 g 8,It seems that there are compilation issues with recent versions of GCC (and maybe Clang) when compiling with the setting that warnings are errors  because some new warnings have been introduced.    This PR is a quick and dirty attempt to just make sure dartsim can compile with these new versions. There are two changes:    1. Disable warnings for imgui  which is an external dependency that we've copy/dumped into our codebase. If the warning is something worth fixing  then we should fix it upstream before copying it into here  instead of just fixing it locally.    2. There's a new warning for [implicit fallthroughs](https://developers.redhat.com/blog/2017/03/10/wimplicit-fallthrough-in-gcc-7/) so I've just added a break (which probably should've been there to begin with :sweat_smile:  so good job new warning!)    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1176,2018-10-16T21:18:39Z,2018-10-17T06:48:25Z,True,2018-10-17T06:48:25Z,3409dd2af96c97a1a35ed78f8609829527430981,9,3,6cd76525652ed88e4f1bf345832d7fca1f1a4513 fb122946cfb60b8f6dda0b068c0b72196c6d3ec6 ed325220d38004f304dc1ef2410c0fe93387e29d,,Update to imgui 1 65,Depends on #1174
dartsim/dart,1177,2018-10-17T02:43:14Z,2018-10-17T04:10:27Z,True,2018-10-17T04:10:27Z,db193cd3f644ef827a0381d882a9b9a36b2e2f8a,3,3,4a5716d3e6a21847cf830399a7188df00a01a34f 77ef284d0ff9d2f9d626026f0e500a7f5590d511 e8f3bc36ea9b09df481215a5898531ef6551af07,,Fix compilation issues on Ubuntu 18 04 release 6 7 ,Replaces #1174    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1181,2018-10-23T22:20:34Z,2018-10-24T03:18:22Z,True,2018-10-24T03:18:22Z,f3b36167be14580c6fcb2c4e6d5440ed3d4475c1,1,2,cc094190a2053640069a8eb1d1269948980373a5 381822e7ad0c1846847025ce1744581b05e529b1,,Fix aligned for old gcc compilers,Coming back to #1116  because it seems that in some older versions of gcc (e.g.  I have 5.4 in my second computer) we get `unrecognized command line argument '-faligned-new'`. This should activate the argument only when required (and doesn't break the compilation). In clang compilers I did not notice the same (I tested with clang 4.0)..
dartsim/dart,1182,2018-10-24T08:41:52Z,2018-10-24T17:26:04Z,True,2018-10-24T17:26:04Z,3147c7b377e434fdb38f87723faf53091f1d70b0,1,1,2ca0b9f10c568c830be4e1a02c8a497b8eb23568,,GCC 7 needs dumpfullversion,Related to #1181 as it seems that GCC>=7 requires a new `-dumpfullversion` argument to dump [the full version](https://stackoverflow.com/questions/45168516/gcc-7-1-1-on-fedora-26-dumpversion-now-only-includes-major-version-by-default). Without this our check in #1181 will fail. Apparently  if we use `gcc -dumpfullversion -dumpversion` it works both in older and newer compilers (I tried in my 2 machines; you can also check [here](https://stackoverflow.com/questions/45168516/gcc-7-1-1-on-fedora-26-dumpversion-now-only-includes-major-version-by-default)).
dartsim/dart,1178,2018-10-22T11:04:51Z,2018-10-25T23:17:23Z,True,2018-10-25T23:17:23Z,f31ccf5a72e7b3e547267853c6e68603925e659a,17,15,dad9400800a6c44f7ad02d7b39fa0704e3a13d83 4b5a757c06a0d82e36cb9f697a166d2ee2b74b49 62197f7a888f6c9f58eed9ef9dd11b11e7c88b72 a95078bf3b37b7eeba284e046c3ddb99b2f888c1 32c2527e244dc8194c50660b0416ac6dc6e132b1 1bb14378074654344e5399402d125d770a09f02b 3ce9cceab21e136cd08e6bf651e0636a02f9e2ca c3d53124f739a4e81b3f962a633fa6ea730111d4 9cea13e1807fc529fd32a44ba0d07751d64e899f 4803deee5d861b5b1661afaefcc71ede8e4f3871 2fb09faf8c79a0566ece00a991767d396af85a71 cfd3b2eda5591134a067c256cda03fb0345f9ac8 c8a7d9e1de35f4c1e9c0adeb72b74640016b9d2d e9da0addc8c600b784b32d593a024c4e048b49b3 0280a43a341fae6781016693d228d5ff75a8c883,,Add support for mimic joints,This PR adds support for mimic joints (see #733). It does so by creating a new actuator type (MIMIC) and inserting one constraint for each mimic joint. In short:    - Mimic joints are treated as velocity-controlled dynamic joints; similar to servo motors  - A mimic joint will try to follow the (multiplied and offset-ed) position of a "master" joint  - The `JointProperties` struct now holds three additional variables: `mMimicJoint` (pointer to "master" joint)  `mMultiplier` and `mOffset` (these are only used in mimic joints and ignored for all other types of joints)  - DartLoader (i.e.  URDF loader) now correctly loads URDF files with mimic joints. Is there a similar functionality/tag in `skel` files (I know that in `sdf` there's no such thing)?  - Cloning a skeleton  adjusts the mimic joint pointers    This is working for me nicely so far..    Let me know what you think and then I can proceed in cleaning the code (add a few more warnings and check it a bit more). ~Do you think it will be good to add a unit-test?~ I also added 2 unit tests (one for DartLoader and one for the mimic constraint)..  
dartsim/dart,1188,2018-11-04T09:25:27Z,2018-11-05T04:17:08Z,True,2018-11-05T04:17:08Z,be225af432d49271af32ad8e6dba22201bf6a57a,2,2,77a2ceaa44d38b4e662abbc2f369ec9b240687c8 99e706d617b22948ea192445788ee16110911f9c,,Add Ubuntu Cosmic to the CI tests,
dartsim/dart,1192,2018-11-10T19:15:02Z,2018-11-11T16:56:46Z,True,2018-11-11T16:56:46Z,efddf551099715873b3dda1e7c21feb9118c851c,39,3,71db9a10b65bd89e9203040bf9d0ecf046404da7 9975ea2870d2fbc24dadcea7e0e0b96fd47c7443 b578d35e5317726df41ddd16b3dcda649dbbd70d,,Generate namespace headers without requiring hpp in files,This PR simplifies the process of generating namespace headers by not requiring `*.hpp.in` files. This also resolves #1081.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1185,2018-10-30T05:25:59Z,2018-11-12T07:49:54Z,True,2018-11-12T07:49:54Z,7660cfde437b6346199c25be5d1dca5b782209ad,4,14,4a5716d3e6a21847cf830399a7188df00a01a34f 939906f2a1ed693f8bd342a5494aa73a11716395 63e01735ff644bd46ba4303d7b619c84055689e5 04963fb86391fddfedd09e0e956f99abafb0533b 974a41fb18f95bb2aa3a783dc046a27551dfbd8f 2f68763e8360da6f7bde4632494049589315f4c7 d390058a6430b7a86ce2c6c8c93ba9f7f33dbf36 0bf72a7221d0f6eea3ef27ba8d3ac554e1c052c3 2f699bbb11b1874223f2282b5a45f69a212e6dc0 c11a7edfac28396e2bbdad0478dc624f3b7ce611 8203a9305e05a63ee681bd6f02aae15d75725f61 1277b6faffd6c41e6876484f80d61ac0368b1d65 5b4c6dc7d9493b28e2ccd054955b4b168151944e bb198384ebf8ce0a90b43d60515e65a2e246572f,,Ignore phantom contact points negative penetration depth from Bullet,This PR is for investigating the issue reported in #1184.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1196,2018-11-11T18:51:12Z,2018-11-12T16:51:50Z,True,2018-11-12T16:51:50Z,9f905d9ae69b9eb59af0a9ee936752f533560df7,19,3,1215a5347ecf865b1340786d8a0b02c66bba1e76 03ade7da41975097d5bf23b3a09508cbfc288f43 761e75b9ad1c578b40f917e99b1bd55ced0ba0e3,,Setup Azure Pipelines,[Azure Pipelines](https://azure.microsoft.com/en-us/services/devops/pipelines/) is a recent CI service from Microsoft. It provides unlimited build times (while Travis CI is 50min) and 10 parallel jobs for open source projects. Also  it supports three major OSs: Linux  macOS  and Windows. We could utilize this service for long build time tests (e.g.  python binding builds) or parallelize CI tests using both of Travis CI and Azure Pipelines.    It appears that Azure Pipelines is twice faster than Travis CI for a single job with the same configuration (e.g.  macOS).    This PR is not that perfect  but I think it's a good start.    **Changes**  * Make build scripts CI platform agnostic (so that it can be used in both of Travis CI and Azure Pipelines)  * Setup Azure Pipelines  * Remove macOS tests from Travis CI    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  
dartsim/dart,1195,2018-11-11T18:06:46Z,2018-11-11T18:07:07Z,False,none,256f8237499040154394c497e5ec4a1e0beda6e6,1,1,7de5ed2d318e34d18e88db2675c0c255f7dc1f32,,Set up CI with Azure Pipelines,
dartsim/dart,1201,2018-12-06T23:17:50Z,2018-12-17T08:03:59Z,True,2018-12-17T08:03:58Z,4359052a78334625026b1a04d81b6c486eb401ff,23,13,a102c9699e825843aadca2c79da6843dc48cea0f 9a4201ad7169904aa23df5398680ae893db2e7a4 0bda3ceeb0264c160d91f368d30392e4d2872c2c 01db55c0c7f47d9597ec327283b70c7058eb727e 4dce68531d8716388e20d3645c8ae5fb66241cb0 6f42f554a9bdd81cfc477110e2a279c774b6266c 55fde86cc02ce44689d11f2c1aa4ce071588e6d0 9eb80ec1c1ded42a02b978692ac731582e8ae5a7 1b122562f6a3822630d4682d021d7903a929a4ee 78f327d2f7adaa83ad983949031a253496de65b8 b169252783677c121271c27782996f6f0599fb93 2f2a947f13c9c72448540922d3011aaf51e05fe9 c69e87513f35e4374376a1ffa5db436b711d2606,,Add Metaskeleton cloneMetaSkeleton ,This PR introduces clone functions to MetaSkeleton classes. It basically clones necessary `Skeleton`s are held by a MetaSkeleton as needed.    The clone function name of MetaSkeleton is `cloneMetaSkeleton()` to avoid the name conflict with `Skeleton::clone()`.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1206,2018-12-18T03:16:55Z,2018-12-18T09:01:48Z,True,2018-12-18T09:01:48Z,d65d2377e0650a04094dc58a3b5fad5bf78b9a80,1,1,00ea5ff6ba263ab23ee50cb20bca378915242b0f,,Fix CMake warning when CMP0072 is not set,This fixes CMake warning (>= 3.11):  ```  CMake Warning (dev) at /usr/local/share/cmake-3.12/Modules/FindOpenGL.cmake:270 (message):    Policy CMP0072 is not set: FindOpenGL prefers GLVND by default when    available.  Run "cmake --help-policy CMP0072" for policy details.  Use the    cmake_policy command to set the policy and suppress this warning.      FindOpenGL found both a legacy GL library:        OPENGL_gl_LIBRARY: /usr/lib/x86_64-linux-gnu/libGL.so      and GLVND libraries for OpenGL and GLX:        OPENGL_opengl_LIBRARY: /usr/lib/x86_64-linux-gnu/libOpenGL.so      OPENGL_glx_LIBRARY: /usr/lib/x86_64-linux-gnu/libGLX.so      OpenGL_GL_PREFERENCE has not been set to "GLVND" or "LEGACY"  so for    compatibility with CMake 3.10 and below the legacy GL library will be used.  ```  by specifying CMP0072 policy.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  
dartsim/dart,1205,2018-12-18T03:06:32Z,2018-12-19T03:42:04Z,True,2018-12-19T03:42:04Z,0b5b6dd21e1a119fead8c79d54b655f6ea90a5ff,40,7,5ae6510541552de975250648d0be7492ad71724a 84f6662c82068efb2a2f5d6c141413599cb81aab 64c6a462063c41f57a8f4a26990770b81cf4cb56 2564d4bdbd50b57f957d07b8337d2bfed14bd4ab 31b7a8957aa9ff8c9d0f24695db4b39825e87d80 4e4dfb9b8d79d0b574607810475992281ac6ce6e d5ab0823f46a4651bd989b46fccfdbd95a9a915d,,Remove gtest source code from DART codebase,This PR removes gtest source code from the DART codebase. Instead  we download it only when necessary. Also  the latest gtest version is used.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1207,2018-12-18T20:18:35Z,2018-12-19T03:42:21Z,True,2018-12-19T03:42:21Z,0ca3adad49ee0019436f75555b7aa0665caefbe4,2,1,ebca4286b87ddd37893e066869f66d553b071bd8,,Cleanup detailed cmake output,They will appear with DART_VERBOSE option.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  
dartsim/dart,1208,2018-12-30T20:26:26Z,2018-12-31T00:19:16Z,True,2018-12-31T00:19:16Z,b17dbd88869a19beb102ea6495441da85f63779a,1,1,da62bd0295ac62f0e399825c16ae7abf88009f03,,Fix cmake syntax mistake,A quick fix of CMake syntax error introduced in #1207.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  
dartsim/dart,1212,2019-01-08T18:48:50Z,2019-01-09T23:59:20Z,True,2019-01-09T23:59:20Z,d486a9217a829245a27f2335f0b7226f1aa23152,85,52,da62bd0295ac62f0e399825c16ae7abf88009f03 23b596d27874df6c73366f3bb68a4c331565b853 0edd9eecee98c1beda08284c6791ea56bd359ecf b5d4a51a424bce75c6b312d1e117c4027cf82046 4ec793f016c08bd51bb11187d6a63bd2408f68af 74037fab0b9fcc874ebcf8839ce653acf37b7990 70c234b48b91b293db85436dedd9c22ddfe3a4bc a9858af3c9281f754dc0023cb9ae895a7d081008 da717b4f81bde947eae315a2b3eb2ff94cfc6deb 4f42b71cde5fc69d6e6846c3d8282c5c52bce063 04b5f8d3da2c4394509677cf060c6a39b3ef70ba a33ebe026fa06360b585493ec9cc70b00bcd3c18 3d282f6c58cffd3a0ffe5905dd67cb12859d2ffc 686c85aa10456ec4452925f36a8bfd24494cf23e 4816efe73f771e8131adf552f5fe2d1192017699 73c28e20f5d598bd5b105d6ea6df69e0086bdecc c669b1e450a45be641b10a9922b00d139d01ffdf 22d23189073c0a44be200bd5407f7434050322c8 89397ec3b8b37483b72c46f858f950e09d394e2c 9e9779fcf854524e348b17d50266a1e7931478d8 a5ce5d355c8be6869b72528f2789484cdce198a1 691a7bdc78eb3e50b7cd88d84880d023c6e46d4a e2ab1d5ca4735a09ae15304ca4dc6db30aa7300f 541a810228fd38770f4ec35d99742b934373ad0b ba6b5d91f4e5ff4f20a4878e74e5ebae285e670a 79ed35f3996f4e8e11775b5e27c07af045d9b7f9 9bc9a37ef28deeea392baa1be4ea4417c6ee0be1 cb085ed98e0c6a97720611e8b34015c4361c22ab 3ec1c8a65020a9104bfcf59b61bc2d67f03e8748 062f2604a8664dfc14529750346f092cd0470ff3 a176eb67d0353373b2ab883d19f52181287fab02 072584364a0df676722346208a7cbbc3050556f5 ef729fc3fa996aa2d270c1421d8ce81944bc29ed e6bd19c8011f641dbf8bfdedc8b5f23a407358af 03af11ecd141fdf55fa0b53dbdb5971252a9f3ed c164f3ce33b99a11ec359abb8cca85289a5f7663 32a36aa56502196f44bccc2b81f98a302e7a6f57 10377554e0a2b0245e4f0d74ee16fa01ccc405ed 1dfb9c5c6bcc38c7f20f7c119ec5fcfd09b066a3 e2ddb453b587cf96d95b147a3e54eb2b4ccf7dde c8de175a3675b0684c395d487eab5e7f3437466d 240201dd40352666859d8fabeeff7fa6cd7ff4e0 ab745c051bbd1c890012143db0b7315415409f5e d1c2b476367f90391c624e041ccee6556303bb8c 843a3957c6f6e2784d7a89389cd13350aed66820 21437774cb096ab9aa30714d60e952e23ba4656d e297de1f756af5082775348a4c48762bb75168ea f8d411187251e1fbbaec4fd65172ebb14430cf80 fd873ca796050d9f286f8cdca885f4310c8b84a0 df251305506bcc17aa416046ffa2610b71832565 d7bebf325448f1bc8ca088f52733b3b52c2722ee 7c13f5d505db5552779418a52ee548359b6502cc,,Drop supporting Trusty and use imported targets for dependencies,This PR is a sequel of #1209  and more will be followed to modernize CMake scripts of DART. Here are two main changes in this PR.    * Drop supporting Ubuntu 14.04 (Trusty) in DART 6.7. The main reason is to use the recent CMake features (e.g.  target-based dependency management)  which requires CMake >= 3. Also  this is to reduce the effort of supporting the too old version of dependencies.    * Use `IMPORTED` targets for dependency libraries where available. For the dependencies that don't provide targets  define the targets in the finding modules  `Find<package>.cmake`. Use the same target name when the corresponding dependency provides the target in their latest version  which is not released yet.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  
dartsim/dart,1214,2019-01-10T03:43:58Z,2019-01-10T05:45:48Z,True,2019-01-10T05:45:48Z,4c1001cc858a1781e22d0a064e8bd02af2b59a97,48,3,e0dcc2cd1726e2ff93f2202f6f766b0d1c28e88d 263fada55be41fa3f60cb4def40b5c31e14087ef 2178e3cbb3ffc1974105d93277f95f67f364df2f,,Revert 1205 and update Googletest to version 1 8 1,Revert #1205 to have back Googletest source code in this repot. This is because Launchpad doesn't allow clone a git repository while building the package.    Also  this PR update the Googletest version to 1.8.1.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1216,2019-01-10T08:31:11Z,2019-01-10T21:01:14Z,True,2019-01-10T21:01:14Z,88572886cc2aa1581c65d73ff6253e62ee0f8eb7,14,14,4a5716d3e6a21847cf830399a7188df00a01a34f 939906f2a1ed693f8bd342a5494aa73a11716395 63e01735ff644bd46ba4303d7b619c84055689e5 e8bd1ed1b6761ca0cd1609b85d957af8e3094a12 e3366e9e9816e3081fa5612a6b522dcac698109e 0a9fcff00d65254bb440dc87f165965485b9d584 2ccd57dd7aa0835ad77d35baabe310093724dfee 53808bae2f783278f8a43254076ddd065de650a8 d366219c53d67cdddc9fb0e72b284b0bbdaedb8b ba04278abb899009d8ba7edb8a77d35d04b71061 d5910d7079b107ed216674ef0d24ab59710143ea 8f238d65a883006efd2580154dae4b41575cb218 44a5c10285c560d54f7051f92e80d81f9442deb8 89fc13c1780cd433beecd5ebdca1572e4ab43e7f,,Add a RealTimeWorldNode for displaying simulations at real time speeds,I recently needed to make a real-time simulation display on top of dartsim  so I decided to clean it up and add it into the main repo since it's a frequently requested feature (e.g. #1204).    It's a simple wrapper on top of the `dart::gui::osg::WorldNode` class. Users can opt for either the old `WorldNode` or the new `RealTimeWorldNode` depending on how they want to control the speed of the simulation.    I also added a line `ImGui::CreateContext();` because ImGui was crashing without that.    I know #1215 has already been opened  so I can retarget this at a `6.8` release (or we can wait until 6.7.1 since this won't impact API or ABI) instead if that would be preferred.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [ ] (N/A) Add unit test(s) for this change  
dartsim/dart,1219,2019-01-10T20:59:40Z,2019-01-10T21:38:21Z,True,2019-01-10T21:38:20Z,5cc389b40d1066f49c4a65f50b023d1b80b3bc77,3,3,22ccefce229d4a23f8fcbfe337279bf4146e8f42 98083e0669b2ac7a3ba3f67941530e5d3c77757b 35563cda6c67335f227b250174cc32367088e253,,Fix failure of ContactConstraint ContactWithKinematicJoint on Ubuntu 32 bit,Fixes #1218     ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  
dartsim/dart,1215,2019-01-10T04:21:03Z,2019-01-10T23:48:50Z,True,2019-01-10T23:48:50Z,6823839308d1face1d12b730448cadca2bbb88b5,705,10,e0dcc2cd1726e2ff93f2202f6f766b0d1c28e88d 263fada55be41fa3f60cb4def40b5c31e14087ef 2178e3cbb3ffc1974105d93277f95f67f364df2f 0043169e3dc85d33b8789985314ef50f7d58bb50 cb7dfd074aa1586cb19a235101b3fb972163f8aa d3948367f82f36ce2bafc95e3273373b986baebd 3b64f853793462f96bc25c34595e192aead7196f a7c24216b0ccbd134d6fcb99ca0fa557e168905e 44175863d16dd52f3856b2653372cc69444fb71a ecea7152e62b56874066a3e5675461733e76446f,,Packaging 6 7 0,Depends on #1214 
dartsim/dart,1209,2019-01-06T06:43:55Z,2019-01-08T22:41:53Z,True,2019-01-08T22:41:52Z,ef20d1a73900d7d3bb5d38fa7a39c86263e8348d,4,6,da62bd0295ac62f0e399825c16ae7abf88009f03 23b596d27874df6c73366f3bb68a4c331565b853 0edd9eecee98c1beda08284c6791ea56bd359ecf b5d4a51a424bce75c6b312d1e117c4027cf82046 4ec793f016c08bd51bb11187d6a63bd2408f68af 74037fab0b9fcc874ebcf8839ce653acf37b7990,,Import dependency targets when loading DARTConfig cmake,Currently  the transitive dependencies of DART are propagated by using CMake variables. For example  all the dependency libraries are stored in `DART_LIBRARIES`  which will be defined by loading `DARTConfig.cmake` through calling `find_package(DART)` in a downstream project.     However  this approach can fail to load the dependency. The items in `DART_LIBRARIES` can be either of the path to a library file or a target. Path items work fine (as long as the path is correct)  but not targets because the downstream project don't know how to import the target only from the target name. This PR fixes it by letting `DARTConfig.cmake` loading the dependency targets by calling `find_packages()` for them. This approach should work as long as all the upstream dependencies loading relevant targets subsequently.    In this PR  the new change is only applied for loading `urdfdom` to quickly fix #1200  but this should be applied to all other transitive dependencies in future PRs.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  
dartsim/dart,1220,2019-01-10T22:37:13Z,2019-01-11T16:35:14Z,True,2019-01-11T16:35:14Z,5a06758c438e8d472b0d91ccae0b2b9672d5d21c,12,3,4aaa637befea2f472e8ab064e0c66c6a6cb2ae1e 4b58ad2b1082295ed5c6d46aad5f1c5ff9fe9b1d da84316c014e263e235e670a26197494f8dd1c48,,Update ClangFormat to version 6 0,We use a specific version of ClangFormat because different version can format the code differently even with the same configuration. In this PR  we update the ClangFormat version to 6.0. I particularly chose 6.0 because it's the highest version that is available on the Ubuntu distros we support for DART >= 6.8.    ***    **Before creating a pull request**    - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  
dartsim/dart,1224,2019-01-11T16:55:46Z,2019-01-11T19:19:37Z,True,2019-01-11T19:19:37Z,af5b236eba977cbea0cbd3ade752784c4f12794b,5,5,fa153cd878828208a0fb4f406d574edec477e40a 566cc40bbb24d8685dfa9ee074ba215e2d6e6e08 412e65d6310ca7e0b658ee897163a5334e06f122 ad70b11169a0f14b577792ba5e1d01a6b5f1fba0 b8e23e179983933293caa06b877ba6e3acdeef4d,,Fix building API documents on Travis CI,  ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  
dartsim/dart,1222,2019-01-11T05:30:53Z,2019-01-11T21:52:38Z,True,2019-01-11T21:52:38Z,ce185b709de758fdc61025d8ac3ef2facb2c15c3,17,8,4a5716d3e6a21847cf830399a7188df00a01a34f 939906f2a1ed693f8bd342a5494aa73a11716395 63e01735ff644bd46ba4303d7b619c84055689e5 e8bd1ed1b6761ca0cd1609b85d957af8e3094a12 9a4a7b0263c7d3455d5140f4e5522afcabb1735d bd43cb6943708d6ccacfb36ac609375d137be91e 36375d3ae1bd0a57f52eeeba4af12ec3e40d0113 9bcea7dc7fe975bbbe107b73ba0b3c5bacf0b564,,Create imported targets in DARTFind cmake instead of Find cmake,This attempts to fix the issue reported in the thread of #1209
dartsim/dart,1221,2019-01-10T23:54:35Z,2019-01-12T00:27:19Z,True,2019-01-12T00:27:19Z,7cef21ea857feabfc2a958133abbe9439eacf08b,10,16,08ebbfec3631ebe09c5a51c042631d4196ac8030 4aaa637befea2f472e8ab064e0c66c6a6cb2ae1e 4b58ad2b1082295ed5c6d46aad5f1c5ff9fe9b1d 8d98fae71bc2ec49be3413bd1cdfc53860aabba9 1216fb580367f329c1c651966f7ee64a1d90de1a 7fb2f8a822c5bca81c0e4d754d91e8a8f4859fec da84316c014e263e235e670a26197494f8dd1c48 89677df5df71c5d221bc02cfc307b8c1d77d39c4 7ea7af22c7e0291894cd14c5a7dcdbe15681f097 826ba88e3f734aa4c211f644b9010a655dd25bc2 02986d7741260d65e7d188b560dcd9f9f67a0e11 7dda552bd3473477d6bae93cbf49c2c8e4ed1eb2 3403f2287708d6b55cf1d2f4e16b0230e4db290d 5028739e3a32c89f6ffb1a5fdda611a9ada6880f af5b236eba977cbea0cbd3ade752784c4f12794b 35b08c78068e7ac91eb54960182c776157468bed,,Fix linking error of FLANN on Ubuntu Disco,FLANN requires `lz4` to be linked  but it's not explicitly linked by the upstream.    Depends on #1220     ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1223,2019-01-11T09:44:26Z,2019-01-14T17:37:18Z,True,2019-01-14T17:37:18Z,eaa7440f807ba4e683477d58c8f24cae2932b6dd,4,12,4a5716d3e6a21847cf830399a7188df00a01a34f 939906f2a1ed693f8bd342a5494aa73a11716395 63e01735ff644bd46ba4303d7b619c84055689e5 e8bd1ed1b6761ca0cd1609b85d957af8e3094a12 9a4a7b0263c7d3455d5140f4e5522afcabb1735d bd43cb6943708d6ccacfb36ac609375d137be91e 36375d3ae1bd0a57f52eeeba4af12ec3e40d0113 ac5f58ed8490d9abc64139e39e6872c4d24e5e6e 93a4affcbac5167a20c0f81a948c9e1ec3586edd 34b735754772ee030782a843adcda186e7c4b8e3 ec7e1102c6388465d4ba06851f01a90902dbf538 8d1ad143e950a77325e4217555d3f1f03e1966df,,Fail to find a component if one of its external dependencies is missing,This addresses the conversation at the bottom of #1222: If an external dependency of a component is missing  then the component will be declared as "not found"  which should create a configuration error when that component is required.    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1225,2019-01-14T06:14:07Z,2019-01-15T19:29:58Z,True,2019-01-15T19:29:58Z,87fa371cb349e6cf5df2a89cdcabda9789ffc371,7,13,4a5716d3e6a21847cf830399a7188df00a01a34f 939906f2a1ed693f8bd342a5494aa73a11716395 63e01735ff644bd46ba4303d7b619c84055689e5 e8bd1ed1b6761ca0cd1609b85d957af8e3094a12 9a4a7b0263c7d3455d5140f4e5522afcabb1735d bd43cb6943708d6ccacfb36ac609375d137be91e 36375d3ae1bd0a57f52eeeba4af12ec3e40d0113 ac5f58ed8490d9abc64139e39e6872c4d24e5e6e 93a4affcbac5167a20c0f81a948c9e1ec3586edd 8ede42809c57191149a6be517b241354bd868d1f 190a04d1be75b41f44c3007f3df05cea5ca76df3 1742d6e0c9dd53475faacc718da4ef54e2c37ee2 30aeb292a8bbd08e79a8324ddbd3ca0790b79abd,,Support multiple CMake conventions for _FOUND variable,This PR continues the efforts of #1222 in fixing an issue with the confusion of using alternative find-modules.    CMake has two conventions for setting the `*_FOUND` variable for a package: `PackageName_FOUND` and `PACKAGENAME_FOUND`  with the latter being the older convention. To be able to gracefully handle both conventions  we should check both versions of the variable when decided whether to make the imported target.    Note that this is branching off of #1223  so we should merge that one before reviewing this.
dartsim/dart,1226,2019-01-15T20:46:26Z,2019-01-15T21:30:40Z,True,2019-01-15T21:30:40Z,6e33016c9592fd84a62eaf7df80e7458dc163c24,1,1,5aa130bf0be8f53b0718eaeda9f9c71640bd05dd,,Packaging 6 7 1,
dartsim/dart,1227,2019-01-16T09:56:56Z,2019-01-17T01:18:35Z,True,2019-01-17T01:18:35Z,d651fc104823e7bcc32ef273cb8c851e41113d74,3,9,4a5716d3e6a21847cf830399a7188df00a01a34f 939906f2a1ed693f8bd342a5494aa73a11716395 63e01735ff644bd46ba4303d7b619c84055689e5 e8bd1ed1b6761ca0cd1609b85d957af8e3094a12 9a4a7b0263c7d3455d5140f4e5522afcabb1735d 190a04d1be75b41f44c3007f3df05cea5ca76df3 2c9f96d83a161fb417f48fea763326c3ac6b7ae0 b728f3b3addf97a3c36ccc6cc4913072f4026012 60499d063d5552b906a733074694613451e01ab2,,Fix 1223 for the recursive case,There's a case where the changes in #1223 fail if dependent components are requested. For example  if you ask for    ```  find_package(DART COMPONENTS utils utils-urdf)  ```    then the build system can get confused about whether or not the component and its dependencies were properly found. We fix that in this PR by moving the location where the `TRUE` assumption is made.
dartsim/dart,1228,2019-01-17T09:07:07Z,2019-01-17T20:36:16Z,True,2019-01-17T20:36:16Z,41152321c5342f56a8195c33e281d0788aedf405,15,4,25d6de33119ba12f60b6c11e62094ae7fbb591c9 1edf051af1f38abc44b71972694a2a228802e280 16f10af33ef3642e8f3a27abe1d26b670461d06b bf1e3f9731f66dfea49d8f689af7483eca1cde8e,,Specify mode for find_package ,There could be a case that `find_package()` is module mode when we intend it to be config mode (by not providing own module file) if the downstream package provides a module file. This PR specifies the mode explicitly to avoid this confusion.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1230,2019-01-17T23:32:33Z,2019-01-18T04:50:46Z,True,2019-01-18T04:50:46Z,46c7e248c0f0adb68c9dd7155515d406fb227abd,1,2,eebfaa5cd24131baf8683fc31a5608d68521bd65 97564a377fbf04c0359ee8ed4584337af8e51d0a,,Lower impulses of DynamicsTest testImpulseBasedDynamics,This is a try to fix #1211 by decreasing the input impulses.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  
dartsim/dart,1229,2019-01-17T22:44:15Z,2019-01-18T04:51:03Z,True,2019-01-18T04:51:03Z,2b3e9ff9681840dc6cfc0844c26930b51f7156a9,3,3,cba52017356a6e4341e18d8fb681a7fe75ea9cce 18333ff0d39a17107e8ef0c82d540c1de24b53e2 f584798961399060db80cba47984b9dae2f1e1f4,,Packaging 6 7 2,
dartsim/dart,1232,2019-01-30T04:21:48Z,2019-01-30T23:03:43Z,True,2019-01-30T23:03:43Z,b057fc775aac8c922613fd80c62df19a88eba762,4,4,b00377831768f2efd1067f475c7caa281f954677 52bc599fb85f9c436bef4c91dbd1050fc63f418f 5807718b81a78303b64a1b7c166d9536ce171da9 e91f5d842577e0426f9416c282dca474294fcba5,,Ignore collisions between non mobile bodies,Addresses #1231    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,843,2017-01-31T13:37:13Z,2017-01-31T16:02:00Z,True,2017-01-31T16:02:00Z,e964e40de558b568ffc8ff889c1d77d5c3091ebb,1,1,95fc3f5df4b39d5a1089560a0d89b8a62509dd7e,,relative zoom and translation with mouse,Smooth zooming and translation.  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/843) <!-- Reviewable:end --> 
dartsim/dart,1235,2019-02-08T09:02:30Z,2019-02-11T02:33:53Z,True,2019-02-11T02:33:53Z,ca2dcd690286a34559e9cdb8ad1e1c9b14c6c5d6,2,4,a3e224db9a9eb9f8ad70792bd11488acab3c3064 d1f56b9ab5f8a917b489734ae9bbfc6367a9bfca 5a4539553f453f4a5246edc8b5564633ddf78f72 a58e552bbbc75e3b0e30a20a0f76700c8c88239e,,Unreliable plane mesh collision detection,This PR is only for illustrative purposes. We can go ahead and decline it whenever. I just wanted to present a test that illustrates the findings that I reported in #1234.    I've noticed that the ODE collision detector can have totally inconsistent results in between tests  and the results also seem to be very sensitive to the order in which the tests are run (e.g. if you change the order of the some of the elements in the for-loops  the results can be dramatically different). This makes me suspect that there's some very serious undefined behavior occurring  either in our ODE wrapper or in ODE itself.
dartsim/dart,1236,2019-02-10T23:51:58Z,2019-02-11T05:46:13Z,True,2019-02-11T05:46:13Z,3b39d5913c7507e7c71d7378fc164d67e980eb06,1,3,6011239abf6ae4f42c234a556883debe310767d4 cd064d71ee294e88e1028dfa87b840a8ebbdf24f 0a81a6a39e300117e6a8b7a03d146017eb2aaf34,,Add missing definition of Group removeJoints ,***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1240,2019-02-13T15:23:01Z,2019-02-13T16:09:00Z,False,none,1ae240b3d563e2956b0c3f5d867b2241b9df49fa,1,1,78fdab3ad292a3903aa64b684afbfe6ecbdd5792,,Use GNUInstallDirs for lib include path,The change uses `GNUInstallDirs` cmake module to provide platform specific paths. Not sure how this can affect how Dart manages the directory structure on Windows.
dartsim/dart,1238,2019-02-13T03:35:32Z,2019-02-13T13:52:05Z,True,2019-02-13T13:52:05Z,252c6f414e572bad21daa78d019c406472c988f2,2,3,5ba2649a40dcec4e6b756b292f879c780d8bd51b 147480ff0e088832260bab64ca8fec9e1b42825e 664e5beb367e7f79369aa6296839b0e4ae3692ed,, Make the LCP internal error printout less aggressive,A line in the LCP solver may print out excessive warnings over minor imprecision. This causes unnecessary terminal spam that looks like this:    ```  ODE Message 3: LCP internal error  s <= 0 (s=0.0000e+00)    ODE Message 3: LCP internal error  s <= 0 (s=0.0000e+00)    ODE Message 3: LCP internal error  s <= 0 (s=0.0000e+00)    ODE Message 3: LCP internal error  s <= 0 (s=0.0000e+00)    ODE Message 3: LCP internal error  s <= 0 (s=0.0000e+00)    ODE Message 3: LCP internal error  s <= 0 (s=0.0000e+00)    ODE Message 3: LCP internal error  s <= 0 (s=0.0000e+00)    ODE Message 3: LCP internal error  s <= 0 (s=0.0000e+00)    ODE Message 3: LCP internal error  s <= 0 (s=0.0000e+00)    ODE Message 3: LCP internal error  s <= 0 (s=0.0000e+00)    ODE Message 3: LCP internal error  s <= 0 (s=0.0000e+00)    ODE Message 3: LCP internal error  s <= 0 (s=0.0000e+00)    ODE Message 3: LCP internal error  s <= 0 (s=0.0000e+00)    ODE Message 3: LCP internal error  s <= 0 (s=0.0000e+00)    ODE Message 3: LCP internal error  s <= 0 (s=-1.5440e-13)    ODE Message 3: LCP internal error  s <= 0 (s=-6.4683e-13)  ```    These messages often print even when nothing is really wrong with the simulation. I've wrapped the printout of this message in an if-statement that should make the LCP solver less aggressive when it comes to printing this out.      ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1241,2019-02-13T16:08:27Z,2019-02-13T22:43:58Z,True,2019-02-13T22:43:58Z,aed490579a23f9e271deeced31c624d70eb48dc7,2,3,6f06b7a3e08a58cc295b8ed7db08ed80bc48ab75 6681d4b91687b49cd4ce10a9ce85a5b1cddefbb4 ac1da15ad5aa75c90670712753baf8914a8dc700,,Use GNUInstallDirs for lib include path,The change uses `GNUInstallDirs` cmake module to provide platform specific paths. Not sure how this can affect how Dart manages the directory structure on Windows.    Replaces #1239 
dartsim/dart,1239,2019-02-13T14:46:18Z,2019-02-14T17:19:47Z,False,none,3aaaa88aeb699963973800066d05483257052034,1,1,a5bbeb25c39aee4d12b110627a80fde1817dac32,,Fix SOVERSION to use only MAJOR to match ABI rules,The SOVERSION is currently coded to MAJOR.MINOR in Dart. If I'm not wrong  Dart follows semantic versioning so ABI is compatible in all minor versions of a major serie . If that is the case  I think that the current SOVERSION should be composed only by the major version.
dartsim/dart,1246,2019-02-20T04:35:59Z,2019-02-21T03:03:59Z,True,2019-02-21T03:03:59Z,2f392b6e28f15c4d98343bd53f97aa1162ac7bc9,2,1,2a201f3007fff0061a24af6db8a77b1446ebb5f2,,Silence gcov output,Travis build with Codcov reporting fails due to huge log files.    This PR is borrowed from:  * https://github.com/personalrobotics/aikido/pull/489  * https://github.com/personalrobotics/aikido/pull/495  * https://github.com/personalrobotics/aikido/pull/501
dartsim/dart,1244,2019-02-19T06:54:51Z,2019-02-21T03:07:16Z,False,none,bb23fb1c263a3b295ada2bfb775dc4cc2a1200ee,6,3,cd8fa93be36047c18190ff3b80b3091c0ef59fd4 f0367a0aed01895b10484409732138c6771bff7b 8bcf56d1e94d2ade2d27ab21c6248259803cc393,,Fix issue 1243 and add a regression test,This fixes the problem reported in #1243.    I'll also open PRs to patch this in earlier releases of `6.x`  because it's a very significant error (even though the fix is very simple).
dartsim/dart,1249,2019-02-21T03:05:10Z,2019-02-21T05:03:28Z,True,2019-02-21T05:03:28Z,f5605defdc37d983828352301993799a2c965e78,5,4,36033e56095a8b09a4c5bc3cbced9e9be01ac858 8272fd25f7e318e9cfe715fb151d44aab276f03a 631370a556598c303262c3b3ffadb294838a6dd8 e2402d0dbfc103d0339fbdb4a9b4905c5e9b56b4,,Merge release 6 7 to master,
dartsim/dart,1250,2019-02-21T03:12:09Z,2019-02-21T05:09:44Z,True,2019-02-21T05:09:44Z,0a1996ed36b94f43b4c5d47f2dc794724eaaeafc,6,2,ca91f19d71b8cd42577e803168016923ff1357d2 e954546dc2a919ce4cce268e6282ddfb20d6ddb7,,Fix not failing for missing required dependencies,Fixes #1247 
dartsim/dart,1237,2019-02-12T01:26:04Z,2019-02-21T13:29:00Z,True,2019-02-21T13:29:00Z,1b2e22841e4a5e54103945bdeba96cd345c8cbe2,54,56,1e88e467514daa0abc31400987a75addcdbc5cef b44d21c1ec5225f69de3d7cd839c2dd5bbabf0e4 747a2c2d54a76418880a035397b1a8e5a247a544 c368e7c72192b742c39184fa837aa003e661e1a7 08ebbfec3631ebe09c5a51c042631d4196ac8030 4aaa637befea2f472e8ab064e0c66c6a6cb2ae1e 4b58ad2b1082295ed5c6d46aad5f1c5ff9fe9b1d 8d98fae71bc2ec49be3413bd1cdfc53860aabba9 1216fb580367f329c1c651966f7ee64a1d90de1a 7fb2f8a822c5bca81c0e4d754d91e8a8f4859fec 4c063e71dcce6c872e70e230e932664364fe7ae5 da84316c014e263e235e670a26197494f8dd1c48 89677df5df71c5d221bc02cfc307b8c1d77d39c4 7ea7af22c7e0291894cd14c5a7dcdbe15681f097 826ba88e3f734aa4c211f644b9010a655dd25bc2 0416bb2a651dd0959c286ee0e387abd92eec0cc7 6d34914a286186dfcede1908bdc411b00a6a04ce 558939a53cc48d610fb5c1019bcbe52f8f362fd4 5a0bcb1eeb823431c6e0084dda368a8ed61a5d78 0dd2f5b10f04cf7a371f1889eda5593030371401 6011239abf6ae4f42c234a556883debe310767d4 cd064d71ee294e88e1028dfa87b840a8ebbdf24f 853f7cfa16d8c3383c9d4bd5f3a108a8f3ee9274 0a81a6a39e300117e6a8b7a03d146017eb2aaf34 5f51c0908cb8a5b554897a94020a5cee240e2ecb 645f5aa1d9972cd854662812832176d520524f43 79570f89fb10e84705773c0142296f57794c2302 b7f1ab2eb494289bf21305eebc3dcf6e4f04e7e2 d6b4ad060118f29d1ff4bf73411691e477584559 c3fb5a6807d5c1ee423aa34fbfc93cf28a720f37 303d0580e95dbd3397d0313d02967a6d82a5560e aa7f64395db9295967e1b53a8e00e9c69f077d0f 1b15ebfc6e4b70d0bdcb47b5c09f7aff36c8d7c5 0639ad4340833d3d3dd68cacc69f3558709bb9c7 11e6a70ffc65a7952f4df2d89e269949a444b4d2 eba910d0968f8dbca36b218c134ce08b809462e0 1898693ca2b1f8294b3e1d1f71e9aed2af8aaae5 2d8ce0cd15e3e3ac30cf91b72f6e5486d6d84705 41942ba99fdfdfdf26d944aef8246286e03a6ac3 42a7ad3628d799010e3e36843f16698c73cac44a f6bda710898cb5c89bc87d423484af215b7b016a 5c6c97b395b8cfb52db556f54515e479f3802d91 8dc28d5968d0af92fccb433a895426cbdd6014d6 938fd3640a7167d246c9dd507c4f2471e2443b35 f32eb550d3b3e9fce68ea38935e5e842cbcde8f6 2fae1558ed9e03f4eee59733ed1604da385f0f98 22d67405f859d5d70585a04387fe3a54f1689d70 80c15e575dd775542a2135803a9338249cf16ab7 bdf5921f24f05518cd65ccbe680a644eca0dc8a3 4519ee51b308854ce26b297f1916414c35af9cb4 8c34703886087af73f64ceb8cfe1ceba19f5a654 08ac852da5ffdb349e627907e3a63958ea4141e0 2b34be7de8dee9530058c8e572d1720b0aa3fef1 4811acf827bf9eacd0860fa972053ac28d5b1f1f 7997e066aeefb42fe19357af489fb8dc059b6284 0207517bc7134aa7f39df027da59ab38b0e28bb9,,Add initial python binding utilized by Chimera and Boost Python,Python binding is still under heavy development. This is the first draft for early access for potential collaborators.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,911,2017-08-28T08:03:11Z,2017-09-13T01:33:16Z,True,2017-09-13T01:33:16Z,31db2d4ccd0dfdc4c313227938ba297a01b17f99,12,21,af9d36e8331e7e994319a4adc5b6e6e1a97cbc93 a3f01ff256565c815aecb4d02cb7a9137352864a 43820d54383a7d77f98b3dbb40e98da1af924b94 68373c6e5d6644e556d00af8c607be1bd20f2d7f 7e5ed1806cee13327ff2f27d61f5cbf90d7963a9 305f47ee7bc858c530a9d766423a488b1b766ca4 2418f76a55ddbe60e6ccc0bb4b317a7033cb2b54 33f46faf95ae40e6cb509c4254a69904b8cc0ed9 8cc365a350e17e0ecd9df6343cd22f4fdac209ac 78b7e42018f73bfa5d8ebbb1bbf2f5a6ec70bcd1 e6f2f00b236a5da1791db7d9ce0a44a1052e020e 96596fdae1a08c7de38f6e517cf62e4f3d34e826 72a2b28d0ac91a6fe4f878589ec1173ceb699ce4 6a8e5ac2cdeed4e6b38dfb89c1d74a38298d6992 866947c9da378e2b1b77be7db48c00aa0bc0e602 f46337b22f7ce86de4a45078d6b55979bba5c747 8c7611abc2e3a286f6200c000b26933cc2ffe977 b5879bc41d30791e82e4006988f9939f2cbcbd14 23f10bd957b0323e89ca80a8bf1cb854f54b0ad0 42ad25e820333f89f00fff5e7fa436bd0e64565a 3ced45677daba287a6e209931c5b3e611e5fb0a7,,Add blacklist to BodyNodeCollisionFilter,This pull request enables us to enable/disable collision checking for specific pairs of body nodes by maintaining a blacklist in `BodyNodeCollisionFilter`. Also  `ConstraintSolver::getCollisionOption()` is added to enable to modify the collision filter through it as:  ```cpp  auto collisionOption = world->getConstraintSolver()->getCollisionOption();  auto collisionFilter = collisionOption.getCollisionFilter();  collisionFilter->addBodyNodePairToBlackList(body0  body1);  ```    Minor changes:  * Add `CompositeCollisionFilter` class to enable to use more than two collision filters by composing them in this class  * Rename `CollisionFilter::needCollision(...)` to `CollisionFilter::needsCollisionCheck(...)`
dartsim/dart,1253,2019-02-23T08:13:55Z,2019-02-23T14:40:36Z,True,2019-02-23T14:40:36Z,46d6eeb361931d27002a70bc52ae2bd2fc807a98,2,3,ea39730ac303ee1088b2e379336dfa8cf4b56eed e3803d84343400fb8a0081e6a659edab42b8bb7e 091a541b7ea8643bf905cc00eb797bb860af4675,,Fix linking to octomap when not imported,Resolve #1252     ***    **Before creating a pull request**    - [x] Document new methods and classes (N/A)  - [x] Format new code files using `clang-format` (N/A)    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,1254,2019-02-23T08:15:56Z,2019-02-23T14:41:44Z,True,2019-02-23T14:41:44Z,e37fef54aa0d49e9bf3679cf91f95cbc9f6bdb79,2,3,6685f790a0438e88de4202d42d3df3426e492398 c5b724cb51caac0db9f5e40ac3a2a904b6f08575 f37664edeb4155b6bec6907049f17ab506f6a7cd,,Fix not defining boost targets,This allows us to use the boost targets even when the default `FindBoost.cmake` doesn't define imported boost targets.    ***    **Before creating a pull request**    - [x] Document new methods and classes (N/A)  - [x] Format new code files using `clang-format` (N/A)    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,1245,2019-02-19T07:15:27Z,2019-02-20T14:12:47Z,True,2019-02-20T14:12:47Z,36033e56095a8b09a4c5bc3cbced9e9be01ac858,7,4,701ef61d83d66aca9911bb0d86a35939c1bc1549 1c59ec710aa0c861acd0b9323069ad35bfa71bb1 063f8ba526ea5243fd381fb9bfe7660618fa3910 c3a8e618ecd06d741fd50b0e784e51871ef9abfe,,Patch for issue 1243 and add a regression test,Same as #1244 but targeting release-6.7 for a patch release.
dartsim/dart,1259,2019-03-03T22:55:59Z,2019-03-04T03:22:41Z,True,2019-03-04T03:22:41Z,25e4d62444262b5b82828a4966e176179e8a0859,2,3,fee67a66a985afc38bf11da8747b57840deea336 bbcb4ed1bc5d965879f6549bd0aa541ebdbec8c2 958e5576fdca7c6127db7bdf3302dc4de33f4f6e,,Offload debug build tests on Travis CI to Azure,The CI test of debug mode + codecov on Travis fails due to Travis's time limit (50 min).    This PR changes the CI settings to only test release builds on Travis CI  and let Azure test debug builds and others that require long build time (e.g.  codecov report and dartpy build).  
dartsim/dart,1258,2019-03-02T10:31:45Z,2019-03-07T01:58:54Z,True,2019-03-07T01:58:54Z,5d78f9398d8aff986414e326e2852c1834912458,5,5,61e86c3ef3330199ef65c8916cb5d6e5b4726393 68167f117738cb516c92c1b1a933683c18d829f3 363795ebb3622d7cf7a77f218abc2e6df45faf63 6183d88bcedad9160cf530de9324fc5f04dcbe82 614a1fbc631df2ae800f80781a7d28aeef176e30,,Fix incorrect transpose check in Inertia verifySpatialTensor ,[The last check of `Inertia::verifySpatialTensor()`](https://github.com/dartsim/dart/blame/a94c9d09938c3cc5f6a463d6e8747d6a78357b15/dart/dynamics/Inertia.cpp#L352-L375) doesn't correctly test the transpose relationship of the top-right block and the bottom-left block.    Resolves #1257     ***    **Before creating a pull request**    - [x] Document new methods and classes (N/A)  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1099,2018-08-12T20:55:22Z,2018-08-24T05:34:11Z,True,2018-08-24T05:34:11Z,545f3ad198457e6f0eed2ac32ef5c9bc63a89cf8,33,7,2d1970603fa478c0c43529fbccbcee13916ad08c c2c3fb8cb5953110247335604cc8e4aa2a306c10 0428b708cb1f9a2c68d783b790c4fb737c57d7ae 468c3f7d906eb5a9dfa79e53c07871b107a6c778 a4d61fdd48f6965d7f4c30997be6f5f71d21b93c 075454e783c5cde2bbac5202310172bf378f669f b8a85ada96145327b9292bcdb1fd3bc77fb35006,,Refactor ConstraintSolver decouple LCP solver from ConstraintSolver,This PR refactors the current constraint solver  `ConstraintSolver`  without changing the functionalities. Currently  `ConstraintSolver` is strongly tied with the (boxed) LCP solver  which leads to that it's not extensible to other non-LCP based methods.    **Summary of Changes**    * Remove the LCP solver dependency from `ConstraintSolver`  * Create `BoxedLcpSolver`  the interface class only for solving boxed LCP problems  * Create `Dantzig/PgsBoxedLcpSolver`  implementations of `BoxedLcpSolver`  * Create `BoxedLcpConstraintSolver`  an implementation of `ConstraintSolver` that requires a LCP solver. This class is the mostly close class to the previous `ConstraintSolver`  * Deprecate `DantzigConstraintSolver` and `PgsConstraintSolver` in favor of `BoxedLcpConstraintSolver` + `Dantzig/PgsBoxedLcpSolver`  * Add a "box stacking" example (will be improved further in the future PRs)    As a note  this is prework for implementation of sequential impulse method of Bullet and hopefully more constraint solvers.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1260,2019-03-11T10:49:00Z,2019-03-13T10:27:07Z,True,2019-03-13T10:27:07Z,23e7c87ec82d9c60a66356c3a5e1d2726d7a4b2b,6,5,f05f69ff2c49788509107e61712765168ad686e0 b6b841c92b40ed53bbb41a0eb54940636dc60945 f62a12687e01b95e9fbb07698ce6dbbe5da96d4f d46defb3ac492ef47506b56b2c351accb2f570e8 15fb78a50551456e5fbd802a867d1686a89a294a,,Fix not copying constraints in setting new constraint solver,### Motivation  `World::setConstraint()` doesn't copy constraints.    ### Solution  Introduce `ConstraintSolver::setFromOtherConstraintSolver()` to properly copy skeletons and contraints from existing constraint solver. This is to let `ConstraintSolver` handle the copy instead of the caller (e.g.  `World`).    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1263,2019-03-14T16:29:35Z,2019-03-18T04:04:18Z,True,2019-03-18T04:04:18Z,56205a31896592891ada2c8cd11079b151e8e8ef,1,1,b9f49d46c834cd31765577f4533da514e287c69a,,Fix finding manually installed OpenSceneGraph for CMake 3 12,### Problem  OSG installs its binaries in `<install_prefix>/lib<arch>`  which is not searchable by CMake < 3.12.    ### Solution  Explicily set CMake to find lib64 paths by setting `FIND_LIBRARY_USE_LIB64_PATHS` as `TRUE` as suggestted [here](https://github.com/openscenegraph/OpenSceneGraph/pull/660#issuecomment-441502412).    ### Note    This is tangential to #1262.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1269,2019-04-03T04:30:25Z,2019-04-03T12:07:42Z,True,2019-04-03T12:07:42Z,4a97518c720053de907875ab8a538c44e7d844a9,2,2,137a7f770909fa2f67bf32428a12647d4556b96b 1a27192096e8050817535ad5ccdbce7280c17971,,Add mojave test case,
dartsim/dart,1272,2019-04-05T15:05:30Z,2019-04-06T01:23:07Z,True,2019-04-06T01:23:07Z,3deec2c5acdb4c6844083c05d5068c4f4ab76189,1,2,087219d860e9b049f3792cda16d7bdbc6b36d73c e1cd7e04502ae0c1bba1f323374c92afc781429b,,Use docker for Xenial build on Azure,Per https://github.com/Microsoft/azure-pipelines-image-generation/pull/732  Azure uses Boost 1.69 by default  it seems there is no option for choosing the system boost (1.58). For some reason  [DART fails to build with Boost 1.69](https://dev.azure.com/dartsim/dart/_build/results?buildId=492)  which should be fixed. In any case  the Xenial build should use the system Boost  so this PR changes to use docker for Xenial build.
dartsim/dart,1270,2019-04-03T17:16:15Z,2019-04-06T04:55:19Z,True,2019-04-06T04:55:19Z,0f4cf216dfbcebf3197eb917f319741e3669eb6c,4,5,885d4ce6bf84a44da22980657c80e57da34b8663 a66735042a950ee4937c4c483d9643a9575e935e bebc388bf269f2e0aa9b35c2f12cf48e8cb34daf c8dddca0cec1a111f486e2fd455c9383cc401acb 8ebf720d97e36215d9318959c871d14533d3c467,,Change urdf parser to warn if robot model has multi tree,This PR addresses https://github.com/dartsim/dart/issues/1267.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1265,2019-03-23T22:26:20Z,2019-04-08T22:38:35Z,True,2019-04-08T22:38:35Z,9012a4a6e0c9223879e819f8b7e60a63a7399266,28,12,a9d65ee051eef33110bf41e4e9a5623c6549fb3e 13ad417a6a9e6c45f4d23165e1bfc08645be3642 3037248c80f707dbe3880d35b6949f11722670e4 e926c865372647b152d595d3c0459399e0fc931f ece6e7fdf136d08bb962896674f8f7a75866fdc5 4df8be7920070d1f335536c4997fb7a27aa1b8df af435c9de9a67756856ae2ae8ecab6b4992301c8 72fb4a44931f27eab9b4a0172a70222cc93dcb06 a0e4df2d3b81066fb03b1a2cbad407c0fcf0723a cbd142f37236706adc7b011b81f0f596af044dea ae62ce0e4f6da808bca4651dc9615faf6c614c28 a7a63c3b04e61256721856f671805398a88782b0,,Allow BoxedLcpConstraintSolver to have secondary LCP solver,### Problem  Dantzig LCP solver sometimes returns inaccurate solution or even NAN values when the LCP doesn't have a solution. More importantly  `BoxedLCPConstraintSolver` uses the solution without any sanity checks  which easily leads to unstable simulation. This is reported in #892.    ### Solution  Let `BoxedLCPConstraintSolver` to use more robust LCP solver such as PGS when it fails to solve with the primary LCP solver. In addition to that  as a final resort  it discards NAN value solution when the secondary LCP solver failed as well.    ### Testing  Added the regression test provided by @pchorak. Thanks!    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1273,2019-04-06T15:00:43Z,2019-04-09T02:59:37Z,True,2019-04-09T02:59:37Z,3dac9651733499803a7614e5121825fe22c6d113,6,5,634c949a0e25b35d9c328abdc00af46adc0a09ba 226d6083146f83bbe5e85b13e5ceddca2d1bb327 49c34682cb5831f800316259bedbfb96e1e49d1e 74ac38ae7e30c0bd107c970fa06b5e91fbfa36b9 43a34b1ebe129ecc61b3920e3419c47e66546315,,Add a new Criteria constructor for creating sequence,### Problem  No convenient way to create a sequence Linkage.    ### Solution  Add an utility constructor to `Linkage::Criteria` to create a sequence Linkage:  ```cpp  Criteria(BodyNode* start  BodyNode* target  bool includeBoth = false);  ```    ### Issues  * Resolve #1268     ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1266,2019-03-27T00:29:17Z,2019-04-10T21:14:50Z,True,2019-04-10T21:14:50Z,b56a14f504c1cf81c5ad741e8240b6a41e58aece,12,10,41332b7c0ca6e4f38bfa6b96823e64e5b602769c 01b1325a029789b2b041bc02bfba05ab6f3cb98e a61d423fe038fedc22431155f90f95591c71311b 0f46940f232a1dba47c045b67fc4844014dc0ba2 eaa9071265850fbf5b165b875447aea61101e0b7 fe56d300db87ade1f6cb7d09f7c7dece84f13a79 024cba5a17909e8ec2e9047f5f62b80918fbc809 07aaaae65ec4d12cf4553a75f5de02e254d2a294 a95aa5e4997e31b9423e957a7bd1359ad2b7d344 54dd62ad132659a87b8f4ce3bb53bc004ab49fae,,Apply IK solution only when the solver succeeded,### Problem  IK solvers apply solution even when the solver failed to solve.    ### Solution  Apply solution only on success.    ### Testing  Added a simple unit test that checks if IK solver changes joint values when the solver failed.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1274,2019-04-13T12:41:52Z,2019-04-17T03:35:12Z,True,2019-04-17T03:35:12Z,b427e40135a752094641e7a5c0c28e051e109499,16,4,ec6b04ae9e01a58c5d601926c0bf02029798b84e ff63d2f10599952f955bf419bfe05bb8992bd30c 96417725211f795e55a257dfb9d31558d8fd9650 1a6271b51a30802b27f24cd444b152c72e6c3c4e,,Update imgui to 1 69,
dartsim/dart,1275,2019-04-19T03:35:24Z,2019-04-20T04:49:41Z,True,2019-04-20T04:49:40Z,b23f04d622308e18a03d6dfd9e42f608b02f07dd,1,1,d0bc3fb971e31f745bafb05fbb721a47a6c3482b,,Fix finding octomap,
dartsim/dart,1276,2019-04-19T14:33:18Z,2019-04-20T17:50:38Z,True,2019-04-20T17:50:38Z,d4350e9808dad388a92b88864c7d4b6dc2691f8e,14,4,4ee7c3bb08415f9ad8c28e178f075cc8c8671c97 7e1b01390cc4836ca94182a4de5a9c97d3fc043f 1e0fe4d1cdc3b170932639371f4b5c95451acfc6 cb993cd323134f40e9df1ca1394fd11709cb5bf5,,Add VoxelGridShape support to OSG renderer,![image](https://user-images.githubusercontent.com/4038467/56428754-5cda0b00-6275-11e9-9de9-683c9078d2bf.png)    This PR depends on #1275     ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,1277,2019-04-19T16:26:24Z,2019-04-20T23:45:31Z,True,2019-04-20T23:45:30Z,1afda83dbb76ce385022febf34ea7399a942dec0,12,4,8776d1a319f6d5ab43fa1ba7093a1a29c7a25458 2f22ac73eb89193a062d9cbe016813be62bb2295 c05f34d0f9093e48cc2b13c4389397789a629460 453eebadc702b921f5dee35f5c390cca08a54100,, Add PointCloudShape and its OSG rendering,![image](https://user-images.githubusercontent.com/4038467/56433249-1ab8c580-6285-11e9-9963-dd13666b348f.png)    This PR depends on #1275 and #1276.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1278,2019-04-22T01:16:51Z,2019-04-22T03:51:07Z,True,2019-04-22T03:51:07Z,7faf201ba340efe4f9ae4d6841abf5d6e1203fa9,5,1,590c1494d719ad5bfa24800c904b8e22c1a2b6b2,,Add grid visual to OSG renderer,This PR adds grid visual object to the OSG renderer. The grid can be configurable in terms of plane type (xy/yz/zx)  offset  line count  line step size  minor lines per major line  line width  and line color.    ![image](https://user-images.githubusercontent.com/4038467/56478052-e6016580-6460-11e9-83a9-2ce418bc7cff.png)    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,1112,2018-09-17T10:37:21Z,2018-10-24T03:14:14Z,True,2018-10-24T03:14:14Z,84bb83a17a38eda62bcd0b899340fe39f2069ebb,41,19,9592ad0b38a9953d11c05200eef2810ce4307587 d06c772d4170ff4303fecfb5d5514331d2676bd5 39904661190d9d5d79e122f75edbc7d121ceba4f e86ca7663cb50c17e139233c5dcc19c8256824e0 4f810edbd3da5f2a3ece315d2bd0487d2a9b4288 ddfa88ee3b666f8f85918970878d7eded44b8f70 0b080ad39d3b6806d5d344ac309b2d096bf7b269 ee12b67cb3a68d0064cad46d094911dd8352f880 1751603343465a48de06cedf575580933dd44055 31a71517542177cd2d3fe786e93e04c463f0cd3c 5469fdf475107b6e6cd6671d25ea268cb8bbace2 3eb4c6849e5a26530c84d6bddf68c9940bd3b831 ee4ba68be3d14afb806532cf8ea8324e6746c33e 663036c1189c91f55dce42ca726462a0d79b1793 a884b8cd8ac8370dc0e51fae86751c2813af2f7d cd6167a395edbd5be0d54cc47564ddb711aaa700 75ea584dcf8ddca28bb669e52edfa2c6dadf7f2d eb89e4d2aa2ac3dc55e68038cce0e498ad8d50cc e6ad38a0a53e6e2cd98f65bb7ef6fb8eb171a755,,Automatically update CollisionGroups,This PR adds features to allow `CollisionGroup` objects to subscribe to `Skeleton` and `BodyNode` objects  so that any changes to the properties of either of those structures will get reflected in the collision results.    The implementation here might be a bit crude  but I tried my best to have it require as few overhead operations as possible  especially when no changes are being made to the Skeletons and BodyNodes.    I still plan on doing some more cleanup and writing more tests (so far I've only written one test  which shows a World getting automatically updated)  so I'm marking this PR as a WIP for now. But I wanted to open it so that feedback is possible while I finish it up.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1194,2018-11-11T02:58:37Z,2018-11-11T03:27:46Z,False,none,6e47d2d40a7472da5f68ac73982760958205df4c,1,2,d0f27d64af04ff56648f3818a31945e9a6060f02 9dbd35205101d62431aa5619826df7434c5a60a0,,Set up CI with Azure Pipelines,
dartsim/dart,1280,2019-04-22T15:07:09Z,2019-04-22T15:20:48Z,True,2019-04-22T15:20:48Z,6c4409ba3438385a3fcfe8b54d5fabbe172bcf4a,3,2,986cefc8f83bfb07f4a46d786fb2db8e49f6bda1 93a8ff21df9dd692a7611dad2e8ace4612e7a051,,Fix missing definition of GridVisual isDisplayed ,  ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,1279,2019-04-22T13:20:16Z,2019-04-22T19:31:52Z,True,2019-04-22T19:31:52Z,27cf92cce0308d4429c86ecf732c071d76e430cb,1,2,0605878dedab589fa6bedf5cefcaa2ba405c3631 ebf9e6f25c886092982d7dedf9b5eb29d76472d8,,Packaging 6 8 0,
dartsim/dart,1281,2019-04-22T21:29:50Z,2019-04-22T21:30:17Z,True,2019-04-22T21:30:17Z,1b7a36de8c6df70d3d0966f31080447ebfa14d40,3,1,f9330cacc909b7dbb442a289f9379d1ad0dbe529,,Bump version to 6 9 0,
dartsim/dart,1283,2019-04-23T00:31:55Z,2019-04-23T11:30:30Z,True,2019-04-23T11:30:30Z,552faf5a4b1d9c9d5c1cfff7440fd40c3bb57d62,3,2,2fa737ddfddb017066a044df72ef363ded383020 b862b5995af5634c09186ef20fb494f936391662,,Fix invalid double quotation marks,
dartsim/dart,1282,2019-04-22T21:35:03Z,2019-04-23T11:30:51Z,True,2019-04-23T11:30:51Z,a1d1c44cc8bc651c29ef5145317c57aa34b50301,1,1,aaa92400cd48e98ce6d3a014f542dd1afeedce53,,Remove outdated code in World hpp,State copy on skeleton clone was resolved by https://github.com/dartsim/dart/pull/691. Thanks to @brianhou for finding this.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  
dartsim/dart,1284,2019-04-23T01:25:50Z,2019-04-23T11:28:13Z,True,2019-04-23T11:28:13Z,7304ea236fb8c82a352358cd2eb7275e95a8a49a,2,1,89b2d288f39dd1878e09f3a39fef0cc759c7e1bc,,Disable octomap support on macOS,For some unknow reasons  Homebrew FCL package + octomap fails in collision checking for octomap. This PR disable octomap support only macOS for now.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1285,2019-04-23T11:58:53Z,2019-04-23T11:59:31Z,True,2019-04-23T11:59:31Z,7e88d4557a34ab827a371048af9ad3f9f3cc21cd,1,1,560e86956641d9d2fb726a4655c3ec7f20baabf6,,Packaging 6 8 1,
dartsim/dart,1286,2019-04-23T14:52:37Z,2019-04-24T11:47:21Z,True,2019-04-24T11:47:20Z,e18046107679ff71a0da75dbbf2982b5650ff490,9,53,b2b5c3c5da8dd0744b3a098d52efee3a9ee7166f ca65f2eda91b488300e9c3f1981ff608961cf63a 93c2f7f73e8866d50d1540e2b71415a3a1a3ad4b 53217303ec9693cea381878633b4a6181036c2a4 c1b12c1796fe6663fc95cc11bc8c39271b705563 ca4718e1d166cd16556f79b869d69a9782b2e40b bae8fbf89f618a36150a4daa847b43731d3e2246 c34ca4ec1938ecec44d1bd310148384fe5f4c749 b1a4f0f7aa08be7117c488b2cd98f903692fc724 aef0cfa9e82c72c9d0e23f0ea0ec2445aaa593a7 09e6c7a7741368808b4f60335177dc0a0115840d a2e5623b9d9c8e3d2c4a77876f0c6f4d0937089f e37df0c29348dd0d39b1ba0d5ecee29c45d12a8d 4ce36b862697c222863a2bb14f7130be9a3a7c15 549b9e9b9de73b1388add14cc02300a43d83c916 c7ee9d392553d32b0dd66a2ab684bba4344373a7 34dcb8281c163787253fb2fbbc3928a8902bdbbd 33450203844395f3c763def7e1c8a26811b3bfb3 de545bc8414a6ba691f96acc0d89936b5aa7d05b b6e1a98569cceac2c2acc89ecf89fcae0da7a4da 634c09e7019c09347edb011903b389187e3e8ad3 acd369179915bce6bbd60e58ed5c1dc4a70731d5 e09c1f86b101599298861efa410b1f142bdc17e4 8984fd8938eb5971c57eb29a3c7f8ba07970cc1c 27b7be13d79d7390de60d14e8e5bc6e76422fca5 cc8ee67de0051764c2f0b4c617ffff183b75cdf2 54d4fba51258bd4e286b2e678eaf8857686ff4db b0fe1b73323d2cd651856d978ef7a851d33a3277 c2a2e3750b8cf6c628893c43964f8b072000e1d5 d7224d8301a4e53d9b0c08f536a0af1beafffe81 9528d27f18b244c0faa7ce4d61567becd72200d9 e545675a9c8224b893249b14b93225a9ccccdbae 4a784fc44a2ff3f7d4a6fa115f8efdc60147d1c2 fa5cce299633181fa7fffe69f7859cf1ef8fd3b1 5973e01fd74e0ca1cc3e88814f7ac8f21e62b851 578327ea25885ffa6a87e5be31ec5e86964ef0a7 ee31111eb58956aed9e579425255dc1f511fbdcf 9e85bf436b9490beae677063972b44791b428ebe d747fbb9f9bdf8d6bb57f207912214a4b3efedcb d2a3006c1bdcba1c7de9f521451d5d647d94a0c4 a7d67a00923311684e1328c21042306513f229a3 a0b8487c47f992f2415cfd9152000e479655f7a2 bcd3a80f077ca173f64d33fd22c5f9367a2122a3 73ef8c2716b37ad8a1fdd5d1468eb88841408ec2 674f27935c5dd4ca5a29a39fcfae6c1d0fbb1bb0 f89f405b36d8ea4ea2a3e48775027c8d801e602f dc3f1962644f679975f8d9cbebb5ec640fe357cf f800513829d32be76f7185e95cc621b8370dff72 bc42d26afc0eaea4a0eae92c8e9b53c19bd6ef15 9aa32d4a654b04d670dc0cd05354f971d5cf947f 4ee97c6080931dc2162410a42a371df07bd3e622 7eebcfcb50eb32fcb66c8ad2baa17fe7aa94c019 9a99cfa884c50d07c9b34f2d070b60d9d4587bbb,,Enable VS2019 CI tests on Azure,Building tests  examples  and tutorials are disabled for now. Thanks to @scpeters for fixing various issues in this matter.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1291,2019-04-24T09:02:26Z,2019-04-24T14:33:52Z,True,2019-04-24T14:33:52Z,f041a9768d7d5c420847d4de059ada63814076ff,2,2,cf63f689802da9c057277c5a7034aea5149ac55c eade86cd1b6534bb81a032007760c762cd621dc8,,BoxedLcpConstraintSolver API compatible with 6 7,Fixes #1288 by adding default values to solver arguments.    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1292,2019-04-24T11:56:45Z,2019-04-24T22:09:47Z,True,2019-04-24T22:09:47Z,92bcd7aa245ada87056b3c422a809e0902b9c759,2,3,3b533b4e56d66432bd2a575745ce5e26017f80d1 6df3ee544ff1cba8012ede345d1ed1b461650082 57af48b3f37a4f2cdae39250c015e5dd2ab8b234,,Fix building with FCL built without Octomap,This PR fixes #1290 by treating `FCL_HAVE_OCTOMAP` as boolean instead of checking whether it's defined.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1296,2019-04-28T22:20:13Z,2019-04-28T22:41:59Z,True,2019-04-28T22:41:59Z,1413506d0e7aeea04888f3c73597bed9dbd4199f,1,1,9b21ab29d3a5f799ccae908af6c191aa12ce99b7,,Disable building on Appveyor until CMake 3 14 installed,It will be enabled once Appveyor installs CMake >= 3.14 on the container.    Related issue: https://github.com/dartsim/dart/issues/1180
dartsim/dart,1294,2019-04-28T05:27:25Z,2019-04-28T22:51:54Z,True,2019-04-28T22:51:54Z,ad965e494da6d0985bd63200da01c71f055acb3a,10,3,decdd0e2a32c24194a43f57f0f9fcd838fa749e0 3657342aa4c14fe5a77286516289e53020695239 418306bb3e87d532088123c739e19b1b0462c294,,Improve voxel grid and point cloud rendering performance,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (GUI example)  
dartsim/dart,1295,2019-04-28T18:18:49Z,2019-04-29T05:01:37Z,True,2019-04-29T05:01:37Z,1fc6d26f5fde62c8176757f8497bb328fbb25903,5,5,0973d52987dc2d271a6a06bdedfd77ab057f394b e61c6c1140e3ff8aa19746199ef8a7d1d8a1f9f3 abefff8b142df984c4c6f0ca84106d04398d90bb 3530f3c8b60afdef1d3102bb9bb202f39b20338e b790fd2d453d80c88da5f3f0887c827feeabe7db,,Use URDF material color when specified,URDF parser always uses material color defined in mesh file even when color is defined in the URDF file. This PR changes the behavior to use the color defined in URDF when specified.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1293,2019-04-28T04:59:07Z,2019-04-29T05:01:54Z,True,2019-04-29T05:01:54Z,4e715be53a6ffeff7b00f62aeffa56f0ae1a8602,29,5,87f6301d35789324f5b80d3478672fda03786f24 f9af028f3cdb20e72b31247d3934afc3be281d48 2b02b2f7b19ab5c1ea6ede1b97fb3ab354a5266d 234006a706047b6792700cad16c401f1982d6c6f 956354f3c46abea350d155cc48869196e8bedf90,,Add heightmap support to OSG renderer,Resolves #1289    ![image](https://user-images.githubusercontent.com/4038467/56858921-6fb8a380-6937-11e9-8870-edb8d88c5153.png)      ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (added `osgHeightmap` example)  
dartsim/dart,1297,2019-04-29T04:57:20Z,2019-04-29T12:21:49Z,True,2019-04-29T12:21:49Z,e74fb3ef95421cdac6ab8d007666913d64092d13,4,3,036d1729483d225ba4d7e7c1e94db7ce79010853 9f12e6906d0885df648e0090523ed507b9c3b83a 0f0fb3dcec38ff4df8eec7567912626a679852bf,,Fix incorrect alpha value update of InteractiveFrame,As reported in #1217  `InteractiveFrame` doesn't display correctly. This is because [the element access operator of `aiColor4D` with index 3 doesn't point to the alpha component but interestingly red component](https://github.com/assimp/assimp/blob/55cdf1d37c4ecd973c2a2e134e213cf32a772635/include/assimp/color4.inl#L94-L107).    This PR workaround by using the member variable instead. It'd be ideal to be fixed in the upstream though.    ![image](https://user-images.githubusercontent.com/4038467/56877145-d3f36a00-6a00-11e9-866f-bec0f1310460.png)    Fixes #1217.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (visually checked)  
dartsim/dart,1300,2019-04-30T14:08:41Z,2019-05-01T04:13:18Z,True,2019-05-01T04:13:18Z,aeaf606a6b6f564b099c09fd3990493dfc8c3cec,4,3,27f812bdeca65ef1741093116f29093c2e7296fc 938afac78085fde1edfbf23e8079133744f774b3 e5170b762fd56decd4d7a22cdce65ffd9eaea677,,Fix VskParser returning incorrect resource retriever,Thanks @sehoonha for reporting this bug.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1301,2019-04-30T16:05:17Z,2019-05-01T08:13:12Z,True,2019-05-01T08:13:12Z,4330d5e18c345bcf9e7081719a09e41332db7312,7,5,bfeae689ad5351551ecb3b06147a2331d273fb8b 5d667764ef8a34082d26ad1398e68ab2dfb82e1c e0664a5e996f8e70523fcf38adff4f9aecbccbf9 e3048c770ded613bdcda9d881266012762857841 9de5697dacbeb2c7acec3c60628e5755c4a27752,,Fix building with pagmo s optional dependencies,Resolves #1299     ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1302,2019-05-01T19:03:54Z,2019-05-02T17:42:46Z,True,2019-05-02T17:42:46Z,ca5ca45b36ec9a5d70c24530a986d168a990bd47,16,3,1ab30dc75e7af130e79b014222546f6007ced49d a9146f516d230f81834228c64e6b61f2f397438c 276aa84f794dc516796266bd4dd25a974e85327b,,Doxygen Warning Fixes,Starting progress on fixing Doxygen warnings #275.    No new code  just typos and documentation fixes.
dartsim/dart,1303,2019-05-03T01:23:47Z,2019-05-03T11:03:51Z,True,2019-05-03T11:03:51Z,873c3eacc3b3fbfadbf0edbcb119850ba131e8ac,16,4,f2350cf4de1f28df99ebcd7db2152ca3d15ee4a0 be1b75b3d638da31a5dc9de6c7a1bd120f5f8d18 705c6ceea9c8498806df730e1a5c4f495eff90d0 f25fa7274aca0762c98e3b9a194b8441b8e2192b,,Fix crashing on exiting OSG ImGui applications,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,1306,2019-05-05T03:22:01Z,2019-05-05T06:24:25Z,True,2019-05-05T06:24:25Z,25cad4c36537b567dc579e2bf678246cf009b2a9,3,2,77d3b1562ec3a961c2b6f6fad40ec7336cb50866 d30333c5855993caa1aa74bbb561986cef264820,,Fix code coverage reporting to Codecov,
dartsim/dart,1305,2019-05-04T11:43:57Z,2019-05-06T01:31:39Z,True,2019-05-06T01:31:39Z,84adcfa09b5e2ec9e65aad10cffdae52695d3a91,277,8,924cde9378466c97cfc2928b784a6924706765f9 3e660f5b9605167ac21c14aa2425d5c24e2ff444 e0ccee61386a51c1ff19394d57047760e70c79a4 dbc43bc09ab4651b1ff87574ee7f61897b940154 e0b2145e9f40358090afe50ebece6f5e2f631ac0 99a13cca5041933d56dab65c7715f45f42b72caf 0d9e8aad89cfd88a6ff8f825ae57e1ec25cc2766 2549b98b18f43687eda85e47419efab2a6fdfcab,,Update examples directory to make dart gui osg more accessible,This PR tweaks the examples directory to make `dart::gui::osg` more accessible. Following changes are also made:  * Change example and tutorial directory names to all lower cases  * Remove `InSourceBuild.cmake` files in favor of `dart_build[_example/_tutorial]_in_source()` macros  * Format examples and tutorials code  * Add `hello_world` example    Resolves #1304    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,1307,2019-05-05T20:57:29Z,2019-05-06T04:31:38Z,True,2019-05-06T04:31:38Z,a12231e92bc57623cde85afc6d5b2ef683f94bc8,72,1,6cefb62ad04fdf92f11950946c8d274857ae6a27,,Switch to pybind11 for dartpy,  `hello_world.py`:  ```python  import dartpy as dart      def main():      world = dart.simulation.World.create()        urdfParser = dart.utils.DartLoader()      kr5 = urdfParser.parseSkeleton("dart://sample/urdf/KR5/KR5 sixx R650.urdf")      ground = urdfParser.parseSkeleton("dart://sample/urdf/KR5/ground.urdf")      world.addSkeleton(kr5)      world.addSkeleton(ground)        node = dart.gui.osg.RealTimeWorldNode(world)        viewer = dart.gui.osg.Viewer()      viewer.addWorldNode(node)      viewer.setUpViewInWindow(0  0  640  480)      viewer.run()      if __name__ == "__main__":      main()    ```    Screenshot:  ![image](https://user-images.githubusercontent.com/4038467/57199909-91b6b500-6f39-11e9-9d51-dcdbd4840bfc.png)      ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1309,2019-05-07T03:17:03Z,2019-05-07T13:32:39Z,True,2019-05-07T13:32:39Z,731267caef5abf8651f663be2adb974b17735392,12,2,f4a296c459d6b151ebf240eb122688b60c28a537 e50848e9f69a58c8fa7e26603d4b6465d810da6a,,Add raycast query to BulletCollisionDetector,  ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1312,2019-05-09T15:49:31Z,2019-05-10T02:46:40Z,True,2019-05-10T02:46:40Z,45d1cae683efaf04211ce28e64b989298e41ea82,9,3,58b2b34bb1c1666ff13db2029da1ed8415bc4e71 d73635fe70e7fd3bfa85fec569b47bf161ddc5cc 2405a705940a135dc72520bf936dc01c3d0bbe60,,Remove warning of ImGuiViewer OSG shadow,The incompatibility issue of ImGuiViewer + OSG shadow found in https://github.com/dartsim/dart/pull/978 was fixed in https://github.com/dartsim/dart/pull/1274. Particularly  these two blocks ([1](https://github.com/dartsim/dart/blob/731267caef5abf8651f663be2adb974b17735392/dart/external/imgui/imgui_impl_opengl2.cpp#L100-L106)  [2](https://github.com/dartsim/dart/blob/731267caef5abf8651f663be2adb974b17735392/dart/external/imgui/imgui_impl_opengl2.cpp#L182-L188)) resolved the issue.    ![image](https://user-images.githubusercontent.com/4038467/57467796-09d1f300-7238-11e9-8525-851de667ce51.png)    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,1311,2019-05-09T14:16:39Z,2019-05-10T14:08:50Z,True,2019-05-10T14:08:50Z,dec75f50e481580386d1b388b74a5f8349a06727,5,3,995316836c066c9d1faa6ccff1d6239e0fa15d0e 69e71c66ae4258d2de925f274b3234ca853826e0 7d6696c7d83fa3dc5a5bd588d43b07a9244730f7,,Fix dereferencing a dangling pointer in WorldNode,~~In `clearUnusedNodes()`  if an unused node doesn't have any holders that have the ownership  it becomes dangling pointers since `WorldNode` holds nodes as raw pointers.~~    In `clearUnusedNodes()`  an unused node is possible to hold a dangling pointer to `ShapeFrame`. This can happen because `ShapeFrameNode` doesn't have the ownership of `ShapeFrame`. This leads to dereferencing a dangling pointer in the logic of checking whether the node is shadowed or not.     This PR changes the behavior of the node deletion logic to remove the access to the internal `ShapeFrame` pointer. Instead  it now unconditionally removes the node from both of shadowed group and unshadowed group. I believe this is safe because OSG will ignore the attempt of removing a non-existing node in the group.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,1313,2019-05-11T02:38:39Z,2019-05-11T13:35:43Z,True,2019-05-11T13:35:43Z,5f32bf1a7d240396966d16f3a380cb108f6e4cd0,2,2,6015448c402fbe95ead3d07a22e204cf479b4a2c f02dd51d8d8434f01456b65b3d77cf7a9adc47f7,,Add safeguard for accessing Assimp color,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1314,2019-05-14T03:20:31Z,2019-05-15T14:55:08Z,True,2019-05-15T14:55:08Z,8faf0f3fe0b1dcc2bfec19c51fb2323adb85148d,6,2,151000e5a2057100715d543ebacebaa56250eb28 9c24bbac3579a8122e9ed1b5423fb94d50b9d902,,Add shape type and color options to PointCloudShape,This PR enables `PointCloudShape` to specify the color and the shape type.    ![image](https://user-images.githubusercontent.com/4038467/57668425-1d74b500-75bc-11e9-9021-3c4179ad3ce7.png)  ![image](https://user-images.githubusercontent.com/4038467/57668436-282f4a00-75bc-11e9-9b9d-d869e36fd950.png)  ![image](https://user-images.githubusercontent.com/4038467/57668445-31b8b200-75bc-11e9-9590-1891d876cbe0.png)      ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,1315,2019-05-14T04:33:47Z,2019-05-16T04:23:57Z,True,2019-05-16T04:23:57Z,dabcef06619f4e286dadd014f26060c24a8f18be,4,6,802b5bfcda7240e8ea6607a655b978395adcf22e 86295274761b36de793e17b0a3ac61891376ed7f 3a6e71c1918e75c730586e63167d62b90a6650f8 eab98f5fc3a9356b6ed82adee69d1b3e4255db8b 472c3a22bcf598b2d3f08fafeef3488d9b4c5f3b a3adf6d25003e1df5b2bbdf9505c29f604440e67,,Enable MeshShape to override alpha value,This PR fixes that it was not able to change alpha value when the color mode of `MeshShape` is `MATERIAL_COLOR`.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,1316,2019-05-16T02:16:58Z,2019-05-16T06:14:44Z,True,2019-05-16T06:14:44Z,be0597552d91dc80d65ee2e6fe496199f516300b,4,4,1962369d7d4195c10cc819c4fdf98d0a2aa994fd 1e6e3338350256b29cc1d7876ed038982dca1283 7b2ba0f7101f20985b033387fe68f2655a83a72f 80654f7a7d9f83697ca3d649b9ee238f6c8751a3,,Fix handling color mode of PointCloudShape in OSG,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,1317,2019-05-16T05:23:59Z,2019-05-16T15:18:54Z,True,2019-05-16T15:18:54Z,968013c70b435ac377892e0c1a92339e5131933f,37,4,12943abc4b78e5b8447fab6a58e2c5976fa4dfdd fb16d32a96d7612fd41f2aa9ffd71fb5f6354e6f 5ec0e8650de833df39f6ee7656f23db654227532 f3cb3f908b5cf058a8e653c0d63723003eb26dcb,,Deprecate custom make_unique in favor of std make_unique,As we migrated to C++14  the custom `make_unique` is deprecated in favor of `std::make_unique`.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1319,2019-05-17T01:44:38Z,2019-05-17T03:44:13Z,True,2019-05-17T03:44:13Z,a253a58f765075fa53d1edcf1bd72f9ecd431a4a,1,1,7c6604a6779a78169527eb65fdc5c93d41ab01a2,,Use upstream of vcpkg,
dartsim/dart,1320,2019-05-17T03:45:32Z,2019-05-17T11:51:48Z,True,2019-05-17T11:51:48Z,8ee5a30c061c9e2bccdbbd25162a5e0e1faf3d6e,1,2,3ed22695d76f4b28fa63f9047ea7f6d94ef5552d a6e16d96355daa2bfcda19b88a333c71b3121b38,,Remove use of deprecated API,
dartsim/dart,1318,2019-05-17T01:36:51Z,2019-05-17T11:52:11Z,True,2019-05-17T11:52:11Z,4286ab780f2df9a6c77d176ab69c2de3c6fe10aa,5,3,07b8383cd5e58264101b0cc30c12d11c23666a5e 6a1f249478915594ee2f37843306188235b3a45e bafc04e0d0d630b96ce71fbeb1a7521950e05d21,, dartpy Add grid visual,![image](https://user-images.githubusercontent.com/4038467/57897410-72f1d180-7809-11e9-8d6c-676f3ed05767.png)      ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,1321,2019-05-17T04:41:03Z,2019-05-17T11:53:24Z,True,2019-05-17T11:53:24Z,c91f97418f33583db8770d43a8b1e28e40f4d12b,10,4,cd724eea609a54571c9156b58fcaacc21c071eb5 4c9e4fb36f723a68cd3bcde67d08d90d9ae645e7 8800d4b4c9818239870c73948d6528b8018e837e 4b0d3b6d9f7b861aaecc60e2bb4c6f740cabd677,, dartpy Add ReferentialSkeleton Linkage and Chain,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1322,2019-05-18T03:46:26Z,2019-05-18T11:18:14Z,True,2019-05-18T11:18:14Z,10ad8e219cda76c5f1e7c6382531973b0949113a,13,3,0999af648bbb17d97017a801af4b5bacd66db272 8cb7f4482a8381ecd4a590ef507e1d98a5523822 2fdcdd1921faa2198569371ddd11e70b70b07462,, dartpy Allow WorldNode classes to overload virtual functions,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1324,2019-05-19T01:56:03Z,2019-05-19T12:11:41Z,True,2019-05-19T12:11:41Z,5e6eb55f50989b871d23c5058919328a3a1c9181,11,6,e226036176d6fdff6b485d3d7e219500c2733bcc 065c2a3004a75d8759c49dafa2bffb3ecba03b17 74cdf9cd84181b03d8945363524232bd788a95ce c68cd6851f817c023440133dbe8de810d375981c de821b8fd579346f99f54aa57b81c2ab202f7991 406977dda8fe01676840984ed40d0ba4408d7cbb,, dartpy Remove static create functions in favor of custom custructors,API changes:  ```python  import dartpy as dart    # Before  world = dart.simulation.World.create()  skel = dart.dynamics.Skeleton.create()  world.addSkeleton(skel)  chain = dart.dynamics.Chain(shoulder  elbow  dart.dynamics.Chain.IncludeUpstreamParentJointTag.IncludeUpstreamParentJoint)    # After  world = dart.simulation.World()  skel = dart.dynamics.Skeleton()  world.addSkeleton(skel)  chain = dart.dynamics.Chain(shoulder  elbow  True)  # or chain = dart.dynamics.Chain(shoulder  elbow  includeUpstreamParentJoint=True)  ```    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1326,2019-05-19T23:29:20Z,2019-05-20T02:22:45Z,True,2019-05-20T02:22:45Z,bc5272380aec49066c0e1ce2ef0d5b5b108c55b0,13,5,51471c0e3f1da23184392955958b91519e20e723 a69eadb322a90c36d2079a3a4baea5164f2c7cc9 64fb502ac9360ce0d15479e32fa1daa16c768d2e fc2a0a310bd1e2e51dc59c75aff2c65df915a1a6 34567ad00a553a8b14014bebf175fff872c6e49c,, dartpy Add SimpleFrame,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1325,2019-05-19T19:22:46Z,2019-05-19T22:48:19Z,True,2019-05-19T22:48:19Z,7cea0821334379168e1c570395c2e38bf89fd9bb,18,10,e226036176d6fdff6b485d3d7e219500c2733bcc 065c2a3004a75d8759c49dafa2bffb3ecba03b17 74cdf9cd84181b03d8945363524232bd788a95ce c68cd6851f817c023440133dbe8de810d375981c de821b8fd579346f99f54aa57b81c2ab202f7991 406977dda8fe01676840984ed40d0ba4408d7cbb e6c71d1c95a28b401bab4237ee00c73fcd79142d 597dcf52c0ab61582faa70378444c44a81755789 ed0506b699d25332b217a935721447afa3024db3 297b1a00d334647bc80af5fcaad180cc8f42cfb3,, dartpy Add optimizer APIs with GradientDescent and nlopt solvers,Example code:  ```python  import math  import dartpy as dart      # Problem reference: http://ab-initio.mit.edu/wiki/index.php/NLopt_Tutorial  class SampleObjFunc(dart.optimizer.Function):      def eval(self  x):          return math.sqrt(x[1])        def evalGradient(self  x  grad):          grad[0] = 0          grad[1] = 0.5 / (math.sqrt(x[1]) + 0.000001)      class SampleConstFunc(dart.optimizer.Function):      def __init__(self  a  b):          super(SampleConstFunc  self).__init__()          self.a = a          self.b = b        def eval(self  x):          a = self.a          b = self.b          return (a*x[0] + b) * (a*x[0] + b) * (a*x[0] + b) - x[1];        def evalGradient(self  x  grad):          a = self.a          b = self.b          grad[0] = 3 * a * (a*x[0] + b) * (a*x[0] + b);          grad[1] = -1.0;      # Problem settings  prob = dart.optimizer.Problem(2)  prob.setLowerBounds([-1e100  0])  prob.setInitialGuess([1.234  5.678])  prob.setObjective(SampleObjFunc())  prob.addIneqConstraint(SampleConstFunc(2  0))  prob.addIneqConstraint(SampleConstFunc(-1  1))    # Solve  solver = dart.optimizer.NloptSolver(prob)  solver.setAlgorithm(dart.optimizer.NloptSolver.Algorithm.LD_MMA)  solver.solve()    # Solutions  min_f = prob.getOptimumValue()  opt_x = prob.getOptimalSolution()  ```    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1323,2019-05-18T17:33:18Z,2019-05-19T01:17:23Z,True,2019-05-19T01:17:23Z,57cbef1a23ffe82791d8c1f8806e9e7f8a891f81,17,4,801661409012c14bf34ccec56ca3e12e5677023f 134cc72289e82b1eb9d80be6ecc2f051db906691 abe550ff7cfb599a849845393b44daadf06ee188 2d9bf640ca75bebb99f7ccb61027ef6e83a6d146,, dartpy Add JacobianNode and operational space controller example,The operational space control now can be written as easy as a few lines of Python code:  ```python  class HelloWorldNode(dart.gui.osg.RealTimeWorldNode):      def __init__(self  world  kr5  target_pose = [0.3  0.3  0.3]):          super(HelloWorldNode  self).__init__(world)          self.kr5 = kr5          self.dofs = self.kr5.getNumDofs()          self.ee = kr5.getBodyNode('palm')          self.target_pose = target_pose          self.Kp = np.eye(3) * 50.0          self.Kd = np.eye(self.dofs) * 5.0        def customPreStep(self):          M = self.kr5.getMassMatrix()            J = self.ee.getLinearJacobian()          Jt = J.transpose();          JJt = np.matmul(J  Jt)          kI = 0.0025 * np.eye(3)          invJ = np.matmul(Jt  np.linalg.inv(JJt + kI))            dJ = self.ee.getLinearJacobianDeriv()          dJt = dJ.transpose()          dJdJt = np.matmul(dJ  dJt)          invdJ = np.matmul(dJt  np.linalg.inv(dJdJt + kI))            e = self.target_pose - self.ee.getTransform().translation()          de = -self.ee.getLinearVelocity()            cg = self.kr5.getCoriolisAndGravityForces()            tmp1 = np.matmul(np.matmul(invJ  self.Kp)  de)          tmp2 = np.matmul(np.matmul(invdJ  self.Kp)  e)            forces1 = np.matmul(M  tmp1 + tmp2)          forces2 = cg          forces3 = np.matmul(np.matmul(np.matmul(self.Kd  invJ)  self.Kp)  e)            forces = forces1 + forces2 + forces3            self.kr5.setForces(forces)  ```    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1327,2019-05-20T02:30:10Z,2019-05-20T04:57:43Z,True,2019-05-20T04:57:43Z,c9186b042c406835984e76ae3b9bdd8579cd0312,15,1,a738e97ca84ff67b467c99d9c58016960875e8c9,, dartpy Add basic inverse kinematics APIs,  ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1328,2019-05-20T14:22:31Z,2019-05-20T16:31:22Z,True,2019-05-20T16:31:22Z,58e32e22bede9e6eb6647c808daaab3d524bb46f,11,3,2c7f3b98c2eecea50821116967c75ad5c58b7c60 88498b42a5ee2acb0226f4991606541f81825cf6 ad602e54628ba2c37dbc55e7e4da07529f86ecfc,, dartpy Add shapes and ShapeFrame aspects,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1330,2019-05-21T01:27:25Z,2019-05-21T06:25:54Z,True,2019-05-21T06:25:54Z,d70547b4d465e452e7ebfb3051a772614fe7f4f7,3,3,6e2f16e27307f6d894bcd12875c916a41fc301ad 7ace71b09f826cce24f0ea23c8ccfe1f2fb23129 0bc37be3a6a6ba83c9215fd9499b6c0d34471228,,Fix incorrect PointCloudShape transparency,  ![image](https://user-images.githubusercontent.com/4038467/58062038-a6946a80-7b2d-11e9-8f98-8d81ff932b7c.png)      ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,1329,2019-05-20T15:09:27Z,2019-05-21T06:26:19Z,True,2019-05-21T06:26:19Z,b6d8fa961dd191a5670fd2dc8073cb1a1cc54c7b,13,10,2c7f3b98c2eecea50821116967c75ad5c58b7c60 88498b42a5ee2acb0226f4991606541f81825cf6 ad602e54628ba2c37dbc55e7e4da07529f86ecfc 5b0f410fbc6eb5fb6de83a124f6c16bf8efa2352 aeb58b722e26c7fb98c209037d865f7482137d10 9e49621b6842f91ca44b446dc109cf35d4f006bd 9e09375a6e9301f20d803553ac9762505a96d8f3 f8dabd6565a741a9e253b0752dd20173946b3b54 cc8f20fe2c334fde3504885290e08e8be403dfc6 208f9ea918ca5a4c0ee04827e5adfb4303f90569,, dartpy Add collision APIs part1 ,  ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1332,2019-05-22T03:28:28Z,2019-05-22T05:29:33Z,True,2019-05-22T05:29:33Z,b024f84f0959fe564d5fd10415f2955caef90ea0,14,13,2c7f3b98c2eecea50821116967c75ad5c58b7c60 88498b42a5ee2acb0226f4991606541f81825cf6 ad602e54628ba2c37dbc55e7e4da07529f86ecfc 5b0f410fbc6eb5fb6de83a124f6c16bf8efa2352 aeb58b722e26c7fb98c209037d865f7482137d10 9e49621b6842f91ca44b446dc109cf35d4f006bd 9e09375a6e9301f20d803553ac9762505a96d8f3 f8dabd6565a741a9e253b0752dd20173946b3b54 cc8f20fe2c334fde3504885290e08e8be403dfc6 208f9ea918ca5a4c0ee04827e5adfb4303f90569 9781bc062e2d68ace38ad21613033ba2a780f921 11819b381183ec41829167444759ed40f12d2125 6031780608649947223b7844e178504dc510af2a,, dartpy Add DegreeOfFreedom and ShapeNode,`py_biped_stand` example is also added:    ![image](https://user-images.githubusercontent.com/4038467/58145423-dfecd900-7c06-11e9-83bf-d885f6bb39c9.png)    ```python  import numpy as np  import dartpy as dart      class MyWorldNode(dart.gui.osg.RealTimeWorldNode):      def __init__(self  world  skel):          super(MyWorldNode  self).__init__(world)          self.skel = skel          self.dofs = self.skel.getNumDofs()          self.left_heel = self.skel.getBodyNode('h_heel_left')          self.left_foot = [              self.skel.getDof('j_heel_left_1').getIndexInSkeleton()               self.skel.getDof('j_toe_left').getIndexInSkeleton()           ]          self.right_foot = [              self.skel.getDof('j_heel_right_1').getIndexInSkeleton()               self.skel.getDof('j_toe_right').getIndexInSkeleton()           ]          self.timestep = world.getTimeStep()          self.Kp = np.eye(self.dofs)          self.Kd = np.eye(self.dofs)            self.torques = np.zeros(self.dofs)            self.q_d = self.skel.getPositions()            # Using SPD results in simple Kp coefficients          for i in range(6):              self.Kp[i  i] = 0.0              self.Kd[i  i] = 0.0            for i in range(6  self.dofs):              self.Kp[i  i] = 400.0              self.Kd[i  i] = 40.0            self.pre_offset = 0        def customPreStep(self):          q = self.skel.getPositions();          dq = self.skel.getVelocities();          constraint_forces = self.skel.getConstraintForces()            # SPD tracking          invM = np.linalg.inv(self.skel.getMassMatrix() + self.Kd * self.timestep)          p = np.matmul(-self.Kp  q + dq * self.timestep - self.q_d)          d = np.matmul(-self.Kd  dq)          ddq = np.matmul(invM  -self.skel.getCoriolisAndGravityForces() + p + d + constraint_forces)            self.torques = p + d + np.matmul(-self.Kd  ddq) * self.timestep            # Ankle strategy for sagital plane          com = self.skel.getCOM()          cop = self.left_heel.getTransform().multiply([0.05  0  0])            offset = com[0] - cop[0]          if offset < 0.1 and offset > 0.0:               k1 = 200               k2 = 100               kd = 10               self.torques[self.left_foot[0]] += -k1 * offset + kd * (self.pre_offset - offset)               self.torques[self.left_foot[1]] += -k2 * offset + kd * (self.pre_offset - offset)               self.torques[self.right_foot[0]] += -k1 * offset + kd * (self.pre_offset - offset)               self.torques[self.right_foot[1]] += -k2 * offset + kd * (self.pre_offset - offset)          elif offset > -0.2 and offset < -0.05:              k1 = 2000              k2 = 100              kd = 100              self.torques[self.left_foot[0]] += -k1 * offset + kd * (self.pre_offset - offset)              self.torques[self.left_foot[1]] += -k2 * offset + kd * (self.pre_offset - offset)              self.torques[self.right_foot[0]] += -k1 * offset + kd * (self.pre_offset - offset)              self.torques[self.right_foot[1]] += -k2 * offset + kd * (self.pre_offset - offset)            # Just to make sure no illegal torque is used          for i in range(6):              self.torques[i] = 0            self.skel.setForces(self.torques * 0.8)      def main():      world = dart.utils.SkelParser.readWorld('dart://sample/skel/fullbody1.skel')      world.setGravity([0  -9.81  0])        biped = world.getSkeleton('fullbody1')      biped.getDof('j_pelvis_rot_y').setPosition(-0.20);      biped.getDof('j_thigh_left_z').setPosition(0.15);      biped.getDof('j_shin_left').setPosition(-0.40);      biped.getDof('j_heel_left_1').setPosition(0.25);      biped.getDof('j_thigh_right_z').setPosition(0.15);      biped.getDof('j_shin_right').setPosition(-0.40);      biped.getDof('j_heel_right_1').setPosition(0.25);      biped.getDof('j_abdomen_2').setPosition(0.00);        node = MyWorldNode(world  biped)        # Create world node and add it to viewer      viewer = dart.gui.osg.Viewer()      viewer.addWorldNode(node)        viewer.setUpViewInWindow(0  0  640  480)      viewer.setCameraHomePosition([2.0  1.0  2.0]                                    [0.00  0.00  0.00]                                    [-0.24  0.94  -0.25])      viewer.run()      if __name__ == "__main__":      main()    ```    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1333,2019-05-22T05:42:29Z,2019-05-22T11:56:43Z,True,2019-05-22T11:56:43Z,60439c1206c25249d8103c67348a2221121b6d85,19,1,ce23a09f91c33082d9d8e47861f27a542a88f125,, dartpy Add constraint APIs,![image](https://user-images.githubusercontent.com/4038467/58149864-8e9a1500-7c19-11e9-9db9-3a8d0303a65e.png)    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1334,2019-05-23T02:05:50Z,2019-05-23T07:25:50Z,True,2019-05-23T07:25:50Z,e22c8c845970ecd5306e463b252324a2c298c4d5,7,2,0875e324e3349f545e5a733b8f5f0c8ca96e356f 1ea5fbb65e8dfdd8b8d4724481cbba2fbafdee57,,Improve voxel rendering by using multiple nodes instead of CompositeShape,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,1335,2019-05-24T04:58:49Z,2019-05-24T12:20:12Z,True,2019-05-24T12:20:12Z,0ed33f028386bf5f2cdfe52858a6042ae8b45c38,30,2,1297addeb3ffe901c15298844a13bcf5bb073a99 98bfd0e635c7ffcb3e21d8120aca708ba715fd91,,dartpy Add BallJoint RevoluteJoint joint properties and chain tutorial incomplete ,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1337,2019-05-25T11:26:54Z,2019-05-25T14:47:07Z,True,2019-05-25T14:47:07Z,325c3d3b511e5ba4470def20e137c02a460f8ea2,21,3,92d8051a60f57ac6cf670e821bab7a9e6b6031d9 82ac3fa7b6b30a723c1cc728ce5d49895aa60c4a 95031d4c70ef65a8fee7e4c0c3281ab2d9b764f9,, dartpy Add all the joint types,  ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1336,2019-05-25T00:24:10Z,2019-05-26T02:42:28Z,True,2019-05-26T02:42:28Z,3b9af2c4f3e3bf5474316cd8155493d7a52255cf,2,2,1d58609d7e8be5de2625a6f9c09108c52d680886 4b9039becd1c732f16ef6ba02250a7b1da2c66bd,,Fix handling of submeshes,Meshes with multiple submeshes are not handled properly when using ODE as the collision detector. This is because the indices for each submesh start from 0 in Assimp  but the input to ODE requires the vertices and indices of all submeshes to be merged.    The issue can manifest itself in various ways  but the simplest example I came up with is to create a plane and a box in one mesh and have a sphere fall onto the plane.    **Before**  ![dart_before_fix](https://user-images.githubusercontent.com/206116/58362094-f12d2400-7e58-11e9-933c-63c0e537136e.gif)    **After**  ![dart_after_fix](https://user-images.githubusercontent.com/206116/58362088-e2df0800-7e58-11e9-97c6-ef040f854912.gif)    I have attached the mesh for reference  [plane_with_box.zip](https://github.com/dartsim/dart/files/3218953/plane_with_box.zip)  
dartsim/dart,1338,2019-05-26T18:25:07Z,2019-05-26T20:53:28Z,True,2019-05-26T20:53:28Z,a730a59e36262297dd8290e0f07e9d4ff1e8d46d,5,2,6d12f7da89695b7b47b5ab629819b46c2cf93cb9 8ccdddc0e8fe1f8761c6da2c524c37de7f516825,,Packaging 6 8 5,
dartsim/dart,1339,2019-05-26T21:24:47Z,2019-05-26T22:44:10Z,True,2019-05-26T22:44:10Z,82e39c133474a9f1ecc20258e0ec2e2cfa77cd99,92,6,7ecb184ca1d791967d68cf0a58da73d479065314 330be1ccb92d84ba651038d30fa2313f9ff23cce d356892b85c52f979f49eea9ac7ca493d3ed47a0 22b529f858eea79f3526db0a40ec4e54ac023431 3d7e9a5e0473fdb820114d503192006281b26b8f d74b7e0630bf48c5826d734199a35599d3e50870,, dartpy Add DART Bullet Ode collision detectors,  ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1340,2019-05-27T00:23:09Z,2019-05-27T02:55:57Z,True,2019-05-27T02:55:56Z,25494d292ff892c20e9143e9fa13343204eb5803,1,1,3f3ea3ef4a18654f82359f2c395858c0ffd098bf,,Update changelog for DART 6 9 0,
dartsim/dart,1341,2019-05-27T18:41:13Z,2019-05-28T05:23:40Z,True,2019-05-28T05:23:40Z,976026bab274ff343522ba3e6390aa7a7f39d6f1,59,8,68d6d0d9b1791ec610508909734876dad8cc3c04 10e55c599dcbfd9d9c7f7283e0ccab2301466e7f 173a22615cd91a18d566620fb0d4e6841cbc0d00 ef76181a0536b1afae35fdaa880fc0401700fd66 8800efc7cde60ae795ca526693dcf31643ae9135 d5096682791a956dbed2238f7cc462b8d50d8df6 a5b9e599702ebe90af061bf1f9bf38946cdc44f9 05975cc614cb2fd071215c7a59778a770a2c1410,,Update build scripts for uploading dartpy to PyPI,[`dartpy` is not available on PyPI](https://pypi.org/project/dartpy/).    Installation on Ubuntu:  ```  # Required dependencies  sudo apt-get install build-essential cmake pkg-config git  sudo apt-get install libeigen3-dev libassimp-dev libccd-dev libfcl-dev libboost-regex-dev libboost-system-dev  sudo apt-get install libtinyxml2-dev liburdfdom-dev  sudo apt-get install libxi-dev libxmu-dev freeglut3-dev libopenscenegraph-dev    # Optional dependencies  sudo apt-get install libbullet-dev libode-dev liboctomap-dev  # Ubuntu 16.04 and 18.04  sudo apt-get install libnlopt-dev  # Ubuntu 18.10 and later  sudo apt-get install libnlopt-cxx-dev    pip3 install dartpy  ```    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`    
dartsim/dart,1342,2019-05-28T07:47:15Z,2019-05-28T13:09:32Z,True,2019-05-28T13:09:32Z,2e0a11fa8963b2c2c179820f26f289507a904f0b,6,1,8e3b661a4eb79a986a10b97971d57b217ca09743,,Update CI settings,
dartsim/dart,1343,2019-05-29T03:14:41Z,2019-05-29T05:08:35Z,True,2019-05-29T05:08:34Z,5f20205e5325ffea1fb216e20847f6e0769b67a1,12,3,7b80c9832de404ff1f5566dbbbfaaa1d32f7b593 4d8d3d541e71af40f76d7c3ce43b72584b879756 77f7ac80293629e03dd5751d36784ee7537c2900,, dartpy Add raycast option and result,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1345,2019-05-30T13:04:29Z,2019-05-30T15:53:32Z,True,2019-05-30T15:53:32Z,ccfc73db4c715d795adde53824d2bbe0dd82301f,4,3,86ed1eb8edac007c1f40155e2009594c78e542bf fac200d1a39bdc762ecfb1fd7a30b89ebbd5d8ae c80ee14203d5932592975b970259b6287441c685,,Add default constructor to RayHit,Necessary to initialize the members. Also  `RayHit.mHasHit` is removed since it's not used.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1346,2019-06-02T02:00:38Z,2019-06-02T15:13:05Z,True,2019-06-02T15:13:05Z,8508d51fb542b881102c69395f4abbf996fc22b0,8,2,ebe4b6d2ffc9615ad6a3fb7c1849d9cd959f576d 083d3f6e4eae092a64b61817568a93b12b1a5ecd,, dartpy Add GUI event handler,![image](https://user-images.githubusercontent.com/4038467/58755772-79d24280-849f-11e9-9204-98ac34d3888d.png)      ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1344,2019-05-29T12:32:19Z,2019-06-02T18:54:02Z,False,none,03977a25b820a7b3eb1c0b2a00bca41cab23a001,1,1,e2b129d19556ebc34163ab63309392860e3a0d88,,removed pydart2 from readme,It seems as tho pydart2 is not being maintained/updated with the current DART releases. As such this is creating problems for pydart2 users like so: https://github.com/sehoonha/pydart2/issues/22  https://github.com/sehoonha/pydart2/issues/17.    I believe it would be best to not refer users to using an unmaintained pydart2 now that DART has its own supported python bindings. (Amazing btw!)
dartsim/dart,1347,2019-06-02T18:55:15Z,2019-06-03T03:38:31Z,True,2019-06-03T03:38:31Z,046f9cb98fe2a60909a80c3aca51e4851a502f5a,1,1,7e9d49aaa6dc32532bc11dc693e614a5c104c63a,,added deprecation notice next to pydart2,Refer to #1344 
dartsim/dart,1350,2019-06-03T06:10:35Z,2019-06-03T15:49:53Z,False,none,6aab58143d0e54e13e20c89275803ad0f11f620a,4,12,c1a10088a114a09fb54c1b224122480c7a8ca750 92558da76381dcd2fed64037e74619fb8879f074 bd20820c4d5ca7cc683408a6ba2b9c8c957fb909 ea8ef373a38b060b1758ec2d894d6568dad74db7 717b9c8b77a42972f5477fb4a8a6116b850d0550 4bd98ef5a6e4ebd33863f0487d43f233a515992d e97d5c53a337ff61d6f02044dcae3292e08e0ab4 4b7941a54fa15ad231c9d98c879a408153b125f1 803d6b4509b661c08fdd1cfe0103ee87f9bd60ff 7c57e62f3bcfc38dee9a6f526727558824acbc95 ee56b1280a2c0e3d89e4ffbb937e7a3fadf778e8 ed6c5b43b90553844947d25d73266f3b62584ec8,,Run memcheck on CI,
dartsim/dart,1348,2019-06-03T05:08:46Z,2019-06-04T01:25:19Z,True,2019-06-04T01:25:19Z,937ed811c75928d0badb09beddaf3c2966e31f2d,10,2,e99e0b81c1caadd85f16ad191f1e09f3b7946e4d a6a7bd68f4cb639e5fdd502dc432e41f51e2c1b6,,dartpy Add shadow technique,**Changes**  * Add shadow technique  * Add OSG biped example  * Reduced default shadow map resolution    ![image](https://user-images.githubusercontent.com/4038467/58777323-ac08a080-8582-11e9-9ba6-c05cc8eac493.png)      ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1351,2019-06-04T01:26:48Z,2019-06-04T23:15:55Z,True,2019-06-04T23:15:55Z,c3a8555c21e0b0042fb5de6e4c4f1a42e7e45fe7,6,3,9f3c3cb9783d444c5709050c8b679182916b31b4 53c34a26b25e0d8e9302fc8e7dba508336c2cfb5 35fa9b8a295592f99181ee119bf92fea7e52d4fd,,Adding vertex mode for point cloud shape,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1349,2019-06-03T05:54:48Z,2019-06-05T02:15:13Z,True,2019-06-05T02:15:13Z,8feaa466cb4707291cbce214ef01201d5ae83312,3,3,96da9e4266a16e01bca1c1cef835d5adc7009d7e 7323cf419a7048905fdaf2146b4e8c6c48540b60 0481018fda2c9e365bdf6d9fb9cc8198c1147411,,Fix memory leaks from dart gui osg Viewer 1331 ,This PR fixes #1331.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1352,2019-06-06T00:44:39Z,2019-06-06T10:30:36Z,True,2019-06-06T10:30:36Z,3820e83de53ec9c24d655a7ba2644f5a1881fc56,2,2,bfd424024cd99f1255657695ea24553215dc9b18 08875b1e3ab8270a0324f17d6e7cb8383f26ef32,,Packaging 6 9 1,
dartsim/dart,1353,2019-06-06T12:16:11Z,2019-06-06T13:45:48Z,False,none,f7b4f6326e8e957a699267917e441e8e197756e7,7,17,c1a10088a114a09fb54c1b224122480c7a8ca750 92558da76381dcd2fed64037e74619fb8879f074 bd20820c4d5ca7cc683408a6ba2b9c8c957fb909 ea8ef373a38b060b1758ec2d894d6568dad74db7 717b9c8b77a42972f5477fb4a8a6116b850d0550 4bd98ef5a6e4ebd33863f0487d43f233a515992d e97d5c53a337ff61d6f02044dcae3292e08e0ab4 4b7941a54fa15ad231c9d98c879a408153b125f1 803d6b4509b661c08fdd1cfe0103ee87f9bd60ff 7c57e62f3bcfc38dee9a6f526727558824acbc95 ee56b1280a2c0e3d89e4ffbb937e7a3fadf778e8 ed6c5b43b90553844947d25d73266f3b62584ec8 73da44356b0b2f39d61cf73586b590fda3104524 585a8cb0737bce0ee4c0379238ac6eff2ff11b4d ff28f148f94d85c17a9138fe9bef96999e12478d 3f8d8164c9726939243f00b6d21d2d05cc264fe2 b64c9c572a6229744282e124d33e604ea7e64083,,Run memcheck in CI tests,
dartsim/dart,1354,2019-06-06T15:13:43Z,2019-06-07T01:59:14Z,True,2019-06-07T01:59:14Z,853e939ef6b0ff0e024e9aeb4e3756917cbf244d,2,1,d5a281775c4d6ad029c1e54dc8ff9156ebe4a00b,,Remove python binding of removed class member,
dartsim/dart,1355,2019-06-06T23:24:59Z,2019-06-07T08:50:16Z,True,2019-06-07T08:50:16Z,db2667cc59a7bf6feef07d5f18a1383db8bb8fe5,2,3,661816a31011e83b9f875fb2eb71e60632dd8384 d77dea2ffc86c5a88fd6d1f5bc7e2f391a2ebba0 c846b4bbad83617253d7d6a5cd116a191e7481ae,,Set data variance of PointCloudShapeNode to DYNAMIC,    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1357,2019-06-10T15:53:36Z,2019-06-10T17:36:59Z,True,2019-06-10T17:36:59Z,75d646fc1e6ec3436fc8297c37c8ec663262707c,1,1,c822edf3db09fcb9c76898359e12fd9d4f63aa57,,Enable CI tests with ipopt nlopt and flann on macOS,
dartsim/dart,1358,2019-06-11T04:44:06Z,2019-06-11T12:46:20Z,True,2019-06-11T12:46:20Z,2ccdd76a150e0fd4aa87d0d2828b7d05844b3292,7,2,955a8a583c4f69e3cac14a38b1688cceeccebd0e c9bd60c62c4129075083e5af2e3e8bc16a85c57d,, dartpy Add findSolution and solveAndApply to InverseKinematics,  ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1359,2019-06-12T05:25:26Z,2019-06-12T11:56:17Z,True,2019-06-12T11:56:17Z,ba2142b43b11caa56f4492576c7c707c756af823,13,5,eb1cfb43294b040873b4c28116eb33b1be407a85 334797552b02c9987dcf0f026554cf72533a76e3 687d34cf868921295ca6356d829bceb54b4a52cb e5acedd7cb442a52f6b8422a79adeb45673930b6 6bcb4a485517947fcb61cb0385dd81e6a844c0b1,, dartpy Add InteractiveFrame and ImGui APIs,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1360,2019-06-13T05:20:05Z,2019-06-14T01:52:42Z,True,2019-06-14T01:52:42Z,51bb06e8508e523d9dd202a1fd60ceef3f90d7a9,513,3,b4cb5933d961e54904b03f301bef87e6a6f0286f 3daf26b4eaeed2f81a9be723f77438f5821065a1 356d39f1b3e29cc732401ef6a6732f4d9be97ccc,,Format entire code,  ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  
dartsim/dart,1363,2019-07-03T06:55:30Z,2019-07-03T14:37:52Z,True,2019-07-03T14:37:52Z,46fab2bc3ef99ff9702bf5ebef2f47360ccceb26,1,1,d9e227dc00f27be58e4b0711c9400018cca12f87,,Extract version number from package xml,This is motivated by [this comment](https://github.com/flexible-collision-library/fcl/pull/409#issuecomment-506639644).
dartsim/dart,1364,2019-07-03T07:01:04Z,2019-07-03T14:39:01Z,True,2019-07-03T14:39:01Z,8ad327a71380cd4286fe6861f123caa2d50d3cd6,1,2,1948ccc776c637d225d6ae86c8855e6783bac1b0 b708606377050d11ece381a149ac0325bf3298c7,,Test against pybind11 2 3 0 on CI,
dartsim/dart,1366,2019-07-07T16:40:30Z,2019-07-08T12:07:15Z,True,2019-07-08T12:07:15Z,420241de2e84f749c85870ba5bf8226ed22a640c,12,3,f99ad3f24faa035cb13bb8134a19652359be4030 2ec18640774b5617803af15b1cafb65812a4ffbd 3c695d89b10e2be87261add6a65bdf8b07c716ac,,Fix compilation warnings with GCC 9 1,* Fix redundant use of `std::move()` in return statement  * Obey the rule of three when the custom copy constructor is defined    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1367,2019-07-07T22:25:03Z,2019-07-08T15:17:11Z,True,2019-07-08T15:17:11Z,54cfb738e83c757a07b9427479330ea255af639f,23,8,b2c682a46f472574f98fc67421fde04b1f37ddb0 f99ad3f24faa035cb13bb8134a19652359be4030 2ec18640774b5617803af15b1cafb65812a4ffbd fa360a5e19f4d55f6d507cf253c7647718f3a11e 3c695d89b10e2be87261add6a65bdf8b07c716ac 4a0ea7d69d63c35418fbbb2f67960df514c26bac be7ada4e607d37522241f298643b9a05d677a943 f5ced0c601cad7d1d7c9e12aec6485bcc943600d,,Replace M_PI with dart math constantsd pi ,This PR depends on #1366     ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1368,2019-07-08T02:04:42Z,2019-07-08T04:22:31Z,True,2019-07-08T04:22:31Z,18aebb6403c7ebc032900c22db77c61b148eb4d5,1,1,776335a58a257c22b2810ef9a70ae4e611cc5ad0,,Fix building test_Raycast w o bullet,
dartsim/dart,1362,2019-07-03T06:43:49Z,2019-07-09T06:41:39Z,True,2019-07-09T06:41:39Z,ae7f426a5b8e033797adb14744eac74eee55c8bf,8,6,cd38b9b4149d01d49d1022d581a86394981de76b 21b2a236b603042c42fc10b2fa1b9dc8ba7bff25 e657b51eeef183ae418c65d343e59375d5c8fdfd 1fc3e4a2fbf4145808f62f8f298e5bc29d7da679 62a632fa03fd283747d823433f7438458166c69c a7dab8c51661c43c7e1c74b81f5a237e68f09bca,,Update Dear ImGui to 1 71,
dartsim/dart,1356,2019-06-08T16:01:33Z,2019-07-14T19:33:15Z,False,none,23538687018fa36733f9ba7725fea5912a71c40f,14,1,47c0c099288bf580d601a15c7342ab154b1418a2,,Add memcheck to build script and CI test,    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1372,2019-07-13T19:52:40Z,2019-07-14T16:19:07Z,True,2019-07-14T16:19:07Z,2466c01b425cf8e5fa361a823aafb2e391609578,3,3,1bcf73207d056d00f18999a124f346bc1354d38f fa54eca798c1f9112b27c28769f11d4d2829f460 c6737306a2d2082044a6e6b34755ad093f96d839,,Reset internal force of point mass before every simulation step,The soft body simulation behaves unexpectedly when the simulation option is `resetCommand = false`. The root cause was that the internal forces of point masses  which are used for soft body simulation  are not reset to zero in every simulation step. In the rigid body case  this issues doesn't happen because the internal forces are set to the control command. Soft body  however  doesn't have control command API so it keeps the previous value  and this leads to the unexpected behavior.    This PR fixes the issue by always setting the internal forces of point mass to zero regardless of the `resetCommand` option.    Resolves #1370     ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1369,2019-07-12T06:04:49Z,2019-07-14T19:31:52Z,True,2019-07-14T19:31:52Z,e80d09e81517c287c020527a3c0d8556cc8e4333,19,8,cf51780ff324ee24b0dd29473361c9db5c182ec3 02d2e05e562a7ab835505bba27fcc1aa8c480830 3d6550192c573e15f2a6661d5d873b8eaa5ca4d3 03940c9196006d2b4b495bc5006a15cb681e0653 d4b42711aa70c79c3ad34674c8ac857507e7f0ce cfd14efddea35f2e3e26b4f381932a2415fa371e 8fa74f215141f4bbd4ccbaef4cd4c87e6523c147 857f9e4a387a8ed55d0fcf172538b8bda5fa6d36,,Fix friction and restitution of individual shapes in a body,`DynamicAspect` was introduced to allow to set different dynamics properties (including friction and restitution properties) per shape in a `BodyNode` for setting the dynamic properties of individual shapes in a `BodyNode`. However  the constraint solver still uses the dynamics properties stored in `BodyNode`.    This PR deprecates the friction and restitution property related APIs in `BodyNode` and change the constraint solver to use the dynamics properties in `DynamicAspect`.    Resolves #200.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1373,2019-07-14T23:44:21Z,2019-07-15T03:33:12Z,True,2019-07-15T03:33:12Z,80fcc9f9d82bce563af554729f84f8926c45a14d,2,2,bf76d539f6310a02734857b56df39cc81290ef3c 4c72cf434f53dc07e2a3406f82fa1256001d82de,,Enable octomap support on macOS,Recent the Homebrew bottles for octomap and fcl seems to work on macOS.    Resolves https://github.com/dartsim/dart/issues/1078    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1377,2019-07-24T15:54:14Z,2019-07-25T14:13:41Z,True,2019-07-25T14:13:41Z,18bfafdccb475f65fa4b63d330d181a243385b9e,2,3,e4d6c01b154812161f19a671fe5b6fc9da146684 7d00ff5bb69260d4ef11640be747e164103d1f67 136a09b06eef436265c6d23b55958a52e7b96026,,Add dartpy access to getTransformFrom Parent Child BodyNode ,For now  those Isometry transformations could only be set  but not read.    1. Add wrapper to add get functionality.  2. Add python unittest to verify  that it is available and returns the same Isometry3.    [Remove this line and describe this pull request. Link to relevant GitHub issues  if any.]    ***    **Before creating a pull request**    - [ ] Document new methods and classes -> Should this be done for python bindings as well? The pybind11 code does not yet seem to be documented at all.  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1378,2019-07-26T00:54:32Z,2019-07-26T04:00:26Z,True,2019-07-26T04:00:26Z,d8f2636cc3d36430b5de65405b0b13c136485f94,1,1,490f7854204aa24e962012c46a00cc84ae086cb0,,Remove specifying suffix and prefix of python module,[They are set by `pybind11_add_module()`](https://github.com/pybind/pybind11/blob/2a5a5ec0a47c245fbf1bb1a8a90b4c3278e01693/tools/pybind11Tools.cmake#L139-L140).    ***    **Before creating a pull request**    - [x] Document new methods and classes (N/A)  - [x] Format new code files using `clang-format` (N/A)    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md` (N/A)  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,1381,2019-07-30T15:19:01Z,2019-07-31T05:38:03Z,True,2019-07-31T05:38:02Z,74317c50aa4adc6c80675e0ca81c85a72a0e0ee5,2,3,e145f27b3b689a3b48a3df06596671930a119950 3fa3ace0634aac4eecc9c9fe7e79770ebc6a4d64 77469a7c03262b7c26ccf4eb6a39dc44243c7fb6,,Fix refresh of LineSegmentShapeNode,`LineSegmentShapeNode` keeps adding new line segments instead of refreshing with new line. See the details in #1380 and [this post](https://dartsim.discourse.group/t/setting-datavariance-dynamic-causes-simulation-to-slow-and-then-stop/95).    Resolves #1380.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,1384,2019-08-09T12:28:18Z,2019-08-09T16:01:03Z,True,2019-08-09T16:01:03Z,285d0b62b37c89dc945e22b1ba4e18c1497c6c16,28,2,9ed2b598a38acd05331f6b60641aadd0f4dab870 9b3b8e950782b54b2be00905d2caa126ba38963f,,Format utils code,`dart-utils` was not included in #1360  which was an oversight.    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1385,2019-08-09T12:44:43Z,2019-08-09T18:37:02Z,True,2019-08-09T18:37:02Z,da36e93a9f00012b3cdccc98e26293ba6bc32c67,2,4,bcde994e5d69312930ec0dd880a3cec56e0d495c bd685eb5867cb562b4f28a43edc90ac71f8f529e 99813393f96825b039fc57fed096472b653bb4c9 10c897c98f4b251a19c222107d863020b2669fd0,,Allow parsing SDF up to version 1 6,This PR depends on #1384.    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1386,2019-08-10T05:51:44Z,2019-08-10T14:15:10Z,True,2019-08-10T14:15:10Z,6b889dba083a81e0d89bc9e283a37d4fa744c9d4,2,2,460966d9395651690bd6f4685c19c4139ae8398d 7aac85d4e551fe02aa4a8c17ce332c9d05adb48e,,Create dynamics aspect for collision shape in sdf parser,  ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1383,2019-08-05T12:12:41Z,2019-08-12T06:55:41Z,True,2019-08-12T06:55:40Z,775a7d3a14159179f9be6a4c4805069feaf7a9dd,3,6,8246bebf75fc8b4fede77aa60c1d4a9cfc692c87 fdb7467e0167855c5560de50bc7bbd8be400e306 ee277bf001a8462585c63aea5cb4886fd45da339 6a0304503c603fbd04c330972672d9ebcc3d59ac 778ba86d4b0faf7be9ff9576e32f78767b82d9d7 e2298cfa5ecf696b0e44b9240e529888d159c569,,Parse sdf s joint dynamics completely, - Parse joint friction  spring_stiffness  spring_reference    Signed-off-by: vinnamkim <vinnam.kim@gmail.com>    Resolve #1382     ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1387,2019-08-12T11:13:38Z,2019-08-12T15:21:14Z,True,2019-08-12T15:21:14Z,15b5af8a3ed46a8c5350f0d01e767ff90b14eb2e,2,1,411c774a4956518001e4b5e5feaff4f3c3bd7f12,,Add pybind wrappers for BodyNode s getChildBodyNode getChildJoint ,- Add pybind11 wrapper for `getChildBodyNode(szd::size_t index) -> BodyNode*`  - Add pybind11 wrapper for `getChildJoint(szd::size_t index) -> Joint*`  - Add unit test  verifying that the new wrappers work      ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1390,2019-08-14T15:35:38Z,2019-08-14T15:35:59Z,True,2019-08-14T15:35:59Z,d0f5179ca7ab60ffd3a04f77049e12c524fe5ef5,1,1,64666a49e3471d8198388d97ba06ab3f63dfb280,,Set Azure timeout to 2 hours for all the jobs,
dartsim/dart,1391,2019-08-14T21:44:59Z,2019-08-15T00:08:51Z,True,2019-08-15T00:08:51Z,a7e1bf3ff81a56030a7207450150a743ba08b550,1,1,6f534cdac09030fe9b594ef181f15f44dc32e219,,Fix typo in error message,
dartsim/dart,1388,2019-08-13T16:51:20Z,2019-08-14T18:10:05Z,True,2019-08-14T18:10:05Z,4e8180f75501c2f8ce344b9a48477dfc85884838,5,9,af9978ca794fb5f31aa968d45330badab6391589 bfcc80ded641f25bbf18d88703b6f623419fa83b c2f5332aa12520a438c3e6025161ad27bc455220 8cea9a866a232849c4f2181e53b250740bd2be49 47c297087992961893b2de11466ad10946d25624 37471c19ce460fc5aae8f121845845a71baad888 b777f9b424ae0e7d9baa9b4798a30a4ed1d29a64 c66103293600f76ed998b44aa97103a19ca80b30 dafbf7ea39b948f7b80df4c4fe424af15db2043b,,Add Inertia python bindings,Adds the following:    - Bindings for class `dart::dynamics::Inertia`  - Access for `dart::dynamics::BodyNode::getInertia`  - unittests for new bindings    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1392,2019-08-15T09:30:01Z,2019-08-15T15:56:48Z,True,2019-08-15T15:56:48Z,7978ebbfec2f18f301bc15431edcbb3c7e9f8ad0,2,1,dab5b7c141d715561b10baed73b886278c5d6ee5,,Fix typos in wrappers of dartpy Skeletons,`getGravityForces()` and `getExternalForces()` are fixed in  `dartpy.dynamics.MetaSkeleton` and `dartpy.dynamics.Skeleton`.  The wrong functions were called.    ***    **Before creating a pull request**    - [ ] ~Document new methods and classes~  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1397,2019-08-16T07:45:06Z,2019-08-16T16:37:35Z,True,2019-08-16T16:37:35Z,1ea5a662bd720f82c53de90e6f3e66a7a4097fd4,3,1,f8ccc6bb5f460e0665c95c787ac2cf532f0fb8a9,,Add wrapper to get all BodyNode s from a Skeleton ,Before  it was only possible to access multiple `BodyNode`s by name  ***    **Before creating a pull request**    - [ ] ~Document new methods and classes~  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1395,2019-08-16T01:24:28Z,2019-08-16T18:05:34Z,True,2019-08-16T18:05:34Z,6b023c2994294d6eb1b95e2242e39ba7e9f02427,2,3,d1f1eb14a1d612a1db8645f9aecd90d55821b9e7 85d5324793e60256074bd093b84501b4355000b8 ff53e8625a2bc48c2793ad8482b2a708f617f135,,FindBullet separate win32 optimized and debug libraries,I see a configuration error on windows when trying to build dart with bullet3 installed from `vcpkg`:    ~~~  CMake Error at cmake/DARTFindBullet.cmake:16 (set_target_properties):    Property INTERFACE_LINK_LIBRARIES may not contain link-type keyword    "optimized".  The INTERFACE_LINK_LIBRARIES property may contain    configuration-sensitive generator-expressions which may be used to specify    per-configuration rules.  ~~~     There are multiple optimized and debug libraries interleaved in the `BULLET_LIBRARIES` parameter  so we can't use the simple approach from https://github.com/dartsim/dart/commit/73ef8c2716b37ad8a1fdd5d1468eb88841408ec2. I've used `cmake_parse_arguments` to separate the `debug` and `optimized` libraries  and I think I set up the generator expressions correctly  but I'm not sure. I've added `bullet3` and `ode` to the list of vcpkg packages to install in azure-pipeline  so CI should confirm if this fix is working.    ***    **Before creating a pull request**    - [X] Document new methods and classes  - [X] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1389,2019-08-14T01:31:43Z,2019-08-16T16:08:10Z,True,2019-08-16T16:08:10Z,b74e97a361502b3434e47654d4a5c6806b841824,1,3,c6a1696c4e4f2770aeb27764699c2b2c64dd95e2 3beea24efe45541178ef5ca35977cd7c6f525ffe c59bdae9671a3a8dcc795f7bd7f30ca66270097b,,Support colcon workspace with bullet and ode,We have been using [colcon](https://colcon.readthedocs.io/en/released/index.html) to build gazebo and ignition packages from source in a workspace  similar to using catkin-tools with a catkin workspace. A cool feature of colcon is that it can automatically identify cmake dependencies based on the cmake project name and build packages in the workspace in the correct order without creating `package.xml` files.    * https://github.com/colcon/colcon-cmake/blob/master/colcon_cmake/package_identification/cmake.py#L132-L135    If a `package.xml` file is present in a package  it will use that instead of the automatic detection  so you can build a mixed workspace of plain cmake and ROS1 or ROS2 packages.    When attempting to use colcon in a workspace with ign-physics  dartsim  bullet  and ODE  it was not properly identifying the dependencies. I believe the following two steps are necessary:    * adding depend tags for `BULLET_PHYSICS` and `ODE` to the dartsim package.xml file      * https://github.com/bulletphysics/bullet3/blob/master/CMakeLists.txt#L7      * https://bitbucket.org/odedevs/ode/src/695ba8c6aa4a725b610514725dcb9ea77683236d/CMakeLists.txt#lines-3  * changing the cmake project name and package.xml package name to `DART` to match the generated `DARTConfig.cmake`    I'm not sure if there are cpack / rosdistro / rosdep implications of changing these things  but I think it helps with colcon. Here's a workspace file for testing:    * https://bitbucket.org/osrf/gazebodistro/raw/%20physics_dart_bullet_ode/ign-physics1.yaml    cc @mxgrey @jslee02 @azeey     ***    **Before creating a pull request**    - [X] Document new methods and classes  - [X] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1371,2019-07-13T09:20:13Z,2019-07-13T18:45:38Z,True,2019-07-13T18:45:38Z,f54ee2dbec71518e76d14c6018ee7996d3bd4128,8,3,29a7f25716f112961b6c3ac9ce45a0c28a10e85a f2764345ab8888a3b1dba20ac43d031db32ca62e a914eed0360b7f2ca6716b66c1f28bdf724e651a,,Constraints allow constraint force mixing 1,The constraint force mixing (cfm) parameter from ODE is currently limited to a maximum value of 1.0. I know that the error reduction parameter (erp) is a non-dimensional parameters and has a max value of 1.0. The cfm parameter  however acts like an inverse damping coefficient  and I don't think it should be limited to 1.0. I've removed this check from each constraint. I'm not sure if this breaks any tests.    * http://ode.org/ode-latest-userguide.html#sec_3_8_2    ***    **Before creating a pull request**    - [X] Document new methods and classes  - [X] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1376,2019-07-22T09:06:16Z,2019-07-26T10:13:21Z,False,none,c186dda29af58b4d923b922061091cb5bee67901,19,3,1c4672385b046c86ca20e48a8c681ce3369c7e7e 0b552a3b33d8c9939d6dd727cd789444852004a7 40ea7aa7ac30817bae77075a3e9c8575acca2493,,Use raw skeleton pointer,I've begun profiling using the `speed_test` example application. The profiler indicated that one hotspot was actually coming from locking the `std::weak_ptr<Skeleton>` every time that `BodyNode::getSkeleton()` was called.    To deal with that  this PR introduces a new `getRawSkeleton()` function to `BodyNode`  `Joint`  and `DegreeOfFreedom` (it can and probably should be added to `Node` as well). When computing things like kinematics and dynamics internally  there's little point in verifying that the parent skeleton of a BodyNode is still valid  because it would imply that something has gone horribly wrong on the user's end anyhow.    These changes resulted in a ~12% overall reduction to the average runtime of the tests cases in [speed_test](https://github.com/dartsim/dart/blob/f54ee2dbec71518e76d14c6018ee7996d3bd4128/examples/speed_test/main.cpp) on my machine.    ## Measurements before this change    ![get_skeleton](https://user-images.githubusercontent.com/1307217/61619838-3677a180-aca2-11e9-886a-5204fe80f48e.png)    ## Measurements after    ![raw_skeleton](https://user-images.githubusercontent.com/1307217/61620012-91a99400-aca2-11e9-8736-3bf38858420e.png)    It looks like the next most significant hotspots to consider addressing are `AdInvT`  `ode::_dDot`  and `ConstrainedGroup::getConstraint(~)`.    I'm not entirely sure if `AdInvT()` can be made significantly more performant than it already is  so maybe we can see if there are any spots that it's being used more than it really needs to be used. Perhaps we if we can find redundant uses of `AdInvT()` we can cache the results somewhere and do lazy evaluation.    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1403,2019-08-17T03:13:56Z,2019-08-17T03:14:12Z,True,2019-08-17T03:14:12Z,1db05b083912e9f900b53c1b61aa865c6085c106,1,1,77c4b5acdeb32f54e812b4ee48da8e64c9e39c3a,,Update changelog,
dartsim/dart,1402,2019-08-17T00:54:38Z,2019-08-17T05:40:29Z,True,2019-08-17T05:40:29Z,7ed5bc336f7766f471dafbde8002a3e80bd35f18,4,3,73538b436f054113d2f813dec3ff3367c112f475 5694d5ba407e2bc3453d395be443254c29d226ae 9ee2fa4653ac4419c9d457d6cabe4e5885beb43b,,Fix compilation warnings from VS2019,[Build log of the warnings](https://dev.azure.com/dartsim/dart/_build/results?buildId=1587&view=logs&jobId=3bcc548c-0df3-5c60-b8ef-b9233b9b23f1&taskId=5d8baed6-9a20-5b12-6996-82143a809734&lineStart=268&lineEnd=269&colStart=1&colEnd=1)    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1404,2019-08-17T03:20:52Z,2019-08-17T06:52:37Z,True,2019-08-17T06:52:37Z,8e6c228ba321ffa895f2e5a6e92e8307d67e0b44,9,1,f6725e08f6c32a0a457552ba2bb017b3c325feec,,Merge 6 9 2 to master 6 10 0 ,  ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1399,2019-08-16T08:45:11Z,2019-08-17T07:38:17Z,True,2019-08-17T07:38:17Z,7b8cb9e070c3eb7b52583e8985b23f6a33df9a72,5,4,477342cfa3f20c752b49f34ef2c343c7439383ae 3cfa2b07850e07f7f749cb4bfc2a2398ef1a0c52 7954f87382d12922df9a356e57dbcef3ca48f1a9 0b13b0e8d3521075396a475e3fc3ea9a44accac7,,Add option for parsing root joint type without world link,The root joint type cannot be specified when the URDF doesn't contain "world" link. In that case  the URDF parser in DART assumes the root joint type as "free" joint  but some user could expect it to be "fixed" joint.    This PR makes that behavior configurable using flags.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1405,2019-08-17T05:49:22Z,2019-08-17T07:41:36Z,True,2019-08-17T07:41:36Z,245aafb05499a38d923be0507db900a9238807c6,4,7,4ad81d44971d4c9a16ba557480abc8e679a8b5b3 f3e3ee512503951ca11c14d8b9748a025509cb34 12692defab4767aeaa538fa942836c21c560d758 73472e1cbb9853781b85bbae2eff54f16f3f7a63 0606d1efb6f1eb6bba69639a708b8c580d7d5a50 d8ec0e3aa09fc01dbba30cbdc95b2f24317fd669 07e9b164de23a6f90fa69df4eacea3897fa61b66,,Fix GLUT dependency check for Windows,This should fix the build issue of #1400.    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1398,2019-08-16T07:54:42Z,2019-08-17T15:21:12Z,True,2019-08-17T15:21:12Z,96f864b75986e54a70b16e06c1036119b8ce8e0c,3,8,eb04543accf490df78c3bb082bf0c809f274e208 07bfe08dc8d1a46d42a911422934918e7ba7750b c20cb0ca2b5e5e99f5e24385174757d7e5f5a332 0a85e647da9b728111cc73b178b8a4cf332a4b59 16493e5bde4d835e3b81445d2c62f138cf29b659 bf465bf0d8e3c816d08ad9469fbfe5626c989dcd 94dfb70f287f490fe2c71829df0275b05b75e089 ae82541838742bbb150d249ed8d0c2b4d9727e4c,,Fix py color support osg viewer,Fixes issue #1393. Allows to set the background color in `dartpy.gui.osg.Viewer` and `dartpy.gui.osg.ImGuiViewer` with a type convertible to an Eigen::Vector4d   e.g.    ```py  # set background to white  viewer = dartpy.gui.osg.Viewer(np.array([1 1 1 1])   # or even by using python lists  that get implicitly converted  viewer2 = dartpy.gui.osg.Viewer([1 1 1 1])  ```  Should we add the new possibility to one of the dartpy examples?    The argument type is now `Eigen::Vector4d`(instead of `Eigen::Vector4f`)  because it allows passing a list as well (as in the creation of `viewer2`above).    ***    **Before creating a pull request**    - [ ] ~document new methods and classes~  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1396,2019-08-16T06:50:43Z,2019-08-17T15:46:11Z,True,2019-08-17T15:46:11Z,660b0f4d84b56cfb723eb5e50e2e465f49930f5a,11,7,55a387f05867fbcead26b44b9d248156b225822f 83e854809c00b4570bbcf567c5a81570e8b43585 162b3adadc855d53b9a08f22685dbaf5202cf982 9b490bc8f85fc124ef641d8af9e752d686b2dd7d b2be80662e58786c5ba1a0deaa10364f26c7bb85 6c675e49d767ba8315128aabb4a7237b569bfa89 d269ff3b492a0790d7f75962546eeaf979432368,,Add IkFast parameter accessors to IkFast class,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1400,2019-08-16T21:37:27Z,2019-08-17T08:33:53Z,True,2019-08-17T08:33:53Z,bd370981b5ee3ea47e609815d58405abd4637dab,2,5,17dab01b7b2b70b530f079b0cd435732eb318ae0 c73b6a9a890518021b52d9e07a334e869721e9b4 ea21cd0a79bb25d73cc385adb623eebff8c92c32 3dc838cb5294292e7ca7d26b1474fb006f35ae01 0c8fa4c7c2f81224290d1ecd00531f70b9a3749c,,Azure install vcpkg dependencies for utils component,I was testing the `utils` component on windows with `vcpkg install tinyxml2`  but I ran into compilation errors in [XmlHelpers.cpp](https://github.com/dartsim/dart/blob/master/dart/utils/XmlHelpers.cpp#L37-L38)  which includes `boost/algorithm/string.hpp` and `boost/lexical_cast.hpp`  since those headers were not installed along with the required boost dependencies `boost-system` and `boost-filesystem`. I've added a check for these headers in `dart/utils/CMakeLists.txt` and added to the `VCPKG_OPTIONAL_PACKAGES` variable so the `utils` component will be compiled in the windows build.    ***    **Before creating a pull request**    - [X] Document new methods and classes  - [X] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1401,2019-08-17T00:00:37Z,2019-08-17T23:54:46Z,True,2019-08-17T23:54:46Z,e480e2f06bd8c0dbd0be6862b7e5b4cb01df6cdf,11,4,e4ca1a8553a7624d3c46312e60cdd0c72f205bf5 bc66475066a845b1342bfebe76f18d2d78dabc10 4567f846638c9a3b11eb637aa99423dc77b1743f 22a2fc7fb9da7f6680608935e519385c8e4655b6,,Use cmake message WARNING and SEND_ERROR when appropriate,When compiling with colcon  messages to stdout (such as `message(STATUS)` calls from cmake) are not displayed on the console  while messages to stderr (such as `message(WARNING)` and `message(SEND_ERROR)`) are displayed  which makes it much easier to spot configuration issues. I noticed that many places there are `message(STATUS)` calls notifying when optional dependencies could not be found  so I changed those to `message(WARNING)`. I also noticed one place in DARTFindassimp.cmake (e4ca1a8) that seemed like it should cause the build to fail  so I changed that from `message(STATUS)` to `message(SEND_ERROR)`.    ***    **Before creating a pull request**    - [X] Document new methods and classes  - [X] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1409,2019-08-28T01:10:21Z,2019-08-28T03:11:39Z,True,2019-08-28T03:11:39Z,49dd195eb643e9415b4e479032b4406f671becf9,1,1,84e417eac6f12fd363425af2bf05815200c7135b,,Fix Travis CI on macOS,
dartsim/dart,1406,2019-08-27T04:11:12Z,2019-08-28T05:18:30Z,True,2019-08-28T05:18:30Z,9ea802b3b0de7c26a95db76c57c647e594795cea,3,6,ccfc641fb6dd15e53b65323519e2511363ab6cb9 add4ce2a6f18b93fd5ce5a17b43e0a872a072848 f136322d6e54332a8618b7314638fdf6ff7d91fa 410510636eeb09de2177d9a5dc0b6b141c37095b 28faca944b52870811ce8c8b019ce1ed0098d863 5f8898f5465c692a09c339e87dfd621b2076bca6,,Revert default root joint name to rootJoint ,The default root joint name was unintentionally changed in #1339  which lead to break several examples that depend on the root joint name. This PR fixes it by reverting the name back.    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1408,2019-08-27T07:29:08Z,2019-08-28T13:53:29Z,True,2019-08-28T13:53:29Z,8cf7f5c9a16e73acc20dd764278aad57cbab4872,4,5,7dc9dec141b387fe73b3ce3d880677ff981fb946 0ec1073adfb02974b7cd4d9c53b284d8231c409a 81ac8a80bb2deb2509c6956754a4c94b2ee1be19 3535e44e2f02742f2e51f59882a79e54bcd24031 5a4b412b20c52ebbd81e1e294c0c92229171ebf6,, dartpy Add wrapper for convertToPositions in class BallJoint,Expose `dartpy.dynamics.BallJoint.convertToPositions()` to dartpy.    ***    **Before creating a pull request**    - [ ] ~Document new methods and classes~  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1407,2019-08-27T04:13:05Z,2019-08-29T04:20:43Z,True,2019-08-29T04:20:42Z,54d413a4114df5e77e6f06e3d85190ac0819541f,14,13,ccfc641fb6dd15e53b65323519e2511363ab6cb9 ee689912028f821737e8c8ea1ad9fc18ecde0df5 add4ce2a6f18b93fd5ce5a17b43e0a872a072848 0c3d965ce031d521de3653eef3e18d29a48e50ed 9bbf37b7ad3cf43e4126bf9ec24809b0ab4503d1 f136322d6e54332a8618b7314638fdf6ff7d91fa 39d9cf2e954639d892831d596127b8c4d89d7928 ccc9c93e78b0a1728ea2867f11a5a9b377df1c72 723c84d70d56588e2d01f532dab5f1767af6f9c8 8e7db49efd98f4e1e942c0dd7590975b60d0fe17 2f3260a5ef16bbb0efece54e53c325574f5f6b86 0860a87e037b69955fd768a21e8017ccfe642d44 079bd3a14cd5b3ecf8684d5fb865fdb07dca8c62,,Add joint velocity limit constraint support,This PR is to resolve #296 and https://dartsim.discourse.group/t/joint-velocities-over-the-velocity-limit/119.    ~~This PR depends on #1406 (merged)~~    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1410,2019-08-29T01:10:17Z,2019-08-29T08:36:22Z,True,2019-08-29T08:36:22Z,e1250989a8c97e69368af6c87ded358e81e98058,3,4,140af7a76052d7ddb30e456f9ec2a2ef1db02068 6b395fd47ce9229dca942d6dc5a8eef1bd2e4a0f 566ce21a4cf14693a6d1d3b517440c9e8184744b 7893b023b69c966d949b78263d4f6991fce11b37,,Enable URDF parser to read visual and collision names,    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1412,2019-09-07T18:11:44Z,2019-09-08T17:58:30Z,True,2019-09-08T17:58:30Z,110269cb74c9355aa4d23ed2acee3e53e037f51a,7,3,c0cf41b3753940454f31f5381e9e7b96a1b5860b 44311c67070f9f7d881e45d0dde8a3363bc7f7b2 5c62ecbcc790190facc74b26225fd62ac3074479,,Remove dependency on Boost regex,The implementation bug of GCC <regex> is no longer issue since DART requires GCC >= 5.3.1.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - ~~Add unit test(s) for this change~~  
dartsim/dart,1413,2019-09-12T07:04:11Z,2019-09-14T18:01:54Z,True,2019-09-14T18:01:54Z,409bbc28f1509e3c31e8dbfbecd882602a6d2cdf,6,18,f093203f1ac8f5f151fa20818e03fcba6f8c8c02 c000eda81b81634694b82b2a3eddda2f87abc527 eda57d5d5a64b5baeae6e4d9a737286f81106059 e0c98ac31be779cd174c075fd018f1c78fb93224 34c8d1d681d02acd828e57b00cddad5cf0424d58 efefe45ce5f24ef7fae3bf421952336131cbcd84 113ce80458a9f0fd962d22fd4cb69a7e9ba22385 15fdb17e42e8c5ddc2c72251e4fd6a04c5e90fed 8332f34151ba094686431bf8fc39a66effe7fe15 1dbd3c2e8c2fa4ddd2a1748431271f5ae6997f52 c677cf360066ff551b8edd2b68f0a7c3a51fc684 3970db8ef241881e595e2669f6fac71b6e4e8196 a5db9020389e1e8add29fafb5b37163476219cef 8884de0f7c6294eff6d4a0e211b62b44dd6aefa9 330dc668598d41dbaa5321bb00909751c7febf23 431360e819100a71062f22fdb6a91132dce5eec4 5b76d68f9946b13a6685ce3cdeb254493b12a161 66b24fc34d4eb11da879d83423f9945d77b431ae,,Setup GitHub Actions new CI ,The experimental setting for minimal CI testing using [GitHub Actions](https://github.com/features/actions). More fine settings will be followed.
dartsim/dart,1414,2019-09-15T16:48:20Z,2019-09-16T03:54:38Z,True,2019-09-16T03:54:38Z,e9c0ae6a7b917da4b402c2ef604a8b6be89fee0e,16,3,4bf25ffb260f38438c3e7ee96d08d09cbbbcdbbd 56f5cb08f7cfbd5a1a1192dfff69b3733cd97d7a 3252cf2538100fd75c542a4f1d9e6fd9977c94d2,,Fix OSG transparent object sorting,Transparent objects sometimes cannot be seen through other transparent objects. This seems to happen because the objects are not properly grouped for z-depth sorting. This PR is to fix it referencing this [post](http://forum.openscenegraph.org/viewtopic.php?t=2804&postdays=0&postorder=asc&start=0).    Current behavior:  ![before](https://user-images.githubusercontent.com/4038467/64924857-d8e16c00-d79d-11e9-8e3c-f79e6c7ccc48.gif)    New behavior with this fix:  ![after](https://user-images.githubusercontent.com/4038467/64924859-dda62000-d79d-11e9-92fc-699f1114d673.gif)    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1415,2019-09-15T20:29:29Z,2019-09-16T03:54:58Z,True,2019-09-16T03:54:58Z,69b4fd44edff9689a0f4d6f8cb2d46092cd7c193,27,4,360e5c0af4fe739d4a76dfec6fbb4019e79b0e28 070f381930a6dc79ff50bf8fd814a98b57e67632 15c64a75b897ab53bcf47df4df435aa5ff9cf312 1db63ff0da8cac7c252f1d828a9712b42fd48234,,Add type property to constraint classes,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1374,2019-07-18T21:30:26Z,2019-09-20T05:47:24Z,False,none,6416dbe9631b1881b0967c3f62a03e43b5087631,1,2,3b716fc466af9da3e6347e5297fe1f4a91e20fa7 c73532c053c819bd0626faf0f9d4e58deb0e0eb7,,Remove overly cautious warning 869 ,Remove overly cautious warning    ***    **Before creating a pull request**    - [x] Document new methods and classes (N/A)  - [x] Format new code files using `clang-format` (N/A)    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side (N/A)  - [x] Summarize this change in `CHANGELOG.md` (N/A)  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,1416,2019-09-16T03:43:11Z,2019-09-20T09:03:55Z,True,2019-09-20T09:03:55Z,f709d00995c4910c4bc602c2bfeb950a72224c64,128,6,e850bc6e9c747c132d2662c2c515eb38d4a4a679 b5bd66444a8d34615f424dc75802999cddbc3604 f92323ccc5a762738c27a3d06f88d840abc2d015 29172cdf863b72e14fefafc7df00dcaa4d100c2a 7a0b6c9076291bf6ac409427327d52a46fdf59a9 485de6de6da861ba4cfb5e73f2d64bf0df50bbb8,,Add MJCF MuJoCo model file format parser,This PR adds experimental MJCF parser that implements a subset of the [MJCF spec](http://www.mujoco.org/book/XMLreference.html).    Some of MJCF files are copied from [OpenAI Gym](https://github.com/openai/gym/tree/c33cfd8b2cc8cac6c346bc2182cd568ef33b8821/gym/envs) for testing and an example. The license file is included.    **Fetch model controlling the end-effector using weld joint constraint**:  ![fetch2](https://user-images.githubusercontent.com/4038467/64933354-c39a2b00-d7f9-11e9-95a0-43a16c990151.gif)    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1418,2019-09-20T05:46:17Z,2019-09-20T09:04:35Z,True,2019-09-20T09:04:35Z,e53b1fb7cbefc93ff6cc184579dd96ce285a571d,3,2,e0a5a0b85f1a26ffc3247e522f4ae516eda93511 b6b1045e135861e5e39b0b6d259f5fceccc81e37,,Allow to set joint rest position out of joint limits,This PR is a rework of #1374.    Resolves #869     ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1417,2019-09-20T05:19:20Z,2019-09-20T09:04:52Z,True,2019-09-20T09:04:52Z,18bff8ef2ff2c7ac688ea42e3e3a79a997e413e8,6,3,ae74d523138aa8a8837e53a2bb280060a20c385a 9ab89bc7e7e10311031867d41f1b78da41f736b9 51a1efe284d6c3a6dde2ac94d826bb3ed603f009,,Remove use of boost filesystem in public APIs,    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1419,2019-09-21T05:53:56Z,2019-09-22T17:55:46Z,True,2019-09-22T17:55:46Z,d69835597723c59abf4b44b4973ea1a0677dbc1c,5,3,7178bf8405b2083fb6f383a4224482931e7bd4ad 2af79aa91d3126b95baf174c9d9a8369396256b8 96e8fd23ca4f762951cac9e29905bdaa29ec3d67,,Split build tests to balance loads on CI services,Build distributions:    |                       | GitHub Actions | Travis CI | Azure Pipelines | Appveyor |  |-----------------------|----------------|-----------|-----------------|----------|  | Maximum Parallel Jobs | 20             | 5         | 10              | 1  | Assigned Jobs         | 10             | 3         | 6               | 1 (only CMake)
dartsim/dart,1421,2019-09-24T09:38:45Z,2019-09-24T10:47:27Z,True,2019-09-24T10:47:27Z,07fd1a15a9dfd16d71903baea7ed515a7106924d,9,2,8568a90f77052a7cb145f0a924a33d8062dc8908 d2f008ca54d6cd9a36ab7e49950ef4cb10e630fa,,Remove requirements of setting OS_NAME and SUDO when running CI scripts,
dartsim/dart,1426,2019-11-17T07:16:33Z,2019-11-17T14:32:05Z,True,2019-11-17T14:32:05Z,9192c38825e5db948cda989d804fdea11071e3e7,1,1,04482ddedd5b50e978e23300d34bf3529d374325,,install_osx try removing sudo from brew commands,The osx CI is failing in #1424 complaining about running as root:    ~~~  Error: Running Homebrew as root is extremely dangerous and no longer supported.  As Homebrew does not drop privileges on installation you would be giving all  build scripts full access to your system.  ~~~    So I've removed the `sudo` calls from the install_osx script and CI is now passing.    ***    **Before creating a pull request**    - [X] Document new methods and classes  - [X] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1424,2019-11-11T07:49:45Z,2019-11-21T07:28:06Z,True,2019-11-21T07:28:06Z,c64a78c785ad3efb7ab0b7818232b65757744329,7,11,1d58bb7a5626955aaeb9d617a811d55006d7ecac 40767368ecbf7c694a21a1b75c51d9f67bc8ef5f b14467849aa3b07fee6c1ab0de7a82a568bc594b 0ade9ca50840ecdb5276915d01f50645f9287517 20aa3a0d839a9baa722adaaaeb8fc8851ba8669c 727ca635938199d71e3aad95cee51e7afe988002 760cf3bc9a048aad3aab7d38d0ac4422d17c2f16 2a0934faabd1eee92be1233227a7d74ca23a103f 05ddc81f194ee7ae666a1f42062199b39f0415e6 2c506f3145c561d1cc80088029dc10cd7842a79c af03aed64493f51a2813a5f3e47a10eb6576a4d1,,Add secondary friction coefficient parameter,Currently the ContactConstraint uses a friction pyramid with 2 directions  and it uses the same friction coefficient in each direction. We have found it useful in gazebo to be able to specify different values in each direction (anisotropic wheel friction for example). As such  I've added `mSecondaryFrictionCoeff` to the ShapeNode DynamicsAspect and updated the ContactConstraint to use this secondary coefficient. @azeey and I have additional code in his fork that adds parameters for specifying the friction directions and slip parameters  which will be addressed in subsequent pull requests.    [edited] To avoid a behavior change  the `mFrictionCoeff` member variable in the ShapeFrame DynamicsAspect is renamed to `mPrimaryFrictionCoeff` along with its auto-generated get/set functions. The existing auto-generated `getFrictionCoeff` and `setFrictionCoeff` are explicitly implemented such that `setFrictionCoeff` sets both friction parameters and `getFrictionCoeff` returns the average (and also returns `double` instead of `const double &`). I've added test coverage for these new functions. We have test cases in gazebo demonstrating anisotropic friction in case you'd like to add one here in the future.    ***    **Before creating a pull request**    - [X] Document new methods and classes  - [X] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [X] Add unit test(s) for this change  
dartsim/dart,1427,2019-11-26T05:22:06Z,2019-12-07T08:02:06Z,True,2019-12-07T08:02:05Z,31a8a0f226717f1b6f6290269b8b3321e9359999,7,12,ed3a48877d8fc23493748e674d183f320fd200cb d1d8073e194476d3f9eec999a8a757c5268d43db 0195b7a202fc241b2920133535389fd86a228755 843b40b59976a95f8bca7541fa7d6719a210f2c3 ed8537337a4f0741b4c6a8ff57b696b87b031ff3 1962ef3d15a83cd48ab6a932da5520012eded894 a932d87bbbf1a15fd83d2a2a8fb78fe9d4cb3bad 5fe40b747b243875b655663dc458edd7ef3f8a1c cddef7a050b9aa9a5835d48a9b7c4f02de0f4934 b3438cb5382e3666d3363a41525c977fb0326152 691fa124e3d401692fe48872821a54f795ecccd2 d2b9e0d0b96e8a6b1666c791c116a284cecb6a07,,Add friction direction unit vector and frame parameters,Currently the ContactConstraint uses a friction pyramid with 2 directions. In #1424  we added an additional parameter to allow the friction coefficient to be specified separately in each direction. This pull request allows the friction direction to be specified with a unit vector `FirstFrictionDirection` and pointer to a frame `FirstFrictionDirectionFrame` in which the unit vector is expressed. If `FirstFrictionDirection` is a vector of zeros (which is its default value)  it is ignored and the default friction directions are used. If the frame pointer is `nullptr` (which is its default value)  the body-fixed frame of that ShapeNode is used.    I've added two bodies to `test_Friction` with friction direction set using the default body-fixed frame and also using the world frame. In these tests  the friction is set to zero along one direction  and the lateral gravity component pushes along a diagonal.    ***    **Before creating a pull request**    - [X] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [X] Add unit test(s) for this change  
dartsim/dart,1432,2020-01-25T01:38:04Z,2020-01-26T07:09:49Z,True,2020-01-26T07:09:49Z,7aa73fe375d5fec3ee7ff7654b12058261eecaad,4,3,b785af10933819e5eeeda773cbd9ddd0c0499813 6fb65be4153a5e2dea4fe55085f67f401f37eadb f85d536bfea28341d4a0f503dfa0028330644714,, dartpy Fix enabling drag and drop of InteractiveFrame,Enabling drag and drop for InteractiveFrame currently doesn't work as expected because of the order of Python bindings for `dart::gui::osg::Viewer::enableDragAndDrop(...)`. [pybind11 calls earlier-defined overloads](https://pybind11.readthedocs.io/en/stable/advanced/functions.html#overload-resolution-order). For `InteractiveFrame` case  `enableDragAndDrop(Entity*)` is called instead of `enableDragAndDrop(InteractiveFrame*)` because `enableDragAndDrop(Entity*)` is defined in prior to the other (and it's compatible since `Entity` is a base of `InteractiveFrame`). To prevent this  this PR defines `enableDragAndDrop(InteractiveFrame*)` (and other functions overloaded for derived classes of `Entity`) before `enableDragAndDrop(Entity*)`.    ![dartpy_drag_and_drop](https://user-images.githubusercontent.com/4038467/73114369-b4756900-3ece-11ea-88ee-87bac58e3aa7.gif)    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1434,2020-02-19T01:16:18Z,2020-02-24T17:05:43Z,True,2020-02-24T17:05:43Z,df79cde4b11acd3de4608a85041fec328e44813e,2,5,1f91d10af44918b0e0232fbb25c47ba61dda9ab2 c5770bbc525452579dbac591fb58ab9971bd693d bb623b29506eea4bdaba561a0e099e176f154238 f8506991a29786e5d12929a2590cc15983d29fb4 0bae368fbaff18102543081b4dfea2d6b1b92bb5,,Add support new if IN_LIST operator in DARTConfig cmake,Fixes #1429     ***    **Before creating a pull request**    - [N/A] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [N/A] Add unit test(s) for this change  
dartsim/dart,1436,2020-02-26T16:24:17Z,2020-02-27T04:29:48Z,True,2020-02-27T04:29:48Z,febad10ed34c8f341083d8625559d63c0d64d208,2,3,94a26e74f78bbfd32a8af64012c8102d8e2af74b 91d7bec1a46898bfa9a6d54c294a706b7683e340 cfe5bb3ecec98d9757ca86a53e8a253a3b2fbc9a,,Add modifier key support to ImGuiHandler,This PR fixes that modifier keys were not correctly hooked for ImGuiHandler.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [N/A] Add unit test(s) for this change  
dartsim/dart,1441,2020-03-19T04:49:30Z,2020-03-19T12:11:24Z,True,2020-03-19T12:11:24Z,0be8c3de481f85e440579ab1c60a8242a0d936c1,2,2,fd9d40df1a6129933b59179f3482cb484cf1e2d9 01a6a6ba8caa4cb0ba97357a84cd30f7c7e725f8,,Update Findfcl cmake to support FCL 0 6,    ***    **Before creating a pull request**    - [N/A] Document new methods and classes  - [N/A] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [N/A] Add unit test(s) for this change  
dartsim/dart,1440,2020-03-18T12:33:55Z,2020-03-19T15:13:02Z,True,2020-03-19T15:13:02Z,a8e4c3c9cfa8b25eb37171135449b22f1636eb24,2,3,9b52aa6cc60262c9a07731583493af6e085962b0 5e392c0450fc0c46ce2bbf7b2045699ffbd58d2f 55f2ded10725d32ebea6da565e2a76e81705f190,,Update to macOS 10 15,
dartsim/dart,1442,2020-03-24T07:30:51Z,2020-03-24T14:33:43Z,True,2020-03-24T14:33:43Z,29c0e51e615b588453733f526cb00a57dc73f77d,6,1,5e696dec97d4244655bf579ee0f4f1fbed2563ea,,Support Ubuntu 20 04,
dartsim/dart,1443,2020-03-24T07:47:28Z,2020-03-25T04:44:05Z,True,2020-03-25T04:44:05Z,70686c240046ae79175ae36178ccb07fccdd1326,6,11,2fedb368f7fd2d20cd6a1cbea378fecd1366aa1a 3368dd428b96aa267c23150982fc938096662a89 5b329e5eab1bd07339f93c68b04b5378b17d6971 ba539ac396b3aebf47c561685103a035c6a1abd6 5e696dec97d4244655bf579ee0f4f1fbed2563ea 92ff2776200c1fd8a55398390dff9e6421bbac12 b436a6b7a99f9cbecfd92fc7e3beee39374c4df0 fd9ea731db55102880faab6194272469569e5007 ed77df52abe9ebc890079fe6e2312751422a0b80 610e81ed25829303c42c343c9f5bf2b8a64075a9 609ab18698e158a12be6d50ef7171d1a9315eb6b,,Add gtest macros for Eigen object comparisons,  ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1444,2020-04-05T05:38:44Z,2020-04-05T14:14:29Z,True,2020-04-05T14:14:29Z,eb0c7dee150e5b4a568869d3ddb0459bd8186f81,1,1,bc2a389914a2398a7d481ba943e4fd7f8dcc2b68,,Update changelog for DART 6 9 switched to C 14,Resolves #1423 
dartsim/dart,1445,2020-04-20T03:49:26Z,2020-04-20T09:18:23Z,True,2020-04-20T09:18:23Z,a42c20560028c02a52121b099f2967853a9d0172,4,3,deb1f67f399ccfadb200c5c3798ba1c9fdec8f7a 11224bac6a2b341068e4afd41e7dc869213736fa 382712b77699cc5a0c159b709e2f1964d165240e,,Increment body node version after it has been moved to a new skeleton,An issue with auto-updating collisions was found in [ign-physics](https://github.com/ignitionrobotics/ign-physics/pull/31). This PR ports the fix into DART itself.    I will be pushing a regression test for this issue shortly.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1446,2020-04-21T01:02:09Z,2020-04-21T07:35:16Z,True,2020-04-21T07:35:16Z,b377b09f1943f71b921d147cab98348ec5d6de7f,1,1,75d0d5259cfb932879f11febc178fb80122509eb,,Add newline at the end of error message,    ***    **Before creating a pull request**    - [x] [N/A] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [x] [N/A] Add unit test(s) for this change  
dartsim/dart,1448,2020-04-22T02:47:13Z,2020-04-22T03:42:06Z,True,2020-04-22T03:42:06Z,0b900a1627b9387bcea9bbf7d1e1e637470307ad,2,1,f8d10788dfa5d4f34a3efa7f56bee1037a22174c,,Install numpy using pip3 instead of Homebrew,This should fix the CI error on macOS.    
dartsim/dart,1447,2020-04-22T00:46:12Z,2020-04-22T14:14:20Z,True,2020-04-22T14:14:19Z,9cfc3f651c47309404b21da9e703e2657e55e56a,5,3,1bba309b2856f8dfa930325ea7a65c0a380f857f eb3eacf6e9c765bef6bfb36b3f6729dfc5b46c35 d3a0c09b167f765da90e6d4c7b4adabc364796a6,,Add ConeShape support for FCLCollisionDetector,The sphere was used for ConeShape when FCLCollisionDetector is used. This PR changed to use mesh for ConeShape as other shapes in FCLCollisionDetector.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1451,2020-04-25T19:53:06Z,2020-04-27T04:17:18Z,True,2020-04-27T04:17:18Z,6bc1e9bb09ffaed8edc6064bf878d0822b77cc31,5,3,5b6a42aa697d88b22fc50dca74c157ef3ac95195 f1e9050247b0edff2c133cddfedb807ee67d51ea cc0fd19fdae17fe94e79970517af76f6506f4fca,,Fix inverse dynamics with damping and stiffness,This PR fixes incorrect implicit joint damping/spring forces in inverse dynamics computation.    Fixes #1450     ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1452,2020-04-26T02:04:33Z,2020-04-27T05:22:12Z,True,2020-04-27T05:22:12Z,c79cf9be2eebf9d152946271f305e60f94bf6133,4,3,4da0885af1902ebb7af97cde0b26f2f4c26e6061 01438fa5625f7667a27f29ed36fdd4b62f4e7de6 f7a3473b15cdb1dc807e19312e7d9a1038145e24,,Wrap IKFast solutions for cyclic joint positions,IKFast sometimes returns solutions that are not wrapped within the range of the joint limits  which is regarded as an invalid solution in DART.    This PR fixes the issue by adding logic that tries to wrap IKFast solutions for rotational joints. The idea is to wrap the solution within joint limits. If there is more than one solution (when the joint limit range is wider than 2pi)  it returns the closest solution to the current joint position to minimize joint motion.    The logic should be applied to any DegreeOfFreedom whose configuration space is SO(2)  but this PR only applies it to RevoluteJoint. This is because the current API doesn't provide for it. `DegreeOfFreedom::isCyclic()` is the closest function to what we want  but it only returns true when the rotational joint has no limits.    This PR partially fix #1449 because it only works for `RevoluteJoint`.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1453,2020-04-27T07:20:39Z,2020-04-27T09:27:18Z,True,2020-04-27T09:27:18Z,9180d98d982ce31b2bdfa318f661291e1f4d7cd5,1,1,fdec9d506cfcda4d906c449728b11aee98bdcf54,,Build without ODE on Windows CI builds,To suppress build error: https://github.com/dartsim/dart/runs/621262581?check_suite_focus=true#step:3:1096
dartsim/dart,1456,2020-05-02T21:10:39Z,2020-05-03T07:42:08Z,True,2020-05-03T07:42:08Z,35bd08e008fda8fb9a7dee4f063d2d13ff0cb583,3,1,63ce390124feabbcd9cf2c1d80ba2e67e2c82f1c,,Add workaround for invalid path in finding urdfdom on Windows,Fixes #1365 
dartsim/dart,1455,2020-04-29T16:19:12Z,2020-05-01T16:27:47Z,True,2020-05-01T16:27:47Z,4f9b738166b796c41266cf8ec424f2a7fa5a0dba,4,6,ad01c12c4e7c7be4c39ef44102b9dd5a32cbbd2b cd3162c5f1e49a92c8c1b412a4f900e81a956b20 d3af3fadaa035f1e80dacfb7c3a6e4cea3bebd45 58a363a6d79a28ab62d212e014e67dc813d92326 1b31882591cec49c1040a5331e2b2d631cbbbb82 3aa76ba29faf02c4d93ecba9db2553fba6d43f56,,Add python bindings for pointcloud and contact retrieval,1. Adds Python bindings for the following:       - Extracting contacts from `CollisionResult` object (Methods `getContact` and `getContacts`)      - `PointCloudShape`  so it is now possible to draw pointclouds in dartpy as well    2. Adds an example `python/examples/contacts_pointcloud/main.py`  which is basically the `hello_world_gui` example (robot and ground are set transparent) with detection of  contacts and visualization as a pointcloud before each GUI refresh.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add ~~unit test(s)~~ Example for this change  
dartsim/dart,1458,2020-05-03T20:01:58Z,2020-05-04T01:38:33Z,True,2020-05-04T01:38:33Z,3f767660e0861d8abc04da4ef9e29816863d9e72,2,6,9ca9452ed5877372fc11154b6f144dfc7ff0eaf1 09942782e732d27e6dde7be9d9f0d3570676ab4f 0a93b315edaaeccde269f5caec1335c2b9390589 ed7c85814e1df9e7c739a77517455028f616cdcc 91bab09e73cd6d908bc113da3fe192b7e7a676b5 9321cf9e7021ecf6599a0955fbac4a786696fb13,,Use pre built vcpkg packages to reduce build time,
dartsim/dart,1459,2020-05-08T10:59:41Z,2020-05-10T04:57:31Z,True,2020-05-10T04:57:31Z,25abb492f47e240dcd285f31183339dfad1b9a96,2,2,8c2f67892f132e4e28491ff00832e26f33ccb9d5 0ecb919ab0919490a8823abb1256e326ac60e8b3,,Fix small bug in BoxedLcpConstraintSolver,This PR fixes a small allocation bug in BoxedLcpConstraintSolver. This was bothering me for several months. I managed to pin-point it. This is very apparent if one uses many mimic joints (and thus creates many constraints).  
dartsim/dart,1461,2020-05-10T02:43:42Z,2020-05-10T07:08:44Z,True,2020-05-10T07:08:44Z,d084d0da8c58b1e761dfc09df3d3e600fe80e2b3,3,4,9521a76543fe9070b10640a486d978c3a427b50a 25133c137725295debae86691df9a0ebad87ef6a 1f4ae04c2b3455df98ef73c4ad43c29b6a42750c d45f050cd8638922914c495ddb31f8d4f6e6d626,,Fix segfault from raycast when no ray hit,The raycast operation causes a segfault when there is no hit. This is because DART attempts to dereference a `nullptr` in converting the ray hit result. This PR fixes it by changing the logic to convert ray hit results only when ray hits are found.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1463,2020-05-10T07:28:21Z,2020-05-10T18:38:12Z,True,2020-05-10T18:38:12Z,19c33a6eb90557fac8104df211a7c891fc103359,5,3,62d718866291c189f20f23b8e43206081bd52e78 7af9993f9d0aa652e12ce7069a430137e19e8777 be995788be4cdce9c6b5a9dcebdd832cb30b0457,,Fix TypeError from dartpy dynamics Node getBodyNodePtr ,`dartpy.dynamics.Node.getBodyNodePtr()` causes TypeError as  ```python  >>> b.getBodyNodePtr()  Traceback (most recent call last):    File "<stdin>"  line 1  in <module>  TypeError: Unable to convert function return value to a Python type! The signature was   (self: dartpy.dynamics.Node) -> dart::dynamics::TemplateBodyNodePtr<dart::dynamics::BodyNode>  ```    This was because `dart::dynamics::TemplateBodyNodePtr<dart::dynamics::BodyNode>` is declared after the `Node` binding. This PR fixes it by declaring the holder type at the top of dynamics submodule.    This PR needs to be merged before #1457.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1464,2020-05-10T08:26:15Z,2020-05-11T05:34:35Z,True,2020-05-11T05:34:35Z,becbeada2a8ba94834e69ceb9f4efaa92381b756,5,2,cd9b2e994337105d424f87692b780f6a6eb4f382 06fd1c4cc366aa02859c9ba9e550fed421662c2b,,Remove gccfilter in favor of the default feature of GCC and Clang,`gccfilter` was used to colorize the compiler output  but the feature is now supported by GCC and Clang by default.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] (N/A) Add unit test(s) for this change  
dartsim/dart,1462,2020-05-10T04:55:39Z,2020-05-12T04:09:03Z,True,2020-05-12T04:09:03Z,b4da0962c46d0c1511a941d2643e787346ad5ecb,9,6,4c04f4866faee0d96502f3eb1641cf35dec10969 c8078011193c6a0647faa9066f66333257f6b048 76b842bf29275bd224575a0bd8bc6dd9f688eae8 21822b800fd171ab4950368ed933ded9da803ce7 2d299b3d8bfd5d6000823f64d8c589d1ed586e63 6871a8c999c4886de4f209efac7435234d45e9aa,,Update signal to remove a connection when disconnected,The current `Signal` design doesn't clean up disconnected connections until the signal calls the registered slots:  https://github.com/dartsim/dart/blob/3f767660e0861d8abc04da4ef9e29816863d9e72/dart/common/detail/Signal.hpp#L120-L141  or `cleanupConnection()` is explicitly called. This could lead to large memory consumption if we make many connections and disconnect them before emitting the signal or don't use `cleanupConnection()` in a right time.    This PR `Signal` to remove the disconnected connections when it's disconnected. This change keeps the backward compatibility because none of the public API isn't being changed.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1457,2020-05-03T10:56:07Z,2020-05-12T17:18:05Z,False,none,42bc24316c5d81f506774b97971f20532482f8eb,3,3,955f330014b6fb78baa4a8806f4d402eea679abc 99c0a1933a9608d83a514862d19ac9c92ecab3ac d043862150bae4d6c62f49a3ae097dd0364a61a0,,Fix py collision obj,Adds Python bindings to get more complete Contact/Collision information  especially to get `BodyNode`s involved in a particular contact via `someContact.collisionObject1.getShapeFrame().getBodyNodePtr()`. The following changes are made    - `CollisionObject`'s methods from C++ were completed  - `CollisionObject` declaration added in `python/dartpy/collision/module.cpp` -> Collision objects can be used now from Python code  - add `getBodyNodePtr()` for `dartpy::dynamics::ShapeNode`. Here  a discussion may be needed. As `getBodyNodePtr()` returns a `dart::dynamics::BodyNodePtr` (not implemented in dartpy yet) the easiest implementation was to return the raw `BodyNode*` using `getBodyNodePtr().get()`. So *reference counting of dart will be wrong here*. Can this become a problem  or is this okay? Should it be implemented via adding `BodyNodePtr` objects as well?    ***    **Before creating a pull request**    - [ ] ~~Document new methods and classes~~  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1465,2020-05-10T18:37:35Z,2020-05-12T06:36:30Z,True,2020-05-12T06:36:30Z,514a92800dd9f0dc4c2587b97e5b04e1de0e3fe3,10,9,be5401112aa9242eb9cf0ca5baee32fcd1f0c954 113e2a3bb37b81be3e053ba249c783c2e36399ba 81b48e36f597e303f1ec545bcd153ae0a98169fd 3504fb650d337f3813c8349f8a4942cfd0156374 9d811f844b783da3ed72bd7d4744defc91bb63d0 7a1216ba86dfd642de9ca8911bb45a7c7f55928e ce4287c9408a759214aab731457b5fb485cd1da6 cbc37b3d5b876df9933b43a9fe75e3d21a9b89a9 94cd5f3f26f0c29c2ca91ff40dbed14745898d0e,,Add Python bindings for CollisionFilter,This PR is created based on #1457.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1471,2020-05-22T02:26:31Z,2020-06-03T16:29:07Z,True,2020-06-03T16:29:07Z,dde7ab40c6012246f636e5cf81f03b1be38acd65,1,1,7baa854c1a1c8965aaec0068ff3f6cdfe0be38e4,,Print warning when planning component is being built,The planning component is deprecated and will be removed in the next release. This PR adds a warning when the deprecated component is being built.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [x] (N/A) Add unit test(s) for this change  
dartsim/dart,1478,2020-07-25T01:03:22Z,2020-07-25T04:38:53Z,True,2020-07-25T04:38:52Z,a15611b61584b62bbc73a87dd15718634ed5e693,1,1,6d03ee61c38e2b07b2dbb85f0ba61d2a76956e3b,,Don t force CMAKE_INSTALL_PREFIX on windows,Fixes #1477.    Without this change  it ignores `CMAKE_INSTALL_PREFIX` values specified by the user and always installs to `C:/Golems`.
dartsim/dart,1479,2020-07-26T06:45:49Z,2020-07-28T20:13:44Z,True,2020-07-28T20:13:44Z,3f61c50c3c334e1964f2237c1909a8e3413dae2f,5,4,96ac8d915d4f581e1d316d4daeab7afcc91a1eb7 a702a5b7222d143153a60ad674fcccc306279bb6 cd39cce33cd29ce02fdf3ad8e3aec6046eb2d557 559b20b0fe23697a5d975446233adf4af1cef960,,Enforce to use OSG 3 7 0 or greater on macOS Catalina,OpenSceneGraph 3.6.5 or less are not compatible with macOS 10.15 (Catalina) or greater (https://github.com/openscenegraph/OpenSceneGraph/issues/926  https://github.com/dartsim/dart/issues/1439). This PR increases the required minimum OSG version for macOS Catalina to 3.7.0 that includes the [fix](https://github.com/openscenegraph/OpenSceneGraph/pull/944).    Resolves #1439    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,1466,2020-05-12T00:21:14Z,2020-07-31T21:30:04Z,True,2020-07-31T21:30:04Z,43a2d1060624fc4c9a132bb20e428ccb05d2bd7c,21,11,0383d09310be509170036507ef55408a548a4201 2e36b8205b5819f1eed49240bb76a69ef29e4104 7d6dfce35f8a821d827b5c78eca994ef224f4ec1 0b5295f289fc89415f40c24b4db9d8fda176a5e3 0f4225b926da0b30483af62bf254633338fb7cf5 93fc9b28334bd24741d2a2a880c7722be08df762 4906ebbcbf57f0719252981b5bdab6d241970ee3 a78bcf922b0cbfd9965b1199b41b5e4505d7a7f2 3947d1dbf8e133d9135afad980b6e47258fe095e 934f90fe752d5aa097b1c49c735f35bcf1a879ea 75bcbd134233501bb5d57b14a1bfe9e27893f6ce,,Add pyramid shape support,This PR adds the pyramid shape that has a square base. Currently  only FCL supports the shape for collision detection. Like other primitive shapes  the pyramid shape is converted to equivalent mesh with minimal numbers of vertices and faces. Both GLUT and OSG renderer can render the pyramid shape.    The moments of inertia for the pyramid shape is not implemented in this PR.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1480,2020-08-04T18:52:00Z,2020-08-05T02:20:50Z,True,2020-08-05T02:20:50Z,e84d236f40238654779a2c1541534906a8ad8b93,2,3,57daf2e83fec09ea6fb80b87f022aa616edbdf2c 0bc5308fcfb7c0f1f8f6287a7886a4b622bfd3f7 91ae0e79b0aea75c5ecb87c696a1e3a6ca44d182,,Added pybind eigen header to dartpy DistanceResult,Adding pybind/eigen.h to allow read/write of eigen types in DistanceResult  
dartsim/dart,1481,2020-08-06T14:57:00Z,2020-08-16T01:00:33Z,True,2020-08-16T01:00:33Z,a0a11f9fa8442e72c7ad948157411974fb1924cc,3,7,75c199fe5446e87a419c25ef4a7726f02ba982ec 00ed0e65d9dd4e33fcbbb45760477d680b7feb87 ead9c01aa92e8795ff0d1c798c32057748175ea4 cb0fdc8247ccbc4675745f820bedd3ec3651aa59 e632d95f4bff57d2bc31c663ee07e0502a4f64ea 2c375652533d2f5dc4345a9bd544d43f802a4abc 748563761156c57e441c1aa8683c99aed13316ab,,Fix update tutorial doc to reflect new APIs,Update tutorial text to use current API for visualization aspects on shape nodes    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1485,2020-08-16T01:10:17Z,2020-08-16T03:59:23Z,True,2020-08-16T03:59:23Z,a3739575d9a51fe3fe5e89bd0d6d5f5df06c14cf,3,2,0860edee87c13c22c27131e7a3caac783fd3b23c b56a3f3a4638745e67a5e90d88081314858d5f63,,Fix mixed intrinsic and extrinsic camera parameters in OpenGL projection matrix,This PR fixes the incorrect projection matrix computation in OpenGL due to the misplaced `gluLookAt()` calls.    Fixes #1484.    ***    **Before creating a pull request**    - [x] (N/A) Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] (N/A) Add unit test(s) for this change   
dartsim/dart,1486,2020-08-22T17:13:21Z,2020-08-22T18:38:54Z,True,2020-08-22T18:38:53Z,7db4c081015778b52a007087ce394d57fb50fcee,3,5,97e6c8ebd368eb9de394b64378e1b69b7c70f992 74184e9a6f9026621fe8aabfed163d0a47472573 cd6ab4601b42b86f9a31387d0909a0348a88d7fd b995a10a9b01ea54b8d0366d9f5f578e71105a6f 325e48b7f231ee303d703d571831ac31f7fab39a,,Add build on Groovy to GitHub Actions,
dartsim/dart,1487,2020-08-26T22:28:14Z,2020-08-27T05:21:51Z,True,2020-08-27T05:21:51Z,607f89d59b63c3495891fa4781171bc80b3cb62c,19,7,3447b7ef5a2d0e6909cff3df315190c905680bbb f2080eab6e0154e7d2ebdbc3189314294acbeac3 feaead19284fba052ada750f9f3d746ae4b88cf7 bd5d80b84ee9d20633abb0705a452cfe4af58b27 18dc379be80ef43dbc2c829caecfd98e29e0bfe7 33960c7bb196ce9067faad2bde3fa64bb2ab5261 e950eb860ce9b638587db3dd8648fb290f1b2536,,Packaging 6 9 3,
dartsim/dart,1488,2020-08-26T22:33:48Z,2020-08-27T15:35:06Z,True,2020-08-27T15:35:06Z,e934d08d504ca24949343be0094c94ce9b2d4436,10,16,a42c20560028c02a52121b099f2967853a9d0172 b377b09f1943f71b921d147cab98348ec5d6de7f 6bc1e9bb09ffaed8edc6064bf878d0822b77cc31 3447b7ef5a2d0e6909cff3df315190c905680bbb 7bbe23b3ab98330beae8708c525c429f2f6e0c1c f2080eab6e0154e7d2ebdbc3189314294acbeac3 eb50ca8cf7b2f687985958bb3dc473ce329280b3 b2526d91d6966b2241c54e4afd4f142f8e7ec9c7 feaead19284fba052ada750f9f3d746ae4b88cf7 bd5d80b84ee9d20633abb0705a452cfe4af58b27 18dc379be80ef43dbc2c829caecfd98e29e0bfe7 33960c7bb196ce9067faad2bde3fa64bb2ab5261 e950eb860ce9b638587db3dd8648fb290f1b2536 47942505ba5a466a2d2e968787cf29f8eb6bdece 607f89d59b63c3495891fa4781171bc80b3cb62c 4ba5b7b0cd2b845b166c16de238859f6e3f24b99,,Merge release 6 9 into master,
dartsim/dart,1489,2020-08-27T03:15:53Z,2020-08-27T17:44:37Z,True,2020-08-27T17:44:37Z,abb8575e5571e79c10bf93d1a604e35e6c82b1a6,4,10,a42c20560028c02a52121b099f2967853a9d0172 b377b09f1943f71b921d147cab98348ec5d6de7f 6bc1e9bb09ffaed8edc6064bf878d0822b77cc31 3447b7ef5a2d0e6909cff3df315190c905680bbb 7bbe23b3ab98330beae8708c525c429f2f6e0c1c f2080eab6e0154e7d2ebdbc3189314294acbeac3 eb50ca8cf7b2f687985958bb3dc473ce329280b3 d7acfa6fe65ab297153779c49fd049f9562da214 3c6de8ba312b02d3de0cd5d1629eb18a22d54e2e 2cc2d9a7d466ed5b3d1b84b2c428921206bc7403,,Increment body node version after it has been removed from a new skeleton,#1445 was introduced to increment body node version after it's being added to a skeleton as a fix for the auto-updating collisions. However  this change doesn't cover the case that a body node is removed from a skeleton instead of transferring to a new skeleton. This PR is a fix for the case by incrementing the version when a body node is being removed from the skeleton.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1490,2020-08-28T00:50:09Z,2020-08-28T03:33:54Z,True,2020-08-28T03:33:54Z,88dfe70a0728bf2a74777875567b52197c0ab527,5,2,1705d0f4e127aa20ac4b696742d41b57e16fa81f 1ec47321b6e16393d50e820b931e8fff9ad532c8,,Add python bindings for adding ShapeFrames to CollisionGroup,This PR adds the following Python bindings for  - `dart::collision::CollisionGroup::addShapeFramesOf(...)`  - `dart::collision::ShapeFrame::removeShapeFramesOf(...)`  - group-group collision checking  - `dart::gui::osg::Viewer::frame()`    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1493,2020-08-28T19:29:47Z,2020-08-30T02:22:54Z,True,2020-08-30T02:22:53Z,c6391f76743a93e44ff4f84cd7dcdfee7fd50305,5,13,2ac4a56bc56a109e6510efda2d157e1410f97c10 cb7107894a5012026cd32a0e5bf0c1d25c13e1c6 c12ae274d1e8571936c6d9412afa12031fa71746 afed2a2a65ba42c4256ac4b5570f009144928762 47bd9692352115b264f21e2458c55c7e8e60d327 a2dec7fda79fe983aac30c839a5af9471a109e88 02c60536e1d9d74137a1afe581e00df02681353e 6042bb61d639941b0d3110ed73a8c8032db8d3ac ea77a3e1f6e6b02e4ea8004d5ca0f8f1ab64ad61 b7383446f4504abe1117bd094203a8b1fe158f60 e3b36e17e7d84e737030a08fed213accae322628 3ebb4ebd12c043c1ef3458b114fe45154b17e941 a23fb38a0c9d5651a75537d543546ec87e2e0714,,Build DART with pagmo2 in CI,  
dartsim/dart,1494,2020-08-30T08:14:09Z,2020-08-30T16:58:23Z,True,2020-08-30T16:58:23Z,0ef9fd3001ea786e5d65e4c6e397dc32cff10522,1,2,5a74f904d796aec5e99eebb9fa710999e2331440 fc749f65ee7cbaaf9c85f76b87666bd5123f3200,,Support IN_LIST operator in DARTConfig cmake 6 9 backport ,In DART 6.9.3  the `IN_LIST` keyword in DARTFindBullet caused a configuration error in gazebo10 (see https://github.com/osrf/gazebo/pull/2835). Setting `CMP0057` to new should prevent similar problems in downstream packages.    ***    **Before creating a pull request**    - [X] Document new methods and classes  - [X] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1495,2020-08-30T17:03:10Z,2020-08-30T22:04:01Z,True,2020-08-30T22:04:01Z,e14ff01fc7362409394061b0f0ad97ce50eb81c7,3,2,f50ffcfdb570774fab304b6910f67be998362a88 4d1f7c86c001a4249b9f473f8d7a3eb314bf9a17,,Packaging 6 9 4,
dartsim/dart,1498,2020-09-16T05:59:32Z,2020-09-16T23:27:51Z,True,2020-09-16T23:27:51Z,ae9f4c720cf95ebffb58ad1c53556ea23d6862b1,12,2,4d9c584a776f92c45b875049f4905c1b8fc18605 6abfda27b42c19c81e21d7e793a5518dc6bb4843,,Update Dear ImGui to 1 79,    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1500,2020-09-16T20:41:01Z,2020-09-17T03:09:26Z,True,2020-09-17T03:09:26Z,54c0097c485fd5ec8613e369edc863ad4e6ba3e8,2,2,c3bd4f2f1ff4478097b84980ce7c7e107e494c1b 89afb44c5b8a3e80f512322369618ae667656dd9,,Enable mouse middle and right buttons for ImGui,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`    
dartsim/dart,1503,2020-09-20T20:17:04Z,2020-09-21T11:04:25Z,True,2020-09-21T11:04:25Z,185fbc2a171e364a00be49c5fe1e5ffb945429c5,36,2,bee198baa64e9abb490143e4079c6aa9c20ca33b 0f390c6266b55df37943d615354e54771dd01d26,,Change dartpy install command to make install dartpy,Previously  DART provided two build modes  which is controlled by `DART_BUILD_DARTPY`: (1) build for the C++ package (as either shared or static libraries) or (2) build for the Python package (i.e. `dartpy`) enforcing to build the C++ libraries as static libraries. When installing the package  (1) installs the C++ headers and shared/static libraries while (b) only the binding module (i.e.  `dartpy.so`). So we had to configure and build the package to build for both the C++ package and Python package.    However  there is a use case that requires to build `dartpy` against the shared libraries or/and build both the C++ and Python libraries without reconfiguring the package. This PR (i) removes the enforcement of static library build for `dartpy` and (ii) allows us to build `dartpy` without reconfiguring. For (ii)  we still need to set `DART_BUILD_DARTPY` as `ON` though.    In short  here is the old behavior:    ```shell  cmake .. -DDART_BUILD_DARTPY=OFF -DBUILD_SHARED_LIBS=ON   # to build as C++ package  make && make install                                      # build the shared libraries (`libdart.so`) and install them with the C++ headers    cmake .. -DDART_BUILD_DARTPY=OFF -DBUILD_SHARED_LIBS=OFF  # to build as C++ package  make && make install                                      # build the shared libraries (`libdart.a`) and install them with the C++ headers    rm -rf *                          # clean up the build directory    cmake .. -DDART_BUILD_DARTPY=ON   # to build as Python package  make dartpy                       # build the static libraries (`libdart.a`) and Python binding (`dartpy.so`)                                    # BUILD_SHARED_LIBS is ignored  make install                      # install only `dartpy.so`  ```    and the following is the new behavior:    ```shell  cmake .. -DDART_BUILD_DARTPY=ON -DBUILD_SHARED_LIBS=ON  make && make install                # build the shared libraries (`libdart.so`) and install them with the C++ headers  make dartpy && make install-dartpy  # build the Python binding (`dartpy.so`) against the shared libraries (the shared library should be installed)    cmake .. -DDART_BUILD_DARTPY=ON -DBUILD_SHARED_LIBS=OFF  make && make install                # build the shared libraries (`libdart.so`) and install them with the C++ headers  make dartpy && make install-dartpy  # build the Python binding (`dartpy.so`) against the static libraries    cmake .. -DDART_BUILD_DARTPY=OFF  make && make install                # build the shared libraries (`libdart.so`) and install them with the C++ headers  make dartpy && make install-dartpy  # no such targets  ```  ***    **Before creating a pull request**    - [x] Document new methods and classes    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1509,2020-10-12T22:19:20Z,2020-10-14T22:55:18Z,True,2020-10-14T22:55:18Z,46abc668dbbcdc58fb63e07f7d8ffb15e834da0a,3,4,87cd61b4e5878ec5b09f218dbf5ee991b54b793a d8e835de791edf3194c4e3375a7011894e83eda6 8bd2804a8eb649f5435339a4d4415edcbffb392f 00459b64c6b1a0ad9098f9c5f378e34d0df2705b,,Fix compatibility with clang cl,clang-cl is the Visual Studio-compatible version of clang (https://clang.llvm.org/docs/MSVCCompatibility.html).  This PR:   * Enables compilation of DART even for VS < 2019 if Clang is used (as clang-cl can be perfectly C++14 compatible even if the used MSVC version is not)  * Avoid to pass the /MP option to clang-cl that does not support it  * Adds a GitHub Actions job to compile DART with clang-cl (using in particular the ClangCl toolset shipped with MSVC)
dartsim/dart,1511,2020-10-16T17:12:36Z,2020-10-16T18:36:21Z,True,2020-10-16T18:36:21Z,9cfa019e3c8b0dd3207ee186fe4176bcf4cf0d62,2,4,d106af5236ac0f170a2812935c1821c805f0b5d1 bb72bda33942864e14825d63da1b44fc7ab1dc5c 2f0e2e26231f8e02e8b9067fce4f604921f9d9fe 144ac810132d005c78cbdc2e60be9254cc4d11f9,,Update appveyor to use vcpkg build cache,
dartsim/dart,1512,2020-10-16T21:07:12Z,2020-10-16T22:34:10Z,True,2020-10-16T22:34:10Z,cf69920c7d972b2149b951b79be2b04af6b91d97,2,6,6c7700f8a0d824c547198b792effd7aa1371b040 6bd76b2bfa568590440ff7cef3d9ce9125ae2ca9 258a84d173c2c72daf1a4e4f3a515576a8ce9529 8fe5d5e25bc3c0cbf63df7f92f8030acc379db37 90569ea2e72bbd8d149dc9775f2b27dbec8eec10 9cb3d34e3104fd24cbcdb84db1bc2ea801cd5c7c,,Mute output from wget and unzip,
dartsim/dart,1510,2020-10-13T07:16:06Z,2020-10-17T00:20:06Z,True,2020-10-17T00:20:06Z,2ed57ec92624080e1661441e1572b867378d0f5f,2,7,6104682e1b507ce909bd357204e20131b14e2ee7 0fcac8fa28f4e06ce2b78c50e6d76cab6b49183c 915ca137fef394eaa806fd7090a8868470eacaa4 76cc303fd6315efe7fb798708ce5b9f7eb89eafe 71ee91183185ebe8b766d8f2667f137767352b82 389998891b257d00747023d31360fafa35a9c7f1 98563d2a2456a254644ecf8707a71ae925d9de6e,,Fix MSVC linking for assimp and fcl,This PR fixes the linking of tests that use fcl and assimp on MSVC  hopefully fixing the problems reported in https://github.com/ignitionrobotics/ign-physics/issues/87#issuecomment-705155086 .    As the existing code is working well in CI for non-MSVC platforms  and as support for CMake imported targets can vary depending on the platform (for example  `assimp::assimp` is basically broken in Ubuntu 20.04 apt packages: https://bugs.launchpad.net/ubuntu/+source/assimp/+bug/1882427 and https://github.com/robotology/idyntree/issues/693)  to minimize the possible regressions I just used the imported targets for fcl and assimp when using MSVC.     
dartsim/dart,1514,2020-10-17T01:12:48Z,2020-10-17T01:14:16Z,True,2020-10-17T01:14:16Z,f91223c94de6ce3829da7486589a4e841a0f5ec0,1,1,3f6ae039634528f17e4b27fb941742d21d3b35df,,Add initial Dockerfile,
dartsim/dart,1515,2020-10-17T03:08:39Z,2020-10-17T03:12:39Z,True,2020-10-17T03:12:39Z,0a99f3c74fb7ce2c96ec4bbc3f8218fdb96c756c,1,1,fff30c810cd17156ee0fa47c58d61d936b76776d,,Fix dartpy build in Dockerfile,
dartsim/dart,1513,2020-10-16T22:58:36Z,2020-10-17T19:30:46Z,True,2020-10-17T19:30:45Z,2ca551a6173c531be4e8a1500f1d6e6667ba4cfd,16,28,ad1d4b1ef1dfd806a1919d1975bb01bc6392147c 6141269cb709c7ff726a5c0b69d171a22a68ae26 019463f60c7d83e73df1c9ee2468624098eeb73e c080ef83b2b9609997fbb5420ec53d40464dc801 ca5a07364ce16f11c3189b4abd9a792fbd25f0c3 92c631d2b674807d3fa026d01f7f96d8141ac75b 7e0bd068bc3f81ddb9f66080ce4eaca595adff67 a00d261b18fee85f27f984afdc6ffa193dc15d21 7a88f145c7f31109d67c6a7d416eb6703028d09e fe8d5bda672ab8a1870568c040b36ac2eb4776bf 4adcdbda71e72f3056d5cb0e4986d48ea4afd20d a70fbc74134dcd65ebb20a32eb3c0b8e8fd01f33 6f181d6b5961fe730beaa9b8ff36daf46b8cb3ee 4da378f71f141a6514d160361d6a9bb61f2b823e 569272af371e700075e9202a99f50fb1145df3f0 26178724ce122679b1f4fdcc3f66ffe01b486e34 a50caef32f0eefa44b1f704b9ab945d699449697 65809479697b83eb16bd2deb0cf848d5516aed75 622e3bb8570d2ae00a09140bab2e7abc1ca90c25 588520ede3bb8422c884a3c0b4fdc0c1a7b6e713 b981fab2e7d9c28de45ec0e04e75c505728f4a94 7edba7ba101f4aa7f5a87dde878be3a8ba3bb13a dc4056ab7cf5509da3d0fd627a49ffaa74b7e8a4 38e46e95450117ea4183248e7bf2009c579623ea 060affc4b58d79b26bd304f7e705460233f1f34b 507af5d35ff5bd7322e0633e0cd75bded52899bb f409d8e1d19ec461687d08bbfc3f5e4be3cdb920 3bb67b5ea08d1a6a4aed3c4c18d2290c6aaf4122,,Build and run tests on Windows CI,
dartsim/dart,1506,2020-09-22T05:18:19Z,2020-10-17T21:11:28Z,True,2020-10-17T21:11:28Z,cb23acaac50f75009b3a19b5283dd835b687b668,8,10,3f2fff4b426b24053ec78c01b52ba62c3fa41e31 185f52d23afbda9da06b9b3aa44631239a6fb965 4a25bb8e382b9410881ce6c164fc2d577c427f16 ba64c3e28dfb9ee0e9ee45c97d9670787cf471b7 c367df3e7ed19363f2eaef476659f9aa1e0d19bf 3b3448cd343ee47da305445c44f7e52aaa42b2a2 f93b53e2d5649a9877b4894ed60818eeee1ea053 418945cc8d664a35a160a314edbb9e6208cf706d 3b8f14a7a235a5062f8a550b3dbf3c995b53d4a0 1aea8fd74a1262c87daf914aadbf1631ac5cd5aa,,Support Ipopt 3 13,Fixes https://github.com/dartsim/dart/issues/1504    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1516,2020-10-17T21:50:41Z,2020-10-17T21:51:03Z,True,2020-10-17T21:51:03Z,cbb6dd250f6260b53bed11e51fee940a124f2a0d,1,1,015c6ed16237b1dd719385f94741406bd83ce1c2,,Packaging 6 9 5,
dartsim/dart,1518,2020-10-17T22:12:28Z,2020-10-17T22:35:54Z,True,2020-10-17T22:35:54Z,836421c36f5b7ad1b54c9a6604906e43cfb2c971,2,2,fb6b3b33a77acf3b4d054b6b215a1f4582856e81 7e3937d494cfdc8dd6e23a5bcc1ea1a963434012,,Cleanup CI settings,- Format YAML configuration files using VSCode  - Build DART and dartpy together
dartsim/dart,1517,2020-10-17T22:08:06Z,2020-10-17T23:09:31Z,True,2020-10-17T23:09:31Z,85a9b4940693561806740163066163e3e63e77ff,6,11,a42c20560028c02a52121b099f2967853a9d0172 b377b09f1943f71b921d147cab98348ec5d6de7f 6bc1e9bb09ffaed8edc6064bf878d0822b77cc31 607f89d59b63c3495891fa4781171bc80b3cb62c 0ef9fd3001ea786e5d65e4c6e397dc32cff10522 e14ff01fc7362409394061b0f0ad97ce50eb81c7 cb23acaac50f75009b3a19b5283dd835b687b668 cbb6dd250f6260b53bed11e51fee940a124f2a0d 0c8952233403d5be4961cf2d2bcf6cd0d5ed6a1a c6d1bbe9f08bfd8700d190b3c4f6ba5ee46dfae6 a2b44d311ed01c0f2a73217bb54091e58c24c6e4,,Merge 6 9 5 to master,
dartsim/dart,1519,2020-10-18T08:11:48Z,2020-10-18T10:18:10Z,True,2020-10-18T10:18:10Z,2ef44daae5c67711a5d63f23b47235878f8f52cd,4,3,22e45e5440c60d33f7107790ee62ee6652be4f4c 2dfef2ce8332944456abf8d319bd25a8564be2ec 44e1770287e1486de5039d3fc700d570c53a993c,,Fix pytest run on CI,
dartsim/dart,1520,2020-10-18T19:24:48Z,2020-10-18T23:52:11Z,True,2020-10-18T23:52:11Z,7476d1663acbfdcf6971f32ac656b5000245d687,11,7,6d82af1779bc51c05fcc0f910bb21d48d501017e 461f09174ff85e654b99502696340527cfe888cf d0a104f75b1532355182af209f10d02592008a28 e87cb186c66be1d19f3aa2db5e986c3afa3e5549 ce6b758c63ec80977517e3fd3b0485c0a3ca9d8b c32280b5ceb7caf2e469ba2117c83deda40a5b2a b977a1ed6b08fda93e313e83266a3ecd917d6c96,,Use prebuilt Ubuntu Docker images for CIs,The Docker images are hosted on https://hub.docker.com/repository/docker/dartsim/dart-dev  and the source code repo is https://github.com/dartsim/dart-ci-docker-containers
dartsim/dart,1521,2020-10-19T03:00:10Z,2020-10-19T16:54:18Z,True,2020-10-19T16:54:18Z,83b0c8c23fd49973130c2f11f13d99587ab204b7,1,2,119bcc1322d436a45d07b61b1d9233201333ec92 941d4e96833840542224e4529b4b8031b8980634,, Fix C tests are not running,
dartsim/dart,1523,2020-10-25T04:29:08Z,2020-10-26T00:53:16Z,True,2020-10-26T00:53:16Z,4b0b4dcedae6c6f0de50a1d3d13015b178aa68bb,2,2,4229aa71107858188555da71a6bd3286c0a32361 9ec88359ff0b2eadd0cd900f293cc74bbba59da4,,Fix brew update error,
dartsim/dart,1528,2020-12-11T05:53:28Z,2020-12-15T04:47:19Z,True,2020-12-15T04:47:19Z,41dac54889d763382b5f94920e6b9991317d65a3,1,1,27fb6d071ee7495e865a86dce622655d75181295,,Windows compile fix Be more specific about which AspectWithState to use,*Note: There are other errors that still need to be resolved before* `/permissive-` *is no longer needed on Windows*.    Using DART (master) in a project on Windows yields the following compile error:    ```  2>C:\...\include\dart/common/AspectWithVersion.hpp(94): error C2974: 'dart::common::detail::AspectWithState': invalid template argument for 'CompositeT'  type expected  2>  C:\...\include\dart/common/detail/AspectWithVersion.hpp(53): note: see declaration of 'dart::common::detail::AspectWithState'  2>  C:\...\include\dart/dynamics/EndEffector.hpp(57): note: see reference to class template instantiation 'dart::common::AspectWithStateAndVersionedProperties<dart::dynamics::Support dart::dynamics::detail::SupportStateData dart::dynamics::detail::SupportPropertiesData dart::dynamics::EndEffector dart::dynamics::detail::SupportUpdate dart::dynamics::detail::SupportUpdate>' being compiled  2>C:\...\include\dart/common/AspectWithVersion.hpp(94): error C2976: 'dart::common::detail::AspectWithState': too few template arguments  2>  C:\...\include\dart/common/detail/AspectWithVersion.hpp(53): note: see declaration of 'dart::common::detail::AspectWithState'     ```    This is the same error mentioned in #753.    `dart\common\AspectWithVersion.hpp` has two symbols for `AspectWithState`. The first is     `dart::common::detail::AspectWithState` defined by include:     `#include "dart\common\detail\AspectWithVersion.hpp"`. This takes 5 template arguments.    The second symbol is defined after the above `#include` as     ```  template <      class DerivedT       typename StateDataT       class CompositeT = Composite       void (*updateState)(DerivedT*) = &detail::NoOp<DerivedT*> >  using AspectWithState = detail::AspectWithState<      CompositeTrackingAspect<CompositeT>       DerivedT       StateDataT       CompositeT       updateState>;  ```  This version takes 4 template arguments.      The problem is with the following line  Windows is using the first definition of `AspectWithState`  which is the incorrect version that requires 5 template arguments:    ```  using AspectStateImpl        = AspectWithState<Derived  StateData  CompositeType  updateState>;  ```    Adding `common::` as I've done in the PR distinguishes `dart::common::AspectWithState` from `dart::common::detail::AspectWithState`.    Note: This has already been worked around on Windows by compiling with `/permissive-`  but I think this would still be a good addition to the codebase to make it more robust. Also there are other compile errors that occur without `/permissive-` that I haven't resolved yet.      ***    **Before creating a pull request**    - [X] Document new methods and classes  - [X] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1527,2020-11-17T14:59:04Z,2020-12-28T23:24:17Z,False,none,ec1324001d40fa729425f4f03262360969a76aaa,1,2,e7bf6aa8e5792fbe34d6a6f76273b8a4314e960a c64c3df691885fcca3b5ec11a2cc80f4033111f3,,fix Use pcfiledir to ensure relocatable CMake install for conan,See also:    https://github.com/osrf/sdformat/pull/419#issuecomment-728948595    cc @stefanbuettner
dartsim/dart,1529,2020-12-28T23:11:50Z,2020-12-29T00:53:45Z,True,2020-12-29T00:53:44Z,3ba45af59eb7d1abbb1e02b4fd53f16008c9e62e,3,3,f717a11bed7d17a191f381082658cf31133d64af 70d26f8d12dae6b9e8bf42cb91e56d712adb6b08 a4037d3e78e54cfa1c5872a9528d455e04c6dc49,,Make dart pc relocatable,This PR is created from https://github.com/dartsim/dart/pull/1527 with some modifications to make it works even for the case that `dart.pc` is installed to an architecture-dependent subfolder (e.g.  `/usr/lib/x86_64-linux-gnu/pkgconfig`.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  
dartsim/dart,1505,2020-09-21T23:26:54Z,2020-12-29T00:54:23Z,True,2020-12-29T00:54:23Z,2ed52c3ebaaa0539e99b3a78b527c945c8f885fd,9,9,f641b42d113cf456a656f1016174b1cd3e3e57c8 cd4b92b708c42d7723a59de50c1bcdf983e87962 7125d1934617aa38d8d3b190ac0fe3067989bf27 5c2e20902eb8a04d365130b076dc0ca43f714fef 3e4ee1f56d15b0c2cf773749e97daa70a75b537f 551ad63dcafb45950ff18070c4c03e029e207200 5d81fbbc3a61d493f7f4f201657aa482ed169d2c d532fc2eb35609779bb1f145d6569834b4a6683b da4f4a991e0fe2951156b09be263c96a26a876e8,,Add force dependent slip,This adds force dependent slip similar to the implementation in [ODE](http://ode.org/wiki/index.php?title=Manual#Contact). This is a follow up to #1424 and adds slip compliance in the primary and secondary friction directions. I had to add code to count up the number of contacts between two objects since this information is not exposed by `dart::collision::CollisionResult`. It might be possible to have the collision detector add this to `dart::collision::CollisionResult`  but I opted for a solution that doesn't need to break ABI.    Relevant forum post: https://dartsim.discourse.group/t/would-dart-be-able-to-support-slip/85    /cc @scpeters   ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1530,2020-12-28T23:45:23Z,2020-12-29T05:12:54Z,True,2020-12-29T05:12:54Z,0ef675341b8b82aace4b2768eda12ed4984573c6,3,1,84662cbaff87fe04ac7357c97a4f39e8bdae7c2e,,Fix installing dependencies on macOS image,
dartsim/dart,1531,2020-12-29T23:24:59Z,2020-12-30T06:42:52Z,True,2020-12-30T06:42:52Z,f0ba239607b3a7e79f57b856789e7329c0e9d771,7,1,2a0d963e9a2691c4265b3b41c60c628b820b5349,,Add multi architecture builds to CI,
dartsim/dart,1540,2021-03-13T05:47:46Z,2021-03-13T22:24:33Z,False,none,99ba771d4022b748ddc4e035305056cb8d403565,1,1,4eb6768ba9e7416c90331fd196a249ea3bad33ac,,Update CMakeLists txt,This fixes a crash on Windows. Confirmed to work in visual studio 2019.  See also https://github.com/dartsim/dart/issues/1431#issuecomment-622967308    [Remove this line and describe this pull request. Link to relevant GitHub issues  if any.]    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1541,2021-03-13T10:37:49Z,2021-03-17T17:40:11Z,True,2021-03-17T17:40:11Z,30ed61d25f4c74cf0eaf8ebd0cb9ebf8196938f6,27,16,4eb6768ba9e7416c90331fd196a249ea3bad33ac 66a2bc6147f46973793896db878bb5c5f5cf7b57 89fb383ce7484628c1bb0c989901183acb626dc3 ff0dd6f8c133006fa9b9b6778f9b0e93472ff388 366ccd20a5391a22644931e04e72b886d8ce3d15 55ac710d4231cde9a33f1ca15a30507210f746e9 f9be177774fab8e4e9bbbcd856de92d75663def0 29d9f4f5b4f13edb28ede7441d07b387f6fc7303 7ec1c4520df49d9e42d9903242b4d9caf78dbf67 2c1aedabb70613126bca39577e958188bd50872b 838c486b743e770c6a63d50ce9809ede3f2d8fab a4e7e1a444c9d28b3efd2acdd8d6b071e88f022b 0eb209aff445a53a4a06bf9f99658d648c90c8d3 ba0da50010afa3a6e8062e3542198bb84d0cac38 eac35f527e0475df11d193acbf74ce6e945c771e 9fece0b333462ed88ab842544468951e8657930c,,Fix Aspect Composite relate tests on Windows MSVC by marking every class with virtual base with appropriate pragmas,Fix https://github.com/dartsim/dart/issues/1522 .    This fix was inspired by https://github.com/dartsim/dart/pull/1540  however just enabling the `/vd2` option can change the ABI of classes with virtual base whose implementation has been compiled without the `/vd2` option. For this reason  using instead the [`vtordisp`](https://docs.microsoft.com/en-us/cpp/preprocessor/vtordisp?view=msvc-160) pragmas explicitly for each class of Dart with a virtual base could be a more robust solution.     For some reason  the fix is not working for the `Clang-Cl`  toolset  at least for the version of Visual Studio used in GitHub Actions. I did not investigated this  but in theory clang-cl has support for the `vtordisp` pragmas (see https://clang.llvm.org/docs/UsersManual.html)  but it is possible that this support has some bugs. However  for the time being I just remove the `Clang-Cl`  toolset from the CI jobs  and I instead enabled the unit tests that previously were failing. 
dartsim/dart,1542,2021-03-19T07:47:15Z,2021-03-20T07:28:40Z,True,2021-03-20T07:28:40Z,32f7aa09f66f03accffe90aaa5c4917d5cb8d2c6,1,1,2bc651e8bf30b043990ac8eda000cd8f46a64ac3,,Add missing virtual base class dectoration for RequiresAspect,Leftover from https://github.com/dartsim/dart/pull/1541 .
dartsim/dart,1544,2021-03-23T10:41:23Z,2021-03-23T11:07:55Z,False,none,d126799567f592cd9240e272c33c6a59a3e358e0,1,1,969b9bd7ba709f1f997a786b26d8bddb7376e824,,FindODE try to check first for ODE cmake config,As of ODE 0.16  ODE install its own CMake config files  that are able to correctly support advanced functionalities such as various build configurations. This PR modifies the `FindODE` CMake module to first try to find the ODE CMake config files  and only fallback to try to use pkg-config if they are not found.  
dartsim/dart,1547,2021-04-02T04:41:23Z,2021-04-02T04:56:42Z,True,2021-04-02T04:56:42Z,08a75807049669b26f5c175eb936e843d34bd945,905,1,caaa31392a8146719d3ca9614194d47733a326b9,,Update copyright holders and years,Update the copyright holders and years based on the recent affiliations changes of the project creators and developers
dartsim/dart,1546,2021-04-02T02:06:54Z,2021-04-02T23:01:22Z,True,2021-04-02T23:01:22Z,9f3638835270cd83ea1d7b56dc6cb5519ed67602,1,1,fd64a9913821f8d577635d6f2645718c48f50def,,Print warning once from BulletCollisionDetector collide distance,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1545,2021-04-02T01:57:53Z,2021-04-02T23:01:30Z,True,2021-04-02T23:01:30Z,7e9fc4767417ea2296c11a19d1baf31cfe69c052,6,3,c295dee361678c0246a364c160832d3dfbe89820 47274b551bd48a31a702b4ddc7c1f8061daef3d9 2d5c281aeccd0d5b80effda623cac559d32b7124,,Add more Python bindings for collision and dynamics,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1548,2021-04-03T09:41:07Z,2021-04-04T05:29:52Z,True,2021-04-04T05:29:52Z,c05da7167d4380b27c2a6173c5bc7474e6977f54,4,1,1c1a98b19fac6717cf4ff81f5c5abbc89bf7d22e,,Allow specifying reference frame for TaskSpaceRegion,This PR is to allow `TaskSpaceRegion` to specify the reference frame for computing errors in the task space. This PR replaces #1430 based on the discussion in the PR.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1430,2019-12-13T02:05:16Z,2021-04-04T05:30:17Z,False,none,f2810f9d3c87f9ec9a343d923597bdd8904ff08e,1,1,b80c885ebd2511eb37b0cf5cc3788817e371170c,,Compute the IK error in the target reference frame rather than its parent,This allows for relaxing different axis constraints in the target reference frame using existing error weights  e.g. ignoring rotation about the z vector of the target frame.    ***    **Before creating a pull request**    - [ ] Document new methods and classes (modification to existing method)  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1497,2020-09-03T15:34:25Z,2021-04-04T05:38:14Z,True,2021-04-04T05:38:14Z,a7584a11d43faacb7b06a4b89b1b870ec615114f,1,1,9fde9124927789ca2399f99c1be9b101ed1e8550,,CMake Add DART_SKIP_ dep advanced options,Add DART_SKIP_<dep> option to permit to specify that a dependency should not used even if it is found in the system.    This is useful in package managers such as vcpkg to ensure that  for a given set of enabled features  the same version of the library is build  independently from which dependency are actually installed in the system. A mpre extended rationale is provided in https://github.com/ignitionrobotics/ign-cmake/issues/63 .    
dartsim/dart,1550,2021-04-06T18:17:44Z,2021-04-07T17:07:47Z,True,2021-04-07T17:07:47Z,153248d67f55cf0cd13326cccc52004b6c802315,1,1,a1b0501fbd63561d13fad7cab55ea4d10e3e52c9,,Add missing Python bindings for TSR,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1551,2021-04-09T19:12:48Z,2021-04-09T19:54:49Z,True,2021-04-09T19:54:49Z,095605ef80f18b9d0fcf31da608875b65988ac14,3,3,9c764cd1752798272b6b1ae99d6b7a3a61b1f1ce 1c5564aa2dccdd27d5540796617d64eaac56c8b1 6b2e27745e2a764e074a443cf125d7bc87e2480b,,Packaging 6 10 0,
dartsim/dart,1552,2021-04-09T23:13:07Z,2021-04-10T01:21:15Z,True,2021-04-10T01:21:15Z,82028e3e7c78ca042edf3800fd8c47f48b94433a,5,2,5627acfdbaeb0c748a8f5dccf5b7b0d8cd3904cb 22d4ea5e011edd29e80a04ec23ceeb45372ebafb,,Replace OpenGL dependency CMake variables with targets,
dartsim/dart,1553,2021-04-10T01:49:06Z,2021-04-10T01:51:17Z,True,2021-04-10T01:51:17Z,bff098b0e180bab6fb060d60bf3fcab61ea2c1b7,8,1,4e0ed10b05873e2e5082d095c3eae997629d85d5,,Support building as sub project,  
dartsim/dart,1558,2021-04-13T23:22:44Z,2021-04-13T23:44:46Z,True,2021-04-13T23:44:46Z,47c7be77915f84b958bb274bbc53fe0507114ef1,4,3,cf6e19a0167c54e0d00a98ec2ea437675420f86a cab343c4a0b579018b84f81061bafafc4b52931a aaef886bb9acec1a9c58aa78e703279f104cba7f,,Protect OpenGL attributes shared by ImGui and OSG,This patch is required to protect OpenGL attributes that are shared by ImGui and OSG. This was accidentally removed by #1498.
dartsim/dart,1556,2021-04-13T05:51:10Z,2021-04-14T00:01:18Z,True,2021-04-14T00:01:18Z,9e9d0b2c130bc9fa503efa409a65450ee20a88bd,71,2,9eb43a5c9113fb746e403e562994e49b5d76e926 950816dab9ba8c23bb7c850b227ccfb107df08ca,,Replace HAVE_ with DART_HAS_ to avoid potential conflict,
dartsim/dart,1559,2021-04-14T00:40:56Z,2021-04-14T01:41:50Z,True,2021-04-14T01:41:50Z,219df95ca999de55e81095374d875b48cc62dd15,2,2,2b1865675c4094242508213cd0b8e6df5ea6b4cc 0b012338b4571563924e31c4fbddbfa8df4c58d2,,Set back face culling by default,Fixes #1557     
dartsim/dart,1555,2021-04-13T05:50:42Z,2021-04-14T08:13:16Z,True,2021-04-14T08:13:16Z,6968128029987594c67fcce606af7dba9ddfef3a,9,1,ab3ebc9d5c71fd045e86d4303ca647f50d1cca7f,,Clean up CI setup,
dartsim/dart,1560,2021-04-14T08:41:56Z,2021-04-14T22:56:50Z,True,2021-04-14T22:56:50Z,d71a95e0bbd800d8a73d6fd5eaca26c8862ad52f,57,3,fdf2a10959e105868ced2d0c6618b55c0bc0b72a 1587238c0af24bc6a206744def07421ca5802110 be69daa0628be497f9abc11e9e2eedb80ae92e3a,,Update required minimum versions CMake 3 10 2 and C C 17,DART 7 shall support >= Ubuntu 18.04
dartsim/dart,1563,2021-04-14T21:20:26Z,2021-04-14T23:16:08Z,True,2021-04-14T23:16:07Z,df03da3e57bf1eb0c82a269281d38259e84eaa18,2,1,317c5a8b20b1fac236a0ed26a8ef9b5024ac8f8c,,Add Python binding for BodyNode getBodyForce ,
dartsim/dart,1262,2019-03-13T20:13:46Z,2021-04-14T23:17:57Z,False,none,efb32f0920b58892dc706c695101374cbb4c9b0e,82,7,6f556b4896a28b7882a92e19b38037e24cfa58fc 79b69b5b0a15ee003fa3ae866c705dd37ca54af6 bbe8805f95b63b3410dfe78395e940c263ae5b4b 25b78731f709ffadcfa155a26af365b2986553f8 f2ade095acbf31742c5a994b86c0af34a58bf138 a0c1af24cc3628965f5c309460824ced038b8ec5 9b80735e72ff8d7190fb812013b9c3fa904fec75,,Make gui glut as optional component,### Problem  `gui` component includes the GLUT-based GUI by default. This introduces unnecessary GLUT dependency even when only OSG-based GUI is required.    ### Solution  Split out the GLUT-based GUI from `gui` component as an optional component `gui-glut`.    ### Caveate  This is a breaking change. In order to use the GLUT-based GUI  `gui-glut` component now needs to be added explicitly as:  ```cmake  find_package(DART COMPONENT gui-glut)  ```    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side (N/A)  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)  
dartsim/dart,1561,2021-04-14T09:00:34Z,2021-04-15T00:53:08Z,True,2021-04-15T00:53:08Z,f559cc10c3c54ddc46a48da40eaf5d6669c34d77,1,1,a15dbc773ea9f07122a18434b87ce1c7579495a2,,Fix inertia calculation of CapsuleShape,Fixes #1524     ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1565,2021-04-15T00:57:52Z,2021-04-15T00:58:41Z,True,2021-04-15T00:58:41Z,f4d0341e5125368d96a4ac38fff3ec34c58e4e6b,1,1,1ed0cac0f392c0c64ae47753af058b0b2d529dc8,,Packaging 6 10 1,
dartsim/dart,1564,2021-04-14T23:00:16Z,2021-04-15T01:25:09Z,True,2021-04-15T01:25:09Z,5e3208873bfce1c160a5dd3cbfe506322ae95f96,7,1,234db423e53baba351a0844071aedc7ffc852db4,,Move code coverage build from Travis to GitHub Actions,
dartsim/dart,1562,2021-04-14T09:55:53Z,2021-04-15T02:38:14Z,True,2021-04-15T02:38:14Z,a63c7eed6f714c8f34d9a988b641df40b5780216,65,1,f495f32c40a1f94a34c40d49c6c3b6d79218ba62,,Make gui glut as optional component,This PR is rework of #1262    ### Problem  `gui` component includes the GLUT-based GUI by default. This introduces unnecessary GLUT dependency even when only OSG-based GUI is required.    ### Solution  Split out the GLUT-based GUI from `gui` component as an optional component `gui-glut`.    ### Caveate  This is a breaking change. In order to use the GLUT-based GUI  `gui-glut` component now needs to be added explicitly as:  ```cmake  find_package(DART COMPONENT gui-glut)  ```    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1566,2021-04-15T02:12:25Z,2021-04-15T04:00:07Z,True,2021-04-15T04:00:07Z,f07b7a7747ba1bc0245f8617e87d242234c409b1,12,1,729005fe6f06fb715d877c9138cb068c1aaf0e27,,Move gh pages deploy from Travis to GitHub Actions,
dartsim/dart,1567,2021-04-15T06:02:16Z,2021-04-15T07:52:45Z,True,2021-04-15T07:52:45Z,b7a9f04bafc8b0a3b1f6ce172ba2f270ae6e1edd,13,3,06aee85fe2ae7b24197aa97187bb557140ee4173 97b4809ad50ab59782abc6d91c8cefa86e366976 5621c3ded7c6cc52529e8e9f52adc45855a3e6d2,,Upgrade ImGui to 1 82,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1568,2021-04-15T06:02:35Z,2021-04-15T07:52:53Z,True,2021-04-15T07:52:53Z,e7d612ee9ebb899b971b28db936b509cf40b5b96,10,2,a3b164290aa7c08a9c2e21dfe127e6f74118e189 bae5807be1a3d5147c74054ee01c6fd3ed953e19,,Drop supporting FCL 0 5 0,as the default FCL version of Ubuntu 18.04 is 0.5.0    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1569,2021-04-16T02:37:03Z,2021-04-16T02:39:22Z,True,2021-04-16T02:39:22Z,df53bbf669296cdba7f8ecc729f9dba4ccce4e28,27,1,1fb00c5c7b54de99c0b0c007958a233d27dd251c,,Merge namespaces lcpsolver and integration into math,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1570,2021-04-16T02:42:02Z,2021-04-16T02:42:57Z,True,2021-04-16T02:42:57Z,abca3918172cadc0e7728cae5d592ec1b7d68b02,69,1,9495cb73278321061252239c8bf1a5c9ccd2a38c,,Rename namespace optimizer to optimization,    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1571,2021-04-16T02:52:03Z,2021-04-16T02:52:41Z,True,2021-04-16T02:52:41Z,51f1326cd58a0ca43e1534bc5382645801197390,107,1,e5040bb7a162dfe69dd6e3f9d2c5cda5073b6244,,Merge namespace constraint into dynamics,    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1572,2021-04-16T02:56:04Z,2021-04-16T05:33:31Z,True,2021-04-16T05:33:31Z,7b0cea27e054e341d5e402b44755047b674a4079,213,1,001a70aabe73ecbfe96ddde03d463306835de743,,Rename namespace utils to io,    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1573,2021-04-16T05:37:29Z,2021-04-16T05:57:12Z,True,2021-04-16T05:57:12Z,8a9231015fdc653db885ebced0a4cf9b68753724,7,2,8f2ec7995fb444b7112af1b5dc00203b81b0c63e fce79e24ab41a1d8c212b5bedbe204679632b713,,Drop supporting Eigen 3 3 4,as the default Eigen version in Ubuntu 18.04 is 3.3.4.    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1574,2021-04-16T07:07:42Z,2021-04-16T15:38:03Z,True,2021-04-16T15:38:03Z,f0f581981adc7a83931755a604630a2578f491d0,5,1,1117ba001d8964e318ef13e9d511ade794062d12,,Make external odelcpsolver and external lodepng as private dependencies,    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1576,2021-04-21T03:38:28Z,2021-04-21T07:28:19Z,True,2021-04-21T07:28:19Z,eafa47927888c3faf53748b9714b707cf07b6598,415,1,5017d2c1fce5f390a3fe59d1098f1f9e6616b9be,,Restructure components,Summary of Changes:    - Restructure components    - Remove sub-components (e.g.  `gui-osg`) and merge them to their parent component  where the features (that were the "sub-components") are enabled when the dependencies are found (e.g.  `OpenSceneGraph`)    - Before: `dart`  `optimization-nlopt`  `optimization-ipopt`  `collision-bullet`  `collision-ode`  `gui`  `gui-glut`  `gui-osg`  `utils`  `utils-urdf`  `planning`    - After: `common`  `math`  `optimization` (possible to be merged into `math`)  `collision`  `dynamics`  `simulation`  `io`  `gui`  `planning`  - Add CMake options `DART_BUILD_COMP_<compnent>` to configure whether to build the components  - Enable to install the package with other major versions side-by-side    - Change the package name from `DART` to `DART<major_version>`    - Change the path to include directory from `<prefix>/include/dart` to `<prefix>/include/dartsim/dart<mafor_version>/dart`  - Rename directory `unittests` to `tests`    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1577,2021-04-23T18:47:09Z,2021-04-24T02:39:26Z,True,2021-04-24T02:39:26Z,447bb905eb9c89da50f196a8ce4dc7677717d78f,1,1,95ea16257abf50080acb0f1dace28de8dda5e6df,,Fix incorrect index checking in getValuesFromVector in MetaSkeleton cpp,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1579,2021-05-03T09:21:38Z,2021-05-03T16:20:18Z,True,2021-05-03T16:20:18Z,3fbc45de934c874d6369abc52e743707abba9e33,28,1,8836466a61ec78cd624e89b95577727603966f04,,Fix incorrect MultiSphereConvexHull rendering,Previously  `MultiSphereConvexHull` was rendered as a composition of spheres and cylinders (that connect the spheres) rather than the actual convex hull. To fix the issue  this PR adds `Mesh`  `TriMesh`  and `Icosphere` classes  where they provide a feature of convex hull generation. The GLUT and OSG rendereres now draw a convex hull for `MultiSphereConvexHull` by (1) generating icosphere meshes from the spheres  (2) merge then as a single triangle mesh  and (3) lastly generating a convex hull out of the merged triangle mesh.    Also  this PR is a preliminary work to address https://github.com/dartsim/dart/issues/453.    Old:  ![Screenshot from 2021-05-03 02-02-53](https://user-images.githubusercontent.com/4038467/116859172-690f3780-abb4-11eb-9246-b42a431bd723.png)    New:  ![Screenshot from 2021-05-03 02-01-52](https://user-images.githubusercontent.com/4038467/116859113-539a0d80-abb4-11eb-89a2-ca92f508aa4c.png)    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1580,2021-05-03T18:31:58Z,2021-05-04T15:06:09Z,True,2021-05-04T15:06:09Z,2e0c6b59df24c75f9cac52e900ba2f21b4a7d90a,39,1,09276ea503e1f61c05fc52044b3dad364bab763a,,Merge release 6 11 to main,  
dartsim/dart,1581,2021-05-30T17:24:39Z,2021-05-30T18:14:37Z,True,2021-05-30T18:14:37Z,c62c041c7f7039b6f9de35507639ccadcfc51441,2,2,bab5b0a77ba7de9aefd539b1788cd3a86cf18097 be6128a0fc68feb6472b1c003c6e27ee5ba98ff0,,Fix inconsistent detection of Python version in CMake and pybind11,
dartsim/dart,1582,2021-05-31T00:22:08Z,2021-05-31T16:29:11Z,True,2021-05-31T16:29:11Z,5e128eeb4f107fbcf3a772e5e3b1a2714f14ebee,7,5,5be4caafc059414a890a4904906902de7587a7c1 53bac40fb219b005d4a6e1235e4b6b9b644d62c8 ee2291813fe16286aa321ee0823ba2286c677221 bc12da6ffa4cbfcffb5e993dcffa83ec9e1d7ec1 49aeec3806c2f6add98f94d9058d949b3a5ee903,,Add archlinux to CI,
dartsim/dart,1585,2021-07-02T02:30:00Z,2021-07-02T13:30:27Z,True,2021-07-02T13:30:27Z,e2bd9d118046760ffb5564d72f29f1f3b4a77c47,5,2,43c6d319fce88e4d57d79596d9bc293463c9ab0f 79c5c9bf9a5df58b809e8f299408ef60508b9ad3,,Fix incorrect group group collision checking for BulletCollisionDetector,Fix #717    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1586,2021-07-03T08:46:29Z,2021-07-03T12:54:29Z,True,2021-07-03T12:54:29Z,0799362c43279151bfe7a0488e99c9a37dfb8bf6,2,1,41644c5d2eca8abe313595911696d063c1dc6692,,Add DART_ prefix to macros to avoid potential conflicts,
dartsim/dart,1584,2021-06-16T20:59:25Z,2021-06-17T04:12:11Z,True,2021-06-17T04:12:11Z,2765390bc0d31db7077b30c7aeaccd057457eac3,3,2,2a8f611694c04b569f4dbdb3aea9d86719062290 4f4e33abc288a73502e72da895ceb28c42211b5a,,Use GLVND over legacy OpenGL libraries,
dartsim/dart,1588,2021-07-08T05:25:51Z,2021-07-08T14:02:05Z,True,2021-07-08T14:02:05Z,bdec50d2a8d405e976dde371e10faeeb7ac95757,35,17,df03da3e57bf1eb0c82a269281d38259e84eaa18 f559cc10c3c54ddc46a48da40eaf5d6669c34d77 f4d0341e5125368d96a4ac38fff3ec34c58e4e6b c088e9b22e026460e9e46c60b934a095a58676f7 551617f57da5cfc51b8dea399119d5430dbb0e19 34a19c2cbf9db6dc4f5f70dc993d53a21ca13785 984a9063fd159bbdd3f233bcd72beec575d2d714 3fbc45de934c874d6369abc52e743707abba9e33 2765390bc0d31db7077b30c7aeaccd057457eac3 e2bd9d118046760ffb5564d72f29f1f3b4a77c47 0799362c43279151bfe7a0488e99c9a37dfb8bf6 2cb0ec4fa1b2f1a28937c333ff8f79b6457dd946 5058255853d5b733476fc031b18fb95bdf7d7f5d 2a28d5de73c62332521acd1222d586aa45266478 118cb2fa6110e7565b555806c0bd32258e73214d 86d77fd80bbd3b827b5d64739b7bf2a26bd189af 41f316d7109395029d84b1bf8728db30c4949b2b,,Merge release 6 11 to main,
dartsim/dart,1590,2021-07-10T09:46:09Z,2021-07-11T05:53:31Z,True,2021-07-11T05:53:31Z,325b232afadf28e3ef78207da2cda1d97bd06227,248,23,a1bf25fe838b23119041c3430eea3ce7c7336eed 08ad15b3ea1a761a101e954d41eb66035f382d41 f17ca652b8c6fb87f84715ceaaadb2329209fe64 dd0d5eeddcbe6f989ac084e531da3f7e754c7f00 6cd8ec097f75ca16d97f8a950081e1b8e021dcf7 6de5165f9bc7872efd4108cd7c92d79bc1a8229d 16b2d3d4e6b1044bb1009b5f6429b4c3ca0fe788 0d65bab92aa3fe63e196dd8becd3715e985a9a65 b7f8a50088733a849043863afd5bd1b6dbb0a177 8568b31d2d68dabbdf0049b50e21205953732ac4 732dc7d560254e790e6e8aacba968f924f44d575 f521e8a5ffb646da733f0d4e878b97e2e8b8a35b cddd6aa38abedb5ba045c3104f0f48a749554f7f c9e9adaf87053b9eeb65612c6aabb8483dc4af54 f962eea713ac3152edab4ccd421afa25e0178848 d67a4cb52ba95740f861c7d13efcea581525b4f8 6e22cbdcc21d5753996ce175c6020bc98aaf7d2c 982db7db896bed876e54b1048a9e566c0547762a 1af7e5f2f97bee857226334ffdfd2bdf6cad5bdd f015aaa94746186229627fefb427f002ee8e5d0c 7fcf932517c53352d37962927dd43f9022f8f0b2 0c676496edf38af9ec2a90170473d6a1f13c6a30 c673fcb27d6e90bd66f3274fa75947e0ae88581a,,Refactor collision Most minimal sphere sphere binary check,* Move old collision code to dynamics  * Adopt the new code style to the new code in collision  * Minimal collision functionality: sphere-sphere binary check
dartsim/dart,1591,2021-07-11T02:41:35Z,2021-07-11T22:56:49Z,True,2021-07-11T22:56:49Z,d02b3fbb0fcf64d5ab0efd82cacddc3ccfc7d175,873,1,3490ae3b80e1fb63c974df658d1af2cdc59ebf80,,Upgrade to ClangFormat 9,
dartsim/dart,1592,2021-07-11T23:19:59Z,2021-07-12T01:29:26Z,True,2021-07-12T01:29:26Z,6c487c0ba037979e907b23934c192337d5df62c7,69,1,0e9ee22b2aca664e7abf73d1ff40f35200b85198,,Refactor tests,* Split the test libray into multiple per DART module  so that building an unit test doesn't need to build unnecessary DART modules  * Move some unit tests to comprehensive test category
dartsim/dart,1593,2021-07-12T01:36:55Z,2021-07-12T12:56:12Z,True,2021-07-12T12:56:12Z,930a49676fcd3fe503ad344a922485bc9047fa85,18,5,b3f4165b4078de8be1994d5eae7eda7a486b2777 4acda41847ed9b999a1deb3b63edbb8f05dab8dd d6b91dce224e0e2032a4a71155bf0f80c47dcb50 1bf319e3724126882f0f37d9f73fac6f616197a8 2e991e07bb55c8ac6e59afe0e29cbee8f554f6c7,,Integrate spdlog with basic functionalities,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1594,2021-07-13T03:41:15Z,2021-07-13T05:49:10Z,True,2021-07-13T05:49:10Z,77ddb1ad59e751d6d7d6b7820e71d892058caa1f,2,1,60a59307a2745bceb06f87147382fbf9eb2c8b92,,Fix dart pc 1496 ,Updated dart.pc.in based on the suggestions in #1496 and https://people.freedesktop.org/~dbn/pkg-config-guide.html
dartsim/dart,1040,2018-03-22T17:57:04Z,2019-01-12T00:34:28Z,False,none,95e0b6588657b0ec8cd651ed2531a860547ccf1b,233,29,97468c33928132cf2401e3e71fefb474a80ab22b 7e82bcdcc96a46faa1c7f74919a77b98a6bd3d93 9129ad6d573f721f51eb24ff87457617bd7646e2 a38ca139b53e9916bec7f36c0f9d6e759e6012b4 4dd81fd37f0b98797b563e7fb154cf35e85dba38 e3fd90e3e667b8986cab16d95a81d60390f69114 024ac5a92f999d0c3b31ba359f1d8659d16d4205 9141345aeacb16c649071aa5827b8ff8bde267e7 c5eb4be28d57f25366684f93512356d3ce01eed8 12aec1a490c7184b224a23ecd709033e2382b66f e3f17f2e60f99a6c6c0e0f90b10e558bbc1d7abe cc638e039aa3737a9bf5bec876c3c8cf77c65b15 ed9a5df3ec16c970f693b4063d329982ee939809 d8de131f59e42c0d4d982f14b72e24ffa5c1b1de 11330ed2b4e9fba2fdc7874075c569842508cf56 cec1d7c11908c20ddedd6464a10167cf9fbe50c3 698a4edf2b120c09c192d931c495d05b48ba389d 3da6e789e0a31de71f0bc9563344ac27572c06c8 f43af8cc589afc2767576e4438a0f804fa3dc59c 7af2a71fc8c9fbca947557d30c2f07c5e0626495 73e98ec02f7edc2929785dc035c07877ee6b8fd2 ff49098447a2f08c166df2d8bf27010b1be3a557 7dce12d67a0a5367b8fbb2402979acfda605d1c4 98444dd675a5b300d10802b8ae0362b93390ba40 5f9fd4143d5ce813e0a60182c294a1fa1b6f64de 91d089e8416a8ff3eaf41d6dbce42d29cc951af2 ee0063c5c29666a8b232428479ca8743539ca38f 9facf402291d9d12999536e127ac1dc047557612 a52135908d88b7238f76f8817d60faa2067fe66c,help wanted,C visibility support,This PR implements the [control of binary symbols visibility](https://gcc.gnu.org/wiki/Visibility) in DART inspired by https://github.com/flexible-collision-library/fcl/pull/233.    `DART_EXPORT` preprocessor is added to any class  struct  and function that needs to be exposed publicly to third-party software. I could compile all the tests  examples  and tutorials without any issue  but it would be good to test DART with other third-party software like AIKIDO for sure.    `DART_HIDE_ALL_SYMBOLS` CMake option is also added  which is `OFF` by default  for the case that we want to hide all the symbols as DART is built as static library.    Caveat:  There is a preprocessor name conflict between the existing `DART_DEPRECATED(version)` and another preprocessor generated by `generate_export_header()`  which is necessary to mark visibility of deprecated APIs. To resolve this  I changed the name to `DART_DEPRECATED2` so that the preprocessor for deprecated API becomes `DART_DEPRECATED2_EXPORT`. I'm open to better workaround.    Alternatively  we could remove `DART_DEPRECATED(version)` and use one generated by `generate_export_header()`. The version information can be provided by using Doxygen comment (e.g.  `/// \deprecated Deprecated in <version>. Please use <other_api> instead).`).    This PR is related to #1005.    ***    **Before creating a pull request**    - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [ ] Add comment to the export preprocessors
dartsim/dart,1587,2021-07-07T16:08:45Z,2021-07-07T23:05:54Z,True,2021-07-07T23:05:54Z,5058255853d5b733476fc031b18fb95bdf7d7f5d,22,1,9e1143770ae67f3dc7408fcac9b38cd33d9e18d3,,Fix servo motor doesn t respect joint position limits,Fixes #1583     ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1597,2021-08-22T17:02:02Z,2021-08-23T16:46:22Z,True,2021-08-23T16:46:22Z,763eddd06e4dd5f9279b1b63f6342e23b7e2c786,8,8,e594706856d5d7680596bb2fb1566f39756b3a7a e80fee631f50ff24d7f09de7da75dc517689a611 1093ec4ef441caf9397313a593c185fb38456a0d 0dafab25672c9badfd1b0063929c3c6617f0002f fc2d5e4a2676ca1210abce63eff847582fdf9f0b 4fb89e2a28e437b10e4409542b69946b2bfa7244 5e4d2250ce66faccf2e6dfdbb977a30c3a458c15 5e0e44af5cdcaa783c51338992f4f946195b6ede,,Fix incorrect LCP construction in JointConstraint for multi DOFs joints 1596 ,* Fix incorrect LCP construction in `JointConstraint` for multi-DOFs joints (fixes #1596)  * Add `universal` joint type in `SDFParser`  * Encode visual/collision name attribute of SDF in ShapeNode name  * Bump version to 6.11.1    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1598,2021-08-24T02:02:15Z,2021-08-24T02:02:30Z,True,2021-08-24T02:02:30Z,25b5904e8c489055be59f27b78366a1959764dc2,4,2,683e2320bb6275e8873bd3520a69883c2bbeb948 9fd9ae8d50066ce200257b42e7b75ccdf502173c,,Packaging 6 11 1,none
dartsim/dart,1600,2021-08-27T08:04:21Z,2021-08-29T07:15:22Z,True,2021-08-29T07:15:22Z,6338430d79f01ab71f181d82b7c8c590e0a8c2a0,78,8,086a1d95ad4450ff55973df996cb8e32e207f1c6 32fcde5bc6b7e0fb2a38b521a182bd37d3cbe46d c4d4d44edd8025522bbbff8dab894e1496de5578 23544411a7c3309d9bf24d673b7cf1bc77a97ecc 3c5fba7380514b6c6c939511befa1429ea93e5ae 7a7dcdaec706544e12593bd3a0c684d2c6b8fc69 9dafbe5c9e486aac639b364b116ce14ec3b9cbd1 6b68f7dcb0abcee41f7e5cd3c482e7409bd58441,,Increase required C standard to C 17,- Increase required C++ standard to C++17  so the compiler versions as well  - Increase required CMake version to 3.10.2  - Drop supporting Ubuntu Xenial (16.04 LTS)  - Update CI settings accordingly
dartsim/dart,1601,2021-08-27T08:42:39Z,2021-08-29T17:16:51Z,True,2021-08-29T17:16:51Z,552f8d155f7d9c9ea6dd1d02cf63631ac290dfe3,365,5,a9b4b0c8aba7e4be0683bb5a599579f9bb1b3483 5a407f5083d7d3362a2ab7eeef28651679d18ec1 177c1c1b9425b209a44c1e723513b16738a31366 a74b97aea072b1ea17fb0addec7c8c18a5fec7d7 95274cecbbc34f40d39f20a44dc0413eec9c7222,,Switch ClangFormat version to 9,- This PR depends on https://github.com/dartsim/dart/pull/1600  - Switch ClangFormat version to 9  - Update `.clang-format` to be compatible with ClangFormat 9  - Format code
dartsim/dart,1605,2021-09-18T20:12:59Z,2021-09-19T03:48:07Z,True,2021-09-19T03:48:07Z,3b1f079c17236277824ede0cc17ce0a29b973ba5,5,2,63b6a74f03e25c47ae74a4067b5cc136c19a7049 7b2a6352a7b1bcfaff8b7cc3dbc64fbb83e85562,,Add default options to DartLoader for missing properties in URDF files,Enable to pass parsing options to `DartLoader`. Currently the options are default resource retriever  default root joint type  and default inertia of link. The default inertia options is to resolve #1604.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1608,2021-09-22T20:41:08Z,2021-09-22T22:21:00Z,True,2021-09-22T22:21:00Z,9177eac8f192bf06e79d0b848c71a12c4845e5c5,13,2,d9c67ec0fb67900d2fd9225c73804ec9389661c7 88e0289f9580018badfe91539f304f977e08a947,,Updata ImGui to 1 84 2,    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1609,2021-09-22T22:16:28Z,2021-09-22T23:44:19Z,True,2021-09-22T23:44:19Z,f6b31f59816b2feec212c9f1103cced0a37751a7,1,1,7438745423b4f0b3d22ab99d35eb91762012f5d8,,Fix path to data directory,[Remove this line and describe this pull request. Link to relevant GitHub issues  if any.]    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1613,2021-10-10T16:43:42Z,2021-10-19T20:09:53Z,True,2021-10-19T20:09:53Z,e8f84a8c2777cfc1f10428bcf7b6f444d0612ecd,1,1,ca0fb4318d3a1de39266515d5f82b026bfee4bde,,Fix compilation of test_Icosphere with Eigen 3 4,While debugging a build failure in the `dartsim` conda-forge package (see https://github.com/conda-forge/dartsim-feedstock/pull/16)  I noticed the following build failure when building dart with Eigen 3.4 :    ~~~  (dart_new_eigen) traversaro@IITICUBLAP257:~/dart/build_new_eigen$ ninja test_Icosphere  [1/2] Building CXX object unittests/unit/CMakeFiles/test_Icosphere.dir/test_Icosphere.cpp.o  FAILED: unittests/unit/CMakeFiles/test_Icosphere.dir/test_Icosphere.cpp.o  /home/traversaro/mambaforge/envs/dart_new_eigen/bin/c++ -DBOOST_ALL_NO_LIB -DBOOST_FILESYSTEM_DYN_LINK -DBOOST_SYSTEM_DYN_LINK -DBOOST_TEST_DYN_LINK -I/home/traversaro/dart/unittests -I/home/traversaro/dart -I/home/traversaro/dart/build_new_eigen -isystem /home/traversaro/dart/unittests/gtest -isystem /home/traversaro/dart/unittests/gtest/include -isystem /home/traversaro/mambaforge/envs/dart_new_eigen/include/eigen3 -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/traversaro/mambaforge/envs/dart_new_eigen/include -Wall -Wextra -fPIC -O3 -DNDEBUG -MD -MT unittests/unit/CMakeFiles/test_Icosphere.dir/test_Icosphere.cpp.o -MF unittests/unit/CMakeFiles/test_Icosphere.dir/test_Icosphere.cpp.o.d -o unittests/unit/CMakeFiles/test_Icosphere.dir/test_Icosphere.cpp.o -c /home/traversaro/dart/unittests/unit/test_Icosphere.cpp  In file included from /home/traversaro/dart/dart/math/Icosphere.hpp:104                    from /home/traversaro/dart/unittests/unit/test_Icosphere.cpp:35:  /home/traversaro/dart/dart/math/detail/Icosphere-impl.hpp: In instantiation of 'static std::pair<std::vector<typename dart::math::TriMesh<S>::Vector3>  std::vector<typename dart::math::TriMesh<S>::Triangle> > dart::math::Icosphere<S_>::computeIcosahedron(dart::math::Icosphere<S_>::S) [with S_ = double; typename dart::math::TriMesh<S>::Triangle = Eigen::Matrix<long unsigned int  3  1  0  3  1>; typename dart::math::TriMesh<S>::Vector3 = Eigen::Matrix<double  3  1>; dart::math::Icosphere<S_>::S = double]':  /home/traversaro/dart/dart/math/detail/Icosphere-impl.hpp:133:67:   required from 'void dart::math::Icosphere<S_>::build() [with S_ = double]'  /home/traversaro/dart/dart/math/detail/Icosphere-impl.hpp:109:3:   required from 'dart::math::Icosphere<S_>::Icosphere(dart::math::Icosphere<S_>::S  std::size_t) [with S_ = double; dart::math::Icosphere<S_>::S = double; std::size_t = long unsigned int]'  /home/traversaro/dart/unittests/unit/test_Icosphere.cpp:50:59:   required from here  /home/traversaro/dart/dart/math/detail/Icosphere-impl.hpp:77:24: error: converting to 'Eigen::Matrix<double  3  1>' from initializer list would use explicit constructor 'Eigen::Matrix<_Scalar  _Rows  _Cols  _Options  _MaxRows  _MaxCols>::Matrix(const std::initializer_list<std::initializer_list<typename Eigen::internal::traits<Eigen::Matrix<_Scalar  _Rows  _Cols  _Options  _MaxRows  _MaxCols> >::Scalar> >&) [with _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1; typename Eigen::internal::traits<Eigen::Matrix<_Scalar  _Rows  _Cols  _Options  _MaxRows  _MaxCols> >::Scalar = double]'     77 |   std::vector<Vector3> vertices = {{{-x  0  z}         |                        ^~~~~~~~  /home/traversaro/dart/dart/math/detail/Icosphere-impl.hpp:90:32: error: converting to 'Eigen::Matrix<long unsigned int  3  1  0  3  1>' from initializer list would use explicit constructor 'Eigen::Matrix<_Scalar  _Rows  _Cols  _Options  _MaxRows  _MaxCols>::Matrix(const std::initializer_list<std::initializer_list<typename Eigen::internal::traits<Eigen::Matrix<_Scalar  _Rows  _Cols  _Options  _MaxRows  _MaxCols> >::Scalar> >&) [with _Scalar = long unsigned int; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1; typename Eigen::internal::traits<Eigen::Matrix<_Scalar  _Rows  _Cols  _Options  _MaxRows  _MaxCols> >::Scalar = long unsigned int]'     90 |   static std::vector<Triangle> triangles        |                                ^~~~~~~~~  ninja: build stopped: subcommand failed.  ~~~    Building exactly the same code with exactly the same dependency except for changing Eigen from 3.4.0 to 3.3.9 was working fine  so I am quite sure that this problem is related to Eigen 3.4.0 . I am not sure about the exact nature of the error as I am not familiar with initializations of std containers of Eigen vectors  but according to my tests it seems that the error is fixed by removing a pair of curly bracket solved the problem while ensuring that everything still compiles fine on Eigen 3.3.9   and this is proposed in this PR.     However  things to check accurately:  * Make sure that all relevant Eigen versions/compilers pairs are covered by CI  eitherwise we may break them.  * Check if the format that I used for the initializer list after the change still make sense     ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change      
dartsim/dart,1615,2021-10-29T18:12:33Z,2021-10-29T19:54:12Z,True,2021-10-29T19:54:12Z,ddc4b1d8690a4de9b99ca1846b9b9649ac021600,3,2,be452ce1f2c442ab9343e3fb85678db339353beb 0bfa9e09f0f143d37e612caba8039169ae6690c2,,Add python binding for global lighting setting,none
dartsim/dart,1610,2021-09-25T01:54:02Z,2021-09-25T01:56:10Z,True,2021-09-25T01:56:10Z,6c762951419da5fcd6a28bae69b54db6241b5a63,11,2,554ee2e430af88ae91d6d3d02b0e47ad11454c8c 794b9ec3cfacec314753d5a2ac609078ef8550a8,,Add Python bindings for ResourceRetriever and SdfParser,in response to https://dartsim.discourse.group/t/to-parse-sdf-in-dartpy/261    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1616,2021-10-30T00:18:01Z,2021-11-01T14:33:36Z,True,2021-11-01T14:33:36Z,4389b698374d57f3b299b0d7a6ed3aa245dfa6e9,6,2,6e5488f501e83b12732b32a89fe49f724e9aac3d 70cd90a2decc1451cd718405c09e90998ca8ab28,,Add joint force torque getter,[Remove this line and describe this pull request. Link to relevant GitHub issues  if any.]    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1617,2021-10-30T01:33:27Z,2021-11-01T14:35:47Z,True,2021-11-01T14:35:47Z,b663c87e73e3c48295a856f22d5f455be9dc3443,6,1,92e3e73dd179f57d55f15f4eebed7910d4e798ab,, Allow SdfParser to set default root joint type,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1619,2021-11-01T16:19:58Z,2021-11-01T18:39:12Z,True,2021-11-01T18:39:12Z,595a0e6e599e4f75fcc1d8c420ab9ab54aa081b5,1,1,603c7445e0caa30507faa7cab911346dafab2329,,Packaging 6 12 0,none
dartsim/dart,1620,2021-11-03T16:03:02Z,2021-11-03T18:29:25Z,True,2021-11-03T18:29:25Z,459cb250c7852bd61894ee5db420db6d3cc7ae8f,12,2,ec1ea6d3dd5fd3f60a57a307a60d720e9a1fe4e3 28a8051d8b08f3dc6e8fc335ae43bc77c0c926fa,,Fix bullet header include,none
dartsim/dart,1621,2021-11-04T00:42:42Z,2021-11-04T20:35:53Z,True,2021-11-04T20:35:53Z,50130217501e7d4951607d8c8f6b23e953c6f440,12,5,9e830c01e3b55f160e94c4d427b88f647446bd68 31a780e8ef5e9782662da2238c721d2b9ecc35bd f70e100fc519434d8baf22ef3cdaebeb25344f32 5cb19aa2044a26b2428bf304eb5842c9b38e1fdc 80e4b2c710684cfad0dc8c56120bd5e54536fdad,,Add python bindings for Joint getWrenchTo Child Parent BodyNode,none
dartsim/dart,1607,2021-09-20T16:37:30Z,2021-09-20T18:29:27Z,True,2021-09-20T18:29:27Z,3fc76ebc4eb1b8e8362f50004bbc730b6643bb10,15,1,79514a42e0a0377a0cc3484627d6f5f34cf86453,,Replace not operator with ,`not` operator isn't compatible in some build environments. No reason to use the _alternative_ operators.    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1612,2021-10-08T18:59:57Z,2021-12-15T19:07:07Z,True,2021-12-15T19:07:07Z,a970e8142d9766c06b71aa14604e99dee8f36abc,33,6,dbf9f53739ec6110cc7f58cdc7f34d42a9aef4d1 5031a9e383aad0d168710c910170d19c21bcd318 fc7b0ca87ea267ae3363bc070ee6a5e545e295b2 f1c1a8905f46ab649bc7c997a113ea379757a0d4 f987f8893f8983761e41e7c6abc2e3a42192caa2 2c4bf9ec368fd7ca632538cbb1183a347275b8d7,, dynamics deep copy shapes,This PR adds the possibility to deep copy shapes. In [robot_dart](https://github.com/resibots/robot_dart)  we clone very frequently robots and we would like to be able to make deep copies of the robot. At the current state  DART does not copy shapes. This is generally OK unless we would like to alter the shapes later (e.g. create a damage or change the ColorMode of a MeshShape). So  this PR solves the above issue by making it able to deep copy shapes. I hope that I did not forget any shape. The only shape that I do not deep copy is the `SoftMeshShape` (for now I just return a `nullptr` in the new `copy` function; you might want to handle this differently [e.g. output a warning or exception]). Here there is a tight relationship between the `SoftBodyNode` it is attached to  so I do not touch this. By the way  when cloning a skeleton  is this type of meshes re-created to point to the correct `BodyNode`?    Let me know if this is OK for you or you would like to handle it differently. If this is OK  we can do unit tests.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1437,2020-02-28T22:13:01Z,2021-12-16T14:57:11Z,True,2021-12-16T14:57:11Z,8bf2bab9a7cf2f074b51d80a819ffd08b4426da2,7,11,2913e04621083f0c53fa056cf46a2561f07a9607 cf3bf808d627ee884a3eb826caa4ab373372a2f2 521e518bbe249e8cd6bb93cd42f6f14e7ab60641 7de55b696e3f2226778edd0f90ad2df4a3fd8443 dbe970c5c93cca56eee464f1d33e01eacc0ed5ca f34aa328623bccf3fddfa371fa5f442b1371489f e16efe26bc8f283c2b6eaa4849a2bdd9110ab02e 62322cc59d6af734676371fd5aeb2b812c39375e 6eaf865d1118cb44cd64130483c08b4dca799f4a 497d843679347a4859bcd270b062827cb7e60760 5091a56f3c0f399d774451d0615db429d5101680,,Fix velocity and position integration for FreeJoint,This resolves issue #1433 and possibly the other issues mentioned in there. The two changes made in this PR are:    1. When integrating a FreeJoint's velocity  an additional term is added to account for changing linear velocity in the inertial frame.    1. The joint velocities of FreeJoint are in se3 and since they are expressed in the body frame  they have to be updated after the joint's positions (SE3) are updated. The same is true for accelerations after velocities are integrated.    This PR breaks a test in `test_Dynamics.cpp` because integration of the joint positions of `FreeJoint` updates joint velocities unlike other joint types. I left this as WIP to get some feedback on what to do about this test failure.    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1624,2021-12-17T07:33:48Z,2021-12-18T03:12:04Z,True,2021-12-18T03:12:04Z,6f9feed16de829d30d24f31a855d0e05a13a3ac6,4,2,d049a276e35061baa31623b3c368462af9651227 49ef5aa895bec68a89203858f0b4f8523203579b,,Fix grouping of contact constraints,## Description copied from https://github.com/ignition-forks/dart/pull/6:    DART crashes when simulating a modest number of objects that come into contact with each other.     To test  run the following file in ign-gazebo (`ign gazebo -v 4 cube5.sdf.txt`)  [cube5.sdf.txt](https://github.com/azeey/dart/files/4755483/cube5.sdf.txt) (courtesy of @mjcarroll)    Before the PR  ign-gazebo crashes with  ```  ODE INTERNAL ERROR 1: assertion "bNormalizationResult" failed in _dNormalize4() [odemath.h:42]  ```  ![Peek 2020-06-09 19-22-crash](https://user-images.githubusercontent.com/206116/84213599-b5c2bf00-aa86-11ea-875d-38b53c34feb9.gif)    With the PR:  ![Peek 2020-06-09 19-23](https://user-images.githubusercontent.com/206116/84213646-d4c15100-aa86-11ea-9054-2e944f4f0860.gif)      For a given set of contact constraints  the constraint solver first creates a grouping of related constraints  and then solves each group independently. There seems to be a problem with this grouping and some constraints end up being in two groups.     The `ContactConstraint::uniteSkeleton` function unites two skeletons associated with a given contact constraint. It does that by setting the `mUnionRootSkeleton` member of one of the skeletons to point to the current root skeleton of the second skeleton. To decide which of the two skeletons' root node becomes the new union's root node  the size of the skeletons' current unions are compared.    As an example  let `A` `B` `C`  and `D` be skeletons associated with 3 contact constraints. When `ContactConstraint::uniteSkeleton` is called for constraints 1 and 2  skeleton `B` is chosen to be the root node.  ```  1. A  B = A -> B  2. C  A = C -> B // Since the root of A is B  C's mUnionRootSkeleton now points to B  3. D  B = B -> D // Let's assume D is chosen because D's union size is larger.  ```  When `D` is chosen for constraint 3  `A` and `C` are not updated. Thus  later on when `ContactConstraing::getRootSkeleton` is called on constraint 1 or 2  `B` is returned instead of `D`. This results in error in the grouping of constraints.    It's not clear to me why this error causes a crash  but the hint that led me to a solution is that I tried disabling the grouping altogether and letting all the constraints be solved in a single call to `ConstraingSolver::solveConstrainedGroup` and that didn't crash. My guess is that when a constraint ends up in two groups  a solution for that constraint is computed twice and the resulting impulses are erroneously accumulated.      For additional clarity  I instrumented the code to output a dot file and generated graphs of the constraints and their grouping. For the attached SDF file  here is an example grouping for frame 413    ![constraints413](https://user-images.githubusercontent.com/206116/84307362-67fb9480-ab22-11ea-9792-33b24db51103.png)    The ellipses represent the skeletons (cubes and ground_plane) and the edges represent a contact constraint between two skeletons. The light grey edges are constraints where one of the skeletons is a static body. The rectangles represent the constraint groupings. With proper grouping  each node in the graph should only have an edge to another node inside its group (rectangle). The exception is for static/immobile skeletons which are allowed to have constraints across multiple groups because impulses are not applied on them. But notice how `model_3_0_3` has a constraint with a `model_3_0_4`  a skeleton outside its group. I believe in this example  the group labeled `model_2_3_4` and `model_3_0_0` should have been one group.    In contrast  here is frame 413 after the fix. Granted  the collisions in this frame are going to be different from the one run without the fix  but I wanted to show that this PR does not disable grouping:    ![constraints413](https://user-images.githubusercontent.com/206116/84308243-c70dd900-ab23-11ea-9800-c6b24ce94f24.png)      ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1628,2021-12-18T07:28:17Z,2021-12-18T15:07:32Z,True,2021-12-18T15:07:32Z,56d7cbe047035c32c71765cafebb3381b43083d4,10,1,9637b02709538eadeeb21092dcb91de1e433683f,,Fix grouping of skeletons by constraints,- Apply #1624 for other constraints  - Fix compile warnings with GCC 11.2    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1625,2021-12-17T07:49:01Z,2021-12-18T16:08:23Z,True,2021-12-18T16:08:23Z,3e0edda7843f4e68d0d3f1268ac38e42eaea2e77,5,2,b0265530655688ce1c6c2bff7a5b89f79e44951d bc78a374005cf3a3ef52b081f27d19ed4b278ddf,,Fix issue with removing skeletons without shapes,## Description copied from https://github.com/ignition-forks/dart/pull/4    When `subscribeTo` is called with a skeleton in `addSkeleton`  the skeleton is added to `mSkeletonSources`. However  inside `removeSkeleton`  `unsubscribeFrom` is not called. Instead  `removeShapeFrameOf` is called. This is fine for most cases  but it fails to remove the skeleton from `mSkeletonSources` if the skeleton does not have any shapes within it. This causes `mSkeletonSources` to grow indefinitely. A hazardous side effect of this is that when an attempt is made to add a new skeleton via `subscribeTo`  the address of the skeleton might be the same as one of the stale entries in `mSkeletonSources`. Consequently  the new skeleton's shapes don't get added to the collision detection engine and very surprising results follow.    Here's a print out of `mSkeletonSources` after running several load/unload cycles via the levels feature of ign-gazebo where skeletons are removed and added repeatedly: https://gist.github.com/azeey/8fe5a55d19758923ef7c1b5df90869d3    And here's the collision detection failing (failure after the 4th cycle):  ![Peek 2020-01-27 19-22](https://user-images.githubusercontent.com/206116/73408941-59bf8100-42c3-11ea-8cb2-72a9055a4822.gif)    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1630,2021-12-18T16:09:35Z,2021-12-18T16:29:24Z,True,2021-12-18T16:29:24Z,ecd269dfcbc7cbbc83421d90ae5e454a3ed5a60e,2,1,f8186780e93a124ab4d406e30afe363f0b51e364,,Update changelog and contribution for 1624,@azeey 
dartsim/dart,1627,2021-12-18T03:20:11Z,2021-12-18T15:55:46Z,True,2021-12-18T15:55:46Z,5df22078280122283e2a38e714278281313d787d,2,1,aca94f86bf9cbe41a2836e7a96d73b31e53e191b,,Update changelog and contribution for 1620 and 1612,@azeey @costashatz Feel free to update the change log and the contribution descriptions. Thank you for your contributions again!
dartsim/dart,1629,2021-12-18T07:41:02Z,2021-12-19T03:00:22Z,True,2021-12-19T03:00:22Z,bcf32fe1ec1c64fc1fccd8261d18134e7103a6ec,11,10,e4f2808639320a7e0d928b0ef88cf2a0a6057893 ba57d7876c39da291099725715e2f0b008cf699d 76932e178d5db73c8108cd853872c21ae7aa987f 3d17c404fb9c852e0981d3fdacf876e23bf82394 8896d7f3fc067031f7157a7fc525d9d661379224 ffe4496f4702407183101389fa885909482d8a80 10f095b984cb49a32bacde893457d2f9e491f392 eb440dc1aac6b020dc23825f3846e57d733c3543 aa67e7451ab48c6966236535cb8304bf9e1d573d ce2d84e4bbea2fe45a4073a1eb07a3a2cd63b6e6,,Treat warnings as errors on release mode,- Treat warnings as errors on release mode by default  - Remove `DART_TREAT_WARNINGS_AS_ERRORS` option  - Fix compile warnings with GCC 11.2    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1632,2021-12-22T03:29:49Z,2021-12-22T16:42:59Z,True,2021-12-22T16:42:59Z,3ad67190ee296c1aee13be4d8c667615dea47f08,7,4,37063ecb09145ee541762b9bd6674b7298c4c217 ea019083529f71ffe7ffec0418a6b8eeabb30157 abbae33de3abdba96a5305cfdc09935141315dd0 9ac9f5a25ce4ea232e98a93441858c431c8f5fb5,,Revert 1629 revive DART_TREAT_WARNINGS_AS_ERRORS,none
dartsim/dart,1634,2021-12-23T10:09:30Z,2021-12-23T16:31:23Z,True,2021-12-23T16:31:23Z,627f71e9b15f35542c88d645151f468ed447ff4a,11,2,9ec8a49494d9a90dd847dd47359efc7e7a48f866 f4f44dada1e26e1439bac9a5d9e75fea906fd82c,,Add Castable class,Add `Castable` class  a CRTP base class that provides an interface for easily casting to the derived types    ***    #### Before creating a pull request    - [x] Document new methods and classes  - [x] Format new code files using ClangFormat by running `make format`  - [x] Build with `-DDART_TREAT_WARNINGS_AS_ERRORS=ON` and resolve all the compile warnings    #### Before merging a pull request    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1633,2021-12-23T09:14:14Z,2021-12-23T19:53:25Z,True,2021-12-23T19:53:25Z,2507c72808af943ab9dc872f31cf2904f58ec815,14,1,18dcb525473d35ee4af00098d8c2f214a14b06af,,Add spdlog support as underlying logging framework,- Add new logging macros `DART_TRACE`  `DART_DEBUG`  `DART_INFO`  `DART_WARN`  `DART_ERROR`  `DART_FATAL` to replace `dtmsg`  `dtdbg`  `dtwarn`  `dterr` eventually  - Add `spdlog` as an optional dependency    ***    #### Before creating a pull request    - [x] Document new methods and classes  - [x] Format new code files using ClangFormat by running `make format`  - [x] Build with `-DDART_TREAT_WARNINGS_AS_ERRORS=ON` and resolve the build warnings    #### Before merging a pull request    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1636,2021-12-23T11:31:03Z,2021-12-23T21:59:01Z,True,2021-12-23T21:59:01Z,09935e53659e830d028001e6956092e7b027c293,10,1,fc60b2fa3cc96148f9ccf770574b6b245d69712e,,Add MemoryAllocator and CAllocator,Initial work for adding custom memory allocator:  - Add `MemoryAllocator` that is a base class for custom memory allocators  - Add `CAllocator` that is a simple wrapper of std::malloc and std::free    ***    #### Before creating a pull request    - [x] Document new methods and classes  - [x] Format new code files using ClangFormat by running `make format`  - [x] Build with `-DDART_TREAT_WARNINGS_AS_ERRORS=ON` and resolve build warnings    #### Before merging a pull request    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1637,2021-12-23T18:03:29Z,2021-12-24T00:04:04Z,True,2021-12-24T00:04:03Z,096bc8cf2f230ab670565a1e2e9c43fd9d6c10fe,6,1,25f8d846497b643496bb3263929e7083e94f694f,,Add std allocator compatible memory allocator wrapper,- Add `StlAllocator`  a `std::allocator` compatible memory allocator wrapper    ***    #### Before creating a pull request    - [x] Document new methods and classes  - [x] Format new code files using ClangFormat by running `make format`  - [x] Build with `-DDART_TREAT_WARNINGS_AS_ERRORS=ON` and resolve all the compile warnings    #### Before merging a pull request    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1635,2021-12-23T10:58:12Z,2021-12-24T02:46:51Z,True,2021-12-24T02:46:50Z,8eb76884fc9cf400a99c62d44d643730b9c339b1,66,1,ba5c42d45fa5055d0a8ac25c6e3bd0fa4345ec18,,Clean up unit tests,This PR is an initial work for refactoring of the DART testing  including:    - Add `dart_build_tests()` to easily define tests  - Add subdirectories for unit test for each namespace (e.g.  `unittest/unit/common` and `unittest/unit/math`)  - Rename comprehensive test to integration test  - Move "unit" tests that test more than one namespace to integration tests    ***    #### Before creating a pull request    - [x] Document new methods and classes  - [x] Format new code files using ClangFormat by running `make format`  - [x] Build with `-DDART_TREAT_WARNINGS_AS_ERRORS=ON` and resolve build warnings    #### Before merging a pull request    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
dartsim/dart,1638,2021-12-24T03:59:07Z,2021-12-24T07:10:16Z,True,2021-12-24T07:10:16Z,a07d7a9ba757479f35ce09626e6aa026e73823e6,12,1,bb5834ba458aa42558658306bb6b05291ad44c50,,Add Stopwatch class to replace Timer,    ***    #### Before creating a pull request    - [x] Document new methods and classes  - [x] Format new code files using ClangFormat by running `make format`  - [x] Build with `-DDART_TREAT_WARNINGS_AS_ERRORS=ON` and resolve all the compile warnings    #### Before merging a pull request    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1639,2021-12-24T04:55:04Z,2021-12-24T07:11:36Z,True,2021-12-24T07:11:36Z,4ec3e28629e6981e72c3c291922993beca60e66f,17,2,5b6bcddcfe7c9cc35e614241f0b22f696fcf1009 fa78bc3fcd72fd1ee45229acec81fee753cb7982,,Add FreeListAllocator class,    ***    #### Before creating a pull request    - [x] Document new methods and classes  - [x] Format new code files using ClangFormat by running `make format`  - [x] Build with `-DDART_TREAT_WARNINGS_AS_ERRORS=ON` and resolve all the compile warnings    #### Before merging a pull request    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change  
dartsim/dart,1640,2021-12-24T16:10:59Z,2021-12-24T16:11:06Z,True,2021-12-24T16:11:06Z,261e28ce34d58e4227bd093d0f3e4f3b764a2072,1,1,d8647708dc296fd4b9edb6db95f19682ed1c30bb,,Use fclConfig cmake,resolves #736     ***    #### Before creating a pull request    - [ ] Document new methods and classes  - [ ] Format new code files using ClangFormat by running `make format`  - [ ] Build with `-DDART_TREAT_WARNINGS_AS_ERRORS=ON` and resolve all the compile warnings    #### Before merging a pull request    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change  
