Project,PNumber,CreatedAt,ClosedAt,isMerged,MergedAt,MergedCommit,nFiles,nCommits,Commits,Labels,Title,Body
PX4/PX4-SITL_gazebo,1,2016-01-08T14:25:06Z,2016-01-08T14:26:16Z,True,2016-01-08T14:26:16Z,11e4bdf3e18bb753e01a0ca7645f91e603415a75,2,2,a22a78161cfc86e80b8383430d7247da6d4f6796 ac0175be66cf0a7cf8ce2a60f5e155725aaa1a74,,Tailsitter fix,
PX4/PX4-SITL_gazebo,2,2016-01-08T18:09:27Z,2016-01-08T18:28:44Z,True,2016-01-08T18:28:44Z,f3bc1b6e260526bcd6d52ea608306e7805a9859d,2,2,c58e029f74f54ea7b744f429fabcd267abf1d225 0ffcd013cae0d17bab02325291a8d437f6aceea3,,Tailsitter doing nice transition,
PX4/PX4-SITL_gazebo,4,2016-01-08T20:20:47Z,2016-01-09T17:43:25Z,True,2016-01-09T17:43:25Z,51048d29b318f794fd51a631a25511f72268c7da,1,1,b7e7eaed531c1b62de403073ba29270f4f9e8a61,,mavlink_interface remove fixedwing hack,This hack made Gazebo for MC unusable. I hardcoded fixedwing to false. 
PX4/PX4-SITL_gazebo,5,2016-01-09T22:05:32Z,2016-01-09T22:42:17Z,True,2016-01-09T22:42:17Z,a4f750849a199b1a9b63f1a2688b716046add6e8,1,1,20a8978a66c04094bb438a11ce192647bba14203,,mavlink_interface fix GPS not initializing,If no motor commands were sent  GPS would never initialize. 
PX4/PX4-SITL_gazebo,6,2016-01-10T23:45:48Z,2016-01-16T13:30:52Z,True,2016-01-16T13:30:52Z,0b585e161c33c2c93d168415e7939df7de738bea,1,1,94baa8715cdc1f2ec8aa7d410d40d85063c942a8,,Added dependency for ubuntu,
PX4/PX4-SITL_gazebo,7,2016-01-13T10:00:05Z,2016-02-07T10:46:03Z,True,2016-02-07T10:46:03Z,none,14,11,0bba3ea0fa78f0678f8f31813a8297e01f6bec6f f8d13b75aeb305c02a9741b4e5566cd03f07e1ba d5e14db741e2cf26b406ca12071f8bb91150d536 aff59307687baad2744478d53e0448b8a84836bf 9acd71a3ffced3be36f5ab0140747dc9163f80dd 30da191fb79a8c5bbef32937256af3055e7a49a9 5f4d7e0528f5b7f2c852c632af5df68b9b05cca7 4c1bb22517bfd1ce94381a39d0970f4d232c662f 88a90e2b5a31129d1374ffd31d8d15c3a3fec3bc 57a54ab73740f45f7313cc8179e21cc3b0d53b41 16f7fb37619e4af772a543f7bac62bef5126347b,,Standard vtol,Just for diff - needs validation locally on Mac OS and then if that passes a rebase. 
PX4/PX4-SITL_gazebo,3,2016-01-08T18:44:07Z,2016-01-08T18:44:12Z,True,2016-01-08T18:44:12Z,a87920f39df2fe841b7508a7489f786f47bed9f2,2,2,30da191fb79a8c5bbef32937256af3055e7a49a9 5f4d7e0528f5b7f2c852c632af5df68b9b05cca7,,Tailsitter stable,
PX4/PX4-SITL_gazebo,9,2016-02-07T10:56:40Z,2016-02-07T14:10:34Z,False,none,a2c9fb24b462c62bd830b242b80b7fd502f9b9bc,5,4,4e71b1978b08e53a63f40562c97ce7d5814bd4ea 935a518a7d1187686b608fc9314dc94b7ff4bbac 283aff5c5af84ef2fdccee477bdb79efe7cf5386 b28258f1ac0d66eddb2c8682b8bad3586c6c855e,,Add mag declination to SITL gazebo,This allows to simulate the environment more accurately for magnetometers.  @priseborough FYI 
PX4/PX4-SITL_gazebo,11,2016-02-28T15:22:03Z,2016-02-28T15:25:09Z,True,2016-02-28T15:25:09Z,4a96bf995e910326167cc81b3f0880e4a05a902f,1,1,ac842f8fdff270322fd37e0c24f76b212df60b33,,Build liftdrag on all platforms,Fixes https://github.com/PX4/Firmware/issues/3828 Linux systems also require this plugin 
PX4/PX4-SITL_gazebo,10,2016-02-07T14:38:49Z,2016-02-28T15:25:36Z,True,2016-02-28T15:25:36Z,f7dc2e1ade1fd93f57ddf4f8cfe3a09689a7d36b,1,1,ea8981455686c5a751ffe9f9d1cd2af9c5c171f9,,GPS AMSL altitude,This fixes the simulated altitude to proper real coordinates. 
PX4/PX4-SITL_gazebo,12,2016-03-04T02:41:01Z,2016-03-04T09:12:01Z,True,2016-03-04T09:12:01Z,bd40ab527dd752a628e7841876b8bad12450fbd1,2,1,2ce086fc0512b8a0b82320ccb3cfb7ef35bfadd7,,plugins use std dynamic_pointer_cast rather than boost,prevents compilation failures like:  ``` /Users/liam/code/3dr/px4upstream/Firmware/Tools/sitl_gazebo/src/gazebo_opticalFlow_plugin.cpp:59:5: error: no matching function for call to 'dynamic_pointer_cast'     boost::dynamic_pointer_cast<sensors::CameraSensor>(_sensor);     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ /usr/local/include/boost/smart_ptr/shared_ptr.hpp:848:42: note: candidate template ignored: could not match 'boost::shared_ptr' against 'std::__1::shared_ptr' template<class T  class U> shared_ptr<T> dynamic_pointer_cast( shared_ptr<U> const & r ) BOOST_NOEXCEPT                                          ^ ```  which suggests boost::shared_ptr cannot be converted to std::shared_ptr in this case  Compiler is  ``` liam@drungus sitl_gazebo (master *)$ c++ --version Apple LLVM version 7.0.2 (clang-700.1.81) Target: x86_64-apple-darwin15.3.0 Thread model: posix ```  and boost version is 1.59.0 
PX4/PX4-SITL_gazebo,8,2016-02-07T10:55:32Z,2016-03-12T10:36:12Z,False,none,5b3f2c8abcec6927fe0b1d034bf81365fa62b62c,10,1,ffc4885097e71e4b280796b8860ad649239f0b67,,added sun and ground model to repo,@tumbili We should work out how / if we get this in. 
PX4/PX4-SITL_gazebo,17,2016-03-16T22:02:09Z,2016-03-17T09:20:54Z,True,2016-03-17T09:20:54Z,5b43a35b4e915dcdce8e7e1790f329a7c488c633,1,1,4ea8f8daec559d7911c910d94d7812f5feebfe9f,,BugFix GPS update rate ,Old bug("gps_update_interval_" being redeclared caused it to be zero in other functions). Prevents GPS message from being sent every iteration of sim update. Now verified to only send GPS data at 5Hz. 
PX4/PX4-SITL_gazebo,14,2016-03-12T20:23:09Z,2016-04-06T03:23:30Z,False,none,0785ca32ac0fe660a5067fa8fcb5c71ce1f9c3f9,3,3,ba00aeb833f5cda02e45fafe87f621620da1936b d4903a76d428214e965176a6211ac757b64fc100 b046657add0b90f1eea15c001f5d1268ad3ce6b2,,Gazebo 7 build fixes,Hello   I'm using the SITL with Gazebo 7. These commits fix the compilation errors and warnings against Gazebo 7. 
PX4/PX4-SITL_gazebo,16,2016-03-15T00:03:15Z,2016-04-06T03:25:22Z,False,none,e6e19cf3ea6a112a888110e40beed1627bb05cda,1,1,928e32dd6650737f1986cbb3af5df30dc00dae19,,patched OGRE Paging compile error,fixes the following compile error:  /usr/local/include/OGRE/Terrain/OgreTerrainPaging.h:33:10: fatal error:        'OgrePagedWorldSection.h' file not found # include "OgrePagedWorldSection.h"  ```      ^ ```  1 error generated. 
PX4/PX4-SITL_gazebo,13,2016-03-12T20:09:54Z,2016-04-06T16:34:00Z,False,none,35b40992e2d107faf085f003a281e5f270600d18,1,5,ee8fcb680e690885ca9ca8deae44d6755423c8a0 15f211fd8bc51afa6ae74cb8b485baf22f7cd224 5bb66cdd4952359d19222319206f8d74776b3a2f 79679b137553ff8f3a78dba73720e059f2f96dd1 d81fd72e932963714e67d4cb219812a6024cd1c3,,CMakeLists improvements,Hello   Build is broken for me with the current CMakeLists. Here are a set of changes which improve the CMakeLists. Let me know if they work for you.  Regards 
PX4/PX4-SITL_gazebo,15,2016-03-12T20:50:05Z,2016-04-06T16:34:37Z,False,none,88679570ae8dcbccbbe510ee3c53f354f0d448d0,7,10,ee8fcb680e690885ca9ca8deae44d6755423c8a0 15f211fd8bc51afa6ae74cb8b485baf22f7cd224 5bb66cdd4952359d19222319206f8d74776b3a2f 79679b137553ff8f3a78dba73720e059f2f96dd1 51cf9da6fa59c60754014a3bf7c4bad0e5e41bd2 8accaeb58f13fea2ffeb7a3bde5cba87562369d7 b6562e8b8f995a4520bbc4eef5cc4438db84b98a ec6d7ba3a3b86eaf43dcd061b751d626d3169324 40b0cfc3c7ca7f7563115a5e4cd44a0080b1a398 b2f1585397d16d40db68186e080d3b9bb6b0d284,,Improvements,Hello   This is a PR which contains some other commits on top of the other two PRs. 
PX4/PX4-SITL_gazebo,23,2016-05-31T22:49:43Z,2016-06-01T06:06:19Z,True,2016-06-01T06:06:19Z,96f1169cf95e92e07c1edc2a15709be835e6d274,2,2,829209fa6a03fc6218ce93d432876925cf277294 cf9847f358db1be40134e4404aae0c4ec069e126,,reposition plane and standard_vtol model above ground plane Add params to stabilize contacts prevent constant contact constraint addition and removal with ground plane ,
PX4/PX4-SITL_gazebo,24,2016-06-01T15:47:36Z,2016-06-01T15:52:31Z,True,2016-06-01T15:52:31Z,11534ca609f4aa4fbbb5e60f307378bf6fc28d3d,1,1,b58a127bab5e3bea9d1a50e532e54cb184d0c9bc,,slow yaw fix,change back to old values 
PX4/PX4-SITL_gazebo,25,2016-06-02T04:43:10Z,2016-06-02T04:43:28Z,True,2016-06-02T04:43:28Z,e929eb4af063800bb772466b5561bb5be12cd81e,7,1,a503229423906a75d5724aff1999930b834ec91c,,absolute path for gz topic names,
PX4/PX4-SITL_gazebo,26,2016-06-03T09:46:45Z,2016-06-03T09:48:41Z,True,2016-06-03T09:48:41Z,a47b05ce90ce3d7686a74b1a60faab4d837e1556,1,1,1e169c84033d440c6fa514674f5da05fe7474a2d,enhancement,cmake don t show deprecated warnings,This gets rid of the compile warnings for me on Ubuntu 15.10.  ``` [ 95%] Linking CXX shared library librotors_gazebo_motor_model.so [ 95%] Built target rotors_gazebo_motor_model In file included from /usr/include/eigen3/Eigen/Core:276:0                   from /usr/include/eigen3/Eigen/Dense:1                   from /home/julianoes/src/Firmware/Tools/sitl_gazebo/include/common.h:22                   from /home/julianoes/src/Firmware/Tools/sitl_gazebo/include/gazebo_multirotor_base_plugin.h:29                   from /home/julianoes/src/Firmware/Tools/sitl_gazebo/src/gazebo_multirotor_base_plugin.cpp:21: /usr/include/eigen3/Eigen/src/Core/Functors.h:973:28: warning: ‘template<class _Operation> class std::binder2nd’ is deprecated [-Wdeprecated-declarations]  struct functor_traits<std::binder2nd<T> > ``` 
PX4/PX4-SITL_gazebo,27,2016-06-03T12:59:41Z,2016-06-08T08:55:25Z,True,2016-06-08T08:55:25Z,33342fa4bba54486109149c39284cb0e959c82a0,1,1,33342fa4bba54486109149c39284cb0e959c82a0,enhancement,multirotor_base_plugin remove printf,Minus one printf. 
PX4/PX4-SITL_gazebo,28,2016-06-17T23:55:52Z,2016-07-08T06:52:52Z,False,none,63068933ed6cc48a35a92926c9faec3f74e9e2c1,8,27,a503229423906a75d5724aff1999930b834ec91c ea88b2fc9e3e261d6c65746af5395bd11b2b5806 25688a07a5f0a21cfd40976f2c463fe9592a587e 8d298e67bff7a1398fc2fcf7675036ddda674aea d456a3b50c2090d77b3b91f383efb2f99d3e84e2 4d46b200d9714eea4b5dd281ade9d9403d6ccbce e5dd206c160fa78e9539dec0403e655f982012bd a1c4c6446e2297817a8c44b2b3cdd7aeb6fd4ce1 285d7a23f6b23a9d8cd926f53a3a5964827e4892 1c182680ea730658ab577690d7e9ef0fa6509e0a 0afbc7b0a18707d52488722916206e8376779444 995f5c39d9a5f26979bd05b6a379bcf810b04860 322af814cfc109bd47065d3a03eaa2bac8db5bc7 737122e0349b1c5325a37466625ef514ed8f1fe0 3a4c8c96bf162d84847ec4c70fd9fde2adb2d09e 5183d97fa13a92b7fce45a9fd7fb234dd57dcd6d cfe3f16b60ce29dc8a54086fa0faba9f9d092106 13f5540c800f57c15346bb1d62937b4c9bbc191b 5646e7ded119dc50757778c87e485f6a5f1cb820 aa171a33908d7c88dfdc750cc6ed78d31097e039 d638a5ad808ffb654378d030161ed6ad63d9db35 338286d2ee1f4fd95fac68baaec1d611bfda2639 6a7c3b981cbba16df3eb88c0a30bcdbe68d56d00 e9db7636d32c12c06dd6cfc6527002bc7e081bd5 a04efb54e55961582c5caf2bfe04ccaec1b53576 b3a9d264d74dab6b5b881d4556799f278424ab8f eaa4796203c4c53ef244e818d0459f55f06d3650,,John testing,
PX4/PX4-SITL_gazebo,32,2016-07-24T15:17:26Z,2016-07-24T15:42:12Z,True,2016-07-24T15:42:12Z,0e3e246f9e00ab2281721b72b0ab934a066148f3,99,1,14147a7a38630c9ead783efcaa79ca9093e721a7,,Fix optical flow sim and add packaging,Fix optical flow sim and add packaging 
PX4/PX4-SITL_gazebo,31,2016-07-16T02:39:43Z,2016-07-24T22:07:30Z,False,none,6c0b2c29aacb81c124f2a00eb9d653f73500379e,98,15,b9b2679eb44b509eb67581470f4118fe50b3548c e6dbf8addd5ecf039099b45e0f13dd7197ff09d0 275dddcaaabcd560d4591b12443637d55dd308b2 60c3caecaef53d4a6d203da6bc2f170b751cad02 aea187dd4392dc70b2339f694eb255b626b3b186 5de302474c6547c99db6c8a34bab8f55c14732f1 b153bbf66d8b779408d9bff7ffd2e8ae690f9485 8547dedfcd910d8ccc42df109961655da0e17bee 05217a0e7a3226efe542684dc3d80a3284d77046 4647c3ba673f92705f3e1435034a71a009fff000 77fab13d8cca5cfde3d26967922fc5626fffb64d bfeed7c48fd20a02af56b3d0f9a986db640cb2fc aeaca4c304d5d56d0cf6b757b41ae85bf258738b 7e835ed4990be45000975092a7fc54847f523173 d196b1cc64dbe78e78733a40ac4d822b42454667,,Package improvements,- adds support for install - adds support for packaging - adds BSD license - adds sdf generation call on build 
PX4/PX4-SITL_gazebo,33,2016-08-02T20:45:49Z,2016-08-02T22:51:45Z,True,2016-08-02T22:51:45Z,d03d8356c54c6321278273a7afaba76ace454372,2,1,fad45fa8f497239f1d3786ec949d0366371cb64c,,add option to configure mavlink address,Add another option to specify the address of the mavlink connection. This enables to connect to a port on a different machine in order to scale the simulation beyond what can be run on a single machine. The default value `INADDR_ANY` maintains the current behavior. 
PX4/PX4-SITL_gazebo,34,2016-08-11T02:07:49Z,2016-08-11T06:28:09Z,False,none,dbf2de0b559b8d9f082250290475fff20f212044,1,1,9a639331a3af02e0e37a324ffcf9bf325e5a3eca,,LiftDragPlugin remove version requirement,As discussed here. https://github.com/PX4/Firmware/issues/5078#issuecomment-238095159 
PX4/PX4-SITL_gazebo,36,2016-08-23T20:21:45Z,2016-09-01T20:07:19Z,True,2016-09-01T20:07:19Z,87e5b5e0739458ef6fc1b0aa4adb1951a07130f9,20,68,a503229423906a75d5724aff1999930b834ec91c ea88b2fc9e3e261d6c65746af5395bd11b2b5806 25688a07a5f0a21cfd40976f2c463fe9592a587e 8d298e67bff7a1398fc2fcf7675036ddda674aea d456a3b50c2090d77b3b91f383efb2f99d3e84e2 4d46b200d9714eea4b5dd281ade9d9403d6ccbce e5dd206c160fa78e9539dec0403e655f982012bd a1c4c6446e2297817a8c44b2b3cdd7aeb6fd4ce1 285d7a23f6b23a9d8cd926f53a3a5964827e4892 1c182680ea730658ab577690d7e9ef0fa6509e0a 0afbc7b0a18707d52488722916206e8376779444 995f5c39d9a5f26979bd05b6a379bcf810b04860 322af814cfc109bd47065d3a03eaa2bac8db5bc7 737122e0349b1c5325a37466625ef514ed8f1fe0 3a4c8c96bf162d84847ec4c70fd9fde2adb2d09e 5183d97fa13a92b7fce45a9fd7fb234dd57dcd6d cfe3f16b60ce29dc8a54086fa0faba9f9d092106 13f5540c800f57c15346bb1d62937b4c9bbc191b 5646e7ded119dc50757778c87e485f6a5f1cb820 aa171a33908d7c88dfdc750cc6ed78d31097e039 d638a5ad808ffb654378d030161ed6ad63d9db35 338286d2ee1f4fd95fac68baaec1d611bfda2639 6a7c3b981cbba16df3eb88c0a30bcdbe68d56d00 e9db7636d32c12c06dd6cfc6527002bc7e081bd5 a04efb54e55961582c5caf2bfe04ccaec1b53576 b3a9d264d74dab6b5b881d4556799f278424ab8f eaa4796203c4c53ef244e818d0459f55f06d3650 4658e205591f02199743940d651ee6d69b019364 33c2baeb93245342f6f0e982d3a387a3150c25ff 3a7183b950237fc71ffbbbf5aab1c2beee228008 c69d60f5c1494c382f2f3d0ac9e6d30be5771bf0 648b18b3bd4ac6e2af38809ef22fa2da74becbb2 c2e2484e694a107341aec9f55c39dd3c585bba2c 6b492e24e03ac96fa6392835f2faaad4d2058934 f571d34b0eca9ebad2667be5864f6e77886463f4 1e56e2fbea87c0c27fdcf11d54db10aaf6ef301d f42dddc5c0b9e6873d7b2ae7be184899dad06a8c 1e0b099f7e9a609742281e59bd90e315eb716691 799a1f76391178847478b1ed2d8178c3ebfc8915 bb0b45f8c8eb853d10c91f7d5fe108444f30c5b8 5a32f2c363e0cc4e87264cf86e92f29a6804848d f2844fd34d72ed834016188a8f3847df79867ed1 90639ed9fbfd322d82a9993e10f272998f87bbe9 cadaf99c0cff7d2b72d899776bb4fdd0a472c969 7262a458610dbe1efe4801f3e6fa37315568a38e 6a41df8281e0b3a7435796aabc1b66b39789be45 5b0941bb8d3fc3981e9d536ca9b719eddcacaf24 af4314a157fb91263c479605679194e3cb3bbc82 c56f56fe8dec7f27a67e40783ff2a724d15fabe3 e9cc782cf46f991ec302b37dd53800c78ff9c0a9 9a0f3d1a5c73dcd254b830ac6ea95337b66249f5 f55713a4f5bdaf66d0fe7f101a2a50fc0bb8a879 44b3f54997e64363e2c48b85552f362cdd74613a 892363962f81882fc86b7bc2c72237da7dadd40b 535cbf9af9bea62b850db78a41c3e31add0ba8ef bf70831f667b5410627eb494f31c935e339298fe 434098b1e41f1849fef976a46eb1d443d8e1966c e2bc620e10031f41656d9a5f1c7f87f5d41a2a24 32f3112aeb4d88598b54e5321c807d5249e3f913 3e27c6efb7767d442b7b322f94b6cfc08281e841 cae926711fae95af0a7c016bff47b8252df6604b 09e7e4f4331c49ee9ecf336bca909e19f7ef4f45 89fe6fef3467e0c224901d895cf0287bbd99e646 08ed26364acbf5694d3e0eb8716f83b4ec2c8c24 f649538793d3ca66b001084bb0d9baecdae8fee4 d7a7fcd01061ca92470b73d8503eb365fd194813 414d2d4967d8caf60c4fd32027b8a5f555e260b3 87e5b5e0739458ef6fc1b0aa4adb1951a07130f9,,General Improvements to Gazebo SITL plugins,- Add Zephyr Delta Wing Model - Add more options for Multirotor models xacros - Gazebo Plugin updates   - implement generic gazebo_mavlink_interface plugin controller channel mapping   - allow pid joint control for gazebo_motor_model plugin   - add gazebo_gimbal_controller_plugin 
PX4/PX4-SITL_gazebo,38,2016-09-01T14:51:59Z,2016-09-01T20:07:19Z,True,2016-09-01T20:07:19Z,050ea17aa6168d4caf80ebab2555d92c24445b38,353,73,a503229423906a75d5724aff1999930b834ec91c ea88b2fc9e3e261d6c65746af5395bd11b2b5806 25688a07a5f0a21cfd40976f2c463fe9592a587e 8d298e67bff7a1398fc2fcf7675036ddda674aea d456a3b50c2090d77b3b91f383efb2f99d3e84e2 4d46b200d9714eea4b5dd281ade9d9403d6ccbce e5dd206c160fa78e9539dec0403e655f982012bd a1c4c6446e2297817a8c44b2b3cdd7aeb6fd4ce1 285d7a23f6b23a9d8cd926f53a3a5964827e4892 1c182680ea730658ab577690d7e9ef0fa6509e0a 0afbc7b0a18707d52488722916206e8376779444 995f5c39d9a5f26979bd05b6a379bcf810b04860 322af814cfc109bd47065d3a03eaa2bac8db5bc7 737122e0349b1c5325a37466625ef514ed8f1fe0 3a4c8c96bf162d84847ec4c70fd9fde2adb2d09e 5183d97fa13a92b7fce45a9fd7fb234dd57dcd6d cfe3f16b60ce29dc8a54086fa0faba9f9d092106 13f5540c800f57c15346bb1d62937b4c9bbc191b 5646e7ded119dc50757778c87e485f6a5f1cb820 aa171a33908d7c88dfdc750cc6ed78d31097e039 d638a5ad808ffb654378d030161ed6ad63d9db35 338286d2ee1f4fd95fac68baaec1d611bfda2639 6a7c3b981cbba16df3eb88c0a30bcdbe68d56d00 e9db7636d32c12c06dd6cfc6527002bc7e081bd5 a04efb54e55961582c5caf2bfe04ccaec1b53576 b3a9d264d74dab6b5b881d4556799f278424ab8f eaa4796203c4c53ef244e818d0459f55f06d3650 4658e205591f02199743940d651ee6d69b019364 33c2baeb93245342f6f0e982d3a387a3150c25ff 3a7183b950237fc71ffbbbf5aab1c2beee228008 c69d60f5c1494c382f2f3d0ac9e6d30be5771bf0 648b18b3bd4ac6e2af38809ef22fa2da74becbb2 c2e2484e694a107341aec9f55c39dd3c585bba2c 6b492e24e03ac96fa6392835f2faaad4d2058934 f571d34b0eca9ebad2667be5864f6e77886463f4 1e56e2fbea87c0c27fdcf11d54db10aaf6ef301d f42dddc5c0b9e6873d7b2ae7be184899dad06a8c 1e0b099f7e9a609742281e59bd90e315eb716691 799a1f76391178847478b1ed2d8178c3ebfc8915 bb0b45f8c8eb853d10c91f7d5fe108444f30c5b8 5a32f2c363e0cc4e87264cf86e92f29a6804848d f2844fd34d72ed834016188a8f3847df79867ed1 90639ed9fbfd322d82a9993e10f272998f87bbe9 cadaf99c0cff7d2b72d899776bb4fdd0a472c969 7262a458610dbe1efe4801f3e6fa37315568a38e 6a41df8281e0b3a7435796aabc1b66b39789be45 5b0941bb8d3fc3981e9d536ca9b719eddcacaf24 af4314a157fb91263c479605679194e3cb3bbc82 c56f56fe8dec7f27a67e40783ff2a724d15fabe3 e9cc782cf46f991ec302b37dd53800c78ff9c0a9 9a0f3d1a5c73dcd254b830ac6ea95337b66249f5 f55713a4f5bdaf66d0fe7f101a2a50fc0bb8a879 44b3f54997e64363e2c48b85552f362cdd74613a 892363962f81882fc86b7bc2c72237da7dadd40b 535cbf9af9bea62b850db78a41c3e31add0ba8ef bf70831f667b5410627eb494f31c935e339298fe 434098b1e41f1849fef976a46eb1d443d8e1966c e2bc620e10031f41656d9a5f1c7f87f5d41a2a24 32f3112aeb4d88598b54e5321c807d5249e3f913 3e27c6efb7767d442b7b322f94b6cfc08281e841 cae926711fae95af0a7c016bff47b8252df6604b 09e7e4f4331c49ee9ecf336bca909e19f7ef4f45 89fe6fef3467e0c224901d895cf0287bbd99e646 08ed26364acbf5694d3e0eb8716f83b4ec2c8c24 f649538793d3ca66b001084bb0d9baecdae8fee4 d7a7fcd01061ca92470b73d8503eb365fd194813 414d2d4967d8caf60c4fd32027b8a5f555e260b3 87e5b5e0739458ef6fc1b0aa4adb1951a07130f9 11f8c457407531e03ee37ba0f7cdd92ef1faba8f fa44d14c5521e0e9b6f91fbc03fff7e7791c1d1e e32e56f95710b6ad4bc0252adef5a1c834de4df5 49e78d163b71b2f49110fd656da0f6bd54ddac1d 050ea17aa6168d4caf80ebab2555d92c24445b38,,zephyr continued,@hsu I picked up your zephyr branch and continued the gimbal control  It also switches to the mavlink HIL_ACTUATOR_CONTROLS message to support 16 pwm's 
PX4/PX4-SITL_gazebo,18,2016-03-25T15:39:47Z,2016-09-01T20:13:12Z,False,none,569c2f5ffee8bdeb01a0a9fa9035d74e19cac118,1,1,c2f4fbca9d90a747535ffe7bc22190db86ed71c7,,PX4 Firmware 4076 Added support for setting initial GPS value based ,…on Gazebo world's spherical coordinates.  My editor also had some auto-formatting suggestions that I didn't disagree with. 
PX4/PX4-SITL_gazebo,39,2016-09-09T19:37:05Z,2016-09-09T20:03:07Z,False,none,dae94f4bb41890ef9e7bb0e88e006f25d9f3eb43,2,2,9bc9ff0335c44f7df078493a64aaf9733d02e8da e60d03e4fb382e63f59882dbbfb6bfe105a508e8,,Gimbal joint limits,Fix the problem where gimbal goes unstable when following commands are given:  ``` make posix_sitl_default  gazebo_typhoon_h480  commander takeoff vmount test yaw 90 ``` 
PX4/PX4-SITL_gazebo,43,2016-09-14T00:36:31Z,2016-09-14T13:39:36Z,True,2016-09-14T13:39:36Z,3e0157a1448dbc9406cbbb9aed309b7b31b5712e,1,1,3e0157a1448dbc9406cbbb9aed309b7b31b5712e,,CMakeLists txt Fix setting of CMAKE_CXX_FLAGS,Previous version with list append adds semicolons in the flags which is not accepted by the compiler leading to build failure 
PX4/PX4-SITL_gazebo,42,2016-09-10T19:30:40Z,2016-09-14T13:39:35Z,True,2016-09-14T13:39:35Z,078a6a0360a3675786b424fe01c6896fe03e35b8,1,1,078a6a0360a3675786b424fe01c6896fe03e35b8,,Magnetic field fix ,This aligns north in gazebo which is (ENU) and qgroundcontrol. 
PX4/PX4-SITL_gazebo,44,2016-09-17T06:08:36Z,2016-09-17T06:20:55Z,True,2016-09-17T06:20:55Z,848b3f997850c6e347e3bac08187502738552e8a,1,1,731f21590f967e43449effeb63502a01a1a56b64,,GPS ENU fix ,@bkueng I believe this is what is need to get GPS to work correctly and still follow the ENU gazebo convention. Coupled with the mag fix this should get everything working correctly.  ENU convention for gazebo is mentioned here  it is what all of the plugins like rviz_satellite expect  so useful not to break convention. It looks like we were using a North  West  Up coordinate frame  which is very odd.  http://answers.ros.org/question/236332/native-spherical-wgs84-coordinates/ 
PX4/PX4-SITL_gazebo,40,2016-09-09T21:17:10Z,2016-09-19T05:44:24Z,False,none,322ea40bededf1db9fc1e59d621314bdffe4d147,3,6,9bc9ff0335c44f7df078493a64aaf9733d02e8da e60d03e4fb382e63f59882dbbfb6bfe105a508e8 75a2b190b3af1457a827f4ac04eac22573bc7e83 a6d2a346b16f70fcb7266284c3a2145f2d64e552 2883cef3aa1fa59207c1844689acc3d55932b3ff 429dc0e5bae5e3ae81d0df1a21ea4099d974f41d,,Gimbal joint limits,Fix the problem where gimbal goes unstable when following commands are given:  ``` make posix_sitl_default  gazebo_typhoon_h480  commander takeoff vmount test yaw 90 ``` 
PX4/PX4-SITL_gazebo,46,2016-09-19T05:43:44Z,2016-09-19T05:46:09Z,True,2016-09-19T05:46:09Z,d6c12fb9e68608db2ad56f4ec6c74e5a491e17ee,3,4,037b4da6aba39774e5a5798a10d012e85a69629b d1bfba0bc9cb1af1e217fd8061739b75ca386b61 1e873e191d8ab6c350f64b7d171f449dc4459dbf d6c12fb9e68608db2ad56f4ec6c74e5a491e17ee,,Gimbal joint limits continued,Squashed & rebased version of #40. I also made sure the rotation direction matches PX4 convention. 
PX4/PX4-SITL_gazebo,52,2016-09-30T06:51:00Z,2016-09-30T07:02:56Z,True,2016-09-30T07:02:56Z,52fd98395f22561d4d6f3762396690fab3a880a0,1,2,57690c46b897e9ba8bbced51a8f2543d12006ac0 4c3943bfde56b30d7a0ea21220e9928331681489,,Readme update for Mac OS Linux install,This contains two changes for the README: - Linux has been set on Gazebo7 for a while now  see https://github.com/PX4/Devguide/pull/17. - An older protobuf version is needed on Mac  see https://github.com/PX4/Devguide/pull/45. 
PX4/PX4-SITL_gazebo,45,2016-09-17T15:38:02Z,2016-10-01T02:22:08Z,True,2016-10-01T02:22:08Z,968fb124113f93df0c74b5c6b7e0d417f9ec3666,8,3,df3ee0bc200ee43dc31b47d1c2eb194b1c9c49b9 7274c5ca533ccc084ed39da91525e1264a957001 92b1533f7fc81f8fb1174ad3d0b9b80b0db362a4,,Optical flow SAD code ported from PX4 Flow,This ports the sum of difference optical flow code that is actually running on the PX4/Flow to use in the gazebo simulation for optical flow. 
PX4/PX4-SITL_gazebo,53,2016-10-11T10:00:56Z,2016-10-11T22:31:52Z,True,2016-10-11T22:31:52Z,b41f8470afbccefd218f7d366141eef6c64546c6,2,3,0185f4d6f9649662b927f00204eaafdda75a00cb c900a449e9c7429d893e79dfe2b9e1a6cda17e56 44b4d12a38ece6da6809d668e5a8eda10a6ede63,bug,Fix Mac build,This fixes to issues: - Any protobuf above 2.5.0 seems ok: The protobuf > 3.0.0 seem to be defaulting to "proto"  so things stay compatible. - fix undefined reference on Mac: Somehow the symbol is not found on Mac. Commenting the calls out fixes the Mac build.  @jgoppert are you ok with this? 
PX4/PX4-SITL_gazebo,54,2016-10-14T10:04:15Z,2016-10-14T11:16:55Z,True,2016-10-14T11:16:55Z,a071ae1b41a357b4d1a3492ec644ee3e4e0bb3d1,1,1,9e66ea9c76bfb97e9690003c1a096fb47c652d34,,Fix 7 4 build,This closes https://github.com/PX4/Firmware/issues/5663. 
PX4/PX4-SITL_gazebo,55,2016-10-14T15:12:21Z,2016-10-14T17:21:03Z,True,2016-10-14T17:21:03Z,3f23cea031f658aaade8215edfa3d0e976b8af48,1,1,deefb20890ee13ebeecd86abf1499f2484b5bc04,,gazebo_gimbal_controller_plugin msg fix for 7 4,This fixes the error with Gazebo >= 7.4.  ``` [Msg] GimbalControllerPlugin::Init [Err] [Publisher.cc:96] EXCEPTION: Invalid message type ```  Addition to #54  fixes https://github.com/PX4/Firmware/issues/5663 again. 
PX4/PX4-SITL_gazebo,57,2016-10-21T15:19:09Z,2016-10-28T21:57:08Z,True,2016-10-28T21:57:08Z,7ee67ba0e4f0015631d730d665e3752adbdd2243,4,2,afabca3531a8c11107892670cef5b294231e8025 b9ed67482e940124133a281da963a8239e8b574c,,Use multirotor inputs from 0 to 1,Previously  the throttle sent from PX4 was in the range -1..1  however the positive range is now 0..1 which would allow for negative throttle levels e.g. for pusher motors or variable pitch.  This goes together with https://github.com/PX4/Firmware/pull/5716. 
PX4/PX4-SITL_gazebo,60,2016-11-15T08:07:26Z,2016-11-15T21:26:59Z,True,2016-11-15T21:26:59Z,a178491b38f7fa86bf8ffda552ed5a69a34844f7,5,5,4e8f3507989daddee752972cf3aa98d2ab8c9eb0 05341a074e546e51a54e49dcae643e453e4744f0 ddd88226cbcf789a788f6ae39d7c32c9ace98325 32e7e47cb38c27b1ce64090a8900666726bccb7d 9b624b8e9efcee8a07ca02f2e0b9e2eb766eee16,,Feature wind plugin,Ported wind_plugin from https://github.com/ethz-asl/rotors_simulator     This is must have for Acro mode debugging
PX4/PX4-SITL_gazebo,50,2016-09-28T12:54:54Z,2016-11-16T07:02:54Z,False,none,ebe0e53b2795299e94918dd047da6e62f15d67cf,10,7,3df92ba9957c371d8d21bf8d9eeab8d65364b28e c5ac564745971be0e5c499b8ffbc23c9d2420b10 37c193f32fe4ee62b89fc2473265a6ee4de3350d 7d56a02e17338064b0a57044200d02a22e605288 b941d5b890c63b78a18e503b1adfbe39eb41a63d e977da4985d2bf02b0ecb0b1954d048a703bc178 7685d6ed37aa20b26275de5feda18b2bad5bae76,,Geotagging plugin,This adds a camera plugin that writes images with a fixed interval and geotags.  needs the `exiftool` command to be installed. This PR includes #48  
PX4/PX4-SITL_gazebo,48,2016-09-22T08:32:49Z,2016-11-16T07:03:37Z,False,none,0fd1fdab0aeb421f64b8157aafbcd27be7621099,6,4,3df92ba9957c371d8d21bf8d9eeab8d65364b28e c5ac564745971be0e5c499b8ffbc23c9d2420b10 37c193f32fe4ee62b89fc2473265a6ee4de3350d 7d56a02e17338064b0a57044200d02a22e605288,,GStreamer camera plugin,This adds a GStreamer camera plugin  so that for example the gimbal camera can be viewed with QGC. Some remarks: - gstreamer is optional  if not found  the plugin will not be built - I added the plugin to the typhoon  but commented it  because it needs a lot of CPU and I don't think we need it enabled all the time (especially since gazebo also has a topic viewer) 
PX4/PX4-SITL_gazebo,58,2016-11-13T18:30:21Z,2016-11-15T21:27:59Z,True,2016-11-15T21:27:59Z,01b571ac18b6a71f438d9c261a83b18489e01fb6,1,1,24d75fe2188827dbd5147fd5aba1395c4ecb1d3a,,Fix warning on Mac,Clang doesn't seem to like an empty struct as much as gcc does.
PX4/PX4-SITL_gazebo,21,2016-04-09T11:36:45Z,2016-11-23T05:12:45Z,False,none,4ea10730dc6a7386541304f9ff1f711c3dfb733d,4,5,30d4524380d3d82c2e4f3cdc707d62da7a9af039 c17f9655e2cdddca04d2876203582093edfd4be8 11d7c932551327703fc4303c051056f8394a8751 3299761286a493d79946b4839d6ea540c30cddd2 126aa50dc88aa40a3b09b377fbc296b9c95e64b3,,Cmake cleanup,I'm breaking up the feature/gps into smaller parts. 
PX4/PX4-SITL_gazebo,47,2016-09-21T06:04:14Z,2016-11-28T17:03:58Z,True,2016-11-28T17:03:58Z,2ed165a7db2b660a8fcc18c2fe30b7a233dd4d71,1,1,7e260dd016a79a03b80c4d9377d04dfb523d49fb,,mavlink send mavlink_hil_state_quaternion_t ground truth message,I thought since jmavsim has ground truth  it would be cool if gazebo had it as well.  fyi @kd0aij 
PX4/PX4-SITL_gazebo,61,2016-11-29T07:41:40Z,2016-11-29T10:05:50Z,True,2016-11-29T10:05:50Z,0cd58f7d85c62d3753b79028138e3bb87edb2329,2,1,b1194f347ef6ed0ac4a03d4b1f75ed02d713dda3,,add wind to plane and standard_vtol,@AndreasAntener FYI
PX4/PX4-SITL_gazebo,64,2016-12-03T14:51:01Z,2016-12-03T15:10:32Z,True,2016-12-03T15:10:32Z,0e4c729c6861f6f655a1c2c9c33ce01202784d1b,1,1,5365fd4345bceae2a789cfccb91f297c6e56f99b,,Disable gstreamer plugin by default ,Since the CI server doesn't support gstreamer at this time  I added an option to disable gstreamer support by default.
PX4/PX4-SITL_gazebo,62,2016-12-02T04:06:18Z,2016-12-03T15:56:54Z,True,2016-12-03T15:56:54Z,a8f57664c7bf6f4d8ab7a0c01d65181455151ca0,2,1,c94d6a7fedaf7923544d09b7cde27f6847501d0a,,Fix for ground truth,This is a hardcore rewrite of the the simulated attitude for sensors and ground truth to be very explicit about which fame vectors are in and follow common conventions used in the firmware. I have verified all of the ground truths match via plots with px4tools and have flown this in SITL.    ![image](https://cloud.githubusercontent.com/assets/473772/20822664/a84ebc00-b81a-11e6-80ad-7a16beb2204a.png)  
PX4/PX4-SITL_gazebo,65,2016-12-06T17:06:39Z,2016-12-06T17:08:17Z,True,2016-12-06T17:08:17Z,3a4c503728c0f28cc54f69e41b5e3ba25c4b4648,1,1,67e654cf8a8008df258ee1f254dbe7aaf3ed2f85,,Take into account imu link rotation fixes bug with typhoon ,@julianoes This should fix the issue with the typhoon.
PX4/PX4-SITL_gazebo,66,2016-12-07T14:49:46Z,2016-12-07T14:51:24Z,True,2016-12-07T14:51:24Z,1cce1971496abc1a54806417d33afdfd5c68a7fb,1,1,545bc1225b30183045a4442d9432a280fb08712e,,typhoon_h480 sdf raise motor thrust,Tested in SITL. Gets us stable position control.    For the problems before  see: http://logs.px4.io/plot_app?log=d7dc9029-9dbb-4e51-8569-3961bd9f1f46    @LorenzMeier please review and merge.
PX4/PX4-SITL_gazebo,22,2016-04-09T13:05:02Z,2016-12-07T15:00:19Z,False,none,cf55b38c3c850cebce767280473e31a9b8bee3b3,11,1,6cdee20535fbce187978675f97e4dbd2c62b88b7,,Remove slowdown parameter,I don't understand why we need this slowdown factor. Signed-off-by: Nicolae Rosia nicolae.rosia@gmail.com 
PX4/PX4-SITL_gazebo,69,2016-12-20T19:33:54Z,2016-12-21T08:50:17Z,True,2016-12-21T08:50:17Z,b5e0c3defdd2cc13571ebee1a66bb6f57705288f,1,1,074e7506b84475e2363e80cdc127c76aac15758d,,Removed extra component from airspeed should just be body x component ,When testing IEKF with VTOL I've been running into this in my airspeed residual. Can anyone else check me here and confirm that body.z shouldn't be added like that to the dynamics pressure velocity. @priseborough @dagar @LorenzMeier.
PX4/PX4-SITL_gazebo,70,2016-12-24T18:40:22Z,2016-12-24T20:40:55Z,True,2016-12-24T20:40:55Z,8aaaa33da1ac975e1e5e3a7e4417d1a8bed0969a,1,1,50e92c03c80983f33b0b38382076b33a0c6881e7,,Set lidar orienation to roll 180 ,This sets the lidar orientation to match the firmware drivers.
PX4/PX4-SITL_gazebo,71,2016-12-27T08:53:31Z,2016-12-27T14:30:25Z,True,2016-12-27T14:30:25Z,62c24e39956c58eaeb2e427cb5fe91211ddbb2c2,10,10,63700a4dbb7e168f9ab658925257b4414a6a9606 1616b9b2293ac517064546858af7f8e2ce93e8d8 cb67560772bb2320da3172d640694583dd66db00 b876929325f20d290767c4ac1cd51a1b3a6540c8 4f56caa452b0bee8531ab354462f44528becd799 1fd02a5f7236ff17f210c184ed89620a457259e1 177a22bd16cbc4c6c9d7dca3d803f9564db27086 01c1e03e5ee8396ba8c0a1e8bd8595cd970ada8b a84aae96d4fb2812fe6965a80633631b5fa77701 4c5ab4ca2b7c22443f3a96cff2045c5d8fc1d4d1,,submodule optical flow,These are the changes to include the new optical flow repo in sitl gazebo. There are two flow implementations: klt_feature_tracker/opencv and px4flow.  I have also changed the camera image format to avoid unnecessary format changes.  The goal is to use this flow repo where ever flow calculations are needed and to avoid duplicated code. Also other implementations can (and hopefully will) be added in the future. 
PX4/PX4-SITL_gazebo,72,2016-12-28T14:32:08Z,2016-12-28T14:51:38Z,True,2016-12-28T14:51:38Z,daaa8f0f96fd704ced0a14af263290c5d1054989,1,1,22fe9c9e8e3f866b9aaed57fe08ecbc2ddfd5766,,fix flow xgyro direction,The direction of the flow xgyro was wrong  This will fix https://github.com/PX4/Firmware/issues/5985
PX4/PX4-SITL_gazebo,73,2017-01-02T05:30:02Z,2017-01-03T21:07:32Z,False,none,1c6766416169488cd2ff0793f2b91bf2852f77eb,1,2,643d42cf436265abbdeda2917834f59c99768b42 f32c30f61ab2d204f75ef18e9edd6491599a237a,,Fix typo in discrete random walk noise for imu ,I believe there is a typo  you can confirm by comparing to Maybeck (vol. 1 pg 173)    ```  * Maybeck: Qd = Q*/(2*T) * [ 1 - e^(-2*dt/T)]  * Our equation: Qd = Q*T/2 * [ 1 - e^(-2*dt/T)]  ```    I discovered this through Allan Variance plots and the original plots were highly impacted by random walk. We were effectively multiplying the random walk standard deviation by the correlation time constant (300).    You can see plots of the comparison here from running each for 10 minutes:    https://github.com/jgoppert/iekf_analysis/blob/master/Noise%20Fix.ipynb    @Stifael please check me here.
PX4/PX4-SITL_gazebo,74,2017-01-03T21:09:58Z,2017-01-03T23:04:55Z,True,2017-01-03T23:04:55Z,47a0b25371868033b9ee95f9398489ebf9ee5ed7,1,1,8bde8665578f9fd353fe229c04dbf272115b5a83,,Fixed typo in gyro bias random walk name ,This fixes a gazebo param name issue. All of the gyro bias random walk values were being set to default and the existing statements had no effect.
PX4/PX4-SITL_gazebo,75,2017-01-06T15:44:48Z,2017-01-06T15:48:31Z,True,2017-01-06T15:48:31Z,6a4b8822f92dc1760408f400d7dc88bcc815c322,6,1,64e52f13206f9c4d7b8d42e824dafae9a30592c3,,iris world world with uneven ground,In order to better test landing and takeoff  it would be beneficial to have a default world with uneven ground.
PX4/PX4-SITL_gazebo,76,2017-01-09T15:38:05Z,2017-01-09T16:35:16Z,True,2017-01-09T16:35:16Z,2cffec9ea866987f5832a001bcc270900e91f0e6,1,1,be8c67ad9f54cfbadd074a72af3110552faacc1c,,update OpticalFlow submodule,This will improve the px4flow calculation method. I did e logical error when porting the code from px4flow... It used a histogram filter instead of an average (like px4flow)
PX4/PX4-SITL_gazebo,77,2017-01-10T09:41:21Z,2017-01-10T09:57:22Z,True,2017-01-10T09:57:22Z,c65793654ef6c5bf66aa5ff72b453d16f744d8d2,1,1,c65793654ef6c5bf66aa5ff72b453d16f744d8d2,,update submodule Optical flow fixed cmake policy warning ,@bkueng I fixed the issue https://github.com/PX4/OpticalFlow/issues/1. Can you please confirm?
PX4/PX4-SITL_gazebo,79,2017-01-12T15:25:36Z,2017-01-12T18:56:29Z,True,2017-01-12T18:56:28Z,3512ec89592feb6b14c791a09cc3476146f0de24,3,1,ebbb14d4e50be7841af7b7eeedacd5e484417102,,set flow ouput rate update submodule and adaptions for it,
PX4/PX4-SITL_gazebo,87,2017-02-10T18:36:06Z,2017-02-13T20:39:45Z,True,2017-02-13T20:39:45Z,04cdc16910f193d5c97d8651db1f2adf2231fbe7,5,4,ab6d6a30a15eb8cb92e7a78019956b19ec97085e bb75eb448384166445564a0a996877a930479df0 f7ceff775c81b02c9da422156b9a2095f14b5b1c 55320b2f61ac87f592df5144a20d99148443b033,,Add iris with rplidar ,Add rplidar model.
PX4/PX4-SITL_gazebo,84,2017-02-02T21:58:20Z,2017-02-14T07:59:48Z,False,none,3ce006e8d8b814a1c2622647c33497542bc435f9,1,1,825e90813ef16d6d9a48cfe984f5ee5f9cf2bad4,,Fix typo in OpticalFlow package,
PX4/PX4-SITL_gazebo,90,2017-02-15T14:28:05Z,2017-02-15T20:55:08Z,True,2017-02-15T20:55:08Z,f9a2e54c1a86f014297267daa9565a31a2f75fe4,1,2,9306fa524ccf59ede30b82ec0716b5af644c5143 c3f44c347a2a7b107afc12ed8d74169f3cbab9f2,,Add env vars to set custom home location,This adds the environment variables PX4_HOME_LAT  PX4_HOME_LON   and PX4_HOME_ALT to specify a custom home/takeoff location.    @bkueng please review  @LorenzMeier objections?
PX4/PX4-SITL_gazebo,92,2017-03-11T21:23:39Z,2017-03-13T07:19:27Z,True,2017-03-13T07:19:27Z,619e7aded56d783a178226afd089bdfc2c348eec,2,1,f6a116d7741e70af729f2513ffbf9cc036bd291f,,Updated optical flow repo,@ChristophTobler Can you review and merge?
PX4/PX4-SITL_gazebo,83,2017-01-24T21:22:24Z,2017-03-13T13:18:18Z,True,2017-03-13T13:18:18Z,1886ee738f94824aae731876601e58935c649860,1,1,bf69236543a86aa3fce9764603e3c2520555eb44,,Fix use of arguments in iris_base xacro,
PX4/PX4-SITL_gazebo,85,2017-02-06T19:55:08Z,2017-03-13T13:27:19Z,True,2017-03-13T13:27:19Z,dab68eb802af1921ef64565150d6bacbdba50da6,2,1,c1a7590e517b83ac3308409e68a8fd3813368975,,MAVLINK_HIL_GPS fixed CoG 0 360 angle wrap bug,The MAVLINK_HIL_GPS Course-over-Ground (cog) field  is a uint16_t expressed in hundredth's of degrees in  the range [0  360).    The previous code was using the output of std::atan2  to populate the field  which outputs angles from [-pi  pi]   and it was not accounting for the necessary shift in  the interval to an unsigned representation.    The new code  * adds a helper function to common.h to  output a gazebo::math::Angle in degrees from 0-360  and  * makes use of the helper function when packing the  MAVLINK_HIL_GPS message in gazebo_mavlink_interface.cpp.    An include header is also added to common.h.  
PX4/PX4-SITL_gazebo,30,2016-07-14T02:57:14Z,2016-08-01T19:28:11Z,True,2016-08-01T19:28:11Z,7d7a26d968d58d0e66cb6bdad5ac41a513ec181a,8,2,c3c145a988f6a5e97b0ec6d795bcb372edee4bd9 fa6e55c83b149ea445f4982717e84347345a9325,,add support for testing multiple autopilots simultaneously in SITL,This changes the mavlink udp port to be optionally parameterized in the sdf. This allows for multiple instances of the plugin to be loaded and not be on the same channel.  To use this  the models need this added to their sdf in the `<plugin name='mavlink_interface' filename='librotors_gazebo_mavlink_interface.so'>` section:  ``` <mavlink_udp_port>14660</mavlink_udp_port> <mavlink_udp_port_2>14656</mavlink_udp_port_2> ```  For anyone not setting those parameters it should have no effect. The default values are moved to static constants defined in the header instead of `#define` in the source.  
PX4/PX4-SITL_gazebo,91,2017-02-20T20:20:02Z,2017-04-29T17:12:46Z,True,2017-04-29T17:12:46Z,9f613eb646d99396f1082d25747293e86c70fc4c,23,8,87d5d7dd71347f47359180681f42175edc2da924 0a18e496e94600135fbd517f60a9196d46380822 5c597a949a91a78e60723d52978185f969582dc2 b67649f935ed87601fc3038d31347bbbec1e0ff2 379ce69834d5c2d570f7dfd5f13ae03169773c1d 8cc6375a0d121985001de94b5c9b8cf28d39b0f1 63046698adb9eb81a5865f9d506750cc201abf3a ad71ebc8a9cd385974b94f5e98d1009d003b1ddc,,Add rover model,
PX4/PX4-SITL_gazebo,98,2017-05-05T11:27:04Z,2017-05-09T11:19:35Z,True,2017-05-09T11:19:35Z,0a65213e2c44fa4102e823962340ae391cfc9582,9,8,8bb82f53623654c358707c7c6917f6ed971a606a 18655876597e40ac68f9854c5e95df8eed4729fc 307c10fe7aad1b2fcbf4bf39e238258a7ccfb022 cf521c4acfb9eaa91d44f87e01ab1fa87a1d8d20 02a08deeb85c5684846681875f049abc83b875e4 aa4b8e9bfe8cd27f9e28c6b8c50882797c1a7dcb c0daa5eea35dfd2f3ad5ea635704f8752e5dc459 91c0c72cfd4fbc002947d498cc00d35e096b7b87,,Sonar model,typhoon h480 with sonar model and mavlink interface for distance messages 
PX4/PX4-SITL_gazebo,99,2017-05-09T13:14:32Z,2017-05-09T13:16:17Z,True,2017-05-09T13:16:17Z,d62a82559094061d11d774503146ccc90d93bb0a,1,1,d80c602abec49ee0f5bd130538a82cc32c83a30f,,add sonar plugin and mavlink interface,
PX4/PX4-SITL_gazebo,100,2017-05-11T08:29:42Z,2017-05-12T17:51:02Z,True,2017-05-12T17:51:02Z,7b611a2dac1abb0145dc1125b43d820288b1b5cc,2,1,ac9f155f64417a42c4c30956102bbe07da4415bb,,add ramp model for downward facing distance sensor testing,
PX4/PX4-SITL_gazebo,101,2017-05-13T20:22:19Z,2017-05-14T13:40:26Z,True,2017-05-14T13:40:26Z,02060a86652b736ca7dd945a524a8bf84eaf5a05,1,1,4e67485c0978f9f1f3504f6c2e4856aef00811f0,,Add undefined args in iris xacro Helps in running multi uav in sitl px4,This PR is modified in order to allow multi-uav support in SITL in PX4 stack.  * the ```xacro``` file is used to auto-generate SDF file that has specific parameters. Namely the ```mavlink_udp_port```. I could not find a way to pass argument to SDF file in a lunch file. However  I am able to pass arguments to ```$(find xacro)/xacro.py``` in a launch file. Then I can change the```xacro``` file to SDF in the same launch file. This is why ```.xacro``` file is needed.    * With previous ```iris_base.xacro```  undefined args in top of the file was causing issues   * default ground truth plugin to false. This was causing segfault when trying to run multi uav in SITL  if default=true.
PX4/PX4-SITL_gazebo,81,2017-01-19T10:53:30Z,2017-05-23T16:20:52Z,True,2017-05-23T16:20:52Z,0b0111d0a5871270322124222172e26bd0ec8e1e,2,1,94f412fbac0ae9186a1087b4c93a30581b25a009,,define an initial camera position for iris and iris_opt_flow,I added a default camera position for iris.world and iris_opt_flow.world. If someone prefers a different position I suggest to change it locally and put it in .gitignore.  I haven't changed all the other worlds since I never use them and don't know the preferred positions...
PX4/PX4-SITL_gazebo,108,2017-07-10T21:40:21Z,2017-07-11T16:42:14Z,False,none,5392476b304c549ce6fd791d50942061d2c95336,14,2,32661788e20c2beb8bbd7ccc7a5e2086cb328d52 996be623fd57299d8275515ab11fbb1a390e9d95,,closed,
PX4/PX4-SITL_gazebo,114,2017-07-27T09:52:27Z,2017-07-27T10:26:50Z,True,2017-07-27T10:26:50Z,3b3bc0b44fadbd76aa64ef64fe6ac96126142b1f,2,1,97e843203ed6ee38ba94d6db3f5b7626dbc8d1d2,,add vision position estimate topic,I thought this is also helpful for future testing. I added noise parameters based on https://github.com/PX4/sitl_gazebo/pull/82/files#diff-5ed56584b86a34e30277b2fd7cb7a917R77.     I didn't create an own plugin as the diff in these files would be as big with the callback etc. However  I can do that if necessary.
PX4/PX4-SITL_gazebo,115,2017-07-28T13:50:26Z,2017-07-28T14:18:46Z,True,2017-07-28T14:18:46Z,d308c913c10f12d73eb567df17e402b1c79d1e69,1,1,4630c409d4fbfa3376149bfbd53f45a9ae0b54eb,,fix ENU NED transform for vision position estimate,
PX4/PX4-SITL_gazebo,105,2017-06-22T09:22:45Z,2017-08-10T13:52:56Z,False,none,9991c24fd457c310c1194b83fe3224dc7e920b2c,2,1,402e60be6c5cdb5091a15b87ad38958e17dcd994,,Fix compilation for gazebo 8 ,Minor fixes for gazebo 8. Might want to double check I handled the gimbal correctly. No need to transform a quaternion to euler then to quaternion and then back to euler. Also this api is no loner supported in gazebo 8.
PX4/PX4-SITL_gazebo,95,2017-03-20T18:27:59Z,2017-08-10T13:53:36Z,False,none,c1c4fd2a6a7b22973bec6de7bd030b51ba8dc79a,2,2,e66377239b0b79718b1b4479d8598100c61f66b6 7e76cf7d54c0eefc9d47bc4a7ca70eda7709fb51,,Fix build gazebo8,Fix build issues when using gazebo8.      (We need to push the rotor_simulation integration harder to not have repeated fixes.)
PX4/PX4-SITL_gazebo,119,2017-08-31T15:00:15Z,2017-08-31T15:08:04Z,True,2017-08-31T15:08:04Z,00e59cd618d6debd2cbbe083fde6a9990440bfd5,1,1,18a34314602a9fef83c13366ae289131e4c81b03,,Changing World Name,This is necessary to start the simulation with the command:    make posix gazebo_hippocampus
PX4/PX4-SITL_gazebo,124,2017-09-12T12:51:47Z,2017-09-12T13:29:10Z,True,2017-09-12T13:29:10Z,ea1d3ab0324e81f6265e078d495a08be4dc27c1a,4,1,6f08b0d917d5dfc3c09e5b11fcdc727f64b2ae92,,optflow cleanup no functional changes,
PX4/PX4-SITL_gazebo,106,2017-06-30T14:13:06Z,2017-08-10T13:51:44Z,True,2017-08-10T13:51:44Z,58fb126e3f10b05d0034e199af575d5248307031,10,4,f1e7aa41273f3b571076589f6bd9ff52ebda3d5f bb503fdfc128c3c861386225d5d7312bd2fe98b0 df377ce0cd73cbee2440e549536be8bd235b70cd 6ffd142b909ec6fb8b50458a2ed536ae6e9ffaf9,,Enable Simulation of the Hippocampus AUV from TUHH ,Adding files which enable a simulation with the autonomous underwater  vehicle (AUV) from the Technical University Hamburg-Harburg.    For safety reasons I just added files (only had to add some lines to the CMakeFile). I have tested the simulation with gazebo-ROS and it works fine. For further information about our project feel free to ask or have a look at https://www.tuhh.de/mum/forschung/forschungsgebiete-und-projekte/flow-field-estimation-with-a-swarm-of-auvs.html
PX4/PX4-SITL_gazebo,126,2017-09-14T12:07:24Z,2017-09-14T19:29:20Z,True,2017-09-14T19:29:20Z,2da24ae240ddaa0d742c328f089512fa34d4fac2,4,1,253bc74e5798c97deae04a9daae7b4fae4d5d367,,Deleting Duplication,@TSC21   Thank you for the reviewing the code. There have been an error. The duplication is not required. I have deleted the duplicated files. As a work through to let the rotors spin without giving forces or moments on them  I have set the following values to zero (in the hippocampus.sdf file):    motorConstan  momentConstant  rotorDragCoefficient  rollingMomentCoefficient    Thus the calculated forces and moments are zero but the rotors still rotate. This way I do not need to change any of your files. Does this work for you?
PX4/PX4-SITL_gazebo,125,2017-09-13T16:41:20Z,2017-09-15T07:41:45Z,True,2017-09-15T07:41:45Z,e203a776749bfa8949730f01bae3fca335b1a562,2,1,cdcfb5646ea29c90c69fe5b1444bda7bc836b18f,,accumulate gyro measurements for opt flow msg,This is how it is being done on other platforms (more robust against spikes). 
PX4/PX4-SITL_gazebo,127,2017-09-19T13:18:54Z,2017-09-25T08:29:01Z,True,2017-09-25T08:29:01Z,b052c97f7c3a2c39ab8ec06ae79c66431f16c659,1,1,2584fcd04d8041af3700ef4cd7aea82d9370329f,,adapt to new distance sensor orientation convention,see https://github.com/PX4/Devguide/pull/269 and https://github.com/PX4/Firmware/pull/7984
PX4/PX4-SITL_gazebo,130,2017-10-04T14:38:36Z,2017-10-06T15:51:06Z,True,2017-10-06T15:51:06Z,22ef662d3b15ae6bc2eb5565e6cfde3d5b1bc797,2,2,aeb2de766b6fa986757071813b358b4488e92723 f4eb52704f03633ae45f6bde11fc8ca761e5e938,,Actualize UUV Parameters and UUV Plugin,With this commit I actualize the parameter for the UUV HippoCampus from the Technical University Hamburg-Harburg. The parameters have now been determined by experiments.
PX4/PX4-SITL_gazebo,134,2017-10-20T16:00:15Z,2017-10-20T16:31:25Z,True,2017-10-20T16:31:25Z,b8fc1962c1dc7237250983cec50fb64865395366,12,3,4733aa20e5b77743e674cb08f243546317963d03 62b54746c5c2afca7360bb9cc32e5d03de1c8e55 70cc66cac0926cabb49154971e9dd113f75d859f,,Add IRLock simulation and GPS noise,This adds a simulation for the IRLock camera and beacon  which allows testing of the precision land feature.    It also adds noise to the simulated GPS measurements with a decaying random walk.
PX4/PX4-SITL_gazebo,135,2017-10-26T15:08:10Z,2017-10-27T08:06:02Z,True,2017-10-27T08:06:02Z,6c5c23108ca23cefa9fb5a333fe1486bd1f373a5,1,1,50ae435267e4cba8a143877ae36430f73a82156a,,IRLock sim switch to LANDING_TARGET mavlink message instead of custom ,…IRLOCK_REPORT for connection to PX4    @TSC21 @dagar FYI
PX4/PX4-SITL_gazebo,137,2017-11-10T11:18:37Z,2017-11-10T11:42:34Z,False,none,c49bd51727c5ba350b7ed252351c6c3aafb935ec,3,3,14b7da283bab63b504fa7222c90fffddbc47e516 3562662fd9699d7a5d5da5e2a870cb851644bb7a d38ec3c3a3290b10b12be4e33fd63c723eced939,,Feature to add motor failure capability in gazebo_motor_model plugin,This modification in the `gazebo_motor_model` plugin will enable to simulate motor failure in the robot model in real time by subscribing to a rostopic `/gazebo/motor_failure/motor_number` [[Publisher](https://drive.google.com/open?id=18uW0NMYJ-7YJcluNlkrneRmmSy7aRlPe) & [cfg](https://drive.google.com/open?id=190Mdq-2zdGiCqljhI_2AqJbDFN8huH-0)] and fail that motor by setting the `motor_constant_ = 0`.     Any suggestions to make the code better are welcome. And if someone could contribute to making the rotor visually stop rotating when it fails  that would be great.   Please review @TSC21    Thanks!
PX4/PX4-SITL_gazebo,138,2017-11-10T11:55:51Z,2017-11-10T12:23:34Z,False,none,ef4a8bfec816ee78112e211fff4f399de28fc908,3,7,8fc12d8a83a00b8e6abb50be68a96f63aa2f7870 b33eb65d4280eb810508c446569faef245cffbd6 ae97714393d4b3154d813fe464938d8fdc213f28 7dfd4b6d06e725ef5b3e1696a5c1ee38e692bca6 defd3b7991733e33ccc2701ed3ba1a9bc6698b30 c17d82fe3f1e23b837785930d8e42895935ae2a1 0bb9098607bf2851722a4e87f225b0d8a194f693,,Feature to add motor failure capability in gazebo_motor_model plugin,This modification in the `gazebo_motor_model` plugin will enable to simulate motor failure in the robot model in real time by subscribing to a rostopic `/gazebo/motor_failure/motor_number` [[Publisher](https://drive.google.com/open?id=18uW0NMYJ-7YJcluNlkrneRmmSy7aRlPe) & [cfg](https://drive.google.com/open?id=190Mdq-2zdGiCqljhI_2AqJbDFN8huH-0)] and fail that motor by setting the `motor_constant_ = 0`.     Any suggestions to make the code better are welcome. And if someone could contribute to making the rotor visually stop rotating when it fails  that would be great.   Please review @TSC21    Thanks!
PX4/PX4-SITL_gazebo,139,2017-11-11T08:57:10Z,2017-11-14T10:19:30Z,False,none,73c06c4975051ede0970a8191a84b9c598168eb4,3,3,b069e7d22d52f01c6fb1f252f568a585a6764e6c a5b7573fe0073f6ada04bf6fbd94d43cea0cfcd1 7d85825ffb4fa8a63e957eb30cb32bbe1839a4c4,,Feature to add motor failure over ROS interface,This modification in the `gazebo_motor_failure_model` plugin will enable to simulate motor failure in the robot model in real time by subscribing to a rostopic `/gazebo/motor_failure/motor_number` [ex: [Publisher](https://drive.google.com/open?id=18uW0NMYJ-7YJcluNlkrneRmmSy7aRlPe) & [cfg](https://drive.google.com/open?id=190Mdq-2zdGiCqljhI_2AqJbDFN8huH-0)] and fail that motor by setting the `motor_constant_ = 0`.     Any suggestions to make the code better are welcome. And if someone could contribute to making the rotor visually stop rotating when it fails  that would be great.   Please review @TSC21    Thanks!  PS: Hope this one is correct. base fork: current master  from: my motor_failure branch.
PX4/PX4-SITL_gazebo,140,2017-11-15T07:29:35Z,2017-11-24T04:32:54Z,False,none,c9caaaa2f7ee1d58392ad3cb79dd4f4c204a1234,8,6,86610922f7f6e98b71d874f46ac4e09381bb671a b7ad32a0d629bb85db907c498b7a6a97f39a684e 33a9bad62008e499b7af3fcc8a5b6a1f6297f939 acaf86e6419a551830420fc1ba3d1ec3b4d0d80a b8502ef387a3153a8d2ca5b49f3502bb91642067 a60ef4ad17f6c8e2d682c1b9ac62df139b2716f6,,Motor failure feature with new plugin,This new plugin `gazebo_motor_failure_plugin` and a minor modification in the `gazebo_motor_model` plugin will enable to simulate motor failure in the robot model in real time by subscribing to a rostopic `/motor_failure/motor_number` and fail that motor by setting `joint_->SetVelocity(0 0)`.     **Note:** Use the new plugin **only** if you want to use ROS to publish. If you want  you can directly publish to the gazebo topic `/gazebo/motor_failure_num` and the modification in `gazebo_motor_model` will take care of the motor failure without the need to use `gazebo_motor_failure_plugin` [_Just publish an integer number (motor_number+1) for the motor you want to fail (as 0 flags no motor failure  thus if you want to fail motor#0 then publish 1  or fail motor#1 then publish 2) as shown in ex: [ROS cpp Publisher](https://drive.google.com/open?id=1sr4UHeCFDqJyZX03hIKP86zymGCCaluj) & [cfg](https://drive.google.com/open?id=190Mdq-2zdGiCqljhI_2AqJbDFN8huH-0)_].    Any suggestions to make the code better are welcome. _And if someone could contribute to making the rotor visually stop rotating when it fails  that would be great [Frankly  the above served my purpose and didn't have time to look into further detail to make it work_].  Please review @TSC21  Thanks!    PS: The only changes necessary were in CMakeLists and the Package.xml worked as it is. No changes necessary there.   I tested the codes for `-DBUILD_ROS_INTERFACE=ON` but    1. As we use this plugin in the sdf and if it is not built  it just shows an error in the console while running [plugin not found]  but things work fine.  2. Also  the already made files in the `Build` folder has to be deleted if we want to change `BUILD_ROS_INTERFACE` from `ON` to `OFF` as the files will already be built from the previous iteration  it will keep using the files. So  deleting the contents of `Build` folder and doing a fresh make is the solution I found [other solutions can be implemented].
PX4/PX4-SITL_gazebo,142,2017-12-11T16:54:22Z,2017-12-11T21:14:11Z,True,2017-12-11T21:14:11Z,5be51efa03dad818394a0ee6b65e45d528e1273d,15,8,98e8b9689a552ef79a01430973b95532dd95cfcb dfa7af51a012edc07a3fb5d6d8b438c9ffc1c0a1 84eefcc9e079e17811fb35ccd0940fee38eb2766 d2a45d73e89db4c713be8e8086ecf8ff858cb8ba d34bc63c1ce07e779b8398b8a9f1a20b0596c432 16d181a7969aa7f7009bcadd537e597ad91fabd6 1899c2944e77718f7d680fd5721216420bdc8fac 7a27d15c78e158f9a51ba2ab329d685d17e61e01,,add gps plugin,Added a plugin that publishes gps data to be used and propagated. This plugin replaces the gps block of code in gazebo_mavlink_interface.     In this PR:  1) Added gps plugin   2) Removed gps block of code from gazebo_mavlink_interface  3) Added new GPS callback method in gazebo_mavlink_interface  4) Added Gps message  5) Added gps params to vehicle sdf files.     
PX4/PX4-SITL_gazebo,143,2017-12-11T21:51:38Z,2017-12-12T11:09:22Z,True,2017-12-12T11:09:22Z,32a057c4441b02824773f0062f9354e14ab071a8,2,1,1fdcfeeecf486d93907e619ae1b65efc767fbc1e,,build add FindMAVLink cmake module and enhance Mavlink dir search,This actually solves some trouble with people trying to use `sitl_gazebo` without: 1. PX4 Firmware folder; 2. ROS. This allows to check for Mavlink in the most common folders and also sets the current version of them and also to unblock https://github.com/PX4/sitl_gazebo/pull/136 and finally have CI for `sitl_gazebo`.  Note: this is an adaption from a @jgoppert `.cmake` file  so credits go to him. 
PX4/PX4-SITL_gazebo,145,2017-12-16T01:31:20Z,2017-12-16T02:47:27Z,True,2017-12-16T02:47:27Z,82e40e9b9e59f8de59a5746ac926a896e991000f,1,1,d3ed29f428ca6f525beec2e8720bc822ddfb2e9d,,Fix errors in mavlink interface,This fixes the following errors:    1. Height relative to field elevation was being output on the pressure_alt message.  2. A incorrect and constant air density value was being used to calculate differential pressure.  3. Temperature was set to zero.  4. Absolute pressure was set to zero.    These changes:    Use an ISA model to calculate absolute pressure and density consistent with an ISA at the vehicle height.  Use the ISA density to calculate the differential pressure.  Apply noise to the absolute pressure measurement.  Ensure pressure_alt and abs_pressure are consistent after application of pressure noise.
PX4/PX4-SITL_gazebo,19,2016-03-29T20:40:22Z,2017-12-30T10:16:38Z,False,none,dfe692246a88423e9b89f883cf4f1d50e35b9e60,18,19,ea6c983ba70d63479c4a79350858c7d822fc8ea9 2791749eec5bdcb7dd3ffe9f95f1353d179d0e8d f6a77286b0d50bd974b3ef43e84c43a10894ca80 10ff7955a4b60a54ef2048d2d284c95bb7076706 fa98fd59894881e368929446af92d25dd3798a7d 4f1e8bb744f29d5a99e5f6c1ef9834850c828348 47ddc5a56ec162c26f696ebab20c54727ddf9df8 f34a0c6b26338d20d659bd3b8d6f92d5245ab426 4c6643d154ca1950d3426d26a421bc4d9a926030 8ffdb28e1b4a1a1d13961805d7bc898b1dd89d7f 5b866988886d2570fc294856e0fadea608a139d7 63e773a70547dbe7131185dcaf6f3129a8c97486 aa07963023f6d9652f851b23b0055141996c7ab1 046f984a3965b15f6a9df8b06f149bdf90cee278 82ea85ee07c0f6e0ebbac169631468a75d0c9263 5b2c2aa35406fcf7cf2d7cdd57c7199058168f9d 8449eb4c853d6db587be9220450bccfc059264f7 d38698df039887103d14c5cd4b94adab060d12b5 7224a412c45a4cc2979796ec782544896db5a42e,,Feature gazebo gps,@nicolaerosia For diff against upstream. 
PX4/PX4-SITL_gazebo,147,2017-12-30T19:22:28Z,2017-12-30T19:30:31Z,True,2017-12-30T19:30:31Z,8ef100924d4e1dca6e309ec9a388b7cb7175c8ba,1,1,f8fe9dfff006c3483f1002782d5126d1db067289,,find user built headers in usr include or usr local include,
PX4/PX4-SITL_gazebo,148,2017-12-30T22:31:38Z,2017-12-30T22:31:58Z,True,2017-12-30T22:31:58Z,1498a3453edb1aac6f0cda7a5ad73d0f18879186,1,1,266520918c4c75ecc5022f4dde4a3be49e1b28b4,,gstreamer plugin temporarily disable,I'll bring this back in once we have stable CI in place.
PX4/PX4-SITL_gazebo,136,2017-10-26T18:47:12Z,2017-12-31T00:38:55Z,True,2017-12-31T00:38:55Z,a131cbc546c9640c7319370220e0776249ae952c,1,1,3366bce3ecb86d95d78ddc63b65fad2294316523,,initial travis ci configuration,@ndepal @TSC21 FYI
PX4/PX4-SITL_gazebo,149,2017-12-31T10:29:59Z,2017-12-31T10:38:39Z,True,2017-12-31T10:38:39Z,f50c5dc30a924a6bc503facdd7497c469e8cc666,1,1,2b06ae1cafe4c1f2a00e202952a4b0cd8a6ac0be,,README add Travis CI build status token,
PX4/PX4-SITL_gazebo,151,2017-12-31T19:56:17Z,2017-12-31T20:51:27Z,True,2017-12-31T20:51:27Z,946146f3144ee71f4fde70f195b912d2ef1e8238,4,4,f07805101529d250679882f372ddd7e90eb85bc4 3c4dfbb03b26cc7293a327937b577fde0f861bb7 791911a76a9b0b0e3f4207bcce3f2f347d7880e7 d667198f4b7aea240d68e9c07c50bfa94be8a646,bug,standard_vtol fix gpsSubTopic tag,
PX4/PX4-SITL_gazebo,96,2017-04-14T07:40:36Z,2017-12-31T23:51:03Z,True,2017-12-31T23:51:03Z,1dc976f89d3bee46c3c29e8f4608ca7af9a49412,1,1,3702026d0bab17a4cd05b1d92cba657768c4f5e6,,Fix inverted magnetic declination,Fixes PX4/Firmware#6843    Another possible fix is simply flipping the sign on the `declination` on the previous line. They both accomplish the same thing  so I'm not sure which fix is technically *correct*.    I also believe that `mag_d_.z`'s [sign](https://github.com/mcgill-robotics/sitl_gazebo/blob/cc57c7ed5d8a97a56c010a0b31799de5c0554b59/src/gazebo_mavlink_interface.cpp#L450) should be flipped according to WMM2015  but I would like someone else to verify that is indeed the case first. My tests seem to have shown that that number is irrelevant though.    FYI @matanhavi
PX4/PX4-SITL_gazebo,154,2018-01-01T17:02:37Z,2018-01-01T17:02:50Z,False,none,13661b6d4db4c70247165f892ab147ad5e02dbf3,10,8,b6315449b8b3f587e1fd9f77ffd307c2840a77c5 b6f629988b074ef70f22eb265d19ca92ad8f6c38 e7e748adf47fe7c1588f743aeeca1b36bd890981 f31d1130d286f7fc51381fa1bd69c05d9bd24189 bb0ece61f355fd89d19bcb5d73bc0d28cb0c584f 83f337cc01c8d0adbcfeb48b6256a2d6993fd9e9 f9aa87128c53aaf392b1c81599158e7469520340 1b919a55469224f633911681ab383520d8cc1e17,,Gps noise rebased,
PX4/PX4-SITL_gazebo,155,2018-01-01T17:25:11Z,2018-01-01T17:47:59Z,True,2018-01-01T17:47:59Z,71a44b97ef4888eb2a247fbf67c79c65dd4e2ee0,10,7,8b06cd6aadf82765915545680b4daa67c159920c 36120e09c613628df92668485b142ab407416a63 e9b7d1d9f6aaa1ecf5871effaa4f910fdfe59998 11afce2933f5d9294607532ab7c7dbfde2f48433 b8401e81be17dbc1073f316892bff7cc434ca064 0b53568019b1d2afb8b529a1025ef3122fcb4a49 f7977e0d555206f5aa8668c968c083fa2f9e6550,,Refactor GPS noise and delay add groundtruth topic,Replaces #82.
PX4/PX4-SITL_gazebo,82,2017-01-19T15:47:24Z,2018-01-01T17:25:35Z,False,none,0b96664bd3387e064f9930d727b50e271e9ef079,10,8,b6315449b8b3f587e1fd9f77ffd307c2840a77c5 b6f629988b074ef70f22eb265d19ca92ad8f6c38 e7e748adf47fe7c1588f743aeeca1b36bd890981 f31d1130d286f7fc51381fa1bd69c05d9bd24189 bb0ece61f355fd89d19bcb5d73bc0d28cb0c584f 83f337cc01c8d0adbcfeb48b6256a2d6993fd9e9 f9aa87128c53aaf392b1c81599158e7469520340 1b919a55469224f633911681ab383520d8cc1e17,,Gps noise and delay,In the process of debugging this I figured out that all of the timestamps were wrong. We were using the public attribute .nsec directly. But this is just the remainder after the seconds have been removed :-).
PX4/PX4-SITL_gazebo,146,2017-12-27T19:27:35Z,2018-01-03T00:15:45Z,False,none,e6c51c3d2c93459cf2c47531d9cc098573c9c9be,30,47,055c713c8dd10d5c6ac6a065f03e434f646f5102 cd815e995aa475b5adce3b2a50a3af0878219823 e205bb0adb614171f9f384824766601aa226a5ab ee793ec253f26a5865d47d90815beae82ad54181 b083560dea816ac0920862780550c2e23362d8aa 177bd12ac39ef0576e7a0fc7581fcbcc71ae97d0 1930a31258459616beec47e62c8dd5d609043a7f 118aa05ef4d817685f5ef3fc9964f84e5c99f5d2 f7e6bc79a539fe5dd9f61fd0ff11d5429dddfecc 34b192d5115878d48b6931e4db85d4164ccd7b22 13b7d42cb15b6fe84128f67c8e0553a8e812d86c ca0d3d08a6aa15f06c15301f5ae25cda3d70b672 d2f46b7ae062c828e675ab9534d4c70c56cd23d6 8ef100924d4e1dca6e309ec9a388b7cb7175c8ba 1498a3453edb1aac6f0cda7a5ad73d0f18879186 a131cbc546c9640c7319370220e0776249ae952c f50c5dc30a924a6bc503facdd7497c469e8cc666 2f4b18ae4b61a0a05295ec8058ba9e64f682f588 f474cf10b42e81b278bbf211792ca0962779285d d27867de5e3f313280495c9cd87ddf87e15814e0 946146f3144ee71f4fde70f195b912d2ef1e8238 5acca61c31a497916844c3cb5c8424c1333fb2be 1dc976f89d3bee46c3c29e8f4608ca7af9a49412 da2bb226f56a18293347efd08e52b0d176d429db 4395333e1b932c9c6cf4dad3336ac134c26741d4 3eb22c14d020d1c6e6e0152dc3f1f22c63668496 4e9a9cd487d29c51e3e79431e17fcd71df27cb98 1783a07db19070362a74eac1c8c45d7f8fa14f17 b2d9758fd0f734db36f7313bf99054cac50c68ff de2edcd0398aa65ae190c358b3917abc780956d1 2a70580c92061094e46d44a5746dcee19b4dbf1e 71a44b97ef4888eb2a247fbf67c79c65dd4e2ee0 c1c3fbae12280db7aea6402f1f5fe4377859803b 976508fd90b155cd0e57c2b642be0cd41dbcbace f960151f9331409d1980140ab45b030d091582cd c023f84e53d30729c69fc1fc9a34c346788a0a7e 5b253fbfd5977c60193130335d7fb0da594fb673 bb5438043fa5eba0f53d8291dcd6320a8f58473a e3437ed6998a92f69eb78e7237e9cca1291ed655 e251f9cdf06278852f002292c504361c99299b75 f376cd7ebf8354bf4ab3a9cdb7aafcac6e7b1456 1971c3a6e2073b07e32eb67566d817faf90f2411 b421c32ad276cdba5cb833b4355293269a03cf44 fc672c9be9b42f17381023936b7bd5a7c45e3b8d 058e15fbcbf51b756848d56b8d4fde2c7e9276e4 88795c63a08928e3c1f629b5dabed4ddd7b1d1ed f8645eef7eab72c895dc659e342bee8681c3c003,,HIL integration for Gazebo,This PR integrates HIL for Gazebo. Gazebo listens to a serial port for a connection with the FCU and establishes a UDP proxy to QGC. 
PX4/PX4-SITL_gazebo,144,2017-12-13T19:19:03Z,2017-12-14T09:36:23Z,True,2017-12-14T09:36:23Z,30f54768abb8df983b166ab2d5c5d24aa2f75535,3,3,a81a44a6573cef3c83c5e0956531678dc386c1e0 a71c7b09a50fd7a66e520c4fe99f11080e42295c e57c9d4808b6460c5d551f2b67d15509f295fee3,,Fix Typhoon gimbal control,This changes the gimbal control so that the gimbal is controlled in the drone's body frame instead of the global coordinate frame.    For this  we subscribe to the autopilot's IMU and add its yaw to the yaw setpoint.    When the drone is moving forward it is pitched down  however  we still want to have the camera/gimbal pointing level forwards. Therefore  we need to allow the gimbal to be able to point higher than horizontal.  Similarly  we need to increase the range down for when the drone moves backwards.    Also  this enables the gimbal/camera visualization again.    @DonLakeFlyer this could resolve the gimbal issues you have been seeing. Please give it a test.
PX4/PX4-SITL_gazebo,156,2018-01-01T22:14:36Z,2018-01-05T08:39:22Z,True,2018-01-05T08:39:22Z,1de7366d4e0cb7f784367d8669138d45781c3994,40,19,a76b35a4fbbee5b94a5c3ffeb090b7ba0763c6cb 0000734ca5e64c8b49314e5bbd5752b1ecde18cc aa6bf0146c726d709afecab18ad36d0046ffebb9 a4fafaabc87077c83db7eb22c300348cbeaf8ba1 7e60d2f87d041c0a6ec54fe52247a131548cbe66 6185674a3933e75f2b6084d3ec97899efce3fe3c 1178a2aab517880bac2de0cc6258583686f33b54 d13fe0a522c93c88cdfb3d30ae4481feb4dac147 a85a43a13768175d942669d44d26db699948035a ab0aa9e5e3974b62a3014299440b656660bff82b 3329a415a3a72ea148600cbced43633392a1b22b 49fd5b0b8d5c39fd49255082c3a7c009d2afbd88 9be616b1b8d2d6e02e139c8065c72ecbe167dfd9 0f6f5e13d6378ef0b19c1e97cc1b4c6c2c851b39 13b8cecb0725999448d8abfd1acd4f933037534d 992e8a31e56349f3e3f064399ae77a4b7686d0cb 0c72227a3e4962fb902e4da452e6c6c161103d75 24174fd78acdb69a7441a9a65aff7d72e1a18d8f 7b713971b8c032ff63633b9a5a0475ed42b7d0dd,enhancement@CI@models@worlds,SDF formatting review and validator,This plugin cleans up a bit the SDF files we have  based on the output of `xmllint` and using the supported and official SDF schema validator (http://sdformat.org/schemas/root.xsd). It also includes a script for doing this validation for both `model` and `world` SDF's  and should be used on CI for verifying that the modified SDFs don't have problems and are according to the approved schema.  The output of running `bash validate_sdf.bash` with all the SDF valid should be something like:  ```bash  ../models/shelves_high/model.sdf validates  ../models/uneven_ground/model.sdf validates  ../models/small_box/model.sdf validates  ../models/delta_wing/delta_wing.sdf fails to validate  ../models/flow_cam/model.sdf validates  ../models/ramp/model.sdf validates  ../models/big_box4/model.sdf validates  ../models/solo/solo.sdf validates  ../models/asphalt_plane/model-1_4.sdf validates  ../models/asphalt_plane/model.sdf validates  ../models/hippocampus/hippocampus.sdf validates  ../models/iris_rplidar/iris_rplidar.sdf validates  ../models/iris/iris.sdf validates  ../models/big_box3/model.sdf validates  ../models/shelves_high2_no_collision/model.sdf validates  ../models/BoxesLargeOnPallet_3/model.sdf validates  ../models/shelves_high2/model.sdf validates  ../models/tailsitter/tailsitter.sdf validates  ../models/big_box2/model.sdf validates  ../models/lidar/model.sdf validates  ../models/ground_plane/model.sdf validates  ../models/plane/plane.sdf validates  ../models/standard_vtol/standard_vtol.sdf validates  ../models/Box/model.sdf validates  ../models/polaris_ranger_ev/model-1_4.sdf validates  ../models/polaris_ranger_ev/model.sdf validates  ../models/polaris_ranger_ev/model-1_3.sdf validates  ../models/sun/model.sdf validates  ../models/rover/model.sdf validates  ../models/rplidar/model.sdf validates  ../models/BoxesLargeOnPallet/model.sdf validates  ../models/BoxesLargeOnPallet_2/model.sdf validates  ../models/iris_opt_flow/iris_opt_flow.sdf validates  ../models/sonar/model.sdf validates  ../models/big_box/model.sdf validates  ../models/typhoon_h480/typhoon_h480.sdf validates  ../models/irlock/model.sdf validates  ../models/pallet_full/model.sdf validates  ../models/iris_irlock/iris_irlock.sdf validates  ../models/europallet/model.sdf validates  ```  @dagar can we include this on CI?
PX4/PX4-SITL_gazebo,160,2018-01-05T17:34:55Z,2018-01-05T17:53:38Z,True,2018-01-05T17:53:38Z,b59e6e78e42d50f70224d1d0e506825590754d64,1,1,c5b7b5333ee3fcdf44b716d30ac5be8a4bb8c620,,FindMAVLink cmake search for Mavlink headers in local repos first,@ndepal @ChristophTobler FYI.
PX4/PX4-SITL_gazebo,118,2017-08-24T13:48:42Z,2017-12-30T17:42:29Z,False,none,d151dd94a00b3e432e3574da2cca0972391121a6,7,4,1dfc42f1e872aeb0497948a36e302ca0ff731f21 8a9d327eb631803c8408fa1b9cb5345915574600 491b9d5c26c376e7710b1091bd441f33fca8ddb1 891816361d73601b90857e51fb730db969aa57ce,,Enable Video Streaming by default,This is to enable video streaming over UDP by default.  Would like to highlight following things-   1. As mentioned while disabling  should we lower the camera image size (640x360) ?  2. Currently  the video stream from gazebo can be played running a gstreamer pipeline. However QGC is not able to play the video due to gstreamer errors (https://github.com/mavlink/qgroundcontrol/issues/5447). This is due to the color format mismatch. Adding color conversion(RGB->NV12) in the UDP streaming gst pipeline in GstCameraPlugin should fix this. However when I do that  I get following errors while running gazebo -    > [Err] [ConnectionManager.cc:119] Failed to connect to master in 30 seconds.  > [Err] [gazebo_shared.cc:83] Unable to initialize transport.  > [Err] [gazebo_client.cc:62] Unable to setup Gazebo    3. Another way to fix https://github.com/mavlink/qgroundcontrol/issues/5447 is to add videoconvert element in the video receiving gstreamer pipeline of QGC. When I do that  I can see video streams from gazebo in QGC. @dogmaphobic Is it OK to make this change in QGC?
PX4/PX4-SITL_gazebo,161,2018-01-09T07:24:58Z,2018-01-09T10:07:23Z,True,2018-01-09T10:07:23Z,3a30d1615b7b558f8c4e13903e080386d8f0ba13,2,1,589c120681c1e2eede7eae3566b7ba20a20f894c,,add camera pose again for iris and iris_opt_flow worlds,also added the uneven ground again for the iris world.  I don't know why both of them have been reverted at some point... But as `iris_opt_flow` has the `uneven_ground` again it needs to have the camera pose (otherwise it is way off...).
PX4/PX4-SITL_gazebo,164,2018-01-14T21:54:33Z,2018-01-14T23:04:09Z,True,2018-01-14T23:04:09Z,5e3375facdfae687c4eb3d20aa9da65aea0ec5d1,1,1,d1dc5434552f781f746d48d7fca500f3dafb9086,,validate_sdf make sure that the script returns an error code,
PX4/PX4-SITL_gazebo,163,2018-01-14T08:04:55Z,2018-01-15T00:10:24Z,False,none,1e2460c3ffa9f7349a3aa18633e5739f599da889,4,3,50feccb182f3c85aa028ccde1e208208c2a9a647 6f2bd05e439f3c4e892ba53861875dfb3f204488 63c6fbc7b75b88abeec634f9b5367449b7d55d0d,,Sam custom env,Modifications to simulated world sd5.world    Whole bunch of lines added to the world file but that's apparently what happens when you save the world file in Gazebo.    I think I pulled it off with the Git conventions.
PX4/PX4-SITL_gazebo,158,2018-01-02T22:29:59Z,2018-01-02T23:03:14Z,True,2018-01-02T23:03:14Z,52c1923c5d79ee1d0f2e3178bf1422a6d6849049,4,7,af0df46fdff68f15674c609feb0b146954f00e89 d489427bb3e1b02d9c4068486e927117dbc2c03a 9a145d672634b300b27b8b3902bd3b32a89377fb 82f21cf9fa4caef5ebd0624f63e59263e525e286 fce62a51c718586e77a2fefaa62b5e5cfeda9fd3 eeaad56fd82661fcf47e950020b4c341a264845f eae8e53e16733fd9e34b6b10b006335a9aad96d0,,pr hitl integration requested changes ,
PX4/PX4-SITL_gazebo,165,2018-01-15T22:35:08Z,2018-01-17T21:15:24Z,False,none,6e244e146d606861f7f8ab44ca8a6845714e7c65,1,1,4b6a84d06bda1a8f9314a35c9e95d4b492c8afc0,,pr hitl integration license,Changed the license from MAVROS to Apache.
PX4/PX4-SITL_gazebo,168,2018-01-17T20:02:06Z,2018-01-22T07:22:31Z,True,2018-01-22T07:22:31Z,2e862096b75f13827c576e479e15d778ddee367d,3,4,c1e6bbc8061f4a543ccd5b952907110bb0576854 ad4c3bfc7684eaaca46aaad7605f67c238fab504 14d947447d88915b20e11513d41926f34914271e 5d7a81a06b294178e77de1119533c6b4d9ed9fc3,,Minor fixes,- Removed redundant header file.   - Set initial value for imu_rate_ 
PX4/PX4-SITL_gazebo,157,2018-01-02T20:25:42Z,2018-01-22T23:19:34Z,True,2018-01-22T23:19:34Z,476b0a5c4a6edfb8fde946a16b27e36b6eb87bce,14,12,9d213d422320763c11a823e9e6e2192ab24f5c60 f18a4a74e9d8e375899b0e098e73820979fe3183 8045570a18bfc4d90791b03eeb5f1f8ea6191dce 2039c1a1331ae520058df77269eb2b39daacd427 a11ac4a317504977f5221874e8fb434ab6172174 7146e6fad4a6af9d21c1670f7e243f64a5aaa250 eaa8a08fd968a41846488fd74fd3e9add117ea8e 4c2090226dd89da2cafb04fdadf89d18a7ad9c72 f7102dcbd0c09691beb39014cb4d4c81c882f05e 5b87a99fd54f30bdcd2627649a6007bab657964c b4ff8a623e746b74e8346aeb4666f9b60252c0e4 75a2a342f6a4263b4d4ca63ba8c6fb59060ffd6a,enhancement@HITL,HITL Integration,@arwagoner @TSC21 are you ok to merge as is? The other PR (https://github.com/PX4/sitl_gazebo/pull/146/commits) has a bogus  non-reviewable diff.    You can also create this commit on a branch yourself. All I did was:    ```  git checkout master  git checkout -b pr-hitl-integration  git merge --squash arwagoner-HIL_integration  ```
PX4/PX4-SITL_gazebo,37,2016-08-28T16:26:11Z,2018-01-24T22:34:42Z,True,2018-01-24T22:34:42Z,8b61a57b93830aac84a6ffaa49e84a779d0680ec,48,9,bf6e0ea088fb71a7bfe65ed24d0701f475c53c21 20b09449cb0d7c5449ff9ebad0fcce294b9eb3f0 3714d1eff6b2b9d4386e3aec1c817ac2506543f7 4dd6fc15d02ab87dfc2ed83c510bea662b320d25 c0812ec0c299cbdf1dcc73ff4b510db5a4d1eb68 2ad381739cf3da94435ca369727742d4df1f068a 5fb5dcde3b556b72b1376a8fdd7c601a26670f31 7b207acaf72d3bfe38e0119bbc80afe2b6dd4dc4 c75de077b962b99d37fa45fde181704f3409b371,,Added new jinja based models ,Adds jinja generator and models for matrice 100  px4flow  sf10a etc. 
PX4/PX4-SITL_gazebo,131,2017-10-08T17:15:09Z,2018-01-24T22:35:01Z,False,none,e679931fe865a04f7548108aae10f53a6dbe3fdd,4,1,3312215527fa866a74aa484ca7d6c14abec2ee97,enhancement,add gazebo_hil_interface,This adds an interface between PX4 HIL and Gazebo using MAVROS [`hil` plugin](https://github.com/mavlink/mavros/blob/master/mavros/src/plugins/hil.cpp). It's an adaptation of the `rotors_hil_interface` (so I kept the original author and license) and simplifies and condenses the potential of https://github.com/ethz-asl/rotors_simulator/pull/438 (uses `message_filters` IOT to sync the received msgs and forward them through the MAVROS msg API and hil plugin).  It's added as optional  since it requires installing ROS and MAVROS and adds the dependency on some msg API's. Needs some more testing but would be good if someone could take a look at its structure  syntax and logic also.
PX4/PX4-SITL_gazebo,171,2018-01-26T12:18:03Z,2018-01-26T16:56:53Z,True,2018-01-26T16:56:53Z,b0f8df98410825692827e1b8945509529fa15fc2,3,1,2d90d69b082b2c094aaccf3695553b79e20b0e1e,,update lidar plugin to make it more realistic,output min distance if actual range is smaller and max dist if higher. This is how a "normal" distance sensors in PX4 works.
PX4/PX4-SITL_gazebo,172,2018-01-26T20:46:35Z,2018-01-26T21:05:52Z,True,2018-01-26T21:05:52Z,efecba16db4105e95b81fa3d0bf6e680bebcda35,2,2,c31c235542d7d4b33797c57f11fe68b17d1da481 34779ddaa3f47c8dc32d95928293de66ca93749a,,Add missing elements to models,@dagar this fixes the lack of position on the `rover` model.
PX4/PX4-SITL_gazebo,174,2018-01-27T13:43:23Z,2018-01-27T13:51:39Z,True,2018-01-27T13:51:39Z,bb00773589d1868687b25de2828588e48e0fc23f,4,3,109a31d579423f4b0be38a46dd20cc3e5cbfecb3 e723b57698b91a861ff2d3259b2934959e16ade6 18181603e1633c0d8a3fdfd7affd3c4e14483b81,,fix flow sim,This fixes the optical flow simulation (`make posix_sitl_default gazebo_iris_opt_flow`) for me. The fixed joint in iris_opt_flow.sdf somehow doesn't work for the camera... (That's also why it was there before)    In addition I made the sensors visible again as I like to have a distinction between the "normal" and the optical flow simulation.    I'll create a PR on Firmware as soon as this is in.
PX4/PX4-SITL_gazebo,175,2018-01-28T12:05:56Z,2018-01-28T17:39:02Z,True,2018-01-28T17:39:02Z,c74410a7ca6d7ee46a42454bbbe1fe60b8f53418,7,4,2f68bcdc5938822dee7dc6bebdd5c97b24a6a3ac 700a923801be6c7fd94add7f467f5d5d61ed268a 3ddfd4daabd0f24262f6fc906fb9ae702d47f9b4 5f96ade1d7473b08face2cb74c28f0f8c01c6929,,move vision estimate to dedicated plugin,I moved the vision estimate from `mavlink_gazebo_interface` to its own plugin.
PX4/PX4-SITL_gazebo,177,2018-01-30T12:46:42Z,2018-01-31T15:34:06Z,True,2018-01-31T15:34:06Z,8d4a34f631beac7c4a8e0b1b5fbb12ae1030198f,2,1,5ec82d612dd48232c6a3e4ac8d36ff4fa9aca689,,add dependencies on jinja2 and rospkg,
PX4/PX4-SITL_gazebo,179,2018-02-05T07:42:18Z,2018-02-05T22:37:47Z,True,2018-02-05T22:37:47Z,37370e58d0aff2f69b857ab6f1042227425ae60f,3,1,e941d0c4400a3fc2cec35cd20d6c6072b18a89b2,,Image feedback fix,
PX4/PX4-SITL_gazebo,183,2018-02-08T12:44:43Z,2018-02-08T14:02:54Z,True,2018-02-08T14:02:54Z,6d49cbf8887bab32bb2d0b017db604d9df63a490,2,1,e1013977c6398f98b08a4b7f1354e4ca91fd7e13,,change range finder topic to be independent of model,fixes https://github.com/PX4/Firmware/issues/8843    The range finder topic should be independent of the range finder model
PX4/PX4-SITL_gazebo,129,2017-09-28T19:47:41Z,2018-02-12T20:10:49Z,False,none,53e9d7877acef0b8219018a1d25835e073f33af6,12,2,18684c1b1bb8de4f12b60bb579340f2950b8b513 a1fd9730e019a11f265b388665a6a55aff9eced5,,Swarm iris models,These are 6 separate iris models with different mavlink ports. The goal with these models is to enable people to work with multiple UAVs  each with separate px4 nodes and mavros namespaces  in one simulation environment. 
PX4/PX4-SITL_gazebo,184,2018-02-13T11:46:10Z,2018-02-13T12:02:07Z,True,2018-02-13T12:02:07Z,74d0a2d1c3ee36c1a28e793cc9a7f4e52ba91507,5,4,b90feb68b3df6ca26ccdffc5cd0b36f59ec8506f 0766a1f6d45ae3e050b67cd145b4db6c052edc0f 96de9fff57907568726d49a79a275b81baac2fce 2774198b7526848d8764b548a8315e0a2a064325,,Pr tailsitter,Changes required to make tailsitter simulation work.  The airspeed simulation did not work since the airspeed axis for a tailsitter is the body z and not body x axis.  I added a parameter to the gazebo_mavlink_interface module which can be used to indicate tailsitters.
PX4/PX4-SITL_gazebo,20,2016-04-05T16:00:47Z,2016-09-01T20:12:51Z,False,none,4635e90b4abdf33bebc3bf086cf2dcb3a37bca21,12,3,c3242a22f20f120a8902bcbe4d0b1e4dd5c80934 bbff91bb1aa871993013b2d743d8ed5e1a88b32d d67173595040a6afcb49ef7f700e9540a2a161cc,,initial support for multiple SITL instances,Support for work with multiple px4 SITL instances in Gazebo. 
PX4/PX4-SITL_gazebo,181,2018-02-06T13:03:24Z,2018-02-19T10:23:21Z,True,2018-02-19T10:23:21Z,b70fb0f46d87e21ced09b717bdf901ff8f5c91b2,2,5,a80a3a246e05fc18345d1a147d6d29881c69acce a47a605ef367226479d8142f51977b08304b5b12 bdd145586293e71a7a33031b0dbae9af607d265b 1d414a19cf12f9ad571df85d1eb3efafa6ce9aee 76ef1e6f695ef12eb43bf72210a3b8722f33685b,,Basic Camera Control,This implements the __*Basic Camera Operations*__ described by the [Camera Protocol Documentation](https://mavlink.io/en/protocol/camera.html).    Only the very basic commands are implemented  providing image capture only (no video capture). Within the basic set of messages  all messages are implemented as well as all behaviors.    This "camera" component handles its own UDP "link" with the GCS. It emits its own heartbeats  and handles all the camera related communication between the GCS and the camera.    Next will be implementing some parameters and options for controlling the "camera".    
PX4/PX4-SITL_gazebo,185,2018-02-19T12:01:33Z,2018-02-19T12:20:07Z,True,2018-02-19T12:20:07Z,84e14e29497862d0cd04f4d42e43315a95b87bf9,2,2,021a0c399a555402db375cde3c24e08371e11aea a8a7b82ed142259f52526a313275d6059f088993,,Let travis fail on error and fix build,The build failure of #181 was not caught by CI. This should fix CI  and in a later commit  fix the build error itself.
PX4/PX4-SITL_gazebo,187,2018-02-23T06:33:46Z,2018-02-23T07:29:08Z,True,2018-02-23T07:29:08Z,8449fecc7da3de83fc294696a44cb6e4060219cc,1,1,12f8fc4f42a959f96938da374e2357bd0250a54d,,lidar plugin fix ambiguity problem for isinf ,fixes https://github.com/PX4/Firmware/issues/8938
PX4/PX4-SITL_gazebo,188,2018-02-27T10:48:07Z,2018-02-27T10:57:11Z,True,2018-02-27T10:57:11Z,90c9e5db3f53b0d963a4f240cc712f2ecf246bc4,1,1,c50bd220c10c41c832685d07fe065a539afe4b33,,tiltrotor model reduce rotor drag coefficient,- this was causing unrealistically high side force when the vehicle was turning  and producing sideslip  as a result the vehicle would hardly turn    Signed-off-by: Roman <bapstroman@gmail.com>
PX4/PX4-SITL_gazebo,180,2018-02-05T08:51:31Z,2018-03-07T15:35:07Z,False,none,d7d697ead02fcbbdf732e9e21f940d16a28be9a8,23,26,3206f1565ec3b071dd2d1f167d0b5a85861c801e eaf34c59eb3697cb42304383e558faa96c89ff89 e34edf1f129dc127385d578067aa4eac08146f81 37370e58d0aff2f69b857ab6f1042227425ae60f ebb19c6b38b0cc1fbcf93c65fab160f2fa10997a 6d49cbf8887bab32bb2d0b017db604d9df63a490 fdea94f7c5bebf6a4b0114909a8da3ea562be3a5 a1b65cf0b72524152992253b68c2f6292c4baad2 db52b67404f0f787fb963f288d5d7cb2424a8c3a 8af7a852b0c2af323aeca40230d62d902c894d3f 844b98977d4ea382b39e969954de21283a708604 74d0a2d1c3ee36c1a28e793cc9a7f4e52ba91507 b70fb0f46d87e21ced09b717bdf901ff8f5c91b2 bf2fe2843b99f8733b1f377895590c40a77aa645 84e14e29497862d0cd04f4d42e43315a95b87bf9 06161d0e0d62adcce272a0f815721ddf9816ba80 51fd8315a74c1fc778dc36e565d579b266528c80 8449fecc7da3de83fc294696a44cb6e4060219cc 90c9e5db3f53b0d963a4f240cc712f2ecf246bc4 7a705274e168fca702d46ca577746b79d5d5bf41 a83288d4269f410f5454e0792c52d8bd1965334c 81752335b3278da32d111a944ba2673b2184634d 3b09a1ee45a0b21cef1eb94bab5d2333d8d940dc 0c0fb9ac56bd9950b25ca4f7cbb0f272d8322342 0f2b7c5c37970902a076fd36183cbeed8d6224b8 d14a3c5c0cfee6efc01bce4cf215ecb65d3a2392,,Pr vision cam,This pr adds vision cam model to be able to test external vision without internal vision plugin (for example by using ROS).
PX4/PX4-SITL_gazebo,109,2017-07-10T22:29:22Z,2018-03-24T22:06:47Z,False,none,ab26b875b3d378c33367285c61e125408e9668ea,15,4,32661788e20c2beb8bbd7ccc7a5e2086cb328d52 996be623fd57299d8275515ab11fbb1a390e9d95 546fca5a5f53ad1a00c6fb89066e706dce98ed59 07b0531c91d317a762e1aa78cc84a30f305e0544,,Adding support for Gazebo 9 and onwards,Rewrote the sitl_gazebo plugin to work with the newest version of Gazebo. The Gazebo 8 fixes used functions that were marked as deprecated in Gazebo 8  but have been removed since. In addition  I wrote support for the ignition math library  which has replaced the gazebo math library.
PX4/PX4-SITL_gazebo,194,2018-03-24T22:05:30Z,2018-03-25T12:03:45Z,True,2018-03-25T12:03:45Z,1fee531aa18ec4f8f3e621f0ac726604ffbadf2c,27,4,ad5359f8b0ee9777e31b464a3ae918da45d8a790 13d023cb2dd485b9a8343e8a259a71630c13530d df266688fa1142d6e1cf3deab92d99ac060e8956 2fbec1dc964e9dd17a42408e4e0d6a95c69e3ae1,,Gazebo 9 compatibility take 2 ,Switch from Gazebo math to ignition math    This makes the plugins compatible with Gazebo 9.    These changes were already done by @william-peale before but never merged.  Instead of fixing the conflicts  I decided to re-apply the changes again cleanly with this commit.    Replaces #109.    Needs testing with Gazebo 7 and 8.
PX4/PX4-SITL_gazebo,196,2018-03-29T22:21:23Z,2018-03-29T22:40:19Z,True,2018-03-29T22:40:19Z,7c5a7bb226f503ce7596c2067dac828cf07abcaa,1,1,432698c6aec750a5d044e1ef204a285f6bbadcfe,,add missing dependencies to be able to compile the package after getting deps via rosdep,I needed this to be able to compile the package with catkin_make.    protobuf compiler is required to generate the protobuf messages [here](https://github.com/PX4/sitl_gazebo/blob/1fee531aa18ec4f8f3e621f0ac726604ffbadf2c/CMakeLists.txt#L259)  The mavlink headers are necessary to compile the package (Side note: I added mavlink and this is the only "required" dependency while mavros and friends are necessary only when building with ROS support).  Eigen is `find_package`'d [here](https://github.com/PX4/sitl_gazebo/blob/1fee531aa18ec4f8f3e621f0ac726604ffbadf2c/CMakeLists.txt#L106-L118)    Steps I followed when faced the issue:  1. mkdir -p catkin_ws/src && cd catkin_ws/src  1. git clone --recursive https://github.com/PX4/sitl_gazebo  1. cd ..  1. apt update  1. rosdep install --from-paths src --ignore-src --rosdistro kinetic -y  1. mkdir src/sitl_gazebo/Build && cd src/sitl_gazebo/Build  1. cmake ..  1. make  
PX4/PX4-SITL_gazebo,128,2017-09-28T19:36:14Z,2018-04-02T14:02:47Z,False,none,910fda022d17910bea47c1db40fd73d5a62f5c21,6,3,18684c1b1bb8de4f12b60bb579340f2950b8b513 d2da3f395cf8f5f2e32b20ae7dbc3fab9206e56a 64aa53e7e9b450088e462bcd95c52cbc46dc80c4,,Iris fpv,This is an iris model with a wide angle lens camera mounted on-board for a first person view experience. I combined a red iris model with an fpv camera model. 
PX4/PX4-SITL_gazebo,195,2018-03-26T21:12:45Z,2018-04-02T14:02:10Z,True,2018-04-02T14:02:10Z,28921bca9df9a212675b8e888c926d1ec6f6b28e,6,5,1cfd495f4ac9be644e3409792f6641dd6d032527 95dd35259234db080bb2f9776cf234823aa4f7ba 413d61bc9a74d6554b91bba557662918f3758828 a36b2a6b5b6f18a87e35199dabfa12486d949d73 c0c091f0692c4b2475dae253500a515b6146c07a,,PR iris with fpv camera,This PR is to add an Iris model with a generic wide angle camera for FPV or any other application that requires an on board camera. 
PX4/PX4-SITL_gazebo,186,2018-02-22T10:43:55Z,2018-02-22T20:02:54Z,True,2018-02-22T20:02:54Z,51fd8315a74c1fc778dc36e565d579b266528c80,9,2,b19d8604fca8a66793ede9a32247844358af3b78 0cbadbdfae0c01dc1ab2ad3766d0a979e132d224,,Pr tiltrotor,Working version of a quad tiltrotor.  I'd like to go over the sdf file and add some comments to make it a bit more easier to read.
PX4/PX4-SITL_gazebo,200,2018-04-13T01:42:25Z,2018-04-13T11:35:14Z,True,2018-04-13T11:35:14Z,0df46c53b14ef4241b33fb7a74a3cb6f9d83c6dd,3,4,c46fc8b29bdc012e3124377fa63c6b4c3fa884ba 3f307bb3e8b3b0a447645fd23dff98053832555d abf8bfe7dc786d48ee83de3f32980193f985d02a dd2b318f5dcb84a35861cf759b8b97b7a3b9d772,,Update sitl_gazebo to allow use in a catkin workspace,There are two main components  The first is to add environment hooks to support referencing plugins and models from other packages.    The second is to update sitl_gazebo to use the recently merged changes in https://github.com/PX4/OpticalFlow/pull/6 in the OpticalFlow module to fix the compile in isolation.
PX4/PX4-SITL_gazebo,201,2018-04-17T00:02:24Z,2018-04-27T20:23:05Z,False,none,36b105ae2ea0c2f55fc474a7109485124a5ddf7e,4,10000,c1bb0cbdcc1d46f66055ecba54410895e1b14a83 d64b59b95ff7933ecab3e776026c4713016fbb39 ca046af8ca9eac7d729aed02340676cf2688deff cc41d8ccab39bc6136d05916a085b15d244bf381 50c1eba392d6dc0efbfd18f66e19b6a9ed1daa61 01ecb05341e224ff4639a6eabeb376a65ca49c35 f8e4e82bbabbf10d8297c346bd40e7c895d24ec2 f135e6dda03871999b18a93cabe12ee151baa70e e8cc93ec231284226460c8b014c45a3b47a6a027 e1a81c79781400939f4985e45d97daeafd6c63f9 6fb9ca3b0c879905a18aa912c1be165b621ea9cf d22af4679da90abce0c88f7920c38b68e75bd390 01073d36e57c089ab659fde2c77a26f81edcc7fb f2f5f41641d838f4caa5cce1efeee95bded34f48 fb2ce062e4a9857f1a7aa16cf79676e10672fe93 52eeb0254982c06cc415db172466add4aa1393ff 2e9cb659c9e10d2a5a0b8e8858e46d1da47cf05c 2db2ef824b69d90b1de3afe8b68e3810feee07ac 4b49b0ed7ae81d122786218942c24a2770a8b73a c15b114cad4d6bc96a786ee182971206f3ec9b16 a7f4859698b11872f24d7e89f39771334c8f614b d6fe2159ae4cca1d7563f91cb29b452034fefe04 5bd2afa7be705c97348ecf1c31d2034a57ea6b3c 6538a7e88c3d06f7048349be8ec5f94ee9b42aa9 7f406aa2513ec97c1bd725f29c80d0932d8dc6ed 16d6ac6ad1cb77be2d88e7555cfe8da280076f02 fc62df856d09239e8a69a97abe37c3a98721ab37 25c33d18b0934545d3b9b0f370fdb486afce82e7 59bddf339ae881d09ae78ff17aa7b6a044b42ca2 bd37c274c6339692436e6a821a6458d6276c3b34 ec79b2f8c86265baaeddc008bb2de0fc7e7e3bdc 017576262c0074bb9473e45b16ba0c35f99f7562 67900512abb967e0e3bf06967fe2e2ed81e071fd 03b3026e18f13ce57de5d3e82728cf0d09f73172 ab8527cc8faf125e1e6878ae915be4cc8eb8373c 421aeb69d85a4962a5f92d96aae3f93cbf2840d1 88cf2aebc6334794792c5f56b1961d171c579b38 cf48ceb4281d8c0d6d4326067bb96441fe927f00 8b4471d842d26a753929c79b0c248f9a4144f298 d5f90a1503c028e3031e8c1be08d9141f29efb1d fabf214bcacf54f775b913531589c606ba670cfd 5ee136fe10383ca8155f79cf45caed51327d0cea 0dcad42f578ccbe08c4ad7d87777eab30e93d79f dc60bc87666908e9cfcd2281a69ca1cd5277e29c e15240d3ada672d49a52daf1032bc283397afb77 309237c4a2824e43875deb39ef731387a3eaeae8 eaf4f99e38bb0ee6a46e4be3c196a3483aa1a7cc 4bf33339dc1b2b94b691adb5daccc2543d5af423 2405baa2c9e59ef0a1cde17f0fcd0222d3b5f33d f99471f34ce4fe4c6b6b549522dec2c4bc78104a 81da94ff46007a246f20d498b94525942485ba18 0c6c7716204f46195f7d9edeacde3f503cbd957f 26ffda507968b44677721060502800c2ff6ffc72 48fa3fbca35255daa7c6b33820c6210090c36675 23d25f2a228717704359b3310c9370b1b0ea42a2 d6a86dfa56fc2d7ed566b0c065262acd1af91878 7ac3c97aad041bd38b601db33d0f905a91878014 d025eb0da0c9f37160b63ea35990939fdf8fc895 f1f72c70e000fb444e98bf562d5a88fc9f4f7109 3b64325ff80fbdb8d40bcc757ab4379a7fae94b0 3ec37aa186a07681e6383f1cefa565a1ee74eaef 47fd29814314b3f464f94671fac1f76159b190e2 367a18f7352ee727b6034a5f3690970141ed6b3a 735c5544ae7984c68377a245b39647fbcd0dc891 45eb9cb518cd027a43b87b7a29512d2c9ab1aee6 95f17d56690de74af07f4a355a25360fe11be877 036d920070c4bfb26983f78572b92995214edffa d3e9ee88a00cad62f44a3272b409d7214f03aeeb 0c2b9dc0b80b6b1d20798d9642d0efffd34290b1 2e620cf1d42093ef06902c279069f1b62af8a4cf 0eaa6222a2afa8c68b24232ae91511dc004d67f6 398d511fd9f4d4313d7e5e57fbcabd9a66330d15 5eb7d8ec5fc20f7a41c568b6fae5359aa7d9cf3c b97d4328441b994668f6f80d7e4242f037b4e7dc a8645b51d53b4e147a7a38bc31d27ec79da6c6be 90513e719ecaec1cad8a26302f7b214fb0b23755 b52a8de5ff24edf836b2c8240a006dba3abf58d3 711b21cc5b57139a9dba8e4a859eb16b67a00ba7 8f9e8a6282fa372e40f86c2f9470020e2df66847 631f314e89ea61f62fbca77335fa53511bdea661 4f256cca203fbe300bd88b3a13b572efa4f8ec4d 634697946a3131a84fdc98e4d9233ded6582f785 b613ca051a5d5d5d47f72dbe667bb7db7ffaf799 1223a9abd520b8167cb5c9c9985b153e14fa7fda 00f6ef1d2f35043d84ba3d070efe7b463c0a4821 1cc84ad8c975feeaa21226145e7c995abfccc1d6 a026575e37de0ad68c3b5befe15e788205e7a19e 75ed9b002bdf67420b9f8f664dc8d8a698a8010c cbe75188e93d832ec248883140c8376d0b9edc65 78950f2b39df77e6af0d7944bce9564961d98adc ce1b908714b75594ed359b3f99861747e5a4d081 fa1586249a17ff6fb921746faea1c8a479614324 17a157b9da11d27a476df48605bea1506a5d476c e01763a7c7d0b47c11f7b9124efdf15c1456bbc9 e061b1a3a561ba3694db69f548b0e606a94badbc 392af4fbb6549dccb7cbba3de5c6f2f0abc74b03 1fd8b681a0a48b584d7d0f127f11f2e42e4927a3 22e234724f55c272f0774db03acff160c316970f 32815dc1d3898182bcf4b0cd1b472507ce7a30cc edd337880d21f98e28852a2803fa05a7879d64e0 ebb5ec7c46b0295e6f6de62e3dda8a63bcf32e35 f5a66782e553d9157f434ab678566cff0eab4a38 6c3857a147b45240766fcb33d3b358c503017a55 47567c5c2483aa014d40106c93101254e9a3f565 44937c3a996c280e44e32e8d4eb713418435f329 28da1492d30f3fa1d433d45e819c77dba83d9d3d d4f703bde8b644689dd4a77870975dc419c3f2b3 0e89a6b8bd5ffb02f6e364e34678628de79ab378 63cb895a1de46f299cc151b44bf7127c653db69b b66b997c663158e7024ef8f6c837e25196ff7d2b da57dbbce0c6985a51bba156d72d6a833d4bcac1 443a4016af289f8fa71a357bbd8a9310e0260069 1124a397f2b2543e826294361c91fbaf6cfc8534 b95d65df53ffbd7d96abc8b5cfc94f597e214e46 8c0450b48347356cefc5aca00702b2f707281f57 e9dde721f7c234ae9c5550816f51c5426046765e 2a5c7efd8df5a93234d738ffb410dbbd9558b2f6 6f0d3ffe9bcc397442c72baa5ce730c33ef247de 219980cec10a4974cfa2ab9b0fa73afd94fe188a 53fdbb6c04681ec46ab8937f798b980518ab6674 f1a6aecb4d31b4655cabd8f46284b867bd82c9d4 975d7ddcb2b8e0959fb042882050f7f3d6a64b03 ae807fc189aeb7cf5c436e8b237d098a952d5845 fb1bb7a769f0dbc4d3710fdf4d9b2280f986bbaa 41de588a73465f2a3f619df1ca9cc8496f6a5143 477a4e7ec8930fd20769b2164981723750628a99 0caa4dc1712771faec3ca57756998dedfd29bea7 f02ef20a23b4c54cb891d28d7860b6c5151edf54 1b1617b5a0c760119b1cff28db5eceb39626167d 28f9b38919f882c3dee1c5512b0a8d9072a23c84 bdf4f19867b08bcc20327a5f258a8dd65a3dea5d 5dc23def2af712b72419519182a51d180b38a3f1 3e6ba1d5419043b1935b1abf1fbc34562f32d039 3b5b12e1d16b9c603aaa920f0f1ea96f6848f3db 07edec282e0128010658df87db1a9167475fc58e 2a58c7a28c2399c45f3a0926984426d1e5b94bf3 1ecfb22dbcbd1a5c9d0723b6edf43158f2ee642c 08cc963de31d8a730456d080486b6f62acd10d48 d2abd53692a3577b811913a57f6981277d84e400 a78ab02144b96b307772d75587af65c8bc5e40bd 00f98c64dbc150aee5507cbc3bbdc4bf6b3064ae 744f80621493d42bb834ad0fd238e070afe7e194 79ff1436b89423f5d7e7f8b965c2f826bc8021b7 cd49c4bc17d6917b000e55a5f416bd62fb510d42 df53dce6e106ee06c7332212c88a0a1a7dcc4596 41a9ac0acba99a1708d6617030a8cee6ec2f1de1 733d773bcc75b33479e0e624ee3175b2a8959011 bd434636e970a8f11b8f36992079b12ebdf9231f c206e0f1ac9ef4a90a57f73f843ac46136187a54 d4faaff8542f4e317af38f6e3183a9ed7cbd5a68 4ffa98aa2a1418c9eab5bf72ec6f0e93ef2f9860 8c9b941e604e6ed971059e5b5fce12b95e9020fb 119fe0a24ffd16b1e8e769e17d31ad55134ad37d 0c9f4835812cc6081893594c8de216b28c232bc6 90b81cf4c487b1880518cd1136e5e7530cb59aca e9aa79e3092550e9af09348cb29be73552c37176 17beeb13c4968d4556c0c4fc97402f7d3a0e0c71 e98919cf3c6e8c7e33a182da8efdd984bce6d655 123f11fcdda9dc6c39ebd94657c5ee94ee53cc90 c16e17f47b5ac50c72ca90c37ac6a5936f782027 71170dce0a87ce06e00d721a713dfc3dc92dfc11 8a7dc1b3201a15df3fc7d783267fc8e3a5344a65 35bf37d617258a6931159007e8c732c5416997ff e5d9c826d8f9d45de6d2b8b2fded0355ec2a217f e73317a7201b6ff528cedb3dbdea58682ab1ecec 208e320975e68b3b3229f2fb2de76baf94fdf6f3 bb13b602e221513228c15237fcd5b89785ea401b c673c9f531e48840db48ac8fbca5219990118a81 8f543d300df090ba1911bfa14cf9e811252d0ad4 082126610d0416e6fbb77f704abb28738ac8c36f c679703da49528cedbbf31766dfffdcb0f5c2863 415c5f13bbaebe2ca609eb9822adc2750195f67f 8931f1a75c65de82f7076009d285279d6adf575e 729c98d9e290ae27da1671ec72f1549b73dab20e f81a1aedcdc50268dff8944a020190e252cdd64d 140065272472d7e61656e009455865c22045057a 54ea78898c1a0f12211ef800a12177f5ad016875 a4703c6be43e1c847d0b2ba7c91e3dec597c6389 55596fad202328ecb464c8496976162461a5d1d4 a2bc0bd94778796060de620db45a39010cf907ae f2104217d4debaee40a87f27dd31d45afba4fd76 2271b3f12703106d597a0de6c822ca95a58ecb9b 64fb4b43b6a312590aea2de5db035b0acdb5ba34 7bc3a12efe7f95f66e968d506829f1488e63480e 1a0c312f28f409b6ebef04b20733f0ab9c966913 64aab8a685e29a5f2d267d7574db3da49317a30b 4ab8c2a6827d2fce2e99f67e9fedf11227611403 f95b823e31921645d4538d3f8bc2855bb5d8c8d7 5da7beb8f53c42945b166ec504a6c29592153788 b71ac789598f409f258884647921033e6bc8120c fceffb1d0140d915718789bd7811c393e2593fa6 edf6f6c97a83f02331225786f260716f44d0c9c4 b49ccb889c0956bbe0d268bda6665642c09fdb3d 1ab2d22e42293164a337cc90cbc04f13be882aba 4f5644c0ef65e4d3255faeb0922666a103796ebc 05548829d348e857f7b27a6371547d5610646aef 5ebe76207dbdc05ac6e780425b835c919c5d8de1 a05bf390c1cc70f7383808386bc366da36b17210 e46e6f99f3e2d854eed73f7f6ee9a775b8bfc0c6 0f1c9504d57826a3bfacff0af214c9a3a7080af0 e7e791fb1a9a8b06e33f58661bbf03dab080c622 e0cb5a6164a7165e1101d72ff5d385c69e993a8c 694df08b37fa14b520ad3b61f8bcb924926e3d9b bb4b5e7c1da86c58fb8f98034765190d647d51ed 7fa91ad3dd29816ff11bd85103b67604fdeb5f9f 7538ea44e3b154f092a3704c1931a2ab2de29576 d75fd72c02ff0cc12c179d212f5043d3ef6f7270 cbf3cee0961fbe8c17fb0aa9468f25564f286c08 56150c28ddbf941ec28254cd679a46da9ff8e16e b066ef3427d5724da2075b2685c05b862485ad90 4be4b9810e83f48218c59d5b3cc9dfea575610e9 0e823c82b6aa6007e11aefe2d0e7ec44c10593b5 5f175f971201632a0190a81f21bae683552bf545 c869fa3431fa972d6309ab49567ba1e54c6013d9 d7c9f5c101c45f099db018a8994316729122b55d c0efe2db56cc59c3615d9e70279cc7cbc568364f 255cc12c485c640e3008039f352ec36b3539f4f2 b70e7433dc2799617c30274298d230babec317da f131409bcece0ffe17ca4844f19afbeff2055602 fa9f400dbddde27f85d88f8dde32e31dd90e5f71 439ed7d3f57fffe32a70625aed8cce850cef8b80 fc26fd99bd35be212f0b2443c14fc7cdc5f34fd1 f13f8f9c6400910f2e16dd7430018d3ecca24e4a cd69a573b5d3d6abac707be0a74cbf90c4e26e6e 89ad46dd15c44ccb19866e54c088f2296a58b549 477a42e6f67d88b382dd535a6d5bfb0e887055cb 35cb2d0a9e56428e5ea9c7116e9356d86aadede7 cbb4559c15ba53fb71141eed85155629980bd006 fbbe1f5288f0e3255b083f8deaaaf2168202a16a 4ef3d258eb78d4726ea3e68d439d0935a1706a99 202505fd734a89eb0e2e84603a2a6c2eb43d2cb4 332a612f358c280a7c29a89c8b8e168c985f8b92 58c757a9db1b93051416f4919df7adb4d92db410 f2cee9970c658fea586aab98494f93cafcceeb40 12e967173d6743add41dd2838b18fdbec287d56a f389bcaec2ca52a6f2df55f9db3d2859d975599a e7b8a2971b8dfe3a4e3c699b72ed5c4ae00a49e2 9466dc887e9d12de5b6f52c128651709057c65f3 395e67224775b4c0c600c058dc5c13cd6fdb52d7 5fe7ed8751a71533f57c12712c7c86c8f20d7754 44fc19abb14d8511304568b86a8e94b266db854e 6ed820d529fd3b3cb920a9f5d04f6f43efcda5f5 54db8894c9968fd2ea2e59f2f5b963f85a677e90 3dbee12aa4b95821c6ca97b32cd69efc0d8f8acf 254bbc3f025b47ba608218bfe81f9f22cf511d48 3361dda4a971d1aa834213d05d646d9aca74b721 fb34d8412e91a5dc5a4349842d7714c57684a92d 3591a1f51c16bd6d8fb39c308a9ef9edf5d5288a 23059a0b04e850a6f975d5058fd3b7e214bc28d9 cd07b4e607aceef1a978ccfc08affcd116e47f53,enhancement@gazebo internals@plugins,plugins vision use complete visual odometry msg to send to the FCU,Purpose: add a more complete simulated odometry data sent from Gazebo to the FCU.
PX4/PX4-SITL_gazebo,203,2018-04-28T12:59:52Z,2018-05-11T11:09:08Z,True,2018-05-11T11:09:08Z,cd91ef411aff947f234eb829479e6242d9fabcf7,11,14,2fb0f44692147c961c5e7af5b54782d45431a257 1dd753464f37212ff4372bf8cccc82847c1ad84e 3bde10bf83a41ae712cb6c33cad1dce3bc99e41b 6e0bc807aa34679a7cc469a578c7e7f0dad7a2b7 404c2b341321e6796a26cae8495c92da7e3b60a4 94c184ab895ee93aec5fa9ac67bc9f0597d4cf6f 1e6d0cd14b0d51fa9af8a82f8a381cf90e150949 001f4e8859c7addb47de648a322a2989022103ff 9500a0a99d63b8a6b72adf0d4c4225bdb28c72e4 07f4af8c44d520eb51b70c7ec799e9ab4fa16379 62a68902d87cc6437c34b2c8d9444ef1ccfeb8d4 33bb12596bf6ba729d057588d473eda28461cb76 5efa782538ab1781dbcd6b0373a990cb8a760f9c 793e637db34ee40e4bb3dab117090b465a126c32,enhancement@SITL@plugins,plugins vision use complete visual odometry msg to send to the FCU,Reboots #201.
PX4/PX4-SITL_gazebo,207,2018-05-18T14:49:29Z,2018-05-18T15:00:42Z,True,2018-05-18T15:00:42Z,651ca351fd1030870b42528db17e4fe2816d46e5,1,1,03d26147a549ce9e21f2236774531f101cd769fd,,fix vision quaternion transformation,This pr fixes vision quaternion derivation and makes it similar to imu quaternion one. Tested with vision yaw enabled.
PX4/PX4-SITL_gazebo,166,2018-01-16T19:45:46Z,2018-05-30T18:23:36Z,False,none,a079db2c090c8f3b19b92df6a113034a2f08b81b,7,5,5550aaaac22b9b84e604a378039d9caac5d8c274 ee4debd697cc1de24cc690e35659b4c4dfa491e9 a9034af5cbc22d2a433e360420e13f93608eb372 6bea27a774f00fc39ba1d6375bb494bd7268a4c6 d994345f790033f64562db8c19d0f895bab92642,,1 7,multiple-sitl project uses this modifications. Minimal support needs this commit: https://github.com/PX4/sitl_gazebo/commit/5550aaaac22b9b84e604a378039d9caac5d8c274    Pull request is for multiple sitl support in px4 project (https://github.com/PX4/Firmware/issues/8512)     
PX4/PX4-SITL_gazebo,150,2017-12-31T19:08:58Z,2017-12-31T22:43:34Z,True,2017-12-31T22:43:34Z,5acca61c31a497916844c3cb5c8424c1333fb2be,1,1,cfc4c80f5ab6147fefd9bf756b27e3a228fcf426,,external update OpticalFlow submodule,
PX4/PX4-SITL_gazebo,117,2017-08-23T23:27:31Z,2017-08-24T17:59:20Z,False,none,9e120df2a7de5dc162a2a779796356d44109421c,1,1,7fd9c2c391c5ddd782c7c66c149640f438f05e58,,cmake include a level above for mavlink,This will fix the build of https://github.com/PX4/Firmware/pull/7851  where I pushed `sitl_gazebo` to lower directory  bellow `sim_tools`.  Though in this process  I found out that there is an issue with our build when we use `sitl_gazebo` out of the Firmware tree - since it relays on the Mavlink ROS release  if one is not synced with the current mavlink release being used on `sitl_gazebo` plugins  it basically won't build.  Here the build error that occurs:  ```bash  *error: too many arguments to function ‘uint16_t mavlink_msg_command_ack_pack_chan(uint8_t  uint8_t  uint8_t  mavlink_message_t*  uint16_t  uint8_t  uint8_t)’                                        msg.compid);*  ```  which is related to https://github.com/PX4/sitl_gazebo/commit/ef7d0aa81321521a8b2496131d636858b95b6068.  So though this fixes the build and allows CI to run  for guys like me that like to work out of the Firmware branch for SITL development  this is currently broken unless I manually update the msg definitions with `pymavlink` or hardcode the path of the latest `mavlink.h`.
PX4/PX4-SITL_gazebo,210,2018-05-31T17:37:24Z,2018-06-01T17:13:30Z,True,2018-06-01T17:13:30Z,27f977be25680a95ca0a999e4e5fa0a2e54b0fc3,1,1,4fa0452c66229f129237585798965f72b41426ac,,Fix compatibility issue with Gazebo 9 for model_param,Fixes https://github.com/PX4/Firmware/issues/9575.
PX4/PX4-SITL_gazebo,209,2018-05-31T12:51:57Z,2018-06-04T13:19:09Z,True,2018-06-04T13:19:09Z,10b0597cd20def97074c6c8eade580a7f294e41d,46,11,23acbad27e3c2471bfdb07f7a910cdf0099b2bee d2f7978a16f1b381e091e6c7d17e558997065cf0 1eba90b43c468eb303ac45efba5a727b50edcde5 f3195a812f2b7f31175815c76fbfc649d38120ba d6592352b5f7d66e30f93f4935b6de7d81c2bd02 d7420a33a3657fdeea4391ff544bb8cb99d58534 f5fa76e217fb11a5976d7e95c3e6519ad822201a 0859997e81cdf1df31ca9683c47fdafae101f904 f23218f614bf4a5bb91acc77564d066175a8ab28 3fea21946adb19cbe0a7841eb404cc199d94225e 3037a3a4351608906a76397c0867c55436b462de,enhancement,Reorganize and clean up build system,This PR:  1. Fixes a typo while building `gazebo_motor_failure_plugin` with Cmake or catkin;  2. Removes the exception regarding building the `gazebo_geotagged_images_plugin` while building against the ROS version of Mavlink;  3. Clean up dependencies and target lists;  4. Clean up dependencies on `package.xml`;  5. Allows the possibility of building the package with later versions of the C++ version compilers.    **Update:**  Further changes:      6. Remove the `rotors_` prefix from our plugins (since we have already move apart from `rotors_simulator`);    7. protobuf msgs: use PascalCase naming;    8. protobuf msgs: rename some of the msgs  organize them per type/category (`std`  `sensor`  ...)    9. protobuf msgs: generate protobuf msg libs per type/category
PX4/PX4-SITL_gazebo,211,2018-06-01T11:53:00Z,2018-06-05T18:28:39Z,True,2018-06-05T18:28:39Z,54c256dd0c6e1a5bfd1dae1f1b84e5dbca58dd41,1,2,1fe9d7c86fbc2bfb65be7d4683862bcbc2b57847 6ea891ccd7274ec7ab4e53f3b5e732b383abc42f,,Update README md,Change the repository link. The old link pointed to the Dronecode repository.   Sitl_gazebo depends on OpticalFlow submodule. One should call submodule update before calling cmake.
PX4/PX4-SITL_gazebo,213,2018-06-05T18:21:27Z,2018-06-05T18:28:06Z,True,2018-06-05T18:28:06Z,1992b0d0192d363ca4f9686e9cf177bbf0e71400,2,1,f921ed476c25e3c043375f89540a36b582cfaee5,,CMakeLists fix targe msg links,Fixes the reported error on CI for https://github.com/PX4/Firmware/pull/9599.
PX4/PX4-SITL_gazebo,212,2018-06-04T10:54:01Z,2018-06-05T18:29:18Z,True,2018-06-05T18:29:18Z,e8b3624b9dad63a492ae58c1ce8661488128966b,1,1,3b6095462d29bdded73d860e390dcccebd0d26dd,,tune gimbal pid gains,This pr tunes pid gains for the gimbal and should be considered along PX4/Firmware#9588
PX4/PX4-SITL_gazebo,208,2018-05-30T17:00:36Z,2018-05-31T09:44:38Z,True,2018-05-31T09:44:38Z,eded9b2988ab68257dc2f9f7ce16606516b474d9,3,3,07aaf8a35285cc947ae3d6f922cc775ed4c3b1ed 8e58e0e7e97b701d74c6b4f00a0d7f147fcd50a2 0d215b2e1e04685ad5b413cc785aae48b3a3623d,,move pid control gains to sdf xml,This pr moves hardcoded gains for pid controller of each gimbal axis to xml sdf model file.
PX4/PX4-SITL_gazebo,214,2018-06-07T12:21:03Z,2018-06-07T16:28:03Z,True,2018-06-07T16:28:03Z,59f01ae9bd8ee1937be368f9b536fda02bf1aba6,2,1,28f00fe36978c54c9ea7746325b9a65b4db3e4d1,,cmake add tinyxml dependency,The recent addition to parse an xml file using tinyxml requires some of the plugins to link to tinyxml.
PX4/PX4-SITL_gazebo,199,2018-04-12T06:42:05Z,2018-05-30T23:22:53Z,True,2018-05-30T23:22:53Z,371e7c36c34d7dd45da5602a14a6ee01e9fe74db,2,3,565b5cc03d4fcb973dd165570a20ed6ee94dd026 9b6fca8aa1fba617f19171c3d9f1420162cd2b3c e27cdf6511dbc8e9cf2e118f74301ab887e1b215,,Multiple sitl pr,https://github.com/PX4/sitl_gazebo/pull/166 redone
PX4/PX4-SITL_gazebo,167,2018-01-17T10:00:51Z,2018-05-30T18:26:28Z,False,none,f59fb00ff9187179d3cb2f4cbb0ac7bb49e3d96c,1,2,565b5cc03d4fcb973dd165570a20ed6ee94dd026 9b6fca8aa1fba617f19171c3d9f1420162cd2b3c,,function to load parameters for each model from xml file,
PX4/PX4-SITL_gazebo,216,2018-06-10T11:45:48Z,2018-06-10T11:49:55Z,True,2018-06-10T11:49:55Z,a95f39329fcaac374b90a9e375bd386bd3a59817,1,1,eaf6a4613dafd69b918d6ba1ea084f6efe80bc7c,,CMakeLists txt remove clash between std and sensor_msgs,Fixes https://github.com/PX4/Firmware/issues/9632. Though  if the idea is to have a common custom namespace  that can be done as well.
PX4/PX4-SITL_gazebo,218,2018-06-12T08:13:33Z,2018-06-12T08:37:49Z,True,2018-06-12T08:37:49Z,b891d41330ab25581d0c61fb56abcd0480a3837c,1,1,ea43212a09f81f1faae2f73ea6e3ee85592232b8,,tailsitter model_config rename wingtra tailsitter to tailsitter,Just started a rebase and got a bit confused ;)
PX4/PX4-SITL_gazebo,219,2018-06-14T12:12:18Z,2018-06-14T12:15:08Z,True,2018-06-14T12:15:08Z,8a3166bf5d315274cfd503a75880e9837faa9694,1,1,05cbebec14b3567d9f392283499dfb18e3a78403,,iris optical flow change from uneven ground to aspalt plane,reduce computational load    Signed-off-by: Roman <bapstroman@gmail.com>
PX4/PX4-SITL_gazebo,217,2018-06-10T12:55:36Z,2018-06-16T19:38:14Z,True,2018-06-16T19:38:14Z,b5a92095bfb1b6a218a80f58ad9fe09c89ef4598,2,1,d28b6bc68841c70b2f9660d7b244bb49509eee0b,,travis_ci Add OSX build,
PX4/PX4-SITL_gazebo,222,2018-06-18T18:44:06Z,2018-06-19T12:27:05Z,True,2018-06-19T12:27:05Z,f7a1c4bdf3f416dd611780b36f51562f9b8c5859,3,8,9f16580971d9cccedfe590ac1fb447876c64afad 0be2acb0c67fcd7c40fa9a4dbd151cdcf6d6fafb ae11662a9156802b6c50aa92cb4933c7cf84439d 18f180c9d32edff59bd8ab0b1eff96d30d4ff3ba 3353dabf668e494b4c2e8bc69f98e1617e8ca186 a6e6cdf96e39249b7a117544fde50a7a6169ccd7 c7b2c54e53ab2e003609a0dd1bd35661d5ed7ea7 2097b1fa53bea9b8c2b0d33a65f1a0066e2381d4,,Fix ros motor failure plugin,1. Original master doesn't build if you enable BUILD_ROS_INTERFACE with error:    > CMake Error at CMakeLists.txt:328 (add_executable):    add_executable cannot create target "gazebo_motor_failure_plugin" because    another target with the same name already exists.  The existing target is a    shared library created in source directory    "/home/elia/src/Firmware/Tools/sitl_gazebo".  See documentation for policy    CMP0002 for more details.    2. If BUILD_ROS_INTERFACE is enabed  no plugins are built.  3. Some class members were not defined.  
PX4/PX4-SITL_gazebo,220,2018-06-17T14:48:16Z,2018-06-20T21:21:59Z,True,2018-06-20T21:21:59Z,3c7d18d0a52657106a3a7190c54006ed6b442071,1,2,2963072c595ab56998412309f8cfe96b3517e935 3e9a05f8488489d5b0d07e7ef9bb2b0adc1d772c,,travis use catkin build tools,
PX4/PX4-SITL_gazebo,215,2018-06-09T13:28:36Z,2018-06-11T09:35:49Z,True,2018-06-11T09:35:49Z,7b136e24854ebd3c47d4e3a0baa2bc7a90987b76,5,3,479e2d44eb8d31d4c544a26b9bd0418a4222ec03 1977e0d1c45fe239bf2e87fb4d4aaac8e1345965 a2932c5d79bc00c7307c4ca83743fe5326a646f9,,Separate iris_opt_flow and iris_vision models,This pr separates two models: iris_vision that uses vision_plugin and iris_opt_flow that now is using optical_flow plugin instead of the previously used vision one.
PX4/PX4-SITL_gazebo,224,2018-06-22T19:12:41Z,2018-06-24T10:20:29Z,True,2018-06-24T10:20:29Z,fcee53fc4c6ef734204fd74eeed2db5b767027ad,2,1,c37c9e981882e614a9796875350f7d36396314a6,models,vision by default do not send ODOMETRY Mavlink msgs,@mhkabir please have a go. @EliaTarasov please check if this agrees with your experiments.
PX4/PX4-SITL_gazebo,226,2018-07-13T14:38:49Z,2018-07-13T14:45:09Z,True,2018-07-13T14:45:09Z,76032290e976ef770404f0105454afe54e94e833,4,1,c6b67e2d0e57613d08354b18ada58863fe1b1663,,iris worlds remove uneven_ground as a default world model,For SITL testing  currently  uneven ground seems to be too much for normal systems and oveloards the system processor and memory. The uneven ground should be kept as optional  and not defaulted.
PX4/PX4-SITL_gazebo,225,2018-07-04T07:00:32Z,2018-07-13T21:02:30Z,True,2018-07-13T21:02:29Z,ac54b8fdddd9b21dbe6d59deaf46494864858bc9,2,3,d0ad592ca9561314821690e0742f924b2c612e2f 2691e5dcfc1eac083823843591771519bc7c601e 8397a1bfe46a41d7df9d5026a1223ff8ef8582c8,,Fix bugs in baro noise simulation,Fixes https://github.com/PX4/Firmware/issues/9713
PX4/PX4-SITL_gazebo,229,2018-08-20T15:07:36Z,2018-08-20T15:54:30Z,True,2018-08-20T15:54:30Z,821c55ca714d7acf93d8ed96af71237b8437e488,2,3,dc69bd4c0bb0f368fa286c66dbdae8ca3c8fbf5c 9b775762fe5da329a3ef17edf716f6c9ee27adcd 4df4e336763f7e3df1568cb857ba06f15aad76a8,,Pr mavlink interface cleanup,This pr provides some cosmetic code fixes.
PX4/PX4-SITL_gazebo,227,2018-07-16T08:41:25Z,2018-07-16T10:33:38Z,True,2018-07-16T10:33:38Z,c1ca87e37b831cd4b64ac642957e701875738909,2,4,bdc57155f1381e5682b0ada7c27ef5326d37f0cc 76dc4ca1bc92b484d993df5694c514977868f820 842b01c2c0e682f870078e8f7adc61f1b7ed6b40 316e48c41119307149acf4978c67a92fc208dc0e,,pr fix rpy sign init,This pr removes hardcoded rotation signs for gimbal and makes the latter depended only from `sdf` file.
PX4/PX4-SITL_gazebo,223,2018-06-21T07:43:26Z,2018-08-03T15:08:17Z,False,none,01854eb0421685d2fd90eae0f6f7310dd7965c41,8,23,41ff5a198ee150127190bba573d55c6a03faced4 d49c1f52d573b2abcdfb710a0ba960bdc3bdbac4 372513df4379a44e89aaadb1ac0100f65f156ce6 346dd8249300b395708b98b53b8fa6071219b4c2 df040c9fb21b321a39c0c0566a8b7e3b64e14e64 aba1c045db48e974863df622e2c32896056278dd f1c5ed4ebf362fe72d957931c5306a96a4b85656 2bb94ff65b6b5d4084b7b444923e61582b2a62a8 98ff5a867e47dced05088f32b840349e4c4c9a96 03a86474c9704b82163d2ab7697d69160331d3eb 189312c9e7528d381a6f7598c77339633bccda8e 9a7857bfb7af0d4866116aa2905463d41ad74d9d c759841dd7bc2366e1737a29cdb40c51219c017c e82bb02d7a4728e7b2571d39414c574a0e0027be 7c0526d73d4d4dcba9d1baaa4c7b4c920b496105 df91e59db2ea0c4315e60619aff10a57c1fd9314 6e49dd78767c87b201ea243b181649dd164fa948 ae391a42ca0d55a1d8d6ca26e199aeaf5c6e9a55 00f9e979700a35086cf057b03e5af3d29f3d7c21 a92993092d0bee81ceae7322909f56931061310a 298c19125af0643f7db137138884f6759dbce273 c7f0dcefe5903bd456094fd7cbb5b888023130ea fa17b07596578c6080ccccacaba8a7d72024e1ab,,Gazebo vision plugin ROS,This wip would add the possibility to subscribe to ROS external vision pose topic.
PX4/PX4-SITL_gazebo,230,2018-08-31T06:53:13Z,2018-09-12T15:30:58Z,True,2018-09-12T15:30:58Z,14f09ff8de8c2deb0058cdca5219712d633b66d0,3,3,ae7f8013dc46eb2c7eca8762b53364250201ebc2 f3573c4b2fc1e4c992e901eb5fbf41bde56d352a 82f99e8c6dda8d5169700bd2d87bc9103556178c,,pr enable wind plugin,This pr enables wind plugin again.
PX4/PX4-SITL_gazebo,234,2018-09-29T17:51:01Z,2018-10-02T06:30:46Z,True,2018-10-02T06:30:46Z,1264b74493cd2f362d852530bcc7423a013f2151,3,4,fa960b9143f1f19532612f2b5eb834bda5e5d32f be60699c92fadebce8b0581591adb637128e8ddd 9e7108231417ad6e150d7342561bdedccaf7e37e 3b3ba997ca69c9925e951baea2810034e9dee6a4,,Travis general containers update,
PX4/PX4-SITL_gazebo,236,2018-10-07T20:25:09Z,2018-10-09T12:34:04Z,True,2018-10-09T12:34:04Z,70ca64654061fb7a4279846d9da1ad3512cfc6ba,5,1,25e32eef4c86c534a9e2c52904e08cf33551145b,enhancement@mavlink,Feature make sending simulated vision estimation data optional,By default  we were sending `VISION_POSITION_ESTIMATE` msgs from the simulated environment. This represented a problem to people that want to test their VIO pipelines against simulated camera data and send that same data through MAVROS (for example) to the FCU. This PR addresses that same matter  by allowing setting the visual data to be sent or not depending on a Cmake option - it's like this rather than directly changing the parameter on an SDF given that the `iris.sdf` is generated by xacro on build time.
PX4/PX4-SITL_gazebo,237,2018-10-10T10:51:25Z,2018-10-10T15:18:16Z,True,2018-10-10T15:18:15Z,d1f0bd4367d1cab01c772bb593a3f750b2f7dce2,17,8,1bc0e63f9fa0db156e11464ec5727968a5b13fc4 1819f80b36bdb12c7fd8436eaa8d17c6740b86f8 6ae7b9b03c3646d75a23458d8aea3f0a683f38a6 1570dcb6379d0c675847d05c4c013c79da8b9c68 a83c60841f067c01ebb4b23efe701d3603e2acb2 a6dfe5c445dd605b5d0ae8f90a713b765d9873fa 9a4a27ad3fce67b2c856a78509a71c3026a840ba bb6f6afefb40b344414163a4756253396b71b793,,pr fix timestamps,This wip is intended to fix [timestamp issue](https://github.com/PX4/sitl_gazebo/issues/231)
PX4/PX4-SITL_gazebo,238,2018-10-11T10:20:24Z,2018-10-16T14:12:37Z,True,2018-10-16T14:12:37Z,3d80f63562c24c1537e1f8423ce649c99ebc15ea,5,9,8a8f9b403276630c257e6d9978868b1bcc228f5d 3ebe07f226f23a26f52287106d8456dd422cd131 7a1a1b676e5a15e7be66a2b976bb6fa4c58eb864 fdaefbc0fa8643fe5d3590b21e7e89e11d0ab06c a96ff8c0cdc37a30de5d6ad9dffac07ebf7b717c 012839364f8ace04d5d144910426c98d7e697ccf 26d0637cc363c14dae722a0ab776a0516f1650da 39c7643f54dcf16a25930d3baa63341a5d451192 11dac113f76258ab80951d371214a2326ffc126a,,Pr add OF sensor no gyro,Add support for OF sensor with no gyro onboard. Tested with `iris_opt_flow`.
PX4/PX4-SITL_gazebo,243,2018-11-07T23:45:12Z,2018-11-10T15:01:27Z,True,2018-11-10T15:01:27Z,913c09423944945839b68cefcb29b053182b06d4,2,3,368f8b8ba7b16cd1f5295ec5c9bc795715d2fc26 ba40c8d9c859010c832f306a966135b1729f979c 85c258b18a2ec546935f19bfcbb7d5f4bc56d679,,Set CMAKE_CXX_STANDARD so cmake does not duplicate std setting,The current CMake scripts cause 3 different language standards to be set when building. One by cmake/EnableC++XX.cmake  one by gazebo  and a default one that CMake will append.    Neither the language standards that EnableC++XX.cmake set nor that were in GAZEBO_CXX_FLAGS were actually being used  since cmake's was last on the arguments.    Before this patch c++17  c++11  and gnu++14 is set at the same time.    > /usr/bin/c++  -DLIBBULLET_VERSION=2.87 -DLIBBULLET_VERSION_GT_282 -Dmav_msgs_EXPORTS -isystem /usr/include/gazebo-9 -isystem /usr/include/bullet -isystem /usr/include/simbody -isystem /usr/include/sdformat-6.0 -isystem /usr/include/ignition/math4 -isystem /usr/include/OGRE -isystem /usr/include/OGRE/Terrain -isystem /usr/include/OGRE/Paging -isystem /usr/include/ignition/transport4 -isystem /usr/include/ignition/msgs1 -isystem /usr/include/ignition/common1 -isystem /usr/include/ignition/fuel_tools1 -I/home/jschloss/firmware/Tools/sitl_gazebo/include -I/home/jschloss/firmware/build/posix_sitl_default/build_gazebo -I/usr/include/eigen3 -I/usr/include/eigen3/eigen3 -I/usr/include/gazebo-9/gazebo/msgs -I/home/jschloss/firmware/mavlink/include -I/usr/include/Paging -isystem /usr/include/opencv -I/home/jschloss/firmware/Tools/sitl_gazebo/external/OpticalFlow/include -isystem /usr/include/uuid -isystem /usr/include/x86_64-linux-gnu  **-std=c++17 -std=c++11** -Wno-deprecated-declarations -fPIC   -I/usr/include/uuid -I/usr/include/x86_64-linux-gnu **-std=gnu++14** -o CMakeFiles/mav_msgs.dir/CommandMotorSpeed.pb.cc.o -c /home/jschloss/firmware/build/posix_sitl_default/build_gazebo/CommandMotorSpeed.pb.cc      After this patch  only gnu++1z is set.    > /usr/bin/c++  -DLIBBULLET_VERSION=2.87 -DLIBBULLET_VERSION_GT_282 -Dmav_msgs_EXPORTS -isystem /usr/include/gazebo-9 -isystem /usr/include/bullet -isystem /usr/include/simbody -isystem /usr/include/sdformat-6.0 -isystem /usr/include/ignition/math4 -isystem /usr/include/OGRE -isystem /usr/include/OGRE/Terrain -isystem /usr/include/OGRE/Paging -isystem /usr/include/ignition/transport4 -isystem /usr/include/ignition/msgs1 -isystem /usr/include/ignition/common1 -isystem /usr/include/ignition/fuel_tools1 -I/home/jschloss/firmware/Tools/sitl_gazebo/include -I/home/jschloss/firmware/build/posix_sitl_default/build_gazebo -I/usr/include/eigen3 -I/usr/include/eigen3/eigen3 -I/usr/include/gazebo-9/gazebo/msgs -I/home/jschloss/firmware/mavlink/include -I/usr/include/Paging -isystem /usr/include/opencv -I/home/jschloss/firmware/Tools/sitl_gazebo/external/OpticalFlow/include -isystem /usr/include/uuid -isystem /usr/include/x86_64-linux-gnu  -Wno-deprecated-declarations -fPIC   -I/usr/include/uuid -I/usr/include/x86_64-linux-gnu **-std=gnu++1z** -o CMakeFiles/mav_msgs.dir/CommandMotorSpeed.pb.cc.o -c /home/jschloss/firmware/build/posix_sitl_default/build_gazebo/CommandMotorSpeed.pb.cc  
PX4/PX4-SITL_gazebo,235,2018-10-03T08:49:54Z,2018-11-14T10:28:53Z,False,none,0252ad8f274fc6257ad70bafbbd15270b1489d25,2,1,5aaff0acdaa49a33a7891d5de3e8e6079d1c6fec,,pr add normal gaussian distribution to wind force and direction,This pr adds normal gaussian distribution to wind force and wind direction.   Result: https://drive.google.com/open?id=1c4jpqSRXzqx94t36fVlpSpllU4TGzXi4
PX4/PX4-SITL_gazebo,245,2018-11-14T11:14:45Z,2018-11-18T15:03:07Z,True,2018-11-18T15:03:07Z,2adc86b5bf84543091470966caf33c3b4f3ee666,2,3,b3f0f776bf6c5267316d42a900e4c263b5c543c4 d5a9006198c1250703eec2ff00b48a0e256cc88e f81a91b7eccc87e12921c11f365b4782f08c6150,,Pr add random wind and gust,This pr adds normal gaussian distribution to wind and gust forces and directions.
PX4/PX4-SITL_gazebo,246,2018-11-15T02:50:28Z,2018-11-21T13:18:41Z,True,2018-11-21T13:18:41Z,0d3b31c9eb2328d30484439de782c45b079d5dfa,1,2,cfe40b65d308112eea09ecd212c53e71c98d2c61 74ee992135309db0291f76988643f68d2ec666b4,,Fix typhoon_h480 simulation with gazebo_gimbal_controller_plugin,There is bug when use gazebo::msgs::Any m  so still use GzString instead   Although gazebo above 7.4 support Any  still use GzString instead    for test vmount    Start the simulation with (no parameter needs to be changed for that):    make posix gazebo_typhoon_h480  Make sure it's armed  eg. with commander takeoff  then use for example  first   vmount  stop  then  vmount test yaw 30
PX4/PX4-SITL_gazebo,249,2018-11-22T12:56:07Z,2018-11-25T14:58:03Z,True,2018-11-25T14:58:03Z,69aebaedaaf39d2fe45c9383b590669fc535b9fb,1,1,48693abb9c8ac1d5d7c0e8fd452f10438b7bf00d,,update the magnetic declination table,@dagar   Updated the declination table to match the one in ecl  https://github.com/PX4/ecl/issues/523
PX4/PX4-SITL_gazebo,248,2018-11-20T21:42:34Z,2018-11-25T15:52:55Z,True,2018-11-25T15:52:55Z,b05b6d5735068b7cf85bb9b529f5fa1318e1810a,1,1,556b9da92d2e2a760e1d474ce7733c721f127bee,bug@SITL,gazebo_mavlink_interface vision fix attitude rotation,Further testing with the `iris_vision` model lead me to find that the rotation for the attitude was wrong. This fixes it.    As examples  here's a test with LPE+AEQ: https://review.px4.io/plot_app?log=bcc69b12-26ec-4428-af66-da464aa58c5c. Same for EKF2  with vision position and heading fusion: https://review.px4.io/plot_app?log=17246819-f0ff-47b2-9819-3e66ab6c2945    This also supports the change in https://github.com/PX4/Firmware/pull/10872.    @LorenzMeier can you review? Thanks!
PX4/PX4-SITL_gazebo,250,2018-11-22T15:21:55Z,2018-11-25T15:53:59Z,True,2018-11-25T15:53:59Z,7c97eeae139d86b3747ea877d8067fb3180dc4f1,2,2,58586e01914888767bb04b0ef5f0b38b8f701d7b 5ae44eee5ae83d8dae6c3c4f8eebf1e581aa57f4,,Update camera settings,
PX4/PX4-SITL_gazebo,251,2018-11-25T15:04:33Z,2018-11-25T15:54:24Z,False,none,05778edb63bd56d1e1bb370304b7437c4333858d,1,1,f6754e19d81ec5cbabe0fa497aac8090eeded25b,,travis ci update docker images to 2018 11 22 tag,
PX4/PX4-SITL_gazebo,252,2018-11-27T12:43:09Z,2018-11-30T13:06:06Z,True,2018-11-30T13:06:06Z,d08eb5b22d3edfb7a740c883b06f895a173b5519,5,1,af4127ca4e24f66bb8a9b24ef2823d38a0fb76a5,,Update opencv includes,Starting with opencv 4.0 the include cv.h is no longer available.  Therefore  the deprecated includes are removed and replaced with the opencv2 includes.    Also  one the define RGB2BGR needed updating.
PX4/PX4-SITL_gazebo,257,2018-12-10T15:09:30Z,2018-12-11T19:34:05Z,True,2018-12-11T19:34:04Z,10fbc90c4a3d89348b045ee03a81720e10344260,34,17,37193963a506f5311ef21f2c2db5e9c6c1396151 98248ab1670302fa78fc36683cf3ddefb7969dea 922f192239b3a35e6abb99626a73c286a91fd522 d0e65b6b22bff6ad1271d2108cfc6f51e82d9431 a10eefbb42ab889dbbcff0b1c36bbe38bae5adb1 7db5981af1d9500e62eceaa7fea90fbc5e2314d5 82089b5256904ee1ed669e168824db33df0cd5d1 53045461489ce4a33504486206a5fd4d59f6bf94 cd4449e1c2ad56454c54084552e24cdb8acf6c2b f3502ad552d4b400bd467d094d3e85089511e0a5 effee7976d5f3f2890f3b6fddb1bb44fd3c02ea5 be7d55c2ecbf6eb73806bc2ad83d26e5c4b98e40 133c74bee036751b97ca63abfd29c8f11513056d 9f4759d81c261f27d3eb1a1617e4414b688b4654 1d910009a2694a6aa68c2dc232f850fa84473b00 0a7b8769b3548b5f37db1fafde6ae4fe7e4db582 d27efd7937be8dc8453abc41be641a6660ecdc13,enhancement,Add lockstep,These are the changes required to get lockstep running with PX4.  https://github.com/PX4/Firmware/pull/10648    This adds the option for lockstep simulation. Lockstep is off be default  unless `enable_lockstep` is set to true in the vehicle's SDF file.    Basically  lockstep means that PX4 is "stepped" forward by each  hil_sensor MAVLink message containing a timestamp which is then the time  set for PX4. Then  this plugin waits for the actuator_control message  coming back from PX4. Once that has arrived  we move on which means we  resume the simulation to get a new IMU sample.    Therefore there are two locations where we wait:  1. In `OnUpdate` we wait for the next IMU sample in case the callback     for the IMU message subscription has not triggered yet.  2. Then later in `OnUpdate` we wait for the actuator control message to     come back from PX4. Basically we use `poll` and `recv` until we have     parsed the message that we're looking for.    Note that we "freewheel"  so we send hil_sensor messages without waiting  for actuator_control messages for initialization until PX4 starts  sending actuator_control messages. Once we have received the first  control message  we start the "lockstepping".
PX4/PX4-SITL_gazebo,258,2018-12-12T09:44:28Z,2018-12-12T10:47:59Z,True,2018-12-12T10:47:59Z,c90e8ad2b27b95dc0b4c45b346509477c5fa593d,2,3,9545770021a36f5cccac1645991ff8025484762f 59b6cb25daa0acdaa394eebcd6d9252eaf824312 4cb3a03b472becf8aa89c2e747a49e4f2f593676,,Fix future promise race,This is a follow up to #257.
PX4/PX4-SITL_gazebo,260,2018-12-14T20:19:16Z,2018-12-14T20:23:04Z,True,2018-12-14T20:23:04Z,46a3d274775bfd484e8d56cd99e6433210820732,1,1,662718cd82ca50e061c833ed6b69627be281b717,,Fix bug in ground truth altitude computation,For computation of the ground truth message in the gazebo GPS plugin  the gazebo world position Z-value gets subtracted  when it should be added to the home altitude just like it is done for the GPS message. See issue #259.
PX4/PX4-SITL_gazebo,261,2018-12-26T11:18:06Z,2018-12-26T11:35:35Z,True,2018-12-26T11:35:35Z,e945745021a74ae45695a624dfc114a5c7bbd6bc,2,1,41d486dd65d90d1693229bb10b2fe66c8ad838e8,,worlds fix rate for tailsitter and plane,I must have missed these in previous commits for the lockstep implementation.    Thanks @priseborough for spotting this.
PX4/PX4-SITL_gazebo,244,2018-11-10T15:29:39Z,2018-12-26T15:27:52Z,True,2018-12-26T15:27:52Z,4f42496415211151d4ef18b86ce0a500425880c7,1,3,f0947ebbded0800581be41368384a0ebdae93d8f ec9abe5ad0abad835363d833a9369a8d1f29078e 29f6ae9ddbf3be4706a66a5b80408b23e0bb485a,CI,travis macOS update Xcode to 10 1,
PX4/PX4-SITL_gazebo,262,2018-12-30T23:55:42Z,2018-12-31T16:33:36Z,True,2018-12-31T16:33:36Z,a4397781253e1e49f6f6fcad55b0091bc1785d90,1,1,ad50443118ccc82bc0b66738d5e43a11dfd87bc5,,Remove bad model path export ,I get an error on launch about this  I looked at where it was added and it seems to be a typo.
PX4/PX4-SITL_gazebo,263,2019-01-01T14:47:36Z,2019-01-01T18:09:57Z,True,2019-01-01T18:09:57Z,a912715debd3b84b674969120688b2def80e264f,1,1,9dde18082e22d9ee5dc0671c761bc10fc8402f4f,CI,CI update container tags,This aims to fix the CI build by adding newly built containers with updated ROS Mavlink release.
PX4/PX4-SITL_gazebo,264,2019-01-10T08:09:42Z,2019-01-10T08:10:26Z,False,none,041c37c05be33216ba3ead97c8be9c01c847b5cc,4,2,b8d0c91a3465e4f797a509c9b31a56bb76b9123a 80df484cd0fd51f37942a345035f931f33f3f7d0,,Hidro,Modified iris sdf and iris world
PX4/PX4-SITL_gazebo,265,2019-01-11T06:48:33Z,2019-01-11T08:19:19Z,True,2019-01-11T08:19:19Z,12fb19ac6e7695ffc3dc9a64fcdd8499a522bd80,1,1,2cb7ae76efa7c71a04140150040348ff1a00276a,,gazebo_mavlink_interface don t abort on timeout,It was probably not a good idea to abort on timeout. This lead to CI failures when the startup was slower than expected and the timeout would get triggered.    Should fix https://github.com/PX4/Firmware/issues/11144.
PX4/PX4-SITL_gazebo,267,2019-01-22T21:34:01Z,2019-01-23T08:53:10Z,True,2019-01-23T08:53:10Z,0efbe6954779dd5d4edbc8221b1e01a5baad398f,1,1,f8b215d7bab8e2e7092da231236953ae5bcd3d1a,,Fix building on macOS,When I do `make posix_sitl_default gazebo` in PX4 on macOS Mojave  I get:    ```    "boost::filesystem::detail::remove_all(boost::filesystem::path const&  boost::system::error_code*)"  referenced from:        boost::filesystem::remove_all(boost::filesystem::path const&) in gazebo_geotagged_images_plugin.cpp.o    "boost::filesystem::detail::create_directory(boost::filesystem::path const&  boost::system::error_code*)"  referenced from:        boost::filesystem::create_directory(boost::filesystem::path const&) in gazebo_geotagged_images_plugin.cpp.o    "boost::filesystem::detail::space(boost::filesystem::path const&  boost::system::error_code*)"  referenced from:        boost::filesystem::space(boost::filesystem::path const&) in gazebo_geotagged_images_plugin.cpp.o  ld: symbol(s) not found for architecture x86_64  ```    This commit fixes it.
PX4/PX4-SITL_gazebo,272,2019-02-01T03:56:38Z,2019-02-01T04:51:36Z,True,2019-02-01T04:51:36Z,bab0de9fd217d159e27b7100c78236e996b837e8,10,1,5ae1ac6450b7d42995827c010abb0431297f3b90,,models remove matrice 100 opt flow meshes,The `matrice 100 optical flow` model inherits from the `martice 100` model. There is no need to have the meshes in here twice. I can't really test this because there is no px4 SITL startup for the matrice. That leads a bigger discussion about even having the model in here at all. Thoughts on keeping non-testable SITL models? I'm not even sure the `matrice 100` model works. Anyway  this saves ~**80MB** which will help CI when we package this all up in Jenkins.    EDIT: To be clear: this only removes duplicate meshes. It does not remove any models.
PX4/PX4-SITL_gazebo,271,2019-02-01T02:28:47Z,2019-02-01T09:04:46Z,True,2019-02-01T09:04:45Z,38fe49a682ddcba4dfa158428814118545c4acfd,1,2,3203b14d7775c912dce0e700a9fd83d413b5a41d 13eb34b5704ac901073364f40ff0deec7b2c7d2b,CI,CI Update Ubuntu container tags,
PX4/PX4-SITL_gazebo,274,2019-02-01T23:24:49Z,2019-02-02T00:13:29Z,True,2019-02-02T00:13:29Z,93159f31905e489f047724c9b72c4de077b6f5de,1,1,6d9915f0ecf0626a4c29ebfd763bf62b2ad89bcd,bug@ROS,CMakeLists install package xml,Addresses https://github.com/colcon/colcon-ros/issues/46#issuecomment-459783679. This fixes the install process of `sitl_gazebo` and allows to use the package correctly inside a ROS context.
PX4/PX4-SITL_gazebo,239,2018-10-11T13:56:24Z,2019-02-04T16:03:35Z,False,none,de640fc469e7e2b97f6451b51d3bd028b3ec4a25,1,1,4b00d7459977c5d7d3a0d98c5b5dd56e5769e818,,cmake use gold linker if available,
PX4/PX4-SITL_gazebo,277,2019-02-05T09:19:40Z,2019-02-05T09:23:13Z,True,2019-02-05T09:23:13Z,34d06e042c9dbd336899dbba373e32a6f19828b7,1,1,cc0bc410435ccca5574781332c0dcf3e20595e44,,create a plane_cam world,This is following up #273 and I would say resolves #269   Having the world makes it much easier to test out the plane with the camera.    This is an exact copy of the plane world with the plane_cam substituted.
PX4/PX4-SITL_gazebo,281,2019-02-09T17:25:44Z,2019-02-09T22:27:16Z,True,2019-02-09T22:27:16Z,f8b4f545f1b2d90000e37cc53f744849d939fb52,4,1,60e3c37891cf0c41209b753edfb6669f52d016d5,,Odometry rename twist covariancce velocity,https://github.com/mavlink/mavlink/pull/917  https://github.com/PX4/Firmware/pull/11421
PX4/PX4-SITL_gazebo,283,2019-02-17T07:42:43Z,2019-02-18T10:19:34Z,True,2019-02-18T10:19:34Z,b34a96e7e5572209d21b9445be048c77ef041baa,2,2,a80e787c5a674f5f1d3fa86d60bd6a2b5dc91a7e 159e716b4999822fa213c9658637626ecc1da113,,add mavlink_tcp_port for multi vehicle simulation with gazebo,Hi     I found that the multi-vehicle simulation with gazebo didn't work in the master version because there is no mavlink_tcp_port parameter.    For that  the mavlink_tcp_port should be added.    Thanks in advance 
PX4/PX4-SITL_gazebo,282,2019-02-15T10:57:37Z,2019-02-19T07:25:39Z,True,2019-02-19T07:25:39Z,2e80474653bcb7808a7dfced4cf403ef607d69da,4,10,0623a32085d1864c5a4894727486c51d87db655a 6d62b40b8ccc6926198b0d4d56a26a568a7dc466 490dd6d52f4c720b0e6e6353987caf8bc3077858 88f09ea43d59490342ca13ab3adf31ef6a324be4 cce112353d939ea20a2ebb383c1790ac300fc41b 24fb9d8c7a0c84186ceccec3483fee4b209708c2 8e52ee67f5fa0dda1e71b8cb0207c51d8d674ce1 30795ea10618ab43f81e7ae51c0c5701e3a7665c 44b119b677ef541a83600e3049bc8ab97adadd62 dbb377c73b188921b8da3aa302ab4404ee07792f,,fix magnetic field calculation based on geo lookup for WMM2018,Relates to [issue](https://github.com/PX4/sitl_gazebo/issues/278).
PX4/PX4-SITL_gazebo,273,2019-02-01T04:17:33Z,2019-02-01T12:26:27Z,True,2019-02-01T12:26:27Z,c5882f72ae67616867f1244cad6101acd476735f,5,1,685c2148f705e63ddb6535bbfd0eba983d41e849,,models plane split up adding plane_cam,See #269.     What I did:  - Broke the camera out into its own model  `geotagged_cam` (if you have a better name  let me know)  - Removed the camera from the plane model  - Added a new model for the plane with a camera -- creatively named `plane_cam`. This model inherits from `plane` and includes the `geotagged_cam`.    It loads and flies. I'm not familiar with the plugin or how to use it (`gazebo_geotagged_images_plugin`). I have no experience with imaging sensors in Gazebo. It would be great to get someone who does to look at this.
PX4/PX4-SITL_gazebo,301,2019-03-14T09:45:05Z,2019-03-14T20:20:50Z,True,2019-03-14T20:20:50Z,09b20e62df749b027b4741d6c001f8b36da06288,2,1,11e7e6080ac181063e29be2b16cd4be00e942aee,,fix hil disable lockstep if HIL is enabled,
PX4/PX4-SITL_gazebo,270,2019-01-31T18:25:09Z,2019-03-24T17:37:36Z,False,none,fcea152314703b214b16031c7fb996dba0ab1842,1,3,de95087d6db3cd3f619a8bbfcc7a7a90d2bdeeb9 96cd9e2bb6815f40492f89356e1ef8d89c75e00e e7daf8ed92d6db2a1cf24b57b9f0f458527643a5,,Adding a way to find Ogre library,This patch resolve the problem of finding ogre cmake files.  This problem is reported when using ogre 1.9 on arch linux
PX4/PX4-SITL_gazebo,300,2019-03-12T16:31:07Z,2019-03-27T00:15:58Z,True,2019-03-27T00:15:58Z,2f0070ec6c29c34b9bae10ac03224775627c338a,5,6,5a1141c17bec33b5c6274dde72b91ed9f2dc4b0c f5f94984f54434ade0795ab9693ca4b59e6ff9f9 d3a043da45112591af4d12f10ec1b265ca0d8311 7e20271b6aac6531709929565857fbac977def1e 600e5ba58e55ebe0acf7cf9150fe713550e1c47f c01cacdc18ad748beec0dba20a8384c4c1397dd2,,Add iris for Obstacle Avoidance,This PR adds a new simulation vehicle  similar to the `iris` quadrotor.    It is required for some of the Obstacle Avoidance work I am working on making public. Main difference to the regular iris is an added sensor which publishes collisions on a ROS topic. Firmware-side changes are an additional mavlink stream for the SDK in parallel with MAVROS
PX4/PX4-SITL_gazebo,306,2019-03-26T10:23:02Z,2019-03-28T11:13:12Z,False,none,fb03fa96421bb9c93fc0dd0452a139302c95c7a5,3,1,25209b6c71d41d44d0e4babb2cfa13e6992d18de,,WIP add type and facing to lidar plugin,The intended goal of this PR is to remove `lidar_plugin` and `sonar_plugin` and to create unified `distance_sensor_plugin` instead. Currently `lidar_plugin` and `sonar_plugin` have almost the same distance models and their handling inside `mavlink_interface` is almost the same too.  
PX4/PX4-SITL_gazebo,309,2019-04-01T09:59:51Z,2019-04-01T14:43:38Z,False,none,406a69fdcb5a5fde0007ed8feff686e0d0cfc810,1,1,0e4b244e4359a8ac65c9e48ead55f142925e81b8,,Critical fix,LGTM @bkueng  @julianoes 
PX4/PX4-SITL_gazebo,299,2019-03-11T16:18:49Z,2019-04-01T15:12:10Z,True,2019-04-01T15:12:10Z,e0dfe7ea45c849e676c201b7428bf8df975d4790,1,1,1eaf16927d234d3c0dab65d33920f50a8f2b3558,,Fix 298 compiler error on macOS b c of openCV C 11 ,The OpticalFlow component uses OpenCV  which needs C++11 to compile.  So include(EnableC++XX) must move up above adding the OpticalFlow subdirectory.    fixes #298 
PX4/PX4-SITL_gazebo,311,2019-04-03T15:04:29Z,2019-04-05T07:25:08Z,True,2019-04-05T07:25:08Z,0e43ddafa0c70a190a9080c17c9540d8f7ab5261,5,5,464b76deae9ccfe151e880a938b2d6b099c4ae3b fe82d2e8c2a011e0d634eecd7a2f98561f36e66e 2636ce2a18899d75a30425dfb2e5c4d249a16de1 0181b811c194b81ec080be1123e17c261eb22c8d 7ab6ec39ca5b59ea36529589c39469f674124c85,,Fix macOS CI,This fixes the warning seen mostly on macOS:    ```  warning: expression result unused [-Wunused-value]  for( e_model; e_model; e_model=e_model->NextSiblingElement("model")       ^~~~~~~  ```
PX4/PX4-SITL_gazebo,295,2019-03-04T10:25:01Z,2019-04-08T22:50:07Z,True,2019-04-08T22:50:07Z,1dfa1652caaa08722a41047a9822889c73e42abb,17,4,87ef2d7999cf1df5b21578c7b96e0d8d39d87cd9 6c0bb75c768909597de5a2310251b79b5dafad5c 05400c01ec6b95b54960f5e87bb61342d02cab40 c808011e5e18a2b8efbb8dc8edb967995cf94a62,,Create separate plugin for barometer,Move barometer calculation to separate plugin.
PX4/PX4-SITL_gazebo,294,2019-03-04T09:10:28Z,2019-04-08T19:07:03Z,True,2019-04-08T19:07:03Z,334c097b7e90675adf1118d1ef1a98980ece4f48,17,9,ca2fd3616229a6b458d4e5f22068138bdcd5aee5 02aa395eae53fd0c52e206a3497e60e95dccec64 7e62abe2d0d105c5ad84eb1788f2ab3b29b0b7fd 0f73dc4f6cb382adb6204969a4dfa77036bdb039 519d411a272bf00fbdd588966eaf839de174fa61 d9b422cefb34bb696d574755af8ad66786f4ab52 8da1c9a984b8c10eb55da467c6b0738fddae4a97 5213c2b57db022fbf1a6a27ce00d2648a4ac9aee 67e1dda2ec339b50085f7793abdacdee2c05d53a,,Create separate plugin for magnetometer,Move magnetometer calculation to separate plugin.
PX4/PX4-SITL_gazebo,314,2019-04-26T13:16:30Z,2019-04-28T11:38:34Z,True,2019-04-28T11:38:33Z,f13b91e5756017a43ecdce1b574d17828c3e99bb,5,8,f5f2c26b37461dd735673acf9adb938905d82361 25ecf6a09b8a641e8b16b497b335c7236aef1dc7 b71afd2d91d5ef6391d77f771627eb38a5d05bbf 0a0b282141222669359707422bfeffd5dd2e1ea6 bdebf91476f6d5a7c1b46e3329c60a34789ff20b 4a4183adc2244c2a546bd011a4a3036091a7edd3 34e54f859112046b7aea62288e353503493c1326 4d5d672a3bac7f4e4f1e8acc0e595a56c8e3fcca,,Fix deltaquad vibration on ground and add airspeed noise,See commits for detailed information.
PX4/PX4-SITL_gazebo,279,2019-02-07T08:26:19Z,2019-04-29T13:28:21Z,False,none,4cea95dd9fa688db5f2e182ccece70e86495fdea,4,4,2d311f1ead9e28c70c3dddb4ee762a31e7ee6a9f cf86c618eec7a21aa34c8436bfd632bde13e61f1 3d2196c3a598f5632155272e604f5d9dc2293a77 6a800bf4c37969fb640faa01d72db8deb86f7851,,Add IF750A model,This PR introduces a new simulation vehicle  the Auterion reference frame assembled by InspiredFlight  the IF750A.    The current model is heavily borrowing from the `iris` model  simply replacing the body with a respective .STL file. Some minor adjustments in scale and orientation  as well as propeller placement were necessary.
PX4/PX4-SITL_gazebo,29,2016-07-08T06:52:39Z,2016-09-01T20:07:19Z,True,2016-09-01T20:07:19Z,4658e205591f02199743940d651ee6d69b019364,7,1,4658e205591f02199743940d651ee6d69b019364,,Gimbal controller from John Hsu,
PX4/PX4-SITL_gazebo,51,2016-09-28T16:55:55Z,2016-10-05T06:08:37Z,False,none,c23033b194a7ae3ed08af374dd7450a1229bd4ac,1,1,2ad4e63c22fd5ea54d75de6885f35ede222a5e17,,Gimbal PID tuning ,These gains and saturation work better for my gimbal  I still need to test with other gimbal. 
PX4/PX4-SITL_gazebo,176,2018-01-29T16:46:52Z,2018-01-29T18:47:45Z,True,2018-01-29T18:47:45Z,56222e69a11cf9dc0785e55b35e19349e520ced0,2,1,980a5522cc715e057700c94b91142ec33e003dee,,default iris position,I think it makes sense to use another starting position than zero. (0.83 is the height of the uneven ground at that position). 
PX4/PX4-SITL_gazebo,132,2017-10-11T13:17:03Z,2017-10-12T06:26:42Z,True,2017-10-12T06:26:42Z,56e604251be7ae37485c6839bc9af4f88c66cecf,2,1,2e08d687b3b2b7f39aee38b86955977f8ff48bae,,optflow adapt behavior of PX4Flow,set integration time  integrated_xy and integrated_xyzgyro to zero if quality is zero
PX4/PX4-SITL_gazebo,121,2017-09-05T02:13:06Z,2017-09-05T22:36:40Z,True,2017-09-05T22:36:40Z,ce3d5ce4c10998eb8ea2bac79fe19a1468fca210,1,1,2221486dba7474e3a333a49999b734c6943d4065,,Disable geo_tagged_images for ROS kinetic ,Currently the ROS version of mavlink on kinetic is incompatible with the geotagged images plugin.
PX4/PX4-SITL_gazebo,315,2019-04-30T06:19:34Z,2019-04-30T10:50:55Z,True,2019-04-30T10:50:55Z,cef9447f6df7600b1c5bed1791ea30220627e2f2,1,1,9cad702c682361fe27fda3c1e1ea0681181ff73f,,Set initial magnetometer bias to zero,This pr fixes random magnetometer failures due to random bias init.
PX4/PX4-SITL_gazebo,316,2019-05-01T08:02:08Z,2019-05-09T15:12:27Z,True,2019-05-09T15:12:27Z,3062d287c322fabf1b41b8e33518eb449d4ac6ed,9,8,b8781caff2c9cba03e20b8c69b3b4dfce7fca805 722632f16e06e68480bca36fa82a80d327e1196b 97046d68d486120c8f1b5a1d5bfddc5d896f49c1 c19fc4bde6898340f0fdbaa0493a9d0898f8ab59 36c6c8581b41622fb53af77b259d6757d059ecac e135734b2874c594d7cce7766d0eff6608ede692 555a0b7169ea57852c1b1498f4ce2bec7ee36684 e9f0ab05a720aa5f926545a26a9f83c1a50d2627,,Add MAVLink forwarding for SDK MAVROS for Gazebo HITL,This enables MAVLink forwarding on UDP port 14540 for Gazebo HITL.    ~The current state is working but has quite a bit of duplication  so I'm planning to refactor this a bit and clean it up.~  I think for the sake of not having too much churn I suggest to merge this as is  and maybe refactor it later.    With this PR Gazebo HITL actually works as described in the docs already :smile:  FYI @hamishwillee.    Also  this disables the `TCP TIME_WAIT` state on gzserver shutdown and resolves #289.
PX4/PX4-SITL_gazebo,240,2018-10-21T16:03:20Z,2019-05-16T18:57:58Z,False,none,718f8a00a8a28e430a33c65e7d02ce92dd28666a,4,4,2a81477cf91400e9d661d6f91645314a72284ba7 77f093544d2497a02e27f9e903565750b5248d56 4d69df1df7d763d137e40af6ce8c44842bb81430 5c0871893352640d546f77414e72d9c3fcb96349,enhancement@SITL@plugins@ROS,Feature add ROS NavSatFix and PoseWithCovarianceStamped topic publishers,This PR adds optional publishing of ROS `sensor_msgs/NavSatFix` and `geometry_msgs/PoseWithCovarianceStamped` msgs to be used on the ROS side. This is part of a project that I am working on which uses the simulated GPS data on a SLAM framework before VIO data to the FCU  so I assume this can be also useful for other people that want to bring the simulated GPS data into the ROS side to be processed.  I also bring a fix to the computation of the std deviation of the random walk and now it also allows  or to set the EPH and EPV manually by an SDF element  or by computing it using the noise parameters.  To use this functionality  you need to build `sitl_gazebo` with `BUILD_ROS_INTERFACE` option set to `ON` - `mkdir build; cd build; cmake .. -DBUILD_ROS_INTERFACE=ON; make`  or if already in a `catkin` workspace  `catkin build -DBUILD_ROS_INTERFACE=ON`.
PX4/PX4-SITL_gazebo,307,2019-03-27T13:35:23Z,2019-05-16T18:57:12Z,True,2019-05-16T18:57:12Z,113605b3b9ea4ecf90048dbb7518edf987c4d242,1,1,cf9bed045bbeae4b6f7c701752ae83c7acb50d84,,Fix gimbal_controller timestep sign,Time step now has positive sign as it should.
PX4/PX4-SITL_gazebo,284,2019-02-19T11:44:06Z,2019-03-04T09:13:22Z,False,none,46a8f206c4f19128c40943b62b503815cb5c4293,5,5,32e60a77742a85a229eb52fc91391c513c8eb921 2d8dde1b6c6e0c5af13d68c1263e57c979506ecc 88384fd2909558dbdb2dbc21cbc5099cd642b394 b0e78289a550972120fb2f4e3076706861389303 a4f085b51b642a9eae056e52740d1d5f2debe47e,,Move compass to imu plugin,This is proposition to move calculation of magnetic field from `gazebo_mavlink_interface` to `gazebo_imu_plugin` which seems logical and consistent with `pixhawk` internal compass arrangement.  The downside is that compass measurements from imu now depends on `gazebo_gps_plugin`.   However from [this discussion](https://github.com/PX4/ecl/issues/397) looks like if we don't use GPS we almost sure don't use mag (We use VPE instead)
PX4/PX4-SITL_gazebo,304,2019-03-24T17:42:39Z,2019-05-23T17:21:26Z,False,none,fb6feccad0109351e6a6f6b1b89c794d5db3aef2,1,1,d14ad8170a4be1122400abaeda9d9c02bf871ad5,,Find ogre under arch linux,Since lsb_release is not available by default under arch  linux  the only way is to parse the output of uname    Signed-off-by: Omar Shrit <shrit@lri.fr>
PX4/PX4-SITL_gazebo,318,2019-05-10T17:13:54Z,2019-05-18T11:58:52Z,True,2019-05-18T11:58:52Z,a0b0eb8df12b11e8f63d3cc766dee97cefa32ab7,1,1,e765f7732afd1204adc80a2fdade7380838347b3,,Calculate iris inertia from the body colision parameters,assuming that the body is homogenic cube.  that fixes impossible inertia matrix as explaned in (question/bug)-possible error on iris inertia matrix #280  that might be not the real inertia  but its better
PX4/PX4-SITL_gazebo,310,2019-04-02T18:42:00Z,2019-06-05T21:32:32Z,True,2019-06-05T21:32:32Z,3a81838611e9d7dd22ef4995677950b7d9dd6c9d,12,3,c32eb1c8e5d28cdb5a3c4373a9accf027f9a47fa 6d450a0f85d44de01582197c8759c0222b9f0298 1022415cbb5ad94bf3fc20ca20535aaa9c695781,,Add unit tests for gimbal controller and GPS plugins,
PX4/PX4-SITL_gazebo,328,2019-06-08T20:20:24Z,2019-06-08T20:55:25Z,True,2019-06-08T20:55:25Z,af00ac4dfc5cfb25140254c5cae2a225944fc1c1,2,1,0383c0f0bc188653bb1f46bfce70431a95adfdf4,,Add support for unit tests on macOS,
PX4/PX4-SITL_gazebo,329,2019-06-12T13:57:33Z,2019-06-12T14:55:00Z,True,2019-06-12T14:55:00Z,f2593dbcc2980dd15714925931fbb0e46a63a4b2,2,1,036300b59867436eecaecbcdd52191365e36b5e6,,Renamed rover model sdf to rover sdf,Within the Firmware repository  the continuous integration scripts make the assumption that all vehicle models will be in `models/<vehicle>/<vehicle>.sdf`. This pull request just changes the rover model to fit this pattern  to make it easier to add rover test missions to continuous integration.
PX4/PX4-SITL_gazebo,326,2019-06-08T07:34:35Z,2019-06-13T05:14:04Z,True,2019-06-13T05:14:03Z,95adbb11f8deef06fb132bf0eb85c19e6ca00f6e,1,1,c12afda75bedf4429b051a9c762d8f8d74faf92c,,fix gstreamer package finding for ubuntu,On ubuntu 16.04 with cmake 3.10.2  I got include errors for the gst plugin  that it's not able to find gst/gst.h  glib.h etc.    It looks like in https://github.com/PX4/sitl_gazebo/blob/master/cmake/FindGStreamer.cmake#L73 the regex is not matching  thus relying on a ${GStreamer_FIND_VERSION} being set.
PX4/PX4-SITL_gazebo,332,2019-06-26T11:35:02Z,2019-06-27T11:33:50Z,True,2019-06-27T11:33:50Z,22df9475ca0d157e2db066a20f64c35906bf7f25,4,3,a5adea55cf72dab0e10e421ffa880d4dfeaf23be 6bc906553004b0c8516e8700e64041dc439ab32d 828b61700983e99c861bf55f8880169ded221572,,Extend Sonar Model,These changes enable to run Collision Prevention in simulation with the sonar on the Typhoon h480.  - get fov from sdf file to populate range message  - transform sensor orientation from quaternion into the enum in the mavlink message distance_sensor 
PX4/PX4-SITL_gazebo,308,2019-03-28T11:11:56Z,2019-08-13T16:11:04Z,False,none,dbe3fdfa513a1fc75fc1758c57c63b725918ba99,6,4,a6aa6ac9602db4db00762c73baa0cde7687d2747 493d0dc447105f6e605770c25c9aa0b3136e1f20 b4cbc1ed151cd11e079abe45d0a1a0548a76e5a4 434d10ae93554259dd27b3baea8377d522b11937,,Calculate direction parameter for lidar and sonar plugins,This removes hardcoded orientation for lidar and sonar plugins.
PX4/PX4-SITL_gazebo,339,2019-08-13T16:00:36Z,2019-08-17T17:44:07Z,True,2019-08-17T17:44:07Z,cc8d12532d001cbfe348832b2eb259583ff257c0,13,9,d741a348713250473a0879718fef55bdaabd7e3c 2bfa9d226d906c37c4ef37fba1bb4ab83cf4b9cd 59ccef9c957b49eb51d77aebad97b1f655d1a9c2 b8a5c799c5ea742d1da0398f5e95338397f69695 6709023fe7078a72606364822823f4e0803ba4a4 66cf2aa3098386a9f238897c5587d301117d9b6a 3fee328e1dc1b8669d9ee2cc14ef347a28e7f869 d5a1802a02daaf929b3b91d3c1b2af3860be7c07 9b866bd32159449a2d00565c27891d10e53c5d4f,enhancement@plugins,Rebase PR 308,@EliaTarasov I rebased #308 and made some changes so to to have the rotation [MAV_SENSOR_ORIENTATION](https://mavlink.io/en/messages/common.html#MAV_SENSOR_ORIENTATION) enum value calculated in the `gazebo_mavlink_interface` (since it's only Mavlink related). Though I see some strange behaviour where the `orientation` value is always jumping around between 0 and another value out of the enum range. Can you please verify this PR and check what may be wrong with the approach? The only thing I did was moving things around from what you did  so I didn't change the logic.
PX4/PX4-SITL_gazebo,276,2019-02-04T12:22:12Z,2019-08-17T22:23:52Z,False,none,33e0c7ec602e8f032cadcd4a6fbd9111ee5c0920,36,24,04aabe136a9c7e55ff6e085850c7120c460c08d3 5d35658cf74b2c65e773dc2e8befa945b803c137 f9d74b28b2aa601540ef0fcde5445fabfc09ec6b 7152360fd9aef24d2d189feae2f212a7d439d776 ab9d11c47c98aeb377d6e31e0b608a8fe1f95149 85051511310eb1d98dd86c1e88cb5bd321e0cfce cd992da1746f8e07a946519bdb017be5b25a440b 6f5e13d6d8b9b159c80743e78a4554addacb3943 d02f9408190144cf0feef0760b5402d772ae21fc 1d3793616cbf087dcb907b0d9699bfe09d0dad1d dad3772a0dd9b6439107bf0382dbbfcd095771e4 c36ad56b3a4b68a421c018df43ab534f69fca560 5693a1a6f1d6426e15537ed15593ec81615cc2b8 99a46eb763eee19a92569a82bb4f0a9911105840 e8dbf912b197ec8bc23389f8011fcd9b367ae61a 676bf0a3bbc5e8ee4e794e3612fd1569d4406601 c6288627c2d7d35d54ed815c3e71368201ee34c1 4c5a63dcec63212ebf234d715140961538d7d2e3 1835e73bf95b5a18d526638b300260505f0d53d4 397cc913f13f8aa3aa391d391906c60633809a66 f8d89068413629b613d5d134cafd89e110fc65a8 c397a1e55adcd0265835232f685f6512cff12f64 7ee8c39be9b221a69690a21f9964e0835406a9c9 b8c953cec0e67d70c33007f937fe1ca9fb034403,,Three quad copter,The following patch allow to create a simulation of 3 quadcopter.   I am creating a pull request as @julianoes has requested in the forum.    The reason for this pull request is that there is no possibility to modify any original sdf files. I had to create different files and add my reset plugin inside. If I modify the original sdf files like iris.sdf or solo.sdf all of these modification are going to be deleted after the compiling using make px4_sitl gazebo_model.    A second point is that  we do not understand why only iris quadcopter created using xacro files rather than sdf file  I was not able to find any documentation that can explain the urdf rotor description.     Finally   If all these sdf files are generated after the complication process  is there any way to generalize this method to allow for users to generate there files at their need??    You can try this patch  I have created it as a way to create several quadcopter in Gazebo without the need for ROS  I would like to know if we can integrate a script that make the process automatically.         
PX4/PX4-SITL_gazebo,330,2019-06-13T02:41:48Z,2019-08-18T13:32:32Z,False,none,38ca0517c522df2a78258d53ca22a68daef23e04,1,1,96a733ed47121863a3f0b58b675c71a260357902,,Switch to use pkg config to get gstreamer args ,This stopped working in my tests on 18.04. The INCLUDE_DIRS was not set  And pkg-config appears to be the recommended approach: http://gstreamer-devel.966125.n4.nabble.com/cmake-find-package-what-is-the-proper-gstreamer-package-name-td4680254.html    Since this is switching to use the recommended approach for finding gstreamer I'd suggest that this supplant #326 
PX4/PX4-SITL_gazebo,340,2019-08-18T13:02:28Z,2019-08-18T13:26:53Z,True,2019-08-18T13:26:53Z,5f5e1ba41c94f5a66b644d952d28687f1d289dd8,4,1,79357b1cbe9e1460fe28d0d4a76c3cd05ec7e71f,enhancement@models@plugins,distance sensors by default get the topic name from the model name,With this  if the topic is not set inside the SDF model  it is instead determined by the model name itself. This allows adding multiple sensors of the same type to the same vehicle. The only thing missing is to add the possibility of automatically subscribe to all of the sensor topics and use the same Subscriber Callback for them in the `gazebo_mavlink_interface`.    Example to add multiple sensors of the same type to a vehicle model:  ```xml      <!--lidar0-->      <include>        <uri>model://lidar</uri>        <pose>0 0 -0.05 0 0 0</pose>        <name>lidar0</name>      </include>        <joint name="lidar0_joint" type="fixed">        <parent>iris::base_link</parent>        <child>lidar0::link</child>      </joint>        <!--lidar1-->      <include>        <uri>model://lidar</uri>        <pose>0 0 -0.15 0 0 0</pose>        <name>lidar1</name>      </include>        <joint name="lidar1_joint" type="fixed">        <parent>iris::base_link</parent>        <child>lidar1::link</child>      </joint>  ```
PX4/PX4-SITL_gazebo,268,2019-01-29T01:27:16Z,2019-08-17T22:24:42Z,True,2019-08-17T22:24:42Z,ebe1e07f3377a7f9370c049ad73ab7812c71dfa0,5,3,1feb69d4c603a3fc294de33170bf0eacdbc0c51a e8a2f370919a1db203009cc61002310a04f01180 39c38f30fe13b513b4fb84aa8c77b63d1998da37,SITL@plugins,turn on video streaming plugin by default,This is a restoration of the "temporary" removal in https://github.com/PX4/sitl_gazebo/pull/148    turn on gui streaming buttons    add gstreamer plugins as a declared dependency    I added the necessary dependencies into the package.xml dependencies but there might be somewhere that this needs to be baked into the CI images if they don't used rosdep automatically.
PX4/PX4-SITL_gazebo,343,2019-09-05T13:16:41Z,2019-09-05T13:35:31Z,True,2019-09-05T13:35:31Z,b6c225552f344aa56f7b5365e8b63799cc97dec9,1,1,a75aa62d28fc9a7028363b4e6703411869252004,,Fix typhoon_h480 sonar child link name,Currently the typhoon_h480 wasn't loading the sonar plugin due to a mistake in the child link name. This was recently changed in dae0fdeb754392f138563b69a84488f8e1668755 and merged in #339 but it appears to have slipped by. I believe this is the only vehicle using the sonar?    
PX4/PX4-SITL_gazebo,344,2019-09-06T08:38:13Z,2019-09-09T15:24:03Z,True,2019-09-09T15:24:03Z,1d65b2ffb67938ae04ff1701366cedcfc11794d8,2,4,28405be8dfa73c7c727bced79745d0c03f62b6b2 3813d8a6514d40eb95016a590b8646aa17ccd115 1157b1d757af205b29fa9d1f9a91fdd004a6ca4f 8176507e5464e1695f5ebbd8e8a978962c088b0e,,Video stream widget update for Gazebo 9 ,This PR makes possible the build of `gazebo_video_stream_widget` on gazebo `9` and above  when previously it was only being built for versions of Gazebo less than `8.0`.    It updates the `CMakeLists.txt` to include the required packages and links  as well as the header of `gazebo_video_stream_widget.h`.    Regarding this last part it is possible that it breaks this widget on older versions of gazebo (can't really test right now). Possible solutions would be to find a way to make it built able by all versions or deprecate it for older versions of Gazebo. I'm open to suggestions/help.    Thanks
PX4/PX4-SITL_gazebo,348,2019-09-25T19:40:22Z,2019-09-25T19:41:19Z,False,none,8371301ff7ff7d4801643f386fd1fcb85cb99fc8,1,1,92ed8d7a59447f87611449b5511dd7def98fa531,,removed asphalt graphic,
PX4/PX4-SITL_gazebo,349,2019-09-26T13:15:34Z,2019-09-26T13:17:22Z,True,2019-09-26T13:17:22Z,aa051b79c0849d1df5606712f2b02e96cf14cdc8,1,1,f2c30a6228e1b0b848cc91ae8747058118284d17,,Add conditional inclusion to QT5core directory in CMakeLists txt,Quick fix that slipped up in #344.    @TSC21 
PX4/PX4-SITL_gazebo,351,2019-10-05T14:34:04Z,2019-10-05T18:57:48Z,True,2019-10-05T18:57:48Z,057ad90d236d716557d1d4dde6b906c89d3b4924,2,6,dc6145ef68ffa3c96015fe2ae4799392406f5937 b6eb71ece9fdb89888cd1806e74cef0abfd84d60 666469024b1824d720a54395173d821e7e8ead17 10c82c21ded241d0f2242a67dcaac15827298292 c1703b5ff2dcf4aac3ab05dcdeabfc75750fb85a 700b841906f5fc14137feb0c67d55d491bef64ae,enhancement@CI,Update CI container tags,1. Adds new `px4-dev-simulation-xenial` and `px4-dev-simulation-bionic`;  2. Bump tags to `2019-10-04`;  3. Install *gstreamer* in MacOS.
PX4/PX4-SITL_gazebo,352,2019-10-10T12:21:11Z,2019-10-10T13:06:41Z,True,2019-10-10T13:06:41Z,b50a4f79ffa5c11eee816901a9b775a5b302c083,5,1,891256af42ab1c8bfe2259b3ae23878544d32d80,bug@SITL@plugins,Fix sensor orientation without root model,PX4/Avoidance models like [iris_depth_camera_3](https://github.com/PX4/avoidance/blob/master/avoidance/sim/models/iris_depth_camera_3/iris_depth_camera.sdf) contain both depth camera and laser range sensors. By some reason `world_->ModelByName(rootModelName);`  which pretends to get the root model of each sensor in order to then compute the rotations of the sensors with respect to the `base_link` and from that  get the `MAV_SENSOR_ORIENTATION` to set to Mavlink  was failing when depth sensors together with laser sensors were brought together on the same model.    Solution: to avoid having to use the above call  the `Range.proto` now only contains the quaterion of the rotation of the sensor with respect to the link  while the rotation from the sensor link to the `base_link` is computed on the `gazebo_mavlink_interface`.    @mrivi and @baumanta I tested this locally with the avoidance launch files and it seems to work as expected. Please cross test in your side so we can merge.
PX4/PX4-SITL_gazebo,356,2019-10-15T18:35:49Z,2019-10-16T14:22:48Z,True,2019-10-16T14:22:48Z,545e8b76300d989166cf681b43ff0e07ff24cbdd,2,1,581b70b181c6eea7728f237f18eeb232927aaac3,,Fix camera orientation and visualize camera for plane_cam,This PR fixes the orientation of the camera attached to the plane_cam model to a more sensible one(looking down) compared to the looking back camera. A camera on a fixed wing plane is more likely to look down for survey missions rather than looking back.     Also  the visualization of the geotagged camera is turned on. This is to make it more visible to the user that the camera sensor is active  and be consistent with the camera sensor visualization on the `typhoon_h480`
PX4/PX4-SITL_gazebo,355,2019-10-15T17:47:13Z,2019-10-16T14:29:05Z,True,2019-10-16T14:29:05Z,77286ebe2792a329b9f89efa19bbeb42223451f1,1,1,c7d59333972aaf000ca61e2bf92af75b14a40bbe,,Tune shakey typhoon_h480 gimbal,This PR tunes the gain of the gimbal controller so that it is less shakey on the yaw axis. The previous state was not usable to run any survey missions in SITL.    The change is visually observable as the following example where the vehicle is flown in position mode in SITL    After PR:  ![after_change](https://user-images.githubusercontent.com/5248102/66855954-7b029880-ef84-11e9-8df6-18b0f037603e.gif)    Before PR:  ![before_change](https://user-images.githubusercontent.com/5248102/66855961-7e961f80-ef84-11e9-9846-cdb6f7ebfc60.gif)  
PX4/PX4-SITL_gazebo,358,2019-10-16T08:21:27Z,2019-10-17T07:14:42Z,True,2019-10-17T07:14:42Z,c0634b241eb730cee2ef91e5f5298427a4a328c8,23,4,30b9b4695dab49551a524827e95fb8a076798bc8 2ced94a0b7e67e9159ebfc5ba646c31096fceef6 95c662b1c8b4b47aadbfee9a859373ee73b8d3a3 ea35694725cc3c718ac524e86a4fcfe1c4ae3190,,add iris and vtol models with cameras for avoidance and safe landing,This PR moves the models from the PX4 avoidance repository to SITL gazebo. The models already depends on the Firmware models so it made sense to move them here such that any modification to the plugin can be easily tested against them as well. 
PX4/PX4-SITL_gazebo,353,2019-10-11T12:25:17Z,2019-10-22T08:06:51Z,False,none,c01b78d31375dc68a7782df01f4721addbdb11d9,2,8,c56aa62398e2aa626b5802b35e6a0f0f4106c1f9 17b67f5f047c6e8e733ad10bbc63927f96478e03 9cd990b06d3e6fc7d00fdebfcedb1b90764bbfc6 33e61826f38bc74ae2138745f7a6d5ddd878f955 c73fe2562c198599dceb9d7bd3baff17462c5dd0 9f7d22fe78477c7199335cd60d30cd370cc9b127 da3131fc2a7c464438ed1d4a6b5cced53fb94546 6d16e03ccd2c9588437f72538bdec66b58947a2c,, WIP TravisCI fix and improve MacOS build,This is a continuation of the work being done for bringing `gstreamer` to the MacOSX build and make it pass. Adds some new build pipes so to cross test in different MacOSX versions.
PX4/PX4-SITL_gazebo,354,2019-10-14T08:52:20Z,2019-10-22T10:42:36Z,True,2019-10-22T10:42:36Z,169d48217df89922e9fae72ef34fa46ce2e209dd,4,9,529947bdc805f587faa0167ad61b705bcd2cac0a cd1041425bf8e4cf96547c99930bfd9dd96380e9 059649af0162be1bdd800129a77c980679ba07b1 07f76b5e7bd2e6810e3c3d64931befd2db82daac 086254e0ea4295703c8bb94cd326ba7ccfc93451 7814f38215c795bc08d62be952dcb61b8ac87046 40eef455c0dda48c075b307e59b51a4fe077a3cc 9a1730e29a31fe9c032523c47934645fb0f8e15a b5fbcebd51eb2c1b01658778dc84d74d497fee95,,Fix dependencies on macOS,Now that gstreamer is required by default we actually need to fix getting these dependencies on macOS.
PX4/PX4-SITL_gazebo,365,2019-11-06T23:27:53Z,2019-11-07T07:37:34Z,True,2019-11-07T07:37:34Z,036bcee25f178cef9350107b4283f05e334adc1b,1,1,01695df432548011ce550858a2b4feba3a598306,,Add element to set home location from sdf,Previously it was only possible to set the home location in SITL using the environment variable  `PX4_HOME_LON`  `PX4_HOME_LAT`  `PX4_HOME_ALT`    This PR adds a sdf parameter to the gps plugin  so that the home location can be set in the sdf file. This can be useful if the simulation includes location specific models.    The home location can be set by the following.  ```      <plugin name="gps_plugin" filename="libgazebo_gps_plugin.so">          <robotNamespace></robotNamespace>          <gpsNoise>true</gpsNoise>          <homeLongitude>47.397742</Longitude>          <homeLatitude>8.545594</homeLatitude>          <homeAltitude>488.0</homeAltitude>      </plugin>  ```  These parameters are overwritten by the previously used environment variables.
PX4/PX4-SITL_gazebo,369,2019-11-13T17:11:08Z,2019-11-13T17:15:54Z,True,2019-11-13T17:15:54Z,ec3a32a60441f5238fe91a46ddc2696799450d84,3,1,ae1ff0cbbf246cdeb5104c8b86eb69d656624035,enhancement@models,Add Iris RTPS model,This adds a model to be launch upstream to load the micro-RTPS bridge. Soon this model will also launch a RTPS/DDS interface to work in parallel with the Mavlink interface.
PX4/PX4-SITL_gazebo,368,2019-11-13T09:56:25Z,2019-11-19T18:13:44Z,False,none,d3fb84be034368b2e496fb4f801cfc02f43eee62,1,1,4d035c2f86d503197ea9d3dbb0eaffe1018738a9,,cmake use python 3 as default,As you all know  the end of python 2 comes closer and closer. Even if the python3 support for PX4 is still under construction (see https://github.com/PX4/Firmware/pull/12809 and https://github.com/PX4/Firmware/pull/13008)  using python3 here might be easier to achieve?    Another solution would be to replace `find_package(PythonInterp REQUIRED)` with `find_package(Python REQUIRED)` in the `CMakeLists.txt`  because `FindPythonInterp` got deprecated and replaced by `FindPython` with cmake 3.12. (This change also renamed `PYTHON_EXECUTABLE` to `Python_EXECUTABLE`.)  But only Ubuntu 18.10 „Cosmic Cuttlefish“ or Debian Buster come with the needed cmake version and the PX4 docs still support and even recommend ubuntu 16.04. So this change might be a bit early.
PX4/PX4-SITL_gazebo,371,2019-11-15T22:23:02Z,2019-11-20T08:25:43Z,False,none,457c6011c23d2774edd8231a1f19118fec581acd,1,1,d6ed965d0f04e7a1b27c148dabf1609ea17dcf79,,Set image storage directory from environment variable,This PR enables setting the path of the directory where the images taken by the `geotagged_camera_plugin` be saved in a path specified by a environment variable `PX4_STORAGE_PATH`    This is useful when putting images produced by SITL to be saved in user defined directories out side the firmware build directory.
PX4/PX4-SITL_gazebo,374,2019-11-21T18:06:58Z,2019-11-21T18:07:46Z,False,none,f29093265042e4291a18f6268019882f712aa9c9,4,1,472e358eeb5908c06cc9d1389d09a5011406b694,,New lift drag plugin broken but compiles new sdf wrong numbers for ,… stuff
PX4/PX4-SITL_gazebo,372,2019-11-16T17:44:43Z,2019-11-22T12:04:26Z,True,2019-11-22T12:04:26Z,2637a94816f5e3cbb9d4a10f831985b2685fc880,3,2,1ddb0144358a97a0e7d47a4d2f3b8871eeaaae67 f34f08b4fc64c20eeca983e9a5140db2eed049b9,,Enable zooming for geotagged_images_plugin,This PR enables zooming for the `geotagged_images_plugin` by handling the mavlink message `MAV_CMD_SET_CAMERA_ZOOM`. This allows us to test GCS functionalities which involve zooming with cameras cameras.    This has been tested on the `typhoon_h480` model.
PX4/PX4-SITL_gazebo,362,2019-10-18T20:03:36Z,2019-11-25T17:29:53Z,True,2019-11-25T17:29:52Z,073da14f6e62d3b3c45e40eda556c0523f86d870,2,16,89d1fce529fb8c4f22258ea9b9835e1b01e58c9d b516f9475acac7813db94840864b9dd432660dbe 1809c68d961fac015b16b097453989dc3ab3ef28 f83b6e986af088fa23034251dda7d262036a498f 9cc6c622ea9c31252318d325d7c3eab778166282 ed8ccab33b7744221ef6c6d51ddaf11425565d64 fa617dc9a7c9fd64d3e01e8c39733f689c8d618a a559eeefe47a8cb17dfbc188e10816b8cc7f6882 75441558ae4cc7c2ed03653398e374c35c635b9f 75150fd97058c79e305eb89ccad2f83944820a7a 5540bc3de334246afc47e2d8b85aa427a0534569 d08de83c764c0597821fc60cc03730f9ae821fa7 6a9489601f9e4bcb49cf324320efa8cb61ddf5b6 1de49932d4d2a9d8a0b0f28feb0675b2b9db1036 ae76b7fad4335dd8c3763d5e357e961ca05b6b82 d144efe789f5018201f9b8b0de291feb605e87ce,,Fix for issue 359 ,Fixed errors related to gazebo gettting stuck on spawning vehicle without px4 or crashing on vehicle respawn or disconnection with px4.    Changes made:  1) Removed accept call from model load() in gazebo.  2) Listening socket address/port both set to reusable.  3) Listening socket set to non-blocking.  4) Updated polling to include accept() for managing new connections on runtime. Polling was only used before for receiving messages and returning a status message.  5) Reset socket fds on close().    Notes:  1) Only tcp connection is checked and tested. If there is a way to test udp connection  please guide me on that so I can test the relevant code sections.  2) No changes made to HIL/serial_enabled.    Fixes #359
PX4/PX4-SITL_gazebo,382,2019-12-19T15:02:57Z,2019-12-20T08:27:23Z,True,2019-12-20T08:27:23Z,ad84d489ec7ceffee4eb71edfc81842518170bd3,1,1,27fd1178581e86c8bb1455652695624f682b9156,enhancement,Iris_base update ADIS16448 gyro and accel noise densities,Those values were unrealistic and were constantly triggering the motion detector of EKF2  tuned for a real vehicle.    New values from: https://github.com/ethz-asl/kalibr/issues/63#issuecomment-236140184
PX4/PX4-SITL_gazebo,383,2019-12-24T21:51:29Z,2019-12-27T12:00:33Z,True,2019-12-27T12:00:33Z,b29dc1f26400dc0a6f17cb59e3062e7dcb8c8a38,5,1,4176b3b184e9bf032d877e2712fdcd094d677775,,Visualize control surfaces for model plane,This PR visualizes the control surfaces of the plane and moves the aileron joints to the correct location.    Previously the plane control surfaces were not visualzied and it was hard to do sanity checks on the control surfaces. This seems to be the reason why the aileron joint was in a wierd position under the wing until now.(This does not affect the performance of the flight)    The joint location and visualzation is compared with the following two images  Before PR:  ![Screenshot from 2019-12-24 22-40-59](https://user-images.githubusercontent.com/5248102/71425661-deedbf80-269f-11ea-9edf-c720b78d0090.png)  After PR:  ![Screenshot from 2019-12-24 22-28-09](https://user-images.githubusercontent.com/5248102/71425663-e1501980-269f-11ea-914d-7a363c44dfc5.png)    
PX4/PX4-SITL_gazebo,386,2020-01-03T19:12:23Z,2020-01-04T16:03:01Z,True,2020-01-04T16:03:01Z,b35b43934044e4f4ef52a0ae1a3316f07e5671b5,1,1,68566e1f39153c70a8664ffe962b89976cdcecb1,,Fix tiltrotor oscillations,Tilt rotors were oscillating rapidly when stationary. This was due to the high gains of the joint control pid loop of the tilt joints. This PR lowers the gains slightly so the oscillations are not visible anymore    Before PR:  ![tiltrotor](https://user-images.githubusercontent.com/5248102/71743603-3d1b5f00-2e65-11ea-95f7-c7e750bcc163.gif)    After PR:  ![tiltrotor_pr](https://user-images.githubusercontent.com/5248102/71744130-a51e7500-2e66-11ea-8950-8bf30028b47b.gif)  (this is not a image  but a moving gif)  After the joint control gain has been lowered  the vehicle is still able to fly a successful mission: [log](https://review.px4.io/plot_app?log=396cd69d-272f-4416-b127-c50ea4c35439)
PX4/PX4-SITL_gazebo,390,2020-01-08T15:31:15Z,2020-01-08T17:11:59Z,True,2020-01-08T17:11:59Z,aee283dbf143b2e2881fed3ae234a6c5ca39db0e,3,1,83b9d4bb68b33e599a66f0eedf95978f647e89ee,,Decrease drift on simulated vision system,The modeled drift of the vision system is driven by a random walk. The previous random walk parameter feels to be too high as it caused the drone to drift multiple meters without any user input.  Decreasing the parameter to 0.1 made it stay roughly in place  which is matches my observation from test flights. One could think of scaling the random walk based on velocity as most of the vision drift is accumulated during motion.    Previously the bias (=drift) was added to the velocity as well. This seems not correct as a VIO system should be able to provide drift free velocity.
PX4/PX4-SITL_gazebo,387,2020-01-04T15:20:08Z,2020-01-10T10:20:57Z,True,2020-01-10T10:20:57Z,d8714a71b13a3c2ca2553829beac02709725a0da,1,1,5be1582d397cf48002f2c64a905f80887495f970,,Fix longitude copying from sdf file,The longitude value was not being copied properly from the sdf file. This PR makes sure the correct value is copied
PX4/PX4-SITL_gazebo,385,2019-12-29T15:40:38Z,2020-01-13T09:15:42Z,True,2020-01-13T09:15:42Z,040e5699ff1c034f70d349053d9d5cc047626038,4,1,d6c6c71507655dba8df5178034e2f26db60d6b32,,Support multi vehicle simulation for fixed wing in gazebo SITL ,**Describe problem solved by this pull request**  Since the plane model is defined as a sdf format  it was not possible to launch multivehicle simulation  as it relies on xacro macros to generate sdf files.    **Describe your solution**  This PR ports the `plane.sdf` into a xacro format so that it can generate sdf files for multivehicle simulations.    **Test data / coverage**  Video:   [![Video](https://img.youtube.com/vi/aEzFKPMEfjc/0.jpg)](https://youtu.be/aEzFKPMEfjc "Hovering done")    **Describe possible alternatives**  We can get rid of the sdf file and move towards xacro files for vehicles that support multivehicle simulation  but I am not sure if this is the right direction since doing checks on xacros are quite hard and some configurations in xacro files lead to surprising results in the simulation.     **Additional context**  - Unlike iris  the sdf file for the plane was not removed yet.  - This already includes rudder control as in https://github.com/PX4/sitl_gazebo/pull/384
PX4/PX4-SITL_gazebo,395,2020-01-13T17:54:11Z,2020-01-13T18:14:11Z,True,2020-01-13T18:14:11Z,5b031e10199810c7a930032beface82f1aa9e0cc,3,3,3067bdb9a952256275c7fe39ad0e52a28adfa57a 8181c8cbe4ba262854c9915e6c26344bdc12f7e8 a5527866c83f8876a2385a12b5f66216ae5470f9,build error,Build only look for Python3 if not building with Catkin,Fixes builds like http://ci.px4.io:8080/blue/organizations/jenkins/PX4%2FFirmware/detail/PR-13572/51/pipeline.
PX4/PX4-SITL_gazebo,341,2019-08-18T13:32:06Z,2020-01-14T10:29:51Z,False,none,83ceed0deb9f4d24033a1c6bc2b43625d8513a30,1,1,4b4bf38d0f05063f8b85d574f4d9d3d5f5942b17,bug,Rebase 330 Switch to use pkg config to get gstreamer args ,
PX4/PX4-SITL_gazebo,388,2020-01-06T09:12:31Z,2020-01-14T10:31:54Z,True,2020-01-14T10:31:54Z,6f5d19ba1b5dc7e1cf7d3e37e8f9e739d42c022f,3,8,9c14ec4826ea1f38234af9029b919300dd9681f7 59ab9e7c3be0f0dcbf1248e72ec993cde0afb702 553d1caf38b0acf01c9030873b6d2cb17ae23acb 28ea8e6f454ee9676eff0e9ae8046887a61f99f4 ce468382ff2cb95447729ab144bc674fdc4e7061 5402dd6b1de98caa2fdf81c3cef0bc8eebd19957 e89e0d72bf95919993b7a1e2b59d6fe72a7be7ff ea099bf8581c965ed59c8933d05841086a0778e0,,Update gazebo_gst_camera_plugin for customable UDP Host,Hello    I'm working on OpenCV with gazebo. And usually It's needed to stream gstreamer video to another device IP (e.g. raspberry pi). So  it could be wonderful to add this PR to avoid change IP from here: https://github.com/PX4/sitl_gazebo/blob/b35b43934044e4f4ef52a0ae1a3316f07e5671b5/src/gazebo_gst_camera_plugin.cpp#L135    I added following commits like UDP port and also I added custom IP to Typhoon_h480 SDF file to check if it's running on typhoon model.
PX4/PX4-SITL_gazebo,391,2020-01-09T09:48:34Z,2020-01-14T10:33:28Z,True,2020-01-14T10:33:28Z,7cb9e2e87f966176d358c6426c534066a6a39616,2,1,49a9ba34fe2f585748c93d0b22ed8ed0afa7eeb2,,gazebo_lidar_plugin Rename class to LidarPlugin,The old name 'RayPlugin' collides with Gazebo's own RayPlugin  causing errors (failure to load plugin  or segfaults) when plugins are being loaded. This issue seems to happens if you try to load PX4 sitl_gazebo's `gazebo_lidar_plugin` alongside any other Gazebo plugin using RayPlugin. I'm guessing this plugin was based on an implementation of RayPlugin from Gazebo  and the implementer forgot to change the class name.    
PX4/PX4-SITL_gazebo,396,2020-01-13T21:11:22Z,2020-01-15T10:31:08Z,True,2020-01-15T10:31:08Z,193a4d2c35db4c122bd6c1abd037887ba9794cf7,1,1,6de0199645e73e7c16154d98c383c582ed72688a,,Update gazebo_video_stream_widget h,The MOC bug applies to any version of gazebo  not just < 9. You want to avoid including <gazebo/transport/transport.hh> during a MOC run.
PX4/PX4-SITL_gazebo,397,2020-01-13T22:35:15Z,2020-01-15T13:26:36Z,True,2020-01-15T13:26:36Z,a5b33417f72be371843e12c5ea77cd32733684f4,2,5,29e48a1b3305170587e8f5e393c4da003369a287 7e76fa01f81718f64d63c091de1168cc4b2076a2 cc2aeccaa049b1454fc7a1a34560c2ce7eb587f1 5980c3b82c11c4cecd86badd6fc12f2025c6d5e6 f5528f2303f545433b9c4db8b05aadb3dc1672f1,,Fix Mac OS CI,Good to merge once the build passes.
PX4/PX4-SITL_gazebo,361,2019-10-18T11:40:57Z,2020-01-20T15:54:30Z,True,2020-01-20T15:54:29Z,2f4b32723c68a3424d24fd99fa4ef305a7c5ad49,3,2,64eaac35db053f44c4b0f3a6ea92f0207f172f0e 29db80baeed232b306e15febf49dc50eeb107a1e,,typhoon_h480 rotate sonar such that is forward facing,The sonar was backward facing which doesn't make much sense. I changed it back to forward facing
PX4/PX4-SITL_gazebo,350,2019-10-01T18:28:47Z,2020-01-22T02:18:45Z,False,none,4bafde207c97ddfc16848f9bdff4269cc7004b8d,1,1,d29856868c0a0cdbdf661854eb73732160d4a982,,cmake use gold linker if available,Let's give this another try.    Previous attempt: https://github.com/PX4/sitl_gazebo/pull/239
PX4/PX4-SITL_gazebo,399,2020-01-27T13:25:32Z,2020-01-27T13:33:17Z,True,2020-01-27T13:33:17Z,3d152f028bbe47229602a1a34a2e8fe322504357,2,1,3957167287dbae6578ea99f3dae507811275a29e,bug,Fix vision plugin,From the beginning the vision plugin wanted to provide a pose that start at zero position and heading. Therefore it subtracted the start position from the current position and the start heading from the current position. The issue is that by changing the yaw angle without transforming the position as well  the attitude quaternion does not represent the transformation between body and world frame anymore.  I am certain a lot of the issue with the iris_vision position mode are caused by this.    This PR is allowing the vision system to have a non-zero heading from boot. This is also common for VIO sensors. e.g. the Realsense T265 shows this behavior. Therefore heading and position are consistent.    **Testing:**  Successful MAVSDK offboard mission in SITL  not possible before this PR. 
PX4/PX4-SITL_gazebo,400,2020-01-29T09:24:26Z,2020-01-29T10:40:14Z,True,2020-01-29T10:40:14Z,029722989e945f0a78d5a2322788b34a3ca99ab6,6,1,693b97f482d32a3ac8c41f9b7f2518343d2700a6,,Add optical flow mockup model,This PR adds a mockup optical flow sensor  that computes a flow measurement without rendering an image.  This is useful for CI SITL tests  where we want to speed up the simulation. This is not possible with the existing image based optical flow plugin as it relies on the camera plugin.
PX4/PX4-SITL_gazebo,393,2020-01-11T09:31:45Z,2020-01-29T10:58:59Z,True,2020-01-29T10:58:59Z,55d74c3c5eb3fcac0cf3dc7c3c4d7f94c5724650,6,1,1b9bc8c1996d5fda065b7acbb2c0eef96e64f64c,,Catapult plugin for simulating catapult handlaunching fixed wing,**Describe problem solved by this pull request**  This PR implements a catapult plugin  which simulates fixed wing being launched by a catapult or being hand launched. This is required to test the takeoff mode of the fixed wing  which has been largely untested in simulation until now.     **Describe your solution**  The plugin applies a fixed amount of force for a specified duration to simulate the launch.     **Describe possible alternatives**  This could have been implemented on a much aesthetically pleasing way  with a separate catapult mesh  but I think it is good enough for now to cover the tests that is needed for the firmware. It was very hard to find a good mesh of a catapult without licensing problems.     **Test data / coverage**  ![launcher](https://user-images.githubusercontent.com/5248102/72202253-6d628f00-345d-11ea-9df0-4eaa0bba8b07.gif)      **Additional context**  This was brought up from a discussion with @dagar  
PX4/PX4-SITL_gazebo,401,2020-01-29T15:49:19Z,2020-01-29T16:47:12Z,True,2020-01-29T16:47:12Z,dfbc28badcffd734c6a5f1b084d7da44f0d19685,1,1,5640a53983e283be122792b569093d69723cd0af,,Reduce airspeed sensor noise,The previous airspeed noise caused airspeed velocity noise with magnitude of up to 4 m/s. This caused the preflight airspeed sensor check to fail on the ground.
PX4/PX4-SITL_gazebo,402,2020-01-31T16:51:09Z,2020-02-05T15:08:12Z,True,2020-02-05T15:08:12Z,045156da19ac6518455c9b0e6a5a63b10388d4d7,9,17,53e4e767aa618cb7ef7e43254fb12efbdd243468 c0043015c519f58776676f2669d6e69b62ad5824 4e22d6e66982568f696cc354edbb75a4d3565a3f 46ddb33fdd2ab5c505f91f55f336b6ad35fc4a20 914742a26d1c43575c42bdd1d92d6ea51c5a1edb e7daa9de0aa2fa3fe0aad704e081b5badd5f1118 c96786f76f9a1b0ef1d1b9610b48a7eebf73b0c2 9ed4ce0cb4fbe9ab390ba56f31e8898b1024f69e 96648238cbebcd0e990233e99985c3ebb19c956e 89b389112ee5d8c4b4a894f257fea202d6db2e69 4a81dd41f95d353119d737e4afe1057c342b4cb7 ae3af9454bd2058e5dad63721efb98160b45a2b8 7b2020e83056963771cb419e67705a340527ec12 23f5fe6d35de0a643429022d9342558b1a07df08 22f8d9ec73386d534f1f0fe079e48259fa608d51 a7f262360b60b569bdf211f5d821a9b2dc2d995d b04a8846867197b5d95f2fc24cfb82166b62cc2b,,underwater robot uuv extension,This PR corresponds to https://github.com/PX4/Firmware/pull/14079    It extends the underwater robot capabilities and provides an uuv_motor_model  allows to model the esc-deadzone which is important for vehicle actuators  which can spin in both directions.    The old hippocampus model is kept for the moment as part of the px4-firmware tutorial depends on it. However it likely makes sense to have the tutorial depending on the new model at some point.     
PX4/PX4-SITL_gazebo,398,2020-01-19T22:01:06Z,2020-02-09T12:26:35Z,True,2020-02-09T12:26:35Z,37c9b02910f3791a3179e4e8658db3431064e76f,5,1,60c8a989edbba225f58887d395cbd71becec87e7,,Add support for VTOL multivehicle simulation in SITL gazebo,**Describe problem solved by this pull request**  This adds support to multivehicle simulation with `standard_vtol` by adding a xacro file which generates the sdf models    **Describe your solution**  Generate the sdf file of `standard_vtol` using xacro so that mavlink port / sysid can be configured    **Test data / coverage**  ![ezgif com-video-to-gif(2)](https://user-images.githubusercontent.com/5248102/72689212-57189b00-3b0f-11ea-82aa-bdbd13ce5353.gif)    Full video: [video](https://youtu.be/lAjjTFFZebI)    To run this  you can run with the following command  ```  Tools/gazebo_sitl_multiple_run.sh -m standard_vtol  ```    **Additional Context**  The motor / motor columns are not rendered since xacro inside px4 sitl doesn't seem to let you have multiple visual elements within the same link
PX4/PX4-SITL_gazebo,357,2019-10-15T19:31:53Z,2019-10-18T21:32:22Z,False,none,0a9f4e195927dee36c223f3e9e17c83b9be97117,7,3,8b71ef51eea84a0f4e80f10b981e7f117397a28f 95e92f69e77d229e36ab78eb4505aca2465a5154 e046732f5451ef9e3159fc8a16494804267856ce,,Support SITL simulation for boat with usv_gazebo plugin,This PR adds a PX4 SITL model for a boat using the `usv_gazebo` plugin.    The model is based on the `WAM-V` USV from the [osrf/vrx](https://bitbucket.org/osrf/vrx/src/default/) simulation.    The plugin is able to simulate / render waves as if the boat was in the ocean as shown below.  [![BoatPX4SITL](https://img.youtube.com/vi/HnL5HWe3vU0/0.jpg)](https://youtu.be/HnL5HWe3vU0 "BoatPX4SITL")  
PX4/PX4-SITL_gazebo,411,2020-02-12T16:03:47Z,2020-02-13T16:01:28Z,True,2020-02-13T16:01:28Z,44181fd63ebdcb9eaeb56557a3f807d501f58012,3,5,6db6da650d0d58c6678a7e8945d55f04544733a3 16c078442974a37099d9dc95a9d0595bfb10473a 9def734d2eae705542279c9b488735263ed5096c 6bf35a4f0579dce5c936edd6017fdf98e25efedd e2fe7e9803b4e2a98f54b93c1bd0876660a9016f,enhancement@SITL@mavlink@plugins,Feature add multi sensor subscription,This adds the possibility to the `gazebo_mavlink_interface` to subscribe dynamically to multiple sensor sources connected to a model. I started with the lidar sensors  but this can be extended to multiple other sources (like GPS's  multiple camera sources  others).    To do:  - [x] Extend to sonars and other sensors;  - [x] Add a model example with an array of multiple distance sensors.    This feature potentiates the development of onboard sense-and-avoid algorithms. Some changes were also required on the `simulator` module in PX4. PR following upstream.    @dagar @jkflying @Jaeyoung-Lim @mrivi @baumanta FYI.
PX4/PX4-SITL_gazebo,412,2020-02-14T07:04:53Z,2020-02-14T08:03:48Z,True,2020-02-14T08:03:48Z,529bbae1e8ca48f1753071f516e018438dc556c6,1,1,ce018e1dce086f172b99ac32c4859f533f761c68,,travis remove unnecessary failing pip checks,pip is not available anymore  so we need to remove this checks.
PX4/PX4-SITL_gazebo,413,2020-02-14T08:21:21Z,2020-02-14T13:46:13Z,True,2020-02-14T13:46:13Z,1d1b51c2ace715aabbfbce35e2d9474571b7d48f,1,1,0a8564ff2be1ba9072149fc37faf166b5a0bdf46,,travis use latest gtest release,This is required because master doesn't currently compile.
PX4/PX4-SITL_gazebo,373,2019-11-18T17:48:52Z,2019-12-24T10:56:16Z,True,2019-12-24T10:56:16Z,25ab469cb1d9b0ca303f64f0e5ab94d6563d852a,6,8,48bf045ef6fc13fc07778ae03c62fde800c01c4e a7d6fc4a377e727054a5d678eb7eb15c111f6e84 1455766e1656f5745d5f0f617b6c14f26009c763 c328a532d8ad557ae06069bac2a29f0720d766c9 d816aab6c8df58ca38fc0aaeeb03e9a799d6b3b0 0aead01964de8b8401aeb3e9368f21cadd6ff96f bfb67e70d25d323e48c47368dccb231fe58733da 82ef8a805e6fac9db33331605425c3fa9694213e,enhancement,Scripts use Python 3,Python 2 close to EOL. This is part of the update process throughout the PX4 ecosystem.
PX4/PX4-SITL_gazebo,415,2020-02-19T14:43:51Z,2020-02-20T16:10:04Z,True,2020-02-20T16:10:04Z,fefb616c4876cb616f4262f9d7c783839607c8ea,11,2,d73186bcd6cc5ce863da7485fd8575dc8e926fc1 8b1e60b4e8df695c982b56c060ef33d0bfc07899,,Allow update rates of multiple of 250 Hz,It seems that some models like VTOLs or the camera gimbal require the real_time_update_rate to be higher than 250 Hz  e.g. 500 Hz.    In this patch we loosen the hardcoded constraints of 250 Hz to multiples of 250 Hz. We then skip the OnUpdate call to only interact with PX4 at 250 Hz.    See: https://github.com/PX4/Firmware/issues/12240
PX4/PX4-SITL_gazebo,420,2020-03-02T09:59:47Z,2020-03-02T11:36:08Z,True,2020-03-02T11:36:08Z,8794a7067ab307d6919a85f7743abbc7836e64fd,1,1,7c934ff7809a04b8f61590ad29577854dbf556d0,,cmake remove warning,This just hides the warning of "address-of-packed-member" for the MAVLink headers.
PX4/PX4-SITL_gazebo,423,2020-03-07T15:56:56Z,2020-03-07T15:57:17Z,True,2020-03-07T15:57:17Z,82657d3e171e7947ac6754528c330ceabf238315,1,1,efa0786b82168f4057fd4c91f8d38a0fed35005e,,Fix geotagged images GPS position,The GPS position was invalid  leading to incorrectly displayed geotag markers and to incorrect geotags in images.
PX4/PX4-SITL_gazebo,418,2020-02-26T21:30:30Z,2020-03-07T16:08:37Z,True,2020-03-07T16:08:37Z,5669e5cf3156dbbf1f154697ddf77e4e1c99bae1,3,2,c1ef0cf0b836b33d25e97ed82f3f275e133c8e17 4316d3e5f9a8ab10c883a1c423d8c5faf04c1739,,Version check,#417
PX4/PX4-SITL_gazebo,425,2020-03-09T12:13:55Z,2020-03-09T17:53:30Z,True,2020-03-09T17:53:30Z,42d05bdce98b12a3c6ba6832849d0d9495942c32,1,1,de60858325dd3d3b556f3472459d67d2da3dfb0c,,standard vtol decrease rotorDragCoefficient to more realistic values,The standard vtol propellers were generating a couple of kilos drag during the back transition. The deceleration during the backtransition was in no way realistic. I adjusted the value to be closer to reality.    While at it I also checked if the lift to drag ratio (L/D) of the standard vtol was in a realistic range.  During cruise you get a value of about 8 which I think is ok.
PX4/PX4-SITL_gazebo,426,2020-03-09T21:55:32Z,2020-03-10T12:05:37Z,True,2020-03-10T12:05:37Z,89db01cafd8fddde456955c8b91459ed0fa20efb,2,2,1be1a4fff05373e27dba7cc9e54a277c4354b9c3 01c215eaf6cd75980fdd4cb3b95e16dd3d9cf53e,,Handle videostream info and mode switches for geotagged images plugin,This PR improves handling the mavlink camera protocol in the `geotagged_images_plugin`  by handling the following mavlink messages  - `MAV_CMD_REQUEST_VIDEO_STREAM_STATUS`  - `MAV_CMD_REQUEST_VIDEO_STREAM_INFORMATION`  - [`MAV_CMD_SET_CAMERA_MODE`](https://mavlink.io/en/services/camera.html#camera-modes)       To test:  ```  make px4_sitl gazebo_typhoon_h480  ```
PX4/PX4-SITL_gazebo,408,2020-02-04T14:32:43Z,2020-02-05T07:20:58Z,True,2020-02-05T07:20:58Z,7635df811986f1da69a28ffdd195faa22be7ada5,1,1,c18295660075615df26b13f02f4b2851c400bf47,,Fixing error in gazebo_opticalflow_plugin h,error: ‘TRUE’ was not declared in this scope  #define HAS_GYRO TRUE    changing this to:  #define HAS_GYRO true    
PX4/PX4-SITL_gazebo,288,2019-02-25T08:14:40Z,2020-03-10T14:40:15Z,False,none,e9c4fbcd698f0845eea4266eb3c208f31fa2c086,21,1,3de58336a91e3f3c3aebb646597c30aa28799126,,remove shadows,Fix for https://github.com/PX4/sitl_gazebo/issues/266    I noticed that the world `rubble` is not working. @TSC21 do you know where it's used?  Another thing I noticed is that there are quite a few gazebo core dump when launching from ros. Error in the log:    ```bash  (1551081994 550255675) [Err] [gazebo_mavlink_interface.cpp:416] bind failed: Address already in use  aborting  ```    @julianoes could it be lockstep related?
PX4/PX4-SITL_gazebo,427,2020-03-10T13:24:24Z,2020-03-10T19:18:31Z,True,2020-03-10T19:18:31Z,08f8e6f5e1973a0da2505544edf006959ada0d2b,1,2,eb1810fd58cf62a8677e909541960bdd5adb7718 e00b4333f53fc3361f411ec3df41cb165e0c8b31,,README md edit to fix PX4 sitl_gazebo 424,PX4/sitl_gazebo#424
PX4/PX4-SITL_gazebo,384,2019-12-27T12:17:38Z,2020-03-10T19:22:15Z,True,2020-03-10T19:22:15Z,ea2568db3bf6be6268e7e852742bbff2d83c6f4e,1,2,9215e78e6d268f100096c4898dda048967434e38 5f8474960f9bf8a2a35590154731163890854852,,Add rudder control to plane model,Although having a rudder link  the plane did not have rudder control in the sitl model of plane for the following reasons    - No control channel for rudder  - wrong joint axis (x-axis) for the rudder joint to move    This PR fixes the joint axis and adds the control channel for the fixedwing plane model in gazebo    The flight performance has minimum influence  without wind  - [Before PR](https://review.px4.io/plot_app?log=1330877d-dde3-4163-b613-0f5de900cd10)  - [After PR](https://review.px4.io/plot_app?log=31ba6a54-6a0f-424e-8548-5af68659fc56)
PX4/PX4-SITL_gazebo,302,2019-03-14T15:48:20Z,2020-03-10T20:19:21Z,False,none,68c4b3bcbdc5fbae680361f0ed004fcf0b9bffc3,2,2,2b0195d7c880481f964f51ea03f9f09f37c9c5b4 8fd257f9d09858a9c2195f9bd02e3def6a5288e7,,Fix sweep cosine,Fixes sweep cosine. 
PX4/PX4-SITL_gazebo,429,2020-03-10T20:13:03Z,2020-03-10T20:54:20Z,True,2020-03-10T20:54:20Z,458e58f7973df2e211648e78b7277deefa59eca6,2,2,b38928e5230b7ef0843cfa9a723a5bb60e075f02 4662e0dd890146d3268731422b823d27eb6bc39c,,Fix sweep cosine Continuing 302 ,This PR is a rebase of #302 
PX4/PX4-SITL_gazebo,346,2019-09-24T05:15:11Z,2020-03-10T14:57:36Z,True,2020-03-10T14:57:36Z,4f596be19eb71a1b27a6cdd21efb8e2252707740,1,2,a462e558f1321200a8ffce154455fa42f920be5a 31a4963c024942ac3405734b7fbcb9eec35229fc,,Remove unused function isstring in scripts names py,https://github.com/PX4/sitl_gazebo/search?q=isstring&unscoped_q=isstring
PX4/PX4-SITL_gazebo,432,2020-03-13T10:40:56Z,2020-03-13T14:21:58Z,True,2020-03-13T14:21:58Z,5d0356a53040fa0104c720269ca7d24219d7c5f4,1,1,a1038f56d77f5d720735bf28f21a990e58e8bb6a,,Fix typhoon not taking off,This PR fixes the typhoon_h480 model not being able to take off. This was a regression introduced from #415. @julianoes FYI    I suspect this is coming from the retractable landing gear of the typhoon    ```  pxh> commander takeoff  WARN  [commander] Takeoff denied! Please disarm and retry  WARN  [commander] Failsafe enabled: no RC  INFO  [commander] Takeoff detected  ERROR [commander] Critical navigation failure! Check sensor calibration  WARN  [ecl/EKF] 44604000: baro hgt timeout - reset to baro  ```    The fix is reverting #415 just for the typhoon model  
PX4/PX4-SITL_gazebo,433,2020-03-13T11:12:04Z,2020-03-13T13:37:32Z,False,none,0e5f3e6e786890ee10196e2250f172a93db79a92,5,1,65b2fc47c9472ee71cbb25786ff7b75b2a83350f,,Temporarily remove usv dynamics plugin,This PR temporarily removes the usv dynamics plugin since the source (`gazebo_usv_dynamics_plugin.cpp`) had a GPL license header. The `gazebo_usv_dynamics_plugin.h` has a apache license.    This will be brought back when the proper Apache license heards are brough upstream in [osrf/vrx](https://bitbucket.org/osrf/vrx/src)    
PX4/PX4-SITL_gazebo,435,2020-03-13T13:32:27Z,2020-03-14T15:27:42Z,True,2020-03-14T15:27:42Z,11b6409df9f2087c6069ba4db29ae8cef33622da,1,1,8569c081a2f50b33a45aa4f4a4012ba788b2be1d,,Update usv_dynamics_plugin license to Apache,The usv dynamics plugin distributed from the osrf/vrx project has GPL headers  although the project was distributed under the Apache license.    Communicated with [osrf/vrx](https://bitbucket.org/osrf/vrx/src/default/) project that the GPL headers was coming from a copy paste mistake  and the fix was done in this [PR ](https://bitbucket.org/osrf/vrx/pull-requests/224/update-license-from-gpl-to-apache-2/diff)    This PR brings in the [fix ](https://bitbucket.org/osrf/vrx/pull-requests/224/update-license-from-gpl-to-apache-2/diff) to the sitl_gazebo repo
PX4/PX4-SITL_gazebo,416,2020-02-25T10:53:57Z,2020-02-27T12:25:45Z,True,2020-02-27T12:25:45Z,7aba744d0d9c50e6b5e3d7206ed40013d907b246,19,6,71bbcf5f483538e6c62e65b7f830fcc649ffef3a d1f191690be43d15d7169fafea3641285e8f9a58 f78daf7cd2646bf62b2fb844bf0ce209cf7b2783 529c61690a42aa1638f4f1fee381faae0d180759 220b64b031766d648bad0340c2636e8737895292 8569aec5bb709acb2fec7ccb5a5a4405f0cdec2a,enhancement@mavlink@plugins,Mavlink interface defined sensor bitmask to properly set the sensor rate in SITL,Addresses: https://github.com/PX4/Firmware/issues/14220. PR in the Firmware side following next.    FYI @jkflying @dagar @LorenzMeier 
PX4/PX4-SITL_gazebo,436,2020-03-13T13:51:12Z,2020-03-20T13:27:52Z,False,none,e690081c5cffc2db3153727c18ac734b7f049371,1,4,0e7f1625193bd177a13f12c00b18c86a44435c69 60b6c553c5cecf742dacfb7acd8196f7f092418a c6c10cef439fdbebdf2594862df7d7d25149f59e 836444f0c53a7a83fde49a158aba71929b43e2b3,,Fix MacOS CI Failure,Current master is failing on building MacOS    Fixes #434 
PX4/PX4-SITL_gazebo,414,2020-02-15T18:18:47Z,2020-03-23T08:11:03Z,True,2020-03-23T08:11:03Z,e56ecf388d1c16599772ef5a9044af5d18bb05d0,23,1,dc60f209db24712721dd9481e2244b7b0b35a9db,,Detatch model from worlds and cleanup,Most of the worlds in this repo are used only for spawning the model  which is not necessary. For example  `iris_opt_flow`  `iris_rtps`  `iris` are exactly the same worlds with different models inside the world.     I would argue that only worlds that need to be specific for a model (e.g. hippocampus / typhoon_h480 ) should have a world file named after the model.     This PR  - Removes the models from the world so that the model spawning can be done separately as in https://github.com/PX4/Firmware/pull/14166  - Removes unnecessary worlds that are mostly redundant with `empty.world`  
PX4/PX4-SITL_gazebo,440,2020-03-23T10:32:54Z,2020-03-24T17:40:50Z,True,2020-03-24T17:40:50Z,4f1f5b885124aab94cc7f333dd09315892567217,3,2,0a2ecc4f200b70151f82d73be8f2302cc70b46a2 7aaa7587b95b019cf91f4fa0c7d7b5e51ee1f608,,Add px4vision model,This PR adds the model of the Holybro px4vision into the sitl_gazebo simulation    Fixes #439     ![px4vision](https://user-images.githubusercontent.com/5248102/77441831-2c3a1400-6dea-11ea-9d76-b5823c142ba9.gif)    
PX4/PX4-SITL_gazebo,442,2020-03-25T08:22:27Z,2020-03-25T09:26:28Z,True,2020-03-25T09:26:27Z,467d258312bf8b2ca2f5435eafe265c0681fc76e,1,1,8c09fa40aab71793f0f509ff8bf07f54a0087cb3,,OpticalFlow update submodule,This fixes a build error with cmake 3.17 and ninja  as well as a printf which was not throttled correctly.
PX4/PX4-SITL_gazebo,406,2020-02-03T18:25:59Z,2020-03-26T11:19:33Z,True,2020-03-26T11:19:33Z,55a366aa1ed8a6ac0a385fe1932aa36f142aa8a5,1,2,0cc2461b492a569a72bff3d36a8182411def753e 874495fd38ce2e5bdaa3dab8543ec27b31583cbb,,Added mcmillan_airfield model and example world,Added mcmillan_airfield    - model   - example world    ![mcmillan](https://user-images.githubusercontent.com/1933907/73679572-f9618280-46ba-11ea-9060-498fad85a3c3.jpg)      co-author: @tfoote  
PX4/PX4-SITL_gazebo,404,2020-02-03T17:45:36Z,2020-03-26T16:40:55Z,True,2020-03-26T16:40:55Z,37e6cc70515d1d75a2f79ea5a791dec1ea3c78bc,1,1,798aa21927e427c0d8a7bf0521661fc66106b6d6,,Added ksql airport model and example world,Added ksql airport    - model    - example world    ![ksql](https://user-images.githubusercontent.com/1933907/73676821-53f7e000-46b5-11ea-8293-70ca779e8f51.jpg)    co-author: @tfoote  
PX4/PX4-SITL_gazebo,403,2020-02-03T17:13:49Z,2020-03-26T17:20:16Z,True,2020-03-26T17:20:16Z,69ee1f76bc80e73b39cef78f23b5a562455612bc,1,2,32f8dff8fcb6d1311affc5fa13702293c48c1819 6fb9d337a63a02e73f743d0423ea4af795abf78c,,added yosemite model and world,Added yosemite     - model   - example world    ![yosemite](https://user-images.githubusercontent.com/1933907/73674436-c87c5000-46b0-11ea-8d85-1191e9535519.jpg)    co-author: @tfoote 
PX4/PX4-SITL_gazebo,405,2020-02-03T18:24:44Z,2020-03-26T00:36:32Z,True,2020-03-26T00:36:32Z,54cd553c4b9e6946337486d4c1ed93e460c266f6,1,1,a50a531cda1c53af88424fc217736e90835d08ab,,Added baylands model and example world,Added baylands    - model   - example world    ![baylands](https://user-images.githubusercontent.com/1933907/73679471-b7d0d780-46ba-11ea-9a4c-e4d8bd5f1dba.jpg)    co-author: @tfoote    
PX4/PX4-SITL_gazebo,449,2020-03-30T12:53:14Z,2020-03-30T13:26:43Z,True,2020-03-30T13:26:43Z,51d7c8ff62e6df88b468f1344775a73e3e4c646b,1,1,81d50b15985d0307657874d9c5fbb0846c9347f3,enhancement@CI,Travis CI bump container tags to 2020 03 29,Trivial change so to keep CI in sync with upstream PX4 Firmware master.
PX4/PX4-SITL_gazebo,447,2020-03-29T16:56:04Z,2020-03-30T18:58:31Z,True,2020-03-30T18:58:31Z,eca60fdaea9cb766e23253cbccd1c173f7712963,2,1,2357d18c2524acb3e4f2b782042d1667143b637b,,Add plane_lidar model for testing terrain estimated landing,This PR attaches a lidar to the plane model  so that we can test terrain estimated landing. This change is included in https://github.com/PX4/Firmware/pull/14480
PX4/PX4-SITL_gazebo,445,2020-03-26T15:26:02Z,2020-03-31T12:26:11Z,True,2020-03-31T12:26:11Z,1ecfa9806ee2e23e20ea01d736b2aba03ddd904f,6,3,cd0de3dfae8804cbdf83b0f89629803fff507495 3bfb087fe8fd0f3faf9f6a5abdeb703aba9967ce 314de47b6f68d27765af8474d3d4fddc1f5d7e70,,Cut down noise of plugins,This is an attempt to cut down on some of the noise by the plugins. Please check the commit messages for more details.
PX4/PX4-SITL_gazebo,451,2020-03-31T12:29:54Z,2020-03-31T15:21:32Z,True,2020-03-31T15:21:32Z,e4f6bff206922d8ab85c68ece20c223812979560,1,1,b6486b1e5f1f3a674ebb6210c2e4fd080dab8a08,,more realistic rotor drag for iris model,In a log from the pixhawk vision I found that it shows a pitch of 0.22rad @ 5m/s straight flight.  I just tuned the rotor drag of the iris until it showed the same behavior. With the previous drag value it had 0.6 rad pitch @ 5m/s.
PX4/PX4-SITL_gazebo,452,2020-04-02T20:20:04Z,2020-04-03T06:31:48Z,True,2020-04-03T06:31:48Z,a92890699fa7c46a04ce2435f2711b88709377eb,2,1,5350bcebe7a553f405bfb43b3833eb828ec610f7,,Fix race condition in gimbal_controller_plugin,This Fixes #422 where the race condition on the yaw command in the `gimbal_controller_plugin` was introducing oscillations. The race conditon was caused when a new roll / pitch / yaw command was received while the gimbal control was calculating the gimbal commands in the `OnUpdate` method.     @jannsta1 Thanks for reporting the issue!    **Additional Context**  H520 still shows some oscillations  but this seems to be introduced when the landing gear is up. Will be addressed on a separate PR
PX4/PX4-SITL_gazebo,409,2020-02-09T23:34:55Z,2020-02-24T13:17:08Z,True,2020-02-24T13:17:08Z,88ed2825628fb439055db1e2a90f11bdb7365a46,13,2,80267465ea8a1d636490f64d7559ef63bb5c9b87 58615bfbe0365ee0247239d45e1d7c235ec320ad,SITL,Add support for boat airframe in SITL,Recently there has been interest on using PX4 on USV (unmanned surface vehicle) systems. This PR adapts the usv_dynamics plugin from the [vrx](https://bitbucket.org/osrf/vrx/src/default/) simulation and integrates the boat simulation into px4 SITL.    As PX4 does not officially support boats yet  I hope this PR becomes a initial step towards supporting such applications.     The changes that were done compared to the original vrx project are as the following  - ROS dependencies have been removed  - Removed wave plugin dependencies (The original code segfaults if the wave plugin does not exist)  - Thrust plugin has been removed and the already existing `gazebo_motor_model`  is used  - Integrated into the mavlink HIL interface for px4 sitl    **Test Data Coverage**  The video below shows the WAM-V vehicle being controlled in manual mode.  ![ezgif com-video-to-gif(4)](https://user-images.githubusercontent.com/5248102/74112434-e1976c00-4b9c-11ea-8220-f39809c315bb.gif)    **Additional Context**  This is a updated version of https://github.com/PX4/sitl_gazebo/pull/357
PX4/PX4-SITL_gazebo,453,2020-04-07T22:01:38Z,2020-04-08T07:19:58Z,True,2020-04-08T07:19:58Z,7cb466cdebab0a1fbdac97466524ff0fe3a85fd2,2,1,65a0c65fff23931e9c670a5aa92c083b7e99adf9,,Remove rubble and uneven world,This PR removes `rubble.world` and `uneven.world` which seems like unnecessary worlds to have.    It is also not part of the make targets  and IMHO it is not worth adding.
PX4/PX4-SITL_gazebo,438,2020-03-20T10:28:00Z,2020-03-20T11:40:48Z,False,none,85d5a43fcd2b17c03d90216dc519fd59208981c0,28,2,dc60f209db24712721dd9481e2244b7b0b35a9db b421af9468a4582332c85301a03ba5f2081be996,,Add gps_origin_plugin for broadcasting GPS origin of worlds ,This PR adds the `gps_origin_plugin` where the gps origin of the world is broadcasted from the world file.    This enables spawning the same vehicle to different environments where the world is based on a real location so that the map in QGC matches the environment in the gazebo world.    This PR depends on the model - world spearation in https://github.com/PX4/sitl_gazebo/pull/414 and https://github.com/PX4/Firmware/pull/14166    As an example  I have created the `sonoma_raceway.world` to demonstrate how the GPS origin should be implemented in the world file    The world can be started by the following command  ```  make px4_sitl gazebo_rover__sonoma_raceway  ```      [![Demo](https://img.youtube.com/vi/caPbIHKRUCs/0.jpg)](https://youtu.be/caPbIHKRUCs)  
PX4/PX4-SITL_gazebo,454,2020-04-08T13:44:58Z,2020-04-08T15:14:11Z,True,2020-04-08T15:14:11Z,bab4880d297f84e4fce02b9814806e8d239d4a88,1,1,3add1e3a6e5a4f35106464328a4b8dad8e571540,,Remove boat from boat world,Boat was getting spawned twice after https://github.com/PX4/Firmware/pull/14166. 
PX4/PX4-SITL_gazebo,455,2020-04-08T14:37:09Z,2020-04-09T09:55:00Z,True,2020-04-09T09:55:00Z,2f83192e70a590e4af87535b605f7aaa806a52f5,1,2,bdd8aa4e02b51b5c0c4be5b785cf5063dba73b39 16e08e9ac235d55c744c654b5e05e2bbe0458b0c,,Remove uuv_hippocampus from uuv_hippocampus world,uuv_hippocampus was also getting spawned twice after https://github.com/PX4/Firmware/pull/14166     This PR is a quick fix for that. Unfortunately because of the recent changes in the sitl run logic it looks like a part of this simulation is broken because according to the comments it looks like the model needs to be spawned in a certain location. If there's a better solution for this let me know.    @Jaeyoung-Lim FYI.
PX4/PX4-SITL_gazebo,375,2019-11-23T06:02:35Z,2020-04-12T09:42:14Z,True,2020-04-12T09:42:14Z,c2d7d2609f3801ca9a0a03643942b10da50d090d,8,1,2dd754dd17332e37fc9d6a36b3b5a704c9dde868,,Incorporate wind in lift calculation and airspeed measurements,## Problem definition  Currently the wind plugin is designed so that it applied "force" to the vehicle. This might be a valid simplification for multirotors  but for fixed wing or airspeed sensors this makes the dynamics incorrect.    The issue has been observed in https://github.com/PX4/sitl_gazebo/issues/287 https://github.com/PX4/Firmware/issues/11116#issuecomment-452724619 https://github.com/PX4/Firmware/issues/11319     The problem was due to the following  - Airspeed measurement is based on the body velocity  - Lift drag calcluation is also based on body velocity without wind  - Wind forces are applied as a force and there is no interaction with lift    ## Solution  This PR enables the wind plugin to talk to other plugins such as the `mavlink_interface_plugin` and `liftdrag_plugin`as the following  - The wind velocity is generated and passed as a gazebo_msg  - The wind gust force acts as a force before  - Airspeed incorporates wind  - Lift and drag calculation uses wind velocity    ## Tests      Before PR: [Log](https://review.px4.io/plot_app?log=c40ffcb1-3e8e-48f2-97f4-5cafa26fd891)  ![Screenshot from 2019-11-23 06-58-19](https://user-images.githubusercontent.com/5248102/69474238-e2e7a280-0dbe-11ea-97ae-5c085688a81b.png)    After PR: [Log](https://review.px4.io/plot_app?log=eb239a5f-b4a0-481e-95eb-226f6abb0a8d)  ![Screenshot from 2019-11-23 06-57-48](https://user-images.githubusercontent.com/5248102/69474240-e844ed00-0dbe-11ea-90f5-994042676b1b.png)    The test was done by making a wind blow in one direction [5m/s  0  0] and the drone moving upwind and downwind. From the airspeed and ground speed plots  It can be seen that the airspeed is constant  but the ground speed varies since it has a headwind / tailwind
PX4/PX4-SITL_gazebo,457,2020-04-16T09:52:58Z,2020-04-16T11:56:58Z,False,none,a8fb3b7544ef69381cc85cfc28d01bd414f60fca,2,1,43b1cb0aa2036641e41015d1690eb55024845a8a,,Add px4vision_blind model,For non-ROS environment and showcase usage.
PX4/PX4-SITL_gazebo,458,2020-04-16T12:10:58Z,2020-04-18T19:50:46Z,False,none,dff5479095ff97f6bbe65bbab6685b1bd3c5325f,2,1,952a9669e3db888fd0c69d2670662691e7c9586a,,Add px4vision_less Model,For non-ROS environment and showcase usage.    Naming explains:  1. Visionless means without vision feature.  2. Less is more  more potential usage in normal simulation environment.
PX4/PX4-SITL_gazebo,461,2020-04-18T15:27:55Z,2020-04-22T09:30:35Z,True,2020-04-22T09:30:35Z,8f0230b256dc4c3ff64e1c56165620236331c0e8,2,1,dfa69c66cfcc2f95a7cd558f85125a80ea1c7432,,Add influence of wind to rotor drag,This PR adds the influence of the wind to the motor model  by considering wind as part of the calculation of rotor drag. This is important since the majority of the drag is usually generated from the rotors in case of multirotors  and is influenced by wind. Thrust variations are not considered.      Also  @MaEtUgR have brought up examples where some issues only appear under the influence of wind. This PR would make it easier to see wind influence of multirotor models.     **Testing**  Below shows the model taking off and being influenced under the wind of 5m/s    ![ezgif com-video-to-gif(7)](https://user-images.githubusercontent.com/5248102/79641776-df075300-8199-11ea-9db3-d3d19fa0ef13.gif)    **Additional Context**  This is a follow up PR of https://github.com/PX4/sitl_gazebo/pull/375   which added wind influence to the lift drag model
PX4/PX4-SITL_gazebo,462,2020-04-18T16:03:08Z,2020-04-22T09:35:33Z,True,2020-04-22T09:35:33Z,f5c3b31e400e04139e85e72300d64a86af5608aa,7,2,3bda44430c55d8a98e32341a7978b14139899865 403561a90be7adcb15ae463489e854abdad3b725,,Change wind gust to publish velocity instead of force,This is a follow up PR of #375 which switches the wind gust to publish wind velocity instead of force.This was part of a comment from @jkflying     As the effect of wind gust on the vehicle can be effectively modeled closer to the real physics through #461  applying force directly through the wind plugin is deprecated    
PX4/PX4-SITL_gazebo,466,2020-04-22T18:02:26Z,2020-04-25T13:27:42Z,True,2020-04-25T13:27:42Z,51bd931a0de7aecc7ba71571a7effb12a1812e27,2,1,0c569f5950e58185d2dd40aeac58cec3aa7335f8,,Fix winddirection sdf tag,The winddirection tag on the `plane` plugin was misleading  since `windDirection` tag doesn't exist.  The correct tag is `windDirectionMean`     This is a regression from https://github.com/PX4/sitl_gazebo/pull/245
PX4/PX4-SITL_gazebo,470,2020-04-25T11:00:01Z,2020-04-26T11:52:09Z,True,2020-04-26T11:52:08Z,fa9998458c7914a7af852490196513472ac4690c,1,1,6ec9a141227929614bda4264afcc9d960cc34c12,,Fix CI failure by updating mavlink enums,Upstream mavlink https://github.com/mavlink/mavlink/pull/1112 updated the frame unums  therefore the enums used in this repo didn't exist anymore.    CI was only breaking on macOS since this was the only one using upstream mavlink c library.    This commit updates the container with the updated enums
PX4/PX4-SITL_gazebo,469,2020-04-25T08:34:22Z,2020-04-26T11:52:32Z,True,2020-04-26T11:52:31Z,fc6aa3e3629e08756c18dd8865d3f025fdfa2f67,3,2,9028b8d2f0f505d27856741babe6f53b5ae301a2 935cb40865fd41e43ed329aaf3f0fb8f614e5c56,,Fix gimbal jitters,The gimbal was oscillating even though the command input was not changed.    After looking into the issue  this was because arbitrarily large control inputs were being injected since the imu yaw message was being added twice  when there was additional update of the timestep with no yaw command update.    This PR fixes this issue by not saving the transformation in the member variable.    To improve video aesthetics  the default horizontal fov was also adjusted to something more reasonable (17deg to 90 deg)    **Before PR**  ![ezgif com-video-to-gif(9)](https://user-images.githubusercontent.com/5248102/80271876-f62bd080-86c4-11ea-842e-144cfac961ee.gif)    **After PR**  ![ezgif com-video-to-gif(8)](https://user-images.githubusercontent.com/5248102/80271880-f9bf5780-86c4-11ea-8d8d-0225e426416b.gif)    This is a follow up fix for https://github.com/PX4/sitl_gazebo/issues/422
PX4/PX4-SITL_gazebo,468,2020-04-24T15:42:09Z,2020-04-26T11:53:37Z,True,2020-04-26T11:53:37Z,0823f5e006011d36858c2dd39881874c1edac10b,1,1,13f6625322db1ca6ed06e08933de83ab4bcae068,,Fix tiltrotor tilt scaling,Previously  the tilt actuator inputs were being set as a 1 to 1 to the joint poisiton.    This is a problem since the tilt angle ranges [-3.14  3.14] compared to actuator setpoints [-1  1]    As a workaround  the firmware was scaling inputs on the firmware side by setting the parameter `VT_TILT_FW` as done in https://github.com/PX4/Firmware/blob/master/ROMFS/px4fmu_common/init.d-posix/1042_tiltrotor#L39    This PR sets the input scale on the model side by changing the input scale.
PX4/PX4-SITL_gazebo,472,2020-04-28T11:52:07Z,2020-05-02T15:47:42Z,True,2020-05-02T15:47:42Z,f8da05a33c045ea0497780dcb715c35e39e1a789,1,1,ffa6ca57369cee489ac2d36e78fbe3d583f2e210,,Fix vision variance copying in mavlink message,The copying of the vision covariances into the mavlink message was not done properly. The index variable `count` was incremented twice.  
PX4/PX4-SITL_gazebo,476,2020-04-29T17:29:46Z,2020-05-02T15:55:29Z,True,2020-05-02T15:55:29Z,e8d983f4eade97703d1529b1318cf461bb055851,3,1,017d0dbf9152ae3088644221b9abb75593c453fd,,Add flaps to plane model,Previously  the plane model didn't have a flap although flaps were defined in the SITL mixers. This PR adds the ability to simulate flaps in the plane model.     To enable this  the lift drag elements on the wings are split into two  where one simulates the aileron and one simulates the flaps. The center of pressure is placed separately along the wing near the center of the control surface.     **Test/Validation**  Log: https://review.px4.io/plot_app?log=f5655069-3579-447b-8e9d-e158d1e7e0f8    ![ezgif com-video-to-gif(12)](https://user-images.githubusercontent.com/5248102/80627137-bb70c200-8a4f-11ea-8c00-f4b85ee0ce38.gif)  
PX4/PX4-SITL_gazebo,482,2020-05-03T08:54:01Z,2020-05-03T10:21:51Z,True,2020-05-03T10:21:51Z,f91b873c6e4957605efad38db2705a877e084395,3,1,f08ee6dbefd8f7625fb1fea80d5e3681d0ab7ef0,,Rename rotation for ENU NED FLU FRD,The previous naming with q_ng and q_br is not very comprehensible. Therefore in some places  there was a not needed inverse call. Actually since both rotations are symmetric  this does not matter.  But it helps to make the code much more readable.
PX4/PX4-SITL_gazebo,483,2020-05-03T15:20:32Z,2020-05-03T16:00:36Z,True,2020-05-03T16:00:36Z,d76ac7f9f9813fd52acf0b9f344edbf72d3b4406,1,1,db152cf43ce7798119502f047f85e2e4400111bb,,Increase vision noise,In order for the mavlink_interface to send vision velocity as well we need to set the `send_odometry` option to true.  Additionally the previous vision noise was really small. I suggest to increase it to 1cm. This seems more realistic. With the previous choice of 5e-4 the variance was 2.5e-7  which could cause numerical issues in the ekf.
PX4/PX4-SITL_gazebo,480,2020-05-02T08:55:18Z,2020-05-03T18:19:33Z,False,none,3770cf085325526be6c2c31e518e6bda9d43d272,2,1,2ad7297b775984657862876c8245d3d1dce88a64,,Add iris_vision_velocity model,I'd like to run some CI tests based on the iris_vision model. But for some of them I need different parameter configurations. For example I want to fuse vision velocity instead of position.     The only way I know how to do this  is by adding also a new sdf model as suggested in this PR. But this is not that nice  since the added `iris_vision_velocity.sdf` does not differ from the `iris_vision.sdf`. Is there any other solution?
PX4/PX4-SITL_gazebo,394,2020-01-11T22:06:43Z,2020-05-05T07:55:14Z,True,2020-05-05T07:55:13Z,2736a9134d7fed0cae7b7836d4370f9a4dfef439,9,1,b2e4f021a300f0b421f7ad872c2e23e09de6ac97,,Add aion robotics r1 rover,This PR adds a model of the differential rover in SITL based on the aion robotics r1 rover  where the models are from https://github.com/aionrobotics/r1_ugv_sim    Fixes https://github.com/PX4/Firmware/issues/11955    ![Screenshot from 2020-01-11 22-52-46](https://user-images.githubusercontent.com/5248102/72211166-16919f80-34c7-11ea-87aa-126834f02add.png)      Remaining issues:  - The contact dynamics of the wheels make vehicle jump when the wheel spins too fast  - The vehicle is unable to turn on yaw inputs
PX4/PX4-SITL_gazebo,471,2020-04-27T11:21:29Z,2020-05-07T08:12:36Z,True,2020-05-07T08:12:36Z,4c1c512e50a417bbe224ba621ac0eb8ebe603c99,3,2,c3e4d080cc7f682355e0fdc6de1d5a3b858493b9 e820b9ab87ec7c757ca25c2b70c06b7035f91baa,,Fix tiltrotor motor tilt oscillations,This PR fixes the tilt rotor motor tilts oscillating during flight and even during the vehicle is stationary. This was causing the joint position to be more or less random and was blocking a lot of functionalities to work that require joint position to be precise (e.g. controlling yaw based on tiltrotor tilt). Also  the flight shows instabilities due to the motors pointing in arbitrary directions during flight.    The oscillations were caused by the following reasons.    - Joint controllers becoming unstable very quickly due to large control errors with large gains.  - Inertia of the joints were too small  - Poor handling of joint limits in combination of actuator input scaling    To solve the problem the following is proposed  - Increase of motor inertia   - Added friction to the tilt joints  - Clamp error of the joint controller to prevent pid controller becoming unstable with large errors    **Before PR**  ![ezgif com-optimize(1)](https://user-images.githubusercontent.com/5248102/80366686-f628fd80-8889-11ea-86bc-a57029d71069.gif)      **After PR**  ![ezgif com-optimize](https://user-images.githubusercontent.com/5248102/80366697-f923ee00-8889-11ea-9a11-a980158e3412.gif)  
PX4/PX4-SITL_gazebo,484,2020-05-03T17:51:48Z,2020-05-08T09:09:55Z,True,2020-05-08T09:09:55Z,7f1b8e2512fa37452c186aadecdfa0f1097b3e01,1,2,51bfbcda6aec773e015484408d3a2b9ba5b96fe9 a007c0eb7f5f740eed1f2443333273872c7b20ef,,Fix gazebo motor model plugin calculations,This PR fixes the motor model calculation error reported by https://github.com/PX4/sitl_gazebo/issues/312  where the body velocity was calculated with a product multiplied element wise while it should have been a dot product.     This is also more consistent with rotors_simulator https://github.com/ethz-asl/rotors_simulator/blob/master/rotors_gazebo_plugins/src/gazebo_motor_model.cpp#L445    **Test / Validation**  Testing was done with wind blowing at 4m/s at a single direction  Log: https://review.px4.io/plot_app?log=3347a6b3-f280-4cb6-84a5-ae183e3e1d64
PX4/PX4-SITL_gazebo,485,2020-05-03T17:52:19Z,2020-05-10T10:42:30Z,True,2020-05-10T10:42:30Z,dab2eba58ee6cdee3c7bec45c28605c5210fac73,1,1,d219f857a08b30607ac317a2b8ec32bb5b02e32e,bug,Fix wind velocity transformation,I am pretty sure that the quaternion `q_gb` is rotating from body to world. In this case we want to rotate from world to body  so we need the `RotateVectorReverse` function.
PX4/PX4-SITL_gazebo,441,2020-03-23T19:51:22Z,2020-03-24T15:01:18Z,True,2020-03-24T15:01:18Z,598e40677c62873a89bd73c0af863b778ea13cc5,3,3,d5719278ba3fc4398fcf2f70d40a00797e0de277 7a77d83a4b14c593fa5a2bfc5b824ffc22a41b62 4dfee2732ec3213cb978a783b5671698b93b45fd,,Add spherical coordinates to the world files,This PR adds the ability to utilze the `spherical_coordinate` tag defined in the `.world` file so that we can define the world location. This allows easily aligning the gazebo world with the map in ground station as shown in the video below.     This PR is a continuation of #438   and the `sonoma_raceway.world` has been added to demo how to use the `spherical_coordinate` tag    [![Demo](https://img.youtube.com/vi/caPbIHKRUCs/0.jpg)](https://youtu.be/caPbIHKRUCs)    To try the demo shown above  use https://github.com/PX4/Firmware/pull/14462 and run  ```  make px4_sitl gazebo_rover__sonoma_raceway  ```
PX4/PX4-SITL_gazebo,488,2020-05-07T12:53:21Z,2020-05-11T17:53:42Z,True,2020-05-11T17:53:42Z,0b348fde5d32e233023af42c7cb0ac2ddb92b5f8,2,1,8d1130968da65b76d707c9d91f23fa10acf65543,,Handle continuous zoom,This commits adds a iterator for zoom so that it can handle continuous zoom controls for MAV_CMD_SET_CAMERA_ZOOM message    This is useful for testing groundstation software implementations that use continuous zoom messages. 
PX4/PX4-SITL_gazebo,494,2020-05-14T16:36:21Z,2020-05-14T16:39:58Z,False,none,525ff0ebc3ba1264f704a752e05c9fd9d00cff90,1,1,268bdbc4ecd7102141f39f4636d15c812ebd62cd,,magnetometer_plugin fix slowdown over time,We need to clear the covariance before filling it again  otherwise it grows forever and slows the simulation down.    Alternative to https://github.com/PX4/sitl_gazebo/pull/465.  Fixes https://github.com/PX4/Firmware/issues/14189  fixes: https://github.com/PX4/Firmware/issues/12975    Found by @tnkkk.
PX4/PX4-SITL_gazebo,465,2020-04-22T08:58:54Z,2020-05-14T16:41:27Z,True,2020-05-14T16:41:27Z,12da9e6104aaf72a0c52bf802644310f0c5b1ee1,1,1,1d2956ef7e26a2e305cf721e85d2cddae102e184,,Moved add_magnetic_field_covariance from OnUpdate to Load,Fixes https://github.com/PX4/Firmware/issues/14189  fixes: https://github.com/PX4/Firmware/issues/12975
PX4/PX4-SITL_gazebo,459,2020-04-16T13:36:17Z,2020-05-17T10:51:33Z,True,2020-05-17T10:51:33Z,f021cdd8084fa71347497ab5efd973d965f676e1,1,1,d3ab5dc6e353f9b1f45e3a6ff42582cf1e3dc4a7,,make position_gztopic work without specifying joint_name as it is no ,…t used anyway)
PX4/PX4-SITL_gazebo,360,2019-10-16T19:59:26Z,2020-05-21T17:34:36Z,False,none,dec5b09f74d7d5dfb64c4ce4824f7f2a296a42f2,4,1,8cc6037b1ea2de34c37f3fd49c1e59ceb412ecdf,,Add vtol models with camera,This PR adds a camera using the `gst-camera-plgugin` on the `standard_vtol` and `tailsitter` vtol models for SITL. This is useful for simulating survey missions with the vehicles      ![Screenshot from 2019-10-16 18-17-02](https://user-images.githubusercontent.com/5248102/66954133-16b50700-f060-11e9-84de-64438306ae3e.png)  
PX4/PX4-SITL_gazebo,497,2020-05-18T16:14:49Z,2020-05-19T06:41:12Z,True,2020-05-19T06:41:12Z,4acd679d17a735a1f62781349d14289a29b01014,1,1,5f501c868c01481428d52ddfb8b9da0ea4125d54,,Fix for Gazebo 11,As mentioned in point 4 of:  https://github.com/osrf/gazebo/blob/gazebo11/Migration.md#modifications    `GetCurrentProfileParam` now returns a `boost::any` which then contains a std::any. The advice is to just use `PhysicsEngine::any_cast` instead.    Fixes https://github.com/PX4/sitl_gazebo/pull/497.
PX4/PX4-SITL_gazebo,502,2020-05-25T11:29:38Z,2020-05-28T10:21:29Z,True,2020-05-28T10:21:29Z,63cf84c9c5ce16f0a7edfb8de9cace634834cfe5,1,1,72e8f4dde64423e42a91f9b185e270a5fb851af1,enhancement@CI,Travis CI add pipelines to build and test with Gazebo 11 over Ubuntu 20 04,This adds Ubuntu 20.04 and Gazebo 11 as supported to `sitl_gazebo`.
PX4/PX4-SITL_gazebo,507,2020-05-28T11:28:46Z,2020-05-28T11:44:25Z,True,2020-05-28T11:44:25Z,2f25ae06e7deaa51bf605e8a406292d6a29a67a1,1,1,92e00ca20096c517a30347205182ff04e5c347f6,CI,CI bump container tags to 2020 05 28 temporarly remove Gazebo 11 and Kinetic builds,`CAMERA_CAPTURE_STATUS` update required also a MAVlink header update on the containers.    At the same time  this removes temporary the Kinetic and Gazebo 11 stages.
PX4/PX4-SITL_gazebo,506,2020-05-28T09:35:15Z,2020-05-28T12:18:56Z,True,2020-05-28T12:18:56Z,20e8dbe115028721b1918069dc7afd9145c7483c,3,3,b7a6f2ac63a779dc8b3328a6aac6aa663f5c769c 2ae6a1b75d1043d1eaea4814653b091d51d0fb18 a2e7b47956725edf551a43f225d274a6b84f124f,plugins,Fix odometry frames of reference,Bring back `MAV_FRAME_BODY_FRD`. Since some of the frames were deprecated  it made sense to bring the usage of the `estimator_type` field  in order to properly set the estimation source.    Also fixes the `CAMERA_CAPTURE_STATUS` packet structure by adding the new missing `image_count` field (set to 0 for now).
PX4/PX4-SITL_gazebo,473,2020-04-28T13:04:02Z,2020-05-31T13:10:47Z,False,none,ffd7a8bd6e70597da96c3d4c59097b594ec2bd91,1,1,ac85821f0cc0cc11d1ec0586ff415bb96f3a5940,,Fix CI breaking on macOS,Currently macOS fails to build with the following error:  ```  dyld: Library not loaded: /usr/local/opt/bullet/lib/libBulletSoftBody.2.88.dylib    Referenced from: /usr/local/bin/gz    Reason: image not found  /bin/sh: line 1: 37521 Abort trap: 6           gz sdf -p /Users/travis/build/PX4/sitl_gazebo/models/rotors_description/urdf/iris_base.urdf >> /Users/travis/build/PX4/sitl_gazebo/models/iris/iris.sdf  make[2]: *** [../models/iris/iris.sdf] Error 134  ```
PX4/PX4-SITL_gazebo,492,2020-05-14T08:38:35Z,2020-05-21T17:34:58Z,True,2020-05-21T17:34:58Z,ab527bf4a5bc1e0b8d83ea617fe8d4604d417da4,1,1,058ffbf544c0cf2dba2f05017d18f33fa5f9ec09,,Update gazebo_usv_dynamics_plugin cpp,PR from: Institute of Geography  Chinese Academy of Sciences    @Jaeyoung-Lim  More than one person has encountered a problem.  See: https://github.com/PX4/Firmware/issues/14831   https://github.com/PX4/sitl_gazebo/issues/456   https://discuss.px4.io/t/error-about-gazebo-sitl-building/12019/12     I know this may not be the right way  but doing so is not harmful to most people :smiley: 
PX4/PX4-SITL_gazebo,500,2020-05-21T19:11:44Z,2020-06-03T11:43:54Z,False,none,b46989ecf64aa1c2e33468f85ad0d3d4f0c259b1,1,1,753b75338241a9363155b95189f9f2c1487340de,,Bring back MAV_FRAME_BODY_FRD,`MAV_FRAME_BODY_FRD` has been reintroduced in mavlink by https://github.com/mavlink/mavlink/pull/1381  therefore reverting https://github.com/PX4/sitl_gazebo/pull/470
PX4/PX4-SITL_gazebo,495,2020-05-14T21:44:28Z,2020-06-03T12:21:49Z,True,2020-06-03T12:21:48Z,92453d162fa582f8c57d5f5a1e6eb1c798068087,3,2,64569617e9be85beb4d2450d732b3bad97debcf1 9354ed7b6cba3281b739c4167a84106666fa32e5,,Fix gimbal pointing backwards,This PR fixes https://github.com/PX4/Firmware/issues/14902  where the gimbal was pointing backwards.     @julianoes @TSC21 It seems like the problem is that we transform the yaw command  and not the actual gimbal orientation to the correct frame. While this is not a "fix"  nevertheless I would like to have this fix in so that the end user does not suffer from the issue.    I will try to fix it properly in the meantime
PX4/PX4-SITL_gazebo,508,2020-06-03T11:47:25Z,2020-06-03T12:23:53Z,True,2020-06-03T12:23:53Z,3ba325b00f5e9c7a0645c6af3937f394dc806c9f,1,1,1247f9e161c57c25bce0e35d04766657dcd16221,,geotagged_images actually report number of images,I think that makes more sense.
PX4/PX4-SITL_gazebo,509,2020-06-04T07:08:24Z,2020-06-04T09:08:13Z,False,none,8c3971aacd1fb97d51fa75b4cdd8473bded28fdf,1,1,887e54f377488bddb9bd778c3db90a02dbff1ac4,,Fix function arguments mismatch with its header,the "mavlink_msg_camera_capture_status_pack_chan" function utilized on line 728 has one more arguemnt "_imageCounter" compared with its mavlink2.0 header  located at   "catkin_ws/devel/include/mavlink/v2.0/common/./mavlink_msg_camera_capture_status.h" line 110  ``  static inline uint16_t mavlink_msg_camera_capture_status_pack_chan(uint8_t system_id  uint8_t component_id  uint8_t chan  mavlink_message_t* msg  uint32_t time_boot_ms uint8_t image_status uint8_t video_status float image_interval uint32_t recording_time_ms float available_capacity)  ``  The error can be replayed under this environment:  Ros melodic  Gazebo 9  Mavlink 2.0  and I build this repository under the master branch.  
PX4/PX4-SITL_gazebo,514,2020-06-08T15:19:14Z,2020-06-08T15:25:59Z,False,none,397e36800bcbf2437474a242075d3bb216dd76f4,11,21,e849c056c0bd4db2fbcdbcffa6566d2d6afd283c 4d24ce795cae696b016820435041a63c5a402a74 cadd46b782801518dada2f3670d09a211c564ecf ac226d39f1b5795f126c47e6067d496c567abeb0 5b88f1d8861151f08f75e52d003561683943bca1 810ae586f178ab5668a05b845b34f33709320b62 4f8af7f1e40c883b96ec89652b4a2bf33074c253 b42f57f2c7180f2a854244ed73429882ad86b4d2 af395ac9b6437de564aa786ff90d9873e20d5cec dc05dbb4d03bc7b29ef8f2ac673b69e6649bca3c 263acd7091323c3a7e1f58e05aeeee41224d0055 7f81f4cff3a8c45073b18f5e5ec58d8231e523f9 7156c73f23fd1c059eac0479c1441f494d5a619e c7d0073c54eec721db99a74cf10c0acc010c020a 854d39ac6192a03c69f47ec349b0fbcf0a01d3ac 0e3e21c5506949f803a573df7a61fa9fcfe5e2d8 785ec70d96273f54a14bd5588d54beaa14ffe0f1 100c0b03daea70dfb25cccfe2b57e641e0b938eb edad893605f87104cfc1d6c3bc8075d413072d0d 02cdc1f1f68e54c1693e683d8239353040164a4f e82b78f9e358814c463c04ebb900cfe68f11047e,,Update README md for Mavlink headers,I had exactly the same problem that was reported in <https://github.com/PX4/sitl_gazebo/pull/509> using the latest master and building as per the instructions. Updating the README.md file seems like the right thing to do to fix the problem.    I have attached my full installation script. 
PX4/PX4-SITL_gazebo,512,2020-06-07T17:22:34Z,2020-06-08T10:57:05Z,True,2020-06-08T10:57:04Z,e2bf962b5e46b89093696338794a201c7fc990ba,1,2,e02bb3d82db88ac8b6afc3f4aeae3987ded623fd fd920622560e842465239192e3291d0db69d4faf,,Fix typhoon h480 internals,I noticed that everything including camera imu  imu  motor layout was rotated by PI  making the model functionally working  but making it confusing to debug orientations. (Issue: https://github.com/PX4/sitl_gazebo/issues/511)    My suspicion of why this happened is given that visual mesh of the body was rotated by pi  everything was simply made to fit the visual mesh. This problem became only to attention when I was trying to add the gimbal to other models. Only the typhoon h480 was working with the gimbal and the rest of the models had the gimbal rotated by pi when it was fitted by it.    Therefore  I have rewired the internals of the Typhoon H480 so that the orientation of the vehicle is actually aligned with the link orientation.     **Note**: I noticed that each of the motors were tilted slightly as in the real vehicle  so that it has more yaw authority. However  given the change of orientation change it resulted in a loss of yaw authority therefore I made every rotor align vertically. If anybody has information of how much this should be tilted (or if this is even realistic / important) I will bring the tilts back in.     **Before PR: (Vehicle yaw = 0)**  ![image](https://user-images.githubusercontent.com/5248102/83975484-98f68200-a8f4-11ea-9d5b-7510ff1376e2.png)    **After PR: (Vehicle yaw = 0)**  ![image](https://user-images.githubusercontent.com/5248102/83975574-ce02d480-a8f4-11ea-8c8c-99df21a0d0d5.png)    Fixes https://github.com/PX4/sitl_gazebo/issues/511    
PX4/PX4-SITL_gazebo,516,2020-06-12T09:26:53Z,2020-06-12T09:37:42Z,True,2020-06-12T09:37:42Z,8468271df93c05f4e3360b7a3562fe6b1b78f4f9,7,1,0a8bb4da55ee984a52c9aad59e06fdc96185849f,,Do not set cm to zero when cma is defined in sdf,Previously cm was always set to zero even if `cma` in the sdf was set to zero.    This is actually coming from the [rotorS liftdrag plugin](https://github.com/ethz-asl/rotors_simulator/blob/master/rotors_gazebo_plugins/src/liftdrag_plugin/liftdrag_plugin.cpp#L338).     This should not be the case. To keep the default the behaviour  all `cma` defined in the models were set to zero.
PX4/PX4-SITL_gazebo,515,2020-06-11T18:24:37Z,2020-06-12T09:42:28Z,True,2020-06-12T09:42:28Z,a05adfd3ba737865a1a1e72e54f23d0eb0b02720,9,1,22ed2b2e570f8629c1259edb5ab6a97beaea9396,,Factor out airspeed as a plugin,Previously  the airspeed model was included as part of the `gazebo_mavlink_interface`. However  this does not make much sense and prevents you from mounting airspeed sensors in arbitrary orientations on the vehicle. For this reason  there was a sdf element `vehicle_is_tailsitter` to enable measuring airspeed for the tailsitter  which airspeed is measured on the z axis.     This PR separates the airspeed measurement into a separate plugin  so the airspeed sensor can be mounted in arbitrary orientations. Also  parameters such as temperature  noise are exposed through sdf  so it can be changed easily.     Airspeed plugin on plane  tailsitter  standard_vtols model has been updated and tested. On the tailsitter the airspeed sensor is mounted vertically.     **Testing**  Flight test on a plane  Flight Log: https://review.px4.io/plot_app?log=c4950de7-59e8-4397-87fa-f24aba3458fb    Moving forward  this is needed to be able to mount multiple airspeed sensors  but this needs extension of the HIL SENSOR message.   
PX4/PX4-SITL_gazebo,523,2020-06-18T23:40:41Z,2020-06-19T00:04:44Z,True,2020-06-19T00:04:44Z,846190e8a33063a62997f2ad18c9de5c5233d9f9,1,1,b2f246b325e4e100a400498feb0f7305ff29002d,,cmake set build type and c standard,When the build type isn't set there's no default optimization.
PX4/PX4-SITL_gazebo,522,2020-06-18T13:42:42Z,2020-06-18T13:44:41Z,True,2020-06-18T13:44:41Z,1cd16d79607a72f0882cfea42817190144e740c7,4,1,4308d9ce9b94971f4d3ad50be5fad631aa2541e1,enhancement@plugins,Set GPS utc time to use utc time,Previously GPS `utc_time_usec` was wrongly passing sim time in [simulator](https://github.com/PX4/Firmware/blob/master/src/modules/simulator/simulator_mavlink.cpp#L297)  therefore being marked as being flown in close to epoch.    This PR sets the utc time to the current system time by adding wall time. 
PX4/PX4-SITL_gazebo,521,2020-06-17T04:17:55Z,2020-06-19T09:53:44Z,True,2020-06-19T09:53:44Z,e8b8151269739243b9e68bdbeb844bff2cb50e93,3,2,7366b23fe727d7dbb81bc11916b542a46aa74247 1904466dec3e6652a33d4bb9d627b47de58249e5,enhancement@plugins,Add pitching moment control via control surfaces,This pull request adds the effect of the control surface deflection angle on the pitching moment of a wing. This aerodynamic effect is crucial for pitch control in tailless aircraft like the tailsitter SITL model. Earlier  the model needs a virtual elevator for pitch control since the moment coefficient was negated as pointed out in #516.    With pitching moment control via control surface deflection angle  the tailsitter SITL no longer needs the virtual elevator. However  it still needs a virtual rudder for directional stability.    To make the tailsitter SITL model work  the mixer file needs to be changed as well (add pitch control mixer to the elevons and remove the mixer for the virtual elevator). I'm trying to make another PR in the PX4/Firmware repository.
PX4/PX4-SITL_gazebo,517,2020-06-12T16:45:24Z,2020-06-15T17:03:23Z,True,2020-06-15T17:03:23Z,97106007eb5c934b902a5329afb55b45e94d5063,35,9,43b36299e2d5d5138bdd1dbdbcd03d449a881f93 92b15ecc70cb9289da20c703d1ef575530c9c5b3 6fee82eb41f08737fa2a143e4709d609fd9d5138 ae3c248291af96a3a081fd8fc6e09c202f129fb6 eb5688da1974800e2255f370ec78580c86ed41c6 700883d91256bcdb2658259aa708637774f14dcc c12baa01b9fbd48085f350318266ba98a2d2eeca ef2e9ff01dfc11267352ea866dc7c46ff806beb4 a7dd241a8baf1958c0138f35d164461d35c1357e,enhancement@models@plugins,feature make GPS its own model gazebo_gps_plugin a sensor plugin and groundtruth its own model plugin,This PR adds the possibility of sending data of multiple GPS's by:  1. Make the GPS it's own model to be integrated in the aircraft models;  2. Make the `gazebo_gps_plugin` a sensor plugin instead of a model plugin;  3. Identify the sensor ID based on the GPS model naming.    Tested with the solo model  but soon to be extended to the other aircraft models as well.    This will also serve as a template to the other sensors (IMU's  mags  etc) so to add the ability of loading them as individual models and add a subscription per sensor  allowing multi-sensor stream to the SITL side. This PR will also follow an addition of an Iris model with dual GPS  so one can test GPS blending in PX4.    @bresch @RomanBapst @MaEtUgR FYI.
PX4/PX4-SITL_gazebo,525,2020-06-19T11:37:48Z,2020-06-19T18:54:00Z,True,2020-06-19T18:54:00Z,13f62beaa41db874868f364ceb826cc911742e43,2,1,fc0dd4c86026a9426b812aa997c96922273596fe,,Fix gazebo7 build failure,This fixes the build failure for gazebo7 that was caused by API differences between 7 and higher versions    Reference: https://travis-ci.org/github/PX4/sitl_gazebo/jobs/699176964#L425
PX4/PX4-SITL_gazebo,527,2020-06-19T18:02:19Z,2020-06-19T19:09:13Z,True,2020-06-19T19:09:13Z,0f5e081842b08903f9f752ab199c1d9a31eab145,6,1,266d73a99a1dc9807d1b8816db2fcb5e60863b77,,Fix multivehicle regressions for plane and standard_vtol model,xacro based multivehicle simulation has shown some regressions (e.g. no gps fix  liftdrag plugin warning messages as below)     ```  [Wrn] [gazebo_gps_plugin.cpp:76] [gazebo_gps_plugin]: standard_vtol_1::gps0 using gps topic "gps0"  [Wrn] [gazebo_gps_plugin.cpp:201] [gazebo_gps_plugin] Using default update rate of 5hz   [Err] [liftdrag_plugin.cpp:164] [gazebo_wind_plugin] Please specify a robotNamespace.  [Err] [liftdrag_plugin.cpp:164] [gazebo_wind_plugin] Please specify a robotNamespace.  ```    This PR addresses these problems and fixes the multivehicle simulation.    I believe the fact that this has been broken and not been known that it was shows that we need tests
PX4/PX4-SITL_gazebo,524,2020-06-19T09:35:53Z,2020-06-20T14:21:41Z,True,2020-06-20T14:21:41Z,f5348533ad0eca0a954bbacb2d3264c1bcbfd0d6,1,1,8eb9217f188329274d8d09ded68ccc8f8377915c,bug@models,Add airspeed plugin to tiltrotor,When airspeed plugin was being factored out in https://github.com/PX4/sitl_gazebo/pull/515 I forgot to add it also the tiltrotor.    I guess this resulted in @dagar fighting the issue in https://github.com/PX4/Firmware/pull/15145 https://github.com/PX4/Firmware/pull/15142    This adds the airspeed plugin to the tiltrotor vehicle properly.     
PX4/PX4-SITL_gazebo,528,2020-06-20T16:03:03Z,2020-06-20T21:27:29Z,True,2020-06-20T21:27:29Z,46fe612ce421a724bebdb71516efa25d391d2cfb,6,2,8c4a075c78cbf38f57fc7c6b31738bc4aed53c22 3cb21c0c95e06940a8aa5a2c82f37630d0fb59de,,range sensors lidar add simple signal quality model and propagate it to Mavlink,Adds a simple signal strength model and consequent signal quality metric to the Lidar plugin.    The quality value is normalised between 1 and 100 to fit the Mavlink definition for the DISTANCE_SENSOR message  while the value of 0 is considered to qualify the quality as unknown or invalid.    Follows a PR in upstream Firmware.
PX4/PX4-SITL_gazebo,532,2020-06-23T02:41:58Z,2020-06-23T09:16:47Z,True,2020-06-23T09:16:47Z,726c066c0741c38ca5f145dea474a31c2386fc6d,1,1,488b8f6db0e2c8bdf70572e732a3342c4632dcc7,,Remove the incorrect force generated by moment,This pull request removes the incorrect force term as discussed in #531.
PX4/PX4-SITL_gazebo,529,2020-06-20T22:13:42Z,2020-06-21T10:10:56Z,True,2020-06-21T10:10:56Z,309f7b0ace2d6d0afea59fe5edf3356b26d996c9,2,1,3f7ea4d2bb1b6622f70c4b94c6d57447feb1de03,bug@plugins,Fix plane catapult plugin,The plane catapult plugin wasn't working properly. It seems that it is related to uninitialized variables. 
PX4/PX4-SITL_gazebo,534,2020-06-24T06:05:49Z,2020-06-25T19:45:04Z,True,2020-06-25T19:45:04Z,5e8ddfba682d2eafe28ff2d495a9bf0800de3968,1,3,3e9e17a5f10725a65bbff79b859962a983931a2e 7f18e8724c82c8e58dbb7c95adaefd077950b140 34fe1312ce722229056ab9deb0c31380fdd13f91,,fixes for R1 SDF https github com PX4 sitl_gazebo issues 533,Fixes for R1 that also requires PR for Firmware: https://github.com/PX4/Firmware/pull/15209  to work fully.  Fixes issues brought up in https://github.com/PX4/sitl_gazebo/issues/533
PX4/PX4-SITL_gazebo,535,2020-06-25T20:26:47Z,2020-06-25T20:28:56Z,True,2020-06-25T20:28:56Z,1af7e29dbb1ecce7b0b191c9deb24ab1f13916ab,1,1,e9f5c1f5076d5d2634f8a91511efdf55fb935d76,,Do not validate r1_rover sdf as unable to validate,There were torsional friction added in https://github.com/PX4/sitl_gazebo/pull/534    However  <contact><friction><torsional> element was not defined in the sdf schema. Therefore ignoring in the validation
PX4/PX4-SITL_gazebo,467,2020-04-22T18:47:59Z,2020-07-01T16:18:20Z,True,2020-07-01T16:18:20Z,4ec5caad7f8d4fa98ed74a6acebd2b2fb0501724,9,1,afb649a389a95c34448a9761c3f57da561eac0c8,,Make wind plugin a world plugin,Previously  wind was a gazebo model plugin since wind was simulated by applying "force" on a link.  Since wind was a element inside the model  models could have different wind simulated even if they are in the same world.     However  this has changed since #462. Therefore  we can make the wind a property of the "world" and make different vehicles be affected to this no matter which vehicle is spawned in the world.    This PR enables the following  - Define wind as a property of the world  - Enable SITL simulation to switch wind situations without editing the model.sdf. Simply run:  ```  make px4_sitl gazebo_plane__windy  ```
PX4/PX4-SITL_gazebo,537,2020-06-26T11:43:30Z,2020-07-02T12:09:06Z,False,none,fb4053c5ffc1689ba6184ce005cadb57f674142b,2,1,450a3a94009ff66c0705d37bd3768834164e5b3b,,models add iris_gps_height,This adds a model based on default iris but using GPS height instead of baro.    The only change is really the one param. @Jaeyoung-Lim do you think this is the right approach?
PX4/PX4-SITL_gazebo,542,2020-07-09T11:11:52Z,2020-07-09T11:12:28Z,False,none,51f547608ca90cae853fe73f775f2de2dfb078b1,14,17,cc27e43c6483471d2175f2fcc16bbf45a3956813 e379180f5ad3c3a9ca0abfb82890c9c4eb1ac178 33b2570923a8dc01163714d6e81ce219b29bc0a9 4df78a6088b957eacd6df284bb4850ee617bb753 746003ec07ae705eee5186dc34c73cf3cd353b71 7166abd8eacdda2f4726a78a23a9c8360bb30f5d f6b3f0ad21d40c0de66e95039872812672ac2b51 a4cefea01cb0c9f310456e916cbe97445075feab bcbf88505991c320ab3c6af3bb9ec1205bfa1a5c f78d6b0f4575527c47d9301e74bc6bb44edcd836 f8a0af2eb0c549a9243e08bfd303db5485fe6cb0 5e7ce16d8e5bb9629a119bbed30b486d3770ae62 415cf73d55839a872b7a131e2fd9bb734b730660 4a4bdf8345788ae5050bd03f6a804a6a0c5ade08 784b4283a23fa7817b3f0d6e28da4680691e55d9 fa7d05d2c97f17403630b044898b8786ace3c91a cd53db6611fcd879f692c41307f0de70b3ce419b,,Merge dev into master,
PX4/PX4-SITL_gazebo,549,2020-07-18T14:33:11Z,2020-07-18T15:30:18Z,True,2020-07-18T15:30:18Z,07820ee645eec269a3c2629f45d2dcc3a405a0b6,1,1,e0993677b850ba28f99555f69b3d65c7489557ab,,Fix gimbal imu sensors intefering with each other,The gimbal imu sensors would interfere with each other if there were more than one vehicle with a gimbal.     This was because the `GetSensor` method was using a unscoped name  therefore was taking one of the gimbal imu sensors from any of the vehicles that exists in the world.     This PR solves this problem by getting the sensor pointer with a fully scoped name which allows the simulation to have multiple instances of vehicles with a gimbal    **Tests**  Tested in SITL gazebo on the typhoon_h480 and the gimbal was controlled through mavros.    ![ezgif com-video-to-gif (4)](https://user-images.githubusercontent.com/5248102/87854734-39888a80-c914-11ea-83fd-bbef1fc9b1ce.gif)    **Additional Context**  Fixes https://github.com/PX4/sitl_gazebo/issues/540
PX4/PX4-SITL_gazebo,545,2020-07-11T08:19:46Z,2020-07-18T16:26:45Z,True,2020-07-18T16:26:45Z,a3b5c5e227fe90392710e38929dd9fd41b6830ac,1,1,8c907682510e44b4d1e511190e7bcc226a2ee0e0,,Fix aerodynamic moment calculation,There was a additional moment that was calculated with a moment arm and force was being added to the link  while the moment was been already being handled on the gazebo side.    while removing the calculated moments removed unused variables such as moment Arm and torque calculated from it    This part of code was added in https://github.com/PX4/sitl_gazebo/pull/521    @lum-supakorn Sorry that this fell through the gaps in my review
PX4/PX4-SITL_gazebo,490,2020-05-07T21:57:05Z,2020-07-19T00:19:35Z,True,2020-07-19T00:19:35Z,ce1eca2bd0bedf9305d09b622454fa21962d50ba,14,17,7d48768091073dbc4d9d793724a88c20e969d594 ccaf16fae30d6269b3d4fcd5cc370758c70ad173 8b2a3c054c8143fd64b00c2e9d1c2502eee4d78c 4deba1bc91596ba3861da1beaae134d5c5a01ab3 eb3552f310c4b95150c0a5d95bc54d2a0939c727 48486657b95c701c8459c3bf63420ced213a19c0 96155a0952155b553db8beb934c32e0614fa45e8 f046038b14d1e8a2bd3860bc24ea3d8fc7bbb870 a01b3f56ef0243e9711d1fb72ca3a12165a9e381 982e62be8ce009745cd7434641ff37e3d20c478d f6e68a00e08127f8c1ebf563b8e0f9a6397fed0b 3ad6b7c51b95b412b0e56cdd3d1dcf626514c56d 667a1d7a5ed6502633a5f4735024ce488f211b31 acc3948935ab8ac6488470117d180a1ad834751b cfc5831fdb6f450e877a7e9893532f04d424d6c8 eb5a9e0c1161854f3d78622313cb33d1dd905338 66dc928e3c62622025c9e817d2b6ca32bcb5819a,enhancement@models,New vehicle type Airship,As mentioned in [https://github.com/PX4/Firmware/issues/14792](https://github.com/PX4/Firmware/issues/14792) and [https://discuss.px4.io/t/new-vehicle-type-airship/16514](https://discuss.px4.io/t/new-vehicle-type-airship/16514)  our team has developed a new vehicle type for the PX4 developer community  and we would like to submit a pull request for review.
PX4/PX4-SITL_gazebo,550,2020-07-18T16:03:50Z,2020-07-18T17:00:49Z,True,2020-07-18T17:00:48Z,df186d2b549b79341b2c9c145da066e2788bc4f8,2,2,72e4c45da0d5c45927bc3722f129de7014a42c6a 8657fefbd278a2d26964ea01f938586465364db8,,Fix build with CMake 3 18,Since CMake 3.18  [`find_program()` command _gained a new `REQUIRED` option that will stop processing with an error message if nothing is found_](https://cmake.org/cmake/help/v3.18/release/3.18.html#id5). This was causing the build to fail because the `px4` SITL binary was never found in the first place  since it's built in parallel with `sitl_gazebo`. The `REQUIRED` that was in place wasn't actually doing nothing  because that option didn't exist for versions <=3.17.    I also removed duplicate compiler flags set  which was already being done by `EnableC++XX.cmake`.
PX4/PX4-SITL_gazebo,553,2020-07-23T10:53:22Z,2020-07-24T00:05:58Z,True,2020-07-24T00:05:58Z,037ce1b3b88b1c25abc1f525fbbbec84589d090d,1,1,3a4b070bf0f58dd244cc3d1b54884ebb5b8bd5bc,,Oversight fix from 544,PR #544 modified `iris_base.xacro` and `standard_vtol_base.xacro` but not `plane_base.xacro`. This results in errors when running `sitl_gazebo/scripts/xacro.py`    ### Pre-PR Error  ```bash  $ python3 $PWD/sitl_gazebo/scripts/xacro.py $PWD/sitl_gazebo/models/rotors_description/urdf/plane_base.xacro \                  rotors_description_dir:=`pwd`/sitl_gazebo/models/rotors_description mavlink_udp_port:=14540                                                         Traceback (most recent call last):        File "/vagrant/Firmware/Tools/sitl_gazebo/scripts/xacro.py"  line 742  in <module>      main()                      File "/vagrant/Firmware/Tools/sitl_gazebo/scripts/xacro.py"  line 727  in main      eval_self_contained(doc)                                                                                  File "/vagrant/Firmware/Tools/sitl_gazebo/scripts/xacro.py"  line 654  in eval_self_contained      eval_all(doc.documentElement  macros  symbols)    File "/vagrant/Firmware/Tools/sitl_gazebo/scripts/xacro.py"  line 570  in eval_all           node.tagName)))                     __main__.XacroException: Parameters [baro_drift_pa_per_sec] were not set for macro xacro:barometer_plugin_macro  ```  
PX4/PX4-SITL_gazebo,544,2020-07-10T10:48:14Z,2020-07-15T07:02:45Z,True,2020-07-15T07:02:45Z,629e5f5c239d88421edab12b4a7e2e3c3ea7e8fc,5,2,93f72d9b5fda78f56fc4f78fb2d30798b67de2c0 7124c6a6ddb95649b3fcb835ffd60f5729225358,,Barometer drift,I wanted to run simulations with constantly increasing drift on the barometer  so I've added this to the barometer plugin.    There's a tiny refactoring of the plugin  just to make it a bit easier to modify.    The drift is added as a new sdf element  and added to the barometer xacro  with drift in Pascals per second as the parameter.    Default is of course no drift.
PX4/PX4-SITL_gazebo,552,2020-07-23T00:19:37Z,2020-08-04T06:58:19Z,True,2020-08-04T06:58:19Z,89755a156499b50ef17d0674af38e132759e1cc7,4,1,bd307d649a14e33b2536130fb5c3e6dc8b466e1e,,Fix wind topic names for vtols,**Motivation**  The wind topic names were not properly updated in vtol models after https://github.com/PX4/sitl_gazebo/pull/467 and the regression was caused by #490    Therefore resulting in a error shown in https://github.com/PX4/sitl_gazebo/issues/551      **Additional Context**  Fixes https://github.com/PX4/sitl_gazebo/issues/551  
PX4/PX4-SITL_gazebo,557,2020-08-04T09:04:25Z,2020-08-04T09:53:48Z,True,2020-08-04T09:53:48Z,2858552ed70c379ac240113373e5f50310d98144,1,1,d48e09b7404293fcf09009f48977b3b58269acd2,,Fix airspeed sensor wind subscription,While wind topic names have been fixed in https://github.com/PX4/sitl_gazebo/pull/552  airspeed sensor was still subscribing to the wrong topic name.     Fixes https://github.com/PX4/sitl_gazebo/issues/556
PX4/PX4-SITL_gazebo,559,2020-08-04T14:21:29Z,2020-08-05T09:11:51Z,True,2020-08-05T09:11:51Z,0756bcf8fea6b00510e2e82702b51d919a2e0b87,1,1,0736145b1edc1c2c9e58f453af671c8e6427f0c5,,standard_vtol make hover motors stronger,I have no idea what I'm changing here but it brings the hover throttle from 0.85 to about 0.6 which is much more controllable but still realistic for that sort of airframe.
PX4/PX4-SITL_gazebo,561,2020-08-05T08:51:01Z,2020-08-05T09:34:28Z,True,2020-08-05T09:34:28Z,5a19094896e0571e027e4a24c72637721bcf0c50,3,1,f6d9a095eb83d7b0b974ff9b0050602d27922cf4,,Lower wind topic publish rates to 2Hz to increase realtime factor,Realtime factor on the standard_vtol has been falling down to ~0.3 when run together with the wind plugin.    This is due to the fact that wind is being published at the full update of the simulation and being used in multiple components (e.g. `liftdrag_plugin`  `airspeed_plugin`  `gazebo_mavlink_interface`  `gazebo_motor_model`)    This PR constrains the wind topic publish rate by default to 2Hz  increasing the realtime factor even when wind is being published to ~0.97    
PX4/PX4-SITL_gazebo,558,2020-08-04T12:36:18Z,2020-08-07T12:49:04Z,True,2020-08-07T12:49:04Z,0da08f0333cd14c08a9545c6ba7ddfc18706398f,1,3,a80e787c5a674f5f1d3fa86d60bd6a2b5dc91a7e 19fcb3d046fe6ab92f22ba3c7eb042dab22a951f 3d0d197fde1b1f8cdb03a49a90ac073934dd0519,,Add iris_rtps model,To run multiple irises based on RTPS  I add the iris_rtps model.    please check the related PR of firmware (https://github.com/PX4/Firmware/pull/15463)     
PX4/PX4-SITL_gazebo,547,2020-07-12T09:44:54Z,2020-07-19T00:19:03Z,False,none,d468eadd4fac397098d70573a5197fa812903935,1,1,9030118b1e7764e51477ac573319c08907462859,,Add firmware build test,There were cases where sitl_gazebo was moving ahead with some mavlink definitions and required fixes on the firmware side to get the submoudles updated.    This ensures that the changes are compatible with the latest firmware that is released as a container  so that we can be sure that the changes are compatible with the firmware    **Additional Context**  The github action was taken from https://github.com/PX4/ecl/blob/master/.github/workflows/firmware_build_test.yml
PX4/PX4-SITL_gazebo,565,2020-08-10T10:26:49Z,2020-08-14T08:29:35Z,True,2020-08-14T08:29:35Z,50f0a63541b219d2c31e4506112734050279ad2e,5,1,442d27a6190ab28c99683d56fa631fe9989a625a,,Separate out HIL mavlink interface from gazebo_mavlink_interface,**Describe problem solved by this pull request**  The `gazebo_mavlink_interface` acts a. as a bridge interface to package sensor data into mavlink HIL interface b. Manages the connection with the fmu(HITL) or SITL instance. Having the two functionalities mixed make the plugin confusing and hard to add unit tests.    **Describe your solution**  This PR separates out the mavlink HIL interface to its own class from the `gazebo_mavlink_interface`  - Handle mavlink HIL messages and stores the information to enable sending HIL mavlink messages when triggered  - Open/Close sockets /serial to communicate with the fmu or SITL    **Test data / coverage**  Tested models flying in SITL      
PX4/PX4-SITL_gazebo,568,2020-08-15T21:29:06Z,2020-08-16T06:38:23Z,True,2020-08-16T06:38:23Z,7c406d04b3885785d8936bf531818ca23acb21be,5,1,c20d2c690752967b4183d20734b1a6b14f99eb51,,Revert Separate out HIL mavlink interface from gazebo_mavlink_interface ,Reverts PX4/sitl_gazebo#565    It seems like this change was causing SITL failures in firmware https://github.com/PX4/Firmware/pull/15556    Reverting until properly fixed
PX4/PX4-SITL_gazebo,567,2020-08-15T09:38:35Z,2020-08-15T09:40:56Z,True,2020-08-15T09:40:56Z,325f05c576e046334d5819aa3f17025a5d3d7f5d,1,1,b405af7dfd7d9d059c43c14eb2fd8271f96e464a,bug,Send groundtruth messages at full rate,**Description of Issue**  The `gazebo_mavlink_interface` is sending ground truth data  a. Even if there are no ground truth messages coming from the groundtruth plugin  b. At the same rate the actuator controls are being sent  (Fixes #566 )    This seems to be a bug coming from #517  where the `groundtruth_plugin` was stripped out of `gazebo_mavlink_interface` but was assumed to always receive the data.    **Solution**  This commit enables sending ground truth messages   - Only when a groundtruth plugin is running  - Send the mavlink messages at the rate the message is received from the groundtruth plugin    **Testing**  Tested in SITL    
PX4/PX4-SITL_gazebo,562,2020-08-05T15:41:49Z,2020-08-05T17:19:28Z,True,2020-08-05T17:19:28Z,6e5e882b7a0cb7eb7f9bb1593ff2488dac63b8a4,1,1,27b752923c75ea4b6ff6923a9affaf1a96da6d5f,bug,liftdrag_plugin fixed spanwise velocity component calculation,As per bug report https://github.com/PX4/sitl_gazebo/issues/560
PX4/PX4-SITL_gazebo,530,2020-06-21T11:13:46Z,2020-08-16T16:20:12Z,False,none,6db4cc73866b6fd1851506b579a32f4e1c51690e,1,2,9aeaeff980d45617b9b7d73be23fb62f472047de 0b38bf45def1f15305b39980e8e4455e6dd934dd,,Travis CI add Gazebo 11 build and test stage,Let's see if the moc generation is still an issue.
PX4/PX4-SITL_gazebo,569,2020-08-16T07:29:52Z,2020-08-16T17:10:05Z,True,2020-08-16T17:10:05Z,eb998f6372cda98a592031399c497b633f0f417e,1,1,030291ba2d9e24550888add9d480779a6b96dfb0,bug,Fix wind transformation for airspeed sensor,Wind transformations were wrong when implementing the airspeed plugin in https://github.com/PX4/sitl_gazebo/pull/515/files    **Tests**  SITL Tests with plane model  - Before PR: https://review.px4.io/plot_app?log=daac676f-51a2-4adf-a384-4e60afdeba14  - After PR: https://review.px4.io/plot_app?log=c5242547-4303-4d26-9664-d93bc7035422    **Additional Context**  - Fixes issue discussed in https://github.com/PX4/sitl_gazebo/pull/557
PX4/PX4-SITL_gazebo,570,2020-08-16T07:54:46Z,2020-08-16T16:10:54Z,True,2020-08-16T16:10:54Z,45b215dd7a006fb6dc1331087264e76109725f68,4,1,be9b7a3a865140de011465bd16f19b9a6ccb6dea,CI,Move testing to github actions from travis,This is an attempt to move build / unit testing to github actions.    Testing includes the following tests  - cmake build tests for gazebo7   9  11  - PX4/Firmware build test with the latest firmware or branch with the same name (Only done in focal with gazebo11  since Firmware CI runs on focal)  - Validation of SDF files    This also adds gazebo11 / focal into the CI :smile:    macOS is still run from travis  I will do a separate PR for macOS  since it is failing on travis too    Edit: Added macOS in https://github.com/PX4/sitl_gazebo/pull/571  
PX4/PX4-SITL_gazebo,573,2020-08-16T17:24:57Z,2020-08-16T18:24:27Z,True,2020-08-16T18:24:27Z,b2f1a350d24c5ad8e6d8a92f0b7a4adfa4d5a646,1,1,ba5ba581fb98c31e5a456aafc8345737263d41a7,,Update build status badge to github actions,Update build status badge to github actions    The build status is set to the build test  since github action only allows to generate status badges for each workflow
PX4/PX4-SITL_gazebo,572,2020-08-16T17:10:34Z,2020-08-16T18:44:06Z,True,2020-08-16T18:44:05Z,51fc776cec9a638d55164c99fab7285494e79796,1,1,c7f1b1e40cfb93f27a7956944ed6176242140b52,,Add MAVSDK Tests to firmware build tests,This PR adds mavsdk testing to the firmware build tests  so that the models can be flown and checked if there are any regressions.  
PX4/PX4-SITL_gazebo,577,2020-08-18T07:49:00Z,2020-08-18T07:52:36Z,False,none,21cc9140a097d3bcc9358e73075dbe2390baa39b,2,1,42cef5b709244ea18c40ef57c692e32ba1a735e3,, Placeholder Run on separate sitl configs with firmware,Running github actions to see if it fails on current master
PX4/PX4-SITL_gazebo,578,2020-08-18T08:26:27Z,2020-08-18T08:48:28Z,False,none,28b516b9343cf538d2818eb72be3cd5db69dd49b,2,3,54f18b122ff88e5c65f3a245d875df650317e9ea e452fdd579e70e944b6ac43049e2d0b4a1da7743 920e8b178ee4735ab11eca495fb29c7812b56b0d,, Placeholder Run on separate sitl configs with firmware 577,
PX4/PX4-SITL_gazebo,580,2020-08-19T15:25:46Z,2020-08-19T19:04:40Z,False,none,e288f4928e6d26147a4a2e37fd1b2bdf1245618b,3,8,c391d3d4bab7e485995520529ad8a1ccea39bafb 8b2e7a8daf28c77cf7220eed8b4d82ce970251fd cfe1e42474fa7a326943622553d98496c33226c1 e452836fe71130d3e159311c62b4cc899d164592 9cf8356a641ac1ba93a6f3a855a67fb8470f14a0 f4e9d544db4a54414c372fa61c0e246dd43c7044 02ec82b49cf909c1ae7fd42c70dd47bcb7d2c1fc 7060c0c2d1091e9cb2c91d4196ffd39e8d567201,, DONOTMERGE Debug mavsdk tests failing disable fail early,
PX4/PX4-SITL_gazebo,576,2020-08-18T05:38:22Z,2020-08-20T07:55:14Z,True,2020-08-20T07:55:14Z,12ad1438205b8671b9864d6d7a5949ed812975c9,3,7,c391d3d4bab7e485995520529ad8a1ccea39bafb 8b2e7a8daf28c77cf7220eed8b4d82ce970251fd cfe1e42474fa7a326943622553d98496c33226c1 e452836fe71130d3e159311c62b4cc899d164592 9cf8356a641ac1ba93a6f3a855a67fb8470f14a0 f4e9d544db4a54414c372fa61c0e246dd43c7044 02ec82b49cf909c1ae7fd42c70dd47bcb7d2c1fc,CI,Run on separate sitl configs with firmware,This enables running SITL tests on a different config than the firmware.    I also noticed that the `make px4_sitl_default gazebo` needs to be run before changing the submodule branch in order to be on the correct branch. Therefore  this PR includes a workaround of building twice  (@bkueng Any idea why this is happening?)    Models running tests  - `iris`  - `standard_vtol`    Models with intermittent failures  - `tailsitter`    Models that have been tested  but that do not pass the test (therefore not added)  - `px4vision`  `solo`  `typhoon_h480`  `tiltrotor`
PX4/PX4-SITL_gazebo,574,2020-08-17T13:43:52Z,2020-08-20T08:18:42Z,True,2020-08-20T08:18:42Z,2dd3cd21aee6edc3df175abd6302946104f3022e,1,2,d4d6d903a90b566a9297ba00e4fbd3dd8f8f3df9 b4631bf22902437d4d4344a987435d219de28311,,Fix SITL tests failing on master,SITL tests have been failing on master since it couldn't fetch master with the current scripts    This PR fixes this issue by just ignoring the errors and checking out the branch
PX4/PX4-SITL_gazebo,582,2020-08-20T09:47:47Z,2020-08-20T15:22:32Z,True,2020-08-20T15:22:31Z,56c4e4bc5d784bc0604af020abb9863e8d5554ef,5,1,341313727a7eb9cb6bb104a3d9fc17db972b623f,,Separate out HIL mavlink interface,**Describe problem solved by this pull request**  This is the second attempt on https://github.com/PX4/sitl_gazebo/pull/565 with a few bug fixes that triggered the failures before    The `gazebo_mavlink_interface` acts a. as a bridge interface to package sensor data into mavlink HIL interface b. Manages the connection with the fmu(HITL) or SITL instance. Having the two functionalities mixed make the plugin confusing and hard to add unit tests.    **Describe your solution**  This PR separates out the mavlink HIL interface to its own class from the `gazebo_mavlink_interface`  - Handle mavlink HIL messages and stores the information to enable sending HIL mavlink messages when triggered  - Open/Close sockets /serial to communicate with the fmu or SITL    **Test data / coverage**  Tested models flying in SITL      **Additional Context**  - This is the second attempt on https://github.com/PX4/sitl_gazebo/pull/565
PX4/PX4-SITL_gazebo,584,2020-08-21T18:44:30Z,2020-08-21T19:01:06Z,True,2020-08-21T19:01:06Z,78bba3f25e7e240bf70878bd007dfd77b33440c1,1,1,728cf18f2d58779efa307cd3322f3302c1e8ef63,,Increase motor constants,**Describe problem solved by this pull request**  Previously SITL tests were failing because the hover thrust was too low  which was decreased in PX4/sitl_gazebo#575    Now  SITL tests have been failing since we decreased the motor constants on the iris since the hover thrust was too high    @bresch FYI
PX4/PX4-SITL_gazebo,588,2020-08-24T12:54:19Z,2020-09-09T14:22:57Z,True,2020-09-09T14:22:57Z,a20864095c900811e64ce1fc44cab620b2d086e9,1,2,2706fb750a40c7add08250270e4cb14274c8d1fc bada65325a60afda832b365fb29644e2ba3797e3,,Fixed the rudder deflection issue of plane sdf,#587 
PX4/PX4-SITL_gazebo,595,2020-09-12T15:25:18Z,2020-09-12T18:08:46Z,True,2020-09-12T18:08:46Z,29999c68861feb3de698d24ba7b7188c97e21483,1,1,a3ad0006a946b92781c07d2956ed6777cc7d0f0a,,Update boat gps sensor,Previous update on moving gps to a sensor plugin in https://github.com/PX4/sitl_gazebo/pull/517 caused the boat plugin to not load properly    This PR fixes this problem by updating the gps plugin to load the gps model
PX4/PX4-SITL_gazebo,407,2020-02-03T18:26:05Z,2020-09-12T18:24:16Z,False,none,e0f92dca4011fe74b403082b9a504d1867aa7717,1,2,41217fdbb25fd5ef59c0d481d39c6f1b1384f3f6 0b010cc1ecbaf91d9577a46fa6fa92945ea63e6d,,Added sand island model and example world,Added mcmillan_airfield    - model   - example world    ![sand_island](https://user-images.githubusercontent.com/1933907/73679540-e6e74900-46ba-11ea-94dd-425ccf257b18.jpg)    co-author: @tfoote  
PX4/PX4-SITL_gazebo,596,2020-09-12T19:02:02Z,2020-09-12T19:47:41Z,True,2020-09-12T19:47:41Z,01587e6d734789d2530b707c7f2c3f5fb8927c1c,7,3,93b1df3b79d606759a3f746ca3a4a4baef30c8d1 9d8c382dceb4568e48fed87aba81e3853fbe7430 27e70bc93cc8148ff6ef7c0309892babe250f112,,Add better initializers,The previous state had uninitialized variables and not a proper default style of using in-place initializers that are a lot easier to track.
PX4/PX4-SITL_gazebo,590,2020-08-25T20:30:44Z,2020-09-12T21:11:20Z,True,2020-09-12T21:11:20Z,9d2b19784cb34bf8f397ab2e2f368f682f2d5d5a,12,2,b6531d03b3f8ecd8b3f43a6ec8fe572ce1be80fc c2c152a23c857a67d092c1625f5a7be35876bb39,,Use jinja templates for standard_vtol and plane model,**Describe the solution that this PR solves**  Recently xacro based multivehicle scripts have been broken. This is because the sdf files have no association with the xacro macros  and was left broken while the model files were being updated.    ![ezgif com-video-to-gif (4)](https://user-images.githubusercontent.com/5248102/91224554-913fc000-e722-11ea-8f97-0579839cdfef.gif)    Part of the reason why xacro macros were not being generated/associated with the sdf files was because xacros have limited support on what they can do  so it didn't make sense to generate sdf files based on xacro macros.    **Solution**  We switch to jinja templates. I think while jinja templates can be much more powerful  I will like to keep the templates being generated as close as possible to the actual sdf files  but just swapping out relevant information such as mavlink_tcp_port for multivehicle simulations.    
PX4/PX4-SITL_gazebo,505,2020-05-27T09:34:43Z,2020-09-13T20:01:11Z,False,none,9bd1bcb819079be778c6e0d13679737fbee8d0fc,1,5,7fb8cc85f43deb431eac0e8e7d9252ac528384bb c186d22e7b27f67f121ffc28102ea6660952311e fd9884f3afa893394d0fefde6fb4ae1d87351af2 a7643e7ab5104e7b1742ab2de05bc0e74f24438f f347fa1474e264ffd8b68b516b87388368e0c519,enhancement@CI,Travis CI add MacOS Catalina build stage,This certainly doesn't solve the OSRF brew problems we are seeing  but at least we can now test things in Catalina.
PX4/PX4-SITL_gazebo,600,2020-09-16T14:15:21Z,2020-09-16T14:47:41Z,True,2020-09-16T14:47:41Z,4a46b88220040d438de58b034469eadbdcc4827c,14,1,1abf65b4f09b843f2422bfcc07bc1a3cff07d763,,fix jinja sdf dependencies,The output file wasn't being renamed with `-gen` in the name  so these are being processed every single incremental build.    ``` Console  ninja explain: output /home/dagar/git/Firmware/Tools/sitl_gazebo/models/3DR_gps_mag/3DR_gps_mag-gen.sdf doesn't exist  ninja explain: /home/dagar/git/Firmware/Tools/sitl_gazebo/models/3DR_gps_mag/3DR_gps_mag-gen.sdf is dirty  ninja explain: output /home/dagar/git/Firmware/Tools/sitl_gazebo/models/c920/c920-gen.sdf doesn't exist  ninja explain: /home/dagar/git/Firmware/Tools/sitl_gazebo/models/c920/c920-gen.sdf is dirty  ninja explain: output /home/dagar/git/Firmware/Tools/sitl_gazebo/models/cloudship/cloudship-gen.sdf doesn't exist  ninja explain: /home/dagar/git/Firmware/Tools/sitl_gazebo/models/cloudship/cloudship-gen.sdf is dirty  ninja explain: output /home/dagar/git/Firmware/Tools/sitl_gazebo/models/matrice_100/matrice_100-gen.sdf doesn't exist  ninja explain: /home/dagar/git/Firmware/Tools/sitl_gazebo/models/matrice_100/matrice_100-gen.sdf is dirty  ninja explain: output /home/dagar/git/Firmware/Tools/sitl_gazebo/models/mb1240-xl-ez4/mb1240-xl-ez4-gen.sdf doesn't exist  ninja explain: /home/dagar/git/Firmware/Tools/sitl_gazebo/models/mb1240-xl-ez4/mb1240-xl-ez4-gen.sdf is dirty  ninja explain: output /home/dagar/git/Firmware/Tools/sitl_gazebo/models/pixhawk/pixhawk-gen.sdf doesn't exist  ninja explain: /home/dagar/git/Firmware/Tools/sitl_gazebo/models/pixhawk/pixhawk-gen.sdf is dirty  ninja explain: output /home/dagar/git/Firmware/Tools/sitl_gazebo/models/plane/plane-gen.sdf doesn't exist  ninja explain: /home/dagar/git/Firmware/Tools/sitl_gazebo/models/plane/plane-gen.sdf is dirty  ninja explain: output /home/dagar/git/Firmware/Tools/sitl_gazebo/models/px4flow/px4flow-gen.sdf doesn't exist  ninja explain: /home/dagar/git/Firmware/Tools/sitl_gazebo/models/px4flow/px4flow-gen.sdf is dirty  ninja explain: output /home/dagar/git/Firmware/Tools/sitl_gazebo/models/r200/r200-gen.sdf doesn't exist  ninja explain: /home/dagar/git/Firmware/Tools/sitl_gazebo/models/r200/r200-gen.sdf is dirty  ninja explain: output /home/dagar/git/Firmware/Tools/sitl_gazebo/models/sf10a/sf10a-gen.sdf doesn't exist  ninja explain: /home/dagar/git/Firmware/Tools/sitl_gazebo/models/sf10a/sf10a-gen.sdf is dirty  ninja explain: output /home/dagar/git/Firmware/Tools/sitl_gazebo/models/standard_vtol/standard_vtol-gen.sdf doesn't exist  ninja explain: /home/dagar/git/Firmware/Tools/sitl_gazebo/models/standard_vtol/standard_vtol-gen.sdf is dirty  ninja explain: CMakeFiles/models_gen is dirty  ninja explain: /home/dagar/git/Firmware/Tools/sitl_gazebo/models/3DR_gps_mag/3DR_gps_mag-gen.sdf is dirty  ninja explain: /home/dagar/git/Firmware/Tools/sitl_gazebo/models/c920/c920-gen.sdf is dirty  ninja explain: /home/dagar/git/Firmware/Tools/sitl_gazebo/models/cloudship/cloudship-gen.sdf is dirty  ninja explain: /home/dagar/git/Firmware/Tools/sitl_gazebo/models/matrice_100/matrice_100-gen.sdf is dirty  ninja explain: /home/dagar/git/Firmware/Tools/sitl_gazebo/models/mb1240-xl-ez4/mb1240-xl-ez4-gen.sdf is dirty  ninja explain: /home/dagar/git/Firmware/Tools/sitl_gazebo/models/pixhawk/pixhawk-gen.sdf is dirty  ninja explain: /home/dagar/git/Firmware/Tools/sitl_gazebo/models/plane/plane-gen.sdf is dirty  ninja explain: /home/dagar/git/Firmware/Tools/sitl_gazebo/models/px4flow/px4flow-gen.sdf is dirty  ninja explain: /home/dagar/git/Firmware/Tools/sitl_gazebo/models/r200/r200-gen.sdf is dirty  ninja explain: /home/dagar/git/Firmware/Tools/sitl_gazebo/models/sf10a/sf10a-gen.sdf is dirty  ninja explain: /home/dagar/git/Firmware/Tools/sitl_gazebo/models/standard_vtol/standard_vtol-gen.sdf is dirty  ninja explain: models_gen is dirty  [1/11] Generating /home/dagar/git/Firmware/Tools/sitl_gazebo/models/3DR_gps_mag/3DR_gps_mag-gen.sdf  /home/dagar/git/Firmware/Tools/sitl_gazebo/models/3DR_gps_mag/3DR_gps_mag.sdf.jinja -> /home/dagar/git/Firmware/Tools/sitl_gazebo/models/3DR_gps_mag/3DR_gps_mag.sdf  [2/11] Generating /home/dagar/git/Firmware/Tools/sitl_gazebo/models/c920/c920-gen.sdf  /home/dagar/git/Firmware/Tools/sitl_gazebo/models/c920/c920.sdf.jinja -> /home/dagar/git/Firmware/Tools/sitl_gazebo/models/c920/c920.sdf  [3/11] Generating /home/dagar/git/Firmware/Tools/sitl_gazebo/models/pixhawk/pixhawk-gen.sdf  /home/dagar/git/Firmware/Tools/sitl_gazebo/models/pixhawk/pixhawk.sdf.jinja -> /home/dagar/git/Firmware/Tools/sitl_gazebo/models/pixhawk/pixhawk.sdf  [4/11] Generating /home/dagar/git/Firmware/Tools/sitl_gazebo/models/plane/plane-gen.sdf  /home/dagar/git/Firmware/Tools/sitl_gazebo/models/plane/plane.sdf.jinja -> /home/dagar/git/Firmware/Tools/sitl_gazebo/models/plane/plane.sdf  [5/11] Generating /home/dagar/git/Firmware/Tools/sitl_gazebo/models/matrice_100/matrice_100-gen.sdf  /home/dagar/git/Firmware/Tools/sitl_gazebo/models/matrice_100/matrice_100.sdf.jinja -> /home/dagar/git/Firmware/Tools/sitl_gazebo/models/matrice_100/matrice_100.sdf  [6/11] Generating /home/dagar/git/Firmware/Tools/sitl_gazebo/models/r200/r200-gen.sdf  /home/dagar/git/Firmware/Tools/sitl_gazebo/models/r200/r200.sdf.jinja -> /home/dagar/git/Firmware/Tools/sitl_gazebo/models/r200/r200.sdf  [7/11] Generating /home/dagar/git/Firmware/Tools/sitl_gazebo/models/sf10a/sf10a-gen.sdf  /home/dagar/git/Firmware/Tools/sitl_gazebo/models/sf10a/sf10a.sdf.jinja -> /home/dagar/git/Firmware/Tools/sitl_gazebo/models/sf10a/sf10a.sdf  [8/11] Generating /home/dagar/git/Firmware/Tools/sitl_gazebo/models/standard_vtol/standard_vtol-gen.sdf  /home/dagar/git/Firmware/Tools/sitl_gazebo/models/standard_vtol/standard_vtol.sdf.jinja -> /home/dagar/git/Firmware/Tools/sitl_gazebo/models/standard_vtol/standard_vtol.sdf  [9/11] Generating /home/dagar/git/Firmware/Tools/sitl_gazebo/models/mb1240-xl-ez4/mb1240-xl-ez4-gen.sdf  /home/dagar/git/Firmware/Tools/sitl_gazebo/models/mb1240-xl-ez4/mb1240-xl-ez4.sdf.jinja -> /home/dagar/git/Firmware/Tools/sitl_gazebo/models/mb1240-xl-ez4/mb1240-xl-ez4.sdf  [10/11] Generating /home/dagar/git/Firmware/Tools/sitl_gazebo/models/cloudship/cloudship-gen.sdf  /home/dagar/git/Firmware/Tools/sitl_gazebo/models/cloudship/cloudship.sdf.jinja -> /home/dagar/git/Firmware/Tools/sitl_gazebo/models/cloudship/cloudship.sdf  [11/11] Generating /home/dagar/git/Firmware/Tools/sitl_gazebo/models/px4flow/px4flow-gen.sdf  /home/dagar/git/Firmware/Tools/sitl_gazebo/models/px4flow/px4flow.sdf.jinja -> /home/dagar/git/Firmware/Tools/sitl_gazebo/models/px4flow/px4flow.sdf  ```
PX4/PX4-SITL_gazebo,601,2020-09-16T14:17:05Z,2020-09-16T15:00:18Z,True,2020-09-16T15:00:18Z,6a4f14ee293b1508ab7cc3b4c513102cf7810560,1,1,dabcf2023d34e4075a861e2b21a1ebfdb7a0a590,,geotagged images check gps tag commend return,
PX4/PX4-SITL_gazebo,599,2020-09-16T09:31:15Z,2020-09-16T15:05:16Z,False,none,d918b88a631011baf51145e081b1a1cabfaa43f0,1,1,bc6caa26f7acfec4235adfb6b532ccffa412d041,,gitignore ignore all temporary sdf files,
PX4/PX4-SITL_gazebo,598,2020-09-15T15:55:45Z,2020-09-15T20:45:54Z,True,2020-09-15T20:45:54Z,15306c1cb1ba3d0723ab29c3e59444abec53e85b,1,1,061b3b30322c0b56dace01d09b00e6bb70851d4f,,Automatically add jinja generated sdf files to gitignore,Since jinja generated sdf file names changed from *-gen.sdf to .sdf it appear as new files.   I propose to automatically add jinja generated sdf files to gitignore  that way gitignore will update automatically in the future whenever more sdf.jinja will be added.
PX4/PX4-SITL_gazebo,602,2020-09-17T08:51:17Z,2020-09-17T08:54:30Z,True,2020-09-17T08:54:30Z,c747e1f4930ed181b3afbc6687719e934048befa,1,1,0a3ead69aae2f35b2beed0c1887309e5f361feed,,revert auto addition of jinja generated sdf files to gitignore,Reverted previous commit proposed [here](https://github.com/PX4/sitl_gazebo/pull/598) due to later merged commit proposed [here](https://github.com/PX4/sitl_gazebo/pull/600)
PX4/PX4-SITL_gazebo,597,2020-09-15T12:52:49Z,2020-09-16T15:04:54Z,True,2020-09-16T15:04:54Z,64a26889abb47fa3cd6d6193e3401b9f45dc07bb,2,1,c7f80537d768e70d80c3965318d9e31c9cbbe109,,moved received_actuator into the class,As part of cleanups I am doing. I noticed that it can be more clear move received_actuator into the class.
PX4/PX4-SITL_gazebo,563,2020-08-06T09:35:05Z,2020-09-18T13:02:47Z,False,none,bf7921d4f8edb0110bc2d676136defa8160b77fa,5,1,0e8226ed7d1ae5fe6c47d51cc9ffecb3d9c8891e,,Added Skywalker X8 to sitl_gazebo,The `standard_vtol` is the Skywalker X8 with some additional components. This pull is a purely fixed-wing version of that  with some adjusted numbers of mass and inertia to compensate for the lack of 4 motors and the associated frame.     Tested extensively in SITL during development with MAVSDK.    Sources   - [Estimation of the lateral aerodynamic coefficients for skywalker x8 flying wing from real flight-test data](https://www.researchgate.net/publication/325043884_Estimation_of_the_lateral_aerodynamic_coefficients_for_skywalker_x8_flying_wing_from_real_flight-test_data)    - [Aerodynamic  modeling  of  the  Skywalker  X8  Fixed-Wing  Unmanned Aerial  Vehicle](http://folk.ntnu.no/richahan/Publications/2018_Gryte%20et%20al_ICUAS.pdf)
PX4/PX4-SITL_gazebo,605,2020-09-22T00:52:17Z,2020-09-22T00:53:50Z,False,none,none,1,1,0e1de8dcd1b6c23c8c9335cd1a5adc91534a77fa,,Handle when gps tag command is unsuccessful,**Problem Description**  There was a warning message when building PX4 SITL as the following  ```  [49/112] Building CXX object CMakeFile...c/gazebo_geotagged_images_plugin.cpp.o  /home/jaeyoung/src/Firmware/Tools/sitl_gazebo/src/gazebo_geotagged_images_plugin.cpp: In member function 'void gazebo::GeotaggedImagesPlugin::OnNewFrame(const unsigned char*)':  /home/jaeyoung/src/Firmware/Tools/sitl_gazebo/src/gazebo_geotagged_images_plugin.cpp:230:11: warning: ignoring return value of 'int system(const char*)'  declared with attribute warn_unused_result [-Wunused-result]       system(gps_tag_command);       ~~~~~~^~~~~~~~~~~~~~~~~  ```    **Solution**  This reports a `gzwarn` when the `gps_tag_command` is unsuccessful.
PX4/PX4-SITL_gazebo,607,2020-09-25T00:36:37Z,2020-09-25T11:40:05Z,True,2020-09-25T11:40:05Z,1ff5e5fa11fe41650544ceed85704b293b270da5,1,1,77637e50d53b6529bfe08cc3d4f6bac2c71a8b20,,airship dynamics plugin silence apple chang std abs suggestion,Silence this suggestion from clang on MacOS.    <img width="1792" alt="Screen Shot 2020-09-24 at 8 36 06 PM" src="https://user-images.githubusercontent.com/84712/94213725-9e78d780-fea5-11ea-8917-042ef6b944fe.png">  
PX4/PX4-SITL_gazebo,606,2020-09-24T18:16:39Z,2020-09-25T21:49:15Z,False,none,f4d0efc4d14a79c8a26a646db876b2a8aa40ae40,10,10,b31f2c9e567c3c6c0877fa2dbc80514dab5a116c 602c03797d7af93cf8b241cebff267cec6023ebd e81dd4b44f76a11b9f20abb19ca8c00bebaead8b f405ad7a0954c1414ceb04cc8d78c66b05a6a1f8 3ac26d1e80bd0156f064e7e9c926de49e7e8fcf3 45b779dad6c5076efc3de7c7884ef42298f955fa 5c2ee5e29fd304be2d4359db4e1d004a2d14acbb 4d13fe729616aff698e82128e0255ce2cca2330f 87197f35beb8ac4575d6942dc384eef6edefb792 fa51758637359646c4e2a41f483374ec055b47f7,,Model and world files for simple HITL testing,This simplifies running HITL models by not requiring another command to build for HITL relevant model changes.
PX4/PX4-SITL_gazebo,610,2020-09-25T22:09:52Z,2020-09-26T07:41:01Z,True,2020-09-26T07:41:01Z,b02899fb38c25f1406c21207024817d102beee5f,9,1,e6d7dcae06d4b66940f0b9d95cc01045b1872f76,,Simple implementation for running HITL in Gazebo for iris and standard vtol,This is for simplified running of HITL in Gazebo for iris and standard_vtol through dedicated models and worlds  allowing for an easier pipeline for automated build testing.     This also fixes the schema download scripts whitespace as well as updates the exclusion list in the schema check script.     Furthermore  this fixes the "non-unique child" warning for the standard_vtol model by modifying the repeat plugin member names to match current plugin-naming methods in standard_vtol.sdf.jinja.    To run HITL models for iris or standard_vtol all you have to do is make sure your FMU of choice is properly configured for HITL and simply run:  `gazebo path/to/sitl_gazebo/worlds/hitl_[iris or standard_vtol].world (with optional --verbose to debug)`    This has been tested in Gazebo 11 from a clean build using:    DONT_RUN=1 make px4_sitl_default gazebo    And tested with a Holybro pixhawk 4 running fmuv5_default compiled from Firmware master.    
PX4/PX4-SITL_gazebo,609,2020-09-25T20:49:37Z,2020-09-29T09:17:03Z,True,2020-09-29T09:17:03Z,4e0eb1b4efab0646bfaa21028b21a72283bf2bc3,8,4,032df71ebd8a0be93c4c74bd680853332d66f758 c7be6fe37db55de29bd0ce837bf7e0fd6916d6c2 107565eefedb23e1951b861482d0130958d1c675 8aa5294354c2f360c6593ddf9b9d103f72238037,,Move iris to use jinja templates,**Problem Description**  `iris` was the only model being generated with xacro macros  and xacro macros are slowly becoming out of date by not supporting more recent sdf syntaxes.    **Solution**  This PR moves the `iris` model generation from xacro macros to jinja templates by doing the following.  - Deprecate xacro genration commands from cmake and rely on jinja templates  - Moves iris mesh files from `rotors_description` to `iris`    We keep the xacro macros for now  since the multivehicle scripts still rely on them. `rotors_description` will be deprecated once the multivehicle scripts are based on jinja templating.   
PX4/PX4-SITL_gazebo,611,2020-09-26T07:57:40Z,2020-09-29T09:35:01Z,False,none,bab75eb5b835c96c6d30d11fd6a386137be34d56,1,1,8b2f0157048a433bb3343a3c72aafb38dc6ecb8d,,Update mavsdk version for SITL tests,**Problem Description**  Wasn't able to build mavsdk  tests due to the incorrect mavsdk version with the following error  ```  CMake Error at CMakeLists.txt:13 (add_executable):    Target "mavsdk_tests" links to target "MAVSDK::mavsdk_failure" but the    target was not found.  Perhaps a find_package() call is missing for an    IMPORTED target  or an ALIAS target is missing?      CMake Error at CMakeLists.txt:13 (add_executable):    Target "mavsdk_tests" links to target "MAVSDK::mavsdk_manual_control" but    the target was not found.  Perhaps a find_package() call is missing for an    IMPORTED target  or an ALIAS target is missing?  ```    **Solution**  Update mavsdk version to `30.1`
PX4/PX4-SITL_gazebo,612,2020-09-27T19:09:42Z,2020-09-29T11:23:06Z,True,2020-09-29T11:23:06Z,31445dee74acc0a09cbcc0415145ce9f88c5a100,1,1,3befcfdfc77c5297325950daba8c58d934988273,,Support forwarding jinja template outputs for multivehicles,**Problem Description**  The jinja template output only always create the file in the same directory where the template exists. Therefore this cannot be used for multi-vehicle scenarios where the resulting files need to be directed to different files.    **Solution**  This commit enables forwarding jinja template outputs to a specific file path.    **Additional Context**  - Commit messages are a bit messy since it is based on https://github.com/PX4/sitl_gazebo/pull/609
PX4/PX4-SITL_gazebo,613,2020-09-29T13:13:23Z,2020-09-29T13:38:58Z,True,2020-09-29T13:38:57Z,f9bc7e34a754b6f204a8b3825c2b132587574cba,1,1,ff14dc0c3e60d63d5f5b9f65d3dd82487643ada4,,Remove macOS travis CI tests,Recently travis macOS testing has **NEVER** passed the CI build tests  therefore running it doesn't make sense.    MacOS build test has been migrated to github actions in https://github.com/PX4/sitl_gazebo/pull/571
PX4/PX4-SITL_gazebo,616,2020-09-30T10:24:08Z,2020-09-30T13:02:33Z,True,2020-09-30T13:02:33Z,92fc624e1c7061ef1be8fd4337d18d074a07047d,7,1,de70269c8f03d2985e7cf8ee2770c5d13cb0b6d7,,removed none used vars from gazebo_mavlink_interface,seems like old leftovers.    @TSC21 @Jaeyoung-Lim can you confirm my PR.  looking on the code its seems like old code that hasn't been removed  
PX4/PX4-SITL_gazebo,614,2020-09-30T05:47:24Z,2020-09-30T12:58:29Z,True,2020-09-30T12:58:28Z,ebdef4436b4d6e1165bccb1c17a61999988726f4,9,2,35fdcebf6b5595cf1c94a33d75e68c18dee50fb0 9daba47d70ef59b8ce03fde3375b6791fff1b8fc,,fixed some typos on error messages,Found during review of the code some typos  seems like copy-pastes
PX4/PX4-SITL_gazebo,594,2020-09-12T11:25:57Z,2020-09-12T19:00:39Z,False,none,7245854c56daea1515c008aa3d6c2be949dcb5d0,6,2,dad8db686fcfe6f6a52069c3f924333c7b0e3d1b 6cabd9e3752abd4c0d70fbfa687e29408facbb42,,Initializers and vars names clenaups,I have noticed that there are many non-initialized vars on gazebo classes. and that made me to "create" some bugs on my repo.  this PR is a small step to make that less common to be done.  on the first commit  there should be no functional change  only moving the default values from the constructor to the class definition.  the second commit  might have some effect.  
PX4/PX4-SITL_gazebo,615,2020-09-30T10:07:44Z,2020-09-30T21:09:12Z,True,2020-09-30T21:09:12Z,e4ee479ebfc9f5b19e69f1ba886401c0d19d9a5e,3,1,3afd87f108abab8d396bc24f0f540a2d6a76d695,,removed motor forces moments from uuv_plugin,The generic motor_model plugin does exactly the same as the motor code in the uuv_plugin. So i removed the motor forces/moments from the uuv_plugin and modified the uuv_hippocampus.sdf to use the generic motor plugin to avoid redundant code.    The uuv_plugin still computes hydrodynamic forces.  @DanielDuecker 
PX4/PX4-SITL_gazebo,618,2020-10-01T11:28:40Z,2020-10-01T12:15:14Z,True,2020-10-01T12:15:14Z,c1a8de8de935185d988fde82c6cbc69b1b53fa63,1,1,817225818d8da5a2ddf78b0adc92d85ff0a2254e,,Adjust iris obs avoid distance sensor location,Fix #604.    I've moved the horizontal (forward  left  right  back) distance sensors down from -5 cm to -10 cm. This makes them mostly work as they should  but they still sometimes give incorrect (very short) readings. See log below  and gazebo collision box image:    ![collision](https://user-images.githubusercontent.com/6639836/94803614-d4f4ac00-03e9-11eb-8d32-8bad0cf793bc.png)  ![Screenshot at 2020-10-01 13-27-50](https://user-images.githubusercontent.com/6639836/94803665-eccc3000-03e9-11eb-8d44-df215847b291.png)  
PX4/PX4-SITL_gazebo,585,2020-08-24T08:23:41Z,2020-10-05T07:33:42Z,True,2020-10-05T07:33:42Z,8b39799fd873ed39dc6b9529c6f21aa2f2547452,1,2,777ecb3f8be1c8f9e63bb2384061f2badb60956e 0c2725bf5eaa502b38261af057161d5d6c82d5d4,,Add derived iris models to SITL testing,This PR adds the following models to SITL testing  - `iris_dual_gps`    Related discussion from #504     Edit: Removed `iris_opt_flow_mockup` from testing since some mission tests were failing
PX4/PX4-SITL_gazebo,619,2020-10-02T15:30:00Z,2020-10-05T07:34:05Z,True,2020-10-05T07:34:04Z,e92ba8804d251980f8b957f3c35b0b64c0426417,1,1,ee3a004ea0df0f9bad99685d76a18a1d129926d4,,Switch to python 3 for ROS noetic and greater ,I was running into an error when building on noetic and this fixed it. Similar patch for px4.
PX4/PX4-SITL_gazebo,504,2020-05-26T11:51:06Z,2020-10-05T09:23:39Z,False,none,04e07d1ea40d8e11f56a37f875c98c7dca409f31,6,3,1ce395e85c5aea1843fa6d2c240a57d550319e19 c1ae332618ef7443249110b52605e8e127105107 2e43fdb03f3ff49148d65efdea9a5adb0e9de86f,,models fix iris propellors with Gazebo 11,Without this change the optical flow models have the propellors in a completely wrong location and don't fly.    This fixes the flip seen in https://github.com/PX4/Firmware/issues/14300#issuecomment-633578551.
PX4/PX4-SITL_gazebo,589,2020-08-24T15:14:52Z,2020-10-05T09:37:41Z,False,none,e261fcdf2a7c8fe20a746a6361b149457cb1f6bd,2,4,8c26159546f2ecbe0e4ad8560821e729551b37ec 8a86791577972017e2d5a0796f1571d05af279b9 83a32289b17f1f6be67aa0071437eb71c4607342 d9e2527cc91d3a2e32b01b8b7c671f6a2dfd0075,,Fix tiltrotor model and add to SITL testing,This PR fixes the tiltrotor model that was failing SITL testing before  and adds the tests to mavsdk testing
PX4/PX4-SITL_gazebo,621,2020-10-05T14:52:47Z,2020-10-05T19:06:14Z,True,2020-10-05T19:06:13Z,8c2c034f777bb934e7cdb3ca2f91fe6cd38e4f9f,15,2,eb85c7d0973f343ec331774eaed4ac4b6bf04fd5 1d952877a24a6e2744dd2ae7119e881c790b53bc,,Remove gen sdf suffixes from generated sdf files,**Problem Description**  This is a second attempt of https://github.com/PX4/sitl_gazebo/pull/590 to use jinja templates for sdf file generation.    We tried using the `-gen.sdf` suffix for the generated file names but this seems to be an overall bad decision that was propagating through out all the test codes  and is not usable for ROS based tests.     To distinguish generated files vs normal sdf files  the generated files are automatically added to the giignore using https://github.com/PX4/sitl_gazebo/pull/598
PX4/PX4-SITL_gazebo,622,2020-10-05T15:59:36Z,2020-10-05T20:13:36Z,True,2020-10-05T20:13:36Z,a1b69445d01cd28677aecee1d2f4911fcd4ff060,7,1,09a38f3d3eab1c5c2250409ccc55f3c0d77f0063,,Remove vehicle_is_tailsitter tag from models,**Problem Description**  `vehicle_is_tailsitter` is not being used in the gazebo_mavlink_interface since https://github.com/PX4/sitl_gazebo/pull/515.    **Solution**  The tag was removed from all models that contain the tag
PX4/PX4-SITL_gazebo,624,2020-10-06T09:09:23Z,2020-10-06T12:02:04Z,True,2020-10-06T12:02:04Z,9f74919d4db31ca561f28c4c3b8402856c26f01d,1,1,12cb56c7b7fc881ad84a40087f198e8e262822b7,,Lower sdf version to 1 6 for iris model,**Problem Description**  Using sdf version 1.7 was causing issues when running on gazebo9. The reason that sdf 1.7 was used was because my local system was using gazebo11 thus  xacro files were generating sdf 1.7 models.    However  the syntax "relative_to" is not supported in sdf versions lower than 1.7 therefore was causing problems.    **Solution**  Lower the sdf version to 1.6 and adapt the syntax accordingly.     **Additional Context**  - This change is necessary to fix the mavros mission / offboard tests since it uses gazebo9 for simulation (https://github.com/PX4/Firmware/pull/15884)  - @julianoes This would also fix the issues you were having on Arch linux regarding sdf versions
PX4/PX4-SITL_gazebo,626,2020-10-06T22:16:10Z,2020-10-07T09:03:02Z,True,2020-10-07T09:03:02Z,30e3d6a67f3d4a7d141a47504c8fdc15b08883f9,2,1,1eaf76cb59857b21bc1e68bc1956a365b4be8d77,,Only add accel gyro turn on bias on startup,**Problem Description**  In the `gazebo_imu_plugin`  the accel/gyro turn-on bias was being added repeatedly to the bias when adding noise.      **Solution**  This commit fixes the `gazebo_imu_plugin` so that it to only adds the turn-on bias to the accel/gyro bias at startup    **Additional Context**  - This PR fixes https://github.com/PX4/sitl_gazebo/issues/592
PX4/PX4-SITL_gazebo,623,2020-10-05T16:08:37Z,2020-10-07T12:22:13Z,True,2020-10-07T12:22:13Z,5e03a402a3f75e203cf632be3d6dc31726dcbe23,16,1,b86ae5f4e36c1fd027b21f4b8649f0ace9ec9356,,Deprecate xacro macros,**Problem Description**  xacro macros have been replaced by jinja templates in PX4/Firmware#15831  therefore no longer used in PX4.    **Solution**  This commit removes rotors_description to deprecate xacro templates completely    **Additional Context**  - TODO: the ROS toolchain still needs to be fixed in order to use jinja templates
PX4/PX4-SITL_gazebo,627,2020-10-07T09:11:10Z,2020-10-07T14:01:28Z,True,2020-10-07T14:01:27Z,97b90df2f9890b4b051006b0860db606fa33da06,3,4,e1163b67c3865ac2abaa2b0a9dfc0f426f4c2c4c 955cad05748cc5ef9f0f841278034ce979456817 137fdd3a62be0d5bc7c3285a06162a76a359f31b 65659f3966d34475a71ab8ddb604f59e47bc6606,,Add buoyancy in uuv_plugin,Instead of having the `<gravity>` tag set to 0 in the corresponding .sdf file  the gravity is now compensated by buoyancy forces.  The buoyancy can be set as seen in the following code block.  ```  <link name="base_link">    <buoyancy>      <origin>0 0 0.01</origin>      <compensation>1.1</compensation>      <height_scale_limit>0.05</height_scale_limit>    </buoyancy>  </link>  ```  `origin` describes the center of buoyancy  `compensation` describes the buoyancy force relative to the gravitational force of the corresponding link and the `height_scale_limit` tag describes the distance in negative and positive direction measured from the origin at which a virtual volume generates buoyancy. So in this example where it's value is 0.05  the buoyancy is scaled by 0 if the origin is 0.05m above the water surface. Between 0.05m above and below the surface it is scaled linearly between 0 and 1 and if the center of buoyancy is below 0.05m the force is scaled by 1. This corresponds to a buoyancy generating volume with constant cross sectional area.    Maybe @DanielDuecker also want to have a look on it?
PX4/PX4-SITL_gazebo,630,2020-10-07T16:07:53Z,2020-10-07T17:22:54Z,True,2020-10-07T17:22:54Z,e4e32117df1d8aba00b0685ebd0cc5ffc066a970,2,1,8a138d1a6871fee71cc76b6e227d3e11bb94998e,,cmake support ccache explicitly,
PX4/PX4-SITL_gazebo,628,2020-10-07T12:05:37Z,2020-10-09T08:27:17Z,True,2020-10-09T08:27:17Z,c3b15b7c9bf217c52f1e12fda0f861f6af5f31a9,10,1,0d61038cb1115e727574d4c43f77e584eccc1157,,Add techpod fixedwing model,**Problem Description**  This PR adds the techpod fixedwing model to this repo. Techpod is a model that is widely used in the research community  that have accurately modeled parameters.     This will be useful for testing vehicles with higher lift drag ratios compared to the already available cessna    ![image](https://user-images.githubusercontent.com/5248102/95328490-e9cbb680-08a5-11eb-9ab2-ad5e47c34d12.png)    **Additional Context**  - This model is originally distributed under https://github.com/ethz-asl/rotors_simulator which has been adapted to use the sdf format.
PX4/PX4-SITL_gazebo,631,2020-10-08T20:53:05Z,2020-10-09T09:44:32Z,True,2020-10-09T09:44:32Z,b4d2d584515e4244f7720b341fcfca229021cf7d,2,2,246505e9c490454b9a14db6e6d41a37a4332b82a 5337d47dbd295b5278c9228fda540dcbe5bdcdeb,bug,mavlink interface poll until actuator received,This is a lockstep fix. If there's a poll error (POLLERR) in `MavlinkInterface::pollForMAVLinkMessages()` then another new `HIL_SENSOR` message is sent before PX4 sends `HIL_ACTUATOR_CONTROLS`.    https://github.com/PX4/sitl_gazebo/blob/e4e32117df1d8aba00b0685ebd0cc5ffc066a970/src/mavlink_interface.cpp#L219-L221
PX4/PX4-SITL_gazebo,625,2020-10-06T11:26:17Z,2020-10-09T18:41:18Z,True,2020-10-09T18:41:18Z,b4cebfcae35a795c2088c62bc521059dce22d601,5,1,e5db6fc083cf9fa4c5c40b801a17f51c23440d0e,,Support generating HITL models using jinja templates,**Problem description**  HITL configurations need to be defined in the sdf file. However  the device path to the fmu needs to be defined dynamically at runtime as well as supporting multiple instances at the same time.     **Solution**  Since we support generating models from jinja templates  we enable making HITL related parameters configurable using the jinja templates.    **Additional Context**  - Since this sets the template values to the default value  there will be no difference in all models as is  - This will enable us to execute HITL models with multiple devices if needed
PX4/PX4-SITL_gazebo,633,2020-10-10T16:03:43Z,2020-10-10T16:32:51Z,True,2020-10-10T16:32:51Z,6b9c8f15c24b9ca365f3b13978fe792aa31a2fa3,1,1,ce72abcdb1d9f7baee845911a0cb9bfce863f42f,,mavlink interface round double sim time when converting to microseconds,In PX4/Firmware SITL with lockstep I'm occasionally seeing 3999 us or 4001 us between updates.     ``` Console  INFO  [simulator] HIL_SENSOR: imu time_usec: 66203999  time_usec: 65691999  diff: 3999  step: 1.00  INFO  [simulator] HIL_SENSOR: imu time_usec: 66208000  time_usec: 65696000  diff: 4001  step: 1.00  INFO  [simulator] HIL_SENSOR: imu time_usec: 66215999  time_usec: 65703999  diff: 3999  step: 1.00  INFO  [simulator] HIL_SENSOR: imu time_usec: 66220000  time_usec: 65708000  diff: 4001  step: 1.00  INFO  [simulator] HIL_SENSOR: imu time_usec: 66227999  time_usec: 65715999  diff: 3999  step: 1.00  INFO  [simulator] HIL_SENSOR: imu time_usec: 66232000  time_usec: 65720000  diff: 4001  step: 1.00  INFO  [simulator] HIL_SENSOR: imu time_usec: 66239999  time_usec: 65727999  diff: 3999  step: 1.00  INFO  [simulator] HIL_SENSOR: imu time_usec: 66244000  time_usec: 65732000  diff: 4001  step: 1.00  INFO  [simulator] HIL_SENSOR: imu time_usec: 66251999  time_usec: 65739999  diff: 3999  step: 1.00  INFO  [simulator] HIL_SENSOR: imu time_usec: 66256000  time_usec: 65744000  diff: 4001  step: 1.00  ```    ``` Console  vehicle_imu: accel update interval: 83202 events  3999.95us avg  min 3999us max 4001us 0.189us rms  vehicle_imu: gyro update interval: 83202 events  3999.95us avg  min 3999us max 4001us 0.189us rms  ```
PX4/PX4-SITL_gazebo,634,2020-10-10T20:05:15Z,2020-10-11T06:37:55Z,True,2020-10-11T06:37:55Z,b943edaddee2b5e84e7bb489c43ebb13dd70495d,1,1,be4fdc68819911629d1c8bdc2eca4155f6abbc71,,Add stdout option to jinja to support param based spawn ,This is towards adding support for jinja based multi vehicle ros launch. I have the px4 side close.
PX4/PX4-SITL_gazebo,617,2020-09-30T11:26:36Z,2020-09-30T12:07:51Z,True,2020-09-30T12:07:51Z,81376c41d20bac7f80b462368d0dd57c2601b6ea,1,1,f59578784e98b4526d1e2378500928a06b3fcab1,,Fix getting reference for SITL tests,This is a simple fix where there was a typo in the firmware SITL tests
PX4/PX4-SITL_gazebo,575,2020-08-18T05:22:16Z,2020-08-18T11:56:36Z,True,2020-08-18T11:56:36Z,076acd6b6bdd53543b69ba68bc83c3ce75d9d426,1,1,54b89a33d18a0999714b37167dd01ad99a4ea0c2,,Decrease motor constants of iris,Decreased motor constants since the hover throttle was too low (20%).     Discussion from: https://github.com/PX4/Firmware/pull/15569
PX4/PX4-SITL_gazebo,636,2020-10-16T03:58:21Z,2020-10-16T11:04:16Z,True,2020-10-16T11:04:16Z,4f03afc7def0b958e7567a35093bacf93dcc824f,1,1,81b2606c5abf0405b577432079ecf9e2b020f20e,,Update typhoon_h480 sdf issue 608 ,The camera was unable to pitch -90 deg to face downwards. Solved increasing lower limit of the `cgo3_camera_joint`.
PX4/PX4-SITL_gazebo,635,2020-10-14T14:42:26Z,2020-10-19T11:33:39Z,True,2020-10-19T11:33:39Z,b15784d6bcf7c205e0581ba8fafad6e3820e8e9e,2,4,ffeb9ec69d1d933e892a9fa13abccde4e93028a5 deefbee181f71c9bcfac7445b3edf05d002d07a3 0b554fab23425ffc5f89213446612d6b51fb87a5 e3703f7c84d265335ed374ae8d137ba7df20c082,,gazebo_gps_plugin fix and enhancement,- fixed loading of 'topic' parameter from SDF  - renamed class member variables to the consistent coding convention (Google C++ style guide)  - fixed crashing of the plugin due to reading from shared variables
PX4/PX4-SITL_gazebo,637,2020-10-20T17:47:33Z,2020-10-21T14:13:49Z,True,2020-10-21T14:13:49Z,00d6f2faf98f689bd35ef251b89e2228c5ad2e4e,4,6,7753c406638974d74a410302d6b1a88ebeec3101 cb055d3ec36f9d30ee240fb00fb2623d6151a021 a7b46b4d876972a4c79c640e5e84ab5946cf023a 7a02a40f289083e5b39b5701e573f0207990a30a 29ce08bcc7311f7aaf00634792c553bf320233ee 2c701a4f87efc546aa906599b73fa225a3518ce2,,Adding Model of BlueROV2 heavy configuration ,This pull request refers to the pull request [#16004](https://github.com/PX4/Firmware/pull/16004) in the PX4 Firmware repository.    This PR adds the gazebo model of the BlueROV2 in heavy configuration.
PX4/PX4-SITL_gazebo,629,2020-10-07T14:38:01Z,2020-10-22T08:34:29Z,True,2020-10-22T08:34:29Z,9f82ad455e2468774f8436008027a2ffaf839c2d,2,1,440672a53185f44efce4fe6206f8199d35cda717,,Move rover models to jinja templates,**Problem Description**  This moves the following rover models to jinja templates.  - `r1_rover` (Differential Rover)  - `rover` (Ackerman Steering Rover)    Since the TCP ports can be passed on with jinja template arguments  this enables multivehicle support for Rovers
PX4/PX4-SITL_gazebo,632,2020-10-09T08:33:45Z,2020-10-22T10:13:24Z,True,2020-10-22T10:13:24Z,9f832e596a9aaee724d2fce9859e473624e3f87e,1,4,8bf33a20622e9a1089b47647867f2696b4548754 c11fc1b4adc35ef7e950ec66c1d4e1be7ac09fe6 d430d0e94b1ab686c0e204faa75d26410aefb050 3333a6bb2e971fdd0c37a836cda1fc55c977e659,,Fix tiltrotor model,**Problem Description**  This is a second attempt of https://github.com/PX4/sitl_gazebo/pull/589    This PR fixes the tiltrotor model that was failing SITL testing before  and adds the tests to mavsdk testing      
PX4/PX4-SITL_gazebo,640,2020-10-24T13:48:30Z,2020-10-24T14:26:19Z,True,2020-10-24T14:26:19Z,2451437c19ed9fcdf8a79990313e768c98aa15b6,1,1,e76d59524477a9dc775771a8fa3acf6ebab13564,,fix 638 geotagging plugin not working subscribed to wrong topic,The geotagging plugin was subscribing to the wrong topic  and the callback was never getting called. This fixes #638.
PX4/PX4-SITL_gazebo,641,2020-10-27T16:26:14Z,2020-10-28T09:19:02Z,True,2020-10-28T09:19:02Z,eafc98b3eb311802200062f31698c2914c5ec22a,1,1,9d0a7e14d658d75157c59c8b47fea2853fee0901,,Move boat model to jinja templates,**Problem Description**  This commit moves the boat model to jinja templates in order to support multivehicle simulation for boats    **Test**  Tested in SITL Gazebo  ```  make px4_sitl gazebo_boat  ```    **Additional Context**  This fixes the issue which was brought up in https://discuss.px4.io/t/tcp-connection-failure-issue-with-multi-sitl-with-one-uav-and-one-usv/19267/2
PX4/PX4-SITL_gazebo,644,2020-10-29T17:48:20Z,2020-10-29T18:39:38Z,True,2020-10-29T18:39:38Z,06e801fe8b5267e561f00d8847a6343cb2386ab6,1,1,d8967476e3a497d491b598f8e43c4d2a0e673e03,,Fix Add missing generated models to git ignore,These were missing to be ignored.
PX4/PX4-SITL_gazebo,646,2020-10-30T13:53:55Z,2020-11-01T11:12:39Z,True,2020-11-01T11:12:38Z,75a8b031f69f8994661e2f1b2ee4d9905353117a,1,1,566f0eddd2680503212003552165009805c5a2e9,,mavlink interface len is ssize_t, - fixes #645
PX4/PX4-SITL_gazebo,650,2020-11-06T08:46:57Z,2020-11-06T09:16:38Z,True,2020-11-06T09:16:37Z,ee7661eeab1952bb4d2a94e2cb8afd0159a6e1f1,1,1,52cd0bad4d012d1560b8f5d2da20cf6e6fd78f28,,cmake don t link to protobuf,The protobuf library is already a linking dependency of gazebo  so of the GAZEBO_LIBRARIES. Therefore  we don't need to add it in yet again.    This also fixes the linking error for -lprotobuf on macOS  at least for me.    @LorenzMeier can you cross-test?
PX4/PX4-SITL_gazebo,649,2020-11-04T15:29:01Z,2020-11-12T10:30:07Z,True,2020-11-12T10:30:07Z,6f6f4209d8c921453984ebdcadd183dbec0e6184,28,1,8168c3818eaa12af71f2b15e12eb14e371b79ea0,,Replace water level to ocean model,**Problem Description**  Previously the water simply modeled as a blue plane. This visually looked unpleasant.    **Solution**  This PR visualizes the ocean waves and seabeds  so that it is more visually realistic for boat/UUV models. This is done by replacing the previous `water_level` with a `ocean` model that is moved over from https://github.com/uuvsimulator/uuv_simulator    @lennartalff FYI    **Testing**  ![ezgif com-gif-maker](https://user-images.githubusercontent.com/5248102/98130474-935c9280-1eba-11eb-88cd-dbff8d334a30.gif)  ![ezgif com-gif-maker (1)](https://user-images.githubusercontent.com/5248102/98130566-aff8ca80-1eba-11eb-96cf-0fd32d8ff76e.gif)    ![image (7)](https://user-images.githubusercontent.com/5248102/98130657-cb63d580-1eba-11eb-85f3-9355af2112c2.png)    **Additional Context**  - The ocean model is moved over from https://github.com/uuvsimulator/uuv_simulator
PX4/PX4-SITL_gazebo,652,2020-11-12T04:50:38Z,2020-11-12T10:42:41Z,True,2020-11-12T10:42:40Z,27e06e2a4906cc0a028d8e688f243dfafa7920a4,2,2,865e13ae1bc420e7d46084a8b1bbb35b279f550a ceaacf1c3d2bca69d3a8e727a3f5db2f86c64790,,Add catkin build test,**Problem Description**  Some users using Ros end up building this package as part of the `catkin_ws`. However  this was not being tested as part of the CI    **Solution**  This adds a build test in github actions to make sure that the package will be built in the catkin_ws    The following tags were removed since the package names changed from `python-*` to `python3-*` for noetic and this cannot be handled dynamically in the `package.xml`   ```   <build_depend>python-rospkg</build_depend>    <build_depend>python-jinja2</build_depend>  ```    @bperseghetti FYI
PX4/PX4-SITL_gazebo,653,2020-11-13T20:03:47Z,2020-11-14T02:29:52Z,True,2020-11-14T02:29:52Z,0a4d0708e839388668575d61623903c297a73a34,1,1,f3f7d3ff943a1f8a8d33d67a53ef2739be18250a,,clean build warning due to wrong string size,clean up warning that was introduced lately due to bad size of string:  for example:  https://github.com/PX4/PX4-Autopilot/pull/16180/checks?check_run_id=1394234842#step:12:213  
PX4/PX4-SITL_gazebo,654,2020-11-16T15:26:18Z,2020-11-16T15:35:42Z,True,2020-11-16T15:35:42Z,7fd9e624ee0cac00d0a9d7a60bb14aac189545e8,1,1,6350f69990d3e4269c1d113dd0074257f8a15b0e,,update gitignore,
PX4/PX4-SITL_gazebo,655,2020-11-16T18:31:07Z,2020-11-16T19:56:23Z,True,2020-11-16T19:56:23Z,cded4e1d0c477c02d5efff1fda6151392f0d8756,1,1,b29b9aef3e38c678836c4da2404721d318df6d81,enhancement,Move typhoon_480 to jinja template for multi sim,This commit changes the typhoon_h480 model to use jinja  templating so multi sim can work.
PX4/PX4-SITL_gazebo,319,2019-05-14T19:56:24Z,2020-11-16T20:46:19Z,False,none,38afb623ff0e8d1e85fa2d6c05363541ac10159e,1,1,4aabf1ca2b840a3458742051ecd3e057bba515fb,,Improve linking of libraries,Modernize the CMake project to reduce the number of libraries that are linked to the targets.  
PX4/PX4-SITL_gazebo,380,2019-12-16T17:06:53Z,2020-11-16T20:48:20Z,False,none,8c934ccd2e34c6eabb364b630927c1ff3af7e54b,4,3,c6b11a9bb4bd1b5367bb2fdf8e615a4d9c967088 b0c868add9ac498930e1d28d0264711154294135 78edfa7d045917c4cb0dba0d5970ee9effeadb75,,Adding reset model plugin for gazebo sim,Signed-off-by: Omar Shrit <shrit@lri.fr>
PX4/PX4-SITL_gazebo,571,2020-08-16T13:52:56Z,2020-11-16T21:59:48Z,True,2020-11-16T21:59:48Z,fd0fe3f35237d0c3e014082bb6462f4013e306bc,1,2,f05b16087d632d75b634c973ac21e1ea7eef2fd7 1838c0947666c880ac6b802c7338e600a7a401fc,CI,Add macOS build tests to github actions,This PR adds macOS build tests to github actions. macOS CI has been running usually more than 40 minutes on travis. Lets see if github actions is any faster    This is a dig on gettting https://github.com/PX4/sitl_gazebo/pull/505 running on github actions  also because github actions do not support macOS mojave    Therefore I have left travis so that it can still work with macOS Mojave    **Additional Context**  - Depends on https://github.com/PX4/sitl_gazebo/pull/570  
PX4/PX4-SITL_gazebo,657,2020-11-18T18:39:16Z,2020-11-19T08:36:29Z,True,2020-11-19T08:36:29Z,cd8ba25c81f32d6fe088482e37f8a38892209ef4,3,1,1a37c8c012b8ffe5245e9472780d1e664f019e4f,,Update mavlink,**Problem Description**  This PR updates the mavlink in order to solve https://github.com/PX4/PX4-Autopilot/pull/16081    Since the mavlink c library has been removed from the container(https://github.com/PX4/PX4-containers/pull/287)  it is added in the build test github ci
PX4/PX4-SITL_gazebo,658,2020-11-19T16:08:57Z,2020-11-19T17:40:23Z,True,2020-11-19T17:40:23Z,a6698f5e7b4faa68b1ea297f821b15020aa4545e,1,1,d5fb1439e2987bcbd6c99c84987052724ac013d2,,update gitignore,
PX4/PX4-SITL_gazebo,663,2020-12-03T15:33:08Z,2020-12-03T16:44:30Z,True,2020-12-03T16:44:29Z,e01ba8f78c185fab0b0ceb1e6407b5e1cc7c07d4,1,1,5b4aad2d75e76e9731f92829a967bc6c5d813d40,CI,Add macos build tests for Big Sur,**Problem Description**  This PR adds a matrix build test for the new macos-11.0 (Bigsur)    **Additional Context**  - Related: https://github.com/PX4/PX4-Autopilot/issues/16284
PX4/PX4-SITL_gazebo,665,2020-12-08T18:06:34Z,2020-12-08T18:54:48Z,True,2020-12-08T18:54:48Z,19981d61cfe656d2985fef5285b4a4d14f3be199,1,1,7eb7c0ad8bf43b6e7941a4ff82a4437ecc37b635,,Fix plugin misspelling,Just a quick fix on a misspelling.  Optical flow shall be called with lowercase F
PX4/PX4-SITL_gazebo,672,2020-12-13T06:13:45Z,2020-12-13T08:44:29Z,True,2020-12-13T08:44:29Z,e5d0d65f9e99c9c69528bc9771f951e027abba0d,2,1,b5624f41e0a9eedb60b11b4b950d24b04ba05c04,,Update container versions for tests,**Problem Description**  Recently there has been catkin build tests failing in this repository. This updates the base container versions for running tests    Since we have a new `mavlink_gbp_release` the builds should start passing: https://github.com/mavlink/mavlink-gbp-release/releases/tag/upstream%2F2020.12.12
PX4/PX4-SITL_gazebo,670,2020-12-12T18:49:06Z,2020-12-13T06:15:56Z,True,2020-12-13T06:15:56Z,bccb4878cdacc63d32b462008f415c69719dfbf9,2,1,53c7878728c5c6c30624239b1b6a0bd411cdf6af,,Rename serial link related function to include serial ,I noticed that reviewing the code  it wasn't clear that some functions that are relevant to serial port only  are.
PX4/PX4-SITL_gazebo,364,2019-10-31T13:30:48Z,2019-11-26T18:41:43Z,False,none,a2d05b5b7b6eb711802748b463ca362d6765cfe0,1,3,6eb324848556b533353b48845eb49ef0d40fd6de f39788c27137a2881f55c8bc7785e1221d70e080 9e81a99c745bfef176c19f5c716857213293334f,,Set wind_pluggin to zero for Gazebo Plane model,As documented here https://github.com/PX4/sitl_gazebo/issues/287 the Gazebo wind_pluggin doesn't work properly for the Gazebo Plane model.  This PR sets the wind_pluggin values to zero for the Plane model so that it will fly correctly in simulation.    In the long term  we should figure out exactly why the wind_pluggin does not work properly with gazebo plane model.  I suspect it might have something to do with improper or incomplete modeling of the airplane aerodynamics as it relates to the wind_pluggin  but I don't have the coding skills to really figure this out for sure.     Questions:  1) if this PR is viewed as too much a hack  feel free to reject it  or suggest improvements.  2) maybe there are other vehicle models that are also affected?  Should we fix it for them too?
PX4/PX4-SITL_gazebo,669,2020-12-12T18:40:43Z,2020-12-13T12:47:00Z,False,none,c3cafb35ef07edcdc580a2eca7857b39e1c30c0f,4,1,ebd968b3d47dc561219609be67163956de53add1,,gazebo_mavlink_interface plugin handle all the data,let gazebo_mavlink_interface to handle data between the PX4 and Gazebo  and mavlink_interface should only handle interface.  this reduce the need to create interface functions such: GetActuatorControls() and GetArmedState()    and that also make much easier to add messages  other then the one that current used (MAVLINK_MSG_ID_HIL_ACTUATOR_CONTROLS)
PX4/PX4-SITL_gazebo,674,2020-12-17T04:34:01Z,2020-12-17T11:09:23Z,True,2020-12-17T11:09:23Z,0e2d63a221c0e20b139cb0029841b7dcc667d27b,1,1,9dd3e09551da7f3a6f888aad69445aa0c85e3e11,,Fix wind transmormations for motor model,**Problem Description**  Previously  the motor model plugin was wrongly taking the intertial velocity when compensating thrust for the axial velocity.     As you can see in the following logs  before the PR higher throttle inputs are required when flying in a tailwind  and less throttle is required for flying in a headwind with the same airspeed setpoint. This is because the motor model is wrongly assuming the axial velocity flow is higher when the groundspeed is higher.     Before PR: https://review.px4.io/plot_app?log=73d235fe-254d-4d7c-9e1c-a66175cd1f62  After PR: https://review.px4.io/plot_app?log=46b416e8-4103-46d0-b072-63784dba2d11    This PR fixes the plugin to use the wind relative velocity.    **Additional Context**  - Fixes https://github.com/PX4/PX4-SITL_gazebo/issues/583  - Fixes https://github.com/PX4/PX4-SITL_gazebo/issues/520
PX4/PX4-SITL_gazebo,675,2020-12-17T12:57:36Z,2020-12-17T14:33:56Z,True,2020-12-17T14:33:56Z,563f0876a52d5c0fba1b7cd1aa420c613ec7025b,1,1,e6c7793062440555a6506ecb8a8296aef11ba812,,Fix tiltrotor model,**Problem Description**  This commit fixes the tiltrotor model to fly better  since the test has been resulting in failures.     The changes include the following  - realtime factor ~0.3 has been increased to 1.0  - control authority of control surfaces has been increased  - wind topic linking fixed  - contact model simplified    @sfuhrer The vehicle is still swaying while hover  any ideas why this is happening?    **Additional context**  - https://github.com/PX4/PX4-Autopilot/pull/16405
PX4/PX4-SITL_gazebo,673,2020-12-15T06:34:38Z,2020-12-20T03:57:57Z,True,2020-12-20T03:57:57Z,f004811a4e45bcc3b6522cf6cc254f69b0e4fc27,1,2,0dccee12ba562116f9a27ca2450da443ace358b0 1ff83b465ec9be473135312cb51432cec8bdf8d9,,Update mavsdk version for SITL tests,**Problem Description**  SITL tests has been failing recently due to a outdated mavsdk version.    This updates the MAVSDK version from 30.1 to 33.1 as used in the firmware
PX4/PX4-SITL_gazebo,678,2020-12-20T20:20:49Z,2020-12-20T20:37:19Z,True,2020-12-20T20:37:19Z,4043287bbe07a9d091d579b755796e70d45058e8,1,1,92e97a7cc5b50eb20f094fc9fa3df0b3ba9cb6a5,,tiltrotor increase wing area to 0 5 per side,Increase are of the wings for the tiltrotor to 0.5 each (same as in standard VTOL model).  With the previous  lower  area  a very high airspeed and/or pitch was needed to fly level.
PX4/PX4-SITL_gazebo,474,2020-04-28T15:48:30Z,2020-12-28T13:14:14Z,False,none,96e2ed9ef6ac44956a159b4128a238d1c9fc6529,14,1,2019c55761aba6cf45350dd4d8697b0b6252e6d3,,change default update rate to 200 Hz, - this goes along with the change PX4 side https://github.com/PX4/Firmware/pull/14759
PX4/PX4-SITL_gazebo,342,2019-08-29T09:23:52Z,2020-12-28T13:15:29Z,False,none,659e152e38e289ac8bf55a6b774db04685619229,14,3,901a2e111a9d2b83150b9e5098d3fc80b54eea64 87f14df9f8ea7d11e2aa73e6cf5674df4ef4bba4 d5dcbb4b7614ec80542f07ab885a79c2116e6118,enhancement@gazebo internals@plugins@ROS,Interfaces Add interface between ROS and sitl_gazebo topics,This pull request adds the `gazebo_ros_interface` plugin to this repository. It is based of from [*rotors_simulator* `gazebo_ros_interface_plugin`](https://github.com/ethz-asl/rotors_simulator/blob/master/rotors_gazebo_plugins/src/gazebo_ros_interface_plugin.cpp) (so  the credits and license were kept)  but with a enhanced layer of abstraction that allows the plugin to infer over the existing plugins set to each and every model that is spawned in a world and subscribes to the topics that they publish (ex  if I have 2 Iris spawned  I will get the barometer data from both of them published into different ROS topics).    The main reason for this plugin is to fix up the limitations in Gazebo in terms of the introspection tools: Gazebo plot GUI  for example  is unable to get the data from Gazebo topics were the `protobuf` msgs are custom. The same happens when trying to echo these same topics using `gz topic`. The reason is that these protobuf messages we are using are not self-describable - https://bitbucket.org/osrf/gazebo/issues/2569/support-for-self-describing-messages - the support could be added but would require a great effort  which probably wouldn't be justified since Gazebo Ignition (and Ignition Transport) will probably solve these matters.    But  while we still support the "legacy" Gazebo Transport  the best work around is to make possible to have the ROS introspection tools to ease our debugging process with real-time plotting - example. using `rqt_plot` or PlotJuggler - together with the ground station Mavlink inspection tools (in the autopilot side in this case).    I added the subscription to most of the topics that we can find (and are relevant) to the debug process. We can still add  for example  the subscription to the mag topic or the vision topic. But I guess we can leave that for a further iteration.    @m1kelyons FYI.
PX4/PX4-SITL_gazebo,671,2020-12-12T20:49:21Z,2020-12-28T16:38:47Z,False,none,e5ac5d427b5703d5a1b92b6d8176dbe54dde61b4,5,1,f63b053daa951d3eefed51a54ba4fcd3c015258a,,Introduce a sensor interface for mavlink HIL messages,**Problem Description**  This introduces a abstact sensor interface for HIL Mavlink messages. This allows the `gazebo_mavlink_interface` be able to interact with the `mavlink_interface` and not use mavlink directly.
PX4/PX4-SITL_gazebo,681,2020-12-28T17:36:22Z,2020-12-28T18:59:14Z,False,none,f94d06d253a366a527f08df37ddc0a52eee5cb23,1,1,1c3fcda53854101928bc38bd4658b1bc7e966b5d,,Correct calculate airspeed with wind,For calculation of airspeed  wind velocity must be added not decreased because it is a vector.    log of the result:  https://logs.px4.io/plot_app?log=92f74f21-366f-4cbe-8dab-e3b17c2eee66    fixed this issue:  https://github.com/PX4/PX4-Autopilot/issues/16441    https://discuss.px4.io/t/vtol-cant-control-airspeed-in-sitl-gazebo-in-wind/20285
PX4/PX4-SITL_gazebo,680,2020-12-28T16:34:20Z,2020-12-30T15:20:08Z,True,2020-12-30T15:20:08Z,869225e87fde0d29d9f112b36879037560138de9,5,1,3bc5b196252a9deff5000094e39e8a61b603815e,,Fix lightsource for high fidelity worlds,**Problem Description**  This PR fixes the problem where the scene looks very dark due to some shadows in gazebo.    This has been pulled out of https://github.com/PX4/PX4-SITL_gazebo/pull/651    **Before PR**  ![image](https://user-images.githubusercontent.com/5248102/103229294-0de1e580-4933-11eb-8592-ee3ca4a683d6.png)    **After PR**  ![image](https://user-images.githubusercontent.com/5248102/103229471-5bf6e900-4933-11eb-83b2-20cbed5a9902.png)        **Additional Context**  - Fixes https://github.com/PX4/PX4-SITL_gazebo/issues/642  - Related: https://github.com/osrf/gazebo/issues/2854  
PX4/PX4-SITL_gazebo,682,2020-12-29T17:38:23Z,2021-01-01T00:17:22Z,True,2021-01-01T00:17:22Z,054e0a1be67b715ca1802397082e7814a1427f52,2,3,b3c5d72ab35ebf4f3445da5c8107aa02f6bb8ed5 841189da9a0b30a719f4c69e8f160275e5d67171 a61e998afc888815bbd1ddebbd48dac44e336377,,Jinja generation add protection against accidental overwriting,Checks against overwriting manual changes and against overwriting the template itself.    I'm aware of the pull request #651. It seems the changes are compatible  but they won't merge automatically.    Let me know if you have any feedback.
PX4/PX4-SITL_gazebo,689,2021-01-04T08:24:52Z,2021-01-04T08:25:34Z,False,none,06d5335b121769dcfd0e13b549400000d924336c,6,5,2dcf25f6ff8320b0eb75eba3bfc455bdcb6c0ad3 3e95ef2137e8701aeec101adee8828114f1ec60b 3e5d645a84bfb1fb71f345aac6824acf4253b696 57f62eb9719de56f2bfa7dd02bd5900a24c34559 60048c625b4dc96e75e18e2981ccaddaa41179cd,,Add gst camera into gazebo,Gstreamer camera plugin into fog model to stream video data from simulation model to cloud
PX4/PX4-SITL_gazebo,687,2021-01-03T10:49:26Z,2021-01-08T01:10:24Z,True,2021-01-08T01:10:24Z,e2ff39298fd16b2e2f4977f3d0c0747d27c33a92,4,7,15ad2f00e362a5926b6ed337857d760ef65f5c70 2afec325869cead9ff99a67190d0a90da0928b2b 3f9d5f551e19059ca1c5de31072b7519f132da39 9287063718b22527a826320739858d65d8676599 ee54b944f930ace8cf787838de37ef8407ba3e0b 72ed992bdad20d46f7b90cfa9ca8057c3e7a7435 3de7d3db731e4435e91a8cb1c74c746ca5ce11fe,v1.12-Release-Notes,Fixes for camera manager to support multi video stream,This PR is for issue https://github.com/PX4/PX4-SITL_gazebo/issues/683    There will be required updates in   * Any vehicle model that includes the `libgazebo_gst_camera_plugin` and `libgazebo_geotagged_images_plugin`    * Parametrize the gst udp port(e.g.  replace the hard-coded `5600` port with  `gst_udp_port`  [in here](https://github.com/PX4/PX4-SITL_gazebo/blob/master/models/typhoon_h480/typhoon_h480.sdf.jinja#L407))    * Adding new tags to the [libgazebo_geotagged_images_plugin.so block](https://github.com/PX4/PX4-SITL_gazebo/blob/master/models/typhoon_h480/typhoon_h480.sdf.jinja#L409-L415) such as `<system_id>`  `<component_id>`  `<stream_uri>`  `<cam_port>`  with jinja arguments in order to be able to modify these parameters which are introduced in this PR    * Adding the above mentioned jinja arguments to  [jinja_gen.py](https://github.com/PX4/PX4-SITL_gazebo/blob/master/scripts/jinja_gen.py)  to be able to replace them in the `.jinja` files during the SDF generation of multiple models.    * **PX4 modification**: Modify the [single_vehicle_spawn.launch](https://github.com/PX4/PX4-Autopilot/blob/master/launch/single_vehicle_spawn.launch#L23)  and add the arguments that are added to the `jinja_gen.py` script mentioned above
PX4/PX4-SITL_gazebo,692,2021-01-16T14:51:07Z,2021-01-16T14:52:54Z,True,2021-01-16T14:52:54Z,08de4d44431f79324bb0ef313b9aa22573fc2596,2,1,0dcbad528e05aee98d58cb5dc5f6e241920a687d,,Stop support for gazebo7 ROS kinetic build tests,**Problem Description**  Since ROS kinetic(http://wiki.ros.org/Distributions) / gazebo7 is close to EOL  we will be stop build testing on gazebo7
PX4/PX4-SITL_gazebo,691,2021-01-16T14:23:56Z,2021-01-16T17:34:16Z,True,2021-01-16T17:34:16Z,4048ae60ae4e8bc84840b4878d13e0e685e21b9a,3,1,a71181fb47c51691aed6f7287151a25d359cebdc,,Add user camera plugin with gui plugin,**Problem Description**  Very often you end up clicking the follow target through the gazebo GUI  and this is cumbersome. To prevent this  gazebo provides you an interface to predefine your visual follow target in your `world` file. However  this makes it complicating if you want to use a single world file for multiple vehicles or if you have multiple vehicles in your world.     **Solution**  This commit adds a `user_camera_plugin` which configures the gazebo GUI to follow the vehicle on startup. It tries to track the model with the same name as the environment variable `PX4_SIM_MODEL`    Since this interacts directly with the gui API  this would help on further optimizing the viewpoints in the future. (e.g. Simulating view point from the ground) Note that the plug is a gui plugin and is directly loaded from the gzclient  therefore this plugin does not have any influence when running in headless mode    **Alternatives**  We can also try templating `.world` files  but I see this blow up for maintenance since there will be too many configurations.    **Tests**  ```  make px4_sitl gazebo_standard_vtol  ```    ![ezgif com-video-to-gif](https://user-images.githubusercontent.com/5248102/104814427-18471f00-580f-11eb-8dcf-c0d33c84f31d.gif)    **Additional Context**  - This was first proposed in https://github.com/PX4/PX4-SITL_gazebo/pull/685 and replaces it  - This requires a firmware PR to work together
PX4/PX4-SITL_gazebo,685,2021-01-02T11:17:34Z,2021-01-16T17:37:42Z,False,none,24b26a33842330cd72f611eb2735f60bb49bcb57,1,1,038430bac89b1e2b91d7fb2a0e6ee6aead8e3cf5,,WIP Always start in follow camera mode,Not yet finished  needs to be embedded with all the generation.    @Jaeyoung-Lim Could you help with the generation? This improves the UX a lot.      https://user-images.githubusercontent.com/1208119/103456229-74308480-4cf4-11eb-95a2-739b07405e68.mp4    
PX4/PX4-SITL_gazebo,698,2021-01-23T07:27:41Z,2021-01-25T13:25:41Z,True,2021-01-25T13:25:41Z,46aef29718495d2f668c1648f4c0b0f43b9d9671,5,1,19225dba27a7c4cc139f5ea2d701019d3be83e6c,,Rename geotagged_images_plugin to camera_manager_plugin,**Problem Description**  The `geotagged_images_plugn` naming is confusing  since it does much more than just geotagging images. - It is a mavlink camera implementation  following the [mavlink camera protocol](https://mavlink.io/en/services/camera.html).     **Solution**  This commit renames the geotagged_images_plugin to the camera_manager_plugin  since it is more representative on what it actually is    **Tests**  Tested in SITL   ```  make px4_sitl gazebo_typhoon_h480  ```
PX4/PX4-SITL_gazebo,696,2021-01-21T13:15:14Z,2021-01-25T08:08:40Z,False,none,1ee6af4e2dc49be06b7aa8ccb3fea1de2201350e,2,1,d29af0c7aa09ea121a375140e5670a2863244d81,,Commit for the Integration of the BlueROV2 Underwater vehicle ,Problem:  Currently when the PWM signals are 1500 the Robots move because of the motor constants in the Mavlink Interface.      Therefore the SDF files from the BlueROV2 and the Hippocampus are changed.  Additionally  a pull request in [#16610](https://github.com/PX4/PX4-Autopilot/pull/16610)  is created to support the control of the BlueROV2.
PX4/PX4-SITL_gazebo,701,2021-01-29T12:28:19Z,2021-01-29T12:54:01Z,True,2021-01-29T12:54:01Z,46748268fabad884caf3d36cf8a03104e7d8d709,1,1,be058a3a355319dbd3637a482562e38b44cbe141,,Deflection of the BlueROV2 thrusters,increased ODE solver iterations to avoid deflection of the thrusters.  Should solve issue #694
PX4/PX4-SITL_gazebo,700,2021-01-29T09:31:37Z,2021-01-30T12:34:13Z,True,2021-01-30T12:34:13Z,663a553c5b400a0abbe8b3725333c3582ef4487a,1,2,d5c18e0bb48ab16a23a7213af8560d25f5343bac 10b33455e941081eda6907918bac78e042ebbc3b,,Added GPS and changed the Thruster config of the bluerov2 SDF file,The GPS is added in order to provide a global position for the px4 EKF2 module.    Additionally  the thruster configuration is changed to match the sitl mixer which is provided in the next pull request on the PX4 software.  This pull request can be seen here:
PX4/PX4-SITL_gazebo,702,2021-01-30T19:39:38Z,2021-01-30T20:26:50Z,True,2021-01-30T20:26:49Z,e580bbcd1eb6902c658ed3ece3b3b28dfd57eb17,1,1,71a53748722f3f1fa7e3c205eed1ed2827779049,,Use include model syntax for bluerov,**Problem Description**  This fixes the sdf validation failing due to using `model` inside a model sdf file.    This was introduced by https://github.com/PX4/PX4-SITL_gazebo/pull/700    @Zarbokk FYI
PX4/PX4-SITL_gazebo,704,2021-02-05T08:33:15Z,2021-02-05T12:27:26Z,True,2021-02-05T12:27:26Z,4f26815d4127e3af84e01bbc1f8683c4fe30521f,1,1,1336a65313cf834a123544130b6ca9c42ee5f05b,,workflows fix macOS build,The brew cli has changed.
PX4/PX4-SITL_gazebo,707,2021-02-09T02:16:18Z,2021-02-10T20:26:01Z,True,2021-02-10T20:26:01Z,bebb9a95f0b61bf9e4c3de345fab70985c1329b3,3,2,046148b9cf14f7f567d98b2c4ac5ec145e09e9ac 9f9d0dc8babde4fe8dcfdee51c27f01bae34888c,,Add depth camera model for ROS2 environment,In ROS2 environment  we need different usage of gazebo plugins.    The example migration methods are available at [here(ROS 2 Migration:Camera)](https://github.com/ros-simulation/gazebo_ros_pkgs/wiki/ROS-2-Migration:-Camera)    I made new jinja file and modify jinja_gen script for using depth_camera in ROS2 environment. (#662)    Code for detecting ros2 version come from [generate_microRTPS_bridge.py](https://github.com/PX4/PX4-Autopilot/blob/master/msg/tools/generate_microRTPS_bridge.py)      With this sdf file  you can see following commands indicating ros2 topics are published.  ```  [INFO] [1612836465.568571435] [camera_controller]: Publishing camera info to [/camera/camera_info]  [INFO] [1612836465.569734462] [camera_controller]: Publishing depth camera info to [/camera/depth/camera_info]  [INFO] [1612836465.571190037] [camera_controller]: Publishing pointcloud to [/camera/points]  ```
PX4/PX4-SITL_gazebo,708,2021-02-10T17:53:47Z,2021-02-10T20:16:05Z,True,2021-02-10T20:16:05Z,54e1a19b0e87c5b596d3fff2943c272d16538587,2,1,fed18544ada1346089bbf26b644a20b08b11d813,bug@gazebo internals@plugins,gazebo_mavlink_interface generate subscribers for nested models with sensors,**Problem description**    While testing some `iris` models that contain nested models (ex: `iris_opt_flow` includes `iris`)  I found out that no GPS data was being propagated through `HIL_GPS`  meaning then that there were no subscribers to the GPS topic(s) present in the model.  An inspection lead me to find that included models do not advertise their joints at the parent model level (at least from what I can see in Gazebo 11  I am not sure if this problem was also present in Gazebo 9)  so since for the sensor topic subscription mapping we were capturing the existing sensor joints  any other sensor inside the <include> models were not being found (which means that no subscription was being created to the present sensors).      **Proposed solution**    Fortunately the Gazebo API provides a way of getting the nested models present in the base model  so we can basically just capture those and generate the subscriptions when a sensor is found. Note that this solution is mostly to find the GPS nested models  and will not capture other sensor models added without being nested.    Tested with `iris`  `iris_opt_flow`  `iris_dual_gps` and `iris_obs_avoid`.    @markusachtelik FYI.
PX4/PX4-SITL_gazebo,703,2021-02-02T14:48:07Z,2021-02-10T02:03:32Z,True,2021-02-10T02:03:32Z,97c167d17564a34d1f0985409b153c91de3cca45,5,13,a48f577e3113d107eb090332dc62e5a655b2c513 66c59cf27ba665741ee6688aeddbed8c1ddef81f 88fa21c50e27a8f7039e8d06ba268c8c38eb05d2 625c8ac4795a8d4ee318dfad45b32242d8a1c1d4 c7a5625022ff5fe616e0360d5dd7432d565675f8 3613714fb5f0b61cb49bff991b2195b39b081ab5 5e76ddd98ce124cb41ead44fc4ccf60a48c2e0c4 008af88d0f083891f4d0b1d360243944ed550c5b 2f73b9b576634a18b066b4918985d023bb361a85 c0087ccefba91c64a3085aa9721bc9df99abcab7 cc2f76311bc71e54eadc2248231995ccf9b3e47c f78e1980f51e4532c8a663200ead138437422db3 bd55c0c2201063eb4a7fe4d7029903d02a8bb231,,Implement gimbal controller as MAVLink gimbal v2 device,This adds a gimbal controller which communicates via MAVLink to PX4 and implements the gimbal v2 device interface as described in https://mavlink.io/en/services/gimbal_v2.html#how-to-implement-the-gimbal-device-interface.
PX4/PX4-SITL_gazebo,716,2021-02-28T09:04:07Z,2021-02-28T09:56:15Z,True,2021-02-28T09:56:15Z,c7524aa977539d8cc972d9336355bc82e2f2cfa5,1,1,37d1fb6cde1f0c96f8e1a1053e9d1df8077540de,,Fix MAVSDK SITL tests,**Problem Description**  The SITL tests were failing due to a version difference between what is being used in Firmware    This Pr updates container and mavsdk versions
PX4/PX4-SITL_gazebo,717,2021-03-01T11:48:03Z,2021-03-01T15:12:18Z,False,none,33a987f5826062af21e9a1257aaadbca75a787c1,1,1,3b8bf1f9ee4bffff2b1d695e715c451854328a2f,,add jinja file for iris_rtps,I found some exception about "jinja2.exceptions.TemplateNotFound: models/iris_rtps/iris_rtps.sdf.jinja"   when runing gazebo_sitl_multiple_run.sh    To solve this problem  I add jinja file for the iris_rtps.    ```bash  $ Tools/gazebo_sitl_multiple_run.sh -t px4_sitl_rtps -m iris_rtps -n 2    [Msg] Waiting for master.  [Msg] Connected to gazebo master @ http://127.0.0.1:11345  [Msg] Publicized address: 192.168.0.105  starting instance 0 in /root/multi_vehicle/PX4-Autopilot/build/px4_sitl_rtps/instance_0  Traceback (most recent call last):    File "/root/multi_vehicle/PX4-Autopilot/Tools/../Tools/sitl_gazebo/scripts/jinja_gen.py"  line 38  in <module>      template = env.get_template(os.path.relpath(args.filename  args.env_dir))    File "/usr/local/lib/python3.6/dist-packages/jinja2/environment.py"  line 883  in get_template      return self._load_template(name  self.make_globals(globals))    File "/usr/local/lib/python3.6/dist-packages/jinja2/environment.py"  line 857  in _load_template      template = self.loader.load(self  name  globals)    File "/usr/local/lib/python3.6/dist-packages/jinja2/loaders.py"  line 117  in load      source  filename  uptodate = self.get_source(environment  name)    File "/usr/local/lib/python3.6/dist-packages/jinja2/loaders.py"  line 199  in get_source      raise TemplateNotFound(template)  jinja2.exceptions.TemplateNotFound: models/iris_rtps/iris_rtps.sdf.jinja  Spawning iris_rtps_0  ```    
PX4/PX4-SITL_gazebo,724,2021-03-07T21:39:32Z,2021-03-08T09:57:13Z,True,2021-03-08T09:57:13Z,26fb250537f23456f307a3dc00c317e19431b46d,8,1,8bd19f18c93a9fff0eb88d139ba998b5c91e16c3,,Add package dropping for simulating drone delivery,**Problem Description**  As PX4 vehicles are now being used for package deliveries  this PR adds a package dropping model to simulate a scenario  where a vehicle drops a package that is attached to a parachute.    - A `standard_vtol_drop` model was added  when one of the aux pins are set over a threshold  releases a package with a parachute.  - The package is dropped by the `gazebo_drop_plugin`. Any model can be specified through the plugin that the vehicle wants to drop  - A `parachute_package` model has been added for the parachute attached package.  ![image](https://user-images.githubusercontent.com/5248102/110255988-c1e89800-7f96-11eb-8975-b6e34536e48f.png)    **Testing**  This was tested with a mavsdk application sending `MAV_CMD_DO_SET_ACTUATOR` commands.  The example MAVSDK app can be found in https://github.com/PX4/PX4-Autopilot/pull/16758    To run the model   ```  make px4_sitl gazebo_standard_vtol_drop  ```  [![Demo](https://img.youtube.com/vi/RdvxvoZ1rwA/0.jpg)](https://youtu.be/RdvxvoZ1rwA)    **Additional Context**  - The example MAVSDK app can be found in https://github.com/PX4/PX4-Autopilot/pull/16758  - Corresponding PX4 Firmware PR: https://github.com/PX4/PX4-Autopilot/pull/17047
PX4/PX4-SITL_gazebo,725,2021-03-08T22:46:05Z,2021-03-09T12:49:41Z,True,2021-03-09T12:49:41Z,6b6f4749a74215b9a4fb81cfaa99a3950f13464d,6,1,c3a50fdb9296bbc0ba8697f4c2e32daa8ab76e0a,,Simulating lidar in foggy environment,Since having a flight with bad altitude estimation due to malicious distance sensor measurements in dense fog (https://review.px4.io/plot_app?log=c9482a7a-0608-4cab-9ad3-5a6dbef7f2f7)  I was looking forward to implement this in gazebo to verify the behaviour of newer firmware versions for foggy flights.    This PR simulates fog by creating distance measurements of 2m with 0.1 stddev:  ![Screenshot from 2021-03-08 23-44-46](https://user-images.githubusercontent.com/164396/110391865-61299000-8068-11eb-851c-e460b8361632.png)    In newer versions (tested on PX4 master)  the altitude estimation seems to be not prone to bad distance measurements anymore: https://logs.px4.io/plot_app?log=813654b1-2be4-418c-b3f5-3bd9af216c36
PX4/PX4-SITL_gazebo,690,2021-01-04T15:50:25Z,2021-01-25T07:28:26Z,True,2021-01-25T07:28:26Z,38224fb0b4cf7e738026186915be3d04fc7fa749,10,10,6d04e469b3c2d57fc802460d5b971c27dfca9a81 9fbf953b862fec0b034aaf65b90b696e78b7be5b eb533ca2e073bf4194a90151aab4ad58c332e196 62057339097e1a9bf534a0e07260ae2cd358e0e2 769b02e57b19aa1769f8f06137d0190e8cbed22b 8f57116dab902a6bc1192892c89e7d48000dddd7 08648e7e41368e074f4d963af1a9b43b6e2fb081 2686280279a11c380b88d768e7a2473f611cee02 9ec7ff89ec3f39fab7d5c1ce669a13845a88fcf4 8483819d7ff23c8ad93da30933aad23b57e357a2,,Pr liftdrag coefficients,This pull request adresses 1  2  3 and 5 from #684 
PX4/PX4-SITL_gazebo,730,2021-03-16T11:24:21Z,2021-03-16T11:55:08Z,True,2021-03-16T11:55:08Z,b195315b869a5e86e31bcb934ca85172d4f5f33f,10,1,8c10eca692b8ac622812915d3b38a257fa3c8af6,,Revert Pr liftdrag coefficients 690 ,**Problem Description**  This PR reverts https://github.com/PX4/PX4-SITL_gazebo/pull/690 since it is introducing a number of problems for fixedwing vehicles    The issues include  - https://github.com/PX4/PX4-SITL_gazebo/issues/728  - Vehicles when spawned run with ROS is unable to takeoff    **Additional Context**  - Fixes https://github.com/PX4/PX4-SITL_gazebo/issues/728  - I would like to re-introduce this change  but I think this is not worth keeping a lot of models broken @pjdewitte FYI
PX4/PX4-SITL_gazebo,727,2021-03-14T15:06:08Z,2021-03-18T18:50:40Z,True,2021-03-18T18:50:40Z,1b1afca3440df678167818eaf8e38f301b16bcbd,3,3,57e5b7c4380f766d0e05102c9302955cdf82de5e b489e97cd24f750eaff509c116091f1c31d5351c 247eaa7d1c7f7841de3fb4ab18732319b391edc8,,gst camera add RTMP streaming and nvidia encoding,This PR adds two new features (sorry for making one PR with two features.-.):  - RTMP streaming  - using nvh264enc if available    RTMP streaming  as an alternative to the previous UDP solution  can be enabled by simply adding a `rtmpLocation` tag:  ```  <sensor name='camera' type='camera'>    ...    <plugin name="GstRTMPCameraPlugin" filename="libgazebo_gst_camera_plugin.so">      <robotNamespace></robotNamespace>      <rtmpLocation>rtmp://127.0.0.1:1935/live/simulation-fpv</rtmpLocation>    </plugin>  </sensor>  ```    The nvidia encoder was tested on a Ubuntu 18.04 computer  following the first steps in `http://lifestyletransfer.com/how-to-install-nvidia-gstreamer-plugins-nvenc-nvdec-on-ubuntu/` and compiling GStreamer version 1.18.3 via [gst-build](https://github.com/GStreamer/gst-build) and enabling nvcodec explicitly:    ```  meson -Dbuildtype=release -Dstrip=true -Dgst-plugins-bad:introspection=enabled -Dgst-plugins-bad:nvcodec=enabled builddir  ninja -C builddir  sudo meson install -C builddir  ```    The GPU confirms to be used by gazebo:  ```  $ nvidia-smi  Sun Mar 14 15:59:50 2021         +-----------------------------------------------------------------------------+  | NVIDIA-SMI 410.48                 Driver Version: 410.48                    |  |-------------------------------+----------------------+----------------------+  | GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |  | Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |  |===============================+======================+======================|  |   0  GeForce GTX 108...  Off  | 00000000:01:00.0 Off |                  N/A |  | 45%   40C    P2    61W / 250W |    310MiB / 11178MiB |      0%      Default |  +-------------------------------+----------------------+----------------------+                                                                                   +-----------------------------------------------------------------------------+  | Processes:                                                       GPU Memory |  |  GPU       PID   Type   Process name                             Usage      |  |=============================================================================|  |    0     17523      C   gzserver                                     300MiB |  +-----------------------------------------------------------------------------+  ```    The tested nvidia installations are:  - cuda-repo-ubuntu1804-10-0-local-10.0.130-410.48_1.0-1_amd64.deb  - Video_Codec_SDK_9.0.20.zip    ToDo:   - test everything on Ubuntu 20.04 with latest cuda and video codec sdk versions  - create more detailed installation steps
PX4/PX4-SITL_gazebo,676,2020-12-19T05:54:49Z,2021-03-19T18:54:55Z,False,none,d7410b2b85c953d611c59428fa2de3246a602faa,15,4,c8eee7fb2ad1e19ff9d5571c447979c55accfd2e 51cc7acdad1921b734196e9771af98b233198ef9 ca5dda49d11851fc3bc7d56d80f2d10782902728 d1ec137562b79348ac05a74fd2260f70075c5577,,Multiple airspeed sensors in SITL with multi HIL_SENSOR instances,**Problem Description**  Previously  all sensor information that are passed in the mavlink message `HIL_SENSOR` were not able to simulate multiple instances of sensor data. Sensors included in the `HIL_SENSOR` message is airspeed sensor  imu  barometer  magnetometer.     This PR enables defining multiple HIL_SENSOR instances in SITL and as the first step support multiple airspeed sensor instances.     This can be useful for Airspeed fault detection can be tested with this PR. This has been discussed in the dev summit before: https://youtu.be/37BIBAzD6fE    Changes that were necessary to enable this change:  - Converted AirspeedPlugin into a `SensorPlugin` from `ModelPlugin` so that the plugin can be a child of a link. This also enables adding sensor attached to an articulated link.   - Use of a sensor model  rather than using sensor plugins directly in the sdf so that arbitrary number of sensors can be added  - Added multi HIL_SENSOR support for the mavlink_interface. This is built on top of https://github.com/PX4/PX4-SITL_gazebo/pull/671    **Testing**  - Tested single airspeed instances in SITL Gazebo with various models that use the airspeed sensor      **Additional Context**  - This includes  https://github.com/PX4/PX4-SITL_gazebo/pull/671  - **TODO**: Add multiple HIL_SENSOR id support on the firmware side  
PX4/PX4-SITL_gazebo,712,2021-02-23T22:32:30Z,2021-03-20T10:56:12Z,True,2021-03-20T10:56:11Z,1f339cdf5c5da27097e58ec2beb2793bf6057c7d,4,3,d176db13ed8332b61b31a0ac934fd7f41470d9cb ede3dfb5f13042407fed80e0d493bbcf3e4e2e81 4c1ca719a7fd8b8a78377806d6bcc6c4016fe00e,,Pass ros_distro in CMakeLists txt instaed of checking it in jinja_gen py,As mentioned in #707  checking ros2 distro process is moved to CMakeLists.txt.    I added --ros_distro parameter in   https://github.com/ldg810/PX4-SITL_gazebo/blob/d176db13ed8332b61b31a0ac934fd7f41470d9cb/CMakeLists.txt#L275  for passing ros distro name.  (I think it is best way since it always send ros_distro parameter.. but It would not make unexpected problem. Please give me better ideas for this)      
PX4/PX4-SITL_gazebo,718,2021-03-02T22:20:45Z,2021-03-22T09:21:45Z,False,none,f6a643c7363f87b91213ebbaa30ae251343acf05,1,1,016d795b3db92c879aafe426956279df45c81aaa,,Liftdrag plugin calculate forces and moments for large AoA,This addresses item 4 of #684    Past stall:  * the CL defined by the user will typically drop. With this pull request  it will drop until it reaches the CL of a flat plate. I added an arbitrary factor to convert the CL of an infinite flat plate to the CL of a realistic flat plate (0.7).  * the CD defined by the user will typically rise. With this pull request  it will rise until it reaches the CD of an (infinite) flat plate. The CD approach by the liftdrag plugin before stall is already a very simple approximation  so no further attempts to making it more sophisticated.  * the CM will be as defined by the user  up to 90 degrees angle of attack. From there  the CM will change (with a sine) such that it matches the value at -90 degrees  to avoid discontinuities at +/- 180 degrees.  
PX4/PX4-SITL_gazebo,731,2021-03-20T10:53:28Z,2021-03-22T18:34:30Z,True,2021-03-22T18:34:30Z,3e5fed04d8e574b10e17e446d2938346bc6152ca,15,4,a5419b2130eaeab96e153008718cd84eeb10e10c da27604e06c4822dd4fa87f46f9ae50893568e86 de0d5c93408250e3909dcbb907925c8bcb4555df 10b1dafa9751c662142c378ce3413aaa86811f96,,Multiple airspeed sensors in SITL with multi HIL_SENSOR instances,**Problem Description**  This is a second try of https://github.com/PX4/PX4-SITL_gazebo/pull/676    Previously  all sensor information that are passed in the mavlink message HIL_SENSOR were not able to simulate multiple instances of sensor data. Sensors included in the HIL_SENSOR message is airspeed sensor  imu  barometer  magnetometer.    This PR enables defining multiple HIL_SENSOR instances in SITL and as the first step support multiple airspeed sensor instances.    This can be useful for Airspeed fault detection can be tested with this PR. This has been discussed in the dev summit before: https://youtu.be/37BIBAzD6fE    Changes that were necessary to enable this change:    - Converted AirspeedPlugin into a SensorPlugin from ModelPlugin so that the plugin can be a child of a link. This also enables adding sensor attached to an articulated link.  - Use of a sensor model  rather than using sensor plugins directly in the sdf so that arbitrary number of sensors can be added  Added multi HIL_SENSOR support for the mavlink_interface. This is built on top of #671  - Fixed issues with Eigen    - Using `Eigen::aligned_allocator` https://eigen.tuxfamily.org/dox/group__TopicStlContainers.html    - Added `EIGEN_MAKE_ALIGNED_OPERATOR_NEW` to address https://eigen.tuxfamily.org/dox-devel/group__TopicStructHavingEigenMembers.html     **Testing**  Tested single airspeed instances in SITL Gazebo with various models that use the airspeed sensor    **Additional Context**  - This is a second try of https://github.com/PX4/PX4-SITL_gazebo/pull/676  - This includes #671  - Multisensor support in mavlink has been added in https://github.com/mavlink/mavlink/pull/1468  - TODO: Add multiple HIL_SENSOR id support on the firmware side with lockstep    @dagar FYI
PX4/PX4-SITL_gazebo,732,2021-03-25T00:55:37Z,2021-03-27T21:00:35Z,False,none,none,292,54,4270dceceafa91ff1961f6e8a32a59941aa152c6 20e57f9b8556bafc50db067058f4a5e4ed42d7db 28fd95a1c07a3f89e783968ec2321052c6a8706f 236fdf269ad436dd511701aabdb4d36889b37598 10a2274541d4efe48b3d6d5b4b6793d34d50efe1 78cae7fd9cc5cfb94f9af01511ca812e9a02f79d 36774e7ecafb297e61e578e58dee6949cf0963c3 3876191903f27d82a01b506ff0ef64b03df7ab1c ef75864b3aec00ef824b2fe2d4c3b707f5f8ae5e 5e1910e42230909bc0b0ae655cc3ee4a3fde24d5 0e0887aebc4f23a05b7daf2422103b49bb268e05 a2b505aac4c129eab31dde37ec21a64c60d29ef9 47a35de3d30814be2835c54fd3325ad8c4c50d7b d1165ea19e1322df8df36a6fb8e8290c4829b3cd a7acbadfa499d0cf257e1415829bb5b2ac1d0c33 cd7a28f21fd330d8208bb466d956e4c495e00a49 0f07120b29f89394a0aedfe5961c2f627ee0017f 791768720cf6e1df39f1960fa24da0848783a280 bee2b4fb34d7241501a845eb42bd7cc03590e3ce 60916c8a859f7b5a208644af9d52343a40a87fbf 8cbb82eaceb1b4ab9e684326932e6ff7ac627a8f d947634c6015ce07423f6234c51399b5cce1f59b 4711b68f8fab0dda48845f6e4b6fecafef83299a 7b4ac0e5842cae0c45ad920b20443e6feb1d840b 1f19868a5e642e8711f1da82fbec54eeb06d3fb5 f52fd99fc95d8f316bcf1278b21f5d826ad3cf08 33c6d7a90d44a35e47e8cd7c148b583d91da7ea2 fa14a0cc67b3c4ca873caa1d06fec95106e9f4d6 bbd953d9d2fe264b7fcad9bc2c567a4163e7d78f a7c62bf95090dea7f34c61f63e1a60dd46c9aa50 873f3a998df21b056d4b0941eb6cd0dbc278fb11 628c561f8ce193f5122889da9242171428adb0b8 b6bbe20b809abd20760212a50a7a5ff989ec6130 88e5314389563b69b2f819be376625474b173987 9ae409f596a8b0280b34a713351016e166e881aa 86f5b3549db63d8dba4bf3b1e797f8628a7bcf35 da5ed94c9a1cd2363729f0d806c9b678bad50518 e4098347164f29e10a61a6271e5c2a5130b085d4 7a8b641c57ccc5a31677698a031f10a96f4d4cbf 5549d470703a725ac57e04487528633807f02380 97799768d96e4922d3de75e3cfdbda00f10d2450 5f5646504491f3ba0e3a5fe7934cf2ff6deaa98d bfc38ead80739963b1f1b52118c32f3d61d72164 011b88a1d1b3151e3c3fc94a119757525e4106f3 7f07fee3110085a0c8aefe999b37440b1d4c5a04 9cfbf85c0b3473d490bdbc4626c658855b9cc6f1 c0a7a0427ed7f64b50f1d57e1172310d64bd050b 1ce925dcb55a24a75b52967e83a38b07b2200602 59bebfe9263f82fca91fda5e55dd775aca81af6d 83785498a09e2960c4905df3af050228fad48e2c 8e695bce231a868df3a4a57b5a47a943ddcaefe5 7bac3c1565d242d94d578da1908ca176168daa71 03ce26443bf7c6cb42ca2c8df95a1a3743c4073b bb3225bfaa7bf5615aa2f125100c1ae5e170a306,,px4_timing,Adding px4_timing.py onto this directory.
PX4/PX4-SITL_gazebo,734,2021-04-03T23:32:14Z,2021-04-04T04:42:46Z,True,2021-04-04T04:42:46Z,6fc9ef05b2d2cca06eef01971d28bf96ba97e6bb,1,2,7096e83d6717f7ea134ceab1870304c3c509ec28 940aac54c75cc2db1d25db608b94f9547960362a,,Fixing Old HITL Iris SDF,The Old SDF file didn't show correctly in gazebo and the rotor blades were self collapsing and it was not working. The property "relative to" apparently isn't parsed correctly by old SDF versions and gazebo (9.16 in my case) couldn't parse it. Regenerating the SDF again from the jinja template and making the necessary HITL specific changes in the mavlink plugin  it all worked well and showed correctly in Gazebo.    Previous version:  _Gazebo command line:_  ![Screenshot from 2021-04-04 00-56-34](https://user-images.githubusercontent.com/52039275/113493928-2c342000-94e4-11eb-819f-fdb1d95cb8c3.png)    _Gazebo World:_  ![Screenshot from 2021-04-04 01-25-36](https://user-images.githubusercontent.com/52039275/113494005-bc726500-94e4-11eb-8ed6-8aded69e0b9a.png)      Now it works just fine.
PX4/PX4-SITL_gazebo,735,2021-04-05T11:12:37Z,2021-04-05T11:29:15Z,True,2021-04-05T11:29:15Z,e703e2726a4cd82cf3c57614e9c33d6354310885,1,1,f29269010b0b4bcb9b63b7ad8967c3844aab792b,,tailsitter fix airspeed orientation,The orientation of the airspeed sensor got missed in https://github.com/PX4/PX4-SITL_gazebo/pull/731/files#diff-0020558d0aae9f87a3eabf04651b92582eb94089e78c860d631c8a693b523923L89.
PX4/PX4-SITL_gazebo,736,2021-04-05T11:43:30Z,2021-04-05T12:11:08Z,True,2021-04-05T12:11:08Z,5761bd66cd36ded2d0dccf8127e30a1522fe1ac6,2,1,dcacef5b0481649f426ad6b7d26b819fba5c60d4,,Switch tailsitter sdf version to 1 6,**Problem Description**  This fixes the issue of tailsitter not taking off on gazebo9. This is a regression caused by https://github.com/PX4/PX4-SITL_gazebo/pull/731  where nested models have been started to use for airspeed sensors and a version mismatch of the model with nested models can result in a failure    **Testing**  Tested on Gazebo 9   ```  make px4_sitl gazebo_tailsitter  ```
PX4/PX4-SITL_gazebo,737,2021-04-09T15:40:03Z,2021-04-10T10:40:13Z,True,2021-04-10T10:40:13Z,05e2cd9c03ffa77f0c0d5bd3e788d33e06480b25,1,3,97378945e26c16ce3341090c4b453731b2aeadd9 6f9f873d608e98e8187589bcb57814b8afe9c7fc 7c451cb08e797874dce203547ab6745604c2932f,,Removed unused computation of CoG,In the lift drag plugin there were a few lines of code used to compute the center of gravity of the respective link. Since the variables themselves are unused I propose to remove them.    Let me know if the change in the formatting is a problem for your conventions. I can change it if needed. 
PX4/PX4-SITL_gazebo,741,2021-04-19T23:30:05Z,2021-04-20T12:35:18Z,True,2021-04-20T12:35:18Z,4c27fc7dd659c262257abeea2308e2f1c54e9029,1,2,028d2b4f342df275db6f0084c59b37dce6c59f42 089d5e3ded5f5e7a248ce8173c5bb7ee6e7e4a72,,Update mavsdk versions for firmware SITL tests,**Problem Description**  This commit updates the mavsdk version for firmware SITL tests. The tests were failing due to an update on the firmware side. (https://github.com/PX4/PX4-Autopilot/pull/17332)    **Additional Context**  - This has become a pattern where whenver there is a mavsdk update on the firmware side  SITL testing is broken in this repo.  This is partly because mavsdk is not part of the dev container and is installed directly in the github actions of the firmware SITL tests: https://github.com/PX4/PX4-Autopilot/blob/master/.github/workflows/sitl_tests.yml  @TSC21 Any ideas how we can do a better job for this?
PX4/PX4-SITL_gazebo,743,2021-04-26T02:38:02Z,2021-04-26T02:38:13Z,False,none,c80db9c5b50ba086536f0e3e0a24db393768a3b9,16,11,e1cc6b0f51875b624eb08063b6d83d765d2ddea0 06c753d4e365411a718d24b221da482f4880ed7e 7fa9bffb7710b33997df376e2d4f7a16fc7d15a1 73712d2c7d7658029cb845c954f1c5ebbdab5f84 ccdbc182d37c3e0dbf98bcf796a0e553634b12d3 78c2612804b475fdabc9dfa08cf5635d9401255d fe0a80195f978fe520a89b205c47fe676eede6db 8798e88ef66b7237d0979161cb3a36f2f233cedc b8f14b9f2efe557537c2c8816c0ca07cffae7e18 6ef8722650b7c355105decf4ed97b3a512733807 dc6830f1903294c1ceedbe242e7066dd23dd2885,,Tri t,
PX4/PX4-SITL_gazebo,747,2021-05-09T08:46:39Z,2021-05-09T09:29:21Z,True,2021-05-09T09:29:21Z,2496b85dd22d2f9c1c1281d5ef77dfb86ef604a3,4,1,3b9a2145074238c7d2bb6b885ee4774985e31da9,,mavlink_interface use uint64_t for timestamp,This fixes the problem where the simulation fails after 2^31 us.  Microsecond timestamps always need to be 64 bits to avoid overflow within the timescale that we care about.    Addresses https://github.com/PX4/PX4-Autopilot/issues/17455.    Thanks for the hint @LorenzMeier.
PX4/PX4-SITL_gazebo,750,2021-05-09T18:59:31Z,2021-05-10T04:52:15Z,True,2021-05-10T04:52:15Z,402897d22505a13505c19adca23c03a47224175f,1,1,228e5e30fa582faa284ffd2008fe1d5ec6a671ff,,Update mavsdk version according to firmware,**Problem Description**  The mavsdk version update is now being done in the firmware by reading a file.    Thanks @julianoes !  
PX4/PX4-SITL_gazebo,389,2020-01-08T10:42:52Z,2020-03-09T22:13:15Z,True,2020-03-09T22:13:15Z,c13057d04e6ece0b762fc171de11d3dd5b280b60,7,2,3b9bead9bc9e2844a93e7ad57650868b46ae80e4 207fe5e80d34c2f2a3072d694a6b413970b601f7,,Parachute plugin for simulating flight termination in gazebo,This PR adds a parachute plugin which is used to simulate the flight termination in gazebo sitl.    The parachute model the plugin comes from https://github.com/AurelienRoy/ardupilot_sitl_gazebo_plugin but integrated into the px4 sitl_gazebo    Since the original code is distributed under Apache  I am not sure if there needs to be a more correct license header in the parachute plugin. The code itself needed to be modified quite a lot to be able to work nicely with the px4 HIL interface.    Below is the demo of the parachute plugin working with the roll angle exceeding the limit.    Video can be seen in the link: [Video](https://youtu.be/17x3Y7K8-j0)
PX4/PX4-SITL_gazebo,748,2021-05-09T12:17:26Z,2021-05-17T09:04:31Z,True,2021-05-17T09:04:31Z,9ec04ccd2790658f912a7a5bee0c0602a085f37e,2,2,2f012330ff3e515b96ded3a5c941c925fe4e05a7 c6200dcdd577668ae7e51e05e7b8dede33ecb1ce,,Tidy gazebo tailsitter sdf configuration ,Colour the rotors as per the airframe reference and use the correct visuals for the clockwise rotors.
PX4/PX4-SITL_gazebo,749,2021-05-09T17:27:06Z,2021-05-17T12:19:10Z,False,none,0f2dee7eb796cc881368481a9f404fb0340edf0d,7,1,df6e1ce0c135cb7ca736ac955ae2fa81cde905c2,,Add gazebo dual rotor tailsitter ,A twin rotor gazebo tailsitter model as per vtol_duo_tailsitter:    https://docs.px4.io/master/en/airframes/airframe_reference.html#vtol-duo-tailsitter    Once this is merged I'll update the PX4-Autopilot when this merge is complete.  Preliminary branch available here:  https://github.com/grahamjamesaddis/PX4-Autopilot/tree/add_tailsitter_duo
PX4/PX4-SITL_gazebo,756,2021-05-17T17:28:47Z,2021-05-17T19:30:40Z,True,2021-05-17T19:30:40Z,f10ccb7ec34e35842254fe969d49beea699a8ffb,1,3,f81df51a9e31ac46b1311934392e1155be38a7de ebe42c5af501e06685cfff38935513e02a338633 19b9762a018231d045ee9ad33c4728f0f89539aa,,Fix non unique name warning in tailsitter sdf jinja,In Gazebo multi-robot simulator  version 11.5.1  the tailsitter gives the following warning:    Warning [Model.cc:212] Non-unique names detected in XML children of model with name[tailsitter].    The names have been renamed to be more consistent and remove the clash.
PX4/PX4-SITL_gazebo,688,2021-01-03T23:57:57Z,2021-05-18T05:37:19Z,False,none,6b5d775fa6a0d7e37d834110e91528fb0696bfbb,2,1,460b96737383c76cdc1b21791855582f6e83e51b,,WIP Found a busy loop in lockstep,This is not a proper solution  but it does break the busy loop.
PX4/PX4-SITL_gazebo,754,2021-05-14T15:06:36Z,2021-05-17T09:06:01Z,True,2021-05-17T09:06:01Z,05b86257ac1b8091275e95281cb46962dc03ea21,3,1,658bc4c94299cca830852bced29c004afde2a3ea,,Fix gstreamer camera,This PR:    - fixes gstreamer timestamps (they were totally broken - for live sources gstreamer assumes to align timestamps with pipeline's start time  not 0. Also distance between frames are not constant - incrementing timestamp by 1/fps does not have big sense IMO)  - uses push mode all the way (previous version used push-pull bridge which is not as good as push-push)  - avoids duplicated frame encoding (pull frame callback was called at rate 300Hz+ sometimes  I don't fully understand how gstreamer worked in these conditions but pull callback had to clear (release) fremeBuffer after sending it downstream - this would made push-pull working but still not as good as push-push is)  - cleanups things a bit there and here (just some sugar to keep it more consistent  but only for places which I was touching)    Hope it is not very radical change and will be merged soon.
PX4/PX4-SITL_gazebo,759,2021-05-20T10:33:41Z,2021-05-20T12:33:43Z,True,2021-05-20T12:33:43Z,5c248898524cb670df496149de5e4692e16e69dc,2,1,29044cc7742f0b6954ce2b6856482c2a4e554bb9,,Use cmake to find and link to gstreamer app 1 0,Trying to fix macOS CI broken by https://github.com/PX4/PX4-SITL_gazebo/pull/754
PX4/PX4-SITL_gazebo,758,2021-05-18T13:07:10Z,2021-05-20T13:53:05Z,False,none,48215c58fae1bde77a9acb9b2f9b2586657a592f,1,1,fad813ef37c6416b7715debda894b1b9efd2327e,,Fix broken macOS CI,**Problem Description**  This PR is an attempt to fix the macOS CI that was broken after https://github.com/PX4/PX4-SITL_gazebo/pull/754
PX4/PX4-SITL_gazebo,770,2021-06-12T04:08:36Z,2021-06-12T14:54:07Z,True,2021-06-12T14:54:07Z,822050a7ab6fd87972e59f16312f451bce217a56,8,7,a0c0e4ee412084f3896f6a6df52f7a650e47a44f 44c5302541de8b7b1f88bb54e38ac8192c3f456d 83e0d044106676e9b708cfa3d6d5f9f215739ce8 961980ea250467cdd84ecc4d2fbc94418bc56918 be5efd9c0180bf25682a75ea4ce4549314e9dcfc e90764815c2701bb19d2b32cd3c59d8f8538dc98 cfb3911952dcf8d7d7660e7ef536bfe30ef98dbb,,Improvements and fixes to GPS and depth camera sensor setup and handling,1. `iris.sdf` was still using a nested model for the GPS instead of the include clause  resulting in the GPS link not being found when the Iris model is included in another model  like `iris_depth_camera`. This is now fixed;  2. Fixed ROS_VERSION being parsed as a string instead of a int  leading to the comparison in the `depth_camera.sdf.jinja` to never be true;  3. GPS topic was not being set correctly for nested/child models. This is now fixed;  4. Update some configs on the depth camera model.
PX4/PX4-SITL_gazebo,767,2021-06-04T23:48:10Z,2021-06-15T11:41:39Z,False,none,6f5bb97850c73c60050dea2548ec20079378c388,1,1,7849e48823bfdffed106732acdf6850f0a105914,,Lower sonar sensor distance publication rates,**Problem Description**  This fixes the problem of estimator issues as reported in #755 by lowering the sonar publication rate  ```  ERROR [ekf2] 3 - distance_sensor lost  generation 284 -> 286  ERROR [ekf2] 4 - distance_sensor lost  generation 284 -> 286  ERROR [ekf2] 5 - distance_sensor lost  generation 284 -> 286  ERROR [ekf2] 0 - distance_sensor lost  generation 336 -> 338  ERROR [ekf2] 2 - distance_sensor lost  generation 336 -> 338  ERROR [ekf2] 1 - distance_sensor lost  generation 336 -> 338  ERROR [ekf2] 4 - distance_sensor lost  generation 336 -> 338  ERROR [ekf2] 3 - distance_sensor lost  generation 336 -> 338  ERROR [ekf2] 5 - distance_sensor lost  generation 336 -> 338  ```    **Testing**  This PR can be tested using  ```  make px4_sitl gazebo_typhoon_h480  ```    **Additional Context**  - Fixes #755 
PX4/PX4-SITL_gazebo,771,2021-06-17T23:28:32Z,2021-06-18T00:45:19Z,True,2021-06-18T00:45:18Z,1f3f1b1dec5a31c2c400f141fc344f11f68659c9,7,1,d6fabd44f566342286acb78b0984c21fb71cf288,,Add plugin allowing to draw a force e g liftdrag ,This adds a visual plugin able to draw a force (in my case I was interested in printing the forces computed by the liftdrag plugin). Not sure if that's worth going upstream  but I wanted to share it in case somebody is interested (@Jaeyoung-Lim).    It requires the force to be published to a topic defined as `<topic_name>` in the sdf file. In the plane example  it appears in two places:    1. In the `<visual>` tag of the link  where it calls the visual plugin (and therefore tells the visual plugin on which topic it should listen for that force)  2. In the call for the LiftDragPlugin  where it tells it to which topic it should publish the force.    I modified the plane.sdf.jinja file in a way that has no impact: the force will not be published because the relevant lines are commented out:    ```  <!--<topic_name>lift_force/left_elevon</topic_name> Uncomment to draw the force -->  ...  <!--<topic_name>lift_force/right_elevon</topic_name> Uncomment to draw the force -->  ```    When those lines are uncommented  the visual plugin will print the forces  as shown on the image below. Also I only print those two forces  but it works for others (e.g. rudder); all it takes is a topic publishing a force.    For some reason  the publishing/subscribing at this rate tends to slow down the simulation a lot on my laptop  which is why it is commented out.    ![2021-06-18-011716_483x298_scrot](https://user-images.githubusercontent.com/2606672/122483520-127a8300-cfd3-11eb-8ca4-e2ee7df920ec.png)    You may have noticed that the origin of the arrows is below the wings of the plane  but I think that the rendering is correct: it is where the force is applied  even though the wings are rendered above. I have not been validating the output of this plugin other than by running it and checking visually if the arrows seem reasonable :see_no_evil:.    ![2021-06-18-012654_329x270_scrot](https://user-images.githubusercontent.com/2606672/122484145-57eb8000-cfd4-11eb-8a1a-7ab101acbfcc.png)  
PX4/PX4-SITL_gazebo,781,2021-07-13T08:19:31Z,2021-07-13T10:02:09Z,True,2021-07-13T10:02:09Z,b6be00542be4d77f436c66ee48c22ca911601a2a,2,1,3162e87713b81030e8964b16ef9af4bec4b15047,,Add iris model for control allocation development,**Problem Description**  While control allocation has been merged into master  the `iris_ctrlalloc` model could not be tested in simulation  due to the lack of the model in this repo.    **Proposed Solution**  This PR adds a `iris_ctrlalloc` model which maps to the default `iris` model so that the developer is able to use `iris_ctrlalloc` 
PX4/PX4-SITL_gazebo,753,2021-05-13T06:45:21Z,2021-07-16T12:43:59Z,True,2021-07-16T12:43:59Z,f650396f34e80b27f1828851ec2af25bd954c37e,8,1,2d82ae46c45a3f352b782754aaaed05b1b62d2cd,,Add makeflyeasy believer fixedwing model,**Problem Description**  This commit adds the [makeflyeasy Believer](https://ardupilot.org/plane/docs/airframe-believer.html) fixedwing vehicle as a sdf model for PX4 SITL.    This model is used for testing A-tail configuration as well as a dual-motor fixedwing aircraft    **Testing**  ```  make px4_sitl gazebo_believer  ```  ![image](https://user-images.githubusercontent.com/5248102/118088555-85d31880-b3c7-11eb-86ed-523c11974714.png)  
PX4/PX4-SITL_gazebo,784,2021-07-16T07:36:57Z,2021-07-17T18:26:27Z,True,2021-07-17T18:26:27Z,55e479aa80b57da850e307b0105baf0f262ec284,1,1,f5966df6a3446a8c4540380ccd0a2032db09d86e,,gazebo_mavlink_interface get latest occurrence of to obtain the sensor name,If the a model has multilayers of models  that the current approach ing `gazebo_mavlink_interface` is incorrect  I have to capture the last occurrence of `::` and then use its position to correctly extract the sensor name we want - e.g  in a nested model where we have a link `model::model_base::gps0`  instead of `model_base::gps0` as the sensor name  we want `gps0`.
PX4/PX4-SITL_gazebo,782,2021-07-14T07:40:58Z,2021-07-19T11:25:16Z,True,2021-07-19T11:25:16Z,32893bcbe223a71a203855f67dc2d1d4f2d3d5ad,2,1,3822f5039b1df2f48a892c3603b43a1ab66fac77,,Add control allocation model for the typhoon h480,**Problem Description**  I noticed after https://github.com/PX4/PX4-SITL_gazebo/pull/781 that there was another dangling airframe config in the firmware: https://github.com/PX4/PX4-Autopilot/blob/master/ROMFS/px4fmu_common/init.d-posix/airframes/6012_typhoon_ctrlalloc      **Proposed Solution**  This PR adds the control allocation model of the typhoon h480 for this repository
PX4/PX4-SITL_gazebo,740,2021-04-19T13:40:48Z,2021-07-19T11:25:54Z,False,none,8811c0ea0aded18d4be3eff7bc938443066b2426,1,1,c038c768c3da3ed0824d0e3f31b591da662859af,,fix the direction of the force for bi directional thrust,If ```reversible``` is set to false  the force will have a negative value.  It is a problem if ```reversible``` is set to true.  Stick-up lowers the thrust  and stick-down raises the thrust.  It is the opposite sign  so I used ```turning_direction_``` to fix it.    [Bi-directional thrust test video - youtube](https://youtube.com/shorts/A2KOobSMzBc?feature=share) 
PX4/PX4-SITL_gazebo,787,2021-07-27T08:49:05Z,2021-07-27T11:59:26Z,True,2021-07-27T11:59:26Z,7fda4d311a9daff4bec4f2fe83e63fde0b8f04b0,2,2,daceb736215390d2926e857c4ff3d560c6775c63 1796290f5632e7b2ff3f70444e882391b25d8542,,Reduce yaw authority on plane,**Problem Description**  The vehicle will go into a spin if there is a yaw command in stabilized mode. I believe this was due to the vehicle having a too large yaw authority on the control surfaces    **Proposed Solution**  This PR reduces the yaw authority of the vehicle. 
PX4/PX4-SITL_gazebo,790,2021-08-10T13:50:18Z,2021-08-10T13:51:23Z,False,none,5bcdd42fe323d9e8d4d7d1f5cae38488ef055049,117,5,6d49d2d7b968ab6031eecaf8c87216abd0e50c3b 4fe75aa9fe0883389282646d2410a2fa816b5366 caa40062e755737b0bab5093467d845d20fa2c81 271240d1ab21a7f85deec3808f9221c63ffb5443 98a435a6b8eb49f09c75e9543e89773f3c3da705,,Удалены невидимые препятствия в некоторых дверных проемах,none
PX4/PX4-SITL_gazebo,715,2021-02-27T21:56:03Z,2021-02-28T09:15:14Z,True,2021-02-28T09:15:14Z,f4d5594183d60ef40dd6e9de0eb06fa26b9af8ce,1,1,46c2c2d02dfc9c9553ea8d19af780860b6ad7a0b,,Increase rover model realtime factor,**Problem Description**  Currently the rover model shows low realtime factor (~0.1) when running in SITL.  This PR slightly increases the realtime factor to (~0.4) by slowing down the barometer publishing.    **Additional Context**  I have tried digging into the barometer plugin / and mavlink interface related but I am not sure why only the barometer plugin plays a major role in the realtime factor. @TSC21 would you have any insight on why this is the case?
PX4/PX4-SITL_gazebo,796,2021-09-01T13:55:04Z,2021-09-02T07:27:00Z,True,2021-09-02T07:27:00Z,53d606b32f5729cc70d59281085d639bd97b30d7,2,1,d2292b875b49f180368d40f6d4490cf99306e85e,,fix the bug for the low real time factor in gazebo,Hi     I found the real time factor problem when I run multiple vehicles in gazebo.  This problem happen in the rover and plane. (there is no problem when running the multiple iris.)    ![problem_rtf](https://user-images.githubusercontent.com/3262128/131683783-fb1aa075-d34f-42a0-99b8-840338f9abd6.png)    To fix the problem  I change the gazebo plugin sequence like iris.    (I think there will be better solution. Could you please check it?)    Thanks.          
PX4/PX4-SITL_gazebo,797,2021-09-01T14:40:59Z,2021-09-07T02:28:30Z,True,2021-09-07T02:28:30Z,2561ff03f1be3ea158594f12f6de1f2f86008e8a,3,5,8ab29b5e5a95493bc94609f386cc2c2f22f19b9e 922c03c25f2c780f62d3dcd1789f6f432172e8ab ea14eea46cb464bd36ecf6a7b762dd2ef182caaa 9ba38bff891689dfecde4ca8023c8f40f02ca612 988f0383c8296ce6bd901abab3959b82a0eea4ad,,Enable HITL over UDP,This includes small cleanups and some changes to enable HITL connected over UDP.    To use it  these two settings in the sdf file need to be set:  ```  <mavlink_udp_port>14560</mavlink_udp_port>  <serialEnabled>1</serialEnabled>  ```    Please review commit by commit.
PX4/PX4-SITL_gazebo,785,2021-07-18T19:18:21Z,2021-07-22T15:42:41Z,True,2021-07-22T15:42:41Z,7505aee97d2d3112fb2bd95198946345c6fa0b07,2,1,7acce41863a57822ac8a7bb45fe908903c8a2227,,Add glider fixedwing model,**Problem Description**  This commit adds a unpowered fixedwing model. This model can be useful for not only developing gliders  but also observing behaviors in TECS.    The model is a modified version of the `standard plane` model. The rotors are removed from the vehicle.    ![image](https://user-images.githubusercontent.com/5248102/126079600-94ba381b-8570-4605-9085-4f404debf135.png)      In order to takeoff  the simulation is equipped with a `catapult_plugin`  which throws the vehicle to up to around 30m altitude.     **Testing**  To run SITL  run the following command.  ```  make px4_sitl gazebo_glider  ```    The vehicle takeoff can be triggered by typing  ```  commander takeoff  ```  in the mavlink shell
PX4/PX4-SITL_gazebo,801,2021-09-16T14:13:40Z,2021-09-17T06:27:01Z,True,2021-09-17T06:27:01Z,37a3a645cad21ba46992b94586c15be9b0bb843c,3,1,70d2e6a323446374a73aef961d8d8d8d4f3722fe,,camera fix stream URI,The URI is a URI not a number :).
PX4/PX4-SITL_gazebo,802,2021-09-19T16:54:10Z,2021-09-20T09:21:40Z,True,2021-09-20T09:21:40Z,d8366bf2389eae6106d1dbfaac72ebfdf23a5d2d,1,1,541be2f63b71513f42a7ed09f54f0c9dfba9e5c8,,Fix gazebo plugin for laser sensor,The GPU plugin didn't work out of the box and lacks basic documentation  the normal plugin works fine. also increased the update rate a bit to 10 hz to match modern lidars
PX4/PX4-SITL_gazebo,807,2021-09-22T08:14:51Z,2021-09-22T18:47:52Z,False,none,10ac9453c00a4d23bc42613eb5893e78add84a5d,2,2,204002e7c05f4925862776d42bb9479093c3add0 db6f4c0c480f0d7140a6c339a85486d39e0a2406,,worlds add safe_landing world,Adds a world to test safe landing in sim.    ![image](https://user-images.githubusercontent.com/26868917/134307365-cf41b09d-fcbc-4cb9-86cc-c2b6cddd20fb.png)  
PX4/PX4-SITL_gazebo,809,2021-09-27T07:09:58Z,2021-09-27T08:35:53Z,True,2021-09-27T08:35:53Z,96cd36f37c03ac18c4a904bc708177a7f7df82c2,1,1,f5e51bb6cb87c8cabb7e97a77343e08b369779d3,,Modified the rolling moment formula of rotor ,The previous formula did not consider the direction of rotation  which is unreasonable.  https://github.com/PX4/PX4-SITL_gazebo/blob/d8366bf2389eae6106d1dbfaac72ebfdf23a5d2d/src/gazebo_motor_model.cpp#L250  ![image](https://user-images.githubusercontent.com/30321432/134860828-b88bedf8-1569-4f22-93ba-7de99cfd3827.png)  
PX4/PX4-SITL_gazebo,810,2021-10-06T05:33:46Z,2021-10-07T13:46:56Z,False,none,d5462db64ec092fa35b26c57610cc2593014a971,1,1,345f91f4f11ade70a6be8094fc3aba0a7055f947,,added int64 message,none
PX4/PX4-SITL_gazebo,819,2021-10-21T00:08:15Z,2021-10-21T06:07:25Z,True,2021-10-21T06:07:25Z,a3eef9d3a17078896f40abb0deaabfb0faad8c65,2,1,d8c5f58543eb73763e829ddcca8f34149ed56285,,models Add model for standard_vtol_ctrlalloc,Run with: `make px4_sitl_ctrlalloc gazebo_standard_vtol_ctrlalloc`
PX4/PX4-SITL_gazebo,821,2021-11-02T18:05:45Z,2021-11-02T19:46:03Z,True,2021-11-02T19:46:03Z,6fa6ec78a7a1619b7b90ac0c01aaec919defbe35,1,1,d0732dcae1dd10c43be9796c5f522767cef87ec4,,Add storage usage flag to storage information for new version of mavlink,Add storage usage flag for gazebo camera storage information. This is needed in order to upgrade to the latest version of mavlink.  [https://mavlink.io/en/messages/common.html#STORAGE_INFORMATION](https://mavlink.io/en/messages/common.html#STORAGE_INFORMATION)
PX4/PX4-SITL_gazebo,820,2021-11-02T17:31:42Z,2021-11-02T19:51:48Z,False,none,1e71ef7bc1abe7f4f86f2b1263fa029687aa3c61,1,1,819f235da425c2230f4984ef29dd821ddf9d7950,,Fix mavlink regression regarding STORAGE_USAGE_FLAG added,**Problem Description**  There was an update on mavlink `STORAGE_USAGE_FLAG`  which resulted in a regression with the latest mavlink builds    This PR fixes this by adding the storage usage flag
PX4/PX4-SITL_gazebo,822,2021-11-06T00:36:13Z,2021-11-06T01:51:58Z,True,2021-11-06T01:51:58Z,1c8c9197103e746a21f2d2d2c844dd2f7e2b036b,8,1,4c5235ebded9de8175b0a9c3adf0ca87dfd2086c,,update Mavlink usage to match PX4 and switch to development,none
PX4/PX4-SITL_gazebo,827,2021-11-16T05:18:21Z,2021-11-17T08:48:17Z,True,2021-11-17T08:48:17Z,60d6844e17919e8d57aafb3a0c25064df920cfc3,1,3,bc72897ebdece1cd6f029dc11b614d1f7a810ac5 314fe1bbc613c9fcc9dd76b376c7ca800cef55e5 42618ca78b28c2ebb506af5061d89b5d9db8a98c,,Fix convert accel frame from body to local NED,Related Issue: PX4/PX4-Autopilot#18559  Related PR: PX4/PX4-Autopilot#18527
PX4/PX4-SITL_gazebo,826,2021-11-15T13:37:12Z,2021-11-15T16:39:44Z,True,2021-11-15T16:39:44Z,607aa4d990ff20b4f8a3a714043d116cf191f8b6,1,1,98d7ffe0d7f2b2a80ced2e718cca9d0b384b0328,,Wind Plugin Fixed typo in windGustVelocityMean Closes 825 fixes 812,Fixed the typo in windGustVeloctiyMean to windGustVelocityMean  so that the parameter in the world file can be correctly read and the mean gust velocity properly set to the parameter's value.
PX4/PX4-SITL_gazebo,828,2021-11-17T20:36:52Z,2021-11-23T10:21:34Z,True,2021-11-23T10:21:34Z,71d8a4165d5e31e359b3ee53fa69bc075166a461,3,1,ef025a445ea93e878fe19d9f431b25b366b873a5,,Remove unused configs in windyworld,**Problem Description**  xyzoffset was a mandatory configuration that was needed to run windy.world  but was actually not being used by the plugin    **Solution**  Remove `xyzoffset` from `windy.world`.    Found by @tstastny 
PX4/PX4-SITL_gazebo,830,2021-11-23T10:16:42Z,2021-11-23T13:16:11Z,True,2021-11-23T13:16:11Z,a1d9dfaff0b081aa3748be9300d0f07149bee8ac,1,2,1e2aadf5ec4e543091a464285b568ba0ed1a32a8 86ea699ca3c5e45f5de3d89e8f49c104c44986cc,,Windy World Fixed Naming of Parameter according to wind_plugin cpp and added missing ones ,Fixed wrong naming of `windGustDirection`  which should be named `windGustDirectionMean` to have an effect. Also added some missing but useful parameters into the windy.world from the wind plugin.  Documentation should be changed accordingly (https://docs.px4.io/master/en/simulation/gazebo.html#change-wind-speed).
PX4/PX4-SITL_gazebo,831,2021-11-25T13:49:09Z,2021-11-25T15:08:40Z,True,2021-11-25T15:08:40Z,ffb87ef4a312564cf91791bd5a9d683aacd085a6,4,1,e86c6f64c6954b384235ca859c2455e641217af2,bug,sync baro and diff pres calculations in airspeed and baro plugins,**Describe problem solved by this pull request**  1. Airspeed and barometer plugins had inconsistent atmospheric settings. -- this would lead to scale offsets in the airspeed calculation on PX4 (due to inconsistent baro  temp  and diff pressure skewing the onboard dynamic pressure calculation)  and consequently an oscillatory wind estimate.  2. These plugins are a bit tedious to read/understand what's happening.    **Describe your solution**  1. Synced the equations and default settings for the plugins  output differential pressure is now consistent with output absolute (barometric) pressure.  2. Started to revise code style  in particular:      - there were some uninitialized variables in the header      - convention for constants (all caps and underscored)      - variables (always lowercase and underscored)      - more verbose (explanatory) variable names      - more comment based documentation (e.g. units!!)      - a brief reference describing the atmospheric models used.
PX4/PX4-SITL_gazebo,141,2017-11-24T05:50:20Z,2017-11-24T10:01:12Z,True,2017-11-24T10:01:12Z,594f179e0302e714454d6f83d5df1f34312b1f14,6,3,2925148b816004c17a8ebc1aca6145b39c229bee 79638ee44b3f96f51e385d5619992853be44b423 c48348e023ac04357fc1893d7d43875ebef64e4f,,Motor failure feature with new plugin,This new plugin `gazebo_motor_failure_plugin` and a minor modification in the `gazebo_motor_model` plugin will enable to simulate motor failure in the robot model in real time by subscribing to a rostopic `/motor_failure/motor_number` and fail that motor by setting `joint_->SetVelocity(0 0)`.    Here is the [video](https://drive.google.com/open?id=1p4Cj_Fk8N_ceWpK3yXD9K1SB_gVV8hCy) of this feature working.     **Note**:     1. Use the new plugin **only** if you want to use ROS to publish. If you want  you can directly publish to the gazebo topic `/gazebo/motor_failure_num` and the modification in `gazebo_motor_model` will take care of the motor failure without the need to use `gazebo_motor_failure_plugin` [_Just publish an integer number (motor_number+1) for the motor you want to fail (as 0 flags no motor failure  thus if you want to fail motor#0 then publish 1  or fail motor#1 then publish 2) as shown in ex:_ [ROS cpp Publisher](https://drive.google.com/open?id=1sr4UHeCFDqJyZX03hIKP86zymGCCaluj) & [cfg](https://drive.google.com/open?id=190Mdq-2zdGiCqljhI_2AqJbDFN8huH-0)].  2. Set the `-DBUILD_ROS_INTERFACE` option to `ON` in `CMakeLists.txt` to compile the plugin `gazebo_motor_failure_plugin`. You just have to issue catkin `clean --all -y` to delete the `build`  `devel` and `logs` folder. Then issue again `catkin build` to do a clean build. Also  not forgetting to source the `setup.bash` (or sh) of your `devel` folder.  3. Tried to do `joint_->SetForce(0 0)` but didn't work.    Any suggestions to make the code better are welcome.  @TSC21 Please review!  Thanks
PX4/PX4-SITL_gazebo,832,2021-12-06T10:45:56Z,2021-12-06T13:07:50Z,True,2021-12-06T13:07:50Z,27298574ce33a79ba6cfc31ed4604974605e7257,1,1,31b44a791ea59656fbdf0650727ed49bd4413437,enhancement,Plane sdf reduce flaps and aileron effectiveness by reducing the anle to lift ratio,The plane was overshooting the landing point by a couple of hundred meters as it was just happily flying level at a thrust setpoint of 5% and very low airspeed. This PR improves the situation slightly by reducing the effectiveness of the flaps  thus the lift coefficient is smaller and more realistic.  Old:  ![image](https://user-images.githubusercontent.com/26798987/144832296-34d02fbf-cae6-4559-a0f3-778cea9449a5.png)  New:  ![image](https://user-images.githubusercontent.com/26798987/144832415-bfdb794c-583b-4b04-8cc4-382dd8e68b44.png)      If I got it correctly then we currently split the whole wing into 4 equally big control surfaces (2xflaps  2x ailerons). If we instead can split it into 5 areas  where one is the non-moving "wing" part  then we could tune it by just adapting the surface area of the separate surfaces  instead  like now  tune the effectiveness. Sounds a bit cleaner to me. Realistic stall simulation would be cool as well ofc:)    I've also reduced the effectivenss of the ailerons a bit  seemed to high as well.  
