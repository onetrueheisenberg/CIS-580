Project,PNumber,CreatedAt,ClosedAt,isMerged,MergedAt,MergedCommit,nFiles,nCommits,Commits,Labels,Title,Body
nasa/fprime,6,2018-05-12T04:18:06Z,2018-07-30T17:18:48Z,TRUE,2018-07-30T17:18:48Z,a35796fa07aa9d90549931d4976d0ad70b4ec14a,7,23,efc7c739fd7c6936b3eb23608676dc1521d55049 0071dcb33614ccb194b92dae8930a2c38187b9b0 1c6252c2ebacc5729a36977717c022e6c70d7041 aa0bafa6e3ac79f182a73dfc11f16df0f6737ce0 36e9942ee4147789023d5482eeaca83b1ec1e3cd 7fb2e8f6a332cabc8e0d93b7c64c53750a09eb72 85b3e0ae37b6e5eb2edb872d2bb8af79076918f2 1ed8f4d3eba2eee5bb799ba067f174fa3d62895e 965a38b973e6387876e33b2625525a460b50c449 55414d2eb2a00f9df444487b13756211d8264379 7cf9f33ed3abe9f98819f7131908072f230c04fa a22b8308208bbe0e38938fdfa8ddaffa878e8466 55b4be58f6c4d13e7d31094203dd09e464be73be b6762664bb33148164234833e8c064cb41ba0b14 91c34ffbc74c8971faa1d29b47342ba346a561e7 15d28e18dfdc08c6848e33f81827842314057fdd 2ba2e8ca22a2a09f37a573e665fc706b2bb90b75 78a01af9d70fa45a33aafe5c12d924c2df7e1cf0 84b08852e8a60a5f2b7cec23aed945046df2fd52 49859fe10a94cc67333a06b8378386b525ca7c2a 512888ce399780e904a8f4a59a6a3ec0a4fd894d ce79f3a6dfcb3796f990a09b7342e34f7b451cb1 7564dede3841bac4f5d85f25c98e1a446f855e32,,lestarch landing page getting started guide readme pointing to documentation,This pull request adds a GitHub pages webpage that gives basic information on F'. It also adds in a getting started tutorial that walks new users through creating a component in F' and wiring into a new topology.    Finally  it updates the README.md file to point to this documentation  and other available F' documentation.    The sample webpage can be viewed here: https://lestarch.github.io/fprime/    Note: the README.md file is updated in a way that the new links will not work until this request is merged  and GitHub pages is turned on.
nasa/fprime,24,2019-03-01T20:52:47Z,2019-03-01T21:42:34Z,FALSE,none,96691fae79afeaf1719f5a542b88035036acce3f,17,3,0df0456c5912c1f478691e58fb69ba719c59223e 2e5c0e9eae710fd10ff56a166e2cdbe252d24b77 b3df726a67c5cdffbe978c475240ff0674dc5974,,TCSHardwareController,I completed steps 2.1 and 2.2 in the tutorial found here: https://github.com/nasa/fprime/blob/master/docs/Tutorials/MathComponent/Tutorial.md#21-port-definition
nasa/fprime,56,2019-06-27T17:42:20Z,2019-09-03T18:14:34Z,TRUE,2019-09-03T18:14:34Z,0982c146b8b020bf32880f08c81916a6c14ac7fe,1,1,53d06ee55d75957d7a77623642ea33d6f340df70,,Fixed reference to seqgen py issue 25,* fixed the outdated reference location of seqgen.py in compile_ref_sequence.sh
nasa/fprime,80,2019-09-16T12:05:41Z,2019-09-18T23:00:46Z,FALSE,none,1c2875ffd685948c39e06683ed32b13d43dff09c,5,3,8896e49e04f00d8b2d49e40d499a0fd3f7d999f6 71f6106864fe7874f3bd30452feaf3696ad14c5b 3e6d3b80b1e6e74d10ba4da24ba9175e61c5d3d0,,Updates to raspberry pi tutorial,Updates after completing fprime raspberry pi tutorial  changes to work with new file locations  bash shell  and general clarifications.    Confirmed working with a fresh install of desktop Raspian buster on a raspberry pi 3.
nasa/fprime,83,2019-09-18T20:56:02Z,2019-09-19T21:46:38Z,FALSE,none,ec8e574e7fe6c543742ce934da91dd5c4bad14e7,5,10,dd9af6a21bd96589594952a4143caa13b01f34a7 5de78932b76b27121e81c22200521c6dab832437 aba45ade1209df8cec47fb8b2b9a6685fcc78c2e c1e846d4ce5c24c0fff12c48eb1a950bddc3e3be 9b1a0212fd388dd6421fc75a28ab215e17f3a2e2 2c1559e4039f88b2f72564785814615a928c4b1f feadc92b6897fab66972e26771fa934ee62dc712 bb4a909e577fc7fc3c9f1cd603c856acf5bace69 c3332053e1992ea1b502422d28bcc0c2161a30da 1d566f6f850116451e44e85426cb4084ce0afe78,,Devel,Working updates for local build raspberry pi tutorial with some conditions:  after `make rebuild_rpi`  you have to go to the `Gds/src/` directory to run (`../../RPI/scripts/run_rpi.sh`) because spawning the lxterminal for the app doesn't maintain environment variables (namely `PYTHONPATH`) from the previous terminal. If you spawn from `Gds/src/` then your new terminal will have the `appwrapper` module in its path.    If you run in gnome-terminal  environment variables are kept in a spawned terminal  but I think this is the exception just from messing around with my mac/lxterminal on ubuntu. To maintain the environment variables and keep everything isolated  you may want to `printenv > ~/env.temp`  then source that file from the spawned window  then delete the file.    Minor update to the `run_deployment.py` file as a `proc.returncode` of `0` is a success. A few other clean ups just to make things easier.
nasa/fprime,90,2019-11-01T19:27:36Z,2019-11-01T19:58:23Z,FALSE,none,8043ea278a0dba7bfb7e0e1fadf84c22ea018fcd,1,1,a4b95ac7f2a0253221e6e7d637fc600430592264,,WIP fix validation call from cmake,Resolves #89   Also remove trailing white spaces.
nasa/fprime,96,2019-11-18T22:51:14Z,2019-11-18T23:17:38Z,TRUE,2019-11-18T23:17:38Z,ac30af112317caa2c52d96f5a9c5065369a37fed,243,128,de5101afb93e4330453ca8fb6082a706bf6be8dd 3c616410d21cb4c05ace92539f1318d25c30a8d9 94726a7c730e8c6f297d9c937d7dce82e6d8422d b38a22cd44dc160bfbb4ff359e31a8020b52a73f c42f8ac7a0176721997ba8ab051d366de075cc5f 20edd5023c14ac6e9d9cdcceb4f6528113be495b 3b31d1cfaf7aaed0ea67557f937e3c6781c8ab0e fcbc0cfcbab3866cd520ec5216cf94362a11cf4d 545dfb402420f6f4d34e6bdf66f16e25683fda12 eb516e0bb345cf7a91532f6f7b97123bfeba845f 1e9a41ec751c1fc07d92d521ee91b1e8d0e86064 e978c69d1ede5978b15a879f8df6e62ceb42e1ce 3cadfcfb9b3ac6f39cc4897f11485673e4c6fc76 9d2cb9438410b97679e984ed0daaa442ec92cd1c f198982f34dc0498002b30b282d518517edbbcea 0135c464bfbee8118110fff2fd16b656ecef3239 b1bd950f9ad516defa0805fe0b8c2130ff087ad9 f8bb287bd6c817eac4227c55f452ce2da3068285 1a840c4acb6fcf3f7d73db09957d09ff8f4bb67b 6392edf8e9913b410f4122489687632ea982206c cdcf03375e55f694de72e5a5ddfc0c446a0c4402 c6435f9b929b7bff152005de532ebbfaf42d399c c02cbc7703b2b5bf70e6562392d6e6320c28a4c2 4825c5f1004dc03bed164c75ac71e10197ce67ac c0214413203031635dd25987d83bf2c9fc6b4375 a30b9e7768391ff9eb0958860baec0fce8bdd10a 75ad978e10d5ddec4662ca8b4abd4e4821d63008 4b06d467b2153cdf81efd8130f5338189875d959 61ec89a8687241435b9eaf2cb89ed6fe0be19d73 2a1eb9fda11691ca371a093ee5fcecb72d922200 bbedf194b2628366e1debc0efdf01f819ea5ef2c 29a35b4724ff4dbf066c88b2a2925eec460227f0 d2969e9fe0c01b5620c0d1b3345977840f87fc5b a8fb7eb8899bd3e82f57d7bf0c8c48af9d881f7e 9d4dd8ae29978c0ffa0fd43ca3e93f77f526d54d f66ff0c34c8dfc9f2b5b0bdb3fc5b48181d58608 d6ece463ea6b11cb8be47d251ff09ffae3bff284 4b2605127540f55931264d39f41a6db9aab93051 69dbef0184977e2328c76ba5ce189622416cd7c8 b41aa1c8b7e2b24c0c0534ca4404d976aa99e5b7 7ed1e75d399f011373a622fd9ae927dac78704bb e8e22f601198672596e4df15aca9ed374829a035 983987ab153a123ed2f3d5b547354b0e48603a2d b0f35db6ae3347dc1a50ab4ce5354941edb0d61a 957aed6521fcdef5ba12efd3d3412b7829cbc7c4 e5193718a75df03cb44fb211d240c03e3c546e5c 4e7546f6065359729eef88e0f76e1ba2738f96ce 20fc9019b8db82969530a1918dbc2975b7d7a416 6b1780c568c0c107fb095187005cd4e5549476c5 53549c6220b7b5e6cec39fbda75ca03d1a3d9151 1170dfc7d55e9e0e42c047b2af29aee8c946b732 e41440a385455cd690b4b33187b137e24658e27a 6d9687a4c23e5aeef326a0b1cd04938d33fa8c24 287c15704d3035c2cbb4f81905e74ebe7d48f25d 5d9d584cbf46d6d21c5372b9f2f3d3b52530d77e eb28973a3a637331ba33ec77627092a76e3ad447 6c4325ffbcb41ef90d5128d5e33e1c8a83193b72 7fc5a783a76016ef0fe8514e7b8a19d8d21b5e80 e94332cd6b3afd3f46d2e0c7fc17764f4953e3c4 11e79da24f6c1d71bbaed9bdba4eab464a9f8c92 b2a90b833454a4a3d5edece2786e058c2d155c55 a62c5011e22fb0482d21212ca33373caba0eeb5a 8390db23764ae129326130412e292d8e7cd51cb9 c457fad23b01dbf9e8f0a0174875337938242a8a be73e75f99c8c69887c458c8ea46106b36004b08 d62b974db6cd4cea402e8699ecab2906bb537d5a 3206e68dba436d5662e6131e776b636eff3d3f6f 92e5ac31d966c0946943b4d503303b0f258507eb a5db9fa4d0c37e25e73a9b46e18815d2e7e90e26 2bef131bf9f27b4ca2dd0c3b2eb6e65614bca6fc 48a4a44ac288e5dad9df46f800c8ddb16e0744d1 834c8b9666b441bae88f0255450fc2ed8f466fc9 b89b068ef3acc501620652a30a47d11f31168677 7860b548571ffb973697e9363023020f448e9219 2a0410dbf410ab34d72e45630420b26b5d740142 db2f66fd2c6ceb6709c8bba4ca002adb2e59efea 921b581dcd2a40b943d62c28ab48d14cec0566ba 17d4db54ebab40167b3fd2596cc4d8811e70b517 788c21312da838310c44995245788fee79840e33 5b0013bce129d2a1fcc70316680f0fce52d90ec8 c2026706c631c7064620e04d27fd447d0f6523a8 1ed4ff7e8e8758bcee5fdc039b6aa9369681e687 a111c71e73487a9b845040625bfeb0169e5b7157 f54b2fff218ac4ef3e118f440ae2201373049dd5 717f5f2d130f9340e9312976be309b86430c3f16 9417a8e412b000d5834e617d790b34d5d8442f62 484f68577d4819745b3eac753881bcd3232db967 597f00972ab11b111f90b032cb15fbc476cab650 38403ecd2fc0686425b6ba133529bd1c0ef59a68 1dbbff7e1c6974ec124ab01662c324818aa9a815 01a06f328d875f38a4bbb3f2e71f08cf24b70aea 8057a09a5d8d97c50bf3ed9c7c40413e2a717fcc 4fb578406de64a8e63ae54ef9912bf25c37fa625 2c3f739767721714cae4d1385adf7a73e24ee96b 55e6ce2525654969e2c9ee3ff313b07382ee7f47 c732a2d34de69d8df156466e3ff5535c452b51a4 924a6a332af5b671ec68f55f1548badd4cb54d24 29c206780cc21f3fde121bc631eeb4657734ea5d 497c1a7eb57192be8b3c38ca26ffe2dcc23ac9a1 7dcf8e5af000986a1054171600e0f07c3601c917 97166ab0becc9e95580d04e3e17e019c41fcc0bf 2e78407e27bf06627dbce5421b737df34518b99a a737ecfb419e5941039f8b56781e6a804dc7e7f8 2be3b1892450e8c58252ba88d6f231d666b5e9e7 6fc1d580d95ff9a9048fd44606f868972e7eca37 8b49e8194feae4340549bb39d923a453c8b1f532 bbcca9dfb1fd6cb2d585cf841fd3d55f368bca16 a186ea4c34500b41d79f8bcedaec09f8e8d59536 cebf54b83086225d6dbd807e470d7fa116fbfb42 3fc3de1d842e85b746223b48651ea55e11adc086 b61a9e286910d5068cba91c085b749b008fd7c1b 1278bbb8d2b50b9fb8f18939e7bc0580de32ceeb bd48bcee8678476ace755e0d788c5142e3d027bc 4e1ca6cd066126833137c43a6a43aeab42b1b58b fb12cb9999ae9d2152529aa89de37cafb853f8fa e0a17ca533f2a0702113ebe8b86a5c98c2545dc8 d0b98fc00789799d47c8edd4c801a39f73562161 bb766514d1d01fdff70b848cec73a8a51bbc8638 007c59f95f0b333a7153713f25bf34dacc206b9e 01ff1649469369cc8f8fc48b6e3a77d54d2bcd59 6cc871610d036afe310f42b5367a898d131307da 1da3784ea4c65717d9083c1461921c1c59a37a98 5f286973b887a7dc580300e126d51249575f5510 2a9ed1cdc06ad2297f95d23d641219a72dae3d0d a988e64caa895d2600b205207341e6352c9ee7e3 a28d1d814c5872456a25db1405a06d1e4f6e6775 562592c6fc4ea2c7e6a80666bbb13aee1b49fa8e 0b6fb749b26c11dfecc1b954a080e89b52c67d8a,,Release 1 3,This is the code being released as F´ 1.3.
nasa/fprime,94,2019-11-02T00:03:34Z,2019-11-18T23:06:43Z,TRUE,2019-11-18T23:06:43Z,562592c6fc4ea2c7e6a80666bbb13aee1b49fa8e,1,2,497c1a7eb57192be8b3c38ca26ffe2dcc23ac9a1 1278bbb8d2b50b9fb8f18939e7bc0580de32ceeb,,Cheetah compile py3 fix,This allows template code generation to occur using a system installation of `python-cheetah3`.   We check if we are using python 2 or if we not using a system install of python  i.e. if we are using a venv. If that is satisfied then we use `cheetah-compile`. Else if we are using a system install of python3 then we use `cheetah-compile3`. This fixes build issues on Arch and Debian based systems.    One caveat is that if you are building `fprime` with python 3 outside a venv/virtualenv then you cannot use `pip`'s version of `cheetah3`. This is fine though  since using pip at the system wide level is not recommend in the first place. It should only be used in virtualenvs or at the user install level.    Confirmed with both system wide python3 install and virtualenv python3 install. Have not tested with python2  but I am sure it works.    Note: I could not think of a better way to check if the python interpreter was not a system one besides checking if the path starts at `/usr`. There is a CMake variable `Python_FIND_VIRTUALENV`  but that only works if you are already inside a virtualenv  defeating the purpose of the check in our case.    Resolves: #93
nasa/fprime,18,2019-02-09T19:36:18Z,2019-02-09T23:34:28Z,TRUE,2019-02-09T23:34:28Z,888b6d6bf17dd76fdb77d5bea63653b0e07745a8,23,2,65332504a4a994aece5b1f99f520430260457dd4 5f5bb42e5a05305b0cf6ea2f617e5c0eaa770465,,Update better magic plugin,This is a push of an updated MagicDraw plugin for F´.  This is an attempt to help with issue: #17 and issue #14.    This version has been tested on the following MagicDraw versions:    1. MD 18.0 SP 6 for Mac  2. MD 18.5 SP 3 for Mac/Win
nasa/fprime,128,2020-01-15T18:00:12Z,2020-01-22T21:46:04Z,TRUE,2020-01-22T21:46:04Z,9a52bebd5e280d65670770c3f0510bd247d326a9,35,27,2a1efdca7e9afcc910c581633d8895ad894412df fc06ce0f04c5bbf4322bffadaba2b91daf93fb9a 7b85f30fa581a1c34d7ed81a1e45dd850f82d8bb abaf03644ff2518fd629be77b4e9903edfbd427f 4511e53b1ae1199beacb5b10e5cae216c1c6ea09 7f623e0ac84531ea0b39fe85e4a4da2797829f41 d617397ecb5fa92c2671acb06301ac885fe98036 b50ec2e598be4b31f5c3db6204c5c0595e4e332f 3e49b9992e211e2eee8e1a853cd415f88bdbf16c 925fe88d809d1be369edc5b51860c5d426a74cd2 1ea91448b3aabc4aa31ccb468ed64e1a47f9bff3 eef0606c8374b793db0ae226262b5f9c6ed66e33 2398099c8964b79333bd889da5852541667bc058 d5062925b19fc704906b121945fa186f65b6c67a 4a7efbc189f2b26068f15264fc3887a27cb77954 9a96e6b5a323d9552b5fd69d2dd99d91fbfe8cac 37c4dcc86979af602b7493db7f58ffd5e3f18b14 78081fa3c1825dce7adc69c703034a0df99a843a d3f37938483d57dac608a7f61d6a6bd336d287ce d360870df42b07f70075951dfa0ff21464782223 83e810ba6497d613b0afa74d79dce40f0cb74e6a 091f4eb2c51abaad7bf5fa10b9df7510704b1094 5506ffe675ea2cc10a36f0a0f1997efc4c8e8edc 39a520b125f2356665dd6c5244c1a1cc4ddfbed9 fcf889908f61f694b69af773b02009d6f823343c fc342ebe522aa98691e271f16e748defb4855213 67f6157bc270eb8b6d14a3197735a24eb41f47c2,,lestarch rewritten documentation,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| 2020-01-05 |  |**_Submitter_**| @lestarch |  |**_Originating Project/Creator_**| F´ |  |**_Base Branch_**| devel |  |**_Short Description_**| Rewritten documentation for F´ and Tutorials |  |**_Effected Component_**| Documentation  |  |**_Effected Architectures(s)_**|   |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| n/a |  |**_Build Checked (y/n)_**| n/a  |  |**_Unit Tests Run (y/n)_**| n/a  |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    Updates  F´ documentation.    ## Rationale    `fprime-util` has been added as the recommended path-forward to build and develop with F´. This updates the documentation.     ## Testing Recommendations    None
nasa/fprime,53,2019-06-17T23:01:31Z,2019-09-03T18:24:12Z,FALSE,none,0fe9817ef39a05b70bec5765fb0b39925890c427,3,2,5bbd12586d838660a3356bb85e3b0d6459f395f4 9a93bf79ac964695aaced67bc3e42be2d0b5ada8,,mstarch adds tcp server binary better logging,@timcanham this adds a run_tcpserver script for running the server independently.  It also prints the log file should an error occur at the startup of the server.
nasa/fprime,159,2020-03-08T20:53:07Z,2020-03-08T20:53:38Z,FALSE,none,edf0a47d894940176dd925f01735701dd5f7cf19,1,1,9141f07a014541334de1c5677d3cf6c238f67705,,Fix incorrect path to rpi cross compiler,Fixes an extra slash at the end of the path to RPi cross compiler in raspberrypi.cmake toolchain
nasa/fprime,116,2019-12-06T15:49:12Z,2020-03-09T19:44:45Z,TRUE,2020-03-09T19:44:45Z,de098859578f2ef816c7d763b49aba811ac4d343,4,6,c35ab7ee882e2de906e731d525573b6aba560c9e 5d80ceaf7378c6500282e96486a424fb90273092 830e2a83965e9bfd0f20188c40148e5946d8f993 4424639746d5a10494ef9a724f80a79c5ec4cc59 d947dc5b6e40eb1d571920564ae8e11dfd9cffa6 674d422b63be0d0e7e31cc826fbc3507ae016ba6,,Move CMake builds to python3,When calling the python command there is no guarantee that your script will run with Python 3.  Therefore  explicitly call python3 for cross-platform support.    This PR only touches the scripts called by the Ref deployment in the CMake flow.
nasa/fprime,115,2019-12-06T15:39:53Z,2020-04-30T19:35:51Z,TRUE,2020-04-30T19:35:51Z,d72b82975ee832e814215f7798c6c83fe0a59a15,8,10,c35ab7ee882e2de906e731d525573b6aba560c9e 5d80ceaf7378c6500282e96486a424fb90273092 830e2a83965e9bfd0f20188c40148e5946d8f993 4424639746d5a10494ef9a724f80a79c5ec4cc59 d947dc5b6e40eb1d571920564ae8e11dfd9cffa6 dce6fad244fc179cc76404468dc961cb97f78072 5a158944b8b106643aaac4fe7b637d826c7b9eea aebe07aae3ef4fd319df4692f380a211148b1f87 cff1b9938083da7e98154982008eff4146639691 03ad1ac3d81eebe78c5aacb6f6c96a5b39994aae,,Add RTEMS5 support,The RTEMS platform file definition can be further discussed. Its current implementation is something that is tied to our internal build system.    I'm not sure why `netinet/in.h` needed to be included explicitly in `SocketIpDriverComponentImpl.hpp`.    For direct sync  I found some POSIX tailoring documentation for RTEMS 4 which said `O_DSYNC` is not implemented  but I couldn't find documentation to reflect that for RTEMS 5 as well.    I'm unsure whether `TaskDelay` is a good choice for `Svc/LinuxTimer`.    This PR doesn't add any support for RTEMS5 in the current build system. It only touches the CMake build system.
nasa/fprime,179,2020-06-09T00:49:31Z,2020-06-09T03:11:04Z,TRUE,2020-06-09T03:11:04Z,5685660140dd837edc0cee3466571302e5060d64,63,45,0d50ce19439796cf714b77a18ec5bc61fc50ba15 0c60edda95da50b3fa7704959ea0a243c4c5083a 38593d881c548035f2dd05551b28a1f412d18e08 0b3df6677ddd91f981f272ed9b6bd115638c8fdf a947da94d4e683b3c9a560310dc70b3167af82f0 f28c92e31d58e7e44bff09ad57d574ca5d5e91c7 dde31ce24da3818496f458060acd9df6886e31ea a36fd700aeba9e22b75f8c4cd79605d5c85001b6 b6c9dfd735ea910ee8fa61446a5ad1243f5e6c32 1d60d08b0ddee91ded71faa9c26ef0774b0902e6 926c219e151ee04f340241a85e0ee00513036d66 36a343d90260af63d4f078841f483ca345e5d0f1 828786df8fe4c3b5938463b1be69c43addc329ac 8f939eba21a18b5c2b276c1fcbb9bf02e215a873 457eddaff120f15a8ee9a9847516e9f8850b34b0 83b090676f723040983229cc72472cf55312285f e59f6deae83bdef67851048942faa4978ed1632a 0c890c1e11ac1f255a3c742dc6d10a4f1699fec5 dc184d9d1257de685db5b90fd66c6d7b911560a8 5db58a9af966207296f268c4d76cc8b38776dfb5 a4fc39c4658eab232d8dc527868e05b894f1ea7b 1adf07f7d9728260403a3b7b4281d812f101be11 8beb60b973dd2d40b5b6cb6a7f0475ee5edc2820 49beee7b7c3cba51824f61f748db0dab22cc4738 d7c35cea4245f673f04e06fd8a739adbe6885a45 f422a40cadc7874a7de1db74ee3e5e4b4014b496 78cab8f25143fbdb59b7a94525717eea9f1c9a19 070a44b9e99695bd9000a611bf73f7a8f49362c5 df6a7b17b2a2cc604069839c5a04ee8143b35d30 618cd0398dd76954a6a4c7adad180d8be6a85ae3 e65f60ca03acb6d17eab982ea1d1009a223debf5 648c5bf2a08fde512829c228ed142cc15bf71207 d8a2b7781a08b56b55786b37c87f9717db860d1e 8d008c98ae99ac22115f3fe8fcde7fa18e46e539 888508fcfb5aae86318c4a8e7e23790e4f0bb5ff 428c191d323dc014403492cce20a5c866df38cf1 d6aa48c3744fefcb9c22029a947c3fc6428dc650 8eddbe5e9b6945d15e1f6e808baedd7f040723ab 2ac1c92ac3e69e3bdde5c8a69a0daf03f8a03eaa 03a3c92b9d4d1386fd80c2265527c7ac3d60e3c1 7db6fc25c8a688aac54861a5ef3e718c8adbfdb8 9aee9b5551b19c6dfb579d1eb3b7e15b4968d5a5 f0cbc6ebaa8b26b67eae1c3d9c1f0cf55a9a8208 4f5e6e61ef58541c3927063129510e5470002481 d2580458864e3f7034f9386bb182183c8921c972,,lestarch GitHub Actions Based CI,This PR adds in CI through GitHub Actions.  This will allow all future PRs to be auto-checked.
nasa/fprime,188,2020-06-23T18:33:24Z,2020-06-25T17:12:07Z,TRUE,2020-06-25T17:12:07Z,adedab3871a022cd4604028d6ff9295e7e1af8fa,3,3,3415f7dd731895aa73e9063a5cf6991afa6da441 de456f49acf8cece8bf0e4a882eb8ccbb593fdca 7fa0b59f09467c076ed56c4700602c2c43951021,,Pre commit hook for black and python development guidelines,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| 2020-06-23 |  |**_Submitter_**| @hunterpaulson |  |**_Originating Project/Creator_**| F' |  |**_Base Branch_**| devel |  |**_Short Description_**| Adds Pre-commit hook for black and details how to use it  |  |**_Effected Component_**| Python code developed in the future |  |**_Effected Architectures(s)_**| Posix |  |**_Related Issue(s)_**| n/a |  |**_Has Unit Tests (y/n)_**| n/a |  |**_Build Checked (y/n)_**| y |  |**_Unit Tests Run (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description  Adds pre-commit hooks to fprime. Currently the only pre-commit we run is an automatic python formatter (black). The instructions to install and run pre-commit hooks are in the Python development guide. They run automatically on modified files when you commit anything. These files are currently restricted to the /Fw/Python and Gds/ directories since we don't want to format other python code.    The python development guide also tells users how to run pytest and pylama.    ## Rationale  We want to force people to format their python code so that it is consistent with the rest of F'.    ## Testing Recommendations  Commit some python code in Fw/Python/ and Gds/  Or if you want to test without committing you can stage some files and then run  ```bash  pre-commit run black  ```  This is how I verified that only staged files within Fw/Python/ and Gds/ were formatted.     ## Future Work  Add other pre-commit hooks that accomplish other useful purposes.
nasa/fprime,187,2020-06-18T23:52:13Z,2020-06-25T17:03:45Z,TRUE,2020-06-25T17:03:45Z,9a97c45b3bb5ccc8fa7334d124459f61bd5c2b00,7,4,56e847117431700bc6a7fed4f8f93df545f72820 7aba67dc7eed5907685b5ae2f375c0f7c304b53b 39bff7a45917866a0612de2911712d7c189d26c6 fef9acf60552972290d6578c7d02143e04b064aa,,Pylama on CI,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| 2020-06-18 |  |**_Submitter_**| @hunterpaulson |  |**_Originating Project/Creator_**| FPrime |  |**_Base Branch_**| devel |  |**_Short Description_**| Runs Python Static Analysis on the CI system |  |**_Effected Component_**| /mk/ci and .github/actions |  |**_Effected Architectures(s)_**| n/a |  |**_Related Issue(s)_**| n/a |  |**_Has Unit Tests (y/n)_**| y |  |**_Build Checked (y/n)_**| y |  |**_Unit Tests Run (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description  Performs Static analysis on the Python code in the /Fw/Python and the /Gds/ directories. Currently it does not fail if it detects errors  it warns the user and continues.  ## Rationale  We want to force people to write good  clean python code.  ## Testing Recommendations  Check the CI logs to see how many errors we have  ## Future Work  Fix the errors that pylama finds so that eventually we can cause CI to fail when it detects errors
nasa/fprime,181,2020-06-10T17:00:58Z,2020-06-10T21:21:18Z,TRUE,2020-06-10T21:21:18Z,4658f2e6ded822723c20b6a7b6ad13c0cbcc29b8,9,27,46498140d5ced50dedd93aa399c89614051d5a4f 4fc7a882f5f5928652138d6ae535a03dd9da224c b833b342a79484958a0c915e928c9d1b38f49abf ba4e289cf9d9c68c96de82cf85e5545a45235bfe 2bfac9319bfdd36ce8f41690beec8fb6a76e3191 711a405853ec1cc6deb63a4ac957fbaab74c1018 97510102a575e5e60bff42ea13a2a88d0469eeee b90cb0699aba4002dfba34bfa9f16b4a70ffc28d efc7aea1821ffdaa22af3f18dc194f7292e60cf1 6a463b894ce65ad11b83b6d13ed6effc0df97bdb 750b3fccea6c315d81dabf77a094d9e7b538ac59 e35e6c86307a1af30dfb31ed2895e5f798d208dc 540dbbcdbe7178a229e22dd189b7129e559dd048 411e4502b42f5d6e72624dc98492284f62a0dbbd d0bcfaeaf8b17727fce3d01154374322cff03681 14943eff8e16d7fbbafa89c35844aaab67fc8f40 46992fb1cc879829e395f07041c8c7dda7078d47 ecd4f8ee8e8dff637285f05bc28c929a495cb990 af40318eee85c58f1bc76a3de6d93d0b0047d457 24febab68c62919730a8d55f26a9f2d1f13e567e b13a6b127886d6f4ed57dfb0ab61a81775155586 04290757e1cafd5ac65c92d47893e1d327abcd63 f3850e48dd35b23a0770d82293a743d16bce1b3b 4e15fa7c64d45dc0b4ea25b1c94021e600caa57f 4c34172a8c5344b9bc345b7421dc3dbad2e0ff6e be8e08c437ba2d4b7f3e606e250eeec47e1efd0c f0bdf31b2b182fa5384835847171d67adf9831b0,,Valgrind on Integration Tests,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| 2020-06-10 |  |**_Submitter_**| @hunterpaulson |  |**_Originating Project/Creator_**| F' Infrastructure |  |**_Base Branch_**| devel |  |**_Short Description_**| Runs Valgrind on Integration Tests upon pull request |  |**_Effected Component_**| mk/ci |  |**_Effected Architectures(s)_**| Linux  Darwin  Posix |  |**_Related Issue(s)_**| #462 #257 |  |**_Has Unit Tests (y/n)_**| y |  |**_Build Checked (y/n)_**| y |  |**_Unit Tests Run (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description  Refactored the execution of the gds in fputil.bash so that it runs with Valgrind to track memory leaks.   Fixed the memory leaks detected by Valgrind.     1. Deallocated buffer in Ref/Top/Topology.cpp  2. Deallocated the threads of the components in Ref/Top/Topology.cpp by creating and calling a function to call pthread_join(thread  NULL) in the ActiveComponentBase     ## Rationale  Leaking memory on a spacecraft is very bad.  1. Buffer was never explicitly deallocated so it leaked memory.  2. There are two types of pthreads. Detached and Joinable. Detached threads free themselves as soon as the thread terminates so that its ID and resources can be reused. Joinable threads stay in memory waiting to be joined to other threads using pthread_join(). Since fprime is multithreaded we must use joinable threads. The way do deallocate Joinable threads is to call pthread_join(thread  NULL).   ## Testing Recommendations  Insert memory leaks within components within the Ref app and check the ci-logs*/gds-logs/valgrind.log to make sure that valgrind detected the leak.  ## Future Work  Run valgrind on the the UnitTest Suite
nasa/fprime,190,2020-07-07T18:27:21Z,2020-07-10T21:34:10Z,TRUE,2020-07-10T21:34:10Z,14aed426dedc6fc40a089e5e02a283c8c23e10c7,74,16,8ccf622629f8f3c30797fb84ec5a6fe1f931ddc6 53676ee6b68e13cff86006a9a7f4b83fa08944d2 3fbf687d44dba41fd8dd9af7cf1bbf6b80eb4831 80f75d0cdfdb76a79744d26f4e85790c97a154a8 9f8bb10dc89cce744462a5af7fc4270c0102f050 18f02e54eacfd2f375ca02eb9f2495e8ef425a30 07ccd3d62e741eba1be4858adf44cd0356817699 14908ff1768189eb653b4c56c0345e4f0ac668fe 9b426bb76f05d0138fd2e88fd1d7e4432f037b3a 38482be7bc119960fe4e63bfd6f59cd4f01c2c9c cfc40b92beb9e08ca1144cd1025cb2ce46aad15d 9ae9dbbac169c7aa8b8e98d2297810095d2ce334 62387c9fb4916e125621685aacb5344223c7c9be 9ce6807974a4a65e713f98cf9bf6b71cacac60e6 c2fac38c1c38d5890f06083c66a6a8429a33cb0c 22beb86adf55bbef10705ea3f08eb7d68de89bef,,Fix pylint issues,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| 2020-07-07 |  |**_Submitter_**| @hunterpaulson |  |**_Originating Project/Creator_**| fprime |  |**_Base Branch_**| devel |  |**_Short Description_**| Fixes python issues highlighted by pylint |  |**_Effected Component_**| Fw/Python and Gds |  |**_Effected Architectures(s)_**| Posix |  |**_Related Issue(s)_**| n/a |  |**_Has Unit Tests (y/n)_**| y |  |**_Build Checked (y/n)_**| y |  |**_Unit Tests Run (y/n)_**| y |  |**_Documentation Included (y/n)_**| n/a |    ---  ## Change Description  Fixes hundreds of little pylint errors and warnings within the fprime python code base. Pretty much every python file within Fw/Python and the Gds had some sort of warning. Many of these were wildcard import issues and naming issues where variables were redefining private ones.  ## Rationale  We are trying to improve our python code quality. Currently our python code has the second lowest rating of D on [lgtm](https://lgtm.com/projects/g/nasa/fprime/). Meaning that we are in the bottom 5-25 percentile when compared to projects of similar size.  ## Testing Recommendations  A couple new pytests were created and updated so you can run those as well as anything else that runs python code.  ## Future Work  This fixes a majority of the original 902 issues. However there are still many more that should be resolved.
nasa/fprime,191,2020-07-14T18:59:36Z,2020-07-15T18:35:04Z,TRUE,2020-07-15T18:35:04Z,0c13d47dba32f63b735d3fea267cc594e0543f3a,36,10,db0c6346f0352ea2727755cb7fbdb462dff915b9 e4cfe76e298c89f200dd4dd12cbf0d8c5253ddab 5ec1566869234b56d25d2d064f28b543b5da48fe 363086e49d292d4e2c5f630bb5c1f5caa7c196df c9515a799c239f609112ab2680a8d4894f6a376e 3e619eb8736333e5cba32b0f1409735a5693ef72 13e0a3f39dde280284932ea1c8db4d4a64d60486 0268f27916405751cd15749227511383a4471b60 c74e03f489da84b5623222f2453139ad1337b67e 7573e3cf90b307a09726b9e14e477231f26b94e7,,Performs automatic semmle analysis on all pull requests,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| 2020-07-14 |  |**_Submitter_**| @hunterpaulson |  |**_Originating Project/Creator_**| FPrime |  |**_Base Branch_**| devel |  |**_Short Description_**| Adds lgtm to fprime  which automatically performs semmle on all PR's |  |**_Effected Component_**| all |  |**_Effected Architectures(s)_**| n/a |  |**_Related Issue(s)_**| n/a |  |**_Has Unit Tests (y/n)_**| n/a |  |**_Build Checked (y/n)_**| y |  |**_Unit Tests Run (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description  LGTM.com (Looks good to me) is an external tool that can be configured to run semmle on our code. Currently it is configured to run on C/C++  Python  and JavaScript code. Before a pull request is merged it checks to make sure no new isses were introduced to the code as well as keeping track of older issues that have been fixed. All of the issues semmle finds can be found on [LGTM.com](https://lgtm.com/projects/g/nasa/fprime/alerts/?mode=list)  ## Rationale  Now we can be aware of issues as soon as they are introduced as well as track our progress of fixing current issues.  ## Testing Recommendations  Introduce a new issue  ## Future Work  Fix the outstanding issues.
nasa/fprime,198,2020-07-23T17:59:36Z,2020-07-28T16:09:47Z,TRUE,2020-07-28T16:09:47Z,557b04c056c65eadd9bd13c9b10c627ed92f5eaa,2,2,7dc5b12d1a333c9370e615465614423f5ac48aeb 70560897b56dc3037dc966c99751b708b1cc8a05,,hpaulson fails all of CI if any part of script fails,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| 07-23-2020 |  |**_Submitter_**| @hunterpaulson |  |**_Originating Project/Creator_**| FPrime |  |**_Base Branch_**| devel |  |**_Short Description_**| Fails CI if one check fails |  |**_Effected Component_**| CI |  |**_Effected Architectures(s)_**| n/a |  |**_Related Issue(s)_**| n/a |  |**_Has Unit Tests (y/n)_**| y |  |**_Build Checked (y/n)_**| y |  |**_Unit Tests Run (y/n)_**| y |  |**_Documentation Included (y/n)_**| n/a |    ---  ## Change Description    ## Rationale    ## Testing Recommendations    ## Future Work
nasa/fprime,43,2019-05-30T23:02:37Z,2019-05-31T05:19:55Z,TRUE,2019-05-31T05:19:54Z,b7d69d6895c75e4ceef29f4e026ea820bf8a3960,10,2,1120370ae937af9486120636467ae4985aa1b3a6 51df62236cf48755e53afbd2fbd729ace458dfc6,,lestarch adding no app cross compile runs scripts to RPI and removin,This fixes the RPI scripts to work with the new run_deployment script. This only only adds the cross-compile scripts.
nasa/fprime,166,2020-04-08T20:21:54Z,2020-05-05T21:32:44Z,TRUE,2020-05-05T21:32:44Z,718d6a5b873756c11c83f694a0dce6d7be8242a4,441,130,849666872269c89e4318fd926bb5b34d566c949a 29036fb00c043a494171b5aa195d305aadfdf7bb b19a5ee67a838b0b16cdbe87182f502d70bd5467 35b4baeb8d288380c29a3d3b2284368c6625e782 71f4a89e0e80054a8aedb62777f329af822b1394 17d4c5e072fc28b47549f5f739471ada165dc95f 12a3fd7cb3da2bfaf0497113181a0bc87a13d847 8e7ab6a23c40f24c4f3df5e86c83db834acbc164 9a83191f4b4611c4f2052eba16dcb4cd400e7f20 dec4229c36368825e03d8e5a23093733a530e66b c82ed1c2c0b277d115b8cc5bc3d9995899b6bfc4 5e0b856b1f08c35c074bc35f22572ee9f7df8098 b336dcd6448e6e7413e9627f68e46d2ceb2fc157 cd75695d4c70dc106702c17808aad42b4fb623fc 1145375c9104681b21be282316d473a7304ddc94 c91b9c2ad469490a6a7a626555384b1805909d11 dd6a67f874aebd35d730bd2e61ae7b9ae9dfd5a7 3a7bf0117d53c3fd5ad94b7eca51cd34a7cdbb26 113856fc18e07491a4bea72410e31b5cb3c22e82 f212fdc4766c27bc338fca6d7f1b7019d475cd34 08dc0c0a8050420ee2954600e445d5348d94da99 097d2c0372abc4b9168d128ef213f9e761e0d097 7b3515545ca50fe74689cc609754b480ab3ec317 8469299059886c938ad218e695908a2fbfd6eb98 f317125c6265bd3882973aa14d5080ccb70e2abc 03c7d156434af90070d835474cead278596eeff4 457afbb57bcb8fc63186e145029bb6b164db3c49 144d9c7d29a9a58285c0566394f2e83e9fa8040e bc4b28f7c0e4d6a5cd819b640aae607de954bbcc 5880ab6b178acd66d0e08476fd59b8530a0af058 588b130bc63099b31dfa3d40546e25550157db89 7df8d2d4f83e8f3eefcc5b0b53e75f430f9fb9a0 d2dbf7ec83bd61e2dcb5a8acc4e6ebaf4e1fb659 32825108d76fffb11cc234815d2c9764c506f80a b5bb77f047b7242981d7f38e12ab12f566a143a9 ce041e09f625dac133abe10532ec8ba27b1e3373 3eefbe3cdb3bfa32dd21baab4bf817c5fe992809 f4788d621b7a27a4b3c4ab27c9e50f988199e39c 0a8b49424785742b7867afd8341f3cb2c1086990 ec34298334d1b8080cb808c1457f505a85004fc9 8c8c88fcf0b1495b10a02f7d59f4277c4c1c2cfd 05b213b1025c7ead0740f862d24cf65fc028eefb 05fff3724004bf3387d3d3dbeee751c18f63607e 73799d327e09b75073ce2d7a0964fd893708b9a9 bf1db59c78a43ecadcba2eafe56769f5595645d8 3c8fe23c01ed70b66faabc3e8e482526a9dfa0cf cd750cef15c70000b160526b84821030328ebac8 0bd92223e49734efb3680ad09491c78efe7dd083 f61691e974d59f68f2ad060dd358eee4d1247b95 4c37785da51af6a4b9027a238f24099a8c3ae47d 39d6ebc845a8be947018527f231a084ec4edfd57 a31e105625a82aa855a887bb38234e12b5b7a8e7 5bfe5d3fa12011306f2787826e3a1241eebacc75 418e3587418abc8d19071e8529fd15c5a7c83ac1 ceb3abc42ce4c5c847d5a8ed264968e77d9727dc 0ef93cc17701532f96caa5214a486718a7046c8e 7a7ba5158d2575c1ee2d79e19660f933d7d5e985 a98bf5feb67993264ec17c64463295091bbc8e77 acf884eb4a70b4e3669d0e145dfe613c608655ee f5fd61149778d68f66d1e9639a1ac8ce6c5249e3 f7f03b3b95a89c90d63ee6d3dc8d3bab152c4210 31a7f1f9aa82b2d66d6413423c29dffa9304da3a 73cd277cc02a0e2f0e53573281cea0505b99df1d 7f90f7705bcd24b6c571dc99196788044097ce7b f2d500f62eaa41911d52ff91aec19c2527daa5b4 ebd923ef1f89d9833f6d2182d0b96b9ff91bc3b1 ac303975f75f2cfa2f8a60cf07dacf0eaf514e27 2305d1b09af2309d1216b16b7d764bfb5d8eeb5d aa27c8fcd48760ef246614a1778849309f90808a 119c1458fd03b32914a0b22efb31934c91f404a7 6a717cece150cdb454071487eeb3969cdd211bb0 87155169cad18c3ed79a9a1d2d5548e6c4ddee7f a92cf533a8375a8b21197313e7aa21c797c5923f 543f2303f47dbc350ab3a6dd8439da440a78c4f2 ca24980477f3af1111a8546c1fe27262e76f97e1 fa099cf71ddae639444eded155c888102edb83a3 774b5242bfdd0e89aef607175050c6fa7c453134 208fe6ed090eae077406624e823908b32836a8f5 01f5ee6ab2aca384608d98e085dbf29c3d6a9682 fa53aa1eecec7f9bb498772ce7120b2152838e07 21cc33227b34fa7716cea55e896783bba75dc97d d78570d66008e5278f218b69c6a81c7eb124964a 5fd3749c2bb74750edf4f7afd22f732a83a09475 08d4611d4373225bf1437a7eca9e72ebaa54c603 da5bfe6527606f821a5ec5a67391612b50ba40f2 83e218ab42ae9719d26f251bffa548941c48f6bb d0babf4f8a49486947874f34620225e355444216 c81553068a32926f93fb89d46c87ccb1c8408786 907193340b3a9b13d3f8dfe2f73ac74d7432943e 33377bbfb896b55e890be8afba68058a151ef60c b88f97d5e850472fe235ec9cc48c277cc7a23e63 b5893bc9147ed78b25e22d1ddcd369ec8e97c269 ae9476011b5c205a20576db58499b37d6f4209ff 47e1656c90aa91046a8758972c1951b8daa5db03 ae406535da2f0388c0d074b5bb3a08eaabe1e3d8 57c6448efa17702d82829cd322c15b9f580f2cfa 3dd9ac98f9679283de52d99cc2e5a23fff1c27f6 61183fc9d0e27d7e6f2566e31341f0f582b3c517 639c52311210dd2478cf8089e7e2d2998ed596aa 90b7d4df5a6f15a7af266ca9bffe4963f57ca9ad 2d860a8990b2d0ad1812671e2e502d3364d507e0 32c37e302d7cdffa313da17fd3fb33f39027f8a2 95fe2afb320083a9ccb75cca0ed5367958f0f63f ec8c93921b9b6fbbc9027a3f1f417520fa97cc09 fb5ede94db6bc0f16e3be0b48d800b49ae5e8416 26d04d413dbbdf1afc71be3674d9cbd8336b4e30 7848e3b777b5231a2aa0ec459c8365ad7f8393ca 84ea3dfcdbd03d6435832d51c0f6c1ed299fafd8 97e26db5c950aa88824eae2d453fee91ffea5454 2dde68086dcd2020fd7884a64f48f5bb42d4c2df 8f8897c374e8f3da24eec3e13b254866f65859f5 8ede0ebc6995fb21bb9d21201d4a0b59e50e8be5 91a54292e39ea12efd37869f2c52a080ba1bbe4a 405bc9d4e40c24f1a572acb637f242c52a3cc169 e326382ba2d3d0e3f965a9c0984ff9ade0ed404a 7b979681b32ba43c3ec6b7b87287a21c650a8ebb 3af7756879f648bdaa07463726d67e540e1d67a7 679c2854ea3def8aede4af8e01afb82f5fd11c7f bf4211748b34a910d0d3f4aca00a6116b25edb93 e57c0ef89fa1cd877f9cdba46bdd4e7a455184fb 595effa66c261ec57e45cb43d5de3ecdce31ef85 8e19ffb1a64d1d41352eabcd6efb89bc841086d5 352c59773ed57e378672e94376d615f352875740 305a4638c7526995ecc27ad7831c547fb258b214 09ad97704a6dcd5b5895b1b592e07db9c4ab7585 a14f0641cebc3db496ab5c65743f4414c2ea2e8e 0ec6c69553accc1d6d860cdfbe15b260336e04ed 40b6152d11c92fef72b91416b328b961b032de9f e6ff61a4c5ace061b6da6d21f88669bd0be6f274 9415b229698d1807d08efc0ff3f7f292683ea428,,lestarch release 1 4 prep,This PR brings in changes for release 1.4.  It acts as the initial export of the code.
nasa/fprime,152,2020-03-03T23:13:19Z,2020-03-03T23:29:29Z,TRUE,2020-03-03T23:29:29Z,c627bef86bc9b162f36ce9b1280e278fd53c2b5b,5,2,bbc6011b9efed6eb41f0b96c9b2a0b177ef8e045 b2a0c31eb8573c98e2222cec09435e70b4dc15f2,,lestarch formalizing Python 3 5 support Other versions are end of life resolves nasa fprime 103,This moves our requirement to Python 3.5+.  This is consistent with Python's end-of-lifed packages.    See: https://devguide.python.org/#status-of-python-branches
nasa/fprime,129,2020-01-23T22:43:18Z,2020-01-23T23:49:54Z,TRUE,2020-01-23T23:49:54Z,9faae7daaba154896756ed5fdabb7d68beca27ec,15,16,30e1271c6fb6248bfa19efa1603c7a7e6ac54dfb fba02c4ce7b2005d2ae796c5477a49219e96020c 3fdd8eb6fbb61ffa9b21ab8cb52fa591f3580fb6 ea0254dadd427c42191d4236f4f877b6ce72b27c b415e3c04ebfd8242c11f1d39870a66a052eb94d 723e3c5ef289437dc241526f6b82bf09cdb49c24 4ca32e4cde6f225b9591d8b92c828de205ce026b 67bfa4ad3410fd59b985860b4e1fe246f9b038d8 50a0cd579d32a337b033ab3d2ae7a97c0a116915 8dc2f21b9827c635c396168bbe186c3e03ddfc82 9c498b69a31872d7a20a906d45e5013ed1d1a30a 191e73be68cae4d728daded2f9fe9dccf5b8d7be dff00357a987ada1c26f6963ee53a365054c70f2 5544b5d67e451a194607eacc509485c0c34d4eb4 a7d83f4433fdaa4ee98d7a92c7665a696e809c09 858ba38b03f974fee250033f959a38109e4da2f3,,lestarch better webpage,Updates the webpage and links.
nasa/fprime,202,2020-08-06T16:43:43Z,2020-08-06T16:53:53Z,FALSE,none,920da3c10f50715527c7902612cb91f7e118f9b2,1,3,a5812ffa503acbba44b14fa432d24288934c8686 d25f7336915d03a0f7d8f68d145b597aa3b453fe 28979340c26ac1018a36789c67d17952429d5bb8,,Docker update,Allows docker to begin with the fprime-venv launched.  fprime-util displays the expected message and in opt/fprime/Ref the generate and build commands can be run.
nasa/fprime,203,2020-08-06T17:26:33Z,2020-08-06T21:20:07Z,TRUE,2020-08-06T21:20:07Z,dee24b0970ebb091117a44da4898764b7785ee63,2,6,a5812ffa503acbba44b14fa432d24288934c8686 d25f7336915d03a0f7d8f68d145b597aa3b453fe 28979340c26ac1018a36789c67d17952429d5bb8 725cec66e2d93d1bdae1cf706c9eaab133638873 7935f57caa7078fc5c3a144bbf31649863d0d5b2 bbce27c3da0d85c71128811a117bb2b3c54b8089,,Docker update venv,Allows docker to begin with the fprime-venv launched. fprime-util displays the expected message and in opt/fprime/Ref the generate and build commands can be run.
nasa/fprime,242,2020-11-10T01:47:31Z,2020-11-12T17:12:09Z,TRUE,2020-11-12T17:12:09Z,85cdb255e4214e4901a00dd1d461aec57eb1f4da,27,1,20b5f2950c5f264a1be3d47e0e94a69518d7aeca,,Packaged build artifacts into artifacts directory,Currently  `fprime-util install` installs files into a variety of different  locations  which makes it difficult to archive all the build artifacts.    Now  `fprime-util install` has been removed and `fprime-util build`  automatically ensures all build artifacts are installed into the location  provided by the `install_dest` settings option  which defaults to `build-artifacts`.    It has the following structure:    - <PLATFORM>/bin: deployment binaries  - <PLATFORM>/lib/static: deployment static libraries  - <PLATFORM>/dict: command dictionary  autogenerated html command     channel  and event documentation    The GDS has also been updated to automatically use the settings.ini file to look  into the artifacts directory to find the deployment application and dictionary.    Resolves #236
nasa/fprime,248,2020-11-13T00:58:31Z,2020-11-13T01:24:06Z,TRUE,2020-11-13T01:24:06Z,8693a16aedf2abedb79509dbbca1d24733746a0e,1,1,761e3337f6c4d0de602ad4d6c1a28df29237e1b9,,mstarch repairing LGTM configuration,This moves just the LGTM fix to master such that the C++ build is reworked.
nasa/fprime,253,2020-11-13T22:13:30Z,2020-11-16T18:34:29Z,FALSE,none,968ee6564ae4958985b8f555c7afd75f13803c18,2,1,86d19d5da90ff16e61fd18ffea533ab35cad0134,,Create module source and dependency graph during generation,During cmake generation  every module will generate two file - a source file list and a dependency list.    These files can then be used by the metrics tool to generate source lines of code (SLOC) reports.    The SLOC tool will look for executable modules (denoted by ending in `_exe`). It will then start at the executable and generate a report by walking all the executables dependencies.    The tool will generate a per-module and overall SLOC report with the following data.    - Total lines of code  - Lines of xml code  - Lines of user-written C++ code (comments excluded)  - Lines of F' generated C++ code (comments excluded) (as matched by `*Ac.cpp|hpp`)  - Lines of code per file.    This needs a cmake unit test  but I wanted to get the design reviewed before writing tests.
nasa/fprime,266,2020-11-24T18:58:19Z,2020-11-30T22:27:00Z,TRUE,2020-11-30T22:27:00Z,8e634e2b9f5f9b135bcc44f891b585360bb7a4cc,2,1,38350ca7d31b759f2d00f787081cc423466f9b5c,,Fix dictionary target dependencies,The dictonary target wasn't depending on the topology xml file   so changes to the topology weren't causing the dictionary to rebuild.    The autocoding step also generates dictionaries as a side affect of  generating the topology autocode (might be worth considering if we can  somehow combine these steps so we don't have to run the topology autocoder  twice). This could sometimes run after the dictionary generation step   leading to leftover dictionary files in the source tree. Adding a dependency  on the modules autocoded files (including the autocoded topology files)  ensures that this step always runs after the topology autocode step  and can properly clean up.
nasa/fprime,304,2020-12-08T20:29:14Z,2020-12-09T18:06:56Z,TRUE,2020-12-09T18:06:56Z,c4d06c167ee8d6464b5da20d4b58a955c2dbe5b1,5,1,24d6ab2db9fdaf38a96ae23fc7aa0651347cdc08,,Separate fprime util generate for different build types,As part of this  I got rid of the `--build-type` flag and instead had the build type default to RELEASE unless the `--ut` flag is passed  in which case the build type is set to TESTING. This should allow us to add a `--debug` flag in the future and support a DEBUG build type.    This plays a little strangely with the fprime-util cmake targets. I thought about having the cmake targets use the global build type  but ran into some obstacles:    - Most targets only make sense for a single build type. I.E. `check` will only run on TESTING build types.  - Even for targets that make sense to run in multiple build types  I.E. build  by using the global build type we lose the ability to show all the potential target configurations in `fprime-util info`. So if you listed targets you'd only see `build` and not `build` + `build --ut`.    Instead  I figured the simplest solution was to never use the global build type when building a cmake target. Instead  every cmake target has a specific build type it can run against (as opposed to a list as before). The downside of this is that we have to specifically to list every potential target and build type configuration  but due to the limited number of build types and the fact that most targets only run against a single build type I don't see this as a major obstacle.    Resolves #295
nasa/fprime,317,2020-12-16T02:53:52Z,2020-12-22T16:15:03Z,TRUE,2020-12-22T16:15:03Z,08b535ca79fb82e3e98802337cab5c4bd4782411,20,1,bd0da2b5d838ecb7841eb3cd23290331a15de166,,FileDownlink Add file downlink queue and SendFile port,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| FileDownlink  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y  |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y  |    ---  ## Change Description    SendFile now adds files to a file downlink queue. FileDownlink automatically pulls and downlinks files from the queue   allowing users to queue up a list of files to downlink.    A SendFile port was added  allowing components to add files to the file downlink queue. When a file downlink initated by a port completes  a notification is broadcast on the FileComplete port  allowing components to react when files they requested were downlinked.    In order to prevent a queue of files from saturating the communication link  a cooldown state was added  allowing users to specify a delay between when a file downlink completes and the next one begins.    ## Rationale    It can be useful to allow components to initiate a file downlink. Previously file downlink only supported downlinking a single file at a time. If multiple components tried to downlink files  one would get a busy error message. In order to support multiple components well  we either needed to add error and retry handling to every component enqueuing files  or allow queuing filles to filedownlink.    ## Testing/Review Recommendations    - There's no less that a half dozen string types file names go through  I'm a little concerned that the size restrictions on a particular type may cause problems.  - I only added a single new test  a test where a file is downlinked via a port  verifying that the file was transfered and a FileComplete message was sent. I feel this is sufficient  but if anybody thinks of test cases that would be valuable to cover let me know.    ## Future Work    None
nasa/fprime,326,2021-01-08T00:45:18Z,2021-01-12T21:44:14Z,TRUE,2021-01-12T21:44:14Z,23ea27c53b4a4375a755dc7fb73012acf93828ea,4,1,4665efb407be450ecf27afe6c1c6802ebf550170,,Add FixedLengthString Fw type,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description  Added a new type to be used a a fixed length string.  The length of the string can be modified by changing the constant FW_FIXED_LENGTH_STRING_SIZE in config/FpConfig.hpp      ## Rationale  This new type was inspired by the EightyCharString but with the ability to change a single constant to change the size.  We plan to use this for file paths but can be used for other strings.    ## Testing/Review Recommendations  The code is simply a rename of the EightCharString but the only change is the size of the string is defined in a #define.    ## Future Work    None.
nasa/fprime,336,2021-01-19T08:10:34Z,2021-01-19T20:12:32Z,FALSE,none,1db0486d3e5bb30641d92f078fab01eb430917b4,1,1,190abe47521d1ae929dfabf115aa37c5980a2d3d,,update fixes 335,## Change Description    Failing issue of generate_docs.bash when generating doxygen and sphinx is resolved.     1. The script will use a temporary folder name with a prefix that is used by fprime-util build.   2. Sphinx dependency packages are checked before attempting to run sphinx.
nasa/fprime,337,2021-01-19T20:23:12Z,2021-01-19T22:01:30Z,TRUE,2021-01-19T22:01:30Z,accf524fe6aed7cd4c189d80ae6742b8bec6ff20,2,2,13f32d1e10a7973b7c7a04b5cda7f427fbfaa4d4 ee71e271d7fa8b78b252703018650b7a9e2881aa,,update fixes 335,Failing issue of generate_docs.bash when generating doxygen and sphinx is resolved.  The script will use a temporary folder name with a prefix that is used by fprime-util build.
nasa/fprime,338,2021-01-22T00:09:35Z,2021-01-25T21:09:02Z,TRUE,2021-01-25T21:09:02Z,e1eafe53fb4d512549fd138d610a48c00da55e8f,38,34,0deaff45310efd402ee88b420283d50af16641e2 7889ac317c4449ea201ea3aac15c2e4b22f4641b dadbe4aaf559ee76710baaf3d0dc792093d99e12 596f2cd934590869d905921f0f2bbbe4c309b225 924ca13b36510a1321db3297c3e2b6b2ca030f96 f1d042a795d3bf30960bdac05f58bc901f94f9c0 54b01badb5086ba4d54c72285ee344a6b265e3b1 5f35e41b9e886d6bdebfbcea55444e3c9ba2ca39 a415962620b86159a5849f6dbab73de562d27512 64350f8f5dab23c42bd3e514219c9341fd94e3c8 ad1a1ad454ca0251575124181ed1bc1fe26e220b c14c5ce63129f64a7197203281f28e8eb63a2671 3996c0eac37a7e84dc5c7e3612a95fca7e7fbe28 5ea0d598e568d287be35d579dc145c3ab25f0769 1039960dad4e090921b51a9b80e340d85e32bdd9 774c55e3df739d91b8b4ca218f330bdd542f05a9 0bb750e301821e18ab587476ad7f9c4d25bff012 821102cc05c258f4aa0a6b418e6db482474473f9 1fcf1375155c7860dee32af982f2ed2c5272b84c eef7b30183a5b49dfba395b7941a5e89c146fdd5 ef9c56bf7aaaa8184cc8e8006360fd2e8f251cac cba8f9d5154d15fbebb9216580d4cf2673232c70 1bf9c2c7a6097bb29ee2fc689275d8de9526fe7f c40759e00a4676d4bf2fc79f42b360a7580a9426 8f1829a09eb7ce5722071b537d390d63ca65bf4b 70c53d2a032f1f2ecdc7ee74ff725a1dfa3bde96 da8f3518f4c483391f6f9869ff72f1089b98e629 9b07926957e00023753a258abfe390863cc0ffb9 5b37e13943b292e44a30e5610e874d68dfc2ff41 5eb8b38c8536914617f3949650bba04c88c79f44 23932f5bfe6dc8bd22a7093ad08c08d00045f657 5d80195c4aae105e7b297a17b2d783c0eb04c0e9 4a9fa7ad8ee533291632e0d9d8d1a90cfddb3474 1b5e8daf944bdadaf4059950a79dff939a8b22cc,enhancement,Update ground prototype,| | |  |:---|:---|  |**_Originating Project/Creator_**| Fprime |  |**_Affected Component_**|  BufferManager See: Svc/BufferManager/docs/sdd.md |  |**_Affected Architectures(s)_**|  All |  |**_Related Issue(s)_**| - |  |**_Has Unit Tests (y/n)_**| Y |  |**_Builds Without Errors (y/n)_**| Y |  |**_Unit Tests Pass (y/n)_**| Y  |  |**_Documentation Included (y/n)_**|  Y |    ---  ## Change Description    Reviewed and merged BufferManager update Pull request #283    ## Rationale    See https://github.com/nasa/fprime/pull/283#issue-529887123    ## Testing/Review Recommendations    All BufferManager UT tests passed. CodeSonar static code analyzer was run and no significant issue was found in BufferManger impl. code.    ## Future Work    The following is list of discussions  and issue comments for future work  https://github.com/nasa/fprime/pull/283#discussion_r533802384  https://github.com/nasa/fprime/pull/283#discussion_r533862652  https://github.com/nasa/fprime/pull/283#pullrequestreview-542474363  https://github.com/nasa/fprime/pull/283#issuecomment-737471143
nasa/fprime,346,2021-02-01T22:59:54Z,2021-02-02T01:35:33Z,FALSE,none,e6d4aa5447c13b9d41c8a9dd530c6869ff969e25,193,87,0deaff45310efd402ee88b420283d50af16641e2 7889ac317c4449ea201ea3aac15c2e4b22f4641b dadbe4aaf559ee76710baaf3d0dc792093d99e12 596f2cd934590869d905921f0f2bbbe4c309b225 f1d042a795d3bf30960bdac05f58bc901f94f9c0 54b01badb5086ba4d54c72285ee344a6b265e3b1 5f35e41b9e886d6bdebfbcea55444e3c9ba2ca39 a415962620b86159a5849f6dbab73de562d27512 64350f8f5dab23c42bd3e514219c9341fd94e3c8 ad1a1ad454ca0251575124181ed1bc1fe26e220b c14c5ce63129f64a7197203281f28e8eb63a2671 3996c0eac37a7e84dc5c7e3612a95fca7e7fbe28 5ea0d598e568d287be35d579dc145c3ab25f0769 1039960dad4e090921b51a9b80e340d85e32bdd9 774c55e3df739d91b8b4ca218f330bdd542f05a9 0bb750e301821e18ab587476ad7f9c4d25bff012 821102cc05c258f4aa0a6b418e6db482474473f9 31e9c1b2eb717b7c0bed64c3be710d70115ccef6 6310c50bf18c0753b3eb45873f2ce5af384ebeef c507c4ab5fa3367999ee1251186d70fe4922a3ed 694ed1effc859f2ef1e59651ef558a4789381da1 1ec45150484041964d047578e5664d5bf4098254 91b3ddb533ff6916efae0d70e7d1ebf1e4b9ec63 f925dcbad497e8f6621c352d75d1ca0cd5415783 9ca1089c769a95b692df7044cd610b8674adee25 12f3700ac6ae37b580e715af5cca84cdfe7165f3 ae564e08992293b52b8e0841d16bcf1f53eee6dc bf5d6e5ca1a0835540a8e2a7e0575fedd8d881c1 2d62980c4cc2217a8cd7ebf765fc0c8774b2d4d4 26f7600da45689da8f9d57f03e3d9456a657846e 1fcf1375155c7860dee32af982f2ed2c5272b84c da8dac3388b25de32aaf2a09fe19fc9c6355cb8d ce73358020030931cb9370809d4f16b692ab6aa2 0ac132c8225dfabb3e60890d11323d4ac85fe9cc a98a47c5d3085700b6a5d135ec416dd4c210a2aa e8ae850ede66c4af45e5586658704268d6a9ba17 9ed8a1c2a44bb8ac5ed6395d6f18f3a0c3820904 81be6243fe6e8b20e23a46e0ef2e7b2e4e4956f6 698e2dd4676e4f7c4fb37e68f2c14f25e1c0c8c2 f4c10c6a00d8f423f54c08e9d818658184e9b1b2 1d6005744ed46ecedd5fa10f6ba7f9e9287b651a 8f1829a09eb7ce5722071b537d390d63ca65bf4b 70c53d2a032f1f2ecdc7ee74ff725a1dfa3bde96 9b6fed9374ce6cb3c8490b2c118ca3ff8d1471cd da8f3518f4c483391f6f9869ff72f1089b98e629 9b07926957e00023753a258abfe390863cc0ffb9 5b37e13943b292e44a30e5610e874d68dfc2ff41 5eb8b38c8536914617f3949650bba04c88c79f44 95972b3c77ac1922e95d84dc8bafdf52a9618ba0 fff0fe15f0f7069cda31e1a33426f588ac017a26 02f574222a6f80275117910fa018f2ad09828965 d90819bb1abeabb0043abc75e89b8fc819da00ed 55b0fb85ee7b422f0b380e8afc5cc47f19eff394 0d54085637b8b23dd85b55cff35458f8215de001 261ae546d93feb779536bee393caeb8c5140167d 13f32d1e10a7973b7c7a04b5cda7f427fbfaa4d4 ee71e271d7fa8b78b252703018650b7a9e2881aa accf524fe6aed7cd4c189d80ae6742b8bec6ff20 23932f5bfe6dc8bd22a7093ad08c08d00045f657 5d80195c4aae105e7b297a17b2d783c0eb04c0e9 4a9fa7ad8ee533291632e0d9d8d1a90cfddb3474 1b5e8daf944bdadaf4059950a79dff939a8b22cc e1eafe53fb4d512549fd138d610a48c00da55e8f e43e0b374692084979c44585e1b94ab0c454373f bd329272b1b0d6c9392e3b152ad0d74d34e0b25a 8cbc53654c5c5c6d22561eccf30b3ceea95cd537 c21b5c3d507cfac07cb3abe17c31e3cc765875ce aa06503fcf6a2b60e701b20cb5fd73864d49800d eb8f8442ebf9d56f295eadea8d200519a358e718 dadd119b09b5efe3b33025033ab637a6ca10d48d b913a575d1dcb314f441fdd9c394a475e61c3094 8bed570010f4448d0051d6c1f28d7bbe2929d0c9 47e468a0c27c949fab83c7f6f1d8dfb2a78da0b2 1b7ce886e090d8bc3d0e62b8d82c2a2d72ad15fb fa69f7d9559586d3fd909a523c54574b24025482 75b20391f4201e6241f42c119daf4eee990eac3a f876506f4a6f31c41aecedde7c00a8970c69551e 6206adda7163c1b074f15002b3e7643a175e66f1 564121ed76078f3685f188c9b9ca5da6383e97d6 9510b8040ad6a6dc620052566ac331c3fa2748ac 84db7d085481d85de3cc47bd670c80651b20a7f2 c23da94e2a9423e93b12ddd03776af6e4158d740 7937fb30f9d0c13bcc9a3851b7d823e18580ca49 2d4344b3a43c6e003a76b34cf9c7d83c923163ea 97883e50982a1275383a721f6c8a1c4c2aa1433e c1e4007027de22778644490f36266cfc0e20a203 38f4f7e42f647624faa18b3525cea17887c4c0b9,,fix missing GDS command name in event tb,| | |  |:---|:---|  |**_Originating Project/Creator_**| Fprime|  |**_Affected Component_**|  GDS|  |**_Affected Architectures(s)_**|  events.js|  |**_Related Issue(s)_**|  GDS command dispatch is too vague|  |**_Has Unit Tests (y/n)_**|  N|  |**_Builds Without Errors (y/n)_**|  Y|  |**_Unit Tests Pass (y/n)_**|  NA|  |**_Documentation Included (y/n)_**| N |    ---  ## Change Description  Reported by @bcmetz:  ![image](https://user-images.githubusercontent.com/35859004/106528611-e0420c00-649d-11eb-8161-83723bc9c32d.png)    A lot of instruments have similar functions  the above picture is an example  lots of instruments may want to adjust various voltage or light "amplitudes". A user cannot tell where this command came from without looking up the opcode and does not know where it is going without looking up the port number. We are going to have many sequences dispatching commands in parallel so the command dispatch EVRs should be as clear as possible.    Request    Include the component name and the command name in the event description  example for above bp_C4D.AMPLTIUDE  Add the connection name from the XML next to the port number  this will allow us to understand which instance of the component it is going to  Example Command Description:  ```bp_C4D.AMPLITUDE dispatched to port bp_C4DCmd (36)```    Now I now exactly what command went out and to which instance it went to. We have components in the system that are going to be used multiple times (the CE_FPM component comes to mind).    ## Rationale  ![image](https://user-images.githubusercontent.com/35859004/106528660-f8b22680-649d-11eb-93bc-4548760e69c9.png)    Command name is now shown in the table with the following format:  ```Command.mnemonic```    ## Future Work    Port name needs to be added.  Per @LeStarch the second request (labeling the destination port) is considerably more complicated to the point of possibly needing to re-architect all of F´  or rewriting large portions of the F´ GDS to support this.
nasa/fprime,350,2021-02-07T11:36:25Z,2021-02-08T07:53:59Z,FALSE,none,9dd262801d0f8611d256ca5861ef201a8793a09b,195,91,0deaff45310efd402ee88b420283d50af16641e2 7889ac317c4449ea201ea3aac15c2e4b22f4641b dadbe4aaf559ee76710baaf3d0dc792093d99e12 596f2cd934590869d905921f0f2bbbe4c309b225 f1d042a795d3bf30960bdac05f58bc901f94f9c0 54b01badb5086ba4d54c72285ee344a6b265e3b1 5f35e41b9e886d6bdebfbcea55444e3c9ba2ca39 a415962620b86159a5849f6dbab73de562d27512 64350f8f5dab23c42bd3e514219c9341fd94e3c8 ad1a1ad454ca0251575124181ed1bc1fe26e220b c14c5ce63129f64a7197203281f28e8eb63a2671 3996c0eac37a7e84dc5c7e3612a95fca7e7fbe28 5ea0d598e568d287be35d579dc145c3ab25f0769 1039960dad4e090921b51a9b80e340d85e32bdd9 774c55e3df739d91b8b4ca218f330bdd542f05a9 0bb750e301821e18ab587476ad7f9c4d25bff012 821102cc05c258f4aa0a6b418e6db482474473f9 31e9c1b2eb717b7c0bed64c3be710d70115ccef6 6310c50bf18c0753b3eb45873f2ce5af384ebeef c507c4ab5fa3367999ee1251186d70fe4922a3ed 694ed1effc859f2ef1e59651ef558a4789381da1 1ec45150484041964d047578e5664d5bf4098254 91b3ddb533ff6916efae0d70e7d1ebf1e4b9ec63 f925dcbad497e8f6621c352d75d1ca0cd5415783 9ca1089c769a95b692df7044cd610b8674adee25 12f3700ac6ae37b580e715af5cca84cdfe7165f3 ae564e08992293b52b8e0841d16bcf1f53eee6dc bf5d6e5ca1a0835540a8e2a7e0575fedd8d881c1 2d62980c4cc2217a8cd7ebf765fc0c8774b2d4d4 26f7600da45689da8f9d57f03e3d9456a657846e 1fcf1375155c7860dee32af982f2ed2c5272b84c da8dac3388b25de32aaf2a09fe19fc9c6355cb8d ce73358020030931cb9370809d4f16b692ab6aa2 0ac132c8225dfabb3e60890d11323d4ac85fe9cc a98a47c5d3085700b6a5d135ec416dd4c210a2aa e8ae850ede66c4af45e5586658704268d6a9ba17 9ed8a1c2a44bb8ac5ed6395d6f18f3a0c3820904 81be6243fe6e8b20e23a46e0ef2e7b2e4e4956f6 698e2dd4676e4f7c4fb37e68f2c14f25e1c0c8c2 f4c10c6a00d8f423f54c08e9d818658184e9b1b2 1d6005744ed46ecedd5fa10f6ba7f9e9287b651a 8f1829a09eb7ce5722071b537d390d63ca65bf4b 70c53d2a032f1f2ecdc7ee74ff725a1dfa3bde96 9b6fed9374ce6cb3c8490b2c118ca3ff8d1471cd da8f3518f4c483391f6f9869ff72f1089b98e629 9b07926957e00023753a258abfe390863cc0ffb9 5b37e13943b292e44a30e5610e874d68dfc2ff41 5eb8b38c8536914617f3949650bba04c88c79f44 95972b3c77ac1922e95d84dc8bafdf52a9618ba0 fff0fe15f0f7069cda31e1a33426f588ac017a26 02f574222a6f80275117910fa018f2ad09828965 d90819bb1abeabb0043abc75e89b8fc819da00ed 55b0fb85ee7b422f0b380e8afc5cc47f19eff394 0d54085637b8b23dd85b55cff35458f8215de001 261ae546d93feb779536bee393caeb8c5140167d 13f32d1e10a7973b7c7a04b5cda7f427fbfaa4d4 ee71e271d7fa8b78b252703018650b7a9e2881aa accf524fe6aed7cd4c189d80ae6742b8bec6ff20 23932f5bfe6dc8bd22a7093ad08c08d00045f657 5d80195c4aae105e7b297a17b2d783c0eb04c0e9 4a9fa7ad8ee533291632e0d9d8d1a90cfddb3474 1b5e8daf944bdadaf4059950a79dff939a8b22cc e1eafe53fb4d512549fd138d610a48c00da55e8f e43e0b374692084979c44585e1b94ab0c454373f bd329272b1b0d6c9392e3b152ad0d74d34e0b25a 8cbc53654c5c5c6d22561eccf30b3ceea95cd537 c21b5c3d507cfac07cb3abe17c31e3cc765875ce aa06503fcf6a2b60e701b20cb5fd73864d49800d eb8f8442ebf9d56f295eadea8d200519a358e718 dadd119b09b5efe3b33025033ab637a6ca10d48d b913a575d1dcb314f441fdd9c394a475e61c3094 8bed570010f4448d0051d6c1f28d7bbe2929d0c9 47e468a0c27c949fab83c7f6f1d8dfb2a78da0b2 1b7ce886e090d8bc3d0e62b8d82c2a2d72ad15fb fa69f7d9559586d3fd909a523c54574b24025482 75b20391f4201e6241f42c119daf4eee990eac3a f876506f4a6f31c41aecedde7c00a8970c69551e 6206adda7163c1b074f15002b3e7643a175e66f1 564121ed76078f3685f188c9b9ca5da6383e97d6 9510b8040ad6a6dc620052566ac331c3fa2748ac 84db7d085481d85de3cc47bd670c80651b20a7f2 c23da94e2a9423e93b12ddd03776af6e4158d740 7937fb30f9d0c13bcc9a3851b7d823e18580ca49 2d4344b3a43c6e003a76b34cf9c7d83c923163ea 97883e50982a1275383a721f6c8a1c4c2aa1433e 905e2d20b4290b3b986f825e3af40bbdb3705075 f2c07d376c8e708b2596b0bcad06a717714f85ef d13a454dc11f1d2f7a0d7c7c5313fe5f9fa505b8 298dbabf90a95243a3d4d5024c3140a48a9ee1ed 426aff263340a0dbab0cf4967c71edd3539c89ba d4abe4f4c0192537a4dfbcbe5b757e02fded506a,,Update ground prototype,| | |  |:---|:---|  |**_Originating Project/Creator_**| FPrime|  |**_Affected Component_**|  All|  |**_Affected Architectures(s)_**| FSW |  |**_Related Issue(s)_**|  [#348](https://github.com/nasa/fprime/issues/348)  |**_Has Unit Tests (y/n)_**| N |  |**_Builds Without Errors (y/n)_**| Y |  |**_Unit Tests Pass (y/n)_**| Y |  |**_Documentation Included (y/n)_**| N |    ---  ## Change Description    Enum toString is not implemented in:  Autocoders/Python/src/fprime_ac/generators/templates/enums/enum_cpp.tmpl  This causes the parent Serializable class Fw/Types/Serializable.cpp be used which only returns NOSPEC.    ## Rationale    The fix can be a patch similar to the following:    In file `Autocoders/Python/src/fprime_ac/generators/templates/enums/enum_hpp.tmpl` add:    ```  \#include "Fw/Types/EightyCharString.hpp"  ```  ...    ```  \#if FW_SERIALIZABLE_TO_STRING || BUILD_UT      //! ENUM toString      void toString(Fw::StringBase& text) const;  //!< generate text from serializable  \#endif  ```    In file `Autocoders/Python/src/fprime_ac/generators/templates/enums/enum_cpp.tmpl` add:    ```    \#if FW_SERIALIZABLE_TO_STRING || BUILD_UT      void ${name} :: toString(Fw::StringBase& text) const {      const ${name}::t e = this->e;      switch (e) {  #for $item_name $item_value $item_comment in $items_list:          case ${name}::${item_name}:            text = "${item_name}";            break;  #end for          default:            text = "[invalid]";            break;      }    }    \#endif  ```    ## Testing/Review Recommendations    The following is the stdout after the fix:  ![image](https://user-images.githubusercontent.com/35859004/107145243-2c091100-68f5-11eb-9e36-9e290951114f.png)    ## Future Work    Now the remaining question before adding the ENUM toString is the following:  Is `FW_SERIALIZABLE_TO_STRING` sufficient as condition for implementing the toString for ENUM or a new condition needs to be added in `config/FpConfig.hpp`?
nasa/fprime,376,2021-02-19T10:49:10Z,2021-02-19T15:47:59Z,FALSE,none,6b026355b90139f338d7857163b944853fd17309,1,1,4ddc1c5168a9cac77d521213a5c916edeb339226,,Update Linux common cmake,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.
nasa/fprime,378,2021-02-19T11:30:59Z,2021-02-19T15:54:22Z,FALSE,none,14412140a23fc7a78081f1d110e3d43954653153,1,1,a5fa211ef84de8be01df2797ffa8cb4adf845a7a,,Update Dockerfile,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.
nasa/fprime,377,2021-02-19T11:00:01Z,2021-02-19T17:00:22Z,FALSE,none,79f3c14b2fde8feaaa275cd7c549ab465be11ae6,1,1,bea594f108a07d777628f2d21a18772352c7b303,,Update platform cmake template,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.
nasa/fprime,393,2021-02-20T09:27:11Z,2021-02-20T09:27:28Z,FALSE,none,ebc2ee553fc18502ad85cc792a1782cb8bef499c,1,1,90ee811240a8f83963a96527882d19d960079adf,,Update clean bash,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.
nasa/fprime,401,2021-02-21T10:00:28Z,2021-02-21T10:05:28Z,FALSE,none,eb5e8fe58c03cf6299ee9c4f647da12b960f3bc9,1,1,cfc12af839aea80e217dfa23f4431c10ab678221,,Add circleci config yml,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.
nasa/fprime,412,2021-02-23T00:50:58Z,2021-02-23T16:46:10Z,TRUE,2021-02-23T16:46:10Z,4ecd5990a27dff09daa316190e3d820f9f3b34df,1,1,3a62897ef6ffbc460e00b532de5e3dbad0fbf6f5,,Fix typo in fputil bash,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    occured -> occurred
nasa/fprime,416,2021-02-25T12:20:46Z,2021-02-25T12:21:25Z,FALSE,none,2b35992cf3aa03bbcad197254ba766d1a492f4c5,1,1,8e3375256a3320bf5497aed8bc70fa1515bee441,,Update build test yml,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (n)_**|  |  |**_Builds Without Errors (y)_**|  |  |**_Unit Tests Pass (y)_**|  |  |**_Documentation Included (n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.
nasa/fprime,417,2021-02-25T12:24:25Z,2021-02-25T16:39:47Z,FALSE,none,f80db74c3af33f58e1e462ee63a7155f7d2c9d0a,1,1,29ee30ad209ed1b68061c81b83f3a5430a5f9194,,Delete github workflows directory,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.
nasa/fprime,415,2021-02-25T12:16:35Z,2021-02-25T16:40:13Z,FALSE,none,8051d948ef50a3be70b08e688ee5c7fbcc8f32ac,1,1,1ed08d519ebac5e55ac98e20c5bffb715935083b,,Update clean bash,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.
nasa/fprime,414,2021-02-24T14:07:30Z,2021-02-26T16:37:25Z,TRUE,2021-02-26T16:37:25Z,ada6e424b813e6434284bbde9f785656a61c8539,59,1,15249b1a4e195c89ec697f7ef0d2635681e41485,,CLEAN DOC fix typos,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| Fw Gds Ref docker docs |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Fixes (guided by https://github.com/bwignall/typochecker) some typos I found. I have not fixed everything; submitting now to see if there is interest before I spend too much time. Another reason to submit with the given set was to solicit advice on which folders should{  not} be looked through  which are auto-generated  etc.    Should be non-semantic.    ## Rationale    Fixes typos.    ## Testing/Review Recommendations    Should be non-semantic (ie  affecting only comments and documentation).    ## Future Work    If interest  can continue.
nasa/fprime,421,2021-02-27T01:39:32Z,2021-02-28T12:34:47Z,FALSE,none,6a6ab6d693e3315904e255ee4d90384defe45494,2,2,9be804fda82084c786e6d9a9bc5f49bbb854b3b9 b17e669bb362b344f6c9d623297d43a33ba937b5,,Update,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (n)_**|  |  |**_Builds Without Errors (y)_**|  |  |**_Unit Tests Pass (y)_**|  |  |**_Documentation Included (n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.
nasa/fprime,469,2021-03-23T09:05:24Z,2021-03-23T23:46:20Z,TRUE,2021-03-23T23:46:20Z,70bcfb1452b47afd7f661969f01cfaacd0c42fec,1,1,51d74c12f442b9682d1703823a92c416262bff12,,fix 466 fprime util ignores non default UT executable names,| | |  |:---|:---|  |**_Originating Project/Creator_**| FPrime |  |**_Affected Component_**|  cmake/support/Unit_Test.cmake |  |**_Affected Architectures(s)_**|  cmake ut build|  |**_Related Issue(s)_**|  #466 |  |**_Has Unit Tests (y/n)_**|  N |  |**_Builds Without Errors (y/n)_**| Y |  |**_Unit Tests Pass (y/n)_**| NA  |  |**_Documentation Included (y/n)_**| N |    ---  ## Change Description    `fprime-util generate --ut` assumes the `MODULE_NAME_ut_exe` as the default name for target executable UT.  This won't be an issue if the UT is registered with default name:  As an example line 24 of the following won't be a problem:   https://github.com/nasa/fprime/blob/e1624fd8973284aec3a1c08c26732349620c2a6d/Svc/GenericHub/CMakeLists.txt#L14-L24    The problem arises when UTs are registered with an executable name.  For example line 38 of the following will raise the issue specified in #466 complaining `make: *** No rule to make target Fw_Types_ut_exe.  Stop.`    https://github.com/nasa/fprime/blob/e1624fd8973284aec3a1c08c26732349620c2a6d/Fw/Types/CMakeLists.txt#L35-L38    This PR resolves the issue by registering the default `MODULE_NAME_ut_exe` as target name and adding all UT executables of the module as the dependency of the `MODULE_NAME_ut_exe`.     ## Rationale    `MODULE_NAME_ut_exe` is added as top wrapper for UT build so it could be called by fprime-util.    ## Testing/Review Recommendations    Manually built and ran UT of `Fw/Types`  `Drv/Ip` and `Svr/GenericHub` with no issues.    ## Future Work    Might need to optimize the cmake `generate` option to not include modules that are not related to the target UT.
nasa/fprime,468,2021-03-22T07:26:28Z,2021-03-23T23:47:44Z,TRUE,2021-03-23T23:47:44Z,0845912142ec08c5fbee320a6d55da94a993c544,1,1,7bd302e344383ad9dc42d5fc1872a031e0d6c4ce,,fix 369 Include CmdPort on components with parameters only,| | |  |:---|:---|  |**_Originating Project/Creator_**| FPrime|  |**_Affected Component_**| cmake/support/parser/ai_parser.py|  |**_Affected Architectures(s)_**| GDS |  |**_Related Issue(s)_**|  #369 |  |**_Has Unit Tests (y/n)_**| N |  |**_Builds Without Errors (y/n)_**|  Y |  |**_Unit Tests Pass (y/n)_**| NA  |  |**_Documentation Included (y/n)_**| N |    ---  ## Change Description    When *ComponentAi.xml only contains parameter and not any command the autocoder does not include  Fw/Cmd/CmdPortAc.hpp  This PR resolves the issue by adding `Fw_Cmd` as implicit dependency of `parameters` in cmake/support/parser/ai_parser.py    ## Rationale    For the rational see https://github.com/nasa/fprime/issues/369#issuecomment-803435465    ## Testing/Review Recommendations    After applying the change was able to successfully build and run the code as shown https://github.com/nasa/fprime/issues/369#issuecomment-803435465    ## Future Work    It should be discussed if command port should implicitly be added to the components that only have parameters without having any command port.
nasa/fprime,493,2021-04-22T04:00:26Z,2021-04-22T19:35:29Z,TRUE,2021-04-22T19:35:29Z,c89f85da12330ba01cc262b95d3a9fb2ed0c627b,1,1,2fabf2bbb3650afa0aba08c80e4c9a53312b8712,,Turn off pip caching for docker build,| | |  |:---|:---|  |**_Originating Project/Creator_**| Matthew Gleich \<email@mattglei.ch> |  |**_Affected Component_**| F´Docker |  |**_Affected Architectures(s)_**| Anything that involves the docker build |  |**_Related Issue(s)_**| N/A |  |**_Has Unit Tests (y/n)_**| N/A |  |**_Builds Without Errors (y/n)_**| N/A |  |**_Unit Tests Pass (y/n)_**| N/A |  |**_Documentation Included (y/n)_**| N/A |    ---  ## Change Description    Dependency installations via the pip package manager no longer utilize the caching feature in the docker build.    ## Rationale    A best practice when working with dockerfiles is to effectively utilize the caching system. The pip install steps are already being cached by the docker build system. This means that the cached dependencies made by pip are being wasted and stored for no reason. A fatter image might not a concern here but it is always a good idea to follow the best practices.    ## Testing/Review Recommendations    To ensure that the docker image still works you could run a simple test. From my end  the build still works.    ## Future Work    N/A
nasa/fprime,506,2021-04-29T21:35:13Z,2021-05-02T23:21:26Z,TRUE,2021-05-02T23:21:26Z,33da033d954bfa8634e10d741f3baf9339563c9b,6,1,f8c3cae3f0b3f0d687b08b4741c8ecaab4b34ba9,,Add default_ut_toolchain settings option,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| fprime-util |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y  |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y  |    ---  ## Change Description    Adds a `default_ut_toolchain` option to settings.ini file    ## Rationale    Right now  setting a default toolchain also would also set your default toolchain for building/running units tests.  Most of the time however  users build their unit tests for a platform different than they target their normal builds.    For example  a user may target an embedded system for the deployment but design the unit tests to run natively on linux.    Because of this split between target toolchain and unit test toolchain  the user will always need to override the platform  when building either the target or the unit tests.    This change allows users to separately configure the target and unit test toolchain.  Setting the default_toolchain has no effect on the default unit test toolchain and vice versa.  If either default toolchain is unset  it will default to a native platform build.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.
nasa/fprime,523,2021-05-06T02:19:31Z,2021-05-11T22:30:57Z,TRUE,2021-05-11T22:30:57Z,e1c243e43870d37aa75034f939aab765640cdfac,3,1,da8f11eee6a2a02483e08fa71d0125c8a199ec5e,,FileDownlink Don t return an error status if attempting to transfer past EOF,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| FileDownlink  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y  |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description    Return a OK status instead of INVALID when attempting to send a partial chunk past the end of a file.    ## Rationale    Often times file sizes aren't known before sequence execution because they're generated in the same sequence as the file downlink. This can make commands like SEND_PARTIAL dangerous because if the file is smaller anticipated  they can return an INVALD error to the command dispatcher  aborting and preventing execution of the remaining sequence.    While attempting to send a chunk past the end of a file is an error  it's very rare that the rest of sequence is dependent on the success of a file downlink (see the FILEDOWNLINK_COMMAND_FAIL_ON_MISSING_FILE option).    Returning an ok command status but raising an WARNING_HI event seems like a decent compromise.    ## Future Work    Should this be tied into the FILEDOWNLINK_COMMAND_FAIL_ON_MISSING_FILE option to make this behavior configurable?     I don't think this is a perfect solution. I could definitely anticipate some users who might prefer to abort a sequence in the presence of a file downlink error (like possibly when transferring files between different computers in a hub topology).  I think the ideal solution would be a more advanced command sequencer redesign that allows users to indicate that certain commands are allowed to fail. However  I think this fix to make FileDownlink a bit safer is the right move until a command sequencer redesign occurs.
nasa/fprime,541,2021-05-11T20:42:01Z,2021-05-14T01:47:58Z,TRUE,2021-05-14T01:47:58Z,25ceeefd30ecc1b6a01e0eefbcbf956e3d82e00a,11,1,44160148966eb3205a257dadd72529a2bbc1e32a,,lestarch adding options for stubbed drivers and baremetal scheduler,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| CMake |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Added switches to turn on/off the baremetal scheduler and stubbed drivers.  In this way these features can be enabled/disabled.  This allows breaks the hard-dependence on platform for drivers.    Documented switches in cmake/options.    ## Rationale    "Big" features are nice to be able to throw a switch at the command line when generating.  "BIg" features mean items that have a build-system and C++ component to them.      ## Testing/Review Recommendations    Tested on darwin that all the defaulting and switching and error cases work.
nasa/fprime,529,2021-05-06T19:40:37Z,2021-05-06T20:30:40Z,TRUE,2021-05-06T20:30:40Z,794ce7c6669338f708a1d6cf34f7535312efafd9,8,3,c94d1adac59794353fc0647054db8b26d795d981 fe73216a1bd6f909c0539a279b0c7fa95ceff7cc 1ee614157ffe0a3b93407a6b668cd552f1cf3ea4,,lestarch fixes 518 and associated UT failures,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| CI and UTs |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  #518 |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y  |  |**_Documentation Included (y/n)_**| n/a |    ---  ## Change Description    Adds in memory leak check into CI suite.  Fixes memory leaks that would break CI.    ## Rationale    Memory leaks are important to catch in FSW and this will make them appear in CI as build failures.
nasa/fprime,366,2021-02-12T03:02:27Z,2021-05-06T23:05:21Z,TRUE,2021-05-06T23:05:21Z,38591fbb7200ee782aa0270ee792fac1074a8bcd,33,2,7ab6b0d3ebe06088aa9be46fc4d8c922581e9107 120a42d1c311cb0f3d4523fb8c517cd75e648e88,,lestarch refactored buffer manager with fixes from 238,Co-authored-by: Timothy Canham <timothy.canham@jpl.nasa.gov>  Co-authored-by: saba-ja <saba.janamian.663@my.csun.edu>    | | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| BufferManager |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    Replaces the #283  PR with this one.  Same code  fixes issue brought up in #283 thanks to @saba-ja help.    ## Rationale    Infrastructure team took ownership of #283.    ## Testing/Review Recommendations    ## Future Work    Should design and implement an efficient version as noted in #283.  For now  this implementation work and is deemed fit for service until a more efficient algorithm is realized.
nasa/fprime,460,2021-03-08T16:16:19Z,2021-05-05T17:48:54Z,TRUE,2021-05-05T17:48:54Z,4190bab405cecec4a8d83c20cdee77d574cb35d2,46,2,8b4e870082ced90ca67357a6a4205c420031b907 251418bd864d688dbf4158464be406a7520a2195,,Update ipv4 drivers,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastrcture |  |**_Affected Component_**|  IP |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**|  y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**|y  |    ---  ## Change Description    Rework IPv4 code      See #354
nasa/fprime,503,2021-04-27T19:26:50Z,2021-04-28T03:16:03Z,TRUE,2021-04-28T03:16:02Z,e14095fb018ffe5657d41c705adb9026840fb143,3636,1,c4880e6016546e1f95852d9323758963a910f308,,lestarch removing auto generated documentation files from mainline,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| Auto-Generated HTML Files |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**| #500   |  |**_Has Unit Tests (y/n)_**| n/a  |  |**_Builds Without Errors (y/n)_**| n/a |  |**_Unit Tests Pass (y/n)_**| n/a |  |**_Documentation Included (y/n)_**| n/a |    ---  ## Change Description    We are moving the auto-generated HTML files out of the mainline.  This will prevent the constant out-of-date nature of these files with respect to devel.    ## Rationale    We get a lot of updates fixing these items because they remain out-of-date.  They are generated once per release  and thus should not be kept in `devel`.    ## Testing/Review Recommendations    Ensure documentation is still available with these items moved out to an update-once-per-release branch.  For reviewers: nothing outside of dos/UserGuide/api should have been removed.    ## Future Work    Provide instructions/automation to continuously integrated this documentation.
nasa/fprime,365,2021-02-12T02:50:13Z,2021-03-08T14:55:25Z,TRUE,2021-03-08T14:55:25Z,d438a64a2fd30848b750f87069f8905395de1e48,10,2,647c438b97f9f56dce1deea4008207b9e93b4b17 79a390613b4c19099829ee56bb9a2fde92dabd5f,,lestarch adding in static memory component,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  Svc |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| n |  |**_Documentation Included (y/n)_**| n  |    ---  ## Change Description    Add in a static memory component to drop in when buffer manager is more than needed.    ## Rationale    Buffer manager uses dynamic allocation of memory  but may be more than some deployments needed.  StaticMemory allocates using the same pattern but in a fixed size buffer.      ## Future Work    Need: UT and documentation.
nasa/fprime,442,2021-03-04T17:10:17Z,2021-03-04T19:38:45Z,TRUE,2021-03-04T19:38:45Z,bfc5f27f5d43e34f60f8775dabb562ba9efdcf50,1,1,4c9a05dccdc56b6319a6164350a186ebfa558b3e,,lestarch removing six from validation in pip setup,| | |  |:---|:---|  |**_Originating Project/Creator_**|  Infra |  |**_Affected Component_**| N/A |  |**_Affected Architectures(s)_**| Python |  |**_Related Issue(s)_**|  #440 |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    One last "six" removal along with #440.    ## Rationale    Cleaning up to support #440     ## Testing/Review Recommendations    ## Future Work    More python 2 cleanup as necessary.
nasa/fprime,364,2021-02-12T02:47:32Z,2021-02-18T21:54:21Z,TRUE,2021-02-18T21:54:21Z,035808df02706d405611b30efa396f8fb799e9a1,1,1,9a236de7885b3bb9ab1975ea0be7482d5b846c27,,fixing generate_docs bash to handle modern fprime util,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| docs |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Minor fix to documentation generation wrapper.    ## Rationale        ## Testing/Review Recommendations      ## Future Work
nasa/fprime,255,2020-11-14T23:00:55Z,2020-11-16T22:39:18Z,TRUE,2020-11-16T22:39:18Z,29e5232e5ee0e76a9241ec37f9cfc1991d548779,70,3,113bf26fe103139e4668775406f02e6087f1879e 4644aa4e5acf2c1bb737c0204d866a9c18b51696 efcb056fdcd01caefdde706b19b33a4dca11f684,,mstarch cleaning up issues detected by LGTM,Cleans up a number of changes required by LGTM.  Also removes wxgui GDS.  This can be found in release 1.5.3.
nasa/fprime,254,2020-11-14T21:36:00Z,2020-11-16T18:43:19Z,TRUE,2020-11-16T18:43:19Z,5d6c31d567284107a64f79232a2951f03cf58e6d,7,2,59ef49ef6f5d355e827b83e1f81035f985748fc7 8211fda0c819c05a53d5f9f12a97e124c4d30dbc,,mstarch updating documentation generation to adjust for github,Updates the F´ documentation generation.
nasa/fprime,218,2020-10-22T19:55:55Z,2020-10-22T20:21:34Z,TRUE,2020-10-22T20:21:34Z,6e702b31f51b8b375a2f3d2e4049ee6109af6222,2,1,94b234929aa603a3eeca9a2d8298c2ba090e9d43,,mstarch fixing impl and testimpl usage of AC constants,This fixes a critical bug in how the AcConstants.ini was being passed in for custom configurations.  In short  building works  but to use this in template generation would break.  This corrects the issue.  Fixes #218
nasa/fprime,227,2020-10-27T00:05:19Z,2020-10-27T00:23:28Z,TRUE,2020-10-27T00:23:28Z,c1b8cf7c2d49375be32d0de64c5f972ba37af20e,1,1,57f56f34cbf92fd831d7a284de7eb78033c9930d,,mstarch fixing unit test Ac constant problem too,Parallel issue to items fixed in 1.5.1 but for building UTs.
nasa/fprime,353,2021-02-08T17:00:26Z,2021-02-10T00:27:36Z,TRUE,2021-02-10T00:27:36Z,135c257d16a85d6032e900694bc7545660b3aee7,17,1,0769fa958c0bc9b2bf0e880fd31b5271e2ad1f18,,lestarch adding in GenericHub component,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| Svc  |  |**_Affected Architectures(s)_**| N/A |  |**_Related Issue(s)_**| N/A |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    Adds in a GenericHub to support the Hub pattern.    ## Rationale    Many projects ask for a hub component.  This is a fairly middle-of-the-road implementation useful for many projects.    ## Testing/Review Recommendations    UTs pass.  Check the SDD for clarity.    ## Future Work    Edit the hub pattern documentation to call out this component.
nasa/fprime,300,2020-12-03T06:59:58Z,2020-12-04T01:37:26Z,TRUE,2020-12-04T01:37:25Z,9f874a6eb1aec779fa0d804c966db50157b9f5ef,3,2,69e6b942c2898ec213e0ba5c362a826f3725a349 b863007208f9c8ff8ebe2ee81cc9968e15adee5b,,mstarch download GTest to gtest folder and only redownload if it is deleted not on purge,Fixes  #294.  Downloads GTest to framework install on first generation and doesn't redownload unless the directory is removed.
nasa/fprime,265,2020-11-20T01:36:54Z,2020-12-01T04:27:01Z,TRUE,2020-12-01T04:27:01Z,f58bd6af7eabbecc60976ba73a62a94470930223,28,4,b68ab1b94a82bd751388c89075088681daafbc6d 78d01b1a81a4d468a0b04229bd3c0d54a4a6b12e e16529a24a86e9479c9f23d86dd6534d0e1e3969 4aecffc12b3c52d7568eebad140ad384b05cb52c,,mstarch reworked FileDownlink,This file downlink doesn't have the thundering herd problem.
nasa/fprime,259,2020-11-16T22:50:57Z,2020-11-17T01:45:48Z,TRUE,2020-11-17T01:45:48Z,05141326a928d321f5b41eb1491126c4786d4346,2723,14,761e3337f6c4d0de602ad4d6c1a28df29237e1b9 8693a16aedf2abedb79509dbbca1d24733746a0e d12d9408d1c40166afa49337823946dd2ac37118 93f20bd44e923c80017757699dda5c0006a2ee10 3febcbbdc944eae94c48eb35d7b2c72f73908f1b c39641f8c8d6695c6f84e17b0d01c9c0b8ba12fe e48c45aa0425ad0e22fc661e2191fd1e6091fed4 f45c551114db289578c65a697aec7d48d2d79e05 dcc3f2a4633f0173eeca1ebe9cf7bd0f0a3e42bf bf74d79c32fe4572bce04c94cb1d8cb9219d2d57 3dd5ca72f45bc9a188a169adc65687d6a4c34436 9b13a4366e5dcd194876e54fb932dbfc78ab9b1e 79c05ad80c60292fbbdae26774c506b22a464f4f bdfbf8f05cd2601695d05c28a1e9560e8132fa00,,Update themed documentation,Update documentation with a theme  and regeneration to fix GH pages hosting.
nasa/fprime,551,2021-05-14T02:08:34Z,2021-05-14T20:29:03Z,TRUE,2021-05-14T20:29:03Z,9387c141e5f23f48a3c31015bddbfa70db1c80e4,1,1,ed0c402891aac4d84c6362f45ecd80539de256b8,,Always cleanup coverage gcda files before executing unit tests,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  cmake |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**| fixes  #368  |  |**_Has Unit Tests (y/n)_**| y  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    gcda files are generated per object file when executing a binary with coverage enabled. Make sure all existing coverage files are removed before re-running unit test executables    ## Rationale    Unit tests are always built with coverage enabled  so every unit test run generates these gcda files. If you recompile an object while a gcda file already exists and re-run unit tests you'll get error messages saying that coverage can't be merged into existing gcda file. As a nice side affect this also means that a full clean is no longer required to get accurate code coverage results.
nasa/fprime,603,2021-05-21T12:13:58Z,2021-05-21T12:18:58Z,FALSE,none,none,4,1,b5da676ba00c7f7a96aefe881971b7749ebcf82e,,Replace problematic term sanity check with confidence check,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    As per the guidelines if the InclusingNaming project https://inclusivenaming.org/  replaces 'sanity check' with 'confidence check'.    ## Rationale    The term 'sanity check' stigmatizes mental health issues.    ## Testing/Review Recommendations    All changes are textual  and do not affect the functionality of the code. Thus  this change should have no impact on testing.    ## Future Work    None anticipated.
nasa/fprime,640,2021-05-27T00:58:49Z,2021-05-27T19:10:08Z,TRUE,2021-05-27T19:10:07Z,745f5e58faa38e20f2c5e386b02fa979c7b1809c,3,1,29d69999e575e2752e83109f900a97ea5016f212,,Add fprime util warning when settings ini doesn t match generated build cache,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| fprime-util  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**| fixes #517  |  |**_Has Unit Tests (y/n)_**| n  |  |**_Builds Without Errors (y/n)_**|  y |  |**_Unit Tests Pass (y/n)_**| y  |  |**_Documentation Included (y/n)_**|  n |    ---  ## Change Description    Editing the settings.ini file requires a regeneration of any build caches  but nothing warns a user when they edit the settings.ini files and forget to regenerate.    ## Rationale    settings.ini changes only take affect after regeneration  users may be surprised that they edit the settings.ini file and don't see their changes take affect when rebuilding.
nasa/fprime,620,2021-05-25T22:25:21Z,2021-05-28T17:44:16Z,TRUE,2021-05-28T17:44:16Z,a481be08695fd86eb4d9c72674fc781989de5583,18,2,1bcf16a363e35b1180df8760a88694b3c808c2ca 3151cfa79d58794b4cf38e93b2e3663af358b2e9,,Fix shellcheck warnings,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Fixes several warnings reported by shellcheck to avoid that shell behaves strangely and counter-intuitively or giving cryptic error messages.    ## Rationale    Shellcheck reported ~143 warnings  mostly     * https://www.shellcheck.net/wiki/SC2071 -- ">" is for string comparisons    * https://www.shellcheck.net/wiki/SC2155 -- Declare and assign separately    * https://www.shellcheck.net/wiki/SC2164 -- Use 'cd ... || exit' or 'cd ... |...    * https://www.shellcheck.net/wiki/SC2006 -- Use $(...) notation instead of legacy backticked `...`    * https://www.shellcheck.net/wiki/SC2086 -- Double quote to prevent globbing and word splitting    ## Testing/Review Recommendations    [Shellcheck](https://github.com/koalaman/shellcheck) is a shell script static analysis tool reporting warnings and suggestions for bash/sh shell scripts.    Reproduce warnings by `docker run --rm -v "$PWD:/mnt" koalaman/shellcheck:stable $(find . -name "*.sh")`    ## Future Work    None
nasa/fprime,670,2021-06-03T01:18:47Z,2021-06-03T21:40:19Z,TRUE,2021-06-03T21:40:19Z,c8d00eab5be5ea93c975702a31d768c9ba1f5f2d,1,1,c9ab8b5e78800a7e1f765b53ca48874d225a1a84,,Update doxygen documentation generation script,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Update documentation generation script to correctly generate v2.0 documentation.
nasa/fprime,745,2021-06-21T19:05:47Z,2021-06-22T15:19:55Z,TRUE,2021-06-22T15:19:55Z,9d57d9179475f2354ad7fe063f44443cef207cb7,5,1,579e161f53ff11e942d6403a4040e44ec37b46ee,,Compile root cmake project with Wextra,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Enable -Wextra for root cmake project  Also remove Mac OS specific C++ flags that are no longer needed.    ## Rationale    Enables additional compiler warnings in CI and for F' developers.
nasa/fprime,759,2021-06-22T22:01:07Z,2021-06-23T17:20:02Z,TRUE,2021-06-23T17:20:02Z,568562dd9b3ebaa7a8b6addac8ee09f1140f6746,1,2,ff372c0cd3dce6e4e605bd4bcf755a4abdc0d91c 14d7e939484dff990fa47375f5a40a788eef53d7,,lestarch making CI log archive always run,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infra |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description  Log always.
nasa/fprime,760,2021-06-23T12:56:23Z,2021-06-23T17:20:26Z,TRUE,2021-06-23T17:20:26Z,7b85edcad2a5c3a466211a4b12ace28c8fe0f6d9,23,1,cbb65b8f093aef54a97069b100ad61ccb1203f67,,Add Black Formatting,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**| N  |    ---  ## Change Description    Adds the [black formatter](https://github.com/psf/black) as an additional action that checks the code style.     ## Rationale    It provides an easy-to-use and reliable tool to ensure that the code is formatted to Python PEP 8 guidelines.    See this [PR](https://github.com/fprime-community/fprime-tools/pull/6).  ## Testing/Review Recommendations    The package can be installed with:  `pip install black`  Then it can be run on the entire directory with `black ./`    ## Future Work  NA
nasa/fprime,776,2021-06-25T16:38:18Z,2021-06-25T17:05:19Z,TRUE,2021-06-25T17:05:19Z,37cab74b7f004d801b2cfded3903b7c3a484d690,1,1,4bdea0a2172dc4bfb5b008e37a16914291a6ed8c,,Update build test yml,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Add release/v3.0.0 to PR action coverage.
nasa/fprime,770,2021-06-24T23:52:56Z,2021-06-30T15:51:29Z,TRUE,2021-06-30T15:51:29Z,dd01a4859e3b60298343c7a435002c0f80265484,5,1,5c8d07603ed0d7c305497fb2446ba6d980f31eec,,Enable AddressSanitizer on CI builds,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    AddressSanitizer has been built into clang and gcc for some time and tracks out of bounds and use after free accesses. It has some overlap with valgrind  but its ability to track stack out of bounds is a valuable tool and has been a source of F' issues in the past. Comparison with valgrind [here](https://github.com/google/sanitizers/wiki/AddressSanitizerComparisonOfMemoryTools). It has a ~2x runtime performance hit  but in my experience testing locally it was even less than that.    The only people who should be using the root project are F' framework developers and CI  so we should be able to safely enable AddressSanitizer for all unit tests built by the project.
nasa/fprime,799,2021-06-29T23:40:15Z,2021-06-30T16:07:06Z,TRUE,2021-06-30T16:07:06Z,84bd25466c35b677e9ecc12044ee92e7daa73c8c,1,1,9daad4f7a6d11d44b37434e1d22b9519091f3dff,,Enable additional LGTM queries,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Enables additional LGTM C++ static analysis queries to catch things like stack overflows  ignored check of null pointer after allocation  and dangerous string operations.
nasa/fprime,769,2021-06-24T22:12:59Z,2021-06-26T03:03:28Z,FALSE,none,97c0e2dbd1f56ebbcd99015b67ca0bbf738fafae,630,302,fb375811695d3b25460c79b7b9081c3642684edc ed5f8edcd27f2942681ae9eb217b3a3204cd8ad2 495e18b17dc6fa7135cd3ee96dd07e597793b8b9 843a2189ad1010bd24751c46c62309341e223c72 de1fadd73893d3a5cb78171e0f8e4e55e1ccdbcc 6a04e5a3baa8595b879208fb64d0def3474508e8 860b148f55853331decda0059a124ab6be370afe 2851c23fa4975b8f11e78566af494447bb1f15cd 5bf3938208a333011cf80635b9e3aea82d56d355 a757cf9be0e561e6354dacb31ceee185f1350cae d95438a9ead6c14e773d634e7d129b27014a719e f74afad6a4d144c9ad7b6c2422457630a47ce764 7f2f5e3cfb82867673b3cffd2205ba7e7db6068b f6d9114ba41bfa3a3f3beb803472941579b17087 c82cecbd6b078e64ffd086e0bf083ab8bb8fe538 a37914f9f71758ea1b1e884afae726c67aa82252 8e85a0c9f7035257a0f021c25211d85075057b8e 881987e4124a70c4437bff25335d693a76e7a465 79620e9442f594d0844c0718305c5cf6aa9822c0 a0cf0ee1a7b5567d0e3329fc750923074fa8bf96 dd2bb40c785c9f0a018a890765fb630bab49c89e 9b2df311668b9f547fd330ec798213a2130d6538 9084bb1fd862fa7acd051f624eeefe466841003e 24299661cb973b91939d006e544c5613f5a880a3 fb36caab4fcc0d4709bd7c30d06f7b966d4a04ce 2e59aa562208f0afe7a830d02cc003f6dbaa7cf3 49424be3501444dfb4b1cda1d5eef922c22b10ea 14360b2fe359285ba848f1c847e67e4c940ddcd5 6a19018776f150c8ef7842be8ef8f230e5751e38 32aac9825b752eb7cc6dd59c9ae881d23af47ea7 d8938bd2602e2a9836783cce05dbb69c43524e78 b2dfa8773679a50643c1ab0a654c246243ae5824 702c1761a86d49381cf6f58535226c44d4ffda91 0c09213afb5aef5c17719c6efc7d175d4dd45666 d0212212bbb7a7af1c57f5df8b277937c1a6140c 7add1964924bd773e33045545d952ef51c9b616a 48d4138b19bd502cabfbafa4cb49df21c9b58cfb a35798a73a56fcb8b8567f7462124ae6c451099b d5af8360232a9904b2a2eb2a9f5181c8c03b273d 1077a20575be0aa6ce6080d88dd6dc00187a3713 242d9dea5c371d37ea5664d56bfca67711c2f4df 15c8284a234978910ce917328e74f6286ff2134a a927c5cceab76cfd128322334261d1e1a1572ce9 f707422dbf763e5fbb456243bae66b3269675867 4fd9627965386b89f326fca1a31281635317440f 987ab2b4fbe0d8897df4332c38a97570d68ea7f1 1d8d706268686bd6ba91f5595cb43ea3256f06de f3045700f4f85a1856160c066cafca1163ebbd27 f799e0b7bc53a171d6afe99921440408bf755b58 bc9fff89db5c74221427b586472809f1a8597fd9 4e2dffb80275006f17edcdc2ffb0d48419e0f9f6 2a8d9e25247cacb55ddc6e88d5d90209e5177447 5abeec3dd779cf2eaf50cd434984e941bcbff96b 6369758dcef84aad57c6dcf611b670f44c048403 3964810a3cb69ead2fb6d04047efb84c923f7462 eeab9901379df6ed83ab106ab695b0f8788127cc b2a255550b3dc145ef89948d9aff6435c3834823 2a17536f0ce1006ba659876f734e67474397c13c 854d1a81b5f191436df7022b53c6b09085f8be10 849f8e4f6b76586fbe789e7943dfb7c7cc4ad0d5 f5104305854818500672a4b4a0cad9031d42cd8a 98f0b033c2f921e72a9aed536f08d71a9539f715 db42aa85bedf85baf4b776af955f7aa3fa128831 ad9d95d337645eba04997d720feb18bfabb5e700 90d7e33a5a654ef2b1129434c8853d21acdff9d6 11a60bd408dcf9f5fdb06b3456b57d76a1b893a5 5e1b48dc5861627a60040abd1ee42f33c0aba9a0 ec1e75750d8bd55272df82410795001d7a8397e0 66217f4013be2dce7ea8e158b4d5a58b1f8a7caf 35c9b748c215c90386548529184f35d76a450f8a 97bc2125269aad5fa232a1bb47ada6749e549e9b df9200918c79cdc25b2b6de6876a1982c0252c7c 5be86ee65ccf5591677777651a609932155b54bd ebbdc145196e2c415709c0487e9587395228fe50 d2079543406948977fe2ce887245942b7619b19e bf85a3198400c1513f40d1591367b166ab0e4b19 9b85681244f79ee39d6a62cc829f6b2af2301c29 9fdeca7ecd05410b15fcf601d0a10fd226573ba5 6df9affbb7a3dd5f789b0dc49e1fdf6a067e2fd2 c858c90ee2ddb2f6add6d15b2b7b4cd6fbe22d21 321d6659804c0cf62f77ee5f40ef2454e7a799de 321e21528eb15d3631650e6817370520005562a4 2cea04ff627d4476a9b0e2cbcdde45676340982a e528243f01d0551904aca1035a5a54b7a3523ae7 262c46a3d37ad5a3c42e641085817a23bad1f8ab 621d5c8fe7aed4ebb27ac7469255082cf8ac5b23 1b985ee10cde54a55c40d762d24b8c3586253a22 57dd9d76c944cf55a09500a6d41488ecf49d27e2 4c0342c2126f09a815241fff779a5faa26126c1f ddfb42f54619636d42ccb7a6134cd78a9a795e82 0cd42685daf8eca91807182d0c763049da41b1ce 483c9a37d37784aedfc2ce6e2420fc54fcfe3610 4373db6fed5f47592563664ddd19cbd58df410ef 89aee6dd7b69012eec40221f77e0ae259b70091d 13bc400ecd8424ceb97e508d1ca34a899dcbea73 49dc824ec371cfb89fc5229a5049f5ba0c450751 8fd4ed873262370d3fcf3d0f3cd681f9e3260f81 0716fa646fb8b694dda667cac81a943c457cfad9 c32493b5c72592dfb23a4a9ee4b59b5aefe832c6 37d73806f2521a09191c5be5f18a93927d0823c3 7c3390abdb8df150cc9f1006747da15f292f1263 8c1915bf65897acee9128e544cd7b9a2cc66fd39 a6e868bdaededa20b2aca73ee2e5ad1489a1a4eb ceb8cbd01574b899e65793c9a175dcb211232028 d1afeafc3e8acb110dc9ceeac6c616eac9256e11 fcef211bf32953af6eb80ea0e64eebf1fb4d2645 2dfa44355972953cb2224680c3952daa6c09726b 359157540e56644dad0b2fea982373756f1f89a8 08373edde611f1fc7c8f3c86a10dcdb7e0da969b 2a794f741459ce431bd2cae229c6ae9b0310df2c 0abe7d25706381624dc34617cc692526fed8eaec f334320cf4594e216e950e71c2ff258e78bfde64 91895b3d581000d199e5de5ac5b782e06a755138 6ddf656a243a36243c7dd4bcb3186dac2fc80cda 633f9ca328dcbaaf415a6e84c8fde58e38c1bbaf eff094938b7e2870d2171d5aab821c2f1f514bdf b8b6b4d17b8a6c58f42b34fcc7a5d328b85f4daf 9ed4fdbe4b3794d48e360ea37e31ba0deeef8bd7 0398dc53909c67ea047279a76c85fb0570fe5ff7 307f645cabfab7b89ddec2a2623715634b56a46b 655e706fdc842edae4554bec2807beb03e62ae50 5720fdb63b8eba2f23a95a9053e292b3b21f117f d9279b002a43683ab70f7c6d5beccf1852632231 2f69dd4cc6a7b3cfb48b99b986819a01cdfdca85 043cacd6908e98752a9eb59aff0504772bc62923 f62b179046fcfe7c6d2d5c0734b7b19ef543f692 3a74c310db91db75d19fc7b63fbebda83733e1fb c2167308dfa18c29111aefe008938bab67527917 428dfca5ac9c1b7a8ed0d0b43179cac9ce514bea 070636a5f0b4f0f8d054a43821d3211c7d115b2f d6020d8572ef53ddef4d901e537c5d38e8350fc4 88941fbd2607b41a0faf21ff4249de55ba52714a b1b1da1309e816ba33f5d71921a4469c2b14f464 3a2af1b004e2d2481d8abb46061e312521ba36d9 709e613f8a8fc3ecaaf9ada83c243496f790ed84 81611f0b8b4ce135dafd3eb8a390bedb196b00ba 0c01b261d1d3b6248ba13f365fd8ad5acdb322e7 cd4a191940fc76e378f4c4dff1cdbd9a162c1b91 b48a70d97dfce0b91cb2c56d2d471d283b9a4aca a98f95f87594b61bf189dbe5d550bb1f676a2d3f bd3320d8316e3a7a08aba405bc8aecc9f7871f40 c74a4b2f09b5ccc2418999aea3ca90f0dfe42043 0e265a6e3d2c4064ab631495c7f2dc50c7370926 d5611b3cf28d2cfa05c1afaca7415d53cd75b3d1 65e77d8e52e192497ced0581ecacb3104f2e389d 6354acb1156c3f4218b2afc6fa694e4d658401d1 30df140f9e16a92bfa42f4743065f424d4f6becc 82f9a1b9ea4a64d832c1a0b7229674e97497ba04 26784a030a62649a7a1b187c979db005c6aba460 a8213f4b2134b8444a4d63197267d244ef9e5690 002f70518154c01e58c965bd07334bdaa462eec9 376165845b312c901b6e05b93835c63777cf2acb 5ca79cfa7d20ab2ae7e7907a3c87670e874f996d 9f615d75880bf5b3892cf9fbf96817df55323c1e 793d51325cdec7c750b17a0cc59e7206a035f85a 240f89eac34a25de3d2ff0a1d2e4dded08a01c07 138b05f354fb2f3c16dbc7346739855a4b0fc39b fb829e004454aaa4e76be3af0e56cabe8136d237 4812b86ee77373de3d4d5a65b81190b868f1f6fa ff207ba8e936c485ca1d24442fe75015f3f4765e ceccebcdbd323dad8ff8f461562c1693dea1f752 3b5d3ea11370cccfe74b9ef67c1a131adfd2d3b3 86ff51c827d36e431c4bc920362a623aad8a283c 2358d229200d8adb81427e4c6c40b6bce93658fa bb01e5d60088bff15a1684bc3a3e2b806154ca04 0a81e7daba12a001e654e9b75d4e592847adc032 5ea8e2bc20afaf27c68280bf48363efa09efc25d 4d1e436077ecafcc257ebc77cd7ceadc713c98df ca42c198f001b9abe3bf738dee3116e8efd37d7f 632b6e152d82b22ce46f124873699f9f361b2691 e66fbe91f73e57d73b8ffb74d3597ad181999304 38b70ab207b36eb129187e57a4ea19077a752c4e 79fc4252054154b190671920626594ab1b296e4d 5c8fc40de60ec50f9291bcae147429df5a498e44 9058fcd94ad9778446635a1d774c406b3dd5e9ef 64c477e6b404b7ac2d3e613783fd85ef3b8ee3b4 db253980a1cdb57f8719e5e7f3abcfe0b2efe1b1 ae73a00a7e83e0303935a62cf11af538cc087e15 96259f0fca36fce82497600d4569c885ad27ae75 f8fc2c39b2407e70f8ed0bbec4d057b404ef84a2 45aa029df50aa9b98662c72b1d846421ba8d0c59 ca32b01f90c96d28728e86b9c45958d56d0caf88 c65a423ebde3c45c1bcff957712a44c2ef1be18d abeb33b39473b53f1590dabf35dc5b6d9f70471e fb7cb5396b837e4e602a94fa75bf8308aa4df164 f40f6f8a9c01a79aa3f2c6b53176d46c370d35ad 40d2e0b51412c08b1d50687c47dd14594fe44a0e 1b224d71243686a749cb3a0add1490b21246c15e b8b6ad7e8a3659ef3e91599988cf00657abcdf5f 1d98c1373957848375c6f52825b26ec92d7de9ab 8f4971cd4b1b1a1ecb6b1ea59036ad4fa8184706 e134cda5764b325b357c692f6391abe78b2f02a7 9f8c15eced51e9f75b7e9ebd7413f1a3d2be064c 5fca62b3c155aa104a5e2c32203d7075332fb9b8 c0e10ba39cb957940c7c236c6ab778b4022d569d b23068e15a9838c0650106ecc6f32ced8828ad7f a6737612ddfc6bfce92abb55e5cfce55e6d52f6c 396599fb5a3a531b126b9bdbe03d0bd40caea472 849924c028e5ee319901c4b6b2a33df7c551baa4 a284ffbff6b7f72cc03f8cceb1ff68f7dd2b7f48 2c960de0620db9faad63b85cfd9d423568d1f6fe 5f64262cac6829f2e1c4cd623b49bdf48c00d160 4d73acd881eba4d7cbf0a3d352c47e611279cf1f b83b7b4626d311855d89181a9d92f3fb3121dc2f 8bc17eb09b6c7e7a9181d04e30b6987b37486362 25bd45dda45b4dc887ffd70943e20ab687be9657 06eae63721b21c3e49ffd2c99624e451730bff4f 92ec22c049548164dbb247efcb3040513aaf43ea fdcfbf06fb99e4bdaba66dd323a93d067a12d95e 9fbf96cc204ae79ed464470eea8e1de4e19496e1 f39a476b554bbf0ca101528733449614725bca62 2d7340f5cd1d2e459dd6e3ee8d94cb0564e2a07b 2234279a68e962799a5bbea204430c479647557f 9e2b0e89a325c3f011a390adcac4a7b6216ef41f a421b8008c973b5485722af28cafb97d8bd0b83c 3344254c2ad5c7655347d5e3b5f4377c89c09549 1f12a6be66a98331b96a33d66c090d59674aa79a 43b725b591a99f46f7c83a0f62a52e54a57f9dc8 b87512b0c0986a6ef86d6fce2767853098872c05 cf1a2210a83c82913eddc72a03b81457fc2c2a01 9bdbaa41030fa2c03c4f7ed68d467aa6b8ed4354 c68e1007cf22fd2cdde948100243e8212ad7d191 4a7785b47cba09682a1ce99855687d2459c77522 04b4d74d5227af7a31db04603e2d54aaa36ef885 918381e08d64206e4c7fb52a3883d11dd324639c fb5277e1d85d39c546b9787cc1d6abb6e76eeed0 e6a881591fcb9404c91287ad4bf31518b0a5b02c 8691ee48231353965fe3268eed3e9eec924c2934 ab986d0e75b7534ae41ac2e21bcc48fc3296b0eb 5ceb76e25fb3e754fc486450f81b632f6e66d54a 255a092a07c87e16165d1a9f08026f08d7f6ef83 f07c35b6d507e6d1d9f685e93745dfaded230f7a a992e4ad77354c300042381029c299715b2e480e 7cbb41490ec2fecb13fdd84a92e0f848b5917bc1 10e6a010c1334c008fb01e2f49d0fe6c9b5eb148 c5b21144efafc32846e4047f72c9fedadde7bcd7 dfa91d584cc7d19057cf2b109d17629931b81490 273d7707b1b76269a49af0558cae7b3d7374fb39 891b2fe9397efb4b3fe46a991bbbb9b430c5ebfc a7f584e3c014d8d68f5f0a3ee3745e09d3eff613 c56426d019c1ae413c2df0f96a33227723217c3e b85b3b80998019fd31b4ddf26603e45f0f68f9d7 d506bf4d861ec64f985be09f1f093562be03f42b 7976ace7bb7ad35d7d2f19160bb44e88a88eca41 4b4fef5b6bff7965f3a10006db4ca70905e8ebc0 f7bb81a733044d6fb01ac0109b4efdf42eba0fc2 8a0e771ab4acd3e04b8fe00815243a3dfc6534fb 9a60c68a55ebd23587fc3630a030bc63be1d0773 02a460cbfd8097733e33f8ef3409d0aab65bf9b2 59460ed23d71de55acc3def4cc2daac0a041796b,,FPP models for Svc components,| | |  |:---|:---|  |**_Originating Project/Creator_**| F Prime Infrastructure |  |**_Affected Component_**| Various |  |**_Affected Architectures(s)_**| N/A |  |**_Related Issue(s)_**| N/A |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| n |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    This pull request contains FPP models for the Svc components  with accompanying changes to the XML models and the C++ implementations to convert inline enums to FPP.    To assist the upcoming transition from v2.0 to v3.0  we have documented the symbol changes in the following files:  ```  Drv/ByteStreamDriverModel/changed-symbols.txt  Fw/Cmd/changed-symbols.txt  Fw/Prm/changed-symbols.txt  Fw/Log/changed-symbols.txt  Svc/CmdDispatcher/changed-symbols.txt  Svc/Health/changed-symbols.txt  Svc/BufferLogger/changed-symbols.txt  Svc/CmdSequencer/changed-symbols.txt  Svc/ActiveLogger/changed-symbols.txt  Svc/PolyIf/changed-symbols.txt  Svc/PrmDb/changed-symbols.txt  ```    **Testing Note:** Some Health and AssertFatalAdapter tests fail because of a known issue that is fixed in devel  but that we have not yet been able to merge into our branch.    **Merging Note:** It looks like this PR is picking up many duplicate changes from our last PR. Perhaps this is because rebasing occurred in connection with our last PR.    ## Rationale    We are continuing to translate the core F Prime model to FPP.    ## Testing/Review Recommendations    Svc/ActiveLogger.fpp has a TODO comment regarding the placement of an enum type. Please review the comment and provide feedback.    ## Future Work    Continue to translate F Prime models to FPP. The next steps are Drv and Ref components  then the Ref topology.
nasa/fprime,804,2021-06-30T18:38:27Z,2021-07-02T17:06:17Z,TRUE,2021-07-02T17:06:17Z,21e84bbd61df606d75a1de2a06ede9909f41f197,1,1,9cca19f4402babad737c61e74bb5099adcd20f63,,Correct LGTM query selection,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    This existing config selected queries tagged correctness AND reliability. I intended to select all queries tagged correctness OR reliability.    Unfortunately LGTM config only applies after being merged  so there's no great way to test this besides trial and error.
nasa/fprime,809,2021-07-01T23:40:04Z,2021-07-06T20:58:15Z,TRUE,2021-07-06T20:58:15Z,4e6d41310cf3a3357a6fad1744b3a6ebc2e15468,4,50,366f93f175fe2c4729da099fecc12688f840385b 3ae468279b6e69b22ac48b3775b773359a1da21d bc050af5bd05d1d28461554ee9fd80a9ea9dc691 9a6e941024f32d85b0d132aa9f76734f89ed2ef8 4078ce35146d2ce6f8976140317d077b5e74f1a7 b0b380663ce7c4448cdf49df391b0dd0c5034154 45e99a1a0e866b8d5f61700e17877e62dce0b10a bce2af6aaffbef8e4acc13ff8719db24e71dc6e5 0811db7d03bb408f11b1f3039c493147fcccfcbb f70bb74e7186712b25fc8c2a5174bd8f61b2f98b 77836548145eab2b1027f1fc1898b36b0924c75a 2b47ec730556b14fc4c5985c9474f654b761b026 e80529ce7a47ea30bf6a5e09a5fc4af6bb211126 0a3d2e6de6cfd471874fab4d5b46b3e421d834b4 21036045c7c0ba6006c575116766b08cf4bba70d e03fd06c588c7298380b3ac8d49d73f66044609e 15374d07c641c9d617107b28000e8f9dfe596210 6ce47d2fed67187d06a67cb02131ad91efc89346 4c2c09f0d0f781c955f2d807ba3c0b326cf7c95b 91f3ab3d67b9fbbc85c0d805f3e9c347eeaa6f3f 61191bfe102d3f77216832dc068794f94ca0d470 c819a78131a2d7c006be960d1a70d7ea63e1cd28 1096697ec4c98c65fee4268e629509357812a1a1 202100b2113ed5553a597a524ea6969c823c2089 276118466bd907adb2818c2f2a95d8cf639d41ee a22de723d5902d117cff787e1fa41c7150b41814 8e7e1ca60c8f542d87b7fc0c80f0f7bb3a456f0f d6b1a7de362ce9f7983feaf2ca364c23b239bb4a e54d12d19ff7e4c629a7ca49057199e3c9e36c52 9c9540655e98150c64b0aae0c5c6a8d549355f27 a8b0f27f45f535dbfd217fa602c083e7ad1c305a 91e4a84ecea21bf9d3e13c99c4070b96d1f61e1c 83eb47212f9bccdfed3e8b1d1cbcb5144059ceda 8b261b46c40b7c781cc9d88e6ac862c9662bf3bb 09f7fad84d7ed4eefc55c63a54fb5ae7ce0fcadc aae982f1e783352cb7035c6ac0b60cf2c9d44f19 e09f537c6db164d596a28b2e6a4c9fd0e91f818f 051604e376680690a8e04a31ac9cc461c788af10 d0ad5f12e3245e81b6938c0e083f70aafdb9700d 0e0be62e217fd64210ccb6c30871c19a9670d8cf cb7bfca856ec1aea4e532686143ba6968ffd0ec6 68cc7201f7e8d1378a6466ffcd5679febf27350a b5754377d2488a8be250c0bc423a94de8c98d82d 62102b8f7f53e92d780face7e9e7ed1e7babab85 ee6e8f2e4bea086cc5b39b0271d1c44702f88f5c 3ccff2c85c4fbb0a373342e7b66e4a58a63b70d8 9000af62d1e0bb2eb72c21482a29c9e49bb23f28 f75fafcb9f4dc5bc5c4b3158b8735ed3d418740e 0aa43bd631831037fd65983f11e60a9144244c6f 7ff80f1b34c95c9f804cb55f697d7e3daebd7946,,Workflow to verify compatibility with GpsApp tutorial,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.
nasa/fprime,459,2021-03-08T15:15:21Z,2021-03-08T15:40:27Z,TRUE,2021-03-08T15:40:27Z,a14dfb802efc10af475b840e8f0328edae885736,4,1,ecf2199763c3437223b6f69083f0cac013f94d8c,,Add check spelling check spelling,Signed-off-by: Josh Soref <jsoref@users.noreply.github.com>    | | |  |:---|:---|  |**_Originating Project/Creator_**| @jsoref |  |**_Affected Component_**| CI |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  n   -- I can provide additional documentation if requested. Documentation is in the [check-spelling/wiki](https://github.com/check-spelling/check-spelling/wiki) especially for [Configuration](https://github.com/check-spelling/check-spelling/wiki/Configuration)|    ---  ## Change Description    This PR adds the [check-spelling action](https://github.com/marketplace/actions/check-spelling) per https://github.com/nasa/fprime/pull/456#issuecomment-792809167.    See [documentation](https://github.com/check-spelling/check-spelling/wiki).    I'll watch the repo for a while to make sure the landing fairly smooth  after a while  you can just @ me for support.    ## Rationale    Everyone makes typos  and automation can prevent typos from accumulating.    ## Testing/Review Recommendations    There will be 1-2 extra checks listed in each PR (one is for the pull request  and one is potentially for the push if the push is to the same repo).    If there are no new misspellings  the checks will have ✅   If there are  the checks will have ❌     For things that are added directly  the first 10 should get cute yellow boxes in the code changes views. Beyond that  the details should be visible in the action run log.    You can test in your own fork by making commits onto a branch w/ this commit  or by making a PR to a branch with this commit.    ## Future Work    I'll watch the repo for probably a month following merge to make sure things stick  and will revisit with upgrades.  See [check-spelling wiki Possible features](https://github.com/check-spelling/check-spelling/wiki/Possible-features) for things I'm working on/considering.
nasa/fprime,819,2021-07-13T04:11:50Z,2021-07-13T18:00:30Z,TRUE,2021-07-13T18:00:30Z,cfb8447164a4c33aee58020c0b6469bc0460d0aa,4,1,471b249701b1e4527f0fcb3dbbca37f2a4adafa0,,Update check spelling,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  CI |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    This upgrades check-spelling to 0.0.19    ## Rationale    https://github.com/check-spelling/check-spelling/security/advisories/GHSA-g86g-chm8-7r2p    ## Testing/Review Recommendations    The tests pass here:  https://github.com/jsoref/fprime/runs/3053200333?check_suite_focus=true    ## Future Work    It's possible to remove `shortest_word: 2` which will move the default to `3` and drop two word items from `expect`.  I intend to provide an update which will provide further hardening to the workflow  hopefully relatively soon  this update is really a very minor update.
nasa/fprime,821,2021-07-14T00:08:35Z,2021-07-14T19:45:24Z,TRUE,2021-07-14T19:45:24Z,2a9678567b0b9dec2683d60cba4b1abebcf5004d,11,2,29f0ad82e438a5af8e8a0b7abe2961343d141275 15af99c254eee6633a1a447f8ca6a208222f62cb,,Dev abcouwer cmake baremetal fixes,| | |  |:---|:---|  |**_Originating Project/Creator_**| JPL COLDArm / Neil Abcouwer |  |**_Affected Component_**| Various  ComLogger  FileDownlink  BlockDriver |  |**_Affected Architectures(s)_**| Baremetal |  |**_Related Issue(s)_**| n/a |  |**_Has Unit Tests (y/n)_**| n/a |  |**_Builds Without Errors (y/n)_**| y (Ref and our own baremetal build) |  |**_Unit Tests Pass (y/n)_**| n/a |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description    - Added MIN and MAX size #defs for integers in Basic types.   - Use U32_MAX from basic types in FileDownlink  instead of __UINT32_MAX__  which was missing in our limits.h.    - Change "interrupt" to "interrupt_val" in BlockDriver (prevented build  "interrupt" must be a special name).   - Guard on system type and don't include Ip socket-using components in baremetal build  - Guard on system type and don't include LinuxTime in baremetal build.   - Add Baremetal/Mutex.cpp to Os/CMakeLists.txt.   - Switchup fatal handler files in CMakeLists based on system type.   - Allow for undefined PATH_MAX in ComLogger.   - Change all instances of FPRIME_USE_BAREMETAL_SCHEDULE to FPRIME_USE_BAREMETAL_SCHEDULER.    ## Rationale    We're making a baremetal  out of source build  and we were having to make some small tweaks  comment out some components in CMakeLists  to get FPrime components building when FPRIME_USE_BAREMETAL_SCHEDULER was set. These changes add some guards in CMakeLists files and make some very small component tweaks to allow building a baremetal build on a TI R5 processor.    ## Testing/Review Recommendations    Some of the ways that cmakes were guarded are subject to personal preference  Definitely up for making adjustments.    ## Future Work    None at this time.
nasa/fprime,850,2021-07-20T00:24:29Z,2021-07-20T00:53:48Z,TRUE,2021-07-20T00:53:48Z,782ee7bdf41e4d459c2acf4d795cee0c3023b921,1,1,73c06ecbe82a4c1a197868bf598f30b521c99215,,Disable C exceptions while compiling F,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Add the `-fno-exceptions` flag to prevent the usage of exceptions within fprime.    ## Rationale    Fprime must run in embedded contexts where C++ exceptions aren't supported.
nasa/fprime,788,2021-06-27T18:49:19Z,2021-07-20T00:37:38Z,FALSE,none,654b8c1d0190fe8b7bb8795995e17c45c56c1e90,3,4,a1c98f4a201beac55c804b6e5c8e5fd2cd7f3aa8 a3eb092c9e5b560e0fc2b7f831205fe422e2c10b 594eba96e2e52cd65a2f2fb070dca956f08d19fe 20012f248d27764b7f791e7dcefa87f6cb108274,,Automate development setup,| | |  |:---|:---|  |**_Originating Project/Creator_**| @mikenikles |  |**_Affected Component_**| Development environment |  |**_Affected Architectures(s)_**| N/A |  |**_Related Issue(s)_**| N/A |  |**_Has Unit Tests (y/n)_**| n |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    This PR introduces a `.gitpod.yml` configuration file to enable ephemeral  browser-based development environments based on www.gitpod.io. It automates the [INSTALL.md](docs/INSTALL.md) instructions and starts the Ref reference application automatically.    ## Rationale    To reduce friction and lower the barrier for contributions to this project. The `README.md` file contains a new button for anyone to start a development environment with F´ configured and with the "Ref" Reference Application started automatically.    ## Testing/Review Recommendations    Until this PR is merged  please use the following button to test what the development environment experience will be like:    [![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/mikenikles/fprime/tree/automate-development-setup)    The above button uses my own branch which has Gitpod Prebuilds configured. See the next session on how to enable that for `nasa/fprime` and why it is beneficial.    ## Future Work    In order to get the best experience  the `nasa/fprime` repository will have to [enable Gitpod Prebuilds](https://www.gitpod.io/docs/prebuilds/#on-github) so that the development environment gets built every time there is a new commit pushed to the repository. With that enabled  anyone who starts a new development environment in their browser does not have to wait for any installation tasks to complete since they happened as part of a prebuild phase.
nasa/fprime,277,2020-11-30T17:58:55Z,2020-12-03T02:00:00Z,TRUE,2020-12-03T01:59:59Z,49e6424f075a5c093919e71a834c3c5dc1cffc42,9,17,0963a064b0f2cb4af64269664550706585ae856c 4564b0f39bca84a45c92b27e71cf301ac40a66db 4c10b3c1398b74caaf1229fc4ec370f9c1c2bce9 5b19b5ed2c4a382e113380c582cee675c540aa90 1e329f6d7de85c052bc0fca57908f26b351430f9 86e975fad3bdda69dee6145cdbda776ada515c82 ee5df9acb210bc71bc4971564c3f8aab4ad4e654 7c8b65f840b3ff66b0187cb7d21f0f127fe57756 be4c26d6df190e5a971615057046083e8d804943 63b5f5a80ab0dea39b2acbed778b7ed4c8f79d75 2173e83b2f8fd9902cb7c80e468180767c91026c a9b1eee0a1f166581206e74bed263e9e6e7aef8a ddeeba037ae0995e6fec5843109461469f5c9077 18c699ed35e38d2485df97d31980ab68bdf662e9 2efa8b29e6d12655ef0cf40b4ecac9c0eabc540b 25c6bc30536259630fe2a0644dad26fb556a240c c2a621e030290ef6e41d8b61fab685ea5bff26a7,enhancement,Update active logger min,This PR updates `Svc::ActiveLogger` to remove circular buffers and the command to dump them to a file. These were never used and are better handled by `Svc::ComLogger`. The circular buffers consumed memory and CPU cycles  so this will help smaller embedded targets reclaim some memory and CPU resources.
nasa/fprime,283,2020-12-01T00:15:20Z,2021-02-12T03:02:56Z,FALSE,none,5dafb798700085a55ed91bf24e642058e67e4646,36,24,0deaff45310efd402ee88b420283d50af16641e2 7889ac317c4449ea201ea3aac15c2e4b22f4641b dadbe4aaf559ee76710baaf3d0dc792093d99e12 596f2cd934590869d905921f0f2bbbe4c309b225 f1d042a795d3bf30960bdac05f58bc901f94f9c0 54b01badb5086ba4d54c72285ee344a6b265e3b1 5f35e41b9e886d6bdebfbcea55444e3c9ba2ca39 a415962620b86159a5849f6dbab73de562d27512 64350f8f5dab23c42bd3e514219c9341fd94e3c8 ad1a1ad454ca0251575124181ed1bc1fe26e220b c14c5ce63129f64a7197203281f28e8eb63a2671 3996c0eac37a7e84dc5c7e3612a95fca7e7fbe28 5ea0d598e568d287be35d579dc145c3ab25f0769 1039960dad4e090921b51a9b80e340d85e32bdd9 774c55e3df739d91b8b4ca218f330bdd542f05a9 0bb750e301821e18ab587476ad7f9c4d25bff012 821102cc05c258f4aa0a6b418e6db482474473f9 1fcf1375155c7860dee32af982f2ed2c5272b84c 8f1829a09eb7ce5722071b537d390d63ca65bf4b 70c53d2a032f1f2ecdc7ee74ff725a1dfa3bde96 da8f3518f4c483391f6f9869ff72f1089b98e629 9b07926957e00023753a258abfe390863cc0ffb9 5b37e13943b292e44a30e5610e874d68dfc2ff41 5eb8b38c8536914617f3949650bba04c88c79f44,enhancement,Update buffer manager,This pull request updates `Svc::BufferManager` to allow allocation and deallocation in any order  and allows the user to specify a set of differently sized pools to optimize memory usage.
nasa/fprime,867,2021-07-23T01:48:05Z,2021-07-26T19:13:14Z,TRUE,2021-07-26T19:13:14Z,509b30414455e27476ae5a2365739956827b0b64,1,1,5491d3ca498d28a9019e7667bb6388b58d7365be,,Default F to C 11,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**| cmake |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y |    ---  ## Change Description    This updates the 3.0 release of F' to use C++11. CMake has been updated to set `--std=c++11` and to error when the compiler lacks C++11 support.
nasa/fprime,872,2021-07-26T14:47:14Z,2021-07-27T18:39:42Z,TRUE,2021-07-27T18:39:42Z,764194a97519970dd0da35c450d2bc1666a374c9,11,123,366f93f175fe2c4729da099fecc12688f840385b 3ae468279b6e69b22ac48b3775b773359a1da21d bc050af5bd05d1d28461554ee9fd80a9ea9dc691 9a6e941024f32d85b0d132aa9f76734f89ed2ef8 4078ce35146d2ce6f8976140317d077b5e74f1a7 b0b380663ce7c4448cdf49df391b0dd0c5034154 45e99a1a0e866b8d5f61700e17877e62dce0b10a bce2af6aaffbef8e4acc13ff8719db24e71dc6e5 0811db7d03bb408f11b1f3039c493147fcccfcbb f70bb74e7186712b25fc8c2a5174bd8f61b2f98b 77836548145eab2b1027f1fc1898b36b0924c75a 2b47ec730556b14fc4c5985c9474f654b761b026 e80529ce7a47ea30bf6a5e09a5fc4af6bb211126 0a3d2e6de6cfd471874fab4d5b46b3e421d834b4 21036045c7c0ba6006c575116766b08cf4bba70d e03fd06c588c7298380b3ac8d49d73f66044609e 15374d07c641c9d617107b28000e8f9dfe596210 6ce47d2fed67187d06a67cb02131ad91efc89346 4c2c09f0d0f781c955f2d807ba3c0b326cf7c95b 91f3ab3d67b9fbbc85c0d805f3e9c347eeaa6f3f 61191bfe102d3f77216832dc068794f94ca0d470 c819a78131a2d7c006be960d1a70d7ea63e1cd28 1096697ec4c98c65fee4268e629509357812a1a1 202100b2113ed5553a597a524ea6969c823c2089 276118466bd907adb2818c2f2a95d8cf639d41ee a22de723d5902d117cff787e1fa41c7150b41814 8e7e1ca60c8f542d87b7fc0c80f0f7bb3a456f0f d6b1a7de362ce9f7983feaf2ca364c23b239bb4a e54d12d19ff7e4c629a7ca49057199e3c9e36c52 9c9540655e98150c64b0aae0c5c6a8d549355f27 a8b0f27f45f535dbfd217fa602c083e7ad1c305a 91e4a84ecea21bf9d3e13c99c4070b96d1f61e1c 83eb47212f9bccdfed3e8b1d1cbcb5144059ceda 8b261b46c40b7c781cc9d88e6ac862c9662bf3bb 09f7fad84d7ed4eefc55c63a54fb5ae7ce0fcadc aae982f1e783352cb7035c6ac0b60cf2c9d44f19 e09f537c6db164d596a28b2e6a4c9fd0e91f818f 051604e376680690a8e04a31ac9cc461c788af10 d0ad5f12e3245e81b6938c0e083f70aafdb9700d 0e0be62e217fd64210ccb6c30871c19a9670d8cf cb7bfca856ec1aea4e532686143ba6968ffd0ec6 68cc7201f7e8d1378a6466ffcd5679febf27350a b5754377d2488a8be250c0bc423a94de8c98d82d 62102b8f7f53e92d780face7e9e7ed1e7babab85 ee6e8f2e4bea086cc5b39b0271d1c44702f88f5c 3ccff2c85c4fbb0a373342e7b66e4a58a63b70d8 9000af62d1e0bb2eb72c21482a29c9e49bb23f28 f75fafcb9f4dc5bc5c4b3158b8735ed3d418740e 0aa43bd631831037fd65983f11e60a9144244c6f 7ff80f1b34c95c9f804cb55f697d7e3daebd7946 3a5f6d0ed11ceb584fc318900fcf8aadc1a25eb9 6e5cc22c73d1dad7467eb1f52fcee8e742c7fa34 8582422835362f69a3c86406092ace68275cbde1 1b1dab2d9a5b54f0774894f179de3b44ccb309b6 0c412ed7fb8249aa376936e480054cccd1920a10 21fa03179515980a582a0138c0f6bae15a3204bb b6f824762dc4e07c65edf7b53b4652d815a00722 e28745298b80141ea79b817094dea3eff86a70c2 458e1f95bd1466a3f89f3ef49fa32d12195ab625 793bb9b4b145e4bcc83cc9a1b5fd8b09b1f80bf7 aca3f787c77289af9c1c736dd6ba94d27bdc6276 b38764eb3a26124d341ee6964aaee1a7a2707462 6dcdb5deaf42c570ca7a410757098c37be66e599 b31b67ac1a1b659601efc190f750db83ff72d600 93ab84836fed2d703f257ac6e40fd0a4d8ccebf9 b82555759888ad51aec8fc32cdfd24a238c394a4 cd1f0c8da6234cf4a2e7b77a29a92930f5edb82d 326bef622a86ea210674394d03e7ce57d67faf10 b80827fd56cdb5935fda7175e2e36654e8965766 50c0cc3b429736ac5d849907ae8e5d49d7bd82ac ebe155d5ce5cd3d418df02acc22843a87826c3cc d01f825b93768f70459f2b306c8719a8baf92857 55f9c794dc2dbd71c4fbeb76c715e5f64cb0a6a4 32d4de7e9cc1a6c7ce33e96427747c4a4bfe3440 bf86771a1cd56f6004bde84671d5725b2bc78c41 7414f1b1b5b2284b14b7856dc569bd9a23f6bff5 442807d39dc82286f07646102d07869028f0e60c 322d7ced9cc612e6f672df5c0842b84d97f63c53 f0a2f16eeda07c845a55aec10d48da76cb07f5d1 8bf818a044cb35bd668e41b0c29c84d5e5236f8c 5ad6d7733103f74dfb829e252cb161c431333ea1 87da67301effb23e4d6a0db50398f1866dec6d3e 0b04c18a7497bf7f9cebe958afd7dfd621e49094 03e3871303e408ddcff8cef8aed443167ec79aee cf8aa08d7ba97fbbb6abd85bcbf235b9092556bf 8e92aef86243fed4dc3f2f06398cf7633446f3de 74f1eb07690e1849314d920671f2d9f41d0406a8 941037f702bfff6342287370e3b1bd5d0be89b42 e92e71454aa0a0a70a37db53fa25d4d1878b33c2 a79165be39344969f80f319d1f6599da9588ec64 b308206ddf900a2aa6c2926c4e0dde907471c3a5 7ade858abb98e0a25f918e66d152b69f50efd947 a31c10bd8e156375a2646eee828ad50703aabd01 158ecab7d3c3acfbff8bd91977de97fe6bfc1d55 aa26e28e859e1dfcb9409eafe9e54d83297ff52f 90e2b47ddb42328289ead073eb1c43555906d291 b7edab7bb4c89a1e357f226dbb8e9b23f70bd7b6 2310583403973ca290e8be7b4eb191d75d318b27 1418ec5ac409e884dd1d145979ff0d55a0cb4bcc b3e09c4a673358694af55dce7b3c7e52559340f9 713760c229b0bb7521bc9bb97c78a7b168becae2 6e0db346d0a0dd81f886e4760f17083b266cc061 47b5f8eba12a3d53cb4935b2b5a0ebbf2124bc42 d233deb37e65de7a018cd7835057b4ca3f041697 69341c17aac31735e25d3c13d711c52b26398943 68fd4b4f15f03671cf0336df6fa17db89feadce6 b4dda9736e964d737ce4fe04a9829ab352006b24 54699ce7fc8f8006ada36e1573b4adfa9d7c2942 d35cc3e49b9154d44c5777ef4f944402a37d8ed2 a2b0a526affe29c716d8d0701fcc142972151eb5 f4b2ced4d14e4002e2155efb95230c88558cfae7 5f90df07b4d1059bf24efa9688c08d34a1dd581e 8f017597d4255a4b5926d205adbeeb2ea97ed0cf fa70aba18d50cec6c7856bf6ff9fe1970ea03b51 e2fff8aa9d9b117dbf4c844e28c2b1acac26454c dcdc06661259d3565d39d40752ee2f65cfda6fbb 089c7e4e36793320c9a798cc7b1f8ba2d572e735 6c0a66383f7e57bc5d11be32074aab6db7f0101d 28a82fb791c38b441754e17edc928968266fec3e 6b2fd3a44be297da12e092af726d993c847c8951 55ac01e661df75c9d3aa3d510a3a03e27fae161a 01c0013afcb939c665adb403c0e4d9c213404e19 028d2832bf1c66fb97092c2d7ca48454ddf40070,,Split CI workflow jobs,| | |  |:---|:---|  |**_Originating Project/Creator_**| Ricardo Pena |  |**_Affected Component_**| CI |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Separated the CI test job in the Github workflow to reduce wait time.    ## Rationale    CI test time was approximately 14-min  and required all tests to complete before obtaining error logs  if any. By separating the jobs  it is easier to observe test results as they occur and total test time is down to below 9-min.    ## Testing/Review Recommendations      ## Future Work
nasa/fprime,806,2021-06-30T23:54:32Z,2021-06-30T23:55:46Z,FALSE,none,c4d6b5e3378761c687b701589aeb3d9a92678c75,693,349,f3045700f4f85a1856160c066cafca1163ebbd27 f799e0b7bc53a171d6afe99921440408bf755b58 bc9fff89db5c74221427b586472809f1a8597fd9 4e2dffb80275006f17edcdc2ffb0d48419e0f9f6 2a8d9e25247cacb55ddc6e88d5d90209e5177447 5abeec3dd779cf2eaf50cd434984e941bcbff96b 6369758dcef84aad57c6dcf611b670f44c048403 3964810a3cb69ead2fb6d04047efb84c923f7462 eeab9901379df6ed83ab106ab695b0f8788127cc b2a255550b3dc145ef89948d9aff6435c3834823 2a17536f0ce1006ba659876f734e67474397c13c 854d1a81b5f191436df7022b53c6b09085f8be10 849f8e4f6b76586fbe789e7943dfb7c7cc4ad0d5 f5104305854818500672a4b4a0cad9031d42cd8a 98f0b033c2f921e72a9aed536f08d71a9539f715 db42aa85bedf85baf4b776af955f7aa3fa128831 ad9d95d337645eba04997d720feb18bfabb5e700 90d7e33a5a654ef2b1129434c8853d21acdff9d6 11a60bd408dcf9f5fdb06b3456b57d76a1b893a5 5e1b48dc5861627a60040abd1ee42f33c0aba9a0 ec1e75750d8bd55272df82410795001d7a8397e0 66217f4013be2dce7ea8e158b4d5a58b1f8a7caf 35c9b748c215c90386548529184f35d76a450f8a 97bc2125269aad5fa232a1bb47ada6749e549e9b df9200918c79cdc25b2b6de6876a1982c0252c7c 5be86ee65ccf5591677777651a609932155b54bd ebbdc145196e2c415709c0487e9587395228fe50 d2079543406948977fe2ce887245942b7619b19e bf85a3198400c1513f40d1591367b166ab0e4b19 9b85681244f79ee39d6a62cc829f6b2af2301c29 9fdeca7ecd05410b15fcf601d0a10fd226573ba5 6df9affbb7a3dd5f789b0dc49e1fdf6a067e2fd2 c858c90ee2ddb2f6add6d15b2b7b4cd6fbe22d21 321d6659804c0cf62f77ee5f40ef2454e7a799de 321e21528eb15d3631650e6817370520005562a4 2cea04ff627d4476a9b0e2cbcdde45676340982a e528243f01d0551904aca1035a5a54b7a3523ae7 262c46a3d37ad5a3c42e641085817a23bad1f8ab 621d5c8fe7aed4ebb27ac7469255082cf8ac5b23 1b985ee10cde54a55c40d762d24b8c3586253a22 57dd9d76c944cf55a09500a6d41488ecf49d27e2 4c0342c2126f09a815241fff779a5faa26126c1f ddfb42f54619636d42ccb7a6134cd78a9a795e82 0cd42685daf8eca91807182d0c763049da41b1ce 483c9a37d37784aedfc2ce6e2420fc54fcfe3610 4373db6fed5f47592563664ddd19cbd58df410ef 89aee6dd7b69012eec40221f77e0ae259b70091d 13bc400ecd8424ceb97e508d1ca34a899dcbea73 49dc824ec371cfb89fc5229a5049f5ba0c450751 8fd4ed873262370d3fcf3d0f3cd681f9e3260f81 0716fa646fb8b694dda667cac81a943c457cfad9 c32493b5c72592dfb23a4a9ee4b59b5aefe832c6 37d73806f2521a09191c5be5f18a93927d0823c3 7c3390abdb8df150cc9f1006747da15f292f1263 8c1915bf65897acee9128e544cd7b9a2cc66fd39 a6e868bdaededa20b2aca73ee2e5ad1489a1a4eb ceb8cbd01574b899e65793c9a175dcb211232028 d1afeafc3e8acb110dc9ceeac6c616eac9256e11 fcef211bf32953af6eb80ea0e64eebf1fb4d2645 2dfa44355972953cb2224680c3952daa6c09726b 359157540e56644dad0b2fea982373756f1f89a8 08373edde611f1fc7c8f3c86a10dcdb7e0da969b 2a794f741459ce431bd2cae229c6ae9b0310df2c 0abe7d25706381624dc34617cc692526fed8eaec f334320cf4594e216e950e71c2ff258e78bfde64 91895b3d581000d199e5de5ac5b782e06a755138 6ddf656a243a36243c7dd4bcb3186dac2fc80cda 633f9ca328dcbaaf415a6e84c8fde58e38c1bbaf eff094938b7e2870d2171d5aab821c2f1f514bdf b8b6b4d17b8a6c58f42b34fcc7a5d328b85f4daf 9ed4fdbe4b3794d48e360ea37e31ba0deeef8bd7 0398dc53909c67ea047279a76c85fb0570fe5ff7 307f645cabfab7b89ddec2a2623715634b56a46b 655e706fdc842edae4554bec2807beb03e62ae50 5720fdb63b8eba2f23a95a9053e292b3b21f117f d9279b002a43683ab70f7c6d5beccf1852632231 2f69dd4cc6a7b3cfb48b99b986819a01cdfdca85 043cacd6908e98752a9eb59aff0504772bc62923 f62b179046fcfe7c6d2d5c0734b7b19ef543f692 3a74c310db91db75d19fc7b63fbebda83733e1fb c2167308dfa18c29111aefe008938bab67527917 428dfca5ac9c1b7a8ed0d0b43179cac9ce514bea 070636a5f0b4f0f8d054a43821d3211c7d115b2f d6020d8572ef53ddef4d901e537c5d38e8350fc4 88941fbd2607b41a0faf21ff4249de55ba52714a b1b1da1309e816ba33f5d71921a4469c2b14f464 3a2af1b004e2d2481d8abb46061e312521ba36d9 709e613f8a8fc3ecaaf9ada83c243496f790ed84 81611f0b8b4ce135dafd3eb8a390bedb196b00ba 0c01b261d1d3b6248ba13f365fd8ad5acdb322e7 cd4a191940fc76e378f4c4dff1cdbd9a162c1b91 b48a70d97dfce0b91cb2c56d2d471d283b9a4aca a98f95f87594b61bf189dbe5d550bb1f676a2d3f bd3320d8316e3a7a08aba405bc8aecc9f7871f40 c74a4b2f09b5ccc2418999aea3ca90f0dfe42043 0e265a6e3d2c4064ab631495c7f2dc50c7370926 d5611b3cf28d2cfa05c1afaca7415d53cd75b3d1 65e77d8e52e192497ced0581ecacb3104f2e389d 6354acb1156c3f4218b2afc6fa694e4d658401d1 30df140f9e16a92bfa42f4743065f424d4f6becc 82f9a1b9ea4a64d832c1a0b7229674e97497ba04 26784a030a62649a7a1b187c979db005c6aba460 a8213f4b2134b8444a4d63197267d244ef9e5690 002f70518154c01e58c965bd07334bdaa462eec9 376165845b312c901b6e05b93835c63777cf2acb 5ca79cfa7d20ab2ae7e7907a3c87670e874f996d 9f615d75880bf5b3892cf9fbf96817df55323c1e 793d51325cdec7c750b17a0cc59e7206a035f85a 240f89eac34a25de3d2ff0a1d2e4dded08a01c07 138b05f354fb2f3c16dbc7346739855a4b0fc39b fb829e004454aaa4e76be3af0e56cabe8136d237 4812b86ee77373de3d4d5a65b81190b868f1f6fa ff207ba8e936c485ca1d24442fe75015f3f4765e ceccebcdbd323dad8ff8f461562c1693dea1f752 3b5d3ea11370cccfe74b9ef67c1a131adfd2d3b3 86ff51c827d36e431c4bc920362a623aad8a283c 2358d229200d8adb81427e4c6c40b6bce93658fa bb01e5d60088bff15a1684bc3a3e2b806154ca04 0a81e7daba12a001e654e9b75d4e592847adc032 5ea8e2bc20afaf27c68280bf48363efa09efc25d 4d1e436077ecafcc257ebc77cd7ceadc713c98df ca42c198f001b9abe3bf738dee3116e8efd37d7f 632b6e152d82b22ce46f124873699f9f361b2691 e66fbe91f73e57d73b8ffb74d3597ad181999304 38b70ab207b36eb129187e57a4ea19077a752c4e 79fc4252054154b190671920626594ab1b296e4d 5c8fc40de60ec50f9291bcae147429df5a498e44 9058fcd94ad9778446635a1d774c406b3dd5e9ef 64c477e6b404b7ac2d3e613783fd85ef3b8ee3b4 db253980a1cdb57f8719e5e7f3abcfe0b2efe1b1 ae73a00a7e83e0303935a62cf11af538cc087e15 7e41c8c5dae231a7efe1213180eb91359c6b917d 96259f0fca36fce82497600d4569c885ad27ae75 f8fc2c39b2407e70f8ed0bbec4d057b404ef84a2 45aa029df50aa9b98662c72b1d846421ba8d0c59 ca32b01f90c96d28728e86b9c45958d56d0caf88 c65a423ebde3c45c1bcff957712a44c2ef1be18d 1775497297460ded7f61f988595e2c30fb69712e abeb33b39473b53f1590dabf35dc5b6d9f70471e fb7cb5396b837e4e602a94fa75bf8308aa4df164 f40f6f8a9c01a79aa3f2c6b53176d46c370d35ad 40d2e0b51412c08b1d50687c47dd14594fe44a0e 1b224d71243686a749cb3a0add1490b21246c15e b8b6ad7e8a3659ef3e91599988cf00657abcdf5f 1d98c1373957848375c6f52825b26ec92d7de9ab 8f4971cd4b1b1a1ecb6b1ea59036ad4fa8184706 a1e2a4b7b22f38a4395fa077b80dab2945025b1d e134cda5764b325b357c692f6391abe78b2f02a7 9f8c15eced51e9f75b7e9ebd7413f1a3d2be064c 5fca62b3c155aa104a5e2c32203d7075332fb9b8 e7549664799a52c1581e7cbeaf86e727f46bdfa2 c0e10ba39cb957940c7c236c6ab778b4022d569d b23068e15a9838c0650106ecc6f32ced8828ad7f a6737612ddfc6bfce92abb55e5cfce55e6d52f6c 396599fb5a3a531b126b9bdbe03d0bd40caea472 849924c028e5ee319901c4b6b2a33df7c551baa4 a284ffbff6b7f72cc03f8cceb1ff68f7dd2b7f48 2c960de0620db9faad63b85cfd9d423568d1f6fe 5f64262cac6829f2e1c4cd623b49bdf48c00d160 4d73acd881eba4d7cbf0a3d352c47e611279cf1f b83b7b4626d311855d89181a9d92f3fb3121dc2f 8bc17eb09b6c7e7a9181d04e30b6987b37486362 25bd45dda45b4dc887ffd70943e20ab687be9657 06eae63721b21c3e49ffd2c99624e451730bff4f 92ec22c049548164dbb247efcb3040513aaf43ea fdcfbf06fb99e4bdaba66dd323a93d067a12d95e 9fbf96cc204ae79ed464470eea8e1de4e19496e1 f39a476b554bbf0ca101528733449614725bca62 2d7340f5cd1d2e459dd6e3ee8d94cb0564e2a07b 2234279a68e962799a5bbea204430c479647557f 9e2b0e89a325c3f011a390adcac4a7b6216ef41f a421b8008c973b5485722af28cafb97d8bd0b83c 3344254c2ad5c7655347d5e3b5f4377c89c09549 1f12a6be66a98331b96a33d66c090d59674aa79a 43b725b591a99f46f7c83a0f62a52e54a57f9dc8 b87512b0c0986a6ef86d6fce2767853098872c05 cf1a2210a83c82913eddc72a03b81457fc2c2a01 9bdbaa41030fa2c03c4f7ed68d467aa6b8ed4354 c68e1007cf22fd2cdde948100243e8212ad7d191 4a7785b47cba09682a1ce99855687d2459c77522 04b4d74d5227af7a31db04603e2d54aaa36ef885 918381e08d64206e4c7fb52a3883d11dd324639c fb5277e1d85d39c546b9787cc1d6abb6e76eeed0 e6a881591fcb9404c91287ad4bf31518b0a5b02c 8691ee48231353965fe3268eed3e9eec924c2934 ab986d0e75b7534ae41ac2e21bcc48fc3296b0eb 5ceb76e25fb3e754fc486450f81b632f6e66d54a 255a092a07c87e16165d1a9f08026f08d7f6ef83 f07c35b6d507e6d1d9f685e93745dfaded230f7a a992e4ad77354c300042381029c299715b2e480e 7cbb41490ec2fecb13fdd84a92e0f848b5917bc1 10e6a010c1334c008fb01e2f49d0fe6c9b5eb148 c5b21144efafc32846e4047f72c9fedadde7bcd7 dfa91d584cc7d19057cf2b109d17629931b81490 273d7707b1b76269a49af0558cae7b3d7374fb39 4f3d772a6a9e4c979617554e7281c8fc679e6a56 891b2fe9397efb4b3fe46a991bbbb9b430c5ebfc a7f584e3c014d8d68f5f0a3ee3745e09d3eff613 c56426d019c1ae413c2df0f96a33227723217c3e b85b3b80998019fd31b4ddf26603e45f0f68f9d7 d506bf4d861ec64f985be09f1f093562be03f42b 7976ace7bb7ad35d7d2f19160bb44e88a88eca41 4b4fef5b6bff7965f3a10006db4ca70905e8ebc0 f7bb81a733044d6fb01ac0109b4efdf42eba0fc2 8a0e771ab4acd3e04b8fe00815243a3dfc6534fb 9a60c68a55ebd23587fc3630a030bc63be1d0773 02a460cbfd8097733e33f8ef3409d0aab65bf9b2 59460ed23d71de55acc3def4cc2daac0a041796b cd5156d39837e53bae6821793099f2f17ba21a26 a2092c72954f61430225cca3e06d45dfc26ec942 53a8add2ff4c9247ab8976f6424120580d2d2378 d27b0a97dd680dfb6611f0ffe132a86f41884732 3998f3ca2d4f54e6e3144154bf0a128e50212958 fd952dad14d6dd0fac019809acb0bf2c5028cd63 1541e6465787faa8356c4370f35a8bba3c4bcbf3 8b10f49326072645f6635b3b75607370c47eb8f3 aaa96374a604299eb28cef583f8f011571b9aed6 afcd360b38e1027b0ee55dcac585d4e231c3c36e cf4c49a2be666879a7d8d7026927951d284898de 4545d5ca0a66b90f9d98c990f3aa20d5ec41412c 8705fc90f450bb7fc8244614d07e95755e5d9591 fa4db5995ef24b5be678635675fa99e6c4d69196 26a316b42febc8c726b0d118314afa5a92ca18bc 4c56496051eeea0a452a0b2948c3eae638e9012e 09d935f0e298309348e01184d1109e2d2877b408 191071a4d645ee15e035edb825ab2ca623e6f2e3 47b430749606d3a16b113f926d16e26885634d9c 36649bebc9a25879be08f89b01dcdb93a95e84d6 316519ca7352dd5bde202cd0d17893976a525335 c57573688b071d0fc2635fe5e9644fa1c1be4fd1 e3a4c12c289a0bb82d82ef68a4a366f934434cb2 6d950ff852bcdebc932dc4d726047180cfe2287b b53cc197729bd8bad1260eb0a67b3cfa80c5a833 fb489aba542df6bca0af242e89829afc834ba8c1 86e6cbd51dba1941d03c48d2a608083124cfba2d 693c4d979ffedc64f3440caad0c3a075fbb6b5c0 5e563dc84f3e123865b5e3c221b6140428c3cd9a 53b2dcd0c99e22df889338296b7e6ca8061b1dde 933e971a9f20b595f010f39d9527162405f19683 c99808f6ca62f110e0e40d345f5f8437acd0a546 79d614b08cf7a33f84680eee97880a8be21ffff6 2be7004c1c00a6ed58c0f32ea1bba2e3c3cec936 3c5ac9b57a72e1dd8e5977e7c839f5bc73c0e409 26ad47da03b8ab8843f8e026f6101ff25bd8e838 47118a430d9d194fbd43c4251787f4c52f9b7fe5 0a0f348b51ba5fee05f83d35f7ca12b889d2b7e3 3b4d742796df34aa6bc9dd796a3d33c45907b997 ec146e5d117768457d23094da657e765adcdf618 b2b541d7326ee719dd6593f8a50b51bf6268cc2a c2862285df35b9c700eb47fa992637b4b5bd8457,,FPP Ref components,## Change Description    Adds FPP component models used in the Ref topology.    ## Rationale    Continuing to develop the FPP model for core F Prime.    ## Next Steps    On to the Ref topology!
nasa/fprime,807,2021-07-01T00:02:45Z,2021-07-02T17:09:32Z,TRUE,2021-07-02T17:09:32Z,866fc638a1c4ad153bc6af0d4beb2ff4257f4492,76,40,7e41c8c5dae231a7efe1213180eb91359c6b917d 1775497297460ded7f61f988595e2c30fb69712e a1e2a4b7b22f38a4395fa077b80dab2945025b1d e7549664799a52c1581e7cbeaf86e727f46bdfa2 4f3d772a6a9e4c979617554e7281c8fc679e6a56 cd5156d39837e53bae6821793099f2f17ba21a26 a2092c72954f61430225cca3e06d45dfc26ec942 53a8add2ff4c9247ab8976f6424120580d2d2378 d27b0a97dd680dfb6611f0ffe132a86f41884732 3998f3ca2d4f54e6e3144154bf0a128e50212958 fd952dad14d6dd0fac019809acb0bf2c5028cd63 1541e6465787faa8356c4370f35a8bba3c4bcbf3 8b10f49326072645f6635b3b75607370c47eb8f3 aaa96374a604299eb28cef583f8f011571b9aed6 afcd360b38e1027b0ee55dcac585d4e231c3c36e cf4c49a2be666879a7d8d7026927951d284898de 4545d5ca0a66b90f9d98c990f3aa20d5ec41412c 8705fc90f450bb7fc8244614d07e95755e5d9591 fa4db5995ef24b5be678635675fa99e6c4d69196 26a316b42febc8c726b0d118314afa5a92ca18bc 4c56496051eeea0a452a0b2948c3eae638e9012e 09d935f0e298309348e01184d1109e2d2877b408 191071a4d645ee15e035edb825ab2ca623e6f2e3 47b430749606d3a16b113f926d16e26885634d9c 36649bebc9a25879be08f89b01dcdb93a95e84d6 316519ca7352dd5bde202cd0d17893976a525335 c57573688b071d0fc2635fe5e9644fa1c1be4fd1 e3a4c12c289a0bb82d82ef68a4a366f934434cb2 6d950ff852bcdebc932dc4d726047180cfe2287b b53cc197729bd8bad1260eb0a67b3cfa80c5a833 fb489aba542df6bca0af242e89829afc834ba8c1 86e6cbd51dba1941d03c48d2a608083124cfba2d 693c4d979ffedc64f3440caad0c3a075fbb6b5c0 5e563dc84f3e123865b5e3c221b6140428c3cd9a 26ad47da03b8ab8843f8e026f6101ff25bd8e838 47118a430d9d194fbd43c4251787f4c52f9b7fe5 0a0f348b51ba5fee05f83d35f7ca12b889d2b7e3 3b4d742796df34aa6bc9dd796a3d33c45907b997 b2b541d7326ee719dd6593f8a50b51bf6268cc2a c2862285df35b9c700eb47fa992637b4b5bd8457,,FPP Ref components,## Change Description    Adds FPP component models used in the Ref topology.    ## Rationale    Continuing to develop the FPP model for core F Prime.    ## Next Steps    On to the Ref topology!
nasa/fprime,834,2021-07-15T21:55:17Z,2021-07-20T21:22:05Z,TRUE,2021-07-20T21:22:05Z,6952ff8590b4b163b0421302178be08e5d43b72a,54,120,d9c70afc12a8c4860148ef22d2ba3c34ddae0f91 61fc9a80e8204986d08f170bfba644900566503d 4775dda8ad30d5a25d893242a02a6f6a385e602c 8c9cf785ad9619716c19f1bb5aec0c75ab2fd325 a3ddb4e91b98ae3e1aceb8388b7297f987979698 de923b7f9f0823ececb7a4357d91166491250fcf 0fec582e84ff22f4387abc47a74f6ba6bc35984c e2aaf0bace3fb9255c42e7763e7b0c09ec61f975 2191445a4a532d4bba15449de66840e0381382da 51c1843d7df785ff65b7015772bd7af5dfba12ea aa6385598660e3637fdc4ce7c9284e9ab464adbc d6c019927ff23ed69c191666f31dba54e1c52235 c0d545de55f2d8f37c0a6d24c5ad056d8de5fa4c 8a66b4fe9113d9bb0b70089870b88047a18090d7 4575240619c98e36ba7deebbdcbfbb194736ee37 e0f59608b9d6824bba6b48724ddd5f4f776f769d 27aff5c5b0466b9acbb345e050136578a2043123 76c336153bc13d3f272ca6c63fb7d242c801a4f8 608da97e62566608af59aa34eab93b4eeb005222 c1ef05ab808d6d20ec6e1ac36df48a83d3b22608 82d497c91aa8897b60bcf2fbc8a5217b77d0ef95 06b12c73d3f377fa6700a25db39e9cf475d5e3fb 950724a28381034976284d50330605d5939bde02 0630421e045a23a3cbfa50d1304a1f6ed00c1e87 22a5cb0363f102a928b55f9245e4614da5a728c0 1ed437eb680843cb5c38129855dcc55bde13c66b b538f56e6494bf2feacef22ceb1d1b7f6a6def9d ecfef6556cdbd42bdfe13a1cd1225bc0cb9601af 77c12a3ad17b5896a782340268fe37493359d7a4 ab0cc6346ba9d9fceee4af84d1b034428e2b46a4 2ec5422b68a96c34f8d1d41100fac3bf124feae4 e5bab08a1ca38aac992d2475bddfac8fcb2bacea 800238100dc5632eeb7107b8251c6d8070a51267 eaf420d93bc5113282b954da463a46e05db03643 dead6a42197f92cab11fa95171db02cca54e7ac2 78c98b083d45dba88e59bb855cdef6d281e259c2 95c41858183c2e44d108da8218dc6488ac01c258 3f12b53e483d5f0608ff06279e60cf7f48682854 214987d84d1a122be88fca696fe576c52f7f0afb b04be0d023f25a329e704c2bdc4bbf3d1594f31b 33b6b945666bac2e21625294279cb7f395fa5e34 a30f58d302a94fdac2495d4f8886074c4b3cb86a 9dae0169bd8aa8daf749d39215b5eb19209c7ad7 c28977b00453aaff08848c171680c674fea342dd d842bea8d5b4edacb755540b51500fda5cd0dd9c 8a042c908019e013a3921bbeac0d431167375890 21c585f0d58fd005942430e2bca27f24ab228826 98ece325cf1323cbf999ea600fb90a22f3263aab 51ba3dee07962d52308ade8657cba3e6e3fdf981 c91e182e6dc449b413d790df75d3e6eaff1bb031 f6a259226ebeec184b8fe2ab0f695704953e83c7 efa0885380429ca276eea30d776e9de6d494ce48 3d108045be6cd1c2976cf1e34a62028074cafa29 ece1ae7625309d4e828d2947d6a87903e0b64f95 fcd1a1825590aa6609db720ef3f3aa2bf8458634 9203737d829ad302fa3766952189ab88ea449646 2a7688f6208b94e72bd7d326f5177682e63c9b3a 5c5efebd3633eddf3d6340173c6354d0bcf1caed 8d1bc5ee94bd00d60c58f6173d060f7db5dd3f78 574e181d6c990525282d995d7fa5c0ca1cc68400 2297c5b0feda304470c110dcacf89a4a861e81a6 e84d05a9e43466fa910046abff2ba0d4b2b5b68f 00e68f65ae6ec797c0809712bee0308ac22c527b 42efd80a1aac2a6594983ff9a7fdafbaa58b4542 973a64b3a794c4b3853609ba39803ba19965b7e3 5f7dad14f6b5726cd373253936e02d8031c241cc 7f924730cea53d0fdd87074234e0886f74f66dbd 6e7ce2d3e31c2bf9eff6e10f1cbfe5692388d6c6 9f407cba042207efbd33c546fab41308d1662811 01d1b4eaaa86905979baa03db2fead5eec164b72 43a1ba594314d65c2d053e9a792cbe72912168ac 32d9b7a278552a894784ccf708c26de96788c1da 6b879c710f5eccd0736ce9aab757ee832ef94366 8a52b8bbf7f3a4407e6cd128371e4814dee736d6 0447b3830c5b4205b2f5dc332f8c166eaa0cbc7e 4e36d679a0ade154c9650dbff989d998092be0a8 f96f03cae2aa7b19a623d108c5e2f2a85632d98f ecf1559533e82b6c6b3ac52b89080fafd23c4053 d02784db5571c00d7f759994f59e63094622b4f9 77cddf1b47ba9b81e45f9d8fe6febf6388a759a6 9fa36e40555d23611254dc9d2376e566a49280e0 702f8b619f14f9bfc02a0221e38059551efb6acf 5de13ce1db0cc9910b766f0537c6d17eeded34a7 c9cda945955896b606a1ff49a85148187c1f38db 94400764e11e4bbb26f25feeda3326acc731b25c 25f25f0a000d12b5d5dabf7377813db47d1509bd aa95176e7a5f902b81a4d53bbc802d87f974bfff 8e11e8fac21b0274a7b9da553bd49115902dfc7a ece4313883488ca2f44bfbac37580b8a709543b7 7ace315f41ee604e80719ce05190cf3de49a179c 127a7c4b57be2634afeeac5729c772e6fd289a1c 32beb1a2de39d10265e5efddfbc66a4949cee221 1337f4b2e204283814de0788db19068aacb3aa1d 8ab1b8b12c159706bf2a9cb6f860474a7e682e51 ee50c803d8ec8702189c26dce8ceae7d233cc899 fb846d407698c681874fdde44790e37971e18cee 7de19e80440ae62350a42295a0a811d6b91b885b 17477dc6a0abafdfb02ec31dafbf70be53afae04 8b9e11062b8d2021857f75253412fee6ce5b7fb5 620d1057b814a4608d6d59a2bdcd52bb7ee44a23 fcdd141477bf6c9dd2cfd69136bb5213c2d9053b 1c47124853fc472667d25e5769cd71fa30bc6b0d e85e33e7e703545d0531e4af9b0a89c3ffa05ab6 1faca6b730e2d4fe9bfb1f246626c9931ef50447 d48c49ec4f77ff01a45c3d791b242aa3ea34bb90 8b0603fe42db803a73df41fbdd845b9b5a4574f8 74bab949eaddcbfef1841e2dbe49356b60cbf241 cf3e045c8d09a365243116f012b05e4bfc8dcb22 c899c376e04ac718a15e55be73e1d0e158b2c153 9a9b7ac146153ff2a9a336ec59df96d59dc19e42 f54eead13cb3f0392c1cd7c482c1bfce201c157d 2d39b55b4cce172ab75708e73bfb86c62c4dfc3b 0be9cd032f313e4d3ca712c2b71b01ee1f1f4915 9e964a8f7a6f5b31b5704e62c78435f044ea6e90 49e8382432a8d9a5849b9fe8375b4afc0b7d4e85 ed1639ccd993b98ca97454655a1c2b404aae5ac8 3278fffa75838633ee17a53bffde6df125f42ecc 7d3fe4beb339c6cfb27f9b5c5dee3f24412d3e2d 7e9af40181733eb2477f515a578815ecb490a0fa 1f539a0caab6054fb9b29e181fe584739de08ac5,,FPP Ref Topology Model,| | |  |:---|:---|  |**_Originating Project/Creator_**| F Prime |  |**_Affected Component_**| Various |  |**_Affected Architectures(s)_**| Ref Topology |  |**_Related Issue(s)_**| N/A |  |**_Has Unit Tests (y/n)_**| N/A |  |**_Builds Without Errors (y/n)_**| Y |  |**_Unit Tests Pass (y/n)_**| Y |  |**_Documentation Included (y/n)_**| N/A |    ---  ## Change Description    This PR adds an FPP model for the Ref topology. It uses fpp-to-xml to generate the RefTopologyAppAi.xml file. It uses fpp-to-cpp to replace the old handwritten Components.hpp and Topology.cpp.    Incidental changes to F Prime:    * Revise the topology XML autocoder to accept hexadecimal base IDs.  * Add a TlmGet port in Fw/Tlm  so that TlmChan.tlmRecv and Tlm.tlmGet have different types (Tlm and TlmGet  respectively). When these two ports have the same type  the FPP connection resolver can't tell which one is receiving telemetry. As of this PR  Fw::TlmGet is structurally identical to Fw::Tlm  but @rohandkn is working on improvements that will give these ports different types (TlmGet will use a mutable reference and Tlm will use a const reference).  * Add a command response input port to the Deframer  to support FPP port matching. The handler implementation is a no-op.    ## Rationale    Continuing to model core F Prime in FPP.    ## Testing/Review Recommendations    None.    ## Future Work    * Make the type names and header file names of the component implementations uniform. This will allow us to remove a lot of boilerplate in the Ref topology initializers.  * Factor the Ref topology into two topologies: (1) the generic command and data handling part and (2) the part specific to the Ref example.
nasa/fprime,885,2021-08-02T19:16:13Z,2021-08-02T23:27:12Z,TRUE,2021-08-02T23:27:12Z,465587e0c28927857ddd0403962b8be0b4a0ced9,153,89,64265b2f8361979188db329a2e3244d650079561 3e9de5f2fb1da5e4cf766ea20392bafefa7ea945 7fa2bbbe9d4a54fdff64ff806db5cb54139c03bc 3b16b49c4643efef3d4b90b0ba099c51af0e134a a38da2d5917104499b80b109860317f5707d7f26 7893fe8f20f6b5bf4223dbf5e2a994ae5f04c27a fa5c69cd2af9d2e213a5977e54be459edcb2d39b 80117c241d319fe5ac940c89141c27ba2fe20462 cb9378517ce0776cffc2aefa2c4ca9931f16390f 38e64b3ea2864b54b93111461857787db3f02781 b0e20e95c1f9ac97d7e6cc57aa0a2d8dd3a59dae 2513167696efd55a35f308d8e673864a0efe262f b6d5608a10be960a0d2918db1dd46369c52833ba beec355a1ff8ad122259b09f8916cb5e453951c3 292a2df7c30966a5c892a3c7c6e984a8098c3aba 763360c922f6a22a6b9c9d08fbd66a00b4d24479 657bb6138adffac267905b1cae4f89716ddb8bd4 e40bc9d754dafdfaed2916f846789868cdb5587f 7e26628ff51f4ddc49600c815862c79639f18b89 e35cb0db4a0f1850597332b5c2920c53010aaab8 f38bda5fd56226b3bfd2afa2185c0fcfc2be541f bfde7702634c933e3d4f17c49d0ad9cc0b43384f 807a477600423cf402acc696692c3e384414aee6 cfbb9ef47f70a829a8835d2c5d224974d3e6150b 83543f73e17710c8a18248960fe66a0c029e994a 64a76e99b5da02edf02b23979682465d86b21195 1e245642bda45fbfe8d676ec8e3ab638262619db a4619ea57d3d4deacbec9a4213742ecda38c492b 69f7727b128e5548417e8f6cc070d0439a3a9ebb cd8d6a9c8fa8487a39994e6dd168c25161143b95 fd46d7e0645de10c4669e85c41be5b17520f507f b99a73633ac09732864b15c218b35a9ad4658a58 7b14a77299e845b4bde77c78ae2ccb8dc0888bda bee7d86801dfd9d3b6e961e5063e6bd32831ef45 0429137eb986583b1e4baae2c8bf051d3fd6e171 7f05fb4b88c1b76bac861973203f5f26eb0125fb 947ebaefde128bc1d01d6f62a7300b55c47693f7 797f7aeccf64a666d8836d6eac6ebcc5adfd972c b4009b7a30c44ced505284e32d96c8ef6dc1195f 8f5da2a21600a81374a4e4a4697afa8b53bbd50f 0a9fa58af0e34963dd8dbdaf373925874529b5d8 34702dbdaa9eb66690500d91064e481f1345cb5a bc94d06f08e6896e9f2f456b4e5b42abd751f7e6 a59be9873786e708b54d40c79829561910395fbe d2c092d4c82c8d64fa62f1f50576678d7f36b997 b70c2c6933a31e57de6bef884c5fddd4138b6fdd 4709eec4a52a59737c7568c0534be4f642fcf83e 11fe226f7403e3abef96d3f211727c3e3cbabd94 9b9c2995334e27c7dc5b7f2f243e3f7eebaa2209 ff1002aebc62ab0c9015998857c6920ebc4b5283 5167dc29300ed113e42440bd0fe7e9ca399f0dcf 9d6164d4e1321c26a97b8743d82eafb05a9458fe b082264d308625e1cb443eb6d7b5bdd222955404 419c743116f033b575c74261f58f5743779bb038 2d83434439e0cc3b6beab49b2612d043386b9872 41377f3f59af81e14d4233c0875856d7987a3ccc 7da27e2603852a0938dc0ff2bb3e9a4e0a902e12 5570f366ce01173b1a092b5c6a1fae9fb3472581 e37dedb0dadbde01e38fc949eca46997a410caf1 81088b0e72c0a51ba9fc1a09ae135b0f6c065586 dd01a4859e3b60298343c7a435002c0f80265484 84bd25466c35b677e9ecc12044ee92e7daa73c8c 8f59a064d407217c6d3fdc7f72a3c0753cd98a4c 2df0565915c393a3a018da8574bcb413281a81eb 6fb9830ac4befbc719c8ee95e8c92188d0f60a46 5dcbb5c322fa6f26e3d97826289d9aa47e2043ea 21e84bbd61df606d75a1de2a06ede9909f41f197 e2898cdffdd3314e4454af576911301b3008a6f5 4e6d41310cf3a3357a6fad1744b3a6ebc2e15468 927d2f0a21ecf648e36db8a4d846605a2b86d9e3 cfb8447164a4c33aee58020c0b6469bc0460d0aa 5cdfcebd5092de9cfc9cf2995d5e0a44edce37cb 2a9678567b0b9dec2683d60cba4b1abebcf5004d a56ca7cd92ed749998fac6ca59c9325b868058f6 75f5d92c45cd2dba93ed2da2ab254aa3d6efbd35 faf66b8ddcd93cc47d53b868c1c907139b355d2c 46e71784484f773682bd32c2d25e482d5c4ff5bb 79cf2c3d08d4b5e84110489b79357340ad629ad3 5344afc8f44219e4e67fd1f19acf97f1a323e999 600994b658b4fc071306237ea3d2db3fa1e0e4c5 d589f0a25c59ea9a800d851ea84c2f5df02fb529 48dec2b72386e8063f08e06285fde31eb0e0d87d 764194a97519970dd0da35c450d2bc1666a374c9 b47358f9dfdf99d96979f010c11be0bc76d966d9 da137602b14501f0b9485190fa3b39c2cb8b3863 d3fa31c89ab76067cfc90924dd6735af59d52d36 c875ab3b175e8df2220024586a2f41735f44829a b01403f80a85bc7b339adc03d4241dcd35ecdc07 2991bc7ade9c49fe6d97c4260b45062c5db07049,,Merge devel into release v3 0 0,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Merge changed from devel branch back into the release/3.0 branch.  Resolves ~20 merge conflicts.
nasa/fprime,205,2020-08-08T21:17:33Z,2021-08-03T00:35:15Z,FALSE,none,5aa5be4ce6465fcb3266a8092e7830381a5af57f,9,1,73f5070c1c1d2c03f7ff1dbb1e9e467d451be7a7,,SocketCAN Driver,## F´ Pull Request  |**Field**|**Value**|  |:---|:---|  |**_Submission Date_**| Aug 8  2020 |  |**_Submitter_**| sommercharles |  |**_Originating Project/Creator_**| sommercharles |  |**_Base Branch_**| devel |  |**_Short Description_**| SocketCAN driver implementation |  |**_Affected Component_**| n/a |  |**_Affected Architectures(s)_**| n/a |  |**_Related Issue(s)_**| #200  |  |**_Has Unit Tests (y/n)_**| y |  |**_Build Checked (y/n)_**| y |  |**_Unit Tests Run (y/n)_**| y |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description  Adds a Linux SocketCAN driver to the suite of already available drivers.  Based on the Socket IP driver by mstarch.    ## Rationale  Projects needing socketCAN implementation can use this.    ## Testing Recommendations  See this branch for test: https://github.com/sommercharles/fprime/tree/socketcan_driver_tester/Ref/CanTester    ## Future Work  Add documentation and/or wrapper functions for send and receive if necessary
nasa/fprime,889,2021-08-03T17:58:00Z,2021-08-04T20:35:28Z,TRUE,2021-08-04T20:35:28Z,8fddb8c85ff5d8596345e54e9c0cf98ec9684004,7,148,366f93f175fe2c4729da099fecc12688f840385b 3ae468279b6e69b22ac48b3775b773359a1da21d bc050af5bd05d1d28461554ee9fd80a9ea9dc691 9a6e941024f32d85b0d132aa9f76734f89ed2ef8 4078ce35146d2ce6f8976140317d077b5e74f1a7 b0b380663ce7c4448cdf49df391b0dd0c5034154 45e99a1a0e866b8d5f61700e17877e62dce0b10a bce2af6aaffbef8e4acc13ff8719db24e71dc6e5 0811db7d03bb408f11b1f3039c493147fcccfcbb f70bb74e7186712b25fc8c2a5174bd8f61b2f98b 77836548145eab2b1027f1fc1898b36b0924c75a 2b47ec730556b14fc4c5985c9474f654b761b026 e80529ce7a47ea30bf6a5e09a5fc4af6bb211126 0a3d2e6de6cfd471874fab4d5b46b3e421d834b4 21036045c7c0ba6006c575116766b08cf4bba70d e03fd06c588c7298380b3ac8d49d73f66044609e 15374d07c641c9d617107b28000e8f9dfe596210 6ce47d2fed67187d06a67cb02131ad91efc89346 4c2c09f0d0f781c955f2d807ba3c0b326cf7c95b 91f3ab3d67b9fbbc85c0d805f3e9c347eeaa6f3f 61191bfe102d3f77216832dc068794f94ca0d470 c819a78131a2d7c006be960d1a70d7ea63e1cd28 1096697ec4c98c65fee4268e629509357812a1a1 202100b2113ed5553a597a524ea6969c823c2089 276118466bd907adb2818c2f2a95d8cf639d41ee a22de723d5902d117cff787e1fa41c7150b41814 8e7e1ca60c8f542d87b7fc0c80f0f7bb3a456f0f d6b1a7de362ce9f7983feaf2ca364c23b239bb4a e54d12d19ff7e4c629a7ca49057199e3c9e36c52 9c9540655e98150c64b0aae0c5c6a8d549355f27 a8b0f27f45f535dbfd217fa602c083e7ad1c305a 91e4a84ecea21bf9d3e13c99c4070b96d1f61e1c 83eb47212f9bccdfed3e8b1d1cbcb5144059ceda 8b261b46c40b7c781cc9d88e6ac862c9662bf3bb 09f7fad84d7ed4eefc55c63a54fb5ae7ce0fcadc aae982f1e783352cb7035c6ac0b60cf2c9d44f19 e09f537c6db164d596a28b2e6a4c9fd0e91f818f 051604e376680690a8e04a31ac9cc461c788af10 d0ad5f12e3245e81b6938c0e083f70aafdb9700d 0e0be62e217fd64210ccb6c30871c19a9670d8cf cb7bfca856ec1aea4e532686143ba6968ffd0ec6 68cc7201f7e8d1378a6466ffcd5679febf27350a b5754377d2488a8be250c0bc423a94de8c98d82d 62102b8f7f53e92d780face7e9e7ed1e7babab85 ee6e8f2e4bea086cc5b39b0271d1c44702f88f5c 3ccff2c85c4fbb0a373342e7b66e4a58a63b70d8 9000af62d1e0bb2eb72c21482a29c9e49bb23f28 f75fafcb9f4dc5bc5c4b3158b8735ed3d418740e 0aa43bd631831037fd65983f11e60a9144244c6f 7ff80f1b34c95c9f804cb55f697d7e3daebd7946 3a5f6d0ed11ceb584fc318900fcf8aadc1a25eb9 6e5cc22c73d1dad7467eb1f52fcee8e742c7fa34 8582422835362f69a3c86406092ace68275cbde1 1b1dab2d9a5b54f0774894f179de3b44ccb309b6 0c412ed7fb8249aa376936e480054cccd1920a10 21fa03179515980a582a0138c0f6bae15a3204bb b6f824762dc4e07c65edf7b53b4652d815a00722 e28745298b80141ea79b817094dea3eff86a70c2 458e1f95bd1466a3f89f3ef49fa32d12195ab625 793bb9b4b145e4bcc83cc9a1b5fd8b09b1f80bf7 aca3f787c77289af9c1c736dd6ba94d27bdc6276 b38764eb3a26124d341ee6964aaee1a7a2707462 6dcdb5deaf42c570ca7a410757098c37be66e599 b31b67ac1a1b659601efc190f750db83ff72d600 93ab84836fed2d703f257ac6e40fd0a4d8ccebf9 b82555759888ad51aec8fc32cdfd24a238c394a4 cd1f0c8da6234cf4a2e7b77a29a92930f5edb82d 326bef622a86ea210674394d03e7ce57d67faf10 b80827fd56cdb5935fda7175e2e36654e8965766 50c0cc3b429736ac5d849907ae8e5d49d7bd82ac ebe155d5ce5cd3d418df02acc22843a87826c3cc d01f825b93768f70459f2b306c8719a8baf92857 55f9c794dc2dbd71c4fbeb76c715e5f64cb0a6a4 32d4de7e9cc1a6c7ce33e96427747c4a4bfe3440 bf86771a1cd56f6004bde84671d5725b2bc78c41 7414f1b1b5b2284b14b7856dc569bd9a23f6bff5 442807d39dc82286f07646102d07869028f0e60c 322d7ced9cc612e6f672df5c0842b84d97f63c53 f0a2f16eeda07c845a55aec10d48da76cb07f5d1 8bf818a044cb35bd668e41b0c29c84d5e5236f8c 5ad6d7733103f74dfb829e252cb161c431333ea1 87da67301effb23e4d6a0db50398f1866dec6d3e 0b04c18a7497bf7f9cebe958afd7dfd621e49094 03e3871303e408ddcff8cef8aed443167ec79aee cf8aa08d7ba97fbbb6abd85bcbf235b9092556bf 8e92aef86243fed4dc3f2f06398cf7633446f3de 74f1eb07690e1849314d920671f2d9f41d0406a8 941037f702bfff6342287370e3b1bd5d0be89b42 e92e71454aa0a0a70a37db53fa25d4d1878b33c2 a79165be39344969f80f319d1f6599da9588ec64 b308206ddf900a2aa6c2926c4e0dde907471c3a5 7ade858abb98e0a25f918e66d152b69f50efd947 a31c10bd8e156375a2646eee828ad50703aabd01 158ecab7d3c3acfbff8bd91977de97fe6bfc1d55 aa26e28e859e1dfcb9409eafe9e54d83297ff52f 90e2b47ddb42328289ead073eb1c43555906d291 b7edab7bb4c89a1e357f226dbb8e9b23f70bd7b6 2310583403973ca290e8be7b4eb191d75d318b27 1418ec5ac409e884dd1d145979ff0d55a0cb4bcc b3e09c4a673358694af55dce7b3c7e52559340f9 713760c229b0bb7521bc9bb97c78a7b168becae2 6e0db346d0a0dd81f886e4760f17083b266cc061 47b5f8eba12a3d53cb4935b2b5a0ebbf2124bc42 d233deb37e65de7a018cd7835057b4ca3f041697 69341c17aac31735e25d3c13d711c52b26398943 68fd4b4f15f03671cf0336df6fa17db89feadce6 b4dda9736e964d737ce4fe04a9829ab352006b24 54699ce7fc8f8006ada36e1573b4adfa9d7c2942 d35cc3e49b9154d44c5777ef4f944402a37d8ed2 a2b0a526affe29c716d8d0701fcc142972151eb5 f4b2ced4d14e4002e2155efb95230c88558cfae7 5f90df07b4d1059bf24efa9688c08d34a1dd581e 8f017597d4255a4b5926d205adbeeb2ea97ed0cf fa70aba18d50cec6c7856bf6ff9fe1970ea03b51 e2fff8aa9d9b117dbf4c844e28c2b1acac26454c dcdc06661259d3565d39d40752ee2f65cfda6fbb 089c7e4e36793320c9a798cc7b1f8ba2d572e735 6c0a66383f7e57bc5d11be32074aab6db7f0101d 28a82fb791c38b441754e17edc928968266fec3e 6b2fd3a44be297da12e092af726d993c847c8951 55ac01e661df75c9d3aa3d510a3a03e27fae161a 01c0013afcb939c665adb403c0e4d9c213404e19 028d2832bf1c66fb97092c2d7ca48454ddf40070 e73448d57b937d77204408e6d022b33a8a263cad ceb92e62da98d66b553aec6e489ca8e289f64f88 d5d05207b087eb16d86dea90a412e269a7058c26 afa2cff14c6f9219fa37d73d495f976149d3a3ff 24388e5edbe507f6646526f309266a980f2296e0 366a18379de96dc529da99feddc97bed5aa33969 775d2c6fb0cd56d801d048c2484f4baa54d11bb1 57850a267a8fa2c50d1d5036b0eab28a0621f84a dc3dcdc96809f5397927e48a78e3bb8f32d5a1a0 0ff49c2dbe6a50f9c14aa6c3130a33e4b88f902f 8f2597d3cda4414f0410d6a94d959e90656bfef3 b9e5cdc5f498e185e0c0caef9b9dc2af62d9e266 59fc07815505a570713d7ccb9b96d41df75d2bff 0cb532151abef1283a62a67ab30083782014ef25 d65e78fb400dd7adc0b82b35725efd09131c479f 13f5d84d4fa4df009897890a51c824342af77195 a924751f4b69d906fbdd80bfa7f0026ad9918db6 2ed720eb8b98775112b91e886bb614307e4723b7 ba5e2937c700e65da3f6bb0c7ccd8181b4de94ab f77cbf5b6f6838a806bc92bab7b65f17ba230903 f9a9c46995246c98a1d5e86f9c8ca6863207230e fd6f830079dd779adec72f85bf1b1a37ee75758b dee313c23a295b9a96056ca55c5ad1026cab40d3 6b079aa8691b58fcda4c15e4bf54c0d157d6c77d 0f56bbe3b87e1b9d00b4654517f746d0abfc11c0,,Bypass master bash file in CI,| | |  |:---|:---|  |**_Originating Project/Creator_**| Ricardo Pena |  |**_Affected Component_**| CI |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Bypassed master.bash file to run test files directly.    ## Rationale    master.bash file was only used to run the correct test  which can be done directly from the job(s) arguments.    ## Future Work    Remove argument warning during the workflow
nasa/fprime,895,2021-08-05T16:37:02Z,2021-08-05T19:34:03Z,TRUE,2021-08-05T19:34:03Z,e7ba8aa23efa6fc34ed2dde5b4e7d60a41e00783,1,152,366f93f175fe2c4729da099fecc12688f840385b 3ae468279b6e69b22ac48b3775b773359a1da21d bc050af5bd05d1d28461554ee9fd80a9ea9dc691 9a6e941024f32d85b0d132aa9f76734f89ed2ef8 4078ce35146d2ce6f8976140317d077b5e74f1a7 b0b380663ce7c4448cdf49df391b0dd0c5034154 45e99a1a0e866b8d5f61700e17877e62dce0b10a bce2af6aaffbef8e4acc13ff8719db24e71dc6e5 0811db7d03bb408f11b1f3039c493147fcccfcbb f70bb74e7186712b25fc8c2a5174bd8f61b2f98b 77836548145eab2b1027f1fc1898b36b0924c75a 2b47ec730556b14fc4c5985c9474f654b761b026 e80529ce7a47ea30bf6a5e09a5fc4af6bb211126 0a3d2e6de6cfd471874fab4d5b46b3e421d834b4 21036045c7c0ba6006c575116766b08cf4bba70d e03fd06c588c7298380b3ac8d49d73f66044609e 15374d07c641c9d617107b28000e8f9dfe596210 6ce47d2fed67187d06a67cb02131ad91efc89346 4c2c09f0d0f781c955f2d807ba3c0b326cf7c95b 91f3ab3d67b9fbbc85c0d805f3e9c347eeaa6f3f 61191bfe102d3f77216832dc068794f94ca0d470 c819a78131a2d7c006be960d1a70d7ea63e1cd28 1096697ec4c98c65fee4268e629509357812a1a1 202100b2113ed5553a597a524ea6969c823c2089 276118466bd907adb2818c2f2a95d8cf639d41ee a22de723d5902d117cff787e1fa41c7150b41814 8e7e1ca60c8f542d87b7fc0c80f0f7bb3a456f0f d6b1a7de362ce9f7983feaf2ca364c23b239bb4a e54d12d19ff7e4c629a7ca49057199e3c9e36c52 9c9540655e98150c64b0aae0c5c6a8d549355f27 a8b0f27f45f535dbfd217fa602c083e7ad1c305a 91e4a84ecea21bf9d3e13c99c4070b96d1f61e1c 83eb47212f9bccdfed3e8b1d1cbcb5144059ceda 8b261b46c40b7c781cc9d88e6ac862c9662bf3bb 09f7fad84d7ed4eefc55c63a54fb5ae7ce0fcadc aae982f1e783352cb7035c6ac0b60cf2c9d44f19 e09f537c6db164d596a28b2e6a4c9fd0e91f818f 051604e376680690a8e04a31ac9cc461c788af10 d0ad5f12e3245e81b6938c0e083f70aafdb9700d 0e0be62e217fd64210ccb6c30871c19a9670d8cf cb7bfca856ec1aea4e532686143ba6968ffd0ec6 68cc7201f7e8d1378a6466ffcd5679febf27350a b5754377d2488a8be250c0bc423a94de8c98d82d 62102b8f7f53e92d780face7e9e7ed1e7babab85 ee6e8f2e4bea086cc5b39b0271d1c44702f88f5c 3ccff2c85c4fbb0a373342e7b66e4a58a63b70d8 9000af62d1e0bb2eb72c21482a29c9e49bb23f28 f75fafcb9f4dc5bc5c4b3158b8735ed3d418740e 0aa43bd631831037fd65983f11e60a9144244c6f 7ff80f1b34c95c9f804cb55f697d7e3daebd7946 3a5f6d0ed11ceb584fc318900fcf8aadc1a25eb9 6e5cc22c73d1dad7467eb1f52fcee8e742c7fa34 8582422835362f69a3c86406092ace68275cbde1 1b1dab2d9a5b54f0774894f179de3b44ccb309b6 0c412ed7fb8249aa376936e480054cccd1920a10 21fa03179515980a582a0138c0f6bae15a3204bb b6f824762dc4e07c65edf7b53b4652d815a00722 e28745298b80141ea79b817094dea3eff86a70c2 458e1f95bd1466a3f89f3ef49fa32d12195ab625 793bb9b4b145e4bcc83cc9a1b5fd8b09b1f80bf7 aca3f787c77289af9c1c736dd6ba94d27bdc6276 b38764eb3a26124d341ee6964aaee1a7a2707462 6dcdb5deaf42c570ca7a410757098c37be66e599 b31b67ac1a1b659601efc190f750db83ff72d600 93ab84836fed2d703f257ac6e40fd0a4d8ccebf9 b82555759888ad51aec8fc32cdfd24a238c394a4 cd1f0c8da6234cf4a2e7b77a29a92930f5edb82d 326bef622a86ea210674394d03e7ce57d67faf10 b80827fd56cdb5935fda7175e2e36654e8965766 50c0cc3b429736ac5d849907ae8e5d49d7bd82ac ebe155d5ce5cd3d418df02acc22843a87826c3cc d01f825b93768f70459f2b306c8719a8baf92857 55f9c794dc2dbd71c4fbeb76c715e5f64cb0a6a4 32d4de7e9cc1a6c7ce33e96427747c4a4bfe3440 bf86771a1cd56f6004bde84671d5725b2bc78c41 7414f1b1b5b2284b14b7856dc569bd9a23f6bff5 442807d39dc82286f07646102d07869028f0e60c 322d7ced9cc612e6f672df5c0842b84d97f63c53 f0a2f16eeda07c845a55aec10d48da76cb07f5d1 8bf818a044cb35bd668e41b0c29c84d5e5236f8c 5ad6d7733103f74dfb829e252cb161c431333ea1 87da67301effb23e4d6a0db50398f1866dec6d3e 0b04c18a7497bf7f9cebe958afd7dfd621e49094 03e3871303e408ddcff8cef8aed443167ec79aee cf8aa08d7ba97fbbb6abd85bcbf235b9092556bf 8e92aef86243fed4dc3f2f06398cf7633446f3de 74f1eb07690e1849314d920671f2d9f41d0406a8 941037f702bfff6342287370e3b1bd5d0be89b42 e92e71454aa0a0a70a37db53fa25d4d1878b33c2 a79165be39344969f80f319d1f6599da9588ec64 b308206ddf900a2aa6c2926c4e0dde907471c3a5 7ade858abb98e0a25f918e66d152b69f50efd947 a31c10bd8e156375a2646eee828ad50703aabd01 158ecab7d3c3acfbff8bd91977de97fe6bfc1d55 aa26e28e859e1dfcb9409eafe9e54d83297ff52f 90e2b47ddb42328289ead073eb1c43555906d291 b7edab7bb4c89a1e357f226dbb8e9b23f70bd7b6 2310583403973ca290e8be7b4eb191d75d318b27 1418ec5ac409e884dd1d145979ff0d55a0cb4bcc b3e09c4a673358694af55dce7b3c7e52559340f9 713760c229b0bb7521bc9bb97c78a7b168becae2 6e0db346d0a0dd81f886e4760f17083b266cc061 47b5f8eba12a3d53cb4935b2b5a0ebbf2124bc42 d233deb37e65de7a018cd7835057b4ca3f041697 69341c17aac31735e25d3c13d711c52b26398943 68fd4b4f15f03671cf0336df6fa17db89feadce6 b4dda9736e964d737ce4fe04a9829ab352006b24 54699ce7fc8f8006ada36e1573b4adfa9d7c2942 d35cc3e49b9154d44c5777ef4f944402a37d8ed2 a2b0a526affe29c716d8d0701fcc142972151eb5 f4b2ced4d14e4002e2155efb95230c88558cfae7 5f90df07b4d1059bf24efa9688c08d34a1dd581e 8f017597d4255a4b5926d205adbeeb2ea97ed0cf fa70aba18d50cec6c7856bf6ff9fe1970ea03b51 e2fff8aa9d9b117dbf4c844e28c2b1acac26454c dcdc06661259d3565d39d40752ee2f65cfda6fbb 089c7e4e36793320c9a798cc7b1f8ba2d572e735 6c0a66383f7e57bc5d11be32074aab6db7f0101d 28a82fb791c38b441754e17edc928968266fec3e 6b2fd3a44be297da12e092af726d993c847c8951 55ac01e661df75c9d3aa3d510a3a03e27fae161a 01c0013afcb939c665adb403c0e4d9c213404e19 028d2832bf1c66fb97092c2d7ca48454ddf40070 e73448d57b937d77204408e6d022b33a8a263cad ceb92e62da98d66b553aec6e489ca8e289f64f88 d5d05207b087eb16d86dea90a412e269a7058c26 afa2cff14c6f9219fa37d73d495f976149d3a3ff 24388e5edbe507f6646526f309266a980f2296e0 366a18379de96dc529da99feddc97bed5aa33969 775d2c6fb0cd56d801d048c2484f4baa54d11bb1 57850a267a8fa2c50d1d5036b0eab28a0621f84a dc3dcdc96809f5397927e48a78e3bb8f32d5a1a0 0ff49c2dbe6a50f9c14aa6c3130a33e4b88f902f 8f2597d3cda4414f0410d6a94d959e90656bfef3 b9e5cdc5f498e185e0c0caef9b9dc2af62d9e266 59fc07815505a570713d7ccb9b96d41df75d2bff 0cb532151abef1283a62a67ab30083782014ef25 d65e78fb400dd7adc0b82b35725efd09131c479f 13f5d84d4fa4df009897890a51c824342af77195 a924751f4b69d906fbdd80bfa7f0026ad9918db6 2ed720eb8b98775112b91e886bb614307e4723b7 ba5e2937c700e65da3f6bb0c7ccd8181b4de94ab f77cbf5b6f6838a806bc92bab7b65f17ba230903 f9a9c46995246c98a1d5e86f9c8ca6863207230e fd6f830079dd779adec72f85bf1b1a37ee75758b dee313c23a295b9a96056ca55c5ad1026cab40d3 6b079aa8691b58fcda4c15e4bf54c0d157d6c77d 0f56bbe3b87e1b9d00b4654517f746d0abfc11c0 a0cb35edcd46c2e3256e5dd643d62ff6b049c6a6 1063e111692a5261d42ec87d4c578b79afb20db2 f4648e9a92f2fbbf3074d4b5b0419c81ce0360c7 a5e8892b9829b85ce67fb9a8798c2d03cbb89a4e,,Switched to direct use of Dockerhub fprime image,| | |  |:---|:---|  |**_Originating Project/Creator_**| Ricardo Pena |  |**_Affected Component_**| CI build test |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Using existing Dockerhub fprime image to simplify workflow and improve file extension capabilities.    ## Rationale    Optimize CI and file usage.    ## Future Work    Extend feature to Autodocs workflow.
nasa/fprime,897,2021-08-05T23:55:59Z,2021-08-06T01:37:48Z,TRUE,2021-08-06T01:37:48Z,963a1ece60c0832ef330de4822203c8872724112,1,1,1df67f1a1d9bf661d492510398e8605a056e285e,,Don t overwrite CXX flags when settings the default flags,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    This accidentally clobbering user provided C/CXX flags that were provided before options was imported - affects root level framework tests that set additional cflags.
nasa/fprime,894,2021-08-05T01:17:08Z,2021-08-05T02:10:10Z,TRUE,2021-08-05T02:10:09Z,53030642798ae03f7893c5c28e1e59e119c093d9,2,1,94632599e5ced26c6310f6a9688926b366449102,,lestarch reworking docker,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Reworking Dockerfile for installing `fprime-tools`
nasa/fprime,914,2021-08-12T16:16:11Z,2021-08-12T19:27:02Z,TRUE,2021-08-12T19:27:02Z,3485228753c940a296c8722d12fe939bd0b10416,3,1,bbef2e0dacf84f74f589e8ce8c59cb8cb0867a80,,Fix autodocs github action,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Attempts to fix errors executing the autodocs workflow.
nasa/fprime,915,2021-08-12T16:31:07Z,2021-08-12T19:28:19Z,TRUE,2021-08-12T19:28:19Z,43767bd9166e4de4aadd942b82ed543583d033c2,11,2,8b0d1c96ed2de2e299a2a991bddb3fd8b184b632 470c680f5a8ddd37e2adb33f72c8c66403a953b3,,Run cmake tests in CI,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Run the cmake test cases as a github actions parallel job.
nasa/fprime,924,2021-08-16T21:32:37Z,2021-08-19T16:43:26Z,TRUE,2021-08-19T16:43:26Z,13fe1814c17d74cc754acd3b7bebc7636c126b1b,1,1,cd87b6b8dd787837d9c922dcadf36272e034a902,,Switch CI to run in VM instead of docker container,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Instead of running CI steps inside of a docker container  run in the github provided 18.04 VM.    ## Rationale    CI was the primary user of the fprime docker container and releasing new docker containers was a maintenance burden.  Since we were testing in ubuntu 18.04 anyway the docker container wasn't providing value.    ## Future Work    This will enable the ability for us to more easily test against ubuntu 20.04 in the future without needing to release more docker containers.
nasa/fprime,931,2021-08-18T17:53:49Z,2021-08-19T22:41:56Z,TRUE,2021-08-19T22:41:56Z,f4b601c186a20a105626e0c073ae6926a04fbb5e,9,1,ec5cbba05bf31fbcecc6b0fb071e86d423a78ad7,,Use ordinary char pointers for assert strings,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    As part of my C++ modernization work  I'm trying to replace all C-style typecasting with C++ casts.    The C++ treats chars  unsigned chars (U8)  and signed chars (I8) as three unique types.  The assert subsystem uses both U8* and I8* to hold assert strings. This quickly becomes awkward when trying to work with const strings and the string handling methods. All string inputs to the assert system must be cast from char pointers to signed or unsigned pointers  then cast back to char pointers when displaying the assert. Since I didn't see any benefit to handling assert strings as U8* or I8* type  rather than replace all these C-style casts with C++ style casts  I just changed the assert system to use char* instead.
nasa/fprime,938,2021-08-19T21:52:58Z,2021-08-20T04:10:19Z,TRUE,2021-08-20T04:10:19Z,6c542c789ef79d811cf6389eaa2ff0888ab8e98f,1,1,50c217ef3c44aea8375269e1b4e23b98d9d4761d,,Switch autodocs action to use VM instead of container,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Switch autodocs workflow to use VM instead of docker container. Hopefully this will fix the current job errors.
nasa/fprime,944,2021-08-20T18:08:57Z,2021-08-20T23:00:46Z,TRUE,2021-08-20T23:00:46Z,93b604b27dfd2999f53a6af9b6d47fe8c4b2e157,1,1,1df2f5b88bfe2858b53157a38049feef1f27a44b,,autodocs check out entire history to avoid errors merging,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    The autodocs workflow is currently failing because it cannot merge devel and the release/branch. Github by default only checks out the latest commit  so there's no commit history to use for the merge. Instead  checkout everything to ensure the merge succeeds.
nasa/fprime,878,2021-07-30T20:09:21Z,2021-08-18T20:10:25Z,TRUE,2021-08-18T20:10:25Z,da000c97cff30e2b6f87d8e63246ade950ad4703,23,23,1fcf1375155c7860dee32af982f2ed2c5272b84c 8f1829a09eb7ce5722071b537d390d63ca65bf4b f1f80632c28903dc557dba477cce82ba4734bc73 bf8f88e21f12887e59270412cd6aa1ac71b78ce3 5c8fd13f350cba7586d9b3b8edfb19022676edd0 46f79659d2239242b938312f6bf081946a1f9b1d 7c578c02cbb2b83b6359ecb1c1b949d76a93a44d 0018a1642e0388faa14181bd6b1462c71f2368a6 c82fba3d00f329a7ca693201ee97f3f5358e53b6 8478512d0b1bdbdb0e38b3688658724673e9e424 a403e875904e482e07128d665408cd45560187a4 58f415f2dde2ee4401bf2b348617782c46308649 b47ef5d4d5e742e343f5e6e8e6d51a1d5e0de74a 770c27fd91aebaff8fc4a8c043cfa2887d162db6 cfe5980db4719792b9771e71ff61c1802130e38c f4448fd5dba35412436190351b9a486647f6a1ab 6c5bfc0a06e216757988d9166d74f762f8f4eeb2 578106edcb68ff1d8383b4525679c49089a92c48 7df0f882240dc099013ee35e288edf62d3352979 9d728b4aad6f7908eaef3639b8b0982396234387 865517a83bc01bc7db6be0f5288c89a0a9d65654 5b683d6b272d626043a7d9b6cb65fd00d2f82517 3bf09f81c2ced8cc3462efbba4905154a0a871ea,,Import tlm packetizer,| | |  |:---|:---|  |**_Originating Project/Creator_**| @timcanham  |  |**_Affected Component_**| `Svc/TlmPacketizer` |  |**_Affected Architectures(s)_**| All |  |**_Related Issue(s)_**|   |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y  |    ---  ## Change Description    This PR contains the `Svc/TlmPacketizer` component and updates to the autocoder scripts to support generating packet C++ code. It is not the final delivery; there are some dependency issues to sort out  and the packetizer script isn't fully complete. This is meant to deliver the component and scripts to avoid diverging too much.    ## Rationale    This is a useful alternative to `Svc/TlmChan` if fixed packets make more sense.    ## Testing/Review Recommendations    The `Ref` application is tested to show it runs normally. You can exercise the `SET_LEVEL` command with a `0` argument and see the `LevelSet` evr and `SendLevel` channel.    ## Future Work    The dependency issues discovered during development need to be fixed  and the full end-to-end testing would need to be completed.
nasa/fprime,727,2021-06-16T03:50:13Z,2021-06-17T19:50:25Z,TRUE,2021-06-17T19:50:25Z,2358d229200d8adb81427e4c6c40b6bce93658fa,388,114,fd0f27859790de038d026c78bcd06fec06d8da31 b7dc2915bc6de28b55871193bd430c32c1131542 2bb992476da1eac612221e6a49d60c215c7eb2eb 49fbb9bf18706a5b962c4e5ab5528a302e91427b 2e78177a83d35415980d2ddc3ec683ba505be50d 39239d5a76f4c162a95ffa8ad338b7b0333fbef6 31a0250414e2a7290978631192fef39aefc6ff50 2d1879cec26c9126ec1ed697edcdb6d70848e9e6 60fa8dd8d4d2c3bf38804176467851dbab6c8c14 775bc0a63f2a2cea28c0813658a13d6fa1e934c2 dd97b48311352343d96f9de2cb844831b84ef285 79528ce6576f63f2de8d3d9b05d236694f086da4 1c8f988421f9667ad7f663813bc7cf35cf0678fa e90200b90b096d8d0dd9250b34ea9d263e4336dc 62ad34058a89b782d2a33eb3c7b9741342686c67 70dc9da0df11dfeb57a4a388204f76618dade2ed 043e0d333478fec82273f5fbd0567e72cea83f5d a1db1bb8b3ec55356a0a028ff18a9bde2361840a 000efd7ffc1d6cfc7cce1823b5cc7b8a8801ae53 b8a5c804e4bd739d1d3319e7d3dcb4ce1e668375 ad5a99a09240ee24e341e2fc55b3bd6dcd99df8c c8c17cfeb4dad8a92751144ad8d1435feb210893 0422ebb12b1a04f466891738cea4a076ffc935a5 07ac7c41afc32565c43577cb0a9981ac45c5d9e4 c40929755952397a79519ae32f13dbf8e4f7eb4a 6fd91b55d98c651012fe0450faf1955e3e817c66 28a54e18a6752327b959852ba2a0a5b0923fc3cc 5e71fe7d64721472e32d9c5f25208dd28fde6f01 7463011bb1a9e6e1b7c8aa1b7aa6d2fb509f3960 f32868113171b6c28fe868030c28959ac386148d 8625cc5f28c44916a63df1783d500e63b41ec7f1 e347c41b2c0ef8bde7b7e158b7b468bcebef74d2 02d59a4cd83013203c0127136fbfb50da6631a80 f537d54772d24020b4643b12e2e06c95ca33090a ffae25240d97e087e0740bf7bab7a3753f02f073 bec541908477f19e7dc457f3d0c1676178248f69 f243cf7d725a28383c5558a74b9571143aafda8f 9a05921bd538cdad7eef1a578460c0287250bcab d095d79bf59f537a517aca2282b3a839dc53e4be 1868a417b111aded473ae1bbf764a4d19d6b0732 5ba50fbbdd6bea0eae2600588b626cf7d2b149ba 52375bf1a7894f1bc90c842953076cdb6feed0c0 4f48b04cefb56d672a1fa435649530ff09b618f4 d52a08cc0d445d0aee62dd32341970b571aa2e20 a31c12f1c0a9639da818d79da4f7ddd036c0b3d8 0290ca38dd0d54c621d57607a2eb9d4a49257b60 3ec13ec514bb31fb6eb200920bcaf8f28273412a 0fe9fde8a63740731d573733cd1fc77775a6de6c 81e30219ca91714c44df78c2943837383aeb300b aadce9411d8f52239f41a004ba4beeb9704c7219 9faba38ea90ef772872f92be8ab8664b84818871 45342b6bc84dd116f2b3381f2cff51af8fc42134 fb375811695d3b25460c79b7b9081c3642684edc ed5f8edcd27f2942681ae9eb217b3a3204cd8ad2 495e18b17dc6fa7135cd3ee96dd07e597793b8b9 843a2189ad1010bd24751c46c62309341e223c72 de1fadd73893d3a5cb78171e0f8e4e55e1ccdbcc 6a04e5a3baa8595b879208fb64d0def3474508e8 860b148f55853331decda0059a124ab6be370afe 2851c23fa4975b8f11e78566af494447bb1f15cd 5bf3938208a333011cf80635b9e3aea82d56d355 a757cf9be0e561e6354dacb31ceee185f1350cae d95438a9ead6c14e773d634e7d129b27014a719e f74afad6a4d144c9ad7b6c2422457630a47ce764 7f2f5e3cfb82867673b3cffd2205ba7e7db6068b f6d9114ba41bfa3a3f3beb803472941579b17087 c82cecbd6b078e64ffd086e0bf083ab8bb8fe538 a37914f9f71758ea1b1e884afae726c67aa82252 8e85a0c9f7035257a0f021c25211d85075057b8e 881987e4124a70c4437bff25335d693a76e7a465 79620e9442f594d0844c0718305c5cf6aa9822c0 a0cf0ee1a7b5567d0e3329fc750923074fa8bf96 dd2bb40c785c9f0a018a890765fb630bab49c89e 9b2df311668b9f547fd330ec798213a2130d6538 9084bb1fd862fa7acd051f624eeefe466841003e 24299661cb973b91939d006e544c5613f5a880a3 fb36caab4fcc0d4709bd7c30d06f7b966d4a04ce 2e59aa562208f0afe7a830d02cc003f6dbaa7cf3 49424be3501444dfb4b1cda1d5eef922c22b10ea 14360b2fe359285ba848f1c847e67e4c940ddcd5 6a19018776f150c8ef7842be8ef8f230e5751e38 32aac9825b752eb7cc6dd59c9ae881d23af47ea7 d8938bd2602e2a9836783cce05dbb69c43524e78 b2dfa8773679a50643c1ab0a654c246243ae5824 702c1761a86d49381cf6f58535226c44d4ffda91 0c09213afb5aef5c17719c6efc7d175d4dd45666 d0212212bbb7a7af1c57f5df8b277937c1a6140c 7add1964924bd773e33045545d952ef51c9b616a 48d4138b19bd502cabfbafa4cb49df21c9b58cfb a35798a73a56fcb8b8567f7462124ae6c451099b d5af8360232a9904b2a2eb2a9f5181c8c03b273d 1077a20575be0aa6ce6080d88dd6dc00187a3713 242d9dea5c371d37ea5664d56bfca67711c2f4df 15c8284a234978910ce917328e74f6286ff2134a a927c5cceab76cfd128322334261d1e1a1572ce9 f707422dbf763e5fbb456243bae66b3269675867 4fd9627965386b89f326fca1a31281635317440f 987ab2b4fbe0d8897df4332c38a97570d68ea7f1 1d8d706268686bd6ba91f5595cb43ea3256f06de f3045700f4f85a1856160c066cafca1163ebbd27 f799e0b7bc53a171d6afe99921440408bf755b58 bc9fff89db5c74221427b586472809f1a8597fd9 849f8e4f6b76586fbe789e7943dfb7c7cc4ad0d5 f5104305854818500672a4b4a0cad9031d42cd8a 98f0b033c2f921e72a9aed536f08d71a9539f715 db42aa85bedf85baf4b776af955f7aa3fa128831 ad9d95d337645eba04997d720feb18bfabb5e700 90d7e33a5a654ef2b1129434c8853d21acdff9d6 5e1b48dc5861627a60040abd1ee42f33c0aba9a0 d1afeafc3e8acb110dc9ceeac6c616eac9256e11 08373edde611f1fc7c8f3c86a10dcdb7e0da969b f334320cf4594e216e950e71c2ff258e78bfde64 6ddf656a243a36243c7dd4bcb3186dac2fc80cda a98f95f87594b61bf189dbe5d550bb1f676a2d3f,,FPP Types and Ports,| | |  |:---|:---|  |**_Originating Project/Creator_**| F Prime Infrastructure |  |**_Affected Component_**| Various |  |**_Affected Architectures(s)_**| N/A  |  |**_Related Issue(s)_**| N/A |  |**_Has Unit Tests (y/n)_**| Y |  |**_Builds Without Errors (y/n)_**| Y  |  |**_Unit Tests Pass (y/n)_**| Y |  |**_Documentation Included (y/n)_**| N  |    ---  ## Change Description    This pull request starts the process of integrating F Prime Prime (FPP) into mainline F Prime. It contains the following elements:    1. A prototype build system for translating FPP models into XML files.  2. Changes to the Fw code and to the Python C++ autocoders to remove inline enums.  3. Scripts in Autocoders/Python/test for building and running the autocoder tests.  4. FPP models for ports and types.  5. FPP models for the following components:    ActiveRateGroup  ActiveTextLogger  ComSplitter  Deframer  FatalHandler  Framer  LinuxTimer  PolyDb  Time  TlmChan    The prototype build system is based on redo.  This will be replaced by CMake in a later PR.    To develop the FPP model and the XML files it generates  you need to install [redo](https://github.com/bocchino/redo) and the [FPP tools](https://github.com/fprime-community/fpp/tree/main/compiler). If you just want to build and run F Prime without developing the FPP model  then you don't need to install these tools.    No docs are included because the plan is to replace the prototype build system before releasing this for general usage.    ## Rationale    Starting FPP integration.    ## Testing/Review Recommendations    No specific recommendations.    ## Future Work    * Extend the FPP modeling and XML generation to cover the rest of the components and the Ref topology.  * Replace the redo build system with an integrated CMake solution.  * Remove the generated XML files from the repo and require FPP builds in order to compile. This is necessary for full integration of the model (e.g.  integrating configuration constants specified in the model).
nasa/fprime,965,2021-08-26T00:17:38Z,2021-08-26T00:34:25Z,TRUE,2021-08-26T00:34:25Z,6e090833828d26c9dc5d58644e096b607a3929d9,1,1,f4892bf0bccfceeb009b26f03b5551bf5182dd11,,lestarch removing lgcov flag to fix macOs unit tests,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Fixing OS UTs for --coverage
nasa/fprime,956,2021-08-24T21:20:34Z,2021-08-25T15:37:54Z,TRUE,2021-08-25T15:37:54Z,2f6621f6090df56f067e58954de34275f2666166,2,6,22edeb69bee737583b6ccc9eab485527cb65b331 385a3ea6c1b1422d4e794d37e3fe8cc92fc52ef6 27d24f50d436a836b1f925f86571de753ae0db03 69f91e96cf6e74323191dd7341d7b2ee1e89f772 167747fbed0ab244bdc0dd6271f14e91dd22df5f aea59f1c8f8c821960e6b4ee3b1502edb882bd84,,lestarch compile options added correctly,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    The way compile options were being added forced a rebuild of UTs for every update to the CMake cache.  This adds compile options properly.
nasa/fprime,823,2021-07-14T15:50:21Z,2021-07-14T19:44:24Z,TRUE,2021-07-14T19:44:24Z,5cdfcebd5092de9cfc9cf2995d5e0a44edce37cb,1,1,9bbf86a9c32995fdcd027a113bb70637dcdea897,,Update tutorial support yml,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| Tutorial Support CI |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Tutorial Support shouldn't break a merge/PR to devel because we need the change to fix the tutorial.  However  it should fail on devel and PR to master such that we are warned of the failure and correct it before merging with master.
nasa/fprime,320,2020-12-21T22:53:31Z,2021-01-09T15:40:11Z,FALSE,none,d4f878825a02adcb9f3979d39ab098b40af4c7eb,100,13,31e9c1b2eb717b7c0bed64c3be710d70115ccef6 6310c50bf18c0753b3eb45873f2ce5af384ebeef c507c4ab5fa3367999ee1251186d70fe4922a3ed 694ed1effc859f2ef1e59651ef558a4789381da1 1ec45150484041964d047578e5664d5bf4098254 91b3ddb533ff6916efae0d70e7d1ebf1e4b9ec63 f925dcbad497e8f6621c352d75d1ca0cd5415783 9ca1089c769a95b692df7044cd610b8674adee25 12f3700ac6ae37b580e715af5cca84cdfe7165f3 ae564e08992293b52b8e0841d16bcf1f53eee6dc bf5d6e5ca1a0835540a8e2a7e0575fedd8d881c1 2d62980c4cc2217a8cd7ebf765fc0c8774b2d4d4 26f7600da45689da8f9d57f03e3d9456a657846e,,GenericHub and GenericRepeater Components,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| Svc::GenericHub and Svc::GenericRepeater  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**|y |  |**_Documentation Included (y/n)_**|  y|    ---  ## Change Description    This adds 2 components  a Svc::GenericHub and Svcx::GenericRepeater.    ## Rationale    These are easily sharable common components.    ## Testing/Review Recommendations    Reviewers should ignore the Tcp rework  as that is captured in: #316.  This was required to be built on-top of that rework.    ## Future Work    None.
nasa/fprime,354,2021-02-10T00:52:47Z,2021-03-08T16:13:59Z,FALSE,none,879d198857db93d635c66f30e3065145137cdcb6,44,15,8c3ca83db918ad6b571fe9ba42a20df5b1c3ef90 a24b0a010dd075d9a47f524847258c7c76a1ca6d 5abebb4ef8ec588da6ace8852a3ff0ca3b0dc08c fbb1a38da19c276d700c94b4e44cbf849d154d04 6eb78d66780f470eb0f7aae023bbeb31892a1446 16fc390dda111b1ae23c569bc52c6e2afa69e243 05557c237eb59fc05ce0d194d1393a1cd827941c 573a293e628347efd40c55a6e3e2413957c149dc e3bfc4e3dbca1766c2cc89fd8da4136350c367ad fd6124e437f638cbcfc19f9d680a6eacaf62f107 df2089cc598cedf12cdd4261d43dfaeadb8f2658 b4249a4cb2d623b542c717c80bcdac17f17aa13b d3726de5faab13bd9923fa7e3a25c6ba83a243a0 468c7ae870c223b546fdc5eca09dce3682d4368a f5894ef2e89cfb3a047758befe1e2b7eaa745c32,,lestarch refactored IPv4 drivers,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| Drv  |  |**_Affected Architectures(s)_**| N/A |  |**_Related Issue(s)_**|   |  |**_Has Unit Tests (y/n)_**| y |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**|y  |    ---  ## Change Description    Refactors  SocketIpDriver into 3 specific drivers TcpClient  TcpServer  and Udp.    ## Rationale    More reusability.    ## Testing/Review Recommendations    ## Future Work    Need to fix re-connection code.
nasa/fprime,994,2021-08-31T18:44:58Z,2021-08-31T18:56:48Z,TRUE,2021-08-31T18:56:47Z,b4aee662125499581b1782425420847d9bee9ddf,6,4,12afb996d63a5a5c8e5715d0ee7d967200b8c449 b68d94ac785cd313c32b45b983bbe045ad7740dc aab67d3dc9e34bbc9cd3f1be2cd120d545f25796 5486ed648b79e08504d75b57ed0128addfb29509,,Revise syntax for FPP init specifiers,* Conform syntax to this change in FPP: https://github.com/fprime-community/fpp/issues/90.  * FPP tool update is required.  * [Incidental] Remove a few temporary XML files that were accidentally checked in a while ago. During the redo build  these files are generated and then copied over to the place where they should be checked in.
nasa/fprime,912,2021-08-12T03:24:34Z,2021-09-01T18:23:00Z,TRUE,2021-09-01T18:23:00Z,2bc9d80759d3575be528e01a21605e021849cf3e,183,30,4e7bd5a9dcb1b578df2200d47cac183a0f6efe17 db03544bfc0efacdbaafdfd93fe5ca41479080ee 21c28d3fb8f08ff2eb05afffd9930d3424a407f4 ef28ed5be6a2786b01d5698d82da34da65a4da8c 342cbece53c8880809137a3225e2898d6da17865 7eb156da51bbb70a350cb274c109455172c84740 744024e145fb902655bdbf94b9e582a4ca6f52ff 3b8769ab8994016bfce7bd3eaed00ade51aeb19c cf29d12956790c1b9f1a3565601511784f8b17c7 f8201408cffbe883dd3c7969f92d51485a11476d 61d8ef506b4688800c9160611cf4a9113d04fbaf 8c725b07ce3cb0d8ba1f3ede188bdb3f04f28f81 e1c086636fbaec43f8ba4d3defa181e5f27acd29 8b83ef9eff262bbbad8794b6abbba516898d0e10 a7cb690a987ea49f36c0f051fee80415687a1fca 6989241075d1faa50ac3e6771376a861991d2e45 7192e67c2cbba6fe265f37998ef4b5425e52ce59 4f494f0b92baf0f62c9853f6a3a8805800cac811 77b34b2b144a6dfd3dc25a6a595eaee10078d293 b9edc4d5654736eebfb8fc6bc05fd4e32687b91d bae4937213e6e79dbbd052723a41915745659e28 07a5ad50c8c62df6d5833fa8e9d11abddddcd99d 9ff14661657b16f9f8a1d669127657dd874d7c33 b101a23b7f950ddc07bd537c803d49118598614b 8ba0c95c182725bf5aaa1b470f6df11003dcdf01 7a1c6611753c014f7688c3d2d278734215dcfe5f 91b5ccd802cf94a06d832f08e484d92850e69e92 f6db8d563b65cbe77cc29e9d6aa959f90f6aa16d 822910afe57027b43b183c703ac9af0a0cac90e0 79a49924b62211506f408df2d464a0b4456f0f81,,lestarch integrate FPP and CMake,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Initial CMake + FPP refactor. CMake cleanup.  Autocoder subsystem drafted.    ## Rationale    FPP for the win.    ## Testing/Review Recommendations    Only the build works  other functions will come soon!      ## Future Work    impl  testimpl  dict  ...  ...
nasa/fprime,642,2021-05-27T19:52:24Z,2021-05-28T20:19:24Z,TRUE,2021-05-28T20:19:24Z,23d83854ae5e5a895ccc8649dbe59c2bcccb06f8,12,1,3dffa0d39d510f7668157aba869b21a6597abfd8,,lestarch changes necessary to host on pypi,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| Python |  |**_Affected Architectures(s)_**| Python |  |**_Related Issue(s)_**| Closing #405  |  |**_Has Unit Tests (y/n)_**| n  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y  |  |**_Documentation Included (y/n)_**| Not yet (intended) |    ---  ## Change Description    Changes to setup.py and other python to work towards hosting in PYPI.    ## Rationale    See #405    ## Testing/Review Recommendations    ```  pip install fprime fprime-gds  ```      ## Future work    Correct documentation to use PYPI.  Split off Python as separate repos.  Update CI.
nasa/fprime,1004,2021-09-01T18:51:36Z,2021-09-01T20:46:44Z,TRUE,2021-09-01T20:46:44Z,3df30d659c37187ccde79fb69a82c3446e38fa01,2,1,45dd5dc6d5c19ba7341379b5282c3609a6c37811,,lestarch allowing GTest to be disabled in UTs,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Allows users to disable GTest dependencies in UTs:    ```  set(UT_INCLUDE_GTEST OFF)  fprime_register_ut(...  ```    ## Rationale    GTest was always intended to be an optional addition to our unit tests.  It helps the test  but should not be required.  Thus we have the ability to turn it off.    ## Testing/Review Recommendations    None    ## Future Work    Ensure this feature is not lost in the move to `v3.0.0`
nasa/fprime,964,2021-08-25T23:42:01Z,2021-08-26T01:50:46Z,TRUE,2021-08-26T01:50:45Z,052bbdb8c0d0b3934762823c2c9d7647d0289a6c,145,5,f8201408cffbe883dd3c7969f92d51485a11476d 21b11e44b4127ceaa68d80bcfa51938a9406e6ac 894b63eb278e981e5df9a9ec35a018bb3229e8ce 13249c8ca1365784def6b0df11fd8ae113f2d592 c8248ee59920626722b56ca9bd91f87d8512abf8,,lestarch merged latest nasa devel,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    devel -> v3.0.0
nasa/fprime,316,2020-12-15T01:12:14Z,2021-01-09T15:40:26Z,FALSE,none,76ec2ef9b8e011e650cd51d22aee42fce92dcecb,75,6,31e9c1b2eb717b7c0bed64c3be710d70115ccef6 6310c50bf18c0753b3eb45873f2ce5af384ebeef c507c4ab5fa3367999ee1251186d70fe4922a3ed 694ed1effc859f2ef1e59651ef558a4789381da1 1ec45150484041964d047578e5664d5bf4098254 91b3ddb533ff6916efae0d70e7d1ebf1e4b9ec63,enhancement,Update ip driver,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| SocketIpDriver |  |**_Affected Architectures(s)_**| All |  |**_Related Issue(s)_**| N/A  |  |**_Has Unit Tests (y/n)_**| y  |  |**_Builds Without Errors (y/n)_**| y  |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**| y  |    ---  ## Change Description    This breaks the SocketIpDriver into 3 pieces: TcpClient  TcpServer  and Udp that all implement the new `ByteStreamDriver` model.  In this way users can select from the three IPv4 types available to run their ground connection  rather than depending on an hybrid tcp/udp socket.  These drivers are generic  such that they may be reused to support IPv4 Hub pattern bridges and other setups and are no longer specifically tied to ground.     It also refactors the `Ref` example to use two drivers  on to supply Tcp uplink and one for Udp downlink.  This was always the setup  but now this is evident at a system level  and not hidden in the details of a component.    ## Rationale    Customers have asked for Tcp drivers of various types. This was close  but not exactly  the same as SocketIpDriver. This puts forth some generic drivers for IPv4  remove the "magical" SocketIpDriver  and makes the split for Tcp uplink and Udp downlink clear in the Ref app (rather than hidden).    It also sets up a model for any driver to be used by the ground interface.  Those drivers should implement `ByteSteamDriver`'s model or at least the same ports.  Once done  they can be substituted in place of uplink  downlink  or both.    ## Testing/Review Recommendations    Unit tests for IPv4 now exist.  Tested Ref app and it functions as expected.  RPI build passes.    ## Future Work    I need to add documentation describing the ground driver interface  and the new components (SDDs).  Code review can begin  and I'll add documentation.
nasa/fprime,780,2021-06-26T02:27:21Z,2021-06-28T16:49:50Z,TRUE,2021-06-28T16:49:50Z,2be7004c1c00a6ed58c0f32ea1bba2e3c3cec936,286,305,843a2189ad1010bd24751c46c62309341e223c72 de1fadd73893d3a5cb78171e0f8e4e55e1ccdbcc 6a04e5a3baa8595b879208fb64d0def3474508e8 860b148f55853331decda0059a124ab6be370afe 2851c23fa4975b8f11e78566af494447bb1f15cd 5bf3938208a333011cf80635b9e3aea82d56d355 a757cf9be0e561e6354dacb31ceee185f1350cae d95438a9ead6c14e773d634e7d129b27014a719e f74afad6a4d144c9ad7b6c2422457630a47ce764 7f2f5e3cfb82867673b3cffd2205ba7e7db6068b f6d9114ba41bfa3a3f3beb803472941579b17087 c82cecbd6b078e64ffd086e0bf083ab8bb8fe538 a37914f9f71758ea1b1e884afae726c67aa82252 8e85a0c9f7035257a0f021c25211d85075057b8e 881987e4124a70c4437bff25335d693a76e7a465 79620e9442f594d0844c0718305c5cf6aa9822c0 a0cf0ee1a7b5567d0e3329fc750923074fa8bf96 dd2bb40c785c9f0a018a890765fb630bab49c89e 9b2df311668b9f547fd330ec798213a2130d6538 9084bb1fd862fa7acd051f624eeefe466841003e 24299661cb973b91939d006e544c5613f5a880a3 fb36caab4fcc0d4709bd7c30d06f7b966d4a04ce 2e59aa562208f0afe7a830d02cc003f6dbaa7cf3 49424be3501444dfb4b1cda1d5eef922c22b10ea 14360b2fe359285ba848f1c847e67e4c940ddcd5 6a19018776f150c8ef7842be8ef8f230e5751e38 32aac9825b752eb7cc6dd59c9ae881d23af47ea7 d8938bd2602e2a9836783cce05dbb69c43524e78 b2dfa8773679a50643c1ab0a654c246243ae5824 702c1761a86d49381cf6f58535226c44d4ffda91 0c09213afb5aef5c17719c6efc7d175d4dd45666 d0212212bbb7a7af1c57f5df8b277937c1a6140c 7add1964924bd773e33045545d952ef51c9b616a 48d4138b19bd502cabfbafa4cb49df21c9b58cfb a35798a73a56fcb8b8567f7462124ae6c451099b d5af8360232a9904b2a2eb2a9f5181c8c03b273d 1077a20575be0aa6ce6080d88dd6dc00187a3713 242d9dea5c371d37ea5664d56bfca67711c2f4df 15c8284a234978910ce917328e74f6286ff2134a a927c5cceab76cfd128322334261d1e1a1572ce9 f707422dbf763e5fbb456243bae66b3269675867 4fd9627965386b89f326fca1a31281635317440f 987ab2b4fbe0d8897df4332c38a97570d68ea7f1 1d8d706268686bd6ba91f5595cb43ea3256f06de f3045700f4f85a1856160c066cafca1163ebbd27 f799e0b7bc53a171d6afe99921440408bf755b58 bc9fff89db5c74221427b586472809f1a8597fd9 4e2dffb80275006f17edcdc2ffb0d48419e0f9f6 2a8d9e25247cacb55ddc6e88d5d90209e5177447 5abeec3dd779cf2eaf50cd434984e941bcbff96b 6369758dcef84aad57c6dcf611b670f44c048403 3964810a3cb69ead2fb6d04047efb84c923f7462 eeab9901379df6ed83ab106ab695b0f8788127cc b2a255550b3dc145ef89948d9aff6435c3834823 2a17536f0ce1006ba659876f734e67474397c13c 854d1a81b5f191436df7022b53c6b09085f8be10 849f8e4f6b76586fbe789e7943dfb7c7cc4ad0d5 f5104305854818500672a4b4a0cad9031d42cd8a 98f0b033c2f921e72a9aed536f08d71a9539f715 db42aa85bedf85baf4b776af955f7aa3fa128831 ad9d95d337645eba04997d720feb18bfabb5e700 90d7e33a5a654ef2b1129434c8853d21acdff9d6 11a60bd408dcf9f5fdb06b3456b57d76a1b893a5 5e1b48dc5861627a60040abd1ee42f33c0aba9a0 ec1e75750d8bd55272df82410795001d7a8397e0 66217f4013be2dce7ea8e158b4d5a58b1f8a7caf 35c9b748c215c90386548529184f35d76a450f8a 97bc2125269aad5fa232a1bb47ada6749e549e9b df9200918c79cdc25b2b6de6876a1982c0252c7c 5be86ee65ccf5591677777651a609932155b54bd ebbdc145196e2c415709c0487e9587395228fe50 d2079543406948977fe2ce887245942b7619b19e bf85a3198400c1513f40d1591367b166ab0e4b19 9b85681244f79ee39d6a62cc829f6b2af2301c29 9fdeca7ecd05410b15fcf601d0a10fd226573ba5 6df9affbb7a3dd5f789b0dc49e1fdf6a067e2fd2 c858c90ee2ddb2f6add6d15b2b7b4cd6fbe22d21 321d6659804c0cf62f77ee5f40ef2454e7a799de 321e21528eb15d3631650e6817370520005562a4 2cea04ff627d4476a9b0e2cbcdde45676340982a e528243f01d0551904aca1035a5a54b7a3523ae7 262c46a3d37ad5a3c42e641085817a23bad1f8ab 621d5c8fe7aed4ebb27ac7469255082cf8ac5b23 1b985ee10cde54a55c40d762d24b8c3586253a22 57dd9d76c944cf55a09500a6d41488ecf49d27e2 4c0342c2126f09a815241fff779a5faa26126c1f ddfb42f54619636d42ccb7a6134cd78a9a795e82 0cd42685daf8eca91807182d0c763049da41b1ce 483c9a37d37784aedfc2ce6e2420fc54fcfe3610 4373db6fed5f47592563664ddd19cbd58df410ef 89aee6dd7b69012eec40221f77e0ae259b70091d 13bc400ecd8424ceb97e508d1ca34a899dcbea73 49dc824ec371cfb89fc5229a5049f5ba0c450751 8fd4ed873262370d3fcf3d0f3cd681f9e3260f81 0716fa646fb8b694dda667cac81a943c457cfad9 c32493b5c72592dfb23a4a9ee4b59b5aefe832c6 37d73806f2521a09191c5be5f18a93927d0823c3 7c3390abdb8df150cc9f1006747da15f292f1263 8c1915bf65897acee9128e544cd7b9a2cc66fd39 a6e868bdaededa20b2aca73ee2e5ad1489a1a4eb ceb8cbd01574b899e65793c9a175dcb211232028 d1afeafc3e8acb110dc9ceeac6c616eac9256e11 fcef211bf32953af6eb80ea0e64eebf1fb4d2645 2dfa44355972953cb2224680c3952daa6c09726b 359157540e56644dad0b2fea982373756f1f89a8 08373edde611f1fc7c8f3c86a10dcdb7e0da969b 2a794f741459ce431bd2cae229c6ae9b0310df2c 0abe7d25706381624dc34617cc692526fed8eaec f334320cf4594e216e950e71c2ff258e78bfde64 91895b3d581000d199e5de5ac5b782e06a755138 6ddf656a243a36243c7dd4bcb3186dac2fc80cda 633f9ca328dcbaaf415a6e84c8fde58e38c1bbaf eff094938b7e2870d2171d5aab821c2f1f514bdf b8b6b4d17b8a6c58f42b34fcc7a5d328b85f4daf 9ed4fdbe4b3794d48e360ea37e31ba0deeef8bd7 0398dc53909c67ea047279a76c85fb0570fe5ff7 307f645cabfab7b89ddec2a2623715634b56a46b 655e706fdc842edae4554bec2807beb03e62ae50 5720fdb63b8eba2f23a95a9053e292b3b21f117f d9279b002a43683ab70f7c6d5beccf1852632231 2f69dd4cc6a7b3cfb48b99b986819a01cdfdca85 043cacd6908e98752a9eb59aff0504772bc62923 f62b179046fcfe7c6d2d5c0734b7b19ef543f692 3a74c310db91db75d19fc7b63fbebda83733e1fb c2167308dfa18c29111aefe008938bab67527917 428dfca5ac9c1b7a8ed0d0b43179cac9ce514bea 070636a5f0b4f0f8d054a43821d3211c7d115b2f d6020d8572ef53ddef4d901e537c5d38e8350fc4 88941fbd2607b41a0faf21ff4249de55ba52714a b1b1da1309e816ba33f5d71921a4469c2b14f464 3a2af1b004e2d2481d8abb46061e312521ba36d9 709e613f8a8fc3ecaaf9ada83c243496f790ed84 81611f0b8b4ce135dafd3eb8a390bedb196b00ba 0c01b261d1d3b6248ba13f365fd8ad5acdb322e7 cd4a191940fc76e378f4c4dff1cdbd9a162c1b91 b48a70d97dfce0b91cb2c56d2d471d283b9a4aca a98f95f87594b61bf189dbe5d550bb1f676a2d3f bd3320d8316e3a7a08aba405bc8aecc9f7871f40 c74a4b2f09b5ccc2418999aea3ca90f0dfe42043 0e265a6e3d2c4064ab631495c7f2dc50c7370926 d5611b3cf28d2cfa05c1afaca7415d53cd75b3d1 65e77d8e52e192497ced0581ecacb3104f2e389d 6354acb1156c3f4218b2afc6fa694e4d658401d1 30df140f9e16a92bfa42f4743065f424d4f6becc 82f9a1b9ea4a64d832c1a0b7229674e97497ba04 26784a030a62649a7a1b187c979db005c6aba460 a8213f4b2134b8444a4d63197267d244ef9e5690 002f70518154c01e58c965bd07334bdaa462eec9 376165845b312c901b6e05b93835c63777cf2acb 5ca79cfa7d20ab2ae7e7907a3c87670e874f996d 9f615d75880bf5b3892cf9fbf96817df55323c1e 793d51325cdec7c750b17a0cc59e7206a035f85a 240f89eac34a25de3d2ff0a1d2e4dded08a01c07 138b05f354fb2f3c16dbc7346739855a4b0fc39b fb829e004454aaa4e76be3af0e56cabe8136d237 4812b86ee77373de3d4d5a65b81190b868f1f6fa ff207ba8e936c485ca1d24442fe75015f3f4765e ceccebcdbd323dad8ff8f461562c1693dea1f752 3b5d3ea11370cccfe74b9ef67c1a131adfd2d3b3 86ff51c827d36e431c4bc920362a623aad8a283c 2358d229200d8adb81427e4c6c40b6bce93658fa bb01e5d60088bff15a1684bc3a3e2b806154ca04 0a81e7daba12a001e654e9b75d4e592847adc032 5ea8e2bc20afaf27c68280bf48363efa09efc25d 4d1e436077ecafcc257ebc77cd7ceadc713c98df ca42c198f001b9abe3bf738dee3116e8efd37d7f 632b6e152d82b22ce46f124873699f9f361b2691 e66fbe91f73e57d73b8ffb74d3597ad181999304 38b70ab207b36eb129187e57a4ea19077a752c4e 79fc4252054154b190671920626594ab1b296e4d 5c8fc40de60ec50f9291bcae147429df5a498e44 9058fcd94ad9778446635a1d774c406b3dd5e9ef 64c477e6b404b7ac2d3e613783fd85ef3b8ee3b4 db253980a1cdb57f8719e5e7f3abcfe0b2efe1b1 ae73a00a7e83e0303935a62cf11af538cc087e15 96259f0fca36fce82497600d4569c885ad27ae75 f8fc2c39b2407e70f8ed0bbec4d057b404ef84a2 45aa029df50aa9b98662c72b1d846421ba8d0c59 ca32b01f90c96d28728e86b9c45958d56d0caf88 c65a423ebde3c45c1bcff957712a44c2ef1be18d abeb33b39473b53f1590dabf35dc5b6d9f70471e fb7cb5396b837e4e602a94fa75bf8308aa4df164 f40f6f8a9c01a79aa3f2c6b53176d46c370d35ad 40d2e0b51412c08b1d50687c47dd14594fe44a0e 1b224d71243686a749cb3a0add1490b21246c15e b8b6ad7e8a3659ef3e91599988cf00657abcdf5f 1d98c1373957848375c6f52825b26ec92d7de9ab 8f4971cd4b1b1a1ecb6b1ea59036ad4fa8184706 e134cda5764b325b357c692f6391abe78b2f02a7 9f8c15eced51e9f75b7e9ebd7413f1a3d2be064c 5fca62b3c155aa104a5e2c32203d7075332fb9b8 c0e10ba39cb957940c7c236c6ab778b4022d569d b23068e15a9838c0650106ecc6f32ced8828ad7f a6737612ddfc6bfce92abb55e5cfce55e6d52f6c 396599fb5a3a531b126b9bdbe03d0bd40caea472 849924c028e5ee319901c4b6b2a33df7c551baa4 a284ffbff6b7f72cc03f8cceb1ff68f7dd2b7f48 2c960de0620db9faad63b85cfd9d423568d1f6fe 5f64262cac6829f2e1c4cd623b49bdf48c00d160 4d73acd881eba4d7cbf0a3d352c47e611279cf1f b83b7b4626d311855d89181a9d92f3fb3121dc2f 8bc17eb09b6c7e7a9181d04e30b6987b37486362 25bd45dda45b4dc887ffd70943e20ab687be9657 06eae63721b21c3e49ffd2c99624e451730bff4f 92ec22c049548164dbb247efcb3040513aaf43ea fdcfbf06fb99e4bdaba66dd323a93d067a12d95e 9fbf96cc204ae79ed464470eea8e1de4e19496e1 f39a476b554bbf0ca101528733449614725bca62 2d7340f5cd1d2e459dd6e3ee8d94cb0564e2a07b 2234279a68e962799a5bbea204430c479647557f 9e2b0e89a325c3f011a390adcac4a7b6216ef41f a421b8008c973b5485722af28cafb97d8bd0b83c 3344254c2ad5c7655347d5e3b5f4377c89c09549 1f12a6be66a98331b96a33d66c090d59674aa79a 43b725b591a99f46f7c83a0f62a52e54a57f9dc8 b87512b0c0986a6ef86d6fce2767853098872c05 cf1a2210a83c82913eddc72a03b81457fc2c2a01 9bdbaa41030fa2c03c4f7ed68d467aa6b8ed4354 c68e1007cf22fd2cdde948100243e8212ad7d191 4a7785b47cba09682a1ce99855687d2459c77522 04b4d74d5227af7a31db04603e2d54aaa36ef885 918381e08d64206e4c7fb52a3883d11dd324639c fb5277e1d85d39c546b9787cc1d6abb6e76eeed0 e6a881591fcb9404c91287ad4bf31518b0a5b02c 8691ee48231353965fe3268eed3e9eec924c2934 ab986d0e75b7534ae41ac2e21bcc48fc3296b0eb 5ceb76e25fb3e754fc486450f81b632f6e66d54a 255a092a07c87e16165d1a9f08026f08d7f6ef83 f07c35b6d507e6d1d9f685e93745dfaded230f7a a992e4ad77354c300042381029c299715b2e480e 7cbb41490ec2fecb13fdd84a92e0f848b5917bc1 10e6a010c1334c008fb01e2f49d0fe6c9b5eb148 c5b21144efafc32846e4047f72c9fedadde7bcd7 dfa91d584cc7d19057cf2b109d17629931b81490 273d7707b1b76269a49af0558cae7b3d7374fb39 891b2fe9397efb4b3fe46a991bbbb9b430c5ebfc a7f584e3c014d8d68f5f0a3ee3745e09d3eff613 c56426d019c1ae413c2df0f96a33227723217c3e b85b3b80998019fd31b4ddf26603e45f0f68f9d7 d506bf4d861ec64f985be09f1f093562be03f42b 7976ace7bb7ad35d7d2f19160bb44e88a88eca41 4b4fef5b6bff7965f3a10006db4ca70905e8ebc0 f7bb81a733044d6fb01ac0109b4efdf42eba0fc2 8a0e771ab4acd3e04b8fe00815243a3dfc6534fb 9a60c68a55ebd23587fc3630a030bc63be1d0773 02a460cbfd8097733e33f8ef3409d0aab65bf9b2 59460ed23d71de55acc3def4cc2daac0a041796b 933e971a9f20b595f010f39d9527162405f19683 c99808f6ca62f110e0e40d345f5f8437acd0a546 79d614b08cf7a33f84680eee97880a8be21ffff6,,Fix pr 769,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.
nasa/fprime,688,2021-06-09T06:20:01Z,2021-06-09T15:37:14Z,TRUE,2021-06-09T15:37:14Z,401a9a7670526a79cdf154eca2e923c6758b3eff,4,2,43754645e56b456529e38c87c0ed012e13be5bf4 26f566dd2294beb338c4c35e83582a0e26838131,,lestarch capturing all CI logs,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infra |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description and Rationale    Removed STATIC (unused) step in CI action such that the log files can be archived for review.
nasa/fprime,686,2021-06-08T06:00:27Z,2021-06-09T03:20:25Z,TRUE,2021-06-09T03:20:25Z,61eb8195cbe2c4d12cbea93c8cac4440f2ebe78b,18,2,85c7653e888f48e986bd010a0ae55e14874f5ac6 5d868f176ea16ca169d3f7b256fdb23545765853,,lestarch refactoring toolchains to properly set and use CMAKE_SYSTEM,…_NAME    | | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastruture |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description
nasa/fprime,682,2021-06-07T20:08:38Z,2021-06-08T04:09:45Z,TRUE,2021-06-08T04:09:45Z,5ff62bdffd69abb42ba9f78756b7cb4ec3e89ae7,2,1,edfb9df32763e985537443af8bae6b74c622cdbc,,lestarch reverting enable UTs to OFF and a deprecation warning,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| UTs |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Make framework UTs enabled by default.    ## Rationale    Projects pointed out that framework UTs "are" UTs and thus should be run by default. Since this is not the best long-term way to handle this  we are also adding a deprecation warning.
nasa/fprime,676,2021-06-04T23:20:32Z,2021-06-08T04:10:09Z,TRUE,2021-06-08T04:10:09Z,eebef10711194f131128809ef9e6331acad8d733,51,1,783a366a94c5cb7121859e76680bf4858aec7def,,lestarch updating hpp and md files for clean doxygen run,| | |  |:---|:---|  |**_Originating Project/Creator_**| Infrastructure |  |**_Affected Component_**| Documentation |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    1. Cleans up all comments to improve autogenerated documentation  2. Updates and cleans base documentation  3. Sets up documentation to be auto-update on push to devel    ## Rationale    No more out-of-date documentation.
nasa/fprime,672,2021-06-03T21:27:08Z,2021-06-04T03:06:40Z,TRUE,2021-06-04T03:06:40Z,97b4d51dbdf3796d030cc793101d3ac5f85a365d,6,1,06541a45629ce1b289323b5e22e368406f57cc8f,,lestarch removing framework UTs by default,| | |  |:---|:---|  |**_Originating Project/Creator_**|  Infrastructure |  |**_Affected Component_**| UTs |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Projects can now turn on framework UTs meaning they don't by-default run all the framework UTs that are checked by CI here.
nasa/fprime,1021,2021-09-07T23:13:20Z,2021-09-07T23:13:51Z,FALSE,none,none,249,47,1fcf1375155c7860dee32af982f2ed2c5272b84c 8f1829a09eb7ce5722071b537d390d63ca65bf4b f1f80632c28903dc557dba477cce82ba4734bc73 bf8f88e21f12887e59270412cd6aa1ac71b78ce3 a26a85fd92be198d6691e1a34a5771d99b9cb6a7 a6a5d86ecaa107f4003426212354aa0ca9188e17 fd1a1311ce48beb7e008bf33b40b94cd7d0629f1 14af21c800be8348566d83a877477b38e2c4797b c923ab5ad36f71cdca2bd324e0affdfab8c57fa4 8fddb8c85ff5d8596345e54e9c0cf98ec9684004 53030642798ae03f7893c5c28e1e59e119c093d9 e7ba8aa23efa6fc34ed2dde5b4e7d60a41e00783 a0c6a29d8104015e6515207d7cd3b6ae83b625be 1d3060a0faa1d9e11a0d8652db758dad48026686 bbef2e0dacf84f74f589e8ce8c59cb8cb0867a80 8b0d1c96ed2de2e299a2a991bddb3fd8b184b632 73c0abd1420f606d1481a987eb360e0ed02500d9 470c680f5a8ddd37e2adb33f72c8c66403a953b3 a214e6ea0a430e5cc93e7d4bd862a6d78f05fa15 3485228753c940a296c8722d12fe939bd0b10416 43767bd9166e4de4aadd942b82ed543583d033c2 da000c97cff30e2b6f87d8e63246ade950ad4703 3302e84d97eb094265a7136924e4d4d9b1068875 13fe1814c17d74cc754acd3b7bebc7636c126b1b 6c542c789ef79d811cf6389eaa2ff0888ab8e98f fcf436e348d8244ddf9af6206d05d5719751fc04 93b604b27dfd2999f53a6af9b6d47fe8c4b2e157 2df388ed7d5638b148d753a0069a7ce56400e084 9c4f2cc6c890e26dcabccdc98729a632a2c56551 8636356a44008f98ee46fa571a07bbe586912473 2f6621f6090df56f067e58954de34275f2666166 e92fa06cc74a7d6bfd7e8f680f0551e80f2c5fa0 6e090833828d26c9dc5d58644e096b607a3929d9 001b4ce6f442beb1d827b338be80f57355f59b40 423f4b34165a5aca9900755b1ada7c352c937556 a00f4c7025eb0ba649ef991fa53b7fe80984b662 dbef5e26f57ae54e795bec6891670d5826cd9270 dc82e7874ac5e31c110d3cacd24cd0cdb91b753d 1c16e1e59e7d1d4237e82d3cad150ffd8e100969 618554610159c90d0dbb6aa4610b5434606119db c72b2882c8beb2e1b03c75183ca627b0be171a4c d62207d018a78127bf36f0343be9bd0394bba876 73c53f8e112fb8f098ec51911acd22c22cc4b472 57d1e0c27eb61b26470d2bdbad649d23c66a0397 3df30d659c37187ccde79fb69a82c3446e38fa01 555897518acb314ecf654c00f572b1a6cba1bfe5 8a3194b0c35b17c03028541a3c4fea3a5801a66d,,Devel to v3 0 0,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.
nasa/fprime,1007,2021-09-02T18:22:11Z,2021-09-02T19:22:25Z,TRUE,2021-09-02T19:22:25Z,555897518acb314ecf654c00f572b1a6cba1bfe5,4,6,492471b84ef833892926f9faa13f0a2ad4b12816 a5dc2b3ea973c1afe93e46e81635aeb976b88704 6780546403547507621c43ca4e237b207913c158 91913b94c1a71b3caffac1cab9cdf6460ba013b7 410c0c556bbdb30c2bb506e652720739b692631b 786fa7dbc3b9d81a0ea62a42ebd045c8d556eebf,,lestarch adding macOS to CI,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Workflow to run Framework  Ref  and Integration tests on macOS  using macos-latest runner.
nasa/fprime,1040,2021-09-16T18:48:25Z,2021-09-16T19:26:55Z,TRUE,2021-09-16T19:26:55Z,a4c8237e1961d0a6adb3657ddf971f2369e4dd6c,36,48,1fcf1375155c7860dee32af982f2ed2c5272b84c 8f1829a09eb7ce5722071b537d390d63ca65bf4b f1f80632c28903dc557dba477cce82ba4734bc73 bf8f88e21f12887e59270412cd6aa1ac71b78ce3 a26a85fd92be198d6691e1a34a5771d99b9cb6a7 a6a5d86ecaa107f4003426212354aa0ca9188e17 fd1a1311ce48beb7e008bf33b40b94cd7d0629f1 14af21c800be8348566d83a877477b38e2c4797b c923ab5ad36f71cdca2bd324e0affdfab8c57fa4 8fddb8c85ff5d8596345e54e9c0cf98ec9684004 53030642798ae03f7893c5c28e1e59e119c093d9 e7ba8aa23efa6fc34ed2dde5b4e7d60a41e00783 a0c6a29d8104015e6515207d7cd3b6ae83b625be 1d3060a0faa1d9e11a0d8652db758dad48026686 bbef2e0dacf84f74f589e8ce8c59cb8cb0867a80 8b0d1c96ed2de2e299a2a991bddb3fd8b184b632 73c0abd1420f606d1481a987eb360e0ed02500d9 470c680f5a8ddd37e2adb33f72c8c66403a953b3 a214e6ea0a430e5cc93e7d4bd862a6d78f05fa15 3485228753c940a296c8722d12fe939bd0b10416 43767bd9166e4de4aadd942b82ed543583d033c2 da000c97cff30e2b6f87d8e63246ade950ad4703 3302e84d97eb094265a7136924e4d4d9b1068875 13fe1814c17d74cc754acd3b7bebc7636c126b1b 6c542c789ef79d811cf6389eaa2ff0888ab8e98f fcf436e348d8244ddf9af6206d05d5719751fc04 93b604b27dfd2999f53a6af9b6d47fe8c4b2e157 2df388ed7d5638b148d753a0069a7ce56400e084 9c4f2cc6c890e26dcabccdc98729a632a2c56551 8636356a44008f98ee46fa571a07bbe586912473 2f6621f6090df56f067e58954de34275f2666166 e92fa06cc74a7d6bfd7e8f680f0551e80f2c5fa0 6e090833828d26c9dc5d58644e096b607a3929d9 001b4ce6f442beb1d827b338be80f57355f59b40 423f4b34165a5aca9900755b1ada7c352c937556 a00f4c7025eb0ba649ef991fa53b7fe80984b662 dbef5e26f57ae54e795bec6891670d5826cd9270 dc82e7874ac5e31c110d3cacd24cd0cdb91b753d 1c16e1e59e7d1d4237e82d3cad150ffd8e100969 618554610159c90d0dbb6aa4610b5434606119db c72b2882c8beb2e1b03c75183ca627b0be171a4c d62207d018a78127bf36f0343be9bd0394bba876 73c53f8e112fb8f098ec51911acd22c22cc4b472 57d1e0c27eb61b26470d2bdbad649d23c66a0397 3df30d659c37187ccde79fb69a82c3446e38fa01 555897518acb314ecf654c00f572b1a6cba1bfe5 8a3194b0c35b17c03028541a3c4fea3a5801a66d 34bdae99784de7ec1dfab7e071ba995a1c9c1d3b,,Merge devel into release v3 0 0,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Bring release/v3.0.0 up to date with latest changes to devel branch.  Commit a15aa027195880ba3672263c2c70c76e15b3c086 contains the resolution of the merge conflicts.
nasa/fprime,1043,2021-09-17T17:57:07Z,2021-09-21T16:31:14Z,TRUE,2021-09-21T16:31:14Z,f58b8be9daadf87cc35f50aa1ae1785ac61f2295,127,5,5b0085805dc745c5c93195e5a02ef8491393bd26 3501e25a5c731ce28610a9ca8fbd33c55274c053 e62b14010f46746044a9b15de414ebdba6a8b824 9b3c1da7372242f5ebaeb50983e6054acfc316d9 7168c468a5eb2344793936ec7179c4b1541faaee,,Fix fprime typos,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Fixed a few minor typos in various comments  documentation and other text.    ## Rationale    To improve code clarity.    ## Testing/Review Recommendations    None. Code execution unaffected.    ## Future Work    n/a
nasa/fprime,1045,2021-09-17T23:51:41Z,2021-09-21T16:30:05Z,TRUE,2021-09-21T16:30:05Z,809d23ac346ea30a7ae5401e9cc89567bcdf03fc,69,1,a0b1f04a1cc6a7075972986692452e881ae5c511,,Add clang tidy job to CI,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Adds a code quality github actions job that runs clang-tidy and the newest installed GCC release
nasa/fprime,1058,2021-09-23T19:40:28Z,2021-09-24T00:52:17Z,TRUE,2021-09-24T00:52:17Z,1698071da171ff729703a88d5525176c9f982be5,3,1,438742901a4ebc99a1f2e947f00fcbb1b741a26e,,Use clang tidy to warn on uses of recursion,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**| n/a  |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| y |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Use clang-tidy to check for uses of recursion within flight code.  Because we allow recursion within unit test  this check only runs on the flight code. I added a separate clang-tidy scan to the quality CI job that only scans the flight code.
nasa/fprime,1056,2021-09-23T03:18:48Z,2021-09-29T16:00:46Z,TRUE,2021-09-29T16:00:46Z,8e498c2c2f6dd317fd565191e839e02876f9179c,5,1,35268afa54a67cb36d3a3e0e2d345bbca12d22c4,,Switch to C 11 static assertions,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Switch custom static assertions to use C++11 builtin static assertions.
nasa/fprime,1071,2021-09-30T18:22:07Z,2021-10-04T19:55:33Z,TRUE,2021-10-04T19:55:32Z,00dd6028b4a2516db35412ae66a327e471dc1759,2,2,0907d5b6863804b195bf4234e30dc3645819d6f0 a6072c4a696ee9edbbe6bce79c64b0ac3d8ee2b5,,Allow removal of text loggers from build with CMake variable,Allow removal of text loggers from build with CMake variable. Otherwise build fails if FW_ENABLE_TEXT_LOGGING == 0.    | | |  |:---|:---|  |**_Originating Project/Creator_**| JPL COLDArm / Neil Abcouwer  |  |**_Affected Component_**| Build Process |  |**_Affected Architectures(s)_**| Any |  |**_Related Issue(s)_**| n/a |  |**_Has Unit Tests (y/n)_**| n/a |  |**_Builds Without Errors (y/n)_**| y |  |**_Unit Tests Pass (y/n)_**| n/a |  |**_Documentation Included (y/n)_**| n |    ---  ## Change Description    In https://github.com/nasa/fprime/blob/devel/Svc/CMakeLists.txt   move adding of Text Logger components into a `if (NOT FPRIME_DISABLE_TEXT_LOGGERS)` conditional.     ## Rationale    If FW_ENABLE_TEXT_LOGGING is set to 0 (https://github.com/nasa/fprime/blob/401c142c7bfd2f8d48dc40a8db25830985b97043/config/FpConfig.hpp#L290)   the text logger components  ActiveTextLogger and PassiveConsoleTextLogger  will fail to build  as will the entire build.     Now  deployments that wish to set FW_ENABLE_TEXT_LOGGING to 0 can add `FPRIME_DISABLE_TEXT_LOGGERS = 1` to their CMakeLists to prevent the adding of these components.      ## Testing/Review Recommendations    None    ## Future Work    There may be a more desirable way to do this.
nasa/fprime,1024,2021-09-09T00:41:56Z,2021-10-05T00:44:43Z,TRUE,2021-10-05T00:44:43Z,c9058c0d43905b892ff34f8d9ef8e189cd3f9e65,83,14,1e68f4f5b0aa69a5e2eefa019cbf3f24ab138f2c 2ec4fe76a8b31c754a91800dbc0a0b43704bbba7 e49f89034bd70c79b8039d337789130c27d4f16a 79aa295d10fac26c6ee475fd22a458d1e7d7d558 7362fce130c9f11f89539964dc8718dab55017d3 ec6bc1c73fab02a2752b6d4830389968cd7656ad b61ae437cb00aa7024a7869d171c78dc6e59bd41 1302828874531ce0fbff0107ff974972e9b71e0e ccb8f6fc82b71e6e41ef467ce0a5cfa4b27579ee 3b5e42b7d638edd3db2de1154f69ba6cfac7ff69 239c6fe1f2d6df2f051f3fafb1111ed663977f00 ba4b3e9bba2c2bb347b8cd6c9e51efe8ae26fb04 ba0410e52a7ea690481d59031ef42e600e8c6110 e9507e0788752590602112d8edc619f5887d462b,,lestarch installing dependencies where necessary checking for other,… dependencies    | | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    Installs:     1. SBT  when needing to build fpp    Checks for (existing installation:  1. fprime-util (for autocoder dependencies)  2. python3  3. java
nasa/fprime,1080,2021-10-12T06:53:57Z,2021-10-12T06:54:45Z,FALSE,none,b2f35561f350c217915502975924d551f3be5991,2,1,3652522dfde71c98d6b975aa7a681e4657803778,,Initial commit,| | |  |:---|:---|  |**_Originating Project/Creator_**| |  |**_Affected Component_**|  |  |**_Affected Architectures(s)_**|  |  |**_Related Issue(s)_**|  |  |**_Has Unit Tests (y/n)_**|  |  |**_Builds Without Errors (y/n)_**|  |  |**_Unit Tests Pass (y/n)_**|  |  |**_Documentation Included (y/n)_**|  |    ---  ## Change Description    A description of the changes contained in the PR.    ## Rationale    A rationale for this change. e.g. fixes bug  or most projects need XYZ feature.    ## Testing/Review Recommendations    Fill in testing procedures  specific items to focus on for review  or other info to help the team verify these changes are flight-quality.    ## Future Work    Note any additional work that will be done relating to this issue.