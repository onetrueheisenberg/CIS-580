Project,PNumber,CreatedAt,ClosedAt,isMerged,MergedAt,MergedCommit,nFiles,nCommits,Commits,Labels,Title,Body
ros-planning/navigation2,4,2018-06-11T16:48:35Z,2018-06-13T22:42:29Z,True,2018-06-13T22:42:29Z,fa9adfaf9e785242e126705ab2d5df07c1eb83a4,1,2,be7f39f1034964ab76553450096b154110c87b85 110c0835d42c5bdfabe6946fe4ae1c20bacc5fd3,,Added Overview section to README,This overview is based on the current understanding of the existing ROS navigation system and the expected behavior of the new system to be the same. Feedback welcome.
ros-planning/navigation2,5,2018-07-03T16:05:06Z,2018-07-12T22:09:10Z,True,2018-07-12T22:09:10Z,e61be13ea5dde1bb162b435fcd63935af9e374e3,26,11,1654264ebfb077fb89085712b69490c7742f3f31 29207aaba873a2147ec4e6405108e85d6f80384b d0e5ec08a78aea0b1ab850bbef02013102fb0651 3697967600c2b1c5a9175548dbf67d13add39ca7 5854b00f410d0fcbd3fb6fe7ae114bf5e5943548 0e2babfbf2172eb0c3ede3cd810ee55f1f4acf2b 62cec95168478f7e081e0751cb5ba590648db1e6 645f9f4b24f6e3ab35cca7e82b3550bff9a97a0a 75048293660ebec1c25c5b3ec52404a9c77bf002 a603201a0a81f3aadb52ebab19fd794457b37733 e0d28db017151fcc353d934771d07f9bcb04ad9b,,Add the requirements document,Adding a requirements document and starting to add some directory structure (placeholders). 
ros-planning/navigation2,7,2018-07-24T16:15:25Z,2018-07-24T16:16:04Z,True,2018-07-24T16:16:04Z,699debfcba55d0c3cb76f3e6a6bec08327f9915f,27,27,1654264ebfb077fb89085712b69490c7742f3f31 29207aaba873a2147ec4e6405108e85d6f80384b d0e5ec08a78aea0b1ab850bbef02013102fb0651 3697967600c2b1c5a9175548dbf67d13add39ca7 5854b00f410d0fcbd3fb6fe7ae114bf5e5943548 0e2babfbf2172eb0c3ede3cd810ee55f1f4acf2b 62cec95168478f7e081e0751cb5ba590648db1e6 645f9f4b24f6e3ab35cca7e82b3550bff9a97a0a 75048293660ebec1c25c5b3ec52404a9c77bf002 a603201a0a81f3aadb52ebab19fd794457b37733 e0d28db017151fcc353d934771d07f9bcb04ad9b a739b95cd80e9d4b23ec33f12727ab53b613df7b 9f54af09f28f9a3475eb6f32a8467168684bdd42 80c6b077eeee3dd6728b80f3ef4a8af4a0d9851c 3cff85adda0a1ff1ef47ff115adc7d5a022d015f 602138e771073947b131ad6ea17c939803a63472 ba6c8644eee74439a5745984a609a49fa3748b25 e1eace5a15c2d7d1d4c905706721f8de6fb524a3 6a0c774771b30478b49dc1a6a5396e91122241ec f037cfea76b3cb02b1e3704f83f665203694287d 24807de4395fdecebb2d4603d6d14f9bc0154509 98a8e87eaecebb671af3d33f1c9857892857c123 d8cd77ceb48f876a9e3b65648637f97befc2909b 6918bce3ebebde47671d677e43fdbea21c6526bb b2a987c8c48c32fd1c9211cd03366954fbc92d19 b1c01a11f03697ae77c927369c0289ecedebf115 4e3bf04ef18893c431c40d2851c02ba7e1dbc5f5,,Integrate shell code for control path ,Start putting classes in place for the control path. 
ros-planning/navigation2,8,2018-07-25T20:37:12Z,2018-07-25T20:42:04Z,True,2018-07-25T20:42:04Z,69a647ce8fbd218266446393e6af3471539ab895,15,30,1654264ebfb077fb89085712b69490c7742f3f31 29207aaba873a2147ec4e6405108e85d6f80384b d0e5ec08a78aea0b1ab850bbef02013102fb0651 3697967600c2b1c5a9175548dbf67d13add39ca7 5854b00f410d0fcbd3fb6fe7ae114bf5e5943548 0e2babfbf2172eb0c3ede3cd810ee55f1f4acf2b 62cec95168478f7e081e0751cb5ba590648db1e6 645f9f4b24f6e3ab35cca7e82b3550bff9a97a0a 75048293660ebec1c25c5b3ec52404a9c77bf002 a603201a0a81f3aadb52ebab19fd794457b37733 e0d28db017151fcc353d934771d07f9bcb04ad9b a739b95cd80e9d4b23ec33f12727ab53b613df7b 9f54af09f28f9a3475eb6f32a8467168684bdd42 80c6b077eeee3dd6728b80f3ef4a8af4a0d9851c 3cff85adda0a1ff1ef47ff115adc7d5a022d015f 602138e771073947b131ad6ea17c939803a63472 ba6c8644eee74439a5745984a609a49fa3748b25 e1eace5a15c2d7d1d4c905706721f8de6fb524a3 6a0c774771b30478b49dc1a6a5396e91122241ec f037cfea76b3cb02b1e3704f83f665203694287d 24807de4395fdecebb2d4603d6d14f9bc0154509 98a8e87eaecebb671af3d33f1c9857892857c123 d8cd77ceb48f876a9e3b65648637f97befc2909b 6918bce3ebebde47671d677e43fdbea21c6526bb b2a987c8c48c32fd1c9211cd03366954fbc92d19 b1c01a11f03697ae77c927369c0289ecedebf115 4e3bf04ef18893c431c40d2851c02ba7e1dbc5f5 4ef3969202041a427e40699384a7976e0581d2b3 b850b570762269de84fbcea82c8974bcd2f0f876 20740e10f908be9b95bddf7107bdf0bfd6b5e0b6,,Ros2 devel,More work on basic command chain class hierarchy. 
ros-planning/navigation2,9,2018-07-26T15:18:33Z,2018-07-26T15:18:59Z,True,2018-07-26T15:18:59Z,b7c30bb24a6f86d5151334c76290881755a78ddc,28,1,0b7f85acbcf5ded63f0e910d278d3719ad265c01,,Move some of the task base classes out to separate directories ,Integrating some base class changes into the upstream repo. 
ros-planning/navigation2,10,2018-07-26T20:37:45Z,2018-07-26T20:38:20Z,True,2018-07-26T20:38:20Z,435db944813407f7bf46ed030cace281ec1e8a4b,20,3,0b7f85acbcf5ded63f0e910d278d3719ad265c01 c6e598387c6e2dd60d3c5418474b700d5157286e 256174c81a3db69046b57e7805fa9e35e2228111,,Start implementation of TaskClient and TaskServer,Move some of the task base classes out to separate directories and create TaskClient and TaskServer classes that have start/stop functionality. 
ros-planning/navigation2,12,2018-08-02T23:40:12Z,2018-08-02T23:41:49Z,True,2018-08-02T23:41:49Z,f05decc6dc09e325ac5eef23cbc313aa7656c41c,75,24,0b7f85acbcf5ded63f0e910d278d3719ad265c01 c6e598387c6e2dd60d3c5418474b700d5157286e 256174c81a3db69046b57e7805fa9e35e2228111 b748fdf5c0f16460b42de3a6ffd89a8d823a9451 c908bb3c9ce6fced1e9358b15f583842f6ac18aa 73f7f1754111e9902b3c608a9e247b520e12fc31 613646b5bf3835ad7d5698095f3b8de810886e2b 62ef400a4eb5a987673b4a79d7ae5cd0e937e699 c47f1e973270dbb6a3c29fe5d183cacca0b09351 ebbcd8643f68ae1eedf10791f4a016809d6b263d f5ffbaa495ac3988a3e636285acf625dbd5a5a8f ef11585dd340cee6923b116602527704f9c3e175 39e29d5d86623f958c67db401698c26377e35735 55d00c493a21f12819a74f713d6747cbbe6b9f20 083adaf22f45483734a7c80cc6130013fb9e0cd3 96527cb107d1014b4473ece5e423a5a990712d8c c12ffb378bc7d375913f040d575f16d57bbe07d6 7c28c579aa7967f2fe2b74eb543b3ec6132684f7 c61369a746d23c0a971b8db4091a1e0a2a9ce7a0 29d7376459d4f9fe7dbc4d7d505796e525c52d6a 0d73e1044e027e4a071ad90c439efa02aed8911d 86fd51d4ed3ff650aa620d03fa66863236cdcae6 68a8a94cf3b08a331a51ea830c4c72fb6d7873e4 8a3780760291d8becf3a23bd5a26a2e18bfd224a,,Continue implementation of the architectural shell for the command task hierarchy,
ros-planning/navigation2,30,2018-08-24T20:26:08Z,2018-08-28T22:12:38Z,False,none,53087594891076e14c73fca6d5e5aacdd13d3c4e,11,4,27aac66ba02b970677b656ce45225f3462d0c6b3 a8bc4b39771bce74ad49795552dd940055cad577 1d099d142838d3960b10755d1d4c025d79996efb afb17ef45a8988ee236913c112c56c4dd8a4924b,,Basic integration test,This is my idea of what an integration/system test written in pytest could look like.     - The call to ros2 run would be replaced by a ros2 launch in more complicated configurations.   - Partitioning functionality between the Node and the test will probably vary and depend on the complexity of the tests.  - The scope of the test fixtures will probably need to vary depending on the test as well.
ros-planning/navigation2,28,2018-08-21T21:22:18Z,2018-08-28T22:41:19Z,True,2018-08-28T22:41:19Z,67c1e66a11bc71b1e259429fb37f17dd79df8fd8,113,8,71be278be9dcddc3da6debb714d9ae1c6e4094ca bb02297b2a9404892b27db87721b8bb7760f7d19 3c2e3e6b3280a725a1e6b074fbed8c9f1b6120ce eb656f211c151affac32063bcc795c0eb60184e3 9b82ba45b60b6884a76e9f9d50f21e57da8d25ea f714644c6b14a28cdec5891e6b6838a89e11397a 391e8ae366df9436f897f83369160cbb22fe82c4 a7971e930b4ae40c0a3fbdc11f284111ea11cfcf,,Modify the directory structure to allow for multiple implementations ,…of a given task type.    Also create a shell BTNavigator class and introduce namespaces.
ros-planning/navigation2,26,2018-08-17T17:54:45Z,2018-08-30T19:21:57Z,True,2018-08-30T19:21:57Z,d6601c8c6ed76c7e818806639f176b295dacc6cf,28,10,5339e5a2d727f8eb1af1bd7e68b9020bc2773b97 1732f5f28f1221df373da90eb6e8a9bae0493501 9dc81b4a01951601965b261af4e4f62adf4f5385 3c392b4d7a89dbebdad78d82b1f0751990f7e55e 8cea606dac5edc5332d04b0c8c2d1df090157fc3 7f0893c723e3fd417a47a0e0f35fc893f14e7271 160b5a81e8c85edc7ed2c4468972c81a3f2a92c6 d4425cc6a4c3a1099f772922771dc0151ee6d6cc 7bb28c6228becee941e99ba5a0311d39cca3dfd2 08b19fa1e0a0a04085b136801790db6dbcfcee45,,AMCL Port,Completed phase 1 of porting AMCL ROS1 package to ROS2. This phase has all the functionalities except dynamic reconfigure  rosbag  and laser scan subscriber which is equivalent to https://github.com/ros2/navigation/pull/9/files.  
ros-planning/navigation2,23,2018-08-16T19:30:22Z,2018-08-30T20:22:02Z,False,none,73101a797201e6ba51530124601fb6bb3e5b26b5,48,6,80d6d1a5f88929cdefe6d0532d592e885e552fd4 44989f1234497217c582d88063524804cfa416db 6b3bf7e54521f0a27f6ef986ee387f2d0eb5311f ab4c513e0a24ab7bd69d9cdfa064cfd2d6f7c239 319f493b2f272a7cc1fac8f26675d8f171999723 a89bdcaca931d2e079b30af329aa2532eec8d8b9,,AMCL Port,Completed phase 1 of porting AMCL ROS1 package to ROS2. This phase has all the functionalities except dynamic reconfigure  rosbag  and laser scan subscriber which is equivalent to https://github.com/ros2/navigation/pull/9/files.  
ros-planning/navigation2,37,2018-08-30T15:47:14Z,2018-08-31T20:16:56Z,True,2018-08-31T20:16:56Z,2a47e24de2923b638a83c576a3aea6f67ea5f0ab,64,9,f324711a18c9d6b874d9e8d58d1a4ef60e95c6c1 04e5c1208a022a48fb8c63015fd76362fd15e1f7 abb74db79dadcddf6361baa55afc8289e1d692ee 07d7827113777502cda1330366921e2e8dbc884f b54a4da2d9858e1691a0bd3f1046209d6e32ffcb 3fb22b8e54322a3e9320d8cc0fbcf291689bf698 8647322072f70e35084f3b2c8036f47925ad9e77 c3858318f00e5e0f1aeb81e710d8c007df17001e 27cb363b015cbd485e7abfa3b7ae8ba2ecf10a84,,Fix race conditions with the TaskClient and TaskServer templates,Required to automatically run test cases. 
ros-planning/navigation2,70,2018-09-07T22:23:16Z,2018-09-07T22:42:30Z,True,2018-09-07T22:42:30Z,0b16002c9c9eff48dbf3c5aa8b2687825ffcad2c,7,1,9d09198127e40f8eb3e17bae72925893ae4cceeb,,Move the AMCL module to its new home in the directory hierarchy ,
ros-planning/navigation2,69,2018-09-07T21:21:53Z,2018-09-07T22:47:59Z,True,2018-09-07T22:47:59Z,91c442766bd2528a7b67cd9f1d4cbfe7e75b3c1f,7,2,69f35086bd069ae9356731af7f3a8b6d943ac48c 10b0b3a7a93ce68bdb1607bc3efdd5beca1d6276,,Build libraries for the composable ROS nodes in addition to the standalone executables ,
ros-planning/navigation2,32,2018-08-28T19:48:09Z,2018-09-07T20:15:40Z,False,none,be684f170a7eea99848c69e6d6232f502f711af1,9,2,ffad0d73c4a623ed252a3a97e147d1818dec8b73 fae84e59cecd76223aa8cb1026b4ef0414cf0689,example,C integration and unit test template ,This is an example of how to do a integration test in C++ using the seperate launch script.    Note that the test is currently timing out because it never receives the response message. I'm thinking this is a problem with the task client library or I'm using it in some unsupported way  but I haven't debugged yet.
ros-planning/navigation2,24,2018-08-17T16:34:33Z,2018-09-10T19:59:29Z,False,none,30d44731aef73353e6af7cc73dfeda134825f6ff,84,8,699debfcba55d0c3cb76f3e6a6bec08327f9915f 69a647ce8fbd218266446393e6af3471539ab895 b7c30bb24a6f86d5151334c76290881755a78ddc 435db944813407f7bf46ed030cace281ec1e8a4b f05decc6dc09e325ac5eef23cbc313aa7656c41c 44989f1234497217c582d88063524804cfa416db 6b3bf7e54521f0a27f6ef986ee387f2d0eb5311f 8acca22d82a823066bd2a98c383c55c849e1eccf,example,Mission planner bt,Created a dummy Mission Planner shell. This is based on Behavior Tree library from:  https://github.com/miccol/Behavior-Tree   When ActionLib is ready  we can convert it to ROS2.
ros-planning/navigation2,66,2018-09-07T16:04:08Z,2018-09-07T22:03:48Z,True,2018-09-07T22:03:48Z,20642efd0dc688336d0d5bacbe4b3c3a3661aed1,28,5,6e024949b4e4429777e8ec03698ef1f59a8dad6c 7061d8a21d507a9edf7e125b52ced7a627fcd630 d6b7b9e1b0667159f4a4c3264d2392e1c7b9c6f2 39ccae9a6aeebb2637ddbed66bde75127fee9c55 ddd46840fa715db696945a8b5b9f3cea4278d8e2,,Amcl refactor move pf sensors and mapping to nav2_utils,Moving pf  sensors  and mapping out of amcl package to nav2_utils.
ros-planning/navigation2,77,2018-09-10T22:58:29Z,2018-09-14T17:30:41Z,True,2018-09-14T17:30:41Z,623cc5397ed66b03dd6b4179285a3b7349aaa91c,13,6,97f75e16627e50b1f3e34f7b005affb850619124 f2e8b89551dfa0b1bcb7d7243962c614a8ef4535 6c8401b32a9331435b869e9896d2562434a33f41 222d6e45f1cfef53adf245913f439155764b4b82 aa5eb71881ebd362df0538781061e211c423d60b 86b391c7062b2e1206f2e34d8207a0e6415a15e3,,Amcl refactorization,1. Created map directory and transfered map.h header file to map directory to be consistent with other libraries.   2. Updated ament_target_dependencies for costmap to contain correct dependencies.  3. Commented out unused parameters from cpp file to eliminate compiler warnings  4. For C files had to cast unused parameters with void to eliminate warnings.  5. TODO: decide what to do with [-Wpedantic].
ros-planning/navigation2,86,2018-09-14T23:30:55Z,2018-09-17T20:01:30Z,True,2018-09-17T20:01:30Z,964456f95a8852a4c705144e35067c5311127ea3,62,2,49b21679835d2b50707fa9f5d13c248f596d1881 aeccc47ca3aa6552c9c1bd0e9cee382798010b16,,Add Costmap_2d from ROS1 navstack to port from in smaller PRs,We talked before about a different approach to merging our large code ports (this is already 10k+ lines) into master. This PR would simply merge the orginal (melodic) ros1 navigation stack code of the costmap_2d package into master (with COLCON_IGNORE so it doesn't build). Our goal would be to make smaller PR edits as we port parts of the code. We could make better use of labels to note when it is build-ready. 
ros-planning/navigation2,33,2018-08-28T23:08:11Z,2018-09-19T00:17:42Z,False,none,dd367d999e605916f17a28cfd70c187969274bb4,16,5,fd85be29f35ae32e8851699380492a6ac5d04848 0bc4c20f5698bb1f829034e0cc9c654d3f8d1bcc 34195e1fd3e284cf524d25d4c1698fe3b3730bfe ae4d42ddc0b9d20f3a63baf65c9a09f28b62f747 ba202e10e382e70616aaedf82a44e3544c3cfb31,,Introduce the use of behavior trees for mission execution and the nav ,…igation module. Will implement cancel functionality in a subsequent PR. 
ros-planning/navigation2,13,2018-08-03T18:43:47Z,2018-08-03T20:59:14Z,True,2018-08-03T20:59:14Z,80d6d1a5f88929cdefe6d0532d592e885e552fd4,2,1,d1c00124c3aa541bba3bf67904d0ace7c6df3d90,,Added Navigation Overview in design folder,Adding design document
ros-planning/navigation2,1,2018-06-04T21:36:11Z,2018-06-05T22:13:57Z,True,2018-06-05T22:13:57Z,6ba99d61e6ae09cced0429fb20551d58e48d8bea,4,9,176ce075f6f80813cd0dee1355d2268212f0b1d9 1fed2a5bf2be28616f756012fee90b229551652a 24dc81211c6dbe3f60869cbe4ae20120e47253df 30288c9def6fbb9facad97f54bdc0267ae0f52af a654fbc7c9c24c38b277833e0c98573687d6de6c 1fdd7e5152c88f91837cb880c0f9cf300c08faf3 cafe03b4a0883ccc8ffbeb30ed393edb836e45ad 0d059fcaefc67047dac9355cbd9dcf0febf9aafa ff3df8b8448b75a6313ae34ddf2a143517c12d9a,,Feedback requested Initial design documents templates,Initial design documentation templates and examples
ros-planning/navigation2,2,2018-06-08T18:02:51Z,2018-06-13T20:03:51Z,True,2018-06-13T20:03:51Z,b3d7b365f6edee696a9e8047db8b13f8fe97a003,8,11,2e7c7658cea62233c9aa836d312fe5d1973586b2 dfeffea8a3e481962fbc8a9a36a81c8b92332a32 416fbd42c62822807c0fd028910a67e27c4ee3b8 0573b2d52421adb33c5ff336fd025775b1c233e2 e99069ae5fd77fed9a9c3f8f1a808f4a7dc061ad b35b832d3a78cd12a8ac7d1c31d7b493248b443f c2cee656427cebbe75b1eb0bd3d9ad52759b4f04 047516a92f9a153403ba52047c7f95dd8bad70b1 52407e781af80caf891028c68598dad2357b1712 166a07072598bbbf3b6d46ae3bce10eba48b62d0 056caface343856a22edcf2a60994baea0c86e45,,First use cases for review and discussion,Added the first set of use cases for review
ros-planning/navigation2,89,2018-09-19T16:45:04Z,2018-09-20T20:42:22Z,True,2018-09-20T20:42:22Z,ba236d170b5da5a609293feb77ef34e87720bdf8,4,8,5e314233c40fe87f1997514649e41710efef59c8 f8ba40f5db3c3e811088a2e106964e71552c8d57 54fdfeb5dc61432c19df25fcb4cc17ee6ec3c36e ca7635e561dbb5b4c213880b212e3f8869d9f5b8 90aea8fbadb41222052a5d24828ccabd88ff883a 8eb2fc18315834323c45832401a1f34accb61071 651416728a5876c5b611485eac54d38844a6ae61 89f5a02133376e442e97489e5c52154592133aae,,Amcl refactorization,Addressing issue's #79 and #88.    Note: Since the dynamic reconfigure is not enabled  I manually changed the default values to match turtlebot launch file default values.    TODO: Create issue to make sure formatting is correct. In this PR  I've only fixed the format in one place. 
ros-planning/navigation2,31,2018-08-24T23:12:56Z,2018-09-21T16:24:54Z,True,2018-09-21T16:24:54Z,e57809b3233ec646c457e9764be3d01b4c467335,27,36,f23b0b13924c24c1a1376bf5d0bde302897b2f2b 282a6d59c853f9d789fc998676293bf0532a897c 0efb49bc3067c3ab96f2f6fb4f1883d271ff7335 b9e12e8b8612868e9905eacc028247ac801a2b1d 4a0e97f8838202a1efb6dcbd59333ee0f85c4d88 67763bed865b37f22dc3fa29a56e0c0234221e1f 68084b215a0531ce02d570d8fcaf4c8716b89ff0 917374308f3b48ecab099c29ba284995f96cf16f 1fe730a70a74a6e9af0f40d2e027b70e0707d245 832b1c93a306e267495f9ad95d0a7ba5c3cd3333 32ff9bd74d56f1fe43b2cb93b7be56bd3da50196 33890475661b48a970e7a0ddc6e48cf625c84e60 4394c5dcd3342ca668dc989aac728abce55b7c42 86941a384c26788f7289bda3d9e0c0f0e151da4d f3dda6d5ad05365bce931701798d25d1a7952901 6f5cd791a3228c0b2f476a7c9e1112b764780545 835042b60ddf7c8c2f446d0971986ad9f5296a33 ede47eb81e91366dcd9384f73c041251375cc9b0 b258dd05d07acfa6a4795b74a0298bf201deaf28 c6f970ccdf11e9ed4dd56db61f8ad7871ae54467 7d042e818945729c07bdef8c3fb9f32c816d2880 7ca19e2a6d30375a42deab9506c3232adfafeea9 397380be4bca8d6a6290cb458176f448bbd3c6d0 629904ba85ffc97315ca5e785706b10676c216ae 12a0ee2c221a16986fd30e92d67e13d2c95d72ae c439b6beb6fb974bb08b7349b0f10a64cb19a295 b28ea55a34ca0d17908956d46feaf250fd76da48 cf7d4617fad41bc9a7cfd39ecc968beaa0865829 53fad594bc6fa2b26974930750e0267540db3a5c 3e57e5ee05aae69da7c6ed95701b2269380aef63 6524297b1de3b415997842bff983d783a0f52b2e 5263a9dec8636c3cfd797da3fc5500d39107ee60 81fb42c93d6b8ff8449fced31fd16566a6089bde b836950f0ef452100902a278e20f2481be7ea97d dbdb39d745de03032bcd01e23530ffb61c1cc7b7 2ade04ed31498ca1f2a1b5fab434da23edbc2b67,,Refactored Map Server,This is a refactored map server from ROS Navigation. It provides machinery for an extensible framework for loading map files into available map representations (currently just nav_msgs/msg/OccupancyGrid) and provide as services/topics. 
ros-planning/navigation2,93,2018-09-21T03:41:39Z,2018-09-25T22:23:49Z,True,2018-09-25T22:23:49Z,c616cd22877ecd7405b33cd3fd55688ce41dbe6a,1,2,6f43f40cb0fb8b0f2a21842245633639b45d0c59 261984f4ef99ab38013a06bd2aaef125519207ec,task,Updated initial_build_script sh path in BUILD md,Updated the path for the initial_build_script.sh file
ros-planning/navigation2,95,2018-09-24T16:40:43Z,2018-09-25T23:33:24Z,True,2018-09-25T23:33:24Z,f0357815c30c108e8b39d987714af17a734717c1,1,3,c7806682d871e7dc51866a2557f23528243db47e d4c9aa5dc695ac91fa69c2598e512c15c23e04aa 6af648ce8a628db9a6aba82de7e1e79622515650,enhancement,Add Travis CI ability,Add Travis CI capability by adding a .travis.yml file     
ros-planning/navigation2,106,2018-09-27T00:42:17Z,2018-09-27T16:28:43Z,True,2018-09-27T16:28:43Z,24790bd786c0c0f28828bf5a1d88425f6ae25365,62,1,31f17148f918eead8a7512285f04ceb97bce48e1,,Moving costmap_2d package up to libs ,Costmap_2d needs to move up to libs/ directory in order to compile
ros-planning/navigation2,108,2018-09-27T16:30:34Z,2018-09-27T21:03:10Z,True,2018-09-27T21:03:10Z,6271cb8d9b8e983423bc2fb3db57e5a2f9f913d4,26,1,551a1b0001117f85802ff3bfe9e9b5362332a6d7,,Put base costmap_2d on melodic devel branch ,Move the base costmap_2d package in repo onto the melodic-devel branch
ros-planning/navigation2,115,2018-09-27T22:39:39Z,2018-09-28T18:56:18Z,True,2018-09-28T18:56:18Z,241894c4527b90d543bbc0e84cbb02bfe1e7450a,119,1,2c18c4473e2225533035f27fb13bc9b538a15352,,Restructing dwb and dwa code,All this change does is restructure the dwa and dwb directories in preparation  to implement a real controller using the dwb codebase.    I moved the old nav2_dwa_controller to nav2_controller_example since  it doesn't actually implement dwa.    The dwb_local_planner is now dwb_core. It will be included in the  new nav2_controller_dwa.    All dwb packages are moved under control for now.
ros-planning/navigation2,114,2018-09-27T21:34:14Z,2018-09-29T00:08:36Z,True,2018-09-29T00:08:36Z,d9c5ecd25b0fc6300c564e4daf39449b9a6748a5,7,6,d00e573d92d7bf00068904b2150a0fc2951cf16d 6acbb795ba6a3f3555e5267cb68bd9a9e2e74240 0df6a7fd77f6dd599aeef7f5f4c8cfb193d16396 423ac444700137c9179c7d9a1c63ddedd3b47dd9 addd26a10142e85da559d48b9ea9ab7e8ce80337 b35f96bc1812d9c938045996adb2ba2f81ca2138,,Amcl ctest fix,The copyright template is not available and therefore I removed the copyright linter from the test. I've also removed the flake8 due to not checking the files correctly.      Addressing issue #109.
ros-planning/navigation2,113,2018-09-27T21:01:53Z,2018-09-29T09:53:07Z,True,2018-09-29T09:53:07Z,0c8a7eb9f4687dab217cde9ddef3912acb4833eb,37,3,e98840c621e44a5bdca6d26cf5efed64a3d01429 5d1b6a08758c1adc8a767f88afba6c6f78dce31a c714cf04ade0719a4e27f091490faa994e72b97e,,Initial Costmap_2d port,This initial port of costmap_2d compiles successfully. There still remain many TODO which are documented throughout the code. I'll file issues for these TODO and remaining work. 
ros-planning/navigation2,39,2018-08-30T20:51:02Z,2018-09-05T21:41:04Z,True,2018-09-05T21:41:04Z,b66f6d548261677ee9f36148aafbfe12a492c1dc,1,2,4d159fb1d00e78ece4a96e28685e9bb035d6ea82 c4c3ec48826a8ebf68856a9333df14a11fc79d61,,temporarily fixed the build issue,Once our folder structure is ready  I will move the strutils class to util folder.
ros-planning/navigation2,122,2018-09-29T12:48:49Z,2018-10-03T17:57:33Z,True,2018-10-03T17:57:33Z,d74603fb92f6ff1ded958f0b63f66a4b31fc69e4,2,2,48776562844fff0db5cec3f3b79fe95450276097 fcf2e49cfc18156d993d48f095604249e3d97ef9,,Fix for map frame_id and latched topic,There was some code that was left out of the port that sets the frame_id as well as other meta info for the map_server map  so this PR fixes this issue. Also  the map topic is now "latched".     
ros-planning/navigation2,129,2018-10-02T23:06:40Z,2018-10-03T17:58:39Z,True,2018-10-03T17:58:39Z,63c5b358aa86a7e73d6926553f796803b78183c9,22,4,7831ece937c997ac12c3907b2fc93c0df3827b04 505d82779b799de75feed4df9062fc540dfb163b e249f79343c1affabecb188d5d100909dc1ca4bb b6dfdfaff934a9cd0f3d742bb846bfe994b6901d,,Costmap_2d Static Inflation plugin layer port Removing Boost dependencies ,In this PR  the static layer & inflation layer plugins have been ported and compile properly. After a manual inspection of the plugins  they appear to work fine and generate reasonable results  though some additional work needs to be done in order to incorporate the plugins properly in the Costmap2DROS class (particularly with parameters).     Some intial work on the observation buffer was done but was blocked from completion until tf2_sensor_msgs is also ported (will file an issue).     Also  Boost dependencies have been removed from costmap_2d. 
ros-planning/navigation2,143,2018-10-05T21:54:09Z,2018-10-05T23:58:31Z,True,2018-10-05T23:58:31Z,f8b15d67e08569f9ccced4e6056f7f49ad5a395a,2,1,d126438ac5c75d75e791bfd432d7092d52550d04,nav2_map_server,Avoid the copyright check in two directories because of the unsupport ,…ed license header. Fixes #75  fixes #92.
ros-planning/navigation2,123,2018-10-01T21:56:39Z,2018-10-02T17:21:48Z,True,2018-10-02T17:21:48Z,86e997b05902bb4944548e6ef25c4651e2de948b,11,6,97c6dbc677de24f11427dbfc04b60c284ec8d828 0a5f992aef3b27264718704b7a43e8269836e8dd 9f0e069ba5787b586e7dd8dd5ef52cbc751c33d2 6e255d6e6bfc1c3b0afbd310d6fc4e8f71665051 6ef35449180b1a3722d5ea9cf28c532b55cb0c2c 8e13befbf6cd65b51d4b52b86a4eb3b34c627ce7,enhancement@nav2_localization,Amcl refactorization,In this PR strutils is factored out and placed into nav2_util to address issue #61.    Also  AMCLLaser  AMCLOdom  and AMCLSensor classes have been renamed to Laser  Odom  and Sensor respectively.     
ros-planning/navigation2,100,2018-09-26T14:41:07Z,2018-09-27T21:38:52Z,True,2018-09-27T21:38:52Z,a37ace46adb693f4e5a44c808ff2031da88a295a,28,14,b2596b13d11d8386ef81ac605423b966ce2d701f 915efcac976ee9faed007d2e27dac35397ce15e7 121ac8d7e9fe80447683acb8ee7688d01b97ef9a 28f7a51d2ab74dbd098062eb0f7755e7ecf85372 f5ca980fd2c7517fe8bae4161bdf0999d8eb83d3 e811a33b2c0a92c06fd36e5ce82db52258f3bbb4 129255939748d3a001c86b6d4e1a58fc8844456b b83998e90e8110602068d898cc3ce4c47f0b35f2 72336db635ec5bd75925c8a93344d828f41a6464 7ea05ba0ad944cc554162231094ba8fc85975bd1 94353a5f509cac7ce0d356ed78bffe4dda018b4c abced0e81c1213aa1567340913cfda40814d6462 85a7658b8bb33093950b7fba879d4e797950d192 8ca0dd24825772d08c4014f85c2f46e92bcc0eb9,,Integrate planning tests,Integrate Carlos' planner tests. 
ros-planning/navigation2,136,2018-10-03T16:25:23Z,2018-10-03T19:57:49Z,True,2018-10-03T19:57:49Z,350533e5696c1250ea4fe63d0ddf78188a8afa7e,31,12,7e9ba73e2838ca31b6f7e5ad50eda97e7d9b3f2d b13167973d6c39dd78732f39cad22a5cc043c0dd 4f63212017e5e9846a594bda04443f76cca508b1 c179d9b97ca5c91722439d943621a8ad9af0ec82 eab272526a2379eb4f8d38f20cc49cae5a0edf2d accfecff7c62c9a55d880ac6e413f2b815a8c052 013067a8936f5dfe68f8799a976939dc09e35086 ebe726edee908ea085de7c3dde9a46c5e76f8427 ddbee57f03259eae609bc61cb1367ea0f442f765 42ec5735e8d8acf4c4a300509ca8a422f00865d1 f683cf17f42aea46c1e8290bd7b24152ed41c019 1a87996eabca5869ac5063574869ce9ea0ee5ade,,Subsystem integration,Some changes as a result of integrating the various modules into a working system. Also added a service client template class to common up some duplicate code. Added some initial launch-related files  but this still needs work. 
ros-planning/navigation2,38,2018-08-30T20:48:16Z,2018-09-06T21:52:55Z,True,2018-09-06T21:52:55Z,acd0a55fbb26885a29587c86fca512f738c40e23,130,26,699debfcba55d0c3cb76f3e6a6bec08327f9915f 69a647ce8fbd218266446393e6af3471539ab895 b7c30bb24a6f86d5151334c76290881755a78ddc 435db944813407f7bf46ed030cace281ec1e8a4b f05decc6dc09e325ac5eef23cbc313aa7656c41c bb02297b2a9404892b27db87721b8bb7760f7d19 3c2e3e6b3280a725a1e6b074fbed8c9f1b6120ce 67c1e66a11bc71b1e259429fb37f17dd79df8fd8 958be39bd21401add2a82dbdaa7a045c0c975763 abb74db79dadcddf6361baa55afc8289e1d692ee 07d7827113777502cda1330366921e2e8dbc884f 2a47e24de2923b638a83c576a3aea6f67ea5f0ab f2f5520787bda1538ae3ef5931349c5a17a3c592 6cc167dc1b236c26a48ccbb182f1782daa58ce5a eff830a0eaf817c91ecf503e5f40f3c6dd15192b f1758ac2a9e96c8f1562704d9d7fa7b44c41133b ef6d854dda3ab355f969bd3b44732eaf77689a6c 29eec5bdb3db22ae525fd2b50501030976bd9238 41c5af228ae2f5c4119e138f583f4219878ba92a 3bc32a97dd872a63dc8b652a36af8334d7fa3d8a 1676622f28e5119e77aa7c40bfd1c08837a557ee 74b6f76a045928a491ed777004c72fd99d8fbdaa 7b8ece9db3b12674943d742abc40ce55ded47d33 a6de4eb19ba27e1b6fba9a4a1351d313f2daa2ad 9c7a307efe8e47ec30bea07eb5854a6737d10a78 bf274ac8a6a68f366b7edea2062c8727322d0eaa,,Merge development work to the master branch ,This is early work to get a basic architectural shell in place  based on a task hierarchy concept. 
ros-planning/navigation2,107,2018-09-27T01:43:51Z,2018-10-10T15:57:49Z,True,2018-10-10T15:57:49Z,ac932ea443ad1b3cd5e769aecb3c768baeb49359,387,32,f270f3972fda1f635224c3fa965122184dbf2757 1aa251546ac811707346220f44d89e4bfe6bc2d0 753acc0b8c2ce258fa43f8629c777fbcb2af2d9d dee5d824adff73912fda962160d42ff2f7eb0fc1 f73b0893c611db8d8b93d1b811a14aa06871957e 9e3929006f3f9f36402b210906dd663f639acacd 83b48c10da1cfcfccfa41a96dff6d09e92789bb9 a6ff72a3d975c82db15949b965b7a0e075201502 53e9eeed3f1195b1bb133901f0d061182219659d a9c58cd4922ca5e6e8df935323295df3000fffda 6956dc8a4e1700ca3a53fd1445da7bb5e5253775 e90fdf22a496ab813ee2843b5c2c9192d31dc760 387fe465678b0f3cc3f8dd345d144c02e9fad27b 359641fe2337cc40b495df8185f882b630df7e06 e75658acd7687b3ed9cdd7ee9eb7ed800d028f06 4414050e87b9592e9a4003122345e20a6f38a84e 17746928f50dc9819e15b1594abd4093a28e380f d764d250a83b39b13764c7be5d7e8aeaa42c7ed6 b8a83628ce594d841ad0c28756709725ce4e3a17 653ee5373d5e23edd4d6cb0cd97b1c09730499fe 8f7f3d0036b692632aae07dfc46a67aad2197ed1 5c9bc6bb3c612740e1ed86601e7c383dec2bb2ae 9c0962060c7ac225bc1bc8947e11bc4b3a08f313 c1fa056f25506deae384cd9bf9a244bd10d969ec 719c622297b70be24bb605a89793569a86fc42ce 6ea52aa2f2f53ab357696416f4fb531644c33221 da3cafe123815c92652f942536166becb04d74d3 2d9cbdceef5106d6fd16b64d317c53750c798664 6636b0f4f78d313272e3131d7294fd7043e3ec9a 3f8e650b65dcfcbca899b143d7a7acb1ee5304e2 c76f278dc0f952a1a937a6103bc4ee8528ded9e7 bc168a20ce6341808aebacea9957e5ab7e2e3b82,,Metapackage Reorg build script updates,Addressing #78 and #35 and #135     - Adding a proper metapackage to the repository   - bringup package  - DWB planner is as a placeholder  in a nav2_controller metapackage until I think of a better way to handle this  - Reorganizing packages to exist in the root directory in accordance to ROS conventions  - Changing build scripts and documentation to not build the workspace in the package repository (which would make it impossible to build other things in the same workspace which is a necessity) -- now it builds in a `navigation2_ws` workspace. initial_ros_setup and build_all scripts updated with docs  - Fixing some tab -> space conversion issues  - merging the msgs packages - it is standard for a metapackage to contain 1 package for messages. It made the list of packages too long otherwise and most of those packages were completely empty anyhow. We shouldnt need 7 msgs packages for 5 messages and 1 service (where most of those are repeats from `nav_msgs` anyhow)      Notes for future work based on what I looked into:  - Many of the messages are either near identical or identical to a `nav_msgs` counterpart. Is there a reason for this? The `Path` message is only `geometry_msgs/Pose` and not `geometry_msgs/PoseStamped` like in `nav_msgs`. That Stamp is really important for those of us that create custom planner/controllers.  -   Build script function `download_navstack()` hard-codes the ros-planning repo  in another PR I could change this to be a flag to use a fork instead - which would be useful for those of us without push permissions without having to add a remote.       
ros-planning/navigation2,156,2018-10-10T19:22:43Z,2018-10-11T00:21:43Z,False,none,4a2b344c89a14fdc5d58f866fb1031c40ae7dfa8,2,1,fde9031753c3ea85f17bf6c07d4b548b5128fadc,,Remove the fake placeholder Oregon robotics e mail address,We previously included a fictitious e-mail address in the maintainer field in package.xml files. Instead of pursuing the idea of having a team e-mail address  we'll use only individual addresses.  
ros-planning/navigation2,91,2018-09-19T22:09:42Z,2018-10-11T20:53:04Z,False,none,909ad39aa4cc735153716cc6a6930665262ff975,30,16,7e9ccb63e3d6f70ef7def7fa874f732520e71141 c7654b8fdfe108671008a332ec961f770dbd437a 699edec817c05364ee79d0e2e31f13421f3ca7ad 783ea040b04612ae7439cbff8b6da4040dc5c454 31ed77d5f9aed28a3942e3f4c47058fc3706b53b b8eb848a8efd0f3da396feb0550cbf6ab3d423cd 30bee5f999407180119f0539f762485706e94bca 2cb4d86309e73890298f8ae216afbd45f747d3a5 0a765c5341bf4eb579cade0a288441e2354e0a61 a20f1738243ab209903afd54af2e847a831a9dbe 9fd6093bc9c4c6dea726f218aacc1549c6db8be4 efead8f6fc7f6196b1d6e3fb896f73eac7c51697 a4749d3e6144ad68523c480bdaaef8153fa96e86 8a1af4ae001a59652528a024fd6d3dbc25504956 1c7891e90b6c361d963c49320c8ac3854db52231 c82e9e2f9aac71e288e71b78f1be9ef3a7296cc7,enhancement,New behavior tree,**Background info for this change**   The Navigation 2 software stack can be driven by a Mission Executor module that receives a description of the desired behavior tree as an XML document via its input command. The XML is contained in a MissionPlan message as a string. The Mission Executor receives the plan and builds the tree according to this XML description and then dynamically executes the resulting tree. Currently  the nav2 software has one Task that it can perform  NavigateToPose. In the future  other tasks can be implemented and included in the mission plan.      NavigateToPose is implemented by two alternative modules  the SimpleNavigator and the BtNavigator. These implement the NavigateToPose task by invoking sub-tasks  ComputePathToPose and FollowPath. Each of these are themselves separate TaskServers (what will be ROS Actions)  so the Navigators have corresponding TaskClients to communicate with the task servers.     The SimpleNavigator has a hand-coded execute method where it invokes first the ComputePathToPose and then FollowPose.  In contrast  the BtNavigator itself uses a behavior tree to implement similar functionality. However  the behavior tree is more easily extended and can do things  such as run the ComputePathToPose (the global planner) in parallel with the FollowPose (the local planner). That is  the global planner could be run at a desired frequency  sending the updates paths to the local planner. Also  using a behavior tree  there could be recovery actions upon failure. To implement the behavior tree functionality  we're using a new version of the behavior tree library that was previously using in ROS1's ROS-Behavior-Tree. There are several useful additions  including XML parsing & automatic tree building and blackboards.    **Description of the change**  For now  this commit gets basic behavior trees in place for the MissionExecutor and the BtNavigator. These will soon be extended.     Fixes #51. This was an issue about not referring to the library directly in CMakeLists.txt  but using find_package instead.     Other issues  that will be addressed as we develop the mission plan capability  including #58  #41  #43  and #42. 
ros-planning/navigation2,159,2018-10-10T23:40:27Z,2018-10-11T22:18:40Z,True,2018-10-11T22:18:40Z,d9870731bfb676bb78981f74574d9ac560e4a09f,2,2,f8fd2675d18770ec15abeb27c764025ce045d2f1 15ce83e577eab0900817c01a8ff2b92ac64a6161,,Fix dockerfile for new repo structure,This fixes the Dockerfile to work in the new repo structure.     In the process I discovered that the BRANCH variable change I had made previously wasn't working  so I fixed that also by adding the REMOTE before checking out the branch. 
ros-planning/navigation2,155,2018-10-10T19:05:14Z,2018-10-11T00:31:27Z,True,2018-10-11T00:31:27Z,5b6a138664d2220e8a001ce2586049a558593377,3,1,0a82af91fa417aeed25f9a28663fcd3fd406bcd1,,Remove the empty nav2_gazebo_localizer directory,Instead  we can add the fake_localization package to the repo and finish the port to ROS2. This will allow us to test some modules against a stub localizer  thereby avoiding the ros1_bridge when running in simulation  since AMCL currently needs input from gazebo which must be run on the ROS1 side since since the ROS2 version of the gazebo plugins are not yet available.    Also removing a couple other placeholder .gitignore files now that the directories are populated. 
ros-planning/navigation2,160,2018-10-11T17:07:36Z,2018-10-11T22:21:12Z,True,2018-10-11T22:21:12Z,a2fd344ca45e0a1b3f71b097fd606c62cc09ce5c,14,3,9e2066f2162682a4ab56f819a879c91efc8e3829 5ea1f28c92487ae4df06b90399ba5bdaee023d11 4172901e06b0a2acaf78b8c3af3a5d4d821c4424,nav2_system_tests,Create a system test directory,With the new directory organization  unit tests will remain with each package in a test directory and we'll have one top-level directory/package for the system (and subsystem) level tests. In the system level directory there will be multiple sub-directories for the various kinds of tests.     Our first subdir is for the planning tests. This directory tests the global planner implementations  such as the Dijkstra planner. It should be possible to use these tests for other implementations of the same interface (ComputePathToPose).     @SteveMacenski 
ros-planning/navigation2,141,2018-10-05T21:02:46Z,2018-10-11T22:29:33Z,True,2018-10-11T22:29:33Z,c84f2cf1fba522c35ac90acf43b12ff3b00844dd,4,5,4de5a4a717502787c4d3ffe86064274dcdc63f5c a49d047f26311ab841a50beddd69a6688ea8d892 bd0285da75178bd9affa81bd7c4571c4720ec659 36bd2d4e5d8e198a4bbfbfdde190484248594fc2 3f91e1d8e90f0c652d2907815805a7af9aba1b8b,,Nav2_tasks readme,Currently  there are many empty README.md files across the various directories. These are placeholders that we plan to populate during October as we work towards a functional stack. Each will contain background information for the particular package and a description of its contents. This particular PR is a first cut at the README file for the nav2_tasks directory. I created the diagram using LibreOffice Draw and exported it to a .svg file and checked in both to a doc subdirectory (is this how we want to do it?). 
ros-planning/navigation2,158,2018-10-10T23:20:04Z,2018-10-15T18:12:52Z,True,2018-10-15T18:12:52Z,507e37d0aceebf3f4263f0cd4159111cee65125c,18,3,c8dc07cd984bca0484f5c8faf7ff5c6988fa0557 e0d0528818d6eab918d3373d7ce5a3ca4bcf2ed0 f1dee271dc2e554e9fb96971b19acacfa117f5df,,Cleanup from 107 ,- changing emails for Oregon team  - fixing header guards from search replace on costmap_2d remap    I _believe_ that's the end of that PR. Let me know if there's anything else I missed.     S  
ros-planning/navigation2,144,2018-10-05T22:12:36Z,2018-10-15T22:42:33Z,True,2018-10-15T22:42:33Z,d0a2f6e2f39be3bec4cc3b18dd2c192185cd14dc,6,9,31f838640933ea866bd25afa5de760aadd884242 82865e6fbb8d265b90fe69ad66f0163cd34ca36d 6d8971038a6f0e1ac8ab1c3362db209763fbe077 8c76ee6722a5ce455794322b1ff9f9693c08cb10 a1d98790ae26e9ae68d08d2e3d64e77b836eee7e 45ddc4229b224a76046b92593dc930991a6c348e af33c92c9ccc9fd63e82857b9b6319b1be5682e3 916cd06e982ba5055d301f7f3bf9dc570a25e1d1 539dc49067b7f6bfcd932c7fe31d1f4ae75dd6cd,,Parse URDF file from ros_robot class,Open and parse URDF file from ros_robot class. Once the URDF file is parsed  the robot description can be obtained from "model_".    Currently getCurrentPose  getCurrentVelocity  getRobotName  and sendVelocity methods have been implemented.    getCurrentVelocity method gets odometry msg which contains both twist and pose.  getCurrentPose method gets pose msg which is estimated from localization module.  To make this less confusing  I will open another PR to rename the getCurrentVelocity method to getOdometry and also rename the getCurrentPose to getCurrentEstimatedPose.    TODO(mhpanah):    - getFootPrint()    - robot types and SN or ID    - Add unit and integration test    - Be able to configure which topic name to subscribe to  
ros-planning/navigation2,173,2018-10-16T17:21:36Z,2018-10-17T17:02:56Z,True,2018-10-17T17:02:56Z,130d78572c90551f16ecc2ce58f1fce61e88a398,2,2,1b11c2d5f5f0dad76e93603e9704b963c16c5257 c5121f26591d28d3881f12ac75512411a2138885,enhancement,Ability to build Pull Requests in Travis,Don't merge this yet  will update when ready.
ros-planning/navigation2,175,2018-10-16T18:30:30Z,2018-10-17T21:42:47Z,True,2018-10-17T21:42:47Z,8b60e6ba744b6baa7dedd5ae734f2021cdc7b851,4,2,fb32a74090a90ec062b24e05932b88e3a8cea24c 972f7f77dbc318a080d31e7256e5269ec68ebfab,,Adding unit test to robot class and disable parsing URDF file,- Created unit test to test Robot class:  The test class publishes fake odometry and pose messages and it will also listen to commended velocity to test all the methods of Robot class.  - Disabled parsing URDF file from robot class since we haven't figure out where to put the file yet.  Also  we still don't have a use for it.
ros-planning/navigation2,174,2018-10-16T18:22:57Z,2018-10-18T20:53:58Z,False,none,15bd6c360ed21066af91e12d7ebf9b77eba3d1b9,1,1,0afe9150d056d1f6e3897e8ccd244c6439c579dd,,WIP Launch instructions,Add instructions on how to launch the navigation2 stack    Not completed yet  sharing for others to use while WIP    Don't merge YET
ros-planning/navigation2,194,2018-10-18T00:18:44Z,2018-10-18T22:52:04Z,True,2018-10-18T22:52:04Z,f1f7168ad04f5bd1af0d0bed7a3fff8b158ea7a9,1,2,2a5ab99cb6eb40a8b3cc449b81bb726ee9eb5704 6bb9a68510471d67c2577dc0e7f21a1f2fc95c54,,Map Server readme,
ros-planning/navigation2,182,2018-10-17T21:20:04Z,2018-10-19T00:07:15Z,True,2018-10-19T00:07:15Z,8a22a5304bc71d553129e76ff2581ee348c30a80,5,7,a86bb102aa52d59a15867f541a5250498c425286 b1ea447249952f0c3050dfd28661f6cd7a60805d 1b3666ca9e98fecdf518adba665821464f7b11c0 c1c8a183bb9c8209f6de070f4d5d3abfac27a36d 4d8bda3dce77fb71523b8bf4b989d09e84028fea 5f4c77ee789f03a5147ce036c9b3b430078b3467 4ade697074cce312d2ad05e0c2a8438aa85325ed,task@architecture,First draft of ROS Comparison doc,Please review    Update:  Added a link to this from the doc/README file and added a use_case/README file which wasn't there before.
ros-planning/navigation2,212,2018-10-18T23:39:38Z,2018-10-19T01:01:23Z,True,2018-10-19T01:01:23Z,b53cd48f9144c66e56067b27df0c74f827a55371,1,1,e7c2a4ea7fdf4827c5bb6855de2da56e64bdeb00,,Removing the task status message from the tasks package,fixing as assumed git merge error after refactor
ros-planning/navigation2,185,2018-10-17T23:04:44Z,2018-10-19T16:35:48Z,True,2018-10-19T16:35:48Z,d6b055f9036ccb4ff6e0bbaff855704c7345e073,1,3,0c0dd14190f95cdbedb352bd25183465c1d43770 47aca30178cfa36234c99d936e55b072df34921c 112e464b27bcad75beb0cd34af8601e2beac4294,,AMCL Readme,First draft for AMCL readme file.
ros-planning/navigation2,204,2018-10-18T22:46:45Z,2018-10-19T16:36:34Z,True,2018-10-19T16:36:34Z,21c84d78db79a596122f9a1fe7d3b6b0196117e4,1,1,93a3bb9d1e132960e02e0c6f9a9813bf29d928f9,,Factoring out duplicated initialization code and addressing ROS naming convention violation,Addressing issue #181.    TestRobotClass checks the following methods from RosRobot Class:    - getCurrentPose()    - getCurrentVelocity()    - getRobotName()    - sendVelocity()  
ros-planning/navigation2,214,2018-10-19T02:35:24Z,2018-10-19T17:39:21Z,True,2018-10-19T17:39:21Z,7370ed99e2d006dd78e41d1f0f97ca0132760574,1,1,9d0d24439f6ed67d3c20e318881c2d5645c89a25,,adding all contributors for email production failure emails,@mkhansen-intel @crdelsey @mhpanah @bpwilcox @mhpanah @mjeronimo     Added all major contributors to email notifications if production (master) fails to build in CI. I just added everyone but if you don't want those emails ping me and I'll adjust the PR.    Steve
ros-planning/navigation2,195,2018-10-18T00:19:30Z,2018-10-19T22:51:34Z,True,2018-10-19T22:51:34Z,847928ac40bcb04fb26bae310dd5a6e0b64727c0,1,3,a7b92a61917766657796c19a49faec0c829fc192 e05cfa04ca3ce19e7105cb4d33444b4dfe975011 03cae1493e99d1c87cc38fc3365b8fcbc35f897a,,Costmap_2d readme,
ros-planning/navigation2,205,2018-10-18T22:47:01Z,2018-10-19T23:26:07Z,True,2018-10-19T23:26:06Z,468f308c9ceb8e09704a65a3cc5e20938880153f,2,3,e9705df1995fde4ead09020f98d423397601026a 869a9676431ffcfb1bc742e41a2dc88a9d37a8c3 e5cf7613fcf2fc013eda4464646ffe869bcabec5,,Build CI using ros2 master nightly build,Goal - build against ros2 master branches   - changes Dockerfile to pull from the ROS2 nightly build   - changes initial_ros_setup.sh to use the *master* branch versions of ros2.repos    I had tried pulling and building everything from source but Travis times out at 50 minutes  and the build was taking that long (you only get 2 threads for building so it's much slower).     This solution was recommended by OSRF here:  https://github.com/osrf/docker_images/issues/201    I would still prefer if they woud just generate a dockerfile as part of the nightly build. It would make things easier. But this works.
ros-planning/navigation2,208,2018-10-18T23:27:53Z,2018-10-22T03:38:04Z,False,none,0a6ab3a52de434f62d8bd0ec4231238615f77768,3,8,609ca63383b17ac165a8baf31efedc9c141a2061 8e0019fe42b4a293f46a0779c24ebf816023caed 95d845054c2d05ef37bb0e96f8158f2d3ee7c7d8 ff3ac60fe99e7b4be823551fb820bc63d56e7845 3e2e80b19e8803e891f560725d4d4b624682f5a6 e3834b63d06acf930e987856bac7231603b39b45 84cc508770c9c11c39bf4556a2d35ded303f3e0a 1e21acea1f1d5ad5adcc4267e3b909b3b347ca58,,changing build script language to be more clear,Changing some of the print statements to be more correct / consistent.   
ros-planning/navigation2,226,2018-10-22T18:17:29Z,2018-10-22T19:02:33Z,True,2018-10-22T19:02:33Z,9eaf27cd7af26a5a064940e8000f4996c218fba3,3,2,d23868483112c4dcf00c512aa19124505913defd bf4d8c68db838958eb0441234e438ee6542142e7,nav2_localization,Removed _CORRECTED suffix from ODOM_MODEL,- Removed old ODOM_MODEL _DIFF and _OMNI code.    - Renamed ODOM_MODEL_DIFF_CORRECTED to ODOM_MODEL_DIFF and ODOM_MODEL_OMNI_CORRECTED to ODOM_MODEL_OMNI
ros-planning/navigation2,213,2018-10-19T01:00:20Z,2018-10-22T23:32:02Z,True,2018-10-22T23:32:02Z,c5db53b29c5ce9a37199b92dbc6dc8670cbfe5dc,20,9,9759f7336a64819d54a62736f079d0e61295ae7b 6a622986120af6cc1257e0d0b44d4ce9bcabb4d6 d1b6dccdf719e711039cd12d020092fb7306c66d f9d989e79b492c152342e7ced32f3ab1bc5c9a28 dd6f310e9674502621cd4839c16de631ec0941fa 1113f9a4c85d033a5de99523411c6211b9a556a6 121bae2c945df05848b3ea44aeda11db24387751 fdbf131ebef38727b52e55796f587d69ac5f46de 60d60970a70e22cc5dba84e6b53b958d75a28f63,,human readable and more meaningful info debug logs,Common themes:  * ~all destructor's calls are still there but as debug logs only~ after feedback and discussions  now in human readable infos.  * all constructors give you a human readable Initializing comment to let you know they're coming up  * all logs were expanded to include important information (like goal position  path length) as are relevant in those steps.   * all logs that weren't `throw`s or turned to debugs removed the format "Class::Fn: brief message"  instead to format "Class: longer full sentence descriptions of the issue" as most users aren't going to be looking into the code to try to find those issue     In response to #59 I assume some of these decisions will warrent some back and forth with folks so I'm posting this early and will field questions or concerns as needed.     
ros-planning/navigation2,187,2018-10-17T23:24:54Z,2018-10-18T22:50:23Z,True,2018-10-18T22:50:23Z,5600e346425965582c9906f59551a33666568d42,1,4,c2a9c8cacd49233c02024c831a39a51e22ebc535 2823b03409bc15536cc143b29bddd67481806eb6 6bcba5d1c3c3bdafc85ff2cdd62b574b403b4a28 8ce37d286723f5d5ae491996fe2f8271ee24a13e,,Simple navigator readme,A basic readme for the simple navigator directory. There's more to say  but this is a start. 
ros-planning/navigation2,183,2018-10-17T22:10:57Z,2018-10-23T02:06:21Z,True,2018-10-23T02:06:21Z,7f430dd6ec3b8c71aa7aacf39341e6d923249426,1,6,945fb602b0eef93ad268af48986056717303385f ad78b669b895188a322623fcdd02e69c016ae419 8803df7ce9bf2c5cdd6487478ab43a5443b9cfbb 29a505ee1dc9cf14b116a3ea9685e80bf8f74921 904ec758ff6b65a277a43668e2e7b2153246cab7 38e2121345ec3488c692f6d6c7769bc1fa057ba9,task,Mission execution readme,First cut at the mission executor readme. Still lots more that can be added  but something to get started with. 
ros-planning/navigation2,179,2018-10-16T22:45:55Z,2018-10-19T17:54:58Z,True,2018-10-19T17:54:58Z,813ee0a9b03e15915b10c2070f8c546fb336d6e9,4,5,c19cdec6b40b96294fe7dd245c31858c1c1b77ae 1e6488c7dca1a5f1e1ae2fad2301a1e7340fffaa 8f040b091c3290ed02a9ef77bf67907c43ae076f 03a56dc440b1b87111e34869580188d457b1e7eb 09b22d5d13420c8f94e4a88bd71d4ba46d9580fc,,Propagate task exceptions,1). In the TaskServer template/base class  catch any exceptions generated by the derived class and return a failure status.   2). Propagate this exception to the thread owning the object.   3). Update the output messages in the SimpleNavigator to use the correct INFO  DEBUG  and ERROR macros instead of all using INFO.     Fixes #142. Fixes #145. 
ros-planning/navigation2,140,2018-10-04T23:43:09Z,2018-10-05T19:29:10Z,True,2018-10-05T19:29:10Z,cab9133a3da388a66e2ed0236877466ed76a34ce,6,2,61f9878ccd8ecf824cc760a8d8a61af298a10f9b 265710595bc0e64282ce90478bc3e7ef43d2713d,,Update the map server to publish the map periodically to make sure it ,… crosses the ROS1 bridge. Also a few code cleanup-related changes. 
ros-planning/navigation2,230,2018-10-23T18:40:01Z,2018-10-23T23:44:23Z,True,2018-10-23T23:44:23Z,7bf8d3e35a654788953d07dba2b6d777c6a2a8f2,1,2,209822b244faa514c6bb2665f3aced7cf7a225ef ef2784079cb220bc5c1cc91727685516364a343b,,Fixing small bug within AMCL checking for the last laser message,Need to handle situation when amcl node is loaded but laser messages are not yet available.
ros-planning/navigation2,223,2018-10-21T23:33:05Z,2018-10-22T16:16:36Z,True,2018-10-22T16:16:36Z,6891525119dada3cecd9bac2d3295e6e4ee1c9bd,1,1,ddc4035e9a18e2160d80f1d487f6e2575b55217a,,Add Travis CI build status image,Points to `master` branch.    This is how it is going to look:  ![screenshot from 2018-10-21 16-32-17](https://user-images.githubusercontent.com/9126421/47273756-ef138780-d54e-11e8-8deb-fb3a12606416.png)  
ros-planning/navigation2,237,2018-10-24T21:43:37Z,2018-10-25T21:02:11Z,True,2018-10-25T21:02:11Z,af38ef9e945b61a08aab29f0da138f8c6aeed5ea,6,4,e2db9348973d06ef5a604eac0a18ee7d766943aa 2b121b4604f263d37adc8226ed7de51f213ef0bc 5882ed14dd82ceef22daec3cfa4cafec169f1ba9 fa0f2295fd02ef2251839ffebb4339088d770f84,,Dockerfile update to fix build fails,Fixing issues - will update when ready to review
ros-planning/navigation2,231,2018-10-23T22:32:03Z,2018-10-26T00:15:14Z,True,2018-10-26T00:15:14Z,3f66854313c4cceeae91293d62e99819474da71e,6,2,77e41a53292f8b8d362e9d71bc9796efc64b6f10 f746ba9326e9fcde6187cc1504ac6886af12357f,,Port costmap2d buffer tf_sensor_msgs local port ,tf2_sensor_msgs once merged into geometry2 should move back to their fork rather than mine which is identical except for this commit.    Deals with #132 as well as ports correctly the observation_buffer. This deals with elements needed to fully port obstacle layer
ros-planning/navigation2,198,2018-10-18T16:48:24Z,2018-10-22T23:29:10Z,True,2018-10-22T23:29:10Z,1ddce1869e1ff52a28c429357efe57812c0d753b,4,4,7130630296893da5845490e7003db49ee4d24144 d4070602cf1d8f12c49f765154e8525b5715527f 32bf314b4d56fe6fdca27ff2ea4524b5088e348d 9d49cd4d907cac6f0a0d01f1719c22d387f5b95c,,Dijkstra planner readme,Adding information about the Djkstra Planner.
ros-planning/navigation2,234,2018-10-24T15:28:34Z,2018-10-24T23:15:06Z,True,2018-10-24T23:15:06Z,6bd4a5ff109689e5e726ab48d9ba8a8716ba0424,7,1,a877faca4c69c7063fec073336df4dabf2be5484,task,Get rid of the Robot abstract base class,Since we likely won't implement non-ROS robots  remove the abstract base class  and make the Robot class be a ROS robot. The Robot class will contain the functionality  common to all ROS robots. There can be derived classes that add functionality that is  not common to all ROS robots.    Also  since I'm modifying the SimpleNavigator  update the ROS log messages so that  they don't (redundantly) include the module name since it's already in the output.
ros-planning/navigation2,138,2018-10-04T21:38:17Z,2018-10-26T19:06:50Z,True,2018-10-26T19:06:50Z,46da2971c9d7da834238a8939aaafdb0df87c584,6,5,16c5dc9720507c314ae70ef48fac3d862ea2cab1 f93cc6379c99db60e6906b77303ba4de4c0b0173 670a58dc4d13166f98f346e9143d71c6af903c27 6862ef9fb067b2f99490e7a239f4f208cfe8a5e7 17f80b6194eeb75b3368a3cae6c77b131ae55093,,Replacing costmap stub with costmap_2d package in WorldModel,The costmap stubbed code has now been replaced with an implementation using the costmap_2d package. In this change  a LayeredCostmap object is created and a static & inflation layer are manually added during the CostmapWorldModel construction. The static layer plugin is responsible for grabbing the static map from the map_server via the map topic.  
ros-planning/navigation2,246,2018-10-26T21:07:09Z,2018-10-26T22:56:58Z,True,2018-10-26T22:56:58Z,429dbdd89203d323dd555a69266783a5d5bd9701,2,2,68d4905184f4d2f78686ba65b7f6f4b4a6199d6b 4f0dc62ab0e6d789de9cf8aef357376f0329e3a4,,Amcl remove boost,Addressing #118 
ros-planning/navigation2,222,2018-10-19T23:59:14Z,2018-10-26T23:00:06Z,True,2018-10-26T23:00:06Z,f68776e15c120820ae491bcff1d78c03aa8bb411,15,11,84813b8c991ecb73b4a4de83557aba2a02dc8ae7 72f3288affe2170b0ee1d99a638fed741d762783 a5391880a2d37ecd613b3abacab2c63143856fe6 fda825446eb9681e2459a414acbb77072c988019 3b1436f7d106bdd302b25d9c5240d71ce6fde207 fd74f53a5b4445092f330c26c4e306269d64d159 07e41f812b4e9b174302abcfe1914c031e0170e2 88443bb7c708c0934928146f182a4b34cb4b67fa 911852976ba80de64711b7e8eda7152858b4ec7c 3db04ee9b560185dd6ed8e31ba0afbccddf79b70 c612dd60789d67617f8ce6edb4dd452cd3f646ba,,Costmap2DROS fixes ,This PR addresses changes to get the Costmap2DROS class fully functional in ROS2. There are dependencies on dynamic parameters and callbacks which have been addressed in PR #196. 
ros-planning/navigation2,233,2018-10-24T04:57:06Z,2018-10-24T15:47:08Z,True,2018-10-24T15:47:08Z,c298232d5353e6a4d37deacd3b57bf2291fab998,1,1,484de0f7b53c3cf4f0bc281f46ba7f07d60bdf55,,Fail build if ROS1_DISTRO setup file does not exist ,Hit this issue when was following [https://github.com/ros-planning/navigation2/blob/master/doc/BUILD.md](https://github.com/ros-planning/navigation2/blob/master/doc/BUILD.md) on a clean machine.
ros-planning/navigation2,250,2018-10-29T17:25:58Z,2018-10-29T17:53:57Z,True,2018-10-29T17:53:57Z,632f17e4cd8659688b33c6155f6b800338dfcf85,2,1,239bb21924dfee6a3644bff40595e83a3c5833ac,,fix broken build with nav2_costmap_world_model,After merging PR #222  master became broken due to a previous PR #138 using an outdated function signature. This PR fixes this problem
ros-planning/navigation2,244,2018-10-26T18:37:55Z,2018-10-29T21:28:56Z,True,2018-10-29T21:28:56Z,96f37e02bd6ec0037606997a6c940ea729a9e289,1,1,b02dc3cec3766872338947497e70a5fedf5ee1d7,,Update gazebo_ros_pkgs branch to ros2,One line change to repos file to update gazebo_ros_pkgs to ros2 branch
ros-planning/navigation2,249,2018-10-29T17:13:31Z,2018-10-29T21:33:47Z,True,2018-10-29T21:33:47Z,f8b2cbc331dcb9230e8a196416e4f6f7eb732dc2,1,2,c4dd9a47dea8c97ec66eda0aa0a1e286515b33ca de132e46e2e7833dc18bab2bb7864cf9254c1b70,,adding warning when lethal threshold is outside expected range,Addresses #112 
ros-planning/navigation2,245,2018-10-26T20:36:02Z,2018-10-29T21:35:59Z,True,2018-10-29T21:35:59Z,5b54c9a8388d3c4c83f297425e3a098fb0953a52,1,1,7b5e47d5ec8e32432e1fcfdbad4038b4d4191d16,,remove my fork used for geometry2 after upstream merge,It builds in the `ros_ws` directory which I believe is part of the daily builds. Should wait a day or two before removing to make sure its reflected. 
ros-planning/navigation2,248,2018-10-27T21:36:50Z,2018-10-29T23:17:19Z,True,2018-10-29T23:17:19Z,7a10f047dd6fdbf842a77f0b6972a940166ae072,13,1,dc6d268da9a33b1e54733800eb3b9143676b88d4,,Consistent package format,Some of the packages used [http://download.ros.org/schema/package_format2.xsd](http://download.ros.org/schema/package_format2.xsd)  that requires package format to be set to `2`  but package format was  set to 3 instead.    This change makes them consistent.  As a result linter for packages  won't complain on this error.  Version 3 picked up because it is a superset of  version 2 with the addition of optional fields.
ros-planning/navigation2,238,2018-10-24T22:19:19Z,2018-10-30T14:43:21Z,False,none,36246de3bc76f425894fa3eaaab51bb9f2e00699,22,10,2e76d265a4ab8958899259bc2bf97fdd58677e1f 4114e9ed8f167fe6c4f4dcba57190ab15d5e086b 9cfac1f08099aa7b83fee420be706cd21820d43e 4885acfb3e1eebcae4c37379790efd5d3964fa79 82aa49ac1de420946c3bff66bb9197aecb0b1a53 bf6c2d2a0f46862ad64675c1fb2ff1ce137200cd 4d8575f04558d8fac8f80c53527543466cafd0c8 c6a9500df97f9e1ea55a7cb3643c35147d2a198e 1c3ff18b809e0aa85a844ddaeb74959cc7a227f4 1fbfe82269e270fa35c633560fe0d6d0bd783f1a,,Map server params,A ROS2 node can be used standalone in its own executable or can composed with other nodes in the same executable. If we intend to make our nodes composable  the parameters should therefore come through the node's parameter interface. This PR modifies the map server to get its parameters via the node interface instead of the command line. It adds a sample YAML file for the parameters. This sample YAML file is in the nav2_bringup/launch directory and can hold parameters for all of the nodes in the system. The map server could be launched with this file or any other  similar  config file  like this:    `map_server __params:=<path-to-params-file>`    or    `ros2 run nav2_map_server map_server __params:=<path-to-params-file>`    In addition to the above changes  while working in the map server directory  I attempted to simplify some of the classes there. 
ros-planning/navigation2,255,2018-10-30T00:24:04Z,2018-10-30T16:02:39Z,True,2018-10-30T16:02:39Z,55f9cbe98c8c917926865adbc867234b8a3a734a,1,3,79d135f42941576f5852e014562281af92c61f83 df6c021a3695e7dbd801dfb82ff238053ed5b28d 5b68867a1fd31dd8e043eeee8ffc20cb87cb7019,,adding PR template,
ros-planning/navigation2,242,2018-10-26T14:30:56Z,2018-10-30T16:55:47Z,True,2018-10-30T16:55:47Z,5b9705d925f41d7cd5080559aa209f39aeab461b,125,20,7858e6d70e74a765fd9ca6fc3d754cf4a529a7a7 da755a812b69c049f4bdf6aca293436f76f529e5 7da55111bd09027214981e7bffc325281f464844 b90a9a7d4a36e5a491a8d86fa0dd11a34a81da45 243ff4efcac60ee7f87995fabf2c406624eedc30 8aa4a9d4b8dc9380a9b4f2b33fb555238c819567 e96f8d76702c46febe94f1f3cb361d0060e6dfeb 3927a4bcbd7c688054fe26c5288650d4ff8fe59e 8e9260438888530c997249b3abc197eda3ee2819 fa510c2a10e09b7abf52af3ed13b7d969a9a7da2 e124887844b6e987ff16b9ee7a9d787485e35921 eca7f3a0d597a06f4371ca85c11706303298743d 1808b0ab3edd94669a95be52c565e5345ddbcb92 2c257989fc4e9893ae2ed5eb0bde8d8585f06471 46bc92bc1f70498e182dc6e568499d9d92d7b10b c2bf7f6e69c17508af3e39061780ef97fa49dfac b9594efc984cf2934ca7edf4e6df9265daf29445 fb3865c1c2889f13410286e408786ee622ae4db6 a717cbccf399d63e27374d0a1cb5891ebcc5b847 197ca726586d16f6f19b004030bdcc883d87d6cd,,Move nav2_controller_dwb to nav2_dwb_controller and update ROS_COMPARISON,Add links to other README.md
ros-planning/navigation2,259,2018-10-30T04:40:03Z,2018-10-30T19:00:25Z,True,2018-10-30T19:00:25Z,dc42b177b5893f8ed0dfce409e5af970a50231f4,2,1,0cf238e2036b0a1d82e91812b6190b86201b9486,,adding bringup readme and config folder for rviz configuration file,
ros-planning/navigation2,261,2018-10-30T05:37:05Z,2018-10-30T19:22:28Z,True,2018-10-30T19:22:28Z,ae2745f48c15fcd88111cd0a9d6b70a3c8f6b4a3,3,2,c25750a90fb87c2a2c9d8368d39de4ce060f1eaa 25b40c3f76488b1b45269650f1e4dfb81f7b424d,,package xml release IDs the same,I need the package xml versions to be identical for bloom to operate. Please approve so I can merge and get it indexed to setup build farm
ros-planning/navigation2,257,2018-10-30T03:58:32Z,2018-10-30T22:28:55Z,True,2018-10-30T22:28:55Z,ce09d9f26671bd7f02410888c118bac1f91b23e2,1,3,4a894b6d9146f7ec705d1643ef0c625142780447 670c3209c7483305252f31ea104f1c13ce962115 dc0cd0208cce71d2e9102936833fa2e079a9626d,,nav2_msgs readme,I figure it doesnt hurt to give folks a little bit of help in the nav2_msgs readme 
ros-planning/navigation2,268,2018-10-30T22:32:25Z,2018-10-31T06:08:56Z,True,2018-10-31T06:08:56Z,3aad4d16e7d785a19922be8d53932acc377edfd2,10,2,f0e65b188b3ba618cbaf3a2182376348817fd77b e02b4afb9a3716f23d25164e1fcf24b923ae3c64,,Rename the costmap_world_model,The original idea was that we might have different world model implementations. However  as it turns out  we will likely only have the one implementation that evolves over time. So  we don't necessarily want to emphasize that the current/default implementation is costmap-based  but want to allow for other representations going forward. Hence the name change.    This doesn't preclude alternative implementations  but the way. Just what we're naming this one. 
ros-planning/navigation2,267,2018-10-30T19:44:11Z,2018-10-31T18:58:13Z,True,2018-10-31T18:58:13Z,a8ff9d268aa1475670c62da8cbaa88d76bec0a08,2,3,3f47a0d5275486443e45e900621e63fc5483e1fb 871a8b3c7de4cdf39efae9585903ad57ef0f2605 3348684698e52e33201b6ff255c07b2fa68f0d48,,Bloom dep resolve,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #99 |  | Primary OS tested on | Ubuntu |  | Primary platform tested on | N/A |    ---     ## Description of contribution in a few bullet points    * resolving some of the rosdep keys toget successful build farm    ---     ## Future work that may be required in bullet points    * Finish rest of the keys    ---  
ros-planning/navigation2,256,2018-10-30T00:37:03Z,2018-10-31T23:29:20Z,True,2018-10-31T23:29:20Z,a1ea9225f2a9d243852a6fe2add70e55372b9d82,7,9,66bb445d92ceac720946eeb9411b99714ce4095b 84a508586d37d041ea942212a7a214f5ce7ba844 3620f13dcee8da40bcd79aa3280824d1fbc30224 0d70e0dddb99470d939335a50f258972c9736e5a a4e6f16732087e98792fdbba2f80970d561768ed 7d07d2d85839c472c28b5158e6d09811d99568da ce3adbcb7893776e98317c6ae71a2889576245f8 241060f0fd0a50358ef866395e86227ea9796e5c 61ce69d2d19cfe276a79a1399f325d2fe56383c1,enhancement,Dynamic params redesign,This PR addresses some issues for redesign mentioned in the README of PR #196.    In particular  this PR modifies and adds the following features:  - events are now filtered within the DynamicParamsClient internal callback  - dynamic parameters are now added (and intialized in the cached map) via `add_parameters()`  - user callbacks are now only called for parameters in the cached parameter map  - user callbacks are now initialized immediately via a forced "empty" event  - also added an example of adding a custom verification callback to DynamicParamsValidator
ros-planning/navigation2,284,2018-11-01T13:02:49Z,2018-11-01T19:11:08Z,True,2018-11-01T19:11:08Z,6ea1d95cf6ff33990fb1213f49f7b44c811cc8a1,2,1,ce3241691247f7d6303d772b72abca2fafa95feb,,Remove Davidvlu from amcl and costmap packages,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | None |  | Primary OS tested on | None |  | Primary platform tested on | None |    ---     ## Description of contribution in a few bullet points   * I've never understood amcl well enough to maintain it  and nav2_costmap_2d is not my creation.  ---     
ros-planning/navigation2,277,2018-11-01T00:28:57Z,2018-11-01T19:11:45Z,True,2018-11-01T19:11:45Z,a2b3a11e9767d809bcf8bda5e8b49f96aa33ab83,2,1,7932319b7f9d79f7c3ddebaabf1df62d31430549,,removing nav2_controllers package readded,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #276  |  | Primary OS tested on | Ubuntu |  | Primary platform tested on | N/A |    ---     ## Description of contribution in a few bullet points      * Fixed reintroduced package from a merge issue      ---     ## Future work that may be required in bullet points  N/A    ---
ros-planning/navigation2,96,2018-09-24T21:45:21Z,2018-09-25T21:47:49Z,True,2018-09-25T21:47:49Z,7b456300ecefb61c587e31b7cd7d94205dffe561,16,1,6a7d8446a96b48b54d6ffb15e0b3998eda4a0e33,enhancement,Add werror flag to CMakelists files,Addresses issue #68. Adds -Werror flag to all CMakeLists.txt.    Need to rebase before merging.
ros-planning/navigation2,94,2018-09-21T04:05:44Z,2018-09-25T20:36:53Z,True,2018-09-25T20:36:53Z,448039a92c41ea07fb0b19224b3b25b75520d7be,2,8,f4cbb9baae6787b5cd1e0e90ef7126b32f81f03a d6c26bc3ef4817086737b4ecef541412d1899248 72f7b54e234a6bd417578118ae873b3efd345523 03d1691058571b0a6e2c0a9cf76ddd39c3602360 6e437f21e2bb690adfcf25f083ad9ac1c92849e2 63e72757d0e4f27fa483e9b603a79b20df4cda16 bdce5f7ecde20da536d998615fd5cb7d929ac2c7 56057fe0c281056fe64342fca466f12f119b2038,enhancement,Add Dockerfile,Adds the Dockerfile  Updates the README for Contributing and Building the Docker Image
ros-planning/navigation2,98,2018-09-25T23:15:42Z,2018-09-28T14:56:05Z,True,2018-09-28T14:56:05Z,373087b29eaa3ef07ecbe42fef77454cbf956765,25,1,12ea3d53db8933abf6b2d40a7187bf8dda2fc8df,,removed unused gitignore files,Fixes issue #56   Removes unused .gitignore files
ros-planning/navigation2,266,2018-10-30T18:46:28Z,2018-10-30T20:42:59Z,False,none,1ac0d4d7d0d66ce578126ac0ccd47bbf72dd06aa,2,1,4d6318c832b620994edb6f536c6cc30fbd9c4cdf,,Update issue templates,Looks like the way OSRF does the issue template is not available to us. I think Github has moved on to a new interface.    This commit was created through their tool. I'll delete the other file through another PR.    Sorry for the churn
ros-planning/navigation2,278,2018-11-01T00:51:37Z,2018-11-02T18:18:40Z,True,2018-11-02T18:18:40Z,43c2858f42dc58b0c240bc570c308dd3ca00911a,14,5,f580419a9373bbcd7d0af0ea15aefac6253b04ac 5f8b0dbb2e4a8d8c3cc1a665d4b7b1c10dbc941a 2bfdb24f2fb22e798bd32e86ceab970e052f113e 99f6f0ffcc2ea7c349dd049ed5c43a9348cda3b9 4a595b4f9770d22feed6ff4edd62567c36ebcebd,,Rosdep precreated definitions,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |#99 #281  |  | Primary OS tested on | Ubuntu |  | Primary platform tested on | N/A |    ---     ## Description of contribution in a few bullet points    * There are a few pkgs in the ros2_dependencies that are already rosdep definitions. We should invoke rosdep instead.      ---     ## Future work that may be required in bullet points      * All other items in the ros2_dependencies need to become rosdep keys  or overlayed in this repo for the time being  * ~the side effect here is requiring melodic as rosdep keys for some of these things dont exist in kinetic. Right now we're not resolving them and that's why it works but probably not great~ not building rosdep ROS1 in CI      ---
ros-planning/navigation2,283,2018-11-01T07:23:33Z,2018-11-02T21:53:02Z,False,none,4d83db760d047984d58ef273b114b2349b91277a,527,12,3c2bb26ea02d708919097a43b1c9fa258c3f438e a688a142833202e7c60f6e4f4526c94beeb3e5b0 88d17bbfa43824e47a6cb87e4a2b7b414a16aaaa 3e727084167d0bb774e57156f141e84f9acdd803 93d1a89f86b8c79d3bccf741fca758c5002d0c57 ba6b938f835bd37c1f32336c80a1889219099405 53ccb712eb0387d214363785a0b0144d53294b46 c963ce654ef796adfa7e621f2853d8e7e7a41092 f49667f3b2a54335764cf39d5d7a353da81c840a 24c97236332a181f5a467fb2ed7edc90c7412c17 31d5244e6f59437cdc95c6d5f58f672883e291a1 d178c136f23afe397b03d796c1dc27d1d4f8f10a,, test PR for rosdep issues will remove after CI completes Explanation in description ,I'm having an odd time with rosdep right now and its running smoothly but returning to me no needed dependencies when there are things to install. I notice in the CI build farm jobs they correctly identify these packages needing download by their own non-rosdep logic.     This experiment is to see  with overlaying all the packages we have in the ros2_dependencies which stops it from completing  if we get a successful ros build farm job. At this point  I can isolate the problem to a quirk in rosdep to investigate further
ros-planning/navigation2,282,2018-11-01T06:11:08Z,2018-11-05T16:24:52Z,True,2018-11-05T16:24:52Z,a09a02fea921a140f6a29540bd6f8480a4ff5f8d,137,8,af6561f7c301d717edfc991f9ac20e9d36b2bed6 6aca61781797b62f4121fc636a8e652993568306 f4a0028abfff2096a2cb5dedf19e82c8b3900b15 0cc98b362666cf0391b05fad9a67ab5f33cf369d f08ae44738f2b5919e201042f9b392432dc57fa8 6a41abefaa164fd1d01f9ce9bb6265785a69e0cb d989d4161d1122fce1baf9c9d4cbd23dc1fb98f8 cf14745f9bdffd75e25cb367089da9b40f3b2a4d,,Fix cppcheck issues,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #260  |  | Primary OS tested on | Ubuntu |  | Primary platform tested on | N/A |    ---     ## Description of contribution in a few bullet points    * Fixining cppcheck issues as proposed in #260.    The fix is done for the following packages:  - `costmap_queue`  - `dwb_core`  - `dwb_critics`  - `dwb_plugins`  - `nav2_costmap_2d`  - `nav2_util`  - `nav_2d_utils`  - `nav2_voxel_grid`      
ros-planning/navigation2,288,2018-11-05T22:44:06Z,2018-11-07T06:37:34Z,True,2018-11-07T06:37:34Z,52c5ab4135b7373d8f32969cfbadcf10662d388e,4,1,50fb4a650e33911cc390be7382091a954bd9fc7e,,remove ros1,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #287  |  | Primary OS tested on | Ubuntu |    ---     ## Description of contribution in a few bullet points    * removed all ros1 dependencies (vcs  build)    ---
ros-planning/navigation2,258,2018-10-30T04:32:17Z,2018-11-07T23:02:33Z,True,2018-11-07T23:02:33Z,64adca85bb634bc7c61950deaa7dfa1d0110a434,25,8,cc9df405054cdad93a367107c9c8203fb6b3bcd8 e591c9454a86fda6b137de90cc2a0757cc60e14b c33e5454cda156fcb931248cf5b2b9d86d31d479 21f8c05707eb39a401f8541013bc0d73a5e008ef c86812f6cc0f57b60a176345a050def6c8135b70 00cc3e7a627c12bd12be251b7a3efda45bed97ee 124d361c156144a91030db7cbe0191ccf9795b07 94e692b60409c6de35d6b3878e25c7a1f36d4e23,,AStar planner and Dijkstra s minor changes,I don't fully understand the rationale for splitting A* out from Dijkstra's into different packages  given that `NavFn` library implements both potentials.    With that said  here's a prototype of A*  based on the nav2_dijkstra_planner port with the necessary changed lines to reflect the use of A* potentials.     I also add an INFO on successfully creating a plan in both  and also make it so that you only create a new NavFn pointer if the size of the costmap has changed  which is the intended functionality in NavFn with the creation of the pointer in the Initialize() method. A little bit of CMake changes.    A (pretty much identical) readme tops it off. As changes are made to nav2_dijkstra_planner  those changes should be ported to this package as well as they are pretty much the same. In my opinion soon down the line  I'd like to just make a parameter like in global_planner as to use A* or Dijsktras. For now  as there are 2 packages in the repo  lets make sure they both work. 
ros-planning/navigation2,272,2018-10-31T15:27:40Z,2018-11-03T19:39:12Z,False,none,41cb4b18a7efdea26286868d9856fe9eeec01800,18,1,5770d542819c7db0247568376274216828dcab19,,Rename AMCL related files directories and namespaces to match proje ,Rename AMCL-related files  directories  and namespaces to match project convention.
ros-planning/navigation2,227,2018-10-22T20:07:58Z,2018-10-30T23:11:45Z,True,2018-10-30T23:11:45Z,6d37648cd77f8a36fc1929d2131a941bc270beb2,32,32,2c7af3bc2e04bee1bea113ae596d609bbde77b94 50bbfc10b0f9eb8a06cea6061979214858e29d46 e8cd47a81ce344e34bfe70db7e2e04a42a42e239 10c5b099a78eb00a87194fb787418199aa00ea1b ecf53804c07405f33783818893044e6841da413d e50ea45a38e03dd4fe227dc839eb00f8ff0763ec e143e79c704a2a50502ab8846069a044a41aeaf3 565039e808ea281c9752334e00c0b45879796e71 4e9c7d762e9d5fdfaa7ae5525e6345b677dc8c39 dfc1c72fc5a08854b1f11dd97d8d615e9152fb7f eb5d8db433608f56c61867cfa3f4975342f80bc6 4969906e33d6be6f546b63e5a4fc7ceb2228531b fdb5b8da5d003b5ccc6d20aad0cb6018d7360e29 f845b75938039c15ad0263d7ae634fe3caebd141 1514259d6dbef98dc2c88579fa1c9ffdb49916ab 909c2ba5a1a79e62cde1b61e0e184b8ef12292a9 780730f9896d93392c1b66be38cd78a8b1c6ac80 8dae64284f7a235bc65b44a24e09a79bc07769d3 a44f8cd96dbebc2138337c41c0c4eaa7f7f9851e 2e6df425f2b9d1a6c4de481bc081d2e67581e26f 4fe0aadbf91353d6daa275ec71ed993294ec2e98 80bf9cba3dcb1c160a2a35247d4d927c05a5f0bc a46fe2027be444d4548a98c54eebd52c4b59851d f02847daade7055bf8d2c87ab854589e94a84b4c 4be39ff9674c5ca16fe679f993ff688c99f4f8a9 83b06032984ecdcab160c6b904c2472058d986ff a8d65ae9e0a8bcd5e3f672496ef8acdd4df5220b 7502e92c6d3189467078acf32484363b4a2360e6 def8b55da4d00005095fd1a0a2186a58025fe9e7 5a594f43591c884d03031f13ef54fc400e4d6c55 022abda0c7c7783d2d4b4157a4d3bd7233fd26d6 c11e7be8b090df79c9dcc546f6a9fee6aa97231d,,Behavior tree for mission execution and BtNavigator,Use the BehaviorTree.CPP library to implement BTs at the mission execution and NavigateToPose (BtNavigator) levels. This check-in relies upon my fork of the BehaviorTree.CPP library  which has a few changes to enable ROS2. I'll work to upstream the changes so that we can move to the source rather than my fork. The Behavior Tree classes in the MissionExecutor and BtNavigator have some common code that I will factor out into nav2_tasks (BehaviorTreeEngine). This will be a subsequent PR  but there is a start on this work (I've added the BehaviorTreeEngine class  but I'm not using it yet). 
ros-planning/navigation2,273,2018-10-31T19:34:15Z,2018-11-03T15:02:38Z,True,2018-11-03T15:02:38Z,d21a9d2a064b14cbc98179440b59009a969b0cf0,3,1,bf67b6cbb85be6efd9bd564e9b927794643d66f2,,Add a unit test for the task client server,Adding a unit test for the TaskClient & TaskServer templates. The unit test is a bit unorthodox because we can't call rclcpp::init and rclcpp::shutdown multiple times in succession. Therefore  there is one test object that holds the context and multiple tests performed  but only one TEST_F.     In another PR  I'll add tests for the Behavior Tree-related templates.   
ros-planning/navigation2,289,2018-11-06T01:30:27Z,2018-11-06T23:43:51Z,True,2018-11-06T23:43:51Z,2afce600b567db024df00d24e454f33c895e0764,13,2,09bbf3a32fc8718e9c2b7d1c58cce7901a358b57 8baa89ae2fc0bfbc47cc600024c30bfb1cc1e449,,Remove placeholder gitignore files,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | N/A |  | Primary OS tested on | Ubuntu 18.04 |  | Primary platform tested on | HP laptop |    ---     ## Description of contribution in a few bullet points    * Remove the placeholder .gitignore files that were present from roughing our the directory hierarchy  * Remove the nav2_astar_planner. We'll add any missing astart functionality to Dijkstra  
ros-planning/navigation2,301,2018-11-09T00:08:39Z,2018-11-09T17:49:30Z,True,2018-11-09T17:49:29Z,e6d3eb2ce3a07b8d1d1ffb9741912e537a87d989,4,5,75e051a1d965942545a1e776a82da1ffe2689c88 14b20dbf07147be78cf9ef4a3de5f115a6df104a 31df5ab7d273bdd578047ba5d1cf868091720b43 166f76545e46730210a4c026f6e0ca1b2646866a c5e66d27ac76170217295de4bef0dc978cec7758,,Integration launch files,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | N/A |  | Primary OS tested on | Ubuntu 18.04 |  | Primary platform tested on | Turtlebot3 |    ---     ## Description of contribution in a few bullet points    With this change  the entire stack can more easily be run with two launch files.    * Added nav2_bringup_launch.py for launching the stack  * Added gazebo_rviz2_launch.py for launching Gazebo and RVIZ2 easily  * Fixed a bug where "GetCostmap" service was called "WorldModel_GetCostmap". This was causing the stack to hang  * Updated the nav2_bringup readme for running the new launch files  ---     ## Future work that may be required in bullet points  * Could change the parameters to be read in from a YAML file instead. I tried this but for some nodes it caused them to crash  I don't know why yet  so I decided to submit this as-is for now and we can enhance it later  <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    ---    <!-- OPTIONAL -->     
ros-planning/navigation2,196,2018-10-18T01:25:03Z,2018-10-26T19:07:22Z,True,2018-10-26T19:07:22Z,ffb8bef7532906c1df1ff1df15d2ae93e4d5be95,8,7,7e4c9b6eb41c795b92e18cbfccfcecec0871ef85 294969ab7877ff99da91621ad3a2dc6467e46833 7b4b819d1ebc0904de3437ad5789cc2588c527f5 c5bb6900364a16045240158571e587183cf84bb1 63126d86149b7f462769251bfb5e02eed0d66217 668d5fe8adb9d1c4db69162362bfcd6006965736 feea7c79e8ab0b8ec9b940d6597c67672b307319,enhancement,Adding nav2_dynamic_params package,This package has two classes intended to replace part of the functionalies of the ROS1 Dynamic Reconfigure: DynamicParamsValidator & DynamicParamsClient. Addresses #177     DynamicParamsValidator:  - validates parameter against type (using rclcpp::ParameterType)  - validates parameters against specified upper/lower bounds  - allows for providing custom user validation callback   - provides interface to add parameters with type and optional bounds (integer & double)    DynamicParamsClient  - passes parameter_client (for remote nodes) and list of "dynamic parameters" to be added from remote parameter server  - keeps cached map of dynamic parameter changes  - provides interface function calls to grab latest parameter change or default value
ros-planning/navigation2,299,2018-11-08T21:29:53Z,2018-11-09T21:05:43Z,True,2018-11-09T21:05:43Z,c05732aa3533b49fa4ac1e33726bde57ba6d0ced,1,1,5ecf76f759c1b1a4bdf9c928492b2e6f5cc36fe0,,Ignore Visual Studio Code files,## Description of contribution in a few bullet points  * Using Visual Studio Code  I've been opening just the directories that I'm interested in  avoiding the output directories - install  build  and log - because VS Code can't track this many files. In this configuration  when debugging various modules  the VS Code app will put .vscode files around the source hierarchy  in each source directory being debugged. This causes the directories to be highlighted in the editor indicating that files have been added to the directory. With this addition to .gitignore  these files will be ignored and the VS Code editor will more accurately reflect any changes to the workspace.
ros-planning/navigation2,298,2018-11-08T02:34:21Z,2018-11-12T17:48:11Z,True,2018-11-12T17:48:11Z,69cc1e3f4d1ed12531a029d77487c9ae74102427,13,6,0d83a0d7f2b4462c63150379a2a0e208193b67bc d892b8192df5531c2b65cd9e4befc6d1cd57ce98 f2ed992d61f3d39e98f382da2d480b634ee63f7a 1816b4a0a9b72493fe26ddaab66262ff7695557c 2b8c47f2cdd5c550af03d577a56f6660fa96f994 e4451e96d7480ffe37eb999c10527d6503486964,enhancement,Adding dynamic parameter event namespace support and duplicate parameters,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #286  |  | Primary OS tested on | Ubuntu 16.04 |  | Primary platform tested on | NUC |    ---     ## Description of contribution in a few bullet points  I have addressed some of the issues brought forth it issue #286 regarding how to deal with namespaces and duplicate parameters. Now  parameters are added via node  where internally the DynamicParameterClient will initialize the cached parameter map with the current value off the remote node and manually create an event subscriber to the topic for parameter events of each unique namespace . This PR will allow for duplicate parameter names across  _unique_ namespaces. When a parameter is added/registered with the client  an error will be thrown if the parameter name is not unique within its namespace (a check is also made across all available nodes  even outside those added to the client). The rationale here is that we don't want another node's parameters to silently pass through the callback undetected  giving  unexpected or dangerous behavior.    Some other modifications were also made to improve the overall interface.       ## Future work that may be required in bullet points  - Update README for nav2_dynamic_params
ros-planning/navigation2,313,2018-11-12T20:31:24Z,2018-11-12T21:23:08Z,True,2018-11-12T21:23:08Z,8c2167822e2e7af32733c6511428cf758be52cc2,1,1,0b1305684715a7ac366a31398c9cdf984a156544,,Temporary fix to hanging problem in listing parameters in costmap2d,## Description of contribution  - commented out function call in `DynamicParamsClient `which lists parameters from all available remote nodes  - this fixes hanging issue where apparently the call _client->list_parameters_ will hang on nodes which are being spun in `rclcpp::executors::SingleThreadedExectutor `    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---     ## Future work  - resolve issue of listing parameters on nodes run in an `rclcpp::executors::SingleThreadedExectutor`. Not sure if a `rclcpp::executors::MultiThreadedExectutor` works either in my own simple test  <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    ---    
ros-planning/navigation2,271,2018-10-31T01:15:10Z,2018-11-12T22:17:14Z,False,none,d1dc505bfed609b424220d545cdaf7ff30311393,6,2,9a4a4324be5fa0bee1a409e899d233cfb6d2d747 e2dd999315524315cb13a3e4c56dc411c2ed238d,,Add dynamic reconfigure support to DWB ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #264  |  | Primary OS tested on | Ubuntu 18.04 |    ---     ## Description of contribution in a few bullet points  * Gets robot kinematic values from dynamic parameters instead of being hard-coded.  * Adds a yaml file with turtlebot kinematic values to the launch file.  ---     ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    
ros-planning/navigation2,297,2018-11-08T02:16:49Z,2018-11-12T22:16:53Z,False,none,dac3b571eb30fd10d8cfad281c4f363f296ca2c7,9,3,0660e7da2bf00c212210b533389b7110729f2db5 f79c6ab4e903fd081ba354143e3e117f79dd9c6d 0c0c30d67c036ec320066f1d113f93874e4374ab,,Core to node,Moving all the library `_core`s to name  and nodes to `_node` as used in all the DWB controller  move_base  and general ROS cmakelists templates.     Has no functional difference  but homologates the codebase to follow convention.
ros-planning/navigation2,302,2018-11-09T00:30:47Z,2018-11-13T01:53:34Z,True,2018-11-13T01:53:34Z,d054da63fc444ef76eca48bd347f986388747afd,7,2,ed27f25ae9aa5ed9754ad35650f57d403569f9ae 90d7451e8094129cdc44e7ef2800ba49c9f50907,1 - High,remove xmlrpc dependency and re enable plugin params,  <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #131  #262 |  | Primary OS tested on | Ubuntu 16.04 |  | Primary platform tested on | NUC |    ---     ## Description of contribution in a few bullet points  - Removes the dependency on xmlrpcpp in nav2_costmap_2d  - re-enables plugins to be loaded by parameter  - replaces parameter client calls to be off the node itself  - remove unused functions  - add footprint as dynamic parameter (should have been before)    ---      
ros-planning/navigation2,293,2018-11-07T05:31:14Z,2018-11-07T23:19:55Z,False,none,137fa12863534b547cc60aaa0bf612a522c4b887,1,1,4b0fb3a4ad0f78e8755dd757965ab4c809c32007,,Small fixes in build_all sh,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | N/A |  | Primary OS tested on | Ubuntu |  | Primary platform tested on | N/A |    ---     ## Description of contribution in a few bullet points    * Remove duplicate export statement  * Update the export statement so it has correct syntax.  Here is the  help from `bash`:    ```         export [-fn] [name[=word]] ...         export -p                The supplied names are marked for automatic export to the  envi‐                ronment  of subsequently executed commands.  If the -f option is                given  the names refer to functions.  If no names are given   or                if  the  -p  option is supplied  a list of names of all exported                variables is printed.  The -n option causes the export  property                to be removed from each name.  If a variable name is followed by                =word  the value of the variable is set to word.  export returns                an exit status of 0 unless an invalid option is encountered  one                of the names is not a valid shell variable name  or -f  is  sup‐                plied with a name that is not a function.  ```      
ros-planning/navigation2,321,2018-11-14T02:48:16Z,2018-11-14T20:32:08Z,True,2018-11-14T20:32:08Z,915320a6d6319b6456313dbcd93728fb2bb78219,3,1,0db1a227c46445706bc317d72fd73c061894b09f,1 - High,Replace manual layered costmap with costmap2dROS object,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #252  |  | Primary OS tested on | Ubuntu 16.04 |  | Primary platform tested on | NUC |    ---     ## Description of contribution  - replaces the manual creation of the `layeredcostmap_` with the `costmap2DROS` node object  ---     ## Future work   - Grab correct orientation information from costmap to put in service map metadata (currently a TODO)      ---    
ros-planning/navigation2,318,2018-11-13T19:30:44Z,2018-11-14T21:53:46Z,True,2018-11-14T21:53:46Z,0215a752f4578720d364f7242d8e35178d4777d7,7,9,25b0dd00d072db6869b9041e700f38b327473535 cc9a20c63f02580d898f13ea55884c69a37a0549 b6418a3fbae139f3b5ba0c6d5ad80c962b42925a 51fa986089f75a739026261103e2cd3f2b4bd313 a602c84b26e581086f91ff73d2481af85774bbf9 2d56bd777beab7dd3fcd41373b0c7d11af657436 1ae289442c9f98132dd193afa33812c31f1b1927 3164bbaf3643b785db800700ad875bba95dc933a 2de7ed8fa0fe5cfdf96d84e3abc9dde6a20b4ea9,enhancement@costmap_2d@0 - Critical,Obstacle Layer Port,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #192  |  | Primary OS tested on | Ubuntu 16.04 |  | Primary platform tested on | NUC |    ---     ## Description of contribution in a few bullet points  - port of obstacle layer  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---     ## Future work that may be required in bullet points  - re-enable message filters topic subscriptions when upstream changes in [ros2/geometry2/81](https://github.com/ros2/geometry2/pull/81) and [ros2/message_filters/pull/13](https://github.com/ros2/message_filters/pull/13) are merged   <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    ---  
ros-planning/navigation2,322,2018-11-14T08:32:37Z,2018-11-14T22:18:04Z,True,2018-11-14T22:18:03Z,0950c4cbda050b5b5dac234f01f6a0b572d63f54,10,2,388a9495a44513df9c1ec5ee4de66eb14eff2162 8eb19f0c76f25de37aff70b6eaec04428fee23ff,2 - Medium,Voxel Layer Port,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #193  |  | Primary OS tested on | Ubuntu 16.04 |  | Primary platform tested on | NUC |    ---     ## Description of contribution  - Adding port of voxel layer  - renamed namespaces in nav2_voxel_grid  - added voxel grid msg in nav2_msgs  - depends on obstacle layer  so only to be merged after PR #318 is merged  ---     ## Future work  - Everything compiles but I haven't run-time tested the voxel_layer port  - there are no unit/component tests written for voxel layer in the original costmap_2d test code    ---    
ros-planning/navigation2,328,2018-11-15T18:50:07Z,2018-11-16T00:49:49Z,True,2018-11-16T00:49:49Z,1b0d049c0c11963c0022c809e8000650101b4d68,2,3,44d94e85d00a462cb0219f620370c99ebfd46a1a 9d5a5771664702a48ec1c6bd53a767e90dc67a4e 228393508bf32258b5eb3974058630ea8ca3d6c7,0 - Critical,Amcl use map topic,This is a change to the default behavior of AMCL to subscribe to the map topic instead of trying to use the service to get the map. Currently getting the map through the service seems to hang. Not sure why that is.     This change is needed to get the robot to move.    I also changed a couple of messages from INFO to DEBUG and changed the ERROR message for the laser scan transform to only report when 20 successive fails occur. This reduces the spew of ERRORS to the screen since this happens a lot (100's of times per second sometimes). This at least helps with debugging what's happening  it may or may not also free up some cycles for other work to get done.   
ros-planning/navigation2,323,2018-11-14T20:25:27Z,2018-11-16T19:23:05Z,True,2018-11-16T19:23:05Z,728e96d7622aa7d2073f6054540bdea404ed4796,2,3,253ba176d5c847379a6d5cfa934922c58b0cf5fd 0dd3def8729339e4f6864d90237f9dc9cc490af8 ee1f6f190db25aabae21afd96755425e4506551d,1 - High,Planner hook fix,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #304 |  | Primary OS tested on | (Ubuntu) |  | Primary platform tested on | (gazebo turtlebot) |    ---     ## Description of contribution in a few bullet points    The artifact observed at the end of the path is originated from rounding errors when translating the goal and start poses from world continuous space to the discretized map representation.    The figure below shows an example. To the left we have a path generated with a 'hook' artifact on one end  to the right is a path (connecting the same start and end poses) but without artifact.    ![both](https://user-images.githubusercontent.com/39749557/48510078-b3937280-e807-11e8-8bbf-33b46fb867e9.png)    
ros-planning/navigation2,310,2018-11-09T23:41:59Z,2018-11-16T22:25:15Z,False,none,87480d21fc3649495803d9ca7e9102d10b76725c,2,9,6dc51821964313b2b28993ef5f7f43c3167503a3 dfee92ca0fca46f2d38342650df11f5b80d10d3a 3bb61945b783550e8a20719d034af316887432ca ee718f917cfcbccf84b1da0d73fc2d354aced6bc e9539ce0702365c2b8386fe0a47fa4f8f01c8c41 db99763bd25d02a8d634a1bfdcc859f0608c42d1 f79b94e05c5b90605652167434b834d2c28e4cc6 80c0b5ce340194cdf18cf479d5d5a7fd5f14519e 9923d479746e68c21e6ccda63e9679ef732c21d9,nav2_localization@2 - Medium, WIP Amcl laser received callback,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #169  |  | Primary OS tested on | Ubuntu 18.04 |  | Primary platform tested on | HP Desktop |    ---     ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  ---   This PR addresses issue #169 and it's still in progress and needs a bit more cleaning.  I will be on vacation next week  but please feel free to provide feedback so that I can address it when I get back.     - AMCL's `laserReceived` CB is long and hard to follow.  In this PR  I've created few helper functions for `laserReceived` to improve the readability.     ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    ---  
ros-planning/navigation2,343,2018-11-19T18:04:34Z,2018-11-19T23:52:39Z,True,2018-11-19T23:52:39Z,df69e244683e132f67e2cf8061aa394156256000,1,1,acd1b586baa12f230b996845470ac194650212bd,0 - Critical,Add angles back to ros2_dependencies to fix master build,currently the Travis build of master is failing. I can reproduce this on my system by building the dockerfile locally.     Error:  --- stderr: dwb_plugins  /ros2_ws/navigation2_ws/src/navigation2/nav2_dwb_controller/dwb_plugins/src/simple_goal_checker.cpp:38:10: fatal error: angles/angles.h: No such file or directory   #include "angles/angles.h"            ^~~~~~~~~~~~~~~~~
ros-planning/navigation2,329,2018-11-15T20:19:28Z,2018-11-20T00:13:32Z,True,2018-11-20T00:13:32Z,afd7e91818bc588cac5753a31b4c18083532f3f4,1,1,f943b51d1fd2123340c3f3d7bf34072ed5f9285f,bug@costmap_2d,fixing costmap_2d_ros logic operator bug,Bug Fix: The robot footprint was never being updated when setting the "footprint" or "robot_radius" parameters during run-time  thus it remained at its initial value. This bug was due to an incorrect logical operator checking whether the dynamic parameter was part of the parameter event.    I mistakenly had used the wrong logical operator (OR instead of AND)  preventing the footprint to be updated dynamically.
ros-planning/navigation2,336,2018-11-16T22:21:14Z,2018-11-20T00:19:53Z,True,2018-11-20T00:19:53Z,6f13fd0ea335c1769c1aff60cc2129ba0ba5e8ed,1,1,4a7d220a2d26c73381adfebddbfd551f710b8057,bug@1 - High,Fix robot class to use cmd_vel topic,One line change to fix robot class. Instead of "cmdVelocity" it is fixed to "cmd_vel" which is the standard.
ros-planning/navigation2,324,2018-11-15T05:24:08Z,2018-11-20T01:19:48Z,True,2018-11-20T01:19:48Z,a992f9cdac21ee5be8f201a29dcac097017fd139,1,10,81308f270b1ad76b7d8d16c94b9b704b9233cd38 4f50cbf233d627d5aca1f21decd2c59a157a4e84 3ebd1c372547ea262cd80d58ec2ddff8d531d9e7 1b579fb0525f139a652430795fd95f527a82c81a 3422f9017b6ca8f04fe29297ebc1d261b65ddc82 cf5c6ff53d34885da2ea6791d903383f3bce8f9b 0aa707fd0ddca0be5e9b50c603398ba5ec3c5920 16a107c2ffae698948aa49a69f64604855f29827 8869d43b184457b94b839d0e897255028400f39f c9b66e742b0af4b3ae38722aaecb315b707d3cc5,1 - High,Enable colcon test in travis for passing packages,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | None |  | Primary OS tested on | Ubuntu |  | Primary platform tested on | Travis CI |    ---     ## Description of contribution in a few bullet points  Added colcon test to travis for currently passing packages    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---     ## Future work that may be required in bullet points  More packages need to be added  <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    ---    <!-- OPTIONAL -->     
ros-planning/navigation2,333,2018-11-16T04:28:44Z,2018-11-20T06:20:42Z,True,2018-11-20T06:20:42Z,14ab11d8533d6c932b254ba1b2df272fc30cc951,1,2,a21d28c87114642848e25b1eeb8340aaf9d5d40b ad445daa749973f9aca7f495c7de6dae5e06f10b,,changing last _node executable and adding library as _core,Per our previous discussions.     The smart planner PR contains the planners' conversion over to this mantra as well
ros-planning/navigation2,332,2018-11-16T04:19:46Z,2018-11-20T20:59:44Z,True,2018-11-20T20:59:44Z,3d7cb15cec830cc5b35ad0fcdfcad6a0cc5cd9be,16,6,20c2ce8b3eee7c6c7ec6e2b8c5372cce3c2a2d35 a4c1cc26ebf078ce97c81b2181f3e604ef4ee74a 183fab4bdcdde466f211f30918260697b981ff1f 0e8a8fe5fff0a77809385f9b2b8e05da97acef53 1f444918114ec41c627448a802af637ee2b9177d 03ab7e700ffb11a89e49456f825d62c1dc6cc54b,1 - High,Smart to navfn,Addressing https://github.com/ros-planning/navigation2/issues/325
ros-planning/navigation2,315,2018-11-13T00:40:54Z,2018-11-15T05:56:19Z,True,2018-11-15T05:56:19Z,560944df09d405b68a38ef4a95854d42362969f8,5,4,c3a0fde2fdb4c346f5241146370575bb63d51f14 2a7432d4b3c4b68210162942e3a0b305d5e23393 694f8217ead32d6eee313683bc19111f1b06c7a8 6074dcb6396c3c00207b54851a38ca557e04db75,,Move code that listens to rviz goal_pose message into the NavigateToP ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  N/A  | Primary OS tested on | Ubuntu 16.04    ---     ## Description of contribution in a few bullet points    * Previously  the user could specify a goal pose in rviz and the MissionExecutor would listen to the goal_pose topic and initate a mission with a single NavigateToPose command. With this PR  the code to listen to this topic has been moved to the NavigateToPoseTaskServer base class. That way  the MissionExecutor does not have to be running to drive the nav2 software from rviz.   * Both the BtNavigator and SimpleNavigator pick up this capability from the base class  * Renamed a couple member variables to be consistent with naming conventions
ros-planning/navigation2,311,2018-11-10T00:03:34Z,2018-11-13T00:43:26Z,True,2018-11-13T00:43:25Z,dacb85c2ebbf7ff14f69e1c54d85f0c3408b78b4,18,6,08b509d03e590855ba66005b1ebeecbdb91c74ac 074669af14323e0a55cacc486dcb5ad82ee429f3 3eb866ad342b98d7f5d61522756e90190e17d950 5230bb0fd0726e498a8d7f67fe38b6dc30252b7f 86fc1c4f162204975ef867c37d56d1c4d1ca06c5 141e9bc24debee1a6062603030e90bd28b3e7478,1 - High,Task server not node,## Description of contribution in a few bullet points    * This PR addresses issue #44. The TaskServer is no longer a ROS Node  but accepts a rclcpp::Node::SharedPtr reference to use.   * While making this change  I also updated the TaskClient and Robot classes to also accept an rclcpp:Node::SharedPtr reference for consistency.
ros-planning/navigation2,300,2018-11-08T23:23:48Z,2018-11-12T17:49:15Z,True,2018-11-12T17:49:15Z,1f29d82c0117e847c1d8b3b3b4a7a8adea9cc8cb,11,8,69e19694f7953971ee6e2a14c3a7cd2ac8e9d3f0 a6e2d0cb72bbdc0113cef2253ee1d78ecbae2b61 81fb991f7bda5f9313afb4b23ef03fcb3eed4dd1 e0bdd74495d94a2ce9a50c56125b6be6cde7daae d1951033afb2041f5a2262eb03470a15515e5b27 17aa9eab2ff9245e58865d5aa4aededa105db856 06201bd74192b64e4e205fdca8e266ba8a5aa9b5 73a7827dcf437e62a4314b8ec2b244a6cd349fed,,Use common BehaviorTreeEngine for MissionExecutor and BT Navigator,## Description of contribution in a few bullet points    * This PR factors out common code  making a single BehaviorTreeEngine class that both the BT Navigator and the Mission Executor use. It is branched from PR #296.     ## Future work that may be required in bullet points    * The next step in the BT work is to run the global planner and the local planner/controller in parallel. That can hopefully be accomplished by modifying the XML used in the BT Navigator and very few code changes.   
ros-planning/navigation2,335,2018-11-16T21:36:31Z,2018-11-20T06:14:12Z,True,2018-11-20T06:14:12Z,c04c4010420a5d9ccf0da1e9d65cf013858bd885,13,1,5acc8bd14e1d2fed87b0260ab1acd42204ea0884,,Make node libraries SHARED objects instead of static link libraries ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | Action item from weekly Navigation WG meeting |  | Primary OS tested on | Ubuntu 16.04 |  | Primary platform tested on | Gazebo 9 |  ---     ## Description of contribution in a few bullet points    * Use position-independent code (-fPIC) for code that's in shared libraries.  * Make other non-node libraries SHARED as well since they could be used by nodes    in node libraries and this code also needs to be position independent.  
ros-planning/navigation2,355,2018-11-21T21:12:36Z,2018-11-21T22:27:14Z,True,2018-11-21T22:27:14Z,a029e10a5c6796fabdebc71423d4be55a6daca75,1,1,4ee165afcc737454681ab6b3405fee633b40d678,,Fix the loading of the costmap plugins,## Description of contribution in a few bullet points    * Fix plugin issue introduced in: b91d97e42ae861cf38ec8cfafc63c0638de1477b  
ros-planning/navigation2,296,2018-11-08T01:22:52Z,2018-11-11T15:47:29Z,True,2018-11-11T15:47:29Z,d07b9fdf772eed0b681b9239d3c5b21c2fce2ed7,8,3,01cf3f562cb4721476f0f6d1da94121c7c1f799c 99270e1d518b1bcd2121ff96d341595a30c8e40d 100eb8aefc9b8568ee5a2fdf25161c3699860d76,,Wire bt params,## Description of contribution in a few bullet points    * In this PR  the BT navigator code is now using the shared blackboard to communicate the input to the global planner and the output of the global planner (which is then the input for the local planner). This change requires that the blackboard be created before the run method (and passed to it) so that the variables can be put on the blackboard before the tree is built  * The BtNode base class now has an init() method that derive classes can override to read values off of the blackboard. This typically is used to set the input and output parameters for the task.    ## Future work that may be required in bullet points    * The next PR will be to factor out the common code in the bt_navigator and mission_executor that executes the behavior tree. There is already a BehaviorTreeEngine class for this. Just need to update the two files to use it.  * After that  I'll address running the global planner in parallel with the local planner (Issue #48). It should simply involve describing another behavior tree to do to replace the simple BT that is currently used (two sequential nodes).  * The tolerance value is still hardcoded. This will be addressed in a subsequent PR for both the simple navigator and the BT navigator (Issue #164)
ros-planning/navigation2,316,2018-11-13T05:13:33Z,2018-11-15T15:05:10Z,True,2018-11-15T15:05:10Z,6e457a2782ee3dde4f2d63443f903e7931e59717,1,1,bbf229d14d5d0779c30321b7d80780667dc1ac50,,Improve output in initial_ros_setup sh,Print a message that a function is skipped if a checkpoint file exists.    Hit this when was trying to repair a broken enlistment.  When I run `inital_ros_setup.sh` I got the error below and it was not immediately clear why the other steps are missing.     ```  $ ./initial_ros_setup.sh   <...>  Are you sure you want to continue? [yN]  y    ./initial_ros_setup.sh: line 102: /home/user/nav2/navigation2_ws/src/navigation2/tools/build_all.sh: No such file or directory  ```    Adding printing in the `else` portion of `checkpoint` provides a clue of what's happening:  ```  $ ./initial_ros_setup.sh   <...>  Are you sure you want to continue? [yN]  y    .INITIAL_SETUP_download_navstack exists. Skipping download_navstack  .INITIAL_SETUP_download_ros2_dependencies exists. Skipping download_ros2_dependencies  .INITIAL_SETUP_download_ros2 exists. Skipping download_ros2  ./initial_ros_setup.sh: line 102: /home/user/nav2/navigation2_ws/src/navigation2/tools/build_all.sh: No such file or directory  ```
ros-planning/navigation2,364,2018-11-27T07:57:21Z,2018-11-27T20:33:58Z,True,2018-11-27T20:33:58Z,0892b0762454a73751b86845ded6e31838b633bb,2,11,e053705540600b0fa87ebee6da246379622a8525 98571f77530ae81fccdc2f57b9832c0d4a3a5e7c 1ab32988f10ca7083cf30dfbfa39b73570bc43c8 2493a2aead3682ae1e14351b274279b54cec56ba e7ddf88dad2280dd69f9cde077087af614cc554a caa1b0a1ed445fffae9c60ecb337a39a9d45c675 01eb0126e46cae19fc68b3c6b4903b4c2be6b8ae 4e32c5fb6194a5c63a635c50d1455b05cf7aeaae b13d6aeea3e8d8b5b6b75d9adeb68079e593f663 1a9559404c2b972354147dc832662544a523531e cf0921119412130947116412d375f310d0991edd,,Update how colcon test runs in Travis CI,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #334 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | N/A |    ---    ## Description of contribution in a few bullet points    * Before the change `colcon test` in Travis CI run in a wrong environment  * After fixing the environment  skip only packages that have test failures.  There are 11 such packages now  * Adding verbose output to `colcon test-result` so Travis CI log has errors    ---    ## Future work that may be required in bullet points    * I'll check issues on package by package basis and see what else I can fix.    ---    
ros-planning/navigation2,376,2018-11-28T20:10:47Z,2018-11-29T17:20:03Z,True,2018-11-29T17:20:03Z,666d797462ccca1d6a4763eb5af3e004ca528115,6,1,e1cdc2afc4a8a60cd6e995b22ea01a4db8fe8c08,,Added include directory to amcl,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA|  | Primary OS tested on |Ubuntu 18.04|  |Robotic platform tested on |HP Desktop |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    - Moved amcl_node header file to include directory    - Updated amcl package.xml     - Updated amcl CMakeLists to export dependencies    
ros-planning/navigation2,346,2018-11-20T06:08:11Z,2018-11-29T20:46:06Z,False,none,e0db94dca24468e6dfe11e8abaafd716aa9f058d,3,3,87a98db4df82ca77ffe4b66c3781156ae72d3c50 174adb5f4f0233c44729f3968697de09626366e3 b895f7102a44694432da6989798e1f1586e5c2db,1 - High,System fixes to Costmap 2D,This is to improve system stability and ease of traceability  * This cherry-picks a commit from the integration-debug2 branch made by mjeronimo which moves the parameter setting to the end of the Costmap 2D constructor  * This adds 2 INFO messages for the /initialpose and /move_base_simple/goal topics for ease of traceability   * Adds a 'wait_for_tf' parameter with a default of false to Costmap 2D constructor to bypass waiting for the transform to be there. At a future date  we could deprecate this entirely since we think it makes the system less stable. By making it controlled by a parameter  we make it possible for a user to enable it if they have a use case requiring it  
ros-planning/navigation2,389,2018-11-29T07:09:27Z,2018-11-30T06:40:20Z,False,none,f21fd85ba2921e9e7d28aa78a5ab59726628adcc,2,2,9189299e80b13c0146323c70960152e999090870 d3f3aed35ab8ab28c0da47b26f5a9ac649add285,,Dockerfile change to copy navigation2 source code from the current repo,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (N/A) |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (N/A) |    ---    ## Description of contribution in a few bullet points    Fixing the logic on how source code gets into the docker image.  The previous version always was cloning from `ros-panning/navigation2` that is unexpected for:  - Local build  - Travis build in a forked repo    I hit this problem when was testing a fix for `colcon test` of one of the packages.  I was confident the fix was right  it worked locally  but Travis build was failing.  After some time I saw the code in this file that is ignoring all the changes  but gets source code from the master of ros-planning/navigation2.    @mkhansen-intel 
ros-planning/navigation2,391,2018-11-29T21:24:00Z,2018-11-30T22:26:02Z,True,2018-11-30T22:26:02Z,cc040b4cb2ec405639e7fcc3c216c67fe3b78f18,2,1,249a0c032f8ba247bf7d38fc8e6f669ac9d93e75,,Re enabling message filters in obstacle layer,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #386  |  | Primary OS tested on | Ubuntu 16.04 |    ---    ## Description of contribution  - Re-enables the message filters in the obstacle layer now that needed changes have been merged upstream    ---  
ros-planning/navigation2,349,2018-11-21T10:12:21Z,2018-12-03T17:04:38Z,True,2018-12-03T17:04:37Z,a997a8d8bb8fcc3bf8c5fe005a2c5024556541b0,4,6,b3dcf2783b3448c6c708aa3a7de80d484445f41a c7c7476c6f0456285b013ce1444f0a45c5818345 70640b3771d636ae38460e2fb76d6189243c2066 9c831666c1a0de6a1a5be5a67f87f93980066f1c 4f118931778c0d9a3e90a174d400b0931b48647f cdb2e32e8203e4e851d51e49647f47ad2b6c5e65,,Port voxel grid 2D markers and 2D cloud to ROS2,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #326  |  | Primary OS tested on |Ubuntu|      ---     ## Description of contribution in a few bullet points    * ported the last 2 visualization nodes in costmap 2d    ---     ## Future work that may be required in bullet points    * This was just a direct port. In the future I hope to put into classes and have those classes utilized in the voxel_layer itself      
ros-planning/navigation2,388,2018-11-29T01:55:26Z,2018-12-03T17:17:57Z,True,2018-12-03T17:17:56Z,63a33c233cbb637c3a1950a504b6b72759aed6ab,12,8,c89e8074a933ce0ca9966fc58cd26d1dd8f11431 183e793220c8b87bdb0bac8a0d431486c6b139c6 9b949477ed0673423cda5e668cf52784ff6f6039 19dcb157e9f535318ec38ba21d9eb31b64384d47 3e9209c669475b1f03feb0e93c13ffa7a798bc1b 761e8d84869b40367ec00915b2c2baa00a452f35 9e089ca81193e005f25595f118a9570422475ffa 5b960c6ccd10a7647aa9ad937d824577c35945f6,,Amcl integration test,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | HP Desktop |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---  - Moved the amcl integration test from amcl's test directory to nav2_systems_tests    - Modified the existing amcl test by first publishing an initial pose to amcl and then subscribing to the amcl_pose to compare the initial pose with amcl_pose    - This test launches Gazebo  map_server  and amcl
ros-planning/navigation2,393,2018-11-30T06:37:29Z,2018-12-03T17:50:08Z,True,2018-12-03T17:50:08Z,542433406e647d93267cfc45e401c01f7d2c53e1,2,3,07b351f340086abeca20c5e8b6260a7eb78b96ca 2628448ca20411a3177e7f956456a77c83828013 873b6e1dc0cd801b4202413cebcf41f824121ee8,,Define USER and BRANCH in the Docker image,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (N/A) |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (N/A) |    ---    ## Description of contribution in a few bullet points    It is the response to the discussion in #389.  I updated Travis  so it errors if it runs in any repo but ros-planning/navigation2.  Added retries for `wget`.  For some reasons  I cannot download the entire archive without retries  probably due to my physical location.  The other changes are about the ability to customize GitHub username and branch while running Docker.  The default has not been changed.    Hope this is a better PR than the previous one.    @SteveMacenski  @mkhansen-intel 
ros-planning/navigation2,344,2018-11-19T21:32:08Z,2018-11-19T21:32:19Z,True,2018-11-19T21:32:19Z,49836b8a513a6276f8811dcfdf87e88ab3e0005f,1,1,a3c4d563c49ac5e674dd366f50f52a09b76dcacc,,Revert Remapping fixes for the lastest Turtlebot 3 models ,Reverts ros-planning/navigation2#338    Sorry. I forgot this wasn't supposed to go in yet. I saw the two approvals and merged.
ros-planning/navigation2,351,2018-11-21T17:28:32Z,2018-12-03T17:49:03Z,True,2018-12-03T17:49:03Z,155ea875ed70244df52a3452f79e1b65d9959a85,3,9,6d733917a05c1df5584d7f8e9391913cff2c2469 f0b6e0c434a70d038636b121911995078f0e9840 fa50741f1ad4ad018b109c5a2743d373368f3424 c4fff4fc68a4d298c281e45b2b8ff80e31920236 226f1cb503486ff399080505979c789352f988c4 f6e081d2d31798dcebac41cc4a56d039c1d0d7d2 f0f15f5b19d0b2d6a96e00b81e2136d10f22cba5 4a65d05ab0c59fe2a27ddd40022d372626ac37ec 01fa1b8bccdd5d58d257f8b903d8de216dd096b7,1 - High,Update nav2_bringup readme for robot,This updates the readme with instructions for testing on a robot
ros-planning/navigation2,358,2018-11-26T03:51:57Z,2018-11-27T18:27:32Z,True,2018-11-27T18:27:32Z,5da7f4be07721a8b3192d6cbcadd006264d78eef,1,1,cf68551ce0b738b383a4d2920170681fc3c1b731,,Add command to stop the robot to all DWB returns,## Description of contribution in a few bullet points    * The DWB controller will now stop the robot upon any return from the execution of the FollowPath command - success  failure  or cancelation. 
ros-planning/navigation2,240,2018-10-24T22:25:04Z,2018-10-30T21:35:41Z,False,none,785ae367fe20f1c16c08e19b45864db6aceb9078,10,1,644b8452b5aa7887db3e8868f29c1f05b34d3682,,Address issue 164 hardcoded endpoint tolerance in the simple navigator,Instead  the tolerance should be provided to the navigator(s) along with the goal pose. The intention being that the command would be: "navigate to this specified goal pose within this specified tolerance." This PR adds a new message  **PoseWithToleranceStamped**  to hold a pose with an associated tolerance. This is now used as the command message to NavigateToPose. I've also updated the command message to ComputePathToPose (**PathEndPoints**) to use this new message type.
ros-planning/navigation2,269,2018-10-30T23:08:53Z,2018-11-07T22:50:55Z,False,none,082a4a3189bb024e508e4a466f2cb2d5ad72cd50,7,4,60535f8def8658696efede33b612deecb88d14c6 56e35ebb7be351289da8fe39353ad837d1392147 726976fa24b4bc94b615b1babbcea6ec58e9e214 0cfe54e3eb3b7a72fdea20cef2373ea6a4146d77,1 - High,Move tolerance to param,Per the team discussion  move the tolerance value out of the PathEndPoints message to become a parameter of the global planners. Fixes #164. 
ros-planning/navigation2,362,2018-11-26T21:47:32Z,2018-11-28T15:46:08Z,True,2018-11-28T15:46:08Z,7b4963b1b58f14d7ecffbb68a8f2d6206960dfa8,16,10,b2e5eec6004a45e340c7ec026c26c85d41b87cf1 e964b82d9d50fce35b6d7163916502ec50ca6e24 c6ef5ec793ccc77070b31a85a9e1797269947d11 7987622c598bc3d6694b0a413177c54b7ae35c62 b1bbfc7c5911cfe8ab6e85e08c882dbedf9cde37 70b54662d6329a3b3a84bdceba75bc429fdab86f 232003b676c18bc7cc3a014374546a43ca3158df e2e695b10609312cc40abda138f466baa2f7535e 163f1c17475b3efadc52c4818f0a44cdb5589dd2 a7bcce32e18a397cb4b610b9eb6602450925a3a9,,Parallel planning and control,## Description of contribution in a few bullet points    * Run planning and control in parallel using the BtNavigator  * Read the BT XML from an external file to facilitate easy updates of the BT  * Introduce a parameter to the BtNavigator to specify the BT XML file to use    ## Future work that may be required in bullet points    * Add a BT XML file that implements recovery behaviors
ros-planning/navigation2,265,2018-10-30T17:36:17Z,2018-12-04T16:18:50Z,True,2018-12-04T16:18:50Z,397c573eae5fa80a000f6b8519e0c8a98bbb0594,27,24,52e95d448afe2e6b0c4b7f5fdcf3cc5820fad0be 2f09930dbe5dc94624359bf900c052a0309e8d90 f809a4de78450e7d890b702902e2179aafc31dc9 79751c609c941e33589daa71a76318e1044788fb e736e7bd0c339ca05552d152ee91bc5ba69cd501 3f3c9a8b514494f9928ef31a78fb1da54a1c3b2b 470acff03f40d39c8f416a4015df3aa194e96c70 e0c010c96fe4c5f6d76cf5957614b06ad9251356 083008e888b75e1f8aea1a2d7b7213d7c83a444a bfc6a15ef5b20c5bf20cc7e1121b1968342fa417 2214f691c58c9b70f3f9bb581cfb908c6e9cab2b 45f198bd450ceb3d7f4d0be7a4c210c70fe34f01 89b924ea7b6e13a4266704286b08cb6ee8f26c76 ba594925e953b754dab00d7a7c739d9d4791ec6a be4567659669facc50f4f7ed9adaba68f545d23f 63d85d84842eafed1592e8aff0b7fc310c83cb2c 1643e06ee95b0bacb9fcceb98975d97f6394b9fc f9dd8ff4c6a67ed42baed35f9bc3ab51f681ec84 a1c137f882bd7f63649b451f1ca97bdbe8692ef3 6fb7cd8e6c705874c2bb02f09f75bcf8caf3eda9 afc9461024022a342e5f7235458706b5f4a8ebe5 a3745690d398d9ab54600e7d4a222422e613a111 ed3886053d61d93b1dc2ab1f5be7009f56b9c280 341a3836890b7ab3c03cac0a530124204f11ddd6,1 - High,Map server params update and refactoring,A ROS2 node can be used standalone in its own executable or can composed with other nodes in the same executable. If we intend to make our nodes composable  the parameters should therefore come through the node's parameter interface. This PR modifies the map server to get the map YAML filename via a node parameter. In addition to the above changes  while working in the map server directory  I simplified some of the classes there. 
ros-planning/navigation2,408,2018-12-04T00:28:36Z,2018-12-04T22:28:29Z,True,2018-12-04T22:28:29Z,5050df27117477830652802af4a2f7c2c3d7012d,1,1,9443fd85d447cf6e54fe1a50e8c5106a21eca07e,,Ignore Eclipse project files and python artifacts,Updates the .gitignore file to ignore the Eclipse project files and Python artifacts files and cache.
ros-planning/navigation2,415,2018-12-05T18:29:41Z,2018-12-05T18:49:18Z,True,2018-12-05T18:49:18Z,a93c870f78fa1bd2012b48b3defe56e3ce7acb67,26,1,d0ca3195a40f16d979f3c4f979e27195348e1400,,bump versions,Hi  please approve ASAP so I can mess with bloom for Crystal 
ros-planning/navigation2,416,2018-12-05T18:57:47Z,2018-12-05T18:58:08Z,False,none,a1089437e0539d996b9f372006235250c269da63,1,1,d86e1fcaecff21a7faeed13ee676698ce65924b3,,To test build farm CI is off fromb bouncy DO NOT MERGE ,
ros-planning/navigation2,418,2018-12-05T19:06:33Z,2018-12-05T19:31:38Z,False,none,96bfb085bed7afe91e8f83bcfc433eac43667f27,1,3,1002b736428bd28562813c15c3d1640e041eae35 4813689885202f16de3cc7c7041bb0492fb14faa d424b8638e0f9f6627b437df6cc189f4ca73528f,,metapackage items to make bloom happy,Just need to make sure doesnt break anything in our local CI
ros-planning/navigation2,395,2018-11-30T22:13:40Z,2018-12-05T20:06:48Z,True,2018-12-05T20:06:48Z,093e385b17761a776868def4fb0de77436186a3d,6,1,d0b7ff62bf4f3c827bec603c54356f7c9082b2be,,List Get parameters from node instead of SyncParameterClient if using own node,  <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #352  |  | Primary OS tested on | Ubuntu 16.04 |    ---    ## Description of contribution  - Addresses potential issue of race condition in creating a SyncParameterClient inside of the DynamicParamsClient when adding a new parameter from its own node in the constructor  - reverts the `get_parameter` calls in the reconfigureCB() back to `get_event_param`    ## Future work  - Since the dynamic reconfigureCB() are now grabbing parameters from DynamicParamsClient again  they are sensitive to duplicate parameter names in the same namespace. This should be resolved by #394. Will also be resolved with closing of issue #337     
ros-planning/navigation2,398,2018-12-01T01:25:58Z,2018-12-05T20:07:24Z,True,2018-12-05T20:07:24Z,6044c2324864c1ae9d299df249180f092fbb8cc8,1,1,72f140163594197d0010224cf7911b719cde616e,,get namespace from node for get_event_param variant,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu 16.04 |      ---    ## Description of contribution  - The `get_event_param` call would assume the root namespace if not specified  which would lookup the incorrect parameter name in the internal parameter map for nodes with namespaces. This PR fixes this to grab the namespace of the member node if not specified otherwise in the function call    
ros-planning/navigation2,412,2018-12-05T01:52:24Z,2018-12-05T20:38:42Z,True,2018-12-05T20:38:42Z,03c1ecab67ab5927f4013bef959b6e14c6b6c640,5,1,b88e9402d3c4bf3e3fbb5f468bc6903d250ce3d3,,Fixing nav2_system_tests linter issues,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (HP Desktop) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    - Fixed nav2_system_tests linter issues
ros-planning/navigation2,357,2018-11-26T01:20:37Z,2018-12-05T22:24:08Z,True,2018-12-05T22:24:08Z,c00f83675ee4098ce1d697961739a0f906fbd61c,41,49,26d583f3204bbb3a3cb609cb5386dbdee46914af f69f837a39aac8b1477cccfc18feb2c3da56419b 87fcadb605a5bce26e7db1a5944e0f93871138b6 4ae67c8c5fc4f619a41f72bc9ae15a7974c87525 30db1753f5753b31205f8153b1afe249c73c1b39 25d19bf5ca2dbffea53c4063d1fd5d5839cef4dd 3096db77d4fb771f27a777377ccb453cac7cc910 91fd389f380d3731f9aa0c9daed310ca45d9debc 4c30bf92ffd2c706c0d792edb9f2e7f4d1be2c4d 0ae12deb4ae0a57d6e70efe6d9c110920f96ebb1 3757df076c16af67a6a43b8fd921380e7f70d50d ffcf99141cad9661774b488d9905586577ff4d5c 142124e586e91c26f3f6f9195d46d3f8a71bddfe 20730f1306456254accd3f5622f9466c8a35e359 1d49be3f8db62e4cda33829bd0fda14e18af4d03 3553235fb00f2313025a15e11b633c6904d01f72 10fe5e73d2415762a0da0542d30ea906be0208c3 60da0c4d1c30ad5d858fdd561932f0d9ece2bea9 9f1157a380e3462aba2f911c13dfe84f404e54a8 2688fbe1d1415861f7c443b2238ce28734efe5b3 e83e4f49a7fb0f820ab55627320bd4e820659211 62771bc567010f12be4fcd6be870c69d0b99b049 f13d3241aef42a213311b0e9f0ef2eabca351c90 84e90fbf18c58872e64891d263af3e9a0d85ab98 9cdb93930eaed501ce029a212284eef497e52600 c7cb673206b6a622fcde379d0f5d128236060652 fbb8561761c2e5f90113e7b90811b31e6b8c5db2 ac09f3835031dd1761287a5cefa26c7d1b1852e7 b54da7232893f7a2b73fd21f0b9f2b075b31be79 7e62e0a61f33ea2520b1623697cfe0650e7253b4 f44f15d1b08640b0cbfe226450c0b11e78cd103f 5ad9597013f9f80e288babdd34734dce778141df 5b3fce1c097be5ff99925880ecd148b3689046ab b5da34979ae732601eb0a1a59eac93c33919d40f b469083c361defa2d7d828571c2426aa458d4852 db7e158e3fad8e5b4ad0721b7b3ce64ad1fb0431 783452af19394faea6ec4485804ae855365df3d3 77daa81aa58e3e205e9a21d8eb0c60c5fd9d2b38 a70cf2d46b975d5bcda59f52ef4ac072df3c07fd 63b30b282ffcae8f946b5a327595dc00a492ec66 075a2ebf26b8e3ee876277103494b7c1679169cd 23595d4ce660c7c65012c4fba7edafcdecd6d070 1c8326c9f17239a0db35292b1586b7630690060a 414886390e1d3f8398c31ee2f548aedf423efb8e 1c5f6719ac02b3d436c375dc80870ad30aa137e8 b1c0e686deb34602f6c0817ff2fe68733592d51d 38391dd8f1dde040b906bd0d73791ba2f5a9741e 86b9cd55210c0375f185718edf177d3f22146de6 b9dd484c5f120d244221781aec0a70a24f3f5cc9,,Recovery behaviors,## Basic Info  | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #49 |  | Primary OS tested on | Ubuntu 16.04 |  | Primary platform tested on | Gazebo simulation of turtlebot |  ---   ## Description of contribution in a few bullet points  Developed an example of how to implement recovery behaviors on the behavior tree based navigator (`bt_navigator`).  * Extended the navigation behavior tree to detect if the robot is stuck and take corrrective actions before pursuing further navigation.   * Implemented a simple algorithm for detecting if the robot is stuck. Created the corresponding `is_stuck` condition behavior tree node.  * Created `stop`  `back_up` and `spin` action nodes and defined the corresponding `task_client`s and `task_server`s.  * Defined a `nav2_motion_primitives` node to host the `task_server`s for multiple basic motions.   * Defined a `motion_primitive` base class and implemented the stop  spin  and backup primitives.  * Implemented a dummy planner and controller for testing.  ---   ## Future work that may be required in bullet point    * We might want to have the `nav2_motion_primitives` not as a separate package/node but part of the robot.  * Multiple improvements are suggested (see `TODO`s) for the algorithms used for detecting if the robot is stuck  for spinning and backing up.    Created the following issues to track future work: #378  #379  #380  #381  #382   #383  #384 
ros-planning/navigation2,309,2018-11-09T23:36:57Z,2018-11-12T22:24:42Z,True,2018-11-12T22:24:42Z,2727cae4d758d7bb5ff8585ee6a209c7c824732d,2,1,57d457aa876d4db6b8ec5e2da2703ff3fe214727,,Porting config file to rviz2,## Basic Info  Ticket(s) this addresses #308     ---     ## Description of contribution in a few bullet points  * Generated a new config file for correct visualization of messages currently supported by nav2.
ros-planning/navigation2,228,2018-10-22T23:53:40Z,2018-10-25T21:02:13Z,True,2018-10-25T21:02:13Z,e2db9348973d06ef5a604eac0a18ee7d766943aa,5,1,e2db9348973d06ef5a604eac0a18ee7d766943aa,,Build using the tip of master,Here are a few changes needed to build using the latest ROS2 code.
ros-planning/navigation2,232,2018-10-24T00:19:07Z,2018-10-24T23:58:45Z,True,2018-10-24T23:58:45Z,25cc3a79e41edaaf4e6d7a8ba99f30003146bc59,1,1,fcb91a193b86b61b07284127be70d54519cc36ac,,Addressing lint error,Line too long
ros-planning/navigation2,410,2018-12-04T17:12:03Z,2018-12-05T21:26:08Z,True,2018-12-05T21:26:08Z,10e7d111efd383c12df95be57056e2c6b563080d,2,2,85b25b51be5e88331973224785faa70ab9c8ea3f bcc857fdc641d512ac10dda932a5060f3d1e5fa5,,Update the first of the split launch scripts,The map server now takes YAML filename via node parameter. I missed this new file on my previous map server PR. Also  the map type should be optional and default to "occupancy." 
ros-planning/navigation2,419,2018-12-05T19:14:03Z,2018-12-06T00:16:57Z,True,2018-12-06T00:16:57Z,922e1143421b5220d5190fb12a06e5c9004c3d88,1,1,35cc163f9747b2f7a5c1909035caa3e63633f2da,,Don t use metapackage since it is not recommended in ROS2,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #334 |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (N/A) |    ---    ## Description of contribution in a few bullet points    Fix the warning below.  The discussion [https://github.com/ros2/ros2/issues/408](https://github.com/ros2/ros2/issues/408) describes the recommended way for fixing it in ROS2.   ```  WARNING: Metapackage "navigation2" must buildtool_depend on catkin.  WARNING: Metapackage "navigation2" should not have other dependencies besides a buildtool_depend on catkin and run_depends.  ```  Note that this is just a warning  so techically it is not a failing issue  but it helps keep the output clean.  
ros-planning/navigation2,430,2018-12-05T23:49:11Z,2018-12-06T01:42:03Z,True,2018-12-06T01:42:03Z,8e2100f7a301d2ff436cafe7a94c2a08411cd7e8,1,1,9366255421ba3026140774047cc93c6edebba1f7,,Ignoring pedantic to fix compilation error,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (NA) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (HP Desktop) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---  Master fails to compile due to ```tf2/impl/utils.h:114:2: error: extra ‘;’ [-Werror=pedantic]   };```
ros-planning/navigation2,420,2018-12-05T20:17:47Z,2018-12-06T17:27:39Z,True,2018-12-06T17:27:38Z,bd12f5b3b8f5db8fa2ce365a53d0aefe73a3426f,2,1,128fb3d6a18b921b9c4f9caf8055210d98856436,,Fix colcon test issues for some more packages,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #334 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | N/A |    ---    ## Description of contribution in a few bullet points    * Fix `colcon test` issues for the following packages:    - dwb_controller    - dwb_core    - nav2_util
ros-planning/navigation2,438,2018-12-06T23:27:27Z,2018-12-06T23:59:31Z,True,2018-12-06T23:59:31Z,9b8561ff0a79bdeef783fa5a791bca3eadf8269f,27,1,030d4cd83f3cf07dfa96088698afb6425c7ecf25,,bumping tags to 0 1 2,
ros-planning/navigation2,435,2018-12-06T19:22:26Z,2018-12-07T17:18:17Z,True,2018-12-07T17:18:17Z,4a1a094ca6f87b167358171ea467c4cd86ebec82,3,1,18ff9dfc5247d38d8a31bbc1ec71199ad1fc80d1,1 - High,Fixing linter issues on nav2_navfn_planner,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #334 |  | Primary OS tested on | Ubuntu 16.04 |    ---    ## Description of contribution in a few bullet points    * Fixing uncrustify failure.  * Copyright format had to be modified to pass linter. More on this [here](https://github.com/ament/ament_lint/issues/72).
ros-planning/navigation2,428,2018-12-05T23:07:47Z,2018-12-06T01:05:24Z,True,2018-12-06T01:05:24Z,f3c89ecd92a62f2c984b6732923e1c8e423e3e74,2,1,a0ba9397eea6e57ba31f173f5fdc34481de3baa1,,Committed some files by error,Some files where not supposed to be included on previous Recovery Behaviors PR.
ros-planning/navigation2,422,2018-12-05T20:43:20Z,2018-12-07T22:52:29Z,True,2018-12-07T22:52:29Z,38bbf4efa330414cd87b3ccf4afd96b47a51156c,3,2,371ea6c9d4e110d125ee38cfd20e0d0e820ba785 3162a457cfeb4e587622b4b20e297b60e48f5a2c,,Amcl enable msg filter,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (#339 ) |  | Primary OS tested on | (Ubuntu 18/04) |  | Robotic platform tested on | (HP Desktop) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    - Re-enabling message filter in AMCL and removing all the workarounds.
ros-planning/navigation2,449,2018-12-08T00:03:27Z,2018-12-08T00:33:51Z,True,2018-12-08T00:33:51Z,2bf8059280c23a59a0d453a2f939a2f536a94ee3,2,1,321c252ab0d8e4f0f230af649345ed781ad6198a,,fixed linter issues,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (NA) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (HP Desktop) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---  Fixed AMCL linter issue.
ros-planning/navigation2,368,2018-11-27T18:52:03Z,2018-12-08T01:01:03Z,True,2018-12-08T01:01:03Z,8005318f7cd1ff639ed395a03908a3df436b07bf,20,24,9c4608eb756bf8c7e0754910fc1807395c4d77a5 e3a3cf351b79b2c794e2696de0f7cdbbad6ac7ab f96b4310804d0005bc16eee957c47ae8f62cb912 57e29c42600abb119c41767974a999932cea1a7e 894f5653ff46cda81e623af2122a054b4bdf9cc2 ba10236fe009a724e02b0d3f2e19889e94a9aecc 1aa3757ef5d8f8ecd129b66134ea197285adb61d dcf2ddc683aa28dcd1f66816a88298efdaf4f3de 242ad1d532982ecdbed8a042b9f5df2757b98a40 1a2036e48fe018907b1e1be5ab0b2891e3414b35 dae0b9695552fb2185e8352c57b1382990c150b0 be430f448c57175ab2b9264e826e419fce15b6c2 fddb556d4655a4368efaa1220e05ca4c9f8d9ce0 317d6fd3229ad20b6f739f1add72d72757a5f9a9 0fe4177306382a2b7a4ffc8df77a65a2db2c74a4 6d1728024198fc158c1a0981176a3ed08c257145 d271876ab83f3d6aaf0e098cd598ab18c09ea854 bc5f7ce9f7611e8a61cbf479e0e956c2959b9712 b51bd4bd699a0c07477dfe24e3d8f6369d137a19 ebdabde5cfd08cf11d907787befe421a3f6ce36b 8cf1f344a9416074c4ba0e0c9ceb26e23aeef4e4 8cbbb52aaab5b485700eaeeb2a871a0733621c1d 73ac96e680e02f56442b85b7e64c2a9e57ada5ec 621338b0822d8767e82031a10743dd0b438107d0,1 - High,Add top level system test,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | N/A ||  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Runs using Gazebo |    ---    ## Description of contribution in a few bullet points  * Adds system test which launches Gazebo server with turtlebot3 world plus entire stack  * Sets use_sim_time for transforms and map server  * Sends an initial pose and waits for a pose returned from /amcl_pose  * Sends a goal pose and monitors for 30seconds  * If goal is reached within 0.5 meters  test PASSES  * If goal isn't reached it will retry one time    ---    ## Future work that may be required in bullet points  * ~~Currently still WIP~~ due to instability of the bring up  sometimes it passes  others it doesn't.   * ~~Not totally tested within colcon test yet~~  * ~~Will resolve those issues before turning on in colcon~~  * ~~Pushed here for other tests (ie. AMCL) to use as a reference / starting point~~  * Change travis.yaml to run the test automatically (future PR)  * Add a bt_navigator test (future PR)  
ros-planning/navigation2,448,2018-12-07T23:54:44Z,2018-12-08T01:09:39Z,True,2018-12-08T01:09:39Z,8428c2e283d4c250ca5269dba211571ccbb478e8,5,1,36ad420a28a220e7bdd20cfeefd08fba83ba960a,,Change occ_grid topic to map for ROS compatibility,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #197 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | simulation|    ---    ## Description of contribution in a few bullet points  Changes `/occ_grid` topic to `/map` to be consistent with ROS Navigation.    
ros-planning/navigation2,452,2018-12-08T01:35:02Z,2018-12-08T01:53:28Z,True,2018-12-08T01:53:28Z,e55071271f7b03d86ba22fccf01a7b5c16c66069,1,1,cf4de37b54ce189a6e6532441f4d3cab98e87618,,Remove static tf publishers from bringup launch file,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info  Removes the static transform publishers from the nav2_bringup_launch.py file.    These were a work-around since we didn't have a fully working tf tree. We now have one available (turtlebot3) and documented as an example in the bringup README.     We've already removed this from the "bringup_1st" launch file also  so this was an oversight.        
ros-planning/navigation2,414,2018-12-05T08:20:10Z,2018-12-08T08:45:19Z,True,2018-12-08T08:45:19Z,2816b0c9fa6f0c43d25e43adf8e2ccbe94fa63bd,43,4,ca861e32ed3c112c071ca138a9f603920f19f93e fced1ac0bdd710bff27072c2613790a9d095623e 830367e3e80ae51e78821c5b600b11f417899f40 ea1b13a14ebed95803047f74071eefd89daaf1df,,Fix linter errors in nav2_costmap_2d,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #396  |  | Primary OS tested on | Ubuntu 16.04 |    ---    ## Description of contribution  - fixed linter errors and uncrustify   - disabled copyright check and cpplint (was getting error due to no copyright in two files)    ## Future work that may be required  - resolve no copyright in two files (testing_helper.hpp & costmap_layer.cpp)  
ros-planning/navigation2,458,2018-12-09T00:38:40Z,2018-12-10T17:32:05Z,True,2018-12-10T17:32:05Z,4589b6f378c7702593c768edcf4a02c751179d31,47,17,22faf5862ac59a4320803f584fd63de5823e6e8e 629e34e80594bcbd359083ada3dc566164152312 8cc6ee52e21c0c0ec7f125ed5c723474b4f95a8b eca959fe04da26d713f8218508bd929ea99c0cea 94801ac06ad0348693cc4e52ea0f803b40e7cec4 ac8f8221c3750a4c99a336d0c1c30518daa5de0a d0994d3dee6fbef061c83c17e68053fbf6be2640 b84c7bbed2f31e07af8ff9821e9c18f9d2b204ac fec61efe2aa96ca08cee444d7b4c11fa917cbaa5 72790a03004ce5faa522c77cf91fa355b2df5e4e ab70f88d9a7f6264bc8692614de7ecb3315e66a0 39e465179a2c7e139f12bc4bc09ef1ddd4dd06e8 13ffee5dfe078c8e9e04ad99276cf4f8c0a89116 b89dbd21e72bc0a2d2e063de7aaa734dfdf15720 9c79e7c512db55d3f3cc175de7237e99d9e48c48 fedb1a1c656809d4c3e663be3a3d36d3a91a8ce0 38450aecef6574a5a1507da0e9a59c43b5798755,0 - Critical,Getting Build Farm CI on track,- adding missing rosdeps to package xmls  - dealing with failing costmap tests  - fixing tests in map server  - throttling while loops that dont need to be running at 100% core speed    @mkhansen-intel @mjeronimo @orduno @mhpanah @crdelsey  its super super important that anytime you add a find_package that is a rosdep key and not in the repo  you need to add it to the package.xml under the rosdep key name  for now the travis build system is set up and not isolated  this will not be testable in this repo but will create nightmares for me to release debians (and anger the kind folks at OSRF). I'm going to go right now through every file in every package to get them all in  but in the future its important for isolation builds the way the debians are generated  
ros-planning/navigation2,444,2018-12-07T21:37:55Z,2018-12-08T03:04:04Z,True,2018-12-08T03:04:04Z,89ac302a73897c7b0ace4230042933d81bf6e4f1,1,1,a5976e446dc68b3f2f2d5feb2db1246e0eb210b2,,Remove bt_conversions work around now fixed ,## Description of contribution in a few bullet points    Previously  the BT Library required (incorrectly) that any item used on the blackboard must also have a function for reading it from a string. This should have only been required for items that were used as parameters (not items on the blackboard). Davide has fixed this and the fix is present in the ros2 branch of the library that we're using  rendering this code unnecessary.  
ros-planning/navigation2,437,2018-12-06T21:08:04Z,2018-12-06T23:41:09Z,True,2018-12-06T23:41:09Z,e21cbd2ac082962e8d7541b1f4ae4f610f209503,1,1,86a73dcd3e80e7120201b63f343b88be847bbbaf,,Use new ros2 branch of the BehaviorTree CPP library,## Description of contribution in a few bullet points    * Use the newly-created 'ros2' branch of the BehaviorTree.CPP library
ros-planning/navigation2,409,2018-12-04T01:15:35Z,2018-12-07T02:26:36Z,True,2018-12-07T02:26:36Z,67be9d98f96902a485294167526c89556b8a740e,25,4,4f282cbc8812c9e98d97bae99ad6fd795b3c597d c39622eb5ac4b234dc598188657d901a2de64a07 79ce6b01c70b604834e49508d4cb9199ad44491b 68e40b9760a9e8f263be8db50cb25f7804c05a9d,,Enable DWB to receive path updates,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #164  #362  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo |    ---    ## Description of contribution in a few bullet points    * Enables DWB to receive path updates which are sent when running the global planner in parallel with the local planner/controller  * Moves the retrieavl of the current robot pose from NavigateToPose to ComputePathToPose. This is required to do dynamic path updates.     ## Future work that may be required in bullet points    * Could update DWB to ignore path updates when it is close to the goal
ros-planning/navigation2,350,2018-11-21T17:25:51Z,2018-12-05T16:00:10Z,True,2018-12-05T16:00:10Z,b797a3d89b5abe23cdc0f4a7de3308a8f66bb22e,12,5,9eec6fd1a78352eded9f3191d56afb51d46c8b60 699d68ad7bdb50672416ade7a51d79efcca5fccc 93507bc748835c267c221173fd59ad7321e77b6c d55304325478fcc97daa0c62ccb490eb1b26a8f3 3fae1845d4626482911e5d954a84d14da2e19150,,Update behavior tree cpp,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | None |  | Primary OS tested on | Ubuntu 18.04 |  | Primary platform tested on | NUC  HP Envy |    ---     ## Description of contribution in a few bullet points    * Update the BehaviorTree.CPP library to the latest version. This version fixes a few issues      - M_PI macro undefined on Ubuntu 18.04      - New ParallelNode constructor added so that it can be registered with the bt_factory       - ParallelNode is registered in the library so that it can be used in XML  ---     ## Future work that may be required in bullet points    * What remains is to provide a PR to the BehaviorTree repo for the colcon-enabled CMakeLists.txt  * Work with @SteveMacenski to understand how we can incorporate this library into our official build     
ros-planning/navigation2,467,2018-12-10T18:38:46Z,2018-12-10T20:07:23Z,True,2018-12-10T20:07:23Z,9f10eb29f03a5718136ec98902121818d04ed059,1,3,e9364c1fd641abd5f5ab47759dca49edec748e68 54612d5b1a59869cc4c2a336534c19430f9442e2 60cc091d1ca1f8b186ab81c9cf67563337ac52dc,,Pr builder tag,
ros-planning/navigation2,456,2018-12-08T07:16:05Z,2018-12-10T20:08:08Z,True,2018-12-10T20:08:08Z,4cd0968465f230b062a9a8dc2419817d9ae2f37e,2,2,4ee9967ca8fc14689b1d75d189db16b525948e06 61849fbc2233c652067879f4420f15680afdfc8c,,Enable obstacle_layer marking clearing observations,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Turtlebot3 Gazebo |    ---    ## Description of contribution in a few bullet points  - sets default for observation_layer sensor marking observations to True  - adds clearing observation parameter set to True for scan sensor  - fixes `raytrace_range` assignment bug/error  - with above changes  obstacles can be detected and cleared in real time   ---    ## Future work that may be required in bullet points  - Though obstacles were detected  sometimes the local planner failed to find a valid path even though global planner would create a valid path. Should further test to see why this would be the case given a valid costmap.  
ros-planning/navigation2,462,2018-12-09T18:10:26Z,2018-12-10T20:26:49Z,True,2018-12-10T20:26:49Z,2de31d72993199dcec895cfc68eb22bd32d10963,3,13,cf45c7f18beb848e407ffec91a59cdcd6404fda8 cbae7241d79fa393255d2ed60c9b13fa65b399c1 bae4e7d2dacb83995532bc67a4cfebc6749cc72b 89446a3f5bc8ee85b6e4d4f65f9be0c2bc0d012f 43a90a881776777fc40be8528cc90da548193456 d00f1dcb2354ca3748bd9b8cf8f0be7a5a86fe4b fa7a0c8cd0a44481ab7009187d529942970dfafc 8e7ba8b53e8feb1e76b7b6376738b3b9d2268b18 7de13b02b5809269e23713d6faef47997a767c79 a79061985020ea10867a75c78178ed526c47e555 7b78b734ec0a6ae325411c6358c81e34e37f8bfe 1a525543bd075d32cbf20dc5505b710f1988bacd 4133a4c0ed57d6f31e8c0c04975fe30d797d490c,,Port map_saver,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #188 - Port Map Saver|  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | N/A |    ---    ## Description of contribution in a few bullet points  Straight port of map_saver from ros/navigation    ---    ## Future work that may be required in bullet points   * Refactor out map_generator into map_generator.cpp   * Add library map_saver_core in CMakelists.txt   * Refactor code (too many nested if..else if..else statements   * Fix writing of thresholds to file (currently hard-coded)  this is an existing bug  
ros-planning/navigation2,472,2018-12-10T22:05:09Z,2018-12-10T22:11:37Z,True,2018-12-10T22:11:37Z,7f612e415ddc7f3b4c5e98de6471592cafea6b01,27,2,80babd703aa741b267643f0a87a74871665f1cfd 1c845b9761a2ccb569c5467d31811acbe6310f9a,,Bump 013,
ros-planning/navigation2,475,2018-12-11T17:16:45Z,2018-12-11T18:10:31Z,True,2018-12-11T18:10:31Z,809cf5a818f3744e00c78c33dbe860e7aa51a631,3,2,d9441a387eab222f609cf204017fe907aa68635d c490e3b4d4686f2583e4157d21cda5358a69df6b,0 - Critical,Fix Travis build remove gazebo_ros_pkgs dependency,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info  Removes gazebo_ros_pkgs from the dependencies for nav2_system_tests. They should still build fine but won't run without those packages installed. This should hopefully fix the build and we can find another solution later.
ros-planning/navigation2,474,2018-12-11T13:25:45Z,2018-12-11T19:10:37Z,True,2018-12-11T19:10:37Z,6560adb5b583b61ad0ad518b0ad8677bf7741672,2,2,a4938a93a0ef449ca7391272c0472b2bece51b31 b7496e8a9a2456aaa5313f7de10b9ec3ce41a14f,,Update dependencies exported by nav2_tasks ,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | Failing package builds on build.ros2.org |  | Primary OS tested on | Ubuntu Bionic |  | Robotic platform tested on | none |    ---    ## Description of contribution in a few bullet points    This change attempts to address build failures of packages which depend on nav2_tasks.  The nav2_tasks CMake currently exports dependencies that are not declared as `build_export_depend` in its package.xml. I'm not familiar with the nav2_tasks package but a cursory inspection suggests it doesn't need to be exporting these dependencies.    Exporting dependencies is not required in all situations.  The documentation escapes me right now but exporting dependencies is  used for:    * Dependencies whose C/C++ types will be present in your package's    * Dependencies whose interfaces will be encountered by your package's    dependents.    * Build dependencies of code generated by your package which will be    built during a downstream package's build.    I removed this export because I couldn't see at a glance any of the above cases for any dependency of nav2_tasks. But the final decision is best left to the maintainers. Any packages that do need to be exported need an accompanying `build_export_depend` in the package.xml manifest.    ---    ## Future work that may be required in bullet points    * Examine the package more closely to determine if any of the dependencies _should_ be exported and update both CMakeLists.txt and package.xml to support that.    ---  
ros-planning/navigation2,478,2018-12-11T22:09:55Z,2018-12-11T23:12:17Z,True,2018-12-11T23:12:17Z,6c3a2e0556dc59d01bcd22f8c5579bf79e195a79,2,3,eb90102dd687e257578dd4f7056eacc80659285d b86f549220849b9045ffb653eb83579516cdb507 e80231b6e05c3c2e8780c26aa9be9eb0a9dedc7b,2 - Medium,Remove unneeded depends from nav2_bringup,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #477 Update Exported Dependencies|  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | NA - made sure the launch files are still installed and working |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---  Removes extra dependencies from nav2_bringup CMakeLists and package.xml    
ros-planning/navigation2,480,2018-12-12T00:09:11Z,2018-12-12T00:15:31Z,True,2018-12-12T00:15:31Z,d876e786eeb02721de9b70bf7bc7f6bfeb0b78b4,27,1,26084ab19f9dcf454fd80a749724d638575e803e,,bump 0 1 4,
ros-planning/navigation2,481,2018-12-12T04:17:24Z,2018-12-12T17:49:41Z,True,2018-12-12T17:49:41Z,44e328efa570e20f90a7bb9b445fad448c39585a,1,2,239a407ea2e09385bba93b04a901f6d482c43d45 c43ad8262079ebd824dc2ba9f689e8925073d43d,,Fix motion primitives CI fail,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info  Attempting to fix the build farm CI in #473   
ros-planning/navigation2,487,2018-12-13T01:41:41Z,2018-12-13T01:51:28Z,True,2018-12-13T01:51:28Z,11672fc8f62ffd8d5a2ec7bfbf4e44a405da4937,27,1,660555e29cf4a8ad12bc8c2f2e339ad7decedb6d,,I hear 4th time s the charm ,
ros-planning/navigation2,465,2018-12-10T04:39:41Z,2018-12-13T19:53:05Z,True,2018-12-13T19:53:05Z,64377275f406cf7a8906b64ccfa878144238bf27,4,3,6fcd3d97ec7c9003f28315c0c5266bf4914db799 b8e98f040a9759cb812e2c99eca7d92c98322f93 19700eddc423c4f432b660a37ab61a2d997d9aae,2 - Medium,Refactor map saver,  ## Description of contribution in a few bullet points  Follow on PR to #462 - Port Map Saver  Refactors the MapGenerator class out of map_saver.cpp into map_generator.cpp    ## Future work that may be required in bullet points  There's still a bug to fix where the wrong values for occupied threshold and free threshold are written to the yaml file - that will have to be a separate PR - I'll file an issue for it
ros-planning/navigation2,455,2018-12-08T03:20:21Z,2018-12-09T00:29:31Z,True,2018-12-09T00:29:31Z,bee4beda6f3d10204dcf57b5bbc76ae846aaf511,6,3,f92d98ea62fc6ca2161cbad28c8137f843cdd6d8 1d2b65d1725ec8e89b86a7cccc1f1e7a0214be36 63c00e0d10285e918344a597b0c190ce29212020,,Add dependencies based on package build failures ,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | Packaging failures on build.ros2.org |  | Primary OS tested on | none |  | Robotic platform tested on | none |    ---    ## Description of contribution in a few bullet points    * Added some dependencies based on cursory CMakeLists.txt examination and failing builds on build.ros2.org    * http://build.ros2.org/job/Cbin_uB64__nav2_map_server__ubuntu_bionic_amd64__binary/4/    * http://build.ros2.org/job/Cbin_uB64__nav2_robot__ubuntu_bionic_amd64__binary/4/    * http://build.ros2.org/job/Cbin_uB64__nav2_tasks__ubuntu_bionic_amd64__binary/4/    * http://build.ros2.org/job/Cbin_uB64__nav2_util__ubuntu_bionic_amd64__binary/4/    * http://build.ros2.org/job/Cbin_uB64__nav2_dynamic_params__ubuntu_bionic_amd64__binary/3/    ---    ## Future work that may be required in bullet points    * Review dependencies for these and other packages and make sure they're referenced in each appropriate package.xml  ---    It appears that there are some packages required in CMakeLists.txt that  aren't declared in package.xml manifests.    I haven't tested these changes at all and they are based on an extremely  cursory glance at failed builds on build.ros2.org and the CMakeLists.txt of packages whose binary jobs are currently failing so I would suggest at least a moderately scrupulous review.    I used my ownership powers on ros-planning somewhat dubiously to push a branch directly to this repository to make it as straightforward as possible for a package maintainer to pick up where I left off. 
ros-planning/navigation2,454,2018-12-08T02:35:16Z,2018-12-14T23:51:09Z,True,2018-12-14T23:51:09Z,8ef9841a4609b3190384c155f3f8a7a9bb8f2a59,6,3,ea83ab19707f736c6aa21d0f830b3017f0cb511e 638980162f28c7f4af177afbeea9eb7328126edb ee74052399c215e46b28f40699adf2273e447f2d,nav2_system_tests@2 - Medium,Enabling global planner tester,Global Planner tests now pass `colcon test`.
ros-planning/navigation2,464,2018-12-10T01:35:33Z,2018-12-17T22:02:58Z,True,2018-12-17T22:02:58Z,766e12d6ccc221f75065bca86e8f85acf1438b71,3,4,b143e16ce808498b945557f426437a5158f024e1 97090ef85adc35111c8ab2ca1130b417c45b8749 b7d9760d0703eaaa9218f5f821854614beaf445f 084098dbc70cf6a89817c302be6ea8a9f4d94b30,,Resolve full node path for parameter events,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #337  |  | Primary OS tested on | Ubuntu 18.04 |  ---    ## Description of contribution  - Since the update to parameter events now containing full path to node inside the event message  this PR updates the `DynamicParamsClient` to add and resolve the full path of the parameter by node path.  - Now  duplicate parameters may exist across different nodes in any namespace without conflict when receiving a parameter event  - This also fixes an apparent bug from a recent PR where getting parameters from the node (as opposed to the parameter client) does not return a PARAMETER_NOT_SET value for parameters that have yet to be set on the node  but skips it entirely when adding to internal map. Since we want to track all parameters added through `add_parameters()`  this PR adds all parameters into internal map first before setting initial values (if set).  - Updates examples to reflect new changes     ## Future work that may be required  - With this PR  the global and local costmap namespaces added in #394 should not be necessary in order to launch more than one costmap node  so we should consider whether to revert this change  - Update README.md  - Add/rewrite examples as tests      
ros-planning/navigation2,471,2018-12-10T19:11:43Z,2018-12-18T17:58:57Z,True,2018-12-18T17:58:57Z,e5607a501ee5cfa01536736b25e5714c362842c5,4,2,f45cb4de812b8abb9c3cfe03ba7c1d05ffac6f9c 5cba348c538abd4c7eecf1f7f8672f3e18006dc1,2 - Medium,Renaming getCurrentVelocity and getCurrentPose to address 163,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (#163) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (HP Desktop) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  Addressing first TODO items of issue #163.    - Renamed `getCurrentVelocity` to `getOdometry` which contains both odometry pose and twist.  - Renamed `getCurrentPose` to `getGlobalLocalizerPose`.  This way we know this is the estimated pose from the localizer and not the odometry.    ---  ## Future work that may be required in bullet points  - Do the remaining of the TODO's.  
ros-planning/navigation2,504,2018-12-19T00:39:06Z,2018-12-20T23:04:09Z,True,2018-12-20T23:04:09Z,0124bc010f55c6af83e18d055d9f9445ed28559b,13,8,8a8bbbd5352126a75d43e656781571d657b1a4d2 96eefb9a8de655cdc38a5adec4fb1fab522c663b e95b56bec960f722b4806348080734978d060513 2d84a97f328a6e6ba009148749a1ea59dd3256ab 3152318d07baff3ae8d13f72b5398c6c664f3fdc 2ddc5da2407a338f0ee7d118aff1df46693eca38 4ccdad20079f7635084eaa38e994f672514cf09c e5134e40be4ba5d5139ac82db67ba69807a2a690,1 - High,Amcl auto localization,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #503  |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | gazebo simulation with turtlebot |    ---    ## Description of contribution in a few bullet points  Note: I will fix the CI failure before merge.     - Implemented Simple AutoLocalization with BT for differential type robots.    - Figure below shows the AutoLocalization BT branch.    ![auto_localization](https://user-images.githubusercontent.com/39755151/50244918-f8ba3f80-0385-11e9-85ac-689c52428521.png)    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    - Expand it to other type of robots    - Currently the spin and back_up motion primitives are time based. Will need to modify the tree once the motion primitives support distance and angle.  ---    
ros-planning/navigation2,488,2018-12-13T17:35:55Z,2018-12-13T21:33:14Z,True,2018-12-13T21:33:14Z,c55cc6eb8598bf83d2a64a838196b980ff4013a4,1,1,2fc70d469f469a38759b60f1e718b72679f23a01,,Inflate obstacles by default ,It seems the Costmap plugins run in order  so if you want the obstacles to  be inflated  then obstacle needs to come before inflation in the  list.    This changes the default ordering for that to happen  because that  seems to be the preferred default behavior    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |   |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TB3 in Gazebo |    
ros-planning/navigation2,485,2018-12-12T23:03:22Z,2018-12-14T19:50:39Z,True,2018-12-14T19:50:39Z,de86d4a55eb43935c198fd1e06cba6169c33ea95,1,1,66b6f102f988e1f3387d080d47285da33bdac840,,Cleaner way to disable unused param warning ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  NA  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Since originally writing these pragmas  I've learned a better way of disabling the unused parameter warning from @orduno This change just cleans up the code a smidge.  
ros-planning/navigation2,479,2018-12-11T23:33:34Z,2018-12-12T00:09:32Z,True,2018-12-12T00:09:32Z,f5b4f77c9330248bb8aace16d5f1c9d29b61c840,1,3,781e797bd8708b8b11c1f588215d2efcc0918591 ab2621a8c88ac4079070662f5bf1b50c03524c60 eb6b99df0e3bef59387c99120ae67e87fea53aff,,Adding missing packages to metapackage,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA  |    ---    ## Description of contribution in a few bullet points    * We were missing a couple of new packages in the metapackage. I've added those. They should be there for the release.  * I removed the system test package  because that doesn't seem like something we want getting installed by default with the nav stack.  * removed incorrect maintainer email address.    ---
ros-planning/navigation2,476,2018-12-11T18:18:22Z,2018-12-11T22:31:19Z,True,2018-12-11T22:31:19Z,df922c6f20cb4d9b877ee293efb14408d0dfd9da,3,2,071615b9c094fba09a2b80a75ec974ab13699d49 c11c3889a5ef443e354f196aec6441073ee9d8a7,1 - High,Removing obsolete message generation ,VoxelGrid is part of the nav2_msgs package. Doesn't need to be in  costmap_2d.    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #473  |  | Primary OS tested on | Ubuntu|  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * I tried to reproduce #473 by building everything in one big workspace.  * PR #474 failed for me due to a missing TF dependency that was apparently exported by nav2_tasks  * For removing the idl exports from nav2_tasks and nav2_costmap_2d fixed the problem.  * Costmap was exporting the VoxelGrid message but that was already part of nav2_msgs.
ros-planning/navigation2,489,2018-12-13T18:38:18Z,2018-12-17T18:50:28Z,True,2018-12-17T18:50:28Z,28c2ff07c8409802fcb5378532df641f0bdd08d3,1,1,ddb987cca87f952b6e717ccd51644f1f82efbd3d,,More tests are passing Enabling them in Travis ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Docker |    ---    ## Description of contribution in a few bullet points    Enabled tests for:  * nav2_dynamic_params  * nav2_map_server  * nav2_navfn_planner  * nav2_robot  * nav2_system_tests    I think system_tests is only passing because everything is commented out  but it's still worth enabling IMHO.  
ros-planning/navigation2,27,2018-08-17T20:40:44Z,2018-08-23T16:49:22Z,True,2018-08-23T16:49:22Z,bb02297b2a9404892b27db87721b8bb7760f7d19,14,2,21b352749de42d7e1e5e6ee6615e0d6db1304335 86b478637736ae8b5692e5cb8fe52408a08cf803,,Cleaning up build exports and imports ,I turned task and robot into actual packages that export their header files so that the other packages could pick them up without needing explicit paths. This seems to be more like the ros2 standard.    The rest is just cleanup to remove unnecessary statements given the new packages.
ros-planning/navigation2,29,2018-08-23T21:00:48Z,2018-09-07T23:08:18Z,True,2018-09-07T23:08:18Z,b2d780a9a573ad4150346726e18bcdb09a0e9f5d,26,2,dda83684dbd40908704db02b0a73a411bebcf53c 2c0b5f27761841d717a32c0e935026f7e803c45b,,Simplifying CMakelists to use the standard test suite ,There is a an existing set of ament packages that perform all the standard tests (eg uncrustify  cppcheck  etc) automatically.    Updating the code to use this new version.    I'll wait on starting a review until after I rebase from some of the other PRs that are about to go in.
ros-planning/navigation2,87,2018-09-18T16:12:14Z,2018-09-21T20:08:30Z,True,2018-09-21T20:08:29Z,25a2bb24995e4818fb3226e07a74c7e6b1bb3c4d,122,3,7ebcc229bedd43f14e6f6ae443f235ac770883df 0565a701f9e600e3a8ac02b154d2830d5baa1601 1d64713101b0d56fa385a408e442d1f206844392,,ROS 1 DWB Planner Code,This an unmodified copy of most of the DWB code from https://github.com/locusrobotics/robot_navigation repo  written by @DLu     This is intended to form the base for the ROS 2 local planner.
ros-planning/navigation2,83,2018-09-13T21:15:39Z,2018-09-19T22:52:35Z,True,2018-09-19T22:52:35Z,d3dc665612a4d3f0a8cea20d7c3128be962cc617,7,11,524731a956fba5d5bba7a1fb9458d7b8e9afc818 f287f4782409c3d780e6f9abd0c31db172eae042 683a34400ef1358d6c8f7140cc62624a4d829bd4 6e32ac8eab45c851cbee98e190b8d3cece5fc728 769627016f5c60e04f5db9f3415e3733ca4a6157 06bb32e2bd70b612d048e42145d47671a88619de 55ec78449d32f8c1361470eea70164afe0b402e6 64e5e28b7043b52f007c4891bf148021db433836 ca507655122e245db8ef88cffbeadfed57350d4b e97985d46622b607b2d84a08b4ceb5e688117340 231f4da948d51632e526304b0ef4a5c3c5431ef3,,Buildscript,Scripts to automate downloading dependencies and building the entire nav stack
ros-planning/navigation2,440,2018-12-07T10:48:48Z,2018-12-10T19:03:24Z,True,2018-12-10T19:03:24Z,95d3c2eaca8d610c3540fc43d1c77acc4e519f68,6,5,9e2dceba0fe366373ae2b801c3c7c6d3afcfb838 dda747e336f2aae4376dab83a87ac9bff4d4539c bf0913d5babdfd431b1674039d67933dc5b93bc9 d7dda7bc6a2ecc51ce21447b195182cb44ab2b4c e60709b4cc6ac3e2f516dfb1ebeba065b3032353,1 - High,Enable Dynamic Reconfigure of DWB Kinematic Params,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | Resolves #264. Resolves #434 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Turtlebot 3 on Gazebo |    ---    ## Description of contribution in a few bullet points    * Makes the DWB kinematic parameters configurable.  * Enables the unit test for the trajectory generator  * This is meant to be a re-opening of PR #271  but Github won't let me reopen that one.  ---    
ros-planning/navigation2,445,2018-12-07T22:28:19Z,2018-12-10T15:25:15Z,True,2018-12-10T15:25:15Z,8f7b14b385306a3d23ca150d45f118129a668aa1,1,3,83034bbb13b746a4a76b15adf831de080ae97b6a 70d2c780d50207b94c6975635cc2b15b35cb3d4b e6470858ba7db173c5cceee10b3ca9312bd2e33f,1 - High,Changing default World Model node name to world_model,## Description of contribution in a few bullet points    * Because I removed the `node_name=` line from the world_mode part of the launch script  it uses it's default name. This change updates the docs to use the new world model node name instead of the old.
ros-planning/navigation2,394,2018-11-30T18:03:57Z,2018-12-07T18:16:42Z,True,2018-12-07T18:16:42Z,5f6c2c41d4905f6e19caa90f7cfa40fb2b0813a0,7,13,111f3d5f24ff049f50a78388bdb0f6d6aecc9f0b b63c1c93819d100d13ad77039e50ca68ec83215a a1871c89673d4f357b74b5e1b84c86e2bd17725e 842b2ea8797042a9c7b9f6d334c5f0bd06e8e4e3 2f9a390130ceb042a3c521f6b43b02a18c91097f 4716dbe3c165a65cb8d5e7e49ca395ab81d97eaa 0a7b147a17091eaf41b891720d8d07109ee868e9 333b159aee48f57cc3766ac2fd5dd42839fb9143 b41d994d94bfed4618a8a96fb07286b1d5bcc8bb 457eb6129899a8e0505214136d25b19436166431 8b5db9cc98ca26925a4d57f6878ece2b8104bff8 c8497a303474e4d2bef4df10974c2d2b7da43c59 fd46f37e5b16b7e525808e54eb9f2b2dba8fec4f,,Put local and global costmaps into separate namespaces,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  Gazebo Turtlebot 3 |    ---    ## Description of contribution in a few bullet points    * Costmaps now put themselves into a namespace that is the same as the node name assigned in code.  * Updates the RVIZ default config to map the new topic names  so both global and local costmap topics can be displayed independently.  * Adds a nav2_params.yaml file to the launch directory and sets a couple of parameters on the DwbController node and the local_costmap node.    ## Future Work    * Due to the way parameter events work  each namespace in use needs to have the `use_sim_time` variable set to switch the nodes in that namespace. Since this change causes us to have 3 namespaces (`root`  `global_costmap`  and `local_costmap`)  we need to set it in each. Here is the command line I use    ```  ros2 param set /gazebo use_sim_time true ; ros2 param set /global_costmap/world_model use_sim_time true ; ros2 param set /local_costmap/local_costmap use_sim_time true  ```  
ros-planning/navigation2,424,2018-12-05T22:00:20Z,2018-12-07T09:11:08Z,True,2018-12-07T09:11:08Z,ecda21652495acf8016c69781bb3d7ae0eb789e8,5,2,381f06562fc5c7636ee4445196d5259d2a535929 c6622826446e57eb5ff68d4235e6e9081bdf57ce,,Fix dwb_plugin test build,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | Resolves #353. Resolves #365 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  NA  |    ---    ## Description of contribution in a few bullet points    * Fixed build failures that sometimes occurred in dwb_plugins tests. They are now built as gtest executables instead of just executables.  * The tests no longer require rostest. They are just standard gtest executables and can be launched without a launch file or other support.  * Enabled the goal_checker test so it will be run by `colcon test`    ---    ## Future work that may be required in bullet points    * Need to re-enable the `twist_gen_test` however it is dependent on getting kinematic parameters as node parameters. Right now they are hard coded.    ---    
ros-planning/navigation2,433,2018-12-06T17:54:12Z,2018-12-06T20:56:11Z,True,2018-12-06T20:56:11Z,dfc8a250b1ae5874839e77296f9f61286c76feb2,1,1,d653787a00df43d0784d94b9eef0fb82feaf3e5b,,Fix nav2_motion_primitives version to match other packages,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | Resolves #431 |  | Primary OS tested on |  |  | Robotic platform tested on | |    ---    ## Description of contribution in a few bullet points    * Bumps nav2_motion_primitives version to 0.1.1 to match others. Required for bloom release.    
ros-planning/navigation2,407,2018-12-03T21:42:14Z,2018-12-06T00:01:39Z,True,2018-12-06T00:01:39Z,eda2e64f137b8006bd98df2c1780d07e6001bd16,5,2,f5d19d0c9d4e56f9d61dfeeb43b31c3f8b3774ea 5b2a240b2e66debecdb06fcd06796070299d9375,,Fixing dwb package linter failures,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #334 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Fixed linter failures in dwb_core and dwb_controller packages.  * There is one more failure in dwb_controller due to the parallel planning code. It should be fixed with a change @mjeronimo will introduce soon. Then we can enable colcon test for that package.  * Also enabled colcon test in the travis build for dwb_core and nav2_amcl since they are both passing.  * This depends on #405  
ros-planning/navigation2,405,2018-12-03T19:25:51Z,2018-12-05T23:53:28Z,True,2018-12-05T23:53:28Z,b93b3dd1d11051c7ac51858fb1a98a46f99d9ffb,8,1,02d0f06c7ee7024b1bc9db8bd396dcf8126530dd,,Make all package xml files consistently use format 3 ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #334 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Ensures all package.xml files are self-consistent and consistent across the repo.  * Standardizes on version 3 of the package.xml format.  * This fixes some xmllint errors  
ros-planning/navigation2,403,2018-12-03T19:08:07Z,2018-12-05T21:05:42Z,True,2018-12-05T21:05:42Z,3ecf53b6810ff15b85b48e24be09c2477122a20d,3,1,58fbaec48de082bab06afbb8481170c4890a98d2,,Make nav2_utils pass colcon test ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | Resolves #219. Partially addresses #334 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Fixes uncrustify issues in nav2_utils  * Verifies copyright test is disabled.  * Enables nav2_utils testing in travis.  
ros-planning/navigation2,402,2018-12-03T18:50:18Z,2018-12-04T18:09:47Z,True,2018-12-04T18:09:47Z,d61d465f245f11dcd163b0905eb2252cff7c829f,1,1,7d0f53485cb90944ebb3a9049e854d3c6252253e,,Remove the old message filters dependency ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | Resolves #274 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 in gazebo |    ---    ## Description of contribution in a few bullet points    * Removes message filters from the additional ROS 2 dependencies. It is part of base ROS 2 now.    
ros-planning/navigation2,399,2018-12-01T01:28:11Z,2018-12-07T22:02:33Z,False,none,71b324a00b581f7858b9e1a5bc385c7645b1a067,5,6,874c73fe04320c938ba3527c6eb9bd9ad37a30bd 122a6a95b9e2d22571742771af093c1f4acc9e54 005c835cd787a2fdae57954d46f6d87b7ce71856 40b2eb52b00670db718fb9641add725b73c52d00 1b59451f538bad7fe94306bb00fb50071c47e378 2295082bfa63b0e01e4ab505d8036dd636d1ada6,, WIP Enable obstacle detection,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Turtlebot 3 Gazebo |    ---    ## Description of contribution in a few bullet points    * Adding these parameters enables obstacle detection in the local costmap. It still needs a bunch of tuning  tweaking and testing to get it to work well. Right now obstacles get detected but they do not get cleared.  * This builds on #394. Only the last commit is relevant to this particular change. The rest are part of the other PR.    
ros-planning/navigation2,385,2018-11-29T01:07:05Z,2018-11-29T16:46:09Z,True,2018-11-29T16:46:09Z,a4c02e904cc087aa866a345e8ec08ba8071923b6,1,1,7bc62a1db2b6ebae1a2c8209f52ff1c4bc3be71e,,Default to a valid laser scan message type ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  Gazebo Turtlebot 3|    ---    ## Description of contribution in a few bullet points    * The obstacle layer listens to laser scan messages and accepts two types: PointCloud2 or LaserScan. The type gets specified in a parameter  however  the default value for that parameter is PointCloud  which is invalid. This change makes the default value a valid type. I've chosen the type provided by Turtlebot 3 which is LaserScan  ---    ## Future work that may be required in bullet points    * Add obstacle layer parameters to the launch file. I've got a change for that locally.  * Add message filters back to obstacle layer.  
ros-planning/navigation2,373,2018-11-28T01:40:53Z,2018-11-29T01:11:56Z,True,2018-11-29T01:11:56Z,3be0f85dfc60016ddeaf347bb513d1156e27e87d,1,1,d8a97fc39dba153ca8ed7d0adbf0542e8af5e093,,Fixing problem with AMCL trying to transform old data ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Gazebo TB3 |    ---    ## Description of contribution in a few bullet points    * Frequently when AMCL starts up it complains about transform data being too old  ```  [amcl]: Failed to transform initial pose in time (Lookup would require extrapolation into the future.  Requested time 1543368480.84859 but the latest data is at time 1135.54000  when looking up transform from frame [odom] to frame [base_footprint]  ```  * Watching the actual time stamps of the laser scans being put out by Gazebo and the AMCL error message  it appeared AMCL was trying to transform laser scans that were 30s old.    * This change limits the queue depth so we only process current data  * This seems to make bring up much more reliable on my system this evening at the moment.    ---    ## Future work that may be required in bullet points    * Why is AMCL so far behind in processing laser scans? Why can't it keep up and get all the way through the backlog?    1. I was running a debug build of everything. That would hurt performance.    2. Maybe because I added transform timeouts  it spends its time waiting for transforms that never come instead of working through the backlog.
ros-planning/navigation2,369,2018-11-27T21:40:46Z,2018-11-28T02:01:36Z,True,2018-11-28T02:01:36Z,c362a1b6587748c129f20ff526ab448723862dc5,5,1,931dc0220f0e4a1e21b717c0fa51ef306dad60d2,,Disable dynamic parameters to allow stable costmap startup ,  ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Gazebo simulation of TB 3  |    ---    ## Description of contribution in a few bullet points    * This change effectively disables dynamic reconfigure in costmap and forces it to get parameters directly off the node.  * This is needed due to race conditions in dynamic parameter client due to the use of a seperate SyncParametersClient. When working with parameters on the same node  this has issues when run in a blocking thread.
ros-planning/navigation2,367,2018-11-27T18:41:34Z,2018-11-27T19:58:11Z,True,2018-11-27T19:58:11Z,4565b2fdba3c32cf2c4bd4f593d8d479e76d456b,1,2,09ccf880fdd5600b292d127fcd66e6bf732d8f6d cf50e9dd54f5f9ccaf7abd3f42228c51f383c102,,Tb3 latest remappings,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |gazebo simulation of TB3 |    ---    ## Description of contribution in a few bullet points    * Updates the bringup launch file to be compatible with the latest Turtlebot 3 topic and frame names.  * This should be compatible with turtlebot3_simulations  ROBOTIS-GIT/turtlebot3_simulations@41db458a5 or newer. In other words  newer than Nov 18  2018.
ros-planning/navigation2,361,2018-11-26T19:30:45Z,2018-11-26T21:39:43Z,True,2018-11-26T21:39:43Z,f7bdb66d7a26bf024c60d7c3211a3f00e980b065,2,1,4d99c7319a368429096c3cb5bed61de7ff71e8eb,,Removing dependency on custom ros2 launch ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | Resolves #285. Resolves #348. |  | Primary OS tested on | NA |  | Primary platform tested on | NA |    ---     ## Description of contribution in a few bullet points  * Removes the dependency on  the customized ROS 2 launch tool.  * Removes the obsolete launch file that still has the `TimerAction` actions  
ros-planning/navigation2,359,2018-11-26T17:55:41Z,2018-11-26T21:07:51Z,True,2018-11-26T21:07:51Z,d5fdec0d2b05fccc90fb5909bec8288dd698c7c5,1,1,900f78b5b01514b36c2abbbebc4420d353269cb7,,Fixing wording in PR template to better clarify intent ,    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | NA |  | Primary platform tested on | NA |    ---     ## Description of contribution in a few bullet points    * Changing the wording of the primary test platform field to better convey that we are interested in knowing what robot the PR has been tested on and whether it was tested in simulation or real hardware.    
ros-planning/navigation2,342,2018-11-17T01:45:10Z,2018-11-20T16:37:10Z,True,2018-11-20T16:37:10Z,ef4f163d95e7776013abadddbd8e847cb0ed282b,1,1,a9e6cf37bd7f41e70dadfd0175587dc28f479b88,0 - Critical,Fix loading of stopped goal checker ,The `stopped_goal_checker` library was not getting the dependency on the `libsimple_goal_checker.so` set by the `ament_target_dependencies` call. That call is only appropriate for external package dependencies. Dependencies that internal to the same package need to be specified using standard cmake.    The symptom of this bug was that plugin lib failed to load `libstopped_goal_checker.so`    I wasn't able to properly test that this plug in stops the robot at the end due to the current defect in AMCL localization. There is a commit ( 91f47ec ) on the integtation-debug2 branch where I've enabled this by default  but I'm not sure if we want to put this on master. I figure on master  we should just set this parameter through the launch file
ros-planning/navigation2,338,2018-11-16T22:41:48Z,2018-11-19T21:30:08Z,True,2018-11-19T21:30:08Z,b65d0938b633d755f666db6986572303db66be1f,1,2,146d6619ca428ea6b4a9ff1dd563c6e3036a148c c06b44f773648fb2c8a6ff65c6992fb53be611fc,,Remapping fixes for the lastest Turtlebot 3 models,The latest turtlebot 3 and gazebo ros packages have changed the names of the frames they publish  the topics they publish/subscribe on. This updates the default launch file with the latest mappings.    Do not merge to master till you update your turtlebot packages.  ---    Here are the current versions I'm running for comparison:  turtlebot3: 3423b19e5e (Friday Oct 26)  turtlebot3_msg: 6813d307f3d921 (Aug 16)  turtlebot3_simulations: 15aee4e4c (Nov 15)  gazebo_ros_pkgs: 73a12b7c9b (Sep 12)    Looking at those dates  it seems it must be the turtlebot3_simulations package only that really matters for this change.
ros-planning/navigation2,340,2018-11-16T23:32:25Z,2018-11-20T00:12:59Z,True,2018-11-20T00:12:59Z,66147f54f120fdb9014436b45e9d88faa20479b9,3,2,f9b4d44b6556da56ed90519e4ead2da3b829e097 57f00221e0f36855e92d8a9a4211112653599f17,0 - Critical,Amcl workaround for lack of message_filters,This change addresses #339 and should be removed when message filters are available again (Issue #171)    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |#171  #339  |  | Primary OS tested on | Ubuntu) |  | Primary platform tested on | Gazebo turtlebot 3 |    ---     ## Description of contribution in a few bullet points    * Adds a separate node that can be spun independently of the amcl node  for the sole purpose of allowing the clock to advance when waiting for a transform timeout.  * Adds a transform timeout to AMCL transform calls so they don't fail as often as the sometimes do currently.      
ros-planning/navigation2,146,2018-10-08T17:42:34Z,2018-10-10T17:20:16Z,True,2018-10-10T17:20:16Z,f1673a655cf91095eb3ce3843588649c44451d83,1,1,b3cea6aa4cc2731b7914524120d94b5fc77e6524,,Fixing uninitialized variable in Task Server ,This problem would cause TaskServer to immediately call the execute  process  even before a command was received. Whether you were  affected by this bug depended on the state of the stack when the  Task Server was constructed.
ros-planning/navigation2,147,2018-10-08T17:48:04Z,2018-10-08T19:12:37Z,True,2018-10-08T19:12:37Z,8a8b344e40506cf1bbb0cc680356120e80938423,1,1,da64fe09d440157881eb606dc9d8c858578788aa,,Removing a binary file that shouldn t be checked in ,
ros-planning/navigation2,139,2018-10-04T22:29:20Z,2018-10-05T19:35:05Z,True,2018-10-05T19:35:05Z,e20af48177171ef8aa15b14f817bc90d92e549f0,2,2,05c14100900075137e3681c641377a1b5a577b88 f7c5ee5cfc8e462a0147ce5ec7f32b89fcdb25ea,,Adding time delays to launch script ,To use this updated launch file  you need to update your ros2/launch repo to point to the version specified in the change to the repos file.    We can change the repo back when ros2/launch#144 is fixed.
ros-planning/navigation2,130,2018-10-02T23:09:36Z,2018-10-03T19:15:17Z,True,2018-10-03T19:15:17Z,0fd3f69454d9bb111d3025bc8599f6f305cb5237,1,1,8808ae61a3c1569bba6fdbcbea7d3b2a01c48aee,,Making the path to the test_map pgm relative to the yaml file,This should make the test_map.yaml work on other systems.
ros-planning/navigation2,125,2018-10-02T00:36:15Z,2018-10-02T20:12:01Z,True,2018-10-02T20:12:01Z,c80d22c6c901f4316c17e47db294985a3f2c1277,2,4,c771d1630b7629d16b5ecb0b74cfdd1863264518 4658cb790aef512abad7a8098e619335e526abca b5fbe41da2c8de942782786e9361bf1778bfd67b e7aa28f5f2c34f2148065e4677be20d2f8915eba,,Make the example controller send the robot forward,When the example controller gets a plan  it will send the  robot straight forward for ten iterations of the loop.    This simple implementation can be used for integration testing.
ros-planning/navigation2,127,2018-10-02T17:53:06Z,2018-10-04T19:12:53Z,True,2018-10-04T19:12:53Z,84a925a6a8c728efe73b71081dedd685b266cc05,8,1,aaca20dbee48fab210023e0367c8906dc834ca8d,,Changing executable build to use library instead of object files ,Fixes #126     This fixes the CMakeLists.txt throughout the repo so the executable targets depend on the library targets instead of including the library source files directly.
ros-planning/navigation2,124,2018-10-01T23:29:49Z,2018-10-02T18:33:27Z,True,2018-10-02T18:33:27Z,c405905dd26621fba017ce476e0b08f0e30198a1,34,7,c4d771ea9a77df4b94b1e4e22639ead8619863d0 d8f1acf5904b3e31e710af16c256038e979f00b6 ec54d7aeddc26865762ccd9f446d826f097325af 90e6815b1b76b23a5000678397e7bef20a40a8ba 513fb91c7a595d84ae7aac16c96b24d012592641 e5ee6cb3ed5b6a7b75009659cdc1178c2c676cf9 73d0aea0645841f59ecc6451549c7f5d908799f0,,DWB implementation using real costmap,This change finishes out the integration of a DWB controller into the task model and links to the real costmap    It might be helpful to review by going through the commit history. The first change is the DWB task integration. The rest are changes to get DWB to compile and link cleanly with costmap.
ros-planning/navigation2,117,2018-09-28T06:27:43Z,2018-09-28T23:53:25Z,True,2018-09-28T23:53:25Z,3e9184efe23545205feda76e3999202716aff9e7,9,3,27bd9a9ef427a4b743e467b59576721fde920003 49df30174164ed4eaf0fcb34232165438871417b 61be1ff7ff4ccb65fe5f61907dae0517eaabcd97,,Fixing undeclared functions ,The dwb build is broken on Ubuntu 18.04 and docker.  It seems some upstream header file fixed it's cmath namespace  pollution. This fix brings in the appropriate header and functions
ros-planning/navigation2,104,2018-09-26T21:49:17Z,2018-09-28T20:31:59Z,True,2018-09-28T20:31:59Z,59f8a79808350e8114c9a2244d177ff85d1e432d,5,1,c54eb5489176e263283bf62ea98cdf7d30c2dc37,,Removing ament_copyright linter from test set,Due to a difference in the wording of the copyright template in the  linter and the one actually used in the source  the linter fails  these files.     To resolve that problem  I'm removing the copyright  linter from the test set.Unfortunately  the only way to do that is to   include every linter but the copyright one.
ros-planning/navigation2,102,2018-09-26T16:26:15Z,2018-09-26T18:13:28Z,True,2018-09-26T18:13:28Z,0d6d65bc0ecdd956b97540af8831790774ab627c,1,1,2eb2cea499b06498711896830fb9658ef36927b8,,Fixing ament_lint_cmake linter failure in nav2_dwa_controller,Resolves #72
ros-planning/navigation2,97,2018-09-25T19:54:28Z,2018-09-26T18:15:43Z,True,2018-09-26T18:15:43Z,99060b1e3309797be793811d7c6b6c37c8b46330,115,22,8e4acde6d0a2eae4d529433ec141dedb434a9b5e 469b1700a08a807ed6d7c8f336aa40962b7d2e4b 68368b52354dd14df8f0a70ab70486cb90a8eea8 7daafb0c676dc09e1e88893b518c32bd9c688b17 ac49752a4df9ce54129e4c97c148f8a4dcd0a6d3 e1c757bb1b3e3ee48b33b1d618b10343b28d5c17 095a20ff1bc6ff2faf39cd6cef2950a95acc9374 3dac76c339a7253bc09184e4641a762392ddf65f 9c6df26f90a83a4ef8af465e500291c115b56604 dedc9238b0daac9c526881a20f6009a8e1ca625d 368a6bead55ed3fe37802461968dffc51020e2cf 932284841f45576c7ccc38cdeae4fc5092f25ef3 e83ac04cf5fb5d6eeb49cadc62498b360368e400 977e8589f8583a70d32303a31394270328794d8a 6602c53fe59133508358179cbd8a42890f971a55 759935d842b8b20257b4cbcf069bd6872e8efdeb 37faed0a7fee56b30a3aeda7c46c5726efaf241d 203996bee938a0de4cac74c570949d7193306a80 4b3b04ff80e10064997a6a7952f9a0c55fc03e15 fe83e145f7f96cb4659651855f899d7405845271 7fb201362e68df8a88d9ab03bffc742bb0a25e1d 48784df813ce1dc3cc842a07d54a3b15d460707f,,DWB straight port to ROS2,Minimal set of changes to get DWB to compile and pass linters under ROS 2    Addresses  #54 
ros-planning/navigation2,320,2018-11-13T22:51:12Z,2018-11-14T16:37:02Z,True,2018-11-14T16:37:02Z,357d3a0d522816f04ded85ae19d06b122dcb18d7,1,1,0254aa17a250096eaec3d6c0f96f90d901a7c0bc,0 - Critical,Fixing last_publish_ time to be RCL_ROS_TIME by default ,## Basic Info  ## Description of contribution in a few bullet points    * There was a bug in #307 that would cause the mapUpdateLoop to throw an exception on the intial pass when it compared `last_publish_` to `now()`. The time from `now()` is RCL_ROS_TIME as expected  but the default time for `last_publish_` was `RCL_SYSTEM_TIME`. This fix makes sure the initial version of last_publish is `RCL_ROS_TIME`
ros-planning/navigation2,307,2018-11-09T22:50:46Z,2018-11-13T22:04:16Z,True,2018-11-13T22:04:16Z,06c111524d9d2f6bea5f5959898b8c4f98fcc522,6,7,ae6bd0b275687f5718ef694abf5563541cb539da 82741ee4f0fdd74399798dd47f2fc2b9e53a54bf bd076c3daff551849a867bb73ee8a9eb1013e748 8b085a39b202ce104bb721ada78f8108e9ad1596 4f717e68df446a892499b5b058645006a9359a8f 3065b0e55a70a3a9cc5456f229d6e26cb5685621 24dc49e177509362a88cb7e819cf3b43c87a3e61,1 - High,Fix costmap publishing loop,  ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |   |  | Primary OS tested on | Ubuntu |  | Primary platform tested on | gazebo simulation of Turtlebot |    ---     ## Description of contribution in a few bullet points    * The code to determine when to publish a new costmap was using ROS time. This caused the costmap to never get published if we changed to sim_time after the `last_publish_` value had been set. I changed it use std::chrono time instead. This way  the costmap always gets published at a regular interval  even if the simulation is paused  which IMHO is desirable.  * Fixed a bug in the logic that checks whether there are subscribers to the costmap topic before publishing. The logic was reversed.  
ros-planning/navigation2,306,2018-11-09T21:31:52Z,2018-11-12T19:33:18Z,True,2018-11-12T19:33:18Z,ff249bd352a61bb1183c24bc235fb962cd228f56,1,2,b3112a5ea54fa7ebedcc551443a7d540ee8d9d1b 4a8ab9aedfd77aafc99e33ebb423435a5a3c2c1f,,Disabling transform timeout,  ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |   |  | Primary OS tested on | Ubuntu 18.04 |  | Primary platform tested on | gazebo simulation  turtlebot |    ---     ## Description of contribution in a few bullet points    * Disabling transform timeout in AMCL. The current ROS2 transform code deadlocks when there is a transform timeout and use_sim_time is active. The timeout clock can't advance because the transform code is in a tight loop  preventing the node from spinning and servicing clock messages.   * It seems it doesn't matter much that AMCL fails to process the laser scans due to missing transform  because occasionally the transform is available  and we can get a fix.    ---     ## Future work that may be required in bullet points    Fix AMCL by re-introducing message filters  or finding some other wait to ensure a transform is available when there is laser scan data to process. #171 
ros-planning/navigation2,305,2018-11-09T20:54:51Z,2018-11-13T00:15:14Z,True,2018-11-13T00:15:14Z,ccd3ab0a5aa0de9cfdf15aa4f4f68559c4e33d89,8,7,7f5c79b78599f1d1d2b6c075bacf472a2ef74e9b 80a9d0f4dea3319c12c06b4d3bfe5e40598ba5a0 7c06e1e2db9bd3fbccc36b6c3015776d7502d56e f9dd59b82482e8c19e8ab860848fcbf48d4adab0 bae3eb474bd77c2e0e102f3eedb06dadd48585e8 5b4b4d95a4bb521f10f8f4395b37373d8ff7a45d 95ca8f8a1001ac5340da4e6d84380fa5619cb209,0 - Critical,Dwb fixes to get reliable motion,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on |  Ubuntu  |  | Primary platform tested on | gazebo simulation of turtlebot) |    ---     ## Description of contribution in a few bullet points    * Fixes dwb critic parameter naming such that each critic gets a prefix for it's parameters  * Adds back in the `debug_trajectory_details` parameter which had been accidentally deleted.  * Initializes all three color components of an invalid path  such that they always appear black. Sometimes they were showing up yellow  depending on initial conditions of the red and green components.  * Separates parameter prefixes with a `.` instead of a `/` because that is what the ROS2 parameter server seems to expect.  
ros-planning/navigation2,303,2018-11-09T01:24:56Z,2018-11-12T18:32:26Z,True,2018-11-12T18:32:26Z,e136a32c33cf55e4a6f4306a467defc43540df48,2,2,2aad6475a8a1721107a8bf1c0d818a53d6cc08eb 8d308cb0a7b5f22f4e9efc682bf34ee4b23d5ce9,,Remove costmap movement callback,  ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu 18.04 |  | Primary platform tested on | Gazebo Turtlebot 3 |    ---     ## Description of contribution in a few bullet points    * Removes the costmap_2d_ros movement callback. This call back would check every 1/10s to see if the robot had moved  and would set a flag. Nobody used the flag  so this removes the flag and the callback.  * Also accidentally cleans up trailing whitespace in the associated files.    ---     ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->      
ros-planning/navigation2,270,2018-10-31T00:03:11Z,2018-10-31T16:57:21Z,True,2018-10-31T16:57:21Z,a69953d9ddc3cdeab2d1cbc98a0534f9e8b18915,3,2,62cb3d29f4118681307893fab405ece708b1368c f4f4f9bc8504b0efe802b6aa4d8ac44496b316bc,,Fixing merge issues that break DWB ,#242 undoes some of the changes introduced in #235.    This PR restores the missing changes. This change is required to make  the robot move.    
ros-planning/navigation2,253,2018-10-30T00:04:46Z,2018-10-30T17:20:59Z,True,2018-10-30T17:20:59Z,e92bd4e07a1effb0c50cd75ea152256b1949a19f,1,1,6cfc518dae5a81efde8e031e6e9c62b664ed5aa9,,Adding initial issue template copied from OSRF RCLCPP template,The OSRF template seems like a reasonable starting point for us too.    I think the first step is to create a template file in the repo  then it can be assigned as the default template in the github settings.    This should address #161 
ros-planning/navigation2,235,2018-10-24T16:13:46Z,2018-10-30T16:51:39Z,True,2018-10-30T16:51:39Z,b2b72302707bcc5987a50000c219f1e4a890e401,9,7,7858e6d70e74a765fd9ca6fc3d754cf4a529a7a7 da755a812b69c049f4bdf6aca293436f76f529e5 7da55111bd09027214981e7bffc325281f464844 b90a9a7d4a36e5a491a8d86fa0dd11a34a81da45 243ff4efcac60ee7f87995fabf2c406624eedc30 8aa4a9d4b8dc9380a9b4f2b33fb555238c819567 e96f8d76702c46febe94f1f3cb361d0060e6dfeb,,Integrate costmap with DWB Make robot move,This change gets the robot moving using the DWB controller. There are some hacky workarounds that should addressed - maybe before this change can go into master  however  I'm adding the PR to give everyone a chance to start playing with it.    This change depends on #196 #222 so can't go in until those go into master. They are merged into this PR branch right now  so you can pull the branch and have everything you need to get the robot moving. I'll rebase and clean up the branch after they go in.
ros-planning/navigation2,243,2018-10-26T17:27:45Z,2018-10-29T21:26:31Z,True,2018-10-29T21:26:30Z,3a2d1ba0088d6074ee38d23c816404402315ed06,6,6,5009ac7a0b3fdf574ac502ca0c8b3b99b20835d1 d83478db375f7e1dd4b5ef3190ecbc2dfca99657 3296fc679027e4e8db829fb3eaf39d146d756c9c b9cf90425a1972b49f0ca51c042ad07e9576ca03 a46b8d4f3cb2d706d3d209df8fdc635fd26186e1 7cd01f5577eee1fd0ee3f4118ad5527f6066ac8c,,Port voxel grid package from ROS 1 navigation,Only the second and third commits are worth reviewing:  * `Initial port of voxel_grid from other repo` and  * `Bringing package.xml and CMakeLists up-to current standard`    The others are just the initial checkin of ROS 1 code and linter fixes.
ros-planning/navigation2,218,2018-10-19T18:47:59Z,2018-10-22T23:34:30Z,True,2018-10-22T23:34:30Z,6dd709183b34e42241cb2bebf1ca13e29538fe1b,6,2,f9da6d567fda9e242b184783fd599c6186f87a8c 165b49dcf68598beb365e08d82162f4defabacbd,,Fixing linter failures in nav2_util,This resolves #71
ros-planning/navigation2,217,2018-10-19T18:16:30Z,2018-10-22T23:37:42Z,True,2018-10-22T23:37:42Z,7833bb03b76661db45329a5cef30d70b9bf5d7e1,24,7,70bac7f2eb05eff7901b6e541d587c43ba4bda00 02952cc4712105ba0ff474a66b8009943ad20734 bbbe030c54660fc93942f6ab17b6e00698e6b63c 822ea0e531cdbce933206918e7936eb9288b4813 568ba4de769cad2cf866b06e99a16afa1af1a8a4 55d3b1a329feadc880ec8a0e2d9b0f918cc8a493 301768d35b0aa2158bb36a210b2901ad6929a9a2,,Fixing several linter failures,This fixes linter failures in all the controller packages  nav2_amcl and nav2_map_server.    This also fixes the way we remove the copyright linter from those packages and resolves #149   
ros-planning/navigation2,186,2018-10-17T23:17:10Z,2018-10-19T18:22:27Z,True,2018-10-19T18:22:27Z,558b5707bbcc6f12935f75767986186c1ef6e9ef,3,4,7202c25b6c803352c241a34dc95a2f4716a1fb72 9d3e806f9882882d09a332fd549c9ed81a3c673e 92d59838db81a38f38c97f447fcd90f28ec18b0f 92e7e5dbdd002a8f1628d7664b2859af5c5984a6,,Documentation on local planner changes for ROS 2 ,
ros-planning/navigation2,167,2018-10-15T17:11:22Z,2018-10-22T23:42:55Z,True,2018-10-22T23:42:55Z,496fceb2bc2fbff82cea3b894834f1fa11b56690,2,1,120ac4a054dde7600b515995761bbe5a84fe038a,,Cleanup of some time math and conversions between type ,This change makes use of the rclcpp Time and duration classes to simplify time conversion. The time conversions can be done with one step instead of multiple.    I'm not sure if it is strictly necessary  however  I think the result is a bit easier to understand
ros-planning/navigation2,172,2018-10-15T23:26:25Z,2018-10-19T17:14:06Z,True,2018-10-19T17:14:05Z,fcb6fa3eff7480273ddb0e8251678240a33b4914,12,2,5dd4486cd65c729f880d1a68b5f4f7adf7cab012 5f2e472fc592f0a19b8080f7a5d0e686576c66e8,,Changing calls to now to always use a node reference instead of instantiating a clock object,To properly work with simulation_time  all calls to now() to get the current time need to be called on the node.    In several places in the code  where a node reference is not readily available  we use the pattern of creating a Clock() and calling now() on it. This is wrong. This pattern always returns wall time  even if the simulator is running.    Resolves #165 
ros-planning/navigation2,178,2018-10-16T22:07:43Z,2018-10-17T16:04:14Z,False,none,edb970a41e309e5c706f47b008847ba720c029a5,2,1,edf60e24e31f8e4625069c2c594dadc5e3ca66ef,,Temporary implementation of get robot footprint ,This is a required feature to pull the existing costmap out of DWB.  The idea is to replace the directly linked costmap class with a call  to the world model node to get current data.
ros-planning/navigation2,168,2018-10-15T19:07:30Z,2018-10-16T17:09:06Z,True,2018-10-16T17:09:06Z,a1adb790d53a38a444b1393c74163ce1c68c37c7,1,1,d9878a6f09429457bf71f7be49d0ae6fe20401dd,,Removing an unused variable from AMCL ,
ros-planning/navigation2,166,2018-10-15T16:53:52Z,2018-10-15T23:29:46Z,True,2018-10-15T23:29:46Z,40e38c53de9b7ba827e058ef33f231c951f2defb,1,1,1d0996ec9ae40444dcb24264db81e3483f9211e8,,Adding timeouts to AMCL transform calls,This is a a workaround. The current AMCL code frequently fails to  transform data and generate a pose. The current hypothesis is that  this is a result of the message filter code having been removed.    This change works around the problem by adding a 1 second timeout  on each transform  meaning there is now a 1 second window from  when the data is received till the transform can become available.    It's not clear whether this workaround has any unintended  consequences. Specfically I'm concerned about performance and  latency.
ros-planning/navigation2,152,2018-10-09T18:49:38Z,2018-10-13T00:53:34Z,True,2018-10-13T00:53:33Z,8a63ab49df44e60e17ed3efd4e51c14dc09f4b64,19,3,18cf43345a35805f9d6a6c524c5ed685b0cbca65 86daa299712e0d24970d9607643b133d873a0df8 e529133f6cbe672d786aee6d428746ce76b75bf2,,DWB fixes,This commit  * adds in the missing conversion from the Task path parameter to the version the DWB code uses  * fixes a bunch of time conversions because the RCLCPP Duration constructors take nanoseconds by default  * makes the dwb_critics library shared so the critics can load as a plugin.    With these changes  DWB starts to do stuff. We need to resolve getting the current pose reliably still  in order to get a fully operational system test.
ros-planning/navigation2,151,2018-10-09T03:11:50Z,2018-10-10T16:49:08Z,True,2018-10-10T16:49:08Z,4de916ff45964f80ac3be6f413f5f2d15c0c3f06,3,1,30dd8f314025ac5c11628a08139c8e85b29a23d7,,Declaring use of hypot function ,For some reason  on Ubuntu 18.04  cmath functions are no longer  being added to the global namespace by default. To fix this  the  cmath header needs to be added and the hypot function scoped.    This should fix the CI build.
ros-planning/navigation2,387,2018-11-29T01:43:41Z,2019-01-02T16:55:30Z,True,2019-01-02T16:55:30Z,77e2d95717dfb4197cbdd25d0dc892130250ab4b,29,11,ef5769d26ec0b7838aaf8981128d622ea9b3d0f5 41d09ab4a3852158347c1b3fe7c256ce54ec07e3 d3dfeb80e7c5e4961f6d301fdd421d214d72abe6 1ca96a0571a8242368294bb1e0aec9ce5633aa37 fd534d3f90e98e5dc1ece000d27a34d8796176d5 0503839896853d6f40a367c32e562928de80bdc8 3dba70e2905c6457fac2267446a002434d1cc895 f4ea3bb284939eba47a49d075d9f0a0b1e1dd4f8 e65a073628ef06b9b9efa9b523b54c3497c0384f aea06119b97832e8279e572d201cbe21e8825b97 48da70502e7336a0f546c07e07b6d7151e3d8124,costmap_2d@1 - High, WIP Port of nav2_costmap_2d tests,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #121  |  | Primary OS tested on | Ubuntu 16.04 |  ---    ## Description of contribution  - Adds port of costmap_2d tests including     - footprint_tests    - static_tests (the code in this test is commented out in the original navigation stack)    - inflation_tests    - obstacle tests    - costmap_tester (ported but not enabled until rosbag playback is available)  ---    ## Future work that may be required  The 'module_tests.cpp' is not being built in the original navstack costmap_2d  so we should consider porting or deleting after investigating what it helps to test. The test of the 'costmap_tester.cpp' seems to have been launched with a rosbag and the 'simple_driving_test.xml'. Rosbags might not be available now  but we should investigate testing the `Costmap2DROS` in a full system test      ---    
ros-planning/navigation2,453,2018-12-08T01:43:03Z,2019-01-02T18:26:52Z,True,2019-01-02T18:26:52Z,15a792f3ca120cec0ff2012853113148d66f1457,11,10,acfd1782e5aad5f6590027fde40f3a05d8023bd4 6f434b15183b65d39798bbc3300cf2e150f1003e 225168542664ec2f88e8834c4db6493a4138d5db c543d76cab81b0716cbe9e1decf168fb8d92abb8 1767bf5b31fdd4bd7cdd345928b076ffda366d08 53b866e764bd2566338a2156a444ade7a90be57b 9358617d1398ea274dd752dbf410344f7534576c ea7a8ac4e659aa44135c421a0ca3469817b64892 bc68bb4dc9d1dd828444c32f19ca6eded15fcd5e 03f5ff27beaa9c74ddb3628cc7b14298f32e8201,,Add system tests to Travis CI,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    Adds the system tests to Travis CI    ## Future work that may be required in bullet points  This is WIP until it passes CI reliably enough to enable it. It will probably require adding a 'retry' statement.
ros-planning/navigation2,483,2018-12-12T20:23:21Z,2018-12-14T22:19:22Z,True,2018-12-14T22:19:22Z,19b35a3299725e5b8849af1cd0147e4d39926c7c,4,1,c42ca245415a84d4ea38ded5a1596d07bdd05ab6,,Update the BT and MissionExecutor READMEs,## Description of contribution in a few bullet points    * Add content to the previously empty BT Navigator README.  * Update the MissionExecutor README to reconcile with the new BT Navigator README  
ros-planning/navigation2,510,2019-01-02T22:09:09Z,2019-01-08T00:47:33Z,True,2019-01-08T00:47:33Z,fed34b84765f49283d5acc06f117abec0e89439e,1,1,c8c9f3eb0ca6c8fbd58b8ac8f8eb6fc042292cb5,,Updating travis build email list ,## Basic Info    Adding @crdelsey and removing @bpwilcox from the travis email notification list.
ros-planning/navigation2,511,2019-01-04T19:32:58Z,2019-01-04T23:02:28Z,False,none,1939c1e7d368ed4ccf022bfa08aede8361147bdf,2,1,5b9120275a403a444392c85915d60b2d8253eda7,,Removing the validCellToQueue optimization from MapGridQueue ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #451  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Turtlebot 3 in Gazebo |    ---    ## Description of contribution in a few bullet points    The costmap_queue concept as implemented is incompatible with not  queuing some cells. The costmap_queue expands adjacent cells as  the least cost cell is pulled from the queue. For it to work  properly  the newly added cells must have a cost that is greater  than or equal to the current cell.    This requirement is violated in map grid when there are obstacles.  The cells in the shadow of the obstacle have a lower cost than those  outside the shadow  but they don't get expanded till a cell outside  the shadow is expanded. See the second image in #451 to see what I mean   about a shadow behind obstacles.    If a lower cost cell is added  the costmap_queue iterator does not  go backwards  so those lower cost cells never get pulled from the  queue. If the queue iterator were instead "fixed" to go backwards   it would no longer guarantee cells were pulled from the queue in  order of cost  violating the fundamental concept of that structure.    A possible fix would be to fully expand the map grid before  trying to pull any cells from the queue. I need to explore that  possibility for performance issues.    ---    ## Future work that may be required in bullet points    * Remove MapGridCritic as a base class of GoalDistCritic. GoalDistCritic scores paths based on the distance from the goal. This can be cheaply computed for each point. We don't need all the complexity of building a map of cell distances from the goal.  * Determine performance impact to PathDistCritic of removing this optimization. Determine if there is another way to approach the problem.
ros-planning/navigation2,413,2018-12-05T06:53:31Z,2019-01-09T01:49:21Z,True,2019-01-09T01:49:21Z,0537c4b7daa4d36bafd137072397a6e7eebf1f15,1,1,98fd0178db6828f08cf79dca61091f7d6bb114c8,1 - High,update README to revise nav2_bringup guide,
ros-planning/navigation2,512,2019-01-04T23:14:28Z,2019-01-09T17:09:59Z,True,2019-01-09T17:09:59Z,7f9d49d8835161969fce57dcab4d0916367b289a,1,2,1e3cc18cca2a1a0dd186a6ed5f3e2e4e079d271e 6c0ee6e423b56e97e529bb0e8335d901cea1b4ff,,DWB main loop fixes,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Turtlebot 3 on Gazebo |    ---    ## Description of contribution in a few bullet points    * DWB main loop was just using a constant sleep at the end of the loop. Replaced this with a rclcpp::Rate object.  * DWB main loop was while(true). This prevented a clean shutdown. Replaced it with while(rclcpp::ok())  * Printing out a time as part of the publishing velocity message to see the real publishing rate.    ---    ## Future work that may be required in bullet points    * Optimization of DWB. The real publishing rate always fails to achieve the desired rate  at least with a debug build.
ros-planning/navigation2,521,2019-01-08T23:08:46Z,2019-01-09T22:20:03Z,True,2019-01-09T22:20:03Z,5607f11388fdfe8c1e670f8585ede6ae816250b5,4,2,0339c476ff6220a3f332ca1838ddae85946f98c5 b19aef77de0ab8caebb7a077c122edf8c51c8262,,Implemented Backup by a given distance ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #380 |  | Primary OS tested on | Ubuntu 18.04|  | Robotic platform tested on |gazebo simulation of  Turtlebot |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    - This method is not based on any control theory and overshoot is expected to happen    - If the given distance is positive  robot moves in +x direction. If the given distance is negative  robot moves in -x direction    - Deleted time based method  since its no longer required    - Added loop rate to motion_primitives    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    ---    <!-- OPTIONAL -->    I'd like to request maintainer: <blank> to review this PR.  
ros-planning/navigation2,515,2019-01-05T01:06:43Z,2019-01-09T23:33:49Z,True,2019-01-09T23:33:49Z,47845166893a6b220a91febe670b4dd67d15e99c,2,3,cd4b08f7e39c44ac9cb9e344c9aec2741b90f25d 82e78842c2d176ee9061e68fff8db09abe1b3fcd c3d6f687320c18562f3fec388916110214609703,,Fix DWB trajectory visualization,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #447  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 on Gazebo |    ---    ## Description of contribution in a few bullet points    * Code now ensures all markers are properly deleted. The trajectory markers are divided into two namespaces  one for valid trajectories and the other for invalid. Marker IDs are independent in the two namespaces  so both namespaces need to be cleaned up separately.  * Changed the valid trajectory color scheme to be solid blue for good trajectories  fading away for poor trajectories.    ---    ## Future work that may be required in bullet points    * The color scheme might need tweaking to better see what's going on. It seems trajectory scores right now are all clustered around the really good score and it is hard to see any difference. However  I think the scores themselves need to be investigated further before tweaking the display.  ---
ros-planning/navigation2,519,2019-01-08T19:32:06Z,2019-01-09T23:34:05Z,True,2019-01-09T23:34:05Z,dde0fe446816f83ab1435b78f6d987492c1e67f7,1,1,e7cd6d897db1aa085178394aed164393bc5d6b43,,Fix costmap queue expansion,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #451  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Turtlebot 3 on Gazebo |    ---    ## Description of contribution in a few bullet points    * Fix costmap queue. The getNextCell function pulls off the head of the queue  but also enqueues adjacent cells. The previous implementation would reference the head of the  add adjacent cells  and then pop the head. Unfortunately  under certain circumstances  the newly enqueued cells would become the new head of the queue and get popped instead of the cell that was just processed. This change fixes that problem
ros-planning/navigation2,522,2019-01-09T18:14:16Z,2019-01-10T19:16:22Z,True,2019-01-10T19:16:22Z,d41b3a8190c75129a29f4f60761260ad0f6a687a,5,5,605c5fea49a1818d71b45abdc5a807d748f0e8e7 1d4365844969da530ab04364c271275a5e39fdea 68e667996887c27ab5eb74303b2525fa8fc304c6 15b7bd09694d880e112432a09a691119e3668fc1 f26d79ab9b375564ac0780209e74222e1d045a57,2 - Medium@nav2_recovery,Adding more detail to Recovery Behaviors readme,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #501 |  | Primary OS tested on | n/a |  | Robotic platform tested on | n/a |    ---    ## Description    Added more detail on how Recovery Behaviors are implemented with BTs.
ros-planning/navigation2,360,2018-11-26T19:20:55Z,2019-01-10T19:18:53Z,False,none,99d8db39e7abbca774759027704fdd4826f0ae54,1,6,251e9efe6c3bc435f0d4b377c56b658fc45e0c61 33523f64e4f64daaea79809b5f0fa81268653cdd 7f14b89f1a9454577a531beb775e6e1641ab934e 7f7e86c78760ebec7b5ebbe71cfa800eb0ef1147 e9be31d161332f7325ec1077d78a94f390aa674f 59e671f0267d61a4baf0df2df32eeafe5e2911e5,,remove angles again in rosdep waiting on next Crystal sync ,Addresses https://github.com/ros-planning/navigation2/issues/345    Needs to wait for the next Crystal sync to be in main (out of shadow-fixed)
ros-planning/navigation2,523,2019-01-11T22:28:37Z,2019-01-12T00:08:48Z,True,2019-01-12T00:08:48Z,82fdc1c61ed17273cd4aedff1de2b4204a7d7eda,1,3,6d6b15b66dac6f4bd77d4a4960a7ed6ab0fdffc1 67a4ed9465fbb9dc24f5e4016149ca9239b760ef 182616091511165e3a377e9dd225064f25a23738,,removing rosdep cache for new initialization,A couple of things changed  rosdistro2 has been homologated with its upstream + container may have been updated and didn't remove the rosdep initialization cache
ros-planning/navigation2,505,2018-12-19T01:37:04Z,2019-01-15T16:59:12Z,True,2019-01-15T16:59:12Z,6917426ec709ec568518739f23e74787d4fa8d77,7,8,ab978934f5c6a6c757fee1b4825a8cfb5bd5e3ad 84654b32e54dd5b4d7a06d7f7e843740c8bc9d03 8c797547b9e6dbcbf2159e68710018ee48f42273 a539dc700bd5d03df3e0630b1f8b1b048ed6fcb9 cd337601f8b4e5ccf18370f4882204fe5f09076f c909cc45ff523aae7c88f7dbbc46605a272f49aa 13cdd200cd246764d251a23b09df0bc3f8b0eef0 d4559459e9707a4aa491b219b3c007e5fbed98f1,,Add Dynamic params tests,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #251  |  | Primary OS tested on | Ubuntu 18.04 |      ## Description of contribution   - Added gtests for `DynamicParamsValidator` and `DynamicParamsClient`  - added interfaces to `is_in_event` to scope by node path  - changed event callback to class member function instead of lambda function  - added `get_param_from_node` function to fix hanging bug with `SyncParameterClient` which was occasionaly hanging when listing or getting parameters  now uses `AsyncParameterClient` with a timeout and a variable number of re-attempts    
ros-planning/navigation2,513,2019-01-04T23:15:50Z,2019-01-18T19:20:59Z,True,2019-01-18T19:20:59Z,84b85da5f523cd26f4c23b88d6f7424c2e6422ad,2,5,344cf5dd8786fc8fbac21bd0aa2e7c86865126e0 a49f6205c8c6a756faea37b0b2a23650d0f94e83 fba24c148bcfcb5e39dc3608311de953658888c7 d69a7e789a053c1c01726928b400fcc0647a96b5 b8d80102ba183acdc3934c87068dbbf2cdf7f22a,,uploading and tagging docker images to pull,Along with deploying versions as zips  we can add this to the mix so that people can docker pull the latest software or a specific tagged release that's available as a deb in apt    to be squash merged
ros-planning/navigation2,527,2019-01-18T21:38:52Z,2019-01-23T00:48:06Z,False,none,5d058bfedae5b799d2a9fb584a2fe31daf71db6f,1,1,c753747ae347dfb2433cc650adc172d062592492,,Disable unstable system test in Travis ,The system test is failing far more often than the 1% predicted. This is causing PRs and the master branch to show they are failing even though the fault is not part of that change.    This change disables the system test until it can be made more stable
ros-planning/navigation2,526,2019-01-18T20:04:16Z,2019-01-25T17:58:06Z,True,2019-01-25T17:58:06Z,1ae4a5493d7d9ddc3d0d1cc814050da8699b2e0d,1,1,9614dc1dd456ed9c74d1380a52f4e54e1c4be5ff,,tag docker container so it registers to the repo,Addresses issue I noticed where the image we built doesnt match the push repo name. It may work but it's good to be explicit and one of those things you can only test after being merged. Master is still failing due to a system test failure 
ros-planning/navigation2,532,2019-01-24T17:56:40Z,2019-01-30T17:51:25Z,False,none,f871de716e5fd81e2c2301b66ef25a40a0b28de0,5,3,573c76ee4cd15efd6e927c044b72c296dbb746d5 73806b472a92313f72105284e7a5348e4efa454d c7508638f13d08ca54863121c3a2f7e87590196f,0 - Critical,Workaround for logger exception,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Turtlebot 3 in Gazebo |    ---    ## Description of contribution in a few bullet points    * This works around ros2/rcl#375. This was causing our system test to fail consistently. Our system test should pass again with this workaround.  * This replaces #527 as a better alternative.  * The problem with this PR is that the `use_sim_time` parameter cannot be changed from the command line. Instead  if you want to use real time  you must manually change the nav2_params.yaml file. To fix this  we need to upgrade the ros2 launch tool  which is in the works.  * One last point. I did not apply the workaround to the map_server node. Due to fortunate circumstances  this node is not affected by the issue. By not applying the workaround  we are able leave the map file name as a parameter to the launch file.
ros-planning/navigation2,538,2019-01-28T19:32:51Z,2019-01-30T18:26:28Z,True,2019-01-30T18:26:28Z,976750130766c6bb6c7576d49a54aefd769e2c1b,2,2,a2ca69c95e6fb39d5f05e443f27bb2d3f3b54274 1c5613470a2b082388d5bce6d30743a538b74c9f,,AMCL TransformListener reuses node rather than creating its own,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | ros2/rcl#375 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | None |    ---    ## Description of contribution in a few bullet points    * Makes the transform listener created by `amcl` reuse the existing node rather than create its own  * Works around ros2/rcl#375 by having only one node in the `amcl` process  * alternative to #532    ---    ## Future work that may be required in bullet points    * None in this repo  
ros-planning/navigation2,536,2019-01-25T00:29:06Z,2019-02-05T22:10:47Z,True,2019-02-05T22:10:47Z,3f65576a98330de0cb832d2c344474b2b604142d,51,2,bdef28f4fd7916e55e442e1174b3106b5eb0fa1c be15cd8fa2aa96ae81c27197ad55f291663f2e7d,,Factor out basic cmake common code ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * There is duplicated code across `CMakeLists.txt` files throughout the project. It will get even worse as we add code coverage capabilities. This PR creates a package where we can put common cmake functions and macros to reuse across packages.  * I factored out the common preamble code across all the packages as an inital use of this package.  * The dynamic_parameters package had a special case pre-amble that disabled the sign-compare warning. I re-enabled that warning and fixed the sign-compare issues in the code.  * The costmap_2d package had a special case pre-amble that disabled all warnings. I re-enabled the warnings  however  there are more complicated fixes in the code  so I disabled the specific warnings that were coming up  leaving the actual fix for a future PR.
ros-planning/navigation2,558,2019-02-06T19:02:38Z,2019-02-12T03:40:58Z,False,none,b76eb024d201dd41dae42555c189d4a59ba71a43,3,3,527ada0e50665ecbd0065038c89ea24ff3192337 b6f97fada6e6f9f72a5b0e0793313e585813a830 6130f359f526b720181a6605970e87d65b9da793,, WIP Remove unneccessary additional ROS 2 dependencies,  ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #345  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Removes `angles`  `behavior tree` and `gazebo ros pkgs` from our extra dependencies. They all get pulled in by `rosdep`
ros-planning/navigation2,560,2019-02-11T21:38:33Z,2019-02-12T17:32:09Z,True,2019-02-12T17:32:08Z,0deebc1dbde0c206c6d39e316d2b3cf1c1f917ac,4,2,828a388fb0c91e8a8bacfbed837a35eb901b2a83 0436639a0f01e04bd22d82dc1a5b14b2b21c6637,,Fixing the broken build,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  NA  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Turtlebot 3 on Gazebo |    ---    ## Description of contribution in a few bullet points  * The build is broken due to ros2/rclcpp#622. This PR fixes the build.  * I temporarily changed the upstream gazebo_ros_pkgs repo to point to my fork until ros-simulation/gazebo_ros_pkgs#887 is integrated.  * I added the gazebo_ros_pkgs dependencies to the `ros2_dependencies.repos` files to make it easier to work with them locally. No need to use rosdep to build them. This will help avoid bringing in lots of ros-crystal dependencies in the future if their dependency list every changes as noted in #558.  * I changed the image_common repo to point to my fork until ros-perception/image_common#120 is integrated.  * I reverted #538. It is no longer required now that ros2/rcl#384 is integrated. Also by reverting this change we are no longer affected by ros2/geometry2#92  
ros-planning/navigation2,553,2019-02-02T00:52:00Z,2019-02-13T01:04:46Z,True,2019-02-13T01:04:46Z,357e3030ac968fa32869ff751e20f2d7bbf0aeb8,8,25,12e56ac68e8860f589eba28c8001c4b38cf0736c 857ba30022bd1e44f030781f4ce870c80526b436 ac4fe7f610541faf16243b93f8e7dd89ef253ccf a8e772f5ed8fdefe3ea9db5bca64bbf375782142 f7a28df77c18f54e8dfc637fba6ce89f50d6c469 d0d826411a773fa4a452dd1735f7841d6d3925de aa7678300c20e0005eb721407a1d9453cf274ce8 3d7165308f7240c5119f53e6a64c6cfa0c8c6d68 0b38026319f2ca4c8069c473eaea39970a535a86 4225761fae6512866b072e28ef09d8c127f32eb5 9d436231e86840357effba39a99621895515bbc4 ad95353f4442a631b3dab903d2be2254fe0ade62 a48a7b5fb46d3d6da19984ca4b98ccec1772f98a 9f13e554d738aa4f9c3c476d3d7137f21169066e a5f5f44ed40d5ca696c1d553b0208a0aac879263 a3404b84b491683652b85425404eac7769e2a62a abea8020829d18b4351a0048bbe538827e98fa23 68aea5607a072442838c6c6a8996f3d6b403f786 72f285625218ee2cad7805f2a2871ecd494a3e77 05215775f8c305a2c97bf072b12b3dad354f9955 11acdb724875f50df483087d2206253cb57174b8 f124aa30a9477ced3712b4682be27bd6090e31e8 70d27834a322fbb82f7a22edf3e143598e1b934b bb856c64e7f1a91976bb05f4f7e2f906f3392c2b 6cf7498f79818c0ca06d130c8aecaff1a6c05e7e,,Adding code coverage report to build,## Basic Info    Adding code coverage generation to the travis build with a report out on Codecov.io.    * I've split the travis CI build into two:    * a release build that eventually gets pushed to dockerhub  and    * a debug build that includes code coverage generation. The results to that build get pushed to codecov.io  * I added a script to to the tools folder that runs the test suite  so that only one line is needed in the travis.yml file instead of 4 or so.  * I added a script to the tools folder that generates the code coverage data. If you run it without options it generates an html report you can view locally. If you run it with the option codecovio  it uploads the data to codecov.io which generates a report.  * I could not use colcon/colcon-lcov-result on account of colcon/colcon-lcov-result#9  but will keep an eye on it for future refactoring.  * The reports generated on codecov.io are a bit wonky because we don't have a baseline report yet. I think I can't clean up any further issues with codecov.io until we integrate this PR to get baseline data.
ros-planning/navigation2,561,2019-02-12T08:32:00Z,2019-02-13T18:15:15Z,True,2019-02-13T18:15:15Z,c36af6d21de1bb4a519e76efe4f97d8e4630887f,1,1,4cc875ae2cd381b02e73a4096411f8fa9caf8299,,Update README md,Update README with the modified turtlebot3 launch [file name](https://github.com/ROBOTIS-GIT/turtlebot3/commit/aa5225c7eef9d11924f1fd86a69969e89dab023a#diff-187d6396e5bb42dd1ccfdd9f1a6c4f84 ) .  
ros-planning/navigation2,566,2019-02-15T00:29:17Z,2019-02-15T00:40:58Z,False,none,4995b7a1ef3a5630a98c6ae1986dcb6b842ed1e9,27,10,13edb55117c66290bb5be6a4c06f3b3cd8aea276 a6fd4374f133c157fb986c0e245c9592e0987e88 7b016c435d59c6dea4b3c90d05cfdfaeb7a4d877 e1c0ef015c8b85b76332e2a896df891707e49c4a 8c4fe6aff95b8298883d636b7f3dd579c6d3113b e3ace7e270bfa648bd72a97ea94923995e84055d 9d5c36dc3df1e7b2b838b2b514de3ed1a925bbd7 7404b83935b303d40ce94af280200a0b16d4af97 b49e5fc34845628552c05e7813ca2646f26deb15 8508c3cdb2174fbc98cf7d00a1256dc1eac8e9d2,,Fix the flaky dynamic params test thats been causing CI to fail,**NOTE: I recommend reviewing this commit by commit rather than as one big PR**  _This is quite a big PR  but I cleaned up the commit history  so you can review it commit by commit. Each commit is an independent change if you follow it from oldest to newest. The newer ones build on the older ones._    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #556 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Fixes dynamic params test that has been failing in CI. The test was failing because the "helper" nodes were not ready yet at the time the test started. I fixed this by converting the "helper" nodes to lifecycle nodes and waiting in the test till they were activated.  * This refactors and adds a bunch of support code  so this mechanism can be easily used on other tests that need it    
ros-planning/navigation2,567,2019-02-15T00:44:45Z,2019-02-15T00:48:34Z,False,none,fe17a6e8c4058420c0719f7cc9a3ca73ce015a48,27,10,13edb55117c66290bb5be6a4c06f3b3cd8aea276 a6fd4374f133c157fb986c0e245c9592e0987e88 7b016c435d59c6dea4b3c90d05cfdfaeb7a4d877 e1c0ef015c8b85b76332e2a896df891707e49c4a 8c4fe6aff95b8298883d636b7f3dd579c6d3113b e3ace7e270bfa648bd72a97ea94923995e84055d 9d5c36dc3df1e7b2b838b2b514de3ed1a925bbd7 7404b83935b303d40ce94af280200a0b16d4af97 b49e5fc34845628552c05e7813ca2646f26deb15 8508c3cdb2174fbc98cf7d00a1256dc1eac8e9d2,,Fix the flaky dynamic params test thats been causing CI to fail try 2 ,**NOTE: I recommend reviewing this commit by commit rather than as one big PR**  _This is quite a big PR  but I cleaned up the commit history  so you can review it commit by commit. Each commit is an independent change if you follow it from oldest to newest. The newer ones build on the older ones._    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #556 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |   ---    ## Description of contribution in a few bullet points    * Fixes dynamic params test that has been failing in CI. The test was failing because the "helper" nodes were not ready yet at the time the test started. I fixed this by converting the "helper" nodes to lifecycle nodes and waiting in the test till they were activated.    * This refactors and adds a bunch of support code  so this mechanism can be easily used on other tests that need it    
ros-planning/navigation2,562,2019-02-12T19:27:10Z,2019-02-19T18:55:36Z,True,2019-02-19T18:55:36Z,4a17d4a03a6a77c63ee91631ab1ed41201dcf45f,1,6,a093c2c8cdc7119d2b20821d48bff9ac93a2dc48 229840188e1449789a5fbae067ece872da424fbb a1365bf1312906702310bdd5471228a2ec1b65c8 8e0c372360dec65f77c58202657467aec1fcf348 e4fe896884cc86a2b20537ee67e2fad38bdabdd4 545bd4002cf34e979925d669c6375f6c538a1dc9,,Add docker file that builds against crystal release for use in testing the crystal devel branch,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | related to #421 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * This new docker file builds against the Cyrstal release instead of ROS2 master  and relies entirely on `rosdep` to bring in dependencies. It is intended to be used to test the crystal-devel branch  and maybe make a crystal dockerhub image.    
ros-planning/navigation2,569,2019-02-15T20:15:14Z,2019-02-19T20:33:12Z,True,2019-02-19T20:33:12Z,6276f190c8cc1b25d82a61a16a1b70dca212121b,5,1,5087361929a0137f79258c9acdca6630368a03af,,Removing unneeded dependencies ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | nav2_system_test |    ---    ## Description of contribution in a few bullet points    * Removed boost and pcl dependencies that weren't used.
ros-planning/navigation2,557,2019-02-06T16:54:35Z,2019-02-19T21:47:18Z,True,2019-02-19T21:47:18Z,1c1f4cd71ee55c13ac2864d4a6437bc4f85d87ed,5,5,0decf414597d95c49660b891d52033b3fa5be3fe e90bb5803a30a9aecd892b0d79289d142454ffe2 ef4e056923e56eb2eb039b553636c3bbf8c2eab3 10c47466a243b03caba1e4765928ef8925cf248e b1a594afb80a91ae8d053bf0864cbd2d74d67d44,,Add BT Navigator System Test,  ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #542 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Gazebo |    ---    ## Description of contribution in a few bullet points    * Creates a new system test that runs the BT Navigator node.  * Installs the XML bt navigator config files.  * Enhances the `ctest_retry.bash` script to:    * avoid the need to copy it in to the nav2_system_test build folder.    * display test output    * allow running only one system test at a time so they can be retried individually instead of all together.
ros-planning/navigation2,577,2019-02-22T01:26:28Z,2019-02-26T21:05:07Z,True,2019-02-26T21:05:07Z,67d9ead827adf7e8819a6f54c5478c2fcf62d0e8,1,1,57205ae7cefb10d91dbcabab5afa14c9446ce0d8,,Fix DWB memory leak,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #564  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 on Gazebo |    ---    ## Description of contribution in a few bullet points    * Moved the DWB initialize call from the Execute method to the constructor.  * I ran Valgrind and saw a bunch of leaks related to loading the plugins in DWB and Costmap. By moving this code to the constructor  it only runs once. This makes more sense logically and makes DWB a bit faster to start moving.
ros-planning/navigation2,571,2019-02-20T00:15:23Z,2019-02-26T23:14:18Z,True,2019-02-26T23:14:18Z,06f6ac180c7e032078b210c8456046025e47a0bf,2,4,1e06e56d2452b7c9dce51267fec769095ce73d93 2aabe17f85b6a4fe3eb2701f9903749ba3521f61 bb4d161b7348a3c8240d977340b5b5a0bbb8ff6f b9f69b4582b66f7e721b98aa75621aaa65aff256,,Add A to the system test,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Turtlebot 3 in Gazebo |    ---    ## Description of contribution in a few bullet points    * A* is the default _planner_ used by the nav2 bringup launch script  * BT Navigator is the default _navigator_ used by the nav2 bringup launch script  * The full system test is now configurable on which _planner_ to use. There are still 2 tests but they are configured like this now:    * simple_navigator and dijkstra planner    * bt navigator and A* planner    
ros-planning/navigation2,582,2019-02-25T23:25:28Z,2019-02-27T19:04:23Z,True,2019-02-27T19:04:23Z,2a9e86ee77b573246d227600b0cd37028e3f851d,2,2,67fb3e80d00c8d4b6bf21282d9c6e84c1cac3062 12b0597d6d78a24e467599da182e2f34bc0b4b3b,bug@0 - Critical,Fixing memory leak within Costmap2D Inflation Layer,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #581  |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | gazebo sim of turtlebot |    ---    ## Description of contribution in a few bullet points    The `seen_` was being used as a container for bool values and implemented as a dynamically allocated array (raw pointer)  however  it was never deleted on the inflation layer destructor.    This PR implements using std::vector<bool>.    There's been [discussion](https://isocpp.org/blog/2012/11/on-vectorbool) on whether `vector<bool>` should be used at all. In this case looks fine  let me know what you think.  
ros-planning/navigation2,584,2019-02-26T22:04:41Z,2019-02-28T04:10:43Z,True,2019-02-28T04:10:43Z,ec92a2d9476b0098cb4e5d9dfa2e4acc1bfe3b54,1,1,3551af9fa2e82b229d33ae9c9a955b6773905de3,,Run dynamic params test independently flaky dynamic params test fix part 2 ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #556 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * The dynamic params test fails when run concurrently with other packages' tests. This changes runs the dynamic_params tests independently in CI.  * This is part two of PR #568  
ros-planning/navigation2,490,2018-12-13T23:01:59Z,2019-03-06T00:39:07Z,True,2019-03-06T00:39:07Z,d43d2d4400d5c222613d1bb7a28c2b1e662caf0c,1,2,404cdd32b82ae10faa302aac107742033db4305f d2ac929fb9f5b840d7ef85455e45fef2e3c88fc1,,Modifications to isStuckCondition node,**This PR should be merged after the new version of the BT library  which incorporates the onInit() method  has been added to ROS**    ## Basic Info    Addressing issue #469.    ## Description of contribution in a few bullet points    * Removed thread from isStuckCondition BT node  * Pulling ROS node from BT Blackboard
ros-planning/navigation2,585,2019-02-27T01:43:43Z,2019-03-06T01:10:30Z,True,2019-03-06T01:10:30Z,f37f44a2a8e3cb06088704a6c68b55f995e5c14e,1,3,c944c084fa1d380ac44fa9b12fbf427b8bbc964b 391f736a6ea436f6635a13e799b32b88cb7acf1d b8522d5ed5e1bc4794fb72511509c9187fe0baeb,2 - Medium,Motion Primitives Readme,Updated the `nav2_motion_primitives` documentation.
ros-planning/navigation2,579,2019-02-25T21:32:37Z,2019-03-06T01:13:57Z,True,2019-03-06T01:13:57Z,7e0c52a20b1c81c17e1abd0dd36c81a6eb10186a,6,6,773015a6102f34f30a5e8844e0b0c2e8351f2757 518c83adf35a9587defb88d34aa6b1f5652e349b 7e02f999b852003ad38935fea749494e50b86142 a4a29b5c4458b1250692823cc7c226d0bd56f412 a660f821449b4a893a1d02b2976b85ccc9d74969 281cf4f507eca8a028a95d4a95a7acb094b0456c,enhancement@2 - Medium,Add service to fully clear costmap,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #551  |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on |Gazebo simulation of Turtlebot |    ---    ## Description of contribution in a few bullet points    This is a continuation of #551. A service for clearing all locations outside of a region was already incorporated in #559. This new PR adds service for clearing the costmap entirely  similar to the [big reset service](https://github.com/ros-planning/navigation/blob/a6f3d4b49335b6de5c33044dd2123df0f491453f/move_base/src/move_base.cpp#L330-L338) available in ROS1 move base.  
ros-planning/navigation2,568,2019-02-15T00:58:02Z,2019-03-06T19:33:13Z,True,2019-03-06T19:33:13Z,4f03d9df636cb55741e0ec6b050d04974937e93b,37,13,969afc62faee5758c5dfcdf01e871ee551fcc79b 158890a1bdc0fe685376d11aa96528610a6e2b48 6689686a9c8d31cf0d2953eaee34631f54eee28d 2c77f17952d64a56242b9f98d983552b0ff9024f eb335a57f85510f463370111aad3b2f1673a0441 c72bf4ad970e0b7820d2dddc5f766e44b1a5644e 8e55339c85bf64f255a3eb0335605e2cb13729a6 c7689227e767c7fc83101b1e385db3b2921fa553 e42f1196dd047f6804366810964095938db1481f 5b338c75c931fb74148976a450e83402e6f01eb3 d63feeab6a384a06873de84c6579651d5ed0ad1a 1d2b1e6d43dc7193f76ff31d40d09f70d14b711f 171159ce8d2bfd763c69af4ef28e0cf8d69bca35,,Fix the flaky dynamic params test thats been causing CI to fail,**NOTE: I recommend reviewing this commit by commit rather than as one big PR**  _This is quite a big PR  but I cleaned up the commit history  so you can review it commit by commit. Each commit is an independent change if you follow it from oldest to newest. The newer ones build on the older ones._    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | partially addresses #556 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Fixes dynamic params test that has been failing in CI. The test was failing because the "helper" nodes were not ready yet at the time the test started. I fixed this by converting the "helper" nodes to lifecycle nodes and waiting in the test till they were activated.    * This refactors and adds a bunch of support code  so this mechanism can be easily used on other tests that need it    ---  
ros-planning/navigation2,594,2019-03-07T14:25:17Z,2019-03-07T20:47:48Z,True,2019-03-07T20:47:48Z,abae137977a7177704343d81814e863070986ab5,3,1,2a2a610b3cc210b9b754e075e3b45b4f4c83e94a,,removed bullet dependency from map_server,  ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Gazebo  |    ---    ## Description of contribution in a few bullet points    * Removed `Bullet` dependency from `map_server` as it was only used to convert RPY to quaternions.    ---      
ros-planning/navigation2,597,2019-03-07T18:00:52Z,2019-03-07T23:19:10Z,True,2019-03-07T23:19:09Z,a396dc5e575b07114545b350915739bf8e705cb7,6,1,4c999b323ba4cadbd14e4365f3088452486d5d62,,Fix latest failing tests in CI,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * A bunch of tests were failing CI as can be seen in this build [log](https://travis-ci.org/ros-planning/navigation2/builds/502734132?utm_source=github_status&utm_medium=notification)  * This started happening due to a change in the `launch_testing` package.  * Seems we were using the package wrong and the change exposed that problem as described in ros2/launch#194  * This change removes a duplicate addition of the test action from the launch description.  
ros-planning/navigation2,598,2019-03-07T20:06:27Z,2019-03-11T21:53:23Z,True,2019-03-11T21:53:23Z,e797177fbd8cdec8a8b754a2fb08203b4833566c,1,1,4a1c1d66dbc4e08b357b9cc7e66fd0b1eb12e719,,Adding retries to dynamic params test,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Despite all my efforts  I've failed to get the dyanmic_params test to pass 100% of the time in CI.  * Till I've got more time for this  I'm giving up and just retrying the test like we do the system tests. :-(
ros-planning/navigation2,492,2018-12-14T22:04:24Z,2019-03-07T01:05:44Z,True,2019-03-07T01:05:44Z,355d6858bffd9cadf07ee6d9b8861fcd3d9e11c4,1,1,2c65e445dafcedb490df10a2694c053dc230e855,,Use the new Coroutine based BTActionNode base class ,## Description of contribution in a few bullet points    * In debugging the BT segfault issue  I discovered that the BT library now has a Coroutine-based base class for long-running actions and that this is the recommended class to use for ROS Actions. So  I've switched to use this as the base class instead.   * This may or may not fix the segfault issue  but it is a chance we should make as it is the recommended way for ROS Action-like behavior and uses fewer threads.    
ros-planning/navigation2,486,2018-12-12T23:22:08Z,2019-02-25T23:20:18Z,True,2019-02-25T23:20:18Z,b03543bc35e53c509a0832d48a1fa8e6429c685f,7,2,c499403e86d319a33fdd8493f12a597a38ede9e7 f539b6c08114a42b1de7a8edfed40b28c6f0c990,,Use the new onInit method from BT library,## Description of contribution in a few bullet points    * At our request  Davide added an onInit function to the BT node base class. We can now use this to initialize BT nodes since the blackboard is available when onInit is called.  * This replaces our own onInit; effectively this "first time" checking in the tick() method is now moved into the library itself.    ## Future work that may be required in bullet points    * Since Davide has shared with us a method to use complex constructors for BT nodes instead of the standard two-argument constructor  we can avoid using the blackboard for some data and pass it directly to the node constructors.  * Might want to avoid making the classes derived from BtActionNode have to call BtActionNode::onInit. Could avoid this by renaming our own initialize function. That way  the BtActionNode base class would be called from the BT framework it would in turn call the user's initialization function. 
ros-planning/navigation2,604,2019-03-12T20:40:23Z,2019-03-13T00:36:50Z,True,2019-03-13T00:36:50Z,db8f4d553d50a53efe2bfac14e5970411f64e429,8,6,d0115a1451deed07809d1c317c0e78d5e058490d f8b2905517c01db91e83e3e0d89b7592e9068e2a bd2d430f67dd73eb5022e8891c3da13030ff4520 a09724c472ebf14b204c013683ae12f824bfd4fb 73b157e7fe4eb482d2c2c74bf618a4d32528dc56 8a8323949678162e14714c7115f7532f9ed97836,,Fixes and workarounds for crystal devel 0 1 6,This consists of various bug fixes and workarounds on `master` that seemed worthwhile to merge to `crystal-devel`.    This PR will hopefully kick of the ROS build farm CI to verify everything still builds ok in crystal.  
ros-planning/navigation2,574,2019-02-21T22:21:03Z,2019-02-26T22:05:24Z,True,2019-02-26T22:05:24Z,6c3b9b047c5cac843ebac0a9e61238f795865bde,2,1,f9acff8fc422cb2315c8034c11770ee83963f28f,,Fixing missing dependencies,These two packages were missing a dependency on `std_srvs` in their package.xml. This PR fixes that.
ros-planning/navigation2,583,2019-02-26T18:48:42Z,2019-03-15T23:22:23Z,False,none,21a0eb9dab60c619a00a04e4bfc2ee18a7b235f9,197,34,e11bb2252a887a1668c00ce97e3145bb362c60b6 e5ffdbf6070cd6b98b3590d5a046db11e8b9c23b e27aca55bcf93e348b89e11140043a06b3a144d2 e86f3036f2844ce84be9c576b0c24f56101a0447 a8566aa9ce9673a88182a5c3de33d6391fc59023 cde28d3fe2839107f4f88647faedf36497a06e48 64653126c3ae8077151536920c7d3b7edc5c8c49 7bb116c138d0bf472af6813df1c44af2f64cd2dd 78e1cf098d40491de84da1bc3555b4713341dbb7 13c7312c91c75f8b9be2568cead3c2ad3edd1754 bab9ae0a483fd13e67ceafde11cc811b4c18acef 81d251ca353eb73b0f29ffdd729dd4a0f359f591 f4c66e36132fe739ba1bdb8d26a1ab7dff982164 23546c465bc4d5c839c3715021cba432611f6cfc 43112f41c2cf88881d2d2c67ac9edea90b00747d 95b112ecbbe9d0f933182f97f203e9870cbd29cf f13430416808773e9a3150f9370f7cf143c7fea9 cd6920d8a0d9c1b529aeabbf01021c0c78e74761 0903407e9c66977dadbe227cfc50a44b1eee100d e7f28c7449dfb03d6de9790e7f1b6ac54b0757db 3d82a1d8e29abb71c85be7c5c013b9379dbb02e0 ec8aeb25c63f599659495369ddc88c80362b40e6 214eb5d4d37fa7b03342237e9d4230da0b5262e5 eeb516ef8032fdb7928c0cc24aaaf20315e66200 d343a89cab14a2bb77fd886245d0dddd178aad12 85fd35d5333973c4f0bcf6b458dcb336263e0e4d 6f650b6b2a405d6be5dd35466381f4af71c051de 393764276f920c2130f482aef7bde8bc738df7b9 5e1ad2670de54c718097ed18e67ebd691ce597e5 f2856d69d1246321a2cbf5bcc67fed3b3cd2052b 8024a265aa168e4492f6b8108e164fbad788451a 52c22a117fd146450f92d656e8e857eeee6b08e8 0483871dbe46989b587b8ee2716e7babaa9e0984 c7f3d51a1462f77c733c040a81daddcd980d1151,nav2_lifecycle,Lifecycle staging 1,## Description of contribution in a few bullet points    This PR consists of the foundational modules for implementing lifecycle nodes in nav2  along with a couple simple modules that use the classes. The lifecycle work will be submitted in stages and this is the first PR in a series.     The code won't be fully functional (and probably won't build) until all PRs in this series are reviewed  since this is a significant and incompatible change to most of the modules in the system. Perhaps we can review these changes and get approval  without merging until the whole set is OK'd. 
ros-planning/navigation2,607,2019-03-14T16:54:26Z,2019-03-19T20:50:30Z,True,2019-03-19T20:50:30Z,b8311a3c08ebb59894273d939c711dfee6827dad,1,3,9c0d6d1f976b905239f3b91ae519553f1a7381bd 69bbce133667cc140536c73e7f82aa27fef0c6c8 f36eb210d71cda82d7ce059826538b1c20454c90,,Checking for NAN before publishing AMCL pose,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (fixes #591 ) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points  Checking for NAN in AMCL before publishing pose.
ros-planning/navigation2,576,2019-02-22T01:23:05Z,2019-02-26T22:54:07Z,True,2019-02-26T22:54:07Z,489e6311f078458db0da683d1f47bddd18e1f865,1,2,8a6961ecdb6cdca1d3bd492b8e1299827d650521 025d4d5e7be8d0e6decf2d93ffc345b9e2dbc581,,Workaround for sliding sideways bug,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #514  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Turtlebot 3 on Gazebo |    ---    ## Description of contribution in a few bullet points    * I set the XY speed limit to a large value. This way even if the Y speed is high in the odom data  the robot continues to have X speed to maneuver with. The robot will still think it is slipping sideways resulting in a maneuver that tries to compensate  but it at least won't fail saying there are no valid trajectories.  * There is maybe an increased chance of collision due to the robot continuing to maneuver with faulty data  however  I see no increase in system test failures.    This can be reverted if ROBOTIS-GIT/turtlebot3_simulations#75 is fixed
ros-planning/navigation2,588,2019-02-28T03:21:09Z,2019-03-12T17:09:43Z,True,2019-03-12T17:09:42Z,32086c4a4c220440bc8da31378348d522bd62979,4,2,1fe52ca222eb167fcec1994bd475080097897250 392e087e2ac4c01e684c663a8bdaf16100d87c38,,Fix oscillation problem and tune DWB critics,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #520  fixes #570  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |Turtlebot 3 in gazebo |    ---    ## Description of contribution in a few bullet points    * Disables oscillation detection on the Y-axis if the robot is not capable of Y-axis motion (eg. a differential drive robot) . See #520 for reasoning.  * Rough tuning of the DWB critics to get reliable motion. I upped the obstacle avoidance critic and the rotate to goal critic based on observed motion.  * Decreased the radius of the robot based on measurements of the model in gazebo.    ---    ## Future work that may be required in bullet points    * Need to sync the oscillation critic changes with @DLu 
ros-planning/navigation2,622,2019-03-22T18:24:37Z,2019-03-22T22:47:17Z,True,2019-03-22T22:47:17Z,c84f1ad79a934b39d36501d0eea12e5a64bddf54,1,1,1e4ddb378fe1c969d6f67cd6dd4e6fa989a2a22b,,Printout should be error instead of info trivial change ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 |    ---    ## Description of contribution in a few bullet points    * If we fail to find a valid trajectory  the message should be an error  not just an info.    
ros-planning/navigation2,617,2019-03-21T00:10:43Z,2019-03-24T18:12:10Z,True,2019-03-24T18:12:10Z,70729ac5d8c33750acf34c2a9ef86caf293f065c,1,1,54ff061016c0ef4fc16178b3172226e6bd9eed8e,,Costmap static layer to subscribe to map with default QOS settings,## Description of contribution in a few bullet points    This changes the map subscriber QOS settings from custom to default for the static layer. This is already done in AMCL  so this is consistent with AMCL.     The benefit of this is that now the static layer can be updated by other map publishers such as cartographer.    ---    ## Future work that may be required in bullet points    I'm not sure if other QOS changes are needed elsewhere in the stack. There are some other places where custom QOS settings are set.
ros-planning/navigation2,619,2019-03-22T17:27:09Z,2019-03-24T18:13:10Z,True,2019-03-24T18:13:10Z,4916c8192574e47547b9a14137f12daf6fc72648,3,3,3a475639bd469fe2e73ff9179ae27dae4342b0cc d18f1c3ea64d86ebfc941703a0bf3a2117d51241 49c3ae3764593f36dd34dc07e85acc6ab67b53c3,,Add last pose to DWB trajectory,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 |    ---    ## Description of contribution in a few bullet points    * The trajectories generated in DWB should include the start pose and the end pose. Instead  the end pose was being left off. This was particularly problematic because sometimes there are no intermediate poses. This PR fixes that problem
ros-planning/navigation2,620,2019-03-22T18:00:06Z,2019-03-24T18:13:40Z,True,2019-03-24T18:13:40Z,35f2e36b65976bf049e79d7e9f2f91456f208528,1,1,f14a9c4614bb7b3ba18f8ba21dbc797421956512,,Change DWB trajectories displayed in RViz to be on the red green spectrum instead ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 |    ---    ## Description of contribution in a few bullet points    * Changed the color of DWB trajectories to be change from red for worst trajectory to green for best  with intermediate trajectories being some mix of the colors in-between.    The old color scheme was intense blue for the best with the blue fading away for the worst. This made it hard to see the worst against the background  or to tell if they were just missing.    Invalid trajectories are still black.  
ros-planning/navigation2,623,2019-03-22T18:43:37Z,2019-03-24T18:13:54Z,True,2019-03-24T18:13:54Z,c4937833b3411828069bd88c79745a73de14ddaf,1,4,88534b454f7d56a0b03257ed939d8a81527abeec ff1d15256276cf156027b6b3fe9a7ccfffad790d 1b657aa5e4c971cd6073c8ec099b973db79883f6 cac2901c05f5c01a305d0d5aad07ecdc3738cf42,,Param tweaks,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB2 |    ---    ## Description of contribution in a few bullet points    * Adding to yaml file some parameters I find I felt the need to tweak.  * The only actual change to the parameters is the ObstacleFootprint.scale. The others are just restating their default values.    
ros-planning/navigation2,626,2019-03-22T22:12:11Z,2019-03-24T18:14:13Z,True,2019-03-24T18:14:13Z,03e705cd5b3670beaced7711d182682128912eac,1,3,8bef7d64e2b6716ae633185f2643a520829843bc 84bdec6261776dd596faee45a95a603650b1e0b1 e7bc351d77c7ce43660f308a262144582599c7d5,,Prune start and end of plan,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 |    ---    ## Description of contribution in a few bullet points    * Neither the goal oriented critics  nor the path oriented critics do a very good job of getting the robot to follow the plan provided by the global planner. This PR changes the goal pose to be a short distance away on the path rather than at the very end of the path. This has the result of encouraging the robot to follow the plan rather than let DWB decide for itself how it wants to get to the goal.  * This PR takes care of the prune_plan functionality already in DWB to prune away all parts of the plan that are beyond the prune_distance from the robot. This leaves the furthest point on the plan that's within the prune distance as the goal passed to the critics.  * This change rewrites the pruning  transforming function using STL algorithms instead of while loops with breaks and continues. The odds of getting the logic correct on the first try in the latter case seemed unlikely.  * An alternative that might achieve the same results would be to make a critic that encourages progress along the path.
ros-planning/navigation2,627,2019-03-23T00:02:27Z,2019-03-24T18:14:25Z,True,2019-03-24T18:14:25Z,bbbaf6d0cde05e89db871601677f134a823e13b3,1,1,6d3eff9e74cd536a838ca24dab835374b713b3f2,,Localization test should publish only once ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | System tests |    ---    ## Description of contribution in a few bullet points   * test_localization was publish intial pose in a tight loop. It should only publish once and then wait for a result. This was resulting in huge amounts of messages like below in the log output  ```  [amcl-5] [INFO] [amcl]: Setting pose (1553299060.487872): -2.000 -0.500 0.000  ```
ros-planning/navigation2,624,2019-03-22T18:44:17Z,2019-03-25T20:42:10Z,False,none,659721012912e4cd1769235daaf14868c6b87c05,10,3,45a5ef8d86f5800601384132f70689578d97dcdc 66c84d9189ac29fa10fc1a9928efe3e562af699f 367ea29881d8d635ef6fd919c323d85318416777,, WIP Enable Obstacle Layer on Global and Local costmaps,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (fixes #613 ) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | () |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  WIP -- Please do not review.    - Created a method in obstacle layer to enabled both Global and Local obstacle layers.       - Local costmap gets enabled at start. The global costmap gets enabled when robot is localized to prevent putting garbage on global costmap.  - Factored out isLocalized method to util directory to check AMCL pose to determine if robot is localized or not.     -TODO: isLocalized method still exists in is_localized_condition node within BT  will factor this out on a different PR.            ---
ros-planning/navigation2,621,2019-03-22T18:17:29Z,2019-03-26T20:27:30Z,True,2019-03-26T20:27:30Z,b4f987108f1077fba5954f81011fc16ce6e7f52d,1,5,819644f560f8c3cc36c0407496b4e08e51ecccba 3fef45d335d4dd9c196331d5aaf931a0cb204f48 e6a91006caa0dbbdfe68f929e8843672e081ca9e b5b3123eeecc9e7a01f9ce07140a30cdf97f6944 5908ebac3d4fc45d8e52dfd1cfd0992d5437320d,,Rotate to goal fixes,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 |    ---    ## Description of contribution in a few bullet points    1. Scores need to be positive  so this takes the absolute value of the angle error.  2. Ignores Y velocity on differential drive robots. It's just IMU noise.  3. Reset flag that enables this critic once we are in range again.    1 and 3 are already fixed in @Dlu's repo  but in a different way. Soon I hope to rebase and I'll take the upstream changes instead.  2 is related to our noisy IMU in simulation (see #603) but should probably be upstreamed in some way.  
ros-planning/navigation2,632,2019-03-26T17:02:31Z,2019-03-26T20:48:15Z,True,2019-03-26T20:48:14Z,1a8e823cb672f6642b37486403c15c66bd496ce3,3,1,8f4543ca80e5f588c91fd24a58d28a01751685c6,,Add parallel planning and obstacle layer ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Turtlebot 3 |    ---    ## Description of contribution in a few bullet points    * Switches the default navigator to bt_navigator with the parallel replan configuration  * Enables obstacle layer in both global and local costmaps. This part duplicates what's in #630.    
ros-planning/navigation2,630,2019-03-25T20:52:44Z,2019-03-26T20:39:10Z,True,2019-03-26T20:39:09Z,a76e01d3b1a5a9fe5caec18be29705132764ce59,4,6,0f40a58ba87d672c2f19d03cb2b0e05135533fec 73c24bcca45c8d3ed79d42989c2c02b3c8a8a679 4e50546c962ca1253ccc0bc65da19554292a1f75 8794c9597a36aa7388cf93ee6cd053332245c531 cfa170c9b95c21343f2475653636b78de46a46ba 52f382cde0b79067c678cec7728e53750475c8ce,,Enable Obstacle Layer on Global and Local costmaps,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (fixes #613) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | () |    ---    ## Description of contribution in a few bullet points    - Changed AMCL to not broadcast transforms before initial pose is received either via initialpose topic or later when pose from server is available.      - This way robot knows it location with respect to map before putting obstacles on map.  - Enabled obstacle layers for both global and local costmaps    ---
ros-planning/navigation2,625,2019-03-22T18:54:50Z,2019-04-01T16:52:17Z,False,none,04777c9476c6fb32ddb159ddebfb31475bdb82e7,2,2,6783242908b07ca3ac92a9bb3b6729b7cd1c0e5a 405bef3e33e9d72a2c9c102c0aa88899595fb8ed,,Ignore goal alignment if we are far away ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 |    ---    ## Description of contribution in a few bullet points    * This change disables the goal alignment critic if it is too far away from the goal. If we are far away  we don't much care how well we are aligned with the goal; we are more interested in being aligned with the path.    I'm not entirely sure this change is needed. Other changes made a much bigger difference. I'll do some more testing before actually merging this PR    
ros-planning/navigation2,612,2019-03-15T23:47:11Z,2019-04-02T22:16:26Z,True,2019-04-02T22:16:26Z,1b13246d5b39366bacc566688f0f50bd45ae50f3,12,4,9d94d05eed4e99dba42fb163536d5d8a3820f664 ad8bb09f0930705619e8133e90cc0266ca020bac 950643d870bc360b2fecf9030719de118ac28856 adfacd64cfe301427cc552e0a9d92ebc466ab02f,,Temporary nav2_lifecycle and an example lifecycle node,## Description of contribution in a few bullet points    This is the first PR in a series where we will integrate lifecycle functionality into the `navigation2/lifecycle` branch. The intention is to submit the work in reviewable chunks. The result won't compile until several PRs are integrated in this series.     This PR has a (temporary) nav2_lifecycle directory and an example lifecycle node  the nav2_simple navigator. The nav2_lifecycle directory will be obsolete once we get several fixes introduced into ROS2 (see #608).     ## Future work that may be required in bullet points    * There will be several subsequent PRs in this series to lifecycle-enable all of the nodes in the navigation 2 stack
ros-planning/navigation2,643,2019-03-29T20:38:29Z,2019-04-03T23:52:54Z,True,2019-04-03T23:52:54Z,7b4cd35abd71d44547e286fcda425f368a5229a6,1,2,bbef5579184f5dcf40934cb7d25e7916f8b149f1 5c4eb35ebaa47886d83de1049ad4ccd859ac92d1,,Disable failing dynamic params and motion primitives tests ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on |  |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points    * Disabling the motion primitives and dynamic params tests. They are constantly failing in CI for yet undetermined reasons.  * If you run colcon test from the command line on the workspace the tests will still be run. They just won't get run through the run_test_suite.sh script.  
ros-planning/navigation2,634,2019-03-26T21:48:24Z,2019-03-26T21:48:35Z,True,2019-03-26T21:48:35Z,015cf65aabded894e20bec8bcc2bc68b23d89988,2,1,432d04746e5af029a976b748ceb4be61e1532c39,,Revert Add parallel planning and obstacle layer ,Reverts ros-planning/navigation2#632    It's too soon. We need to work out some more issues with this tree before it goes in master.
ros-planning/navigation2,639,2019-03-29T02:09:11Z,2019-04-08T16:29:01Z,True,2019-04-08T16:29:01Z,25a8f23fb47864b2990b21f6c45bcc32eb8d6bed,2,3,19c62f62aacf42738b7bb3de2d4356e956767021 22117289c47edcd4e9e94d84c1bfacb14a85c027 8a7ff5956bf51f8178a20158e5490cf77701fa2f,,Set atomic_bool on StaticLayer has_updated_data_,Signed-off-by: vinnamkim <vinnam.kim@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #636 ) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (gazebo simulation) |    ---    ## Description of contribution in a few bullet points    Fix data race condition between map update thread and ROS callback thread.    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    ---  
ros-planning/navigation2,652,2019-04-09T23:38:51Z,2019-04-09T23:46:09Z,False,none,f11d22a9c1f5740c37385b6ac21ff6629c6ca31a,5,1,50080d34c881d827a8f17f054b40af71525fce63,,Port AMCL to lifecycle nodes,## Description of contribution in a few bullet points    * Port AMCL to lifecycle nodes  * Extensive reorganization in order to cleanly work with the lifecycle node callback structure
ros-planning/navigation2,610,2019-03-14T20:27:53Z,2019-04-17T21:41:28Z,True,2019-04-17T21:41:28Z,837bbaf16276e4bc68464493ee07c661b8227ce2,2,12,fabbd2e39edfdb5eb6360c067f42916b22b874d2 f74d3a03c9ae787b8b7d01b8bba132f51eb2b18f 8f913092914e9535f1b4ea886a6db96332d227bd 51e12229704e0d098a7a8b0dfc0e1877724f26dc 124f2abb925782a857d48f5a8401f2bd1d3a6cae b9b95fb698884276d5c71c2e88097d80be640d6a e7b4e0cdf526dc418acc9bffdaffb3648fbef7e2 c2ca1f236b3449ec5c8a0d48d2c051f9883afc6a 71ba99bc1553a1c8a5d8a8891df9cd55420f1fb4 8487d606e27d1b8d231856d85eed541134a8794d dca5fa6b132f4c47bdeacca6bd5d6af74cb3bf0a 1362adea5988849a7838ee2e002af8b7e39b092e,,Amcl laser received callback,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #169  |  | Primary OS tested on | Ubuntu 18.04 |  | Primary platform tested on | HP Desktop |    ---     ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  ---   **Will merge after internal release.**    This PR re-opens PR #310 which addresses issue #169.    - AMCL's `laserReceived` CB is long and hard to follow.  In this PR  I've created few helper functions for `laserReceived` to improve the readability.     ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    ---  
ros-planning/navigation2,509,2018-12-21T20:13:26Z,2019-01-02T21:34:51Z,True,2019-01-02T21:34:51Z,066034fadff8013af328388e068b1bbc499ae5bb,4,5,b2dd52fa8b48ca386a134cf9fbab284b0d2517db c9187b9afb1c9e73e44e58d679b41b03e16cd4f4 fe29b429d0d75d3bb9c1b7c12e806ff2cf47621b 7fa01e4465e46b13081dd1b84de49c211b856fda 56cf21339f5d736392c76a688933556df1f3836b,,Amcl readme,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (#506 and #507) |  | Primary OS tested on | (NA) |  | Robotic platform tested on | (NA) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    - Updated AMCL and BT Navigator README files
ros-planning/navigation2,105,2018-09-26T23:53:36Z,2018-09-28T17:40:49Z,True,2018-09-28T17:40:49Z,c4f8b65eff8f9e6fa9f50f9207e8c454fd7cbd30,13,5,87f054bbe68a2d3b75de2b00719ada05b82ea211 bdf885ea622ba0b7e365e145f14dbc9744874ca0 1b6a7f89d4f9b2f772347384d450376daa5f46b8 cd302b9831fed9ec7038bcb441897e7d13679864 ac9431a12961b3e54be848606e408492398f74a2,,Amcl integration test,Simple integration test that checks to see if amcl is publishing a pose that is a number. Addressing issue #53.    As we continue the re-factorization more tests will be added.  Also  planning to create a separate test to measure algorithms performance.
ros-planning/navigation2,134,2018-10-02T23:50:13Z,2018-10-03T16:37:59Z,True,2018-10-03T16:37:59Z,5aedefacf035224c7ffab419cfe42130cc54b8f7,24,4,e578ad0f4f0f7877ffdcb4ee997b77c50a307425 1092d3c2e78718907384f625d641ad00c56f3f05 e67ee003f0bcbe3f41c22a3a85fb1e03c8c0232a 1d90fec04c818525ce60f4229bd9fd505493c9af,,Amcl ctest fix,Addressing issue #133.    This PR fixes all the linter issues in nav2_util directory except warnings for map_loader and costmap.    TODO(mhpanah): Find original source file for eig3.h and put a correct license file in it.    Question:  What to do with map_loder and costmap that are residing inside nav2_util?
ros-planning/navigation2,247,2018-10-26T21:35:36Z,2018-11-02T16:00:18Z,True,2018-11-02T16:00:18Z,6deaca5f56788ae896a49f4bfadd9a493370122c,18,11,dc88db8d9792ddad416f5e97dfbf607ee78a0373 e870fcefa89677db9ee5571b5708ff2d7c90080d 7169ae82cb29713c01ff4c275b6c096276f0e66c 76ba1641a353e52e93d0eeebd37a1796b10dd513 908cd452e7a094b76c398211bf57d10a782c8310 3621210075d70a2bf940520c25cb81bdaab50619 3542727563f975f55459b715067cdc671f973239 fc4c22242b3caf125b02fff8252ea72d82fd0c47 ccd0d0130dbc910d666af489dcb5df863d69d5d1 4af87d8ee7c70b28161509203d6675ea6e7fddf0 e9bceed6a8084524e877a3a950d784a8418bd175,,Refactoring AMCL,Addressing issue #236 .    - In Probabilistic Robotics (PR) textbook  odometry is treated as if it was a control signal  thus it would make sense to bring out odom class from sensor base class.  In this PR  I created  a base class called `motion_model` and two derived classes `differential_motion_model` and `omni_motion_model`.    - I also created laser based class and three derived classes  `beam_model`  `likelihood_field_model`  and `likelihood_field_model_prob`    - The plan is to also create a base `sensor` class and have the `laser` to be derived from sensor class.  However  currently the way in which the AMCL is written creating base `sensor` class does not add any value.  Once we refactor amcl_node we can create a `sensor` class.       - Also  factored out `angle_diff` from AMCL.    TODO:   - refactor amcl `laser_received` callback  and see if it make sense to create sensor base class.    - Do the remaining items in #236    - utilize smart pointers to create laser and motion model objects.     
ros-planning/navigation2,291,2018-11-06T18:59:32Z,2018-11-07T21:06:14Z,True,2018-11-07T21:06:14Z,5b00f4a8c1486956cc2e00252e6f0f5b67ab8c2b,4,7,b7d60042467e6694a42b9880397388f7f55a4c5e ebaaa40ea4126411dca4167bc9784dc8b61b66ed 41fa4befeedf75dc617a402b31fe5ac295201920 12925e5d6da79ef711129dfdb5f166ef6a39c18b a27f441e4dbd03c462c40e4b76b7680e834202b3 4ffbd068755f5dad57c415ede910556ebe6b584e 4d96c6b3da5fe2095a3a26a6dd2a97dd813d716d,enhancement@1 - High,AMCL Enabling dynamic reconfigure 209,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (#209 ) |  | Primary OS tested on | (Ubuntu 18.04) |  | Primary platform tested on | (HP Desktop) |    ---     ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    - created `initAmclParams` and moved all the parameters from constructor to `initAmclParams`    - Enabled dynamic reconfigure option to be able to change parameter values dynamically    - Removed the `runFromBag` function.    - Since currently we don't have parameter server  I disabled `updatePoseFromServer` method and opened ticket #290 to address this issue.      ---     ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  ---  We need to address #290 which is important for some applications.  
ros-planning/navigation2,292,2018-11-06T22:13:16Z,2018-11-07T21:30:48Z,True,2018-11-07T21:30:48Z,45e5023834978f9b0052f81972f214c0bbab103a,1,1,47ff74d26ef0467777b8d31c879e53abc369b288,nav2_localization@2 - Medium,Cleaned amcl_node header file,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA|  | Primary OS tested on | Ubuntu 18.04 |  | Primary platform tested on | HP Desktop |    ---     ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---   - Removed unused codes from amcl header file.    
ros-planning/navigation2,347,2018-11-20T23:12:33Z,2018-11-21T17:31:52Z,True,2018-11-21T17:31:52Z,838b2066260a42d80ef7073d1dd997cadd5e3340,4,6,f31d5ea56a10172084fbac57cf0f776c503e7990 ecb88ba1ffce9283fe4784e8841d079a89a8c0bd ed2b0cf17331cd0e76a46508311b6eda0bd4eb61 f68f2de224af6c34a4d638aae8b0f66c9d9f8630 01ddbbd4871588fa2b0c211942852dedea73100c b2af67898053cdc06be21a642788e54a4d69f645,,Amcl bug,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | 18.04 |  | Primary platform tested on | HP Desktop |    ---     ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  Particle clouds were diverging because during refactoring the laser class  `map_update_cspace` were left out from the `likelihood_field_model` and `likelihood_field_model_prob` classes.     
ros-planning/navigation2,432,2018-12-06T02:08:40Z,2018-12-07T00:52:52Z,True,2018-12-07T00:52:52Z,7bddbc269d067e3ddaca30ebec9f346bc7d1cb09,1,1,bcf2a17c802601149995885090571ec034c47c11,,adding timeout to service_client,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (#426 ) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (HP Desktop) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    - Added optional timeout to `service_client` addressing issue #426.
ros-planning/navigation2,669,2019-04-18T22:58:25Z,2019-04-19T17:29:20Z,True,2019-04-19T17:29:20Z,3ec2662dd9bbc29a26023833980fb47eb1106a3c,1,1,6252122aaaa03646f20dc81653af7dc2f2cb98cb,,Tuning parameters for turtlebot 3 ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu 18 |  | Robotic platform tested on | Turtlebot 3 in Gazebo |    ---    ## Description of contribution in a few bullet points  * Default linear_granularity was 0.5m. This seemed too long a distance to look for obstacles. The turtlebot seemed to clip corners with the setting at the default.  * Replace the obstacle footprint critic with base obstacle. When using the inflation layer in costmap to make obstacles bigger  base obstacle should be sufficient to prevent obstacles. We also saw strange behavior with obstacle footprint that needs to be investigated further. It reported the robot had collided when it clearly hadn't  even according to the costmap data.  * The turtlebot3 waffle is our main model we test with. Make the robot radius match that platform rather than the burger model. Since the wafflehas a larger footprint than the burger  it is a safer setting anyhow.  * Changing the inflation cost scaling factor to match what's used by the turtlebot in ROS 1. This setting causes the robot to give obstacles a wider berth if possible.    ---    ## Future work that may be required in bullet points    * Investigate why the obstacle footprint critic reports a collision when there isn't one.  * Investigate why the inflation layer inflates such a small amount when using a footprint polygon instead of a robot radius.
ros-planning/navigation2,668,2019-04-17T22:03:10Z,2019-04-19T22:19:10Z,True,2019-04-19T22:19:10Z,ed8b39f4088b5d88ec7410e706c9dbbeabee4837,1,1,b4d05db850f253c251bf6be50eb3f9d5a4d71700,2 - Medium,Change footprint_sub topic to dynamic_footprint,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation/issues/885 |  | Primary OS tested on | Ubuntu 18.04|  | Robotic platform tested on | turtlebot3 simulation in Gazebo |    ---    ## Description of contribution in a few bullet points  The footprint subscriber in the costmap is subscribing to the footprint topic with a different message type (geometry_msgs::Polygon) than is being published (geometry_msgs::PolygonStamped). Due to this  running with the Opensplice DDS implementation causes the costmaps to crash. This change makes the default subscriber topic "dynamic_footprint" instead of just "footprint".     According to this issue:  https://github.com/ros-planning/navigation/issues/885    These publishers and subscribers are performing 2 different things. The publisher is for visualization using RVIZ. The subscriber is for making dynamic changes to the robot footprint  such as when it is pulling a cart. They are **NOT** meant to be connected together. So to me this implies the default topics should be different.         <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    ---    <!-- OPTIONAL -->    I'd like to request maintainer: <blank> to review this PR.  
ros-planning/navigation2,672,2019-04-19T22:39:44Z,2019-04-20T00:27:38Z,True,2019-04-20T00:27:38Z,e041eb5b5a98a33281a106d402bf8998681174f6,3,1,5fa4c6722ba7063c11b4ec1b1f63c9b40945aee1,,Clear entire costmap from BT,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | () |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (Gazebo simulation) |    ---    ## Description of contribution in a few bullet points  - Created a service client in nav2_tasks to invoke a service call to clear entire costmap.    - Created a simple action node in BT to be able to clear entire costmap    - To clear global costmap from BT:  `<clearEntirelyCostmapServiceRequest service_name="/global_costmap/clear_entirely_global_costmap"/>`    - To clear local costmap BT:  `<clearEntirelyCostmapServiceRequest service_name="/local_costmap/clear_entirely_local_costmap"/>`  
ros-planning/navigation2,670,2019-04-19T00:35:15Z,2019-04-22T16:43:54Z,True,2019-04-22T16:43:54Z,af739b58e27effdb3166154dd0566316072072d2,6,8,19e65350a3eb281d82ce75448c9ed8a946197a1c 1a3ac459cb07db35d0675a1c94c888fe822de585 fa541def4b0b51b32cf472a94a01ff6d7ef63645 704e1b7d0109a1fdf1228a38e58ea8f884b1234c a6a25235fcb3d4b44d0796a70ae9312ebd1174a0 4ff5af5d0fe70dd6822cf02d7cc6ad86b9afa64d f4c045dd0ff948e92987b4d83d029ea4b53ef246 abd73f18be853978f7a41fdeea017b6cc8ed1af0,1 - High,Enable Behavior Tree navigator with recovery and retry,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #642 Enable Recovery Actions |  | Primary OS tested on | Ubuntu 18.04) |  | Robotic platform tested on | Turtlebot3 in simulation |    ---    ## Description of contribution in a few bullet points  This changes the default navigator to the bt_navigator and adds a behavior tree for running with the backup and spin recovery behaviors  and a retry set to 7. I know that's high but in simulation  it seemed to work most reliably that way.    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    ## Future work that may be required in bullet points    - Add parameter to the launch files for changing the behavior tree XML file. I tried to do this but was getting errors from launch    - Change backup and spin motion primitives to check for clear space and ensure no collisions occur    - Add a clear costmap motion primitive and enable it as part of this     <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    ---    
ros-planning/navigation2,673,2019-04-21T09:33:22Z,2019-04-22T20:22:15Z,True,2019-04-22T20:22:15Z,5e7c4661e9e317a1d4d3d0c4292861d8165dc953,6,3,29dad202a7781ce733b14182b6d855dd358676dd a9c029100c4aded3eef7b8d4c7ede79db0427992 b602fd564841f4dc51376c1504727d1a4df60cc5,,Adding a check to DWB controller to return failure if it can t make progress ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 in Gazebo |    ---    ## Description of contribution in a few bullet points    * The main controller loop checks that the robot has moved at least 0.5m every 10s or else it returns failure so that recovery actions can be attempted.  * The distance and time are configurable parameters.    ---    ## Future work that may be required in bullet points    * There is nothing DWB specific about this check. I think it should be a BT node once we figure out how to cancel an action from another node.  
ros-planning/navigation2,671,2019-04-19T21:27:30Z,2019-04-24T17:37:14Z,False,none,9f107db5bb845514ef5d8672ac8d637a976b50f5,3,4,0dd95bb421b2fb331210fb13cfc5ba09d4290b02 38b749b7da2a19c4d08b1167757323d0d4ff0baf bf68793ce8b44fac91cb831308bc27c3142bc578 b6fcfe00e67f9e316af31ff2b83e3e8f1d7b74d0,,Do not process Y velocity in differential drive robots,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #514 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB 3 in Gazebo |    ---    ## Description of contribution in a few bullet points    * ROS 1 move base does not pass on the current Y velocity data to diff drive robots. This change matches that behavior.  * This also backs out a less general workaround that was introduced previously.      
ros-planning/navigation2,662,2019-04-16T22:24:09Z,2019-04-26T23:53:24Z,False,none,8d61843aa3632d5029e0a176bcf6a2f0590d887b,8,2,22874af0724ec2fd0dcdba0a0e7289dccae84ede 9515bf0c5e7ca89d94a2df68648d9de9f57ff099,nav2_lifecycle,Add the lifecycle controller,## Description    * Add the lifecycle controller that manages the lifecycle-enabled nodes    ## Future work     * Simplify/generalize the controller code so that it simply works with a list of node names  * Change the name of the node (avoid "controller" term")
ros-planning/navigation2,677,2019-04-29T22:23:56Z,2019-05-03T22:25:53Z,True,2019-05-03T22:25:53Z,826163201f906ecf24586029742b04377d17e282,19,5,bd8da4792149dce461567036abe6ce084b290fc5 fc05e72bbb4263969ffe6307d3be7206fe7bb110 ba1df6cade12e7dda47e0cd5d1088a7f9c8d0bbf 3793f02ef9b8f11a0f5e1f07da3dd19ff2b52017 8ca4c45e7e6beb1b06590bd496c65bca69b56216,,Add default NodeOptions to fix new parameter changes,## Description of contribution in a few bullet points    - Temporarily fixes master branch after rclcpp parameter changes  - Adds default NodeOptions to nav2 Nodes with parameters  - Defaults to automatically declare initial parameters (from yaml) and to allow undeclared parameters  - added function in nav2_util to return default NodeOptions object  - Temporarily removed error for warnings to allow for deprecated parameter functions while we are in transition      ## Future work that may be required in bullet points  - These changes can be removed (or modified) after we integrate lifecycle nodes with parameter changes  
ros-planning/navigation2,685,2019-05-03T21:44:20Z,2019-05-03T22:31:37Z,True,2019-05-03T22:31:37Z,aece3f6877d2494f7054600a0aebc220ba4aecda,6,2,d23fbe5b3f487d6c0346cd90550eeaa4aaa7d66e afa2c4e80c7821687351086051daf9369886716d,,Fix launch test service import ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * ros2/launch#215 changed the launch test facilities. The old LaunchTestService is now a legacy interface and needs to be imported in a new way. These tests are broken without this change.    
ros-planning/navigation2,684,2019-05-03T21:15:05Z,2019-05-06T16:02:01Z,True,2019-05-06T16:02:01Z,815572c76fed7b61ae36550efe74a8471dff9dbc,1,1,d8109c5a1dd6ce205bf9cda2c3d28b7669709a67,,Restoring proper upstream repos ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Gazebo TB3 |    ---    ## Description of contribution in a few bullet points    * These upstream repos have taken the fixes I provided and build against the latest ROS2 code now. This change uses the official repos instead of my forks.    
ros-planning/navigation2,657,2019-04-10T17:44:33Z,2019-05-06T22:02:06Z,True,2019-05-06T22:02:06Z,829bfd4f722246645f827d36bb17ef701d85305e,1,2,7a9fdda24271bb6bd6e1aaccda391eb8d4c56a7d 1298294c29ceae2f5e6f2b76287738e689fbd8ba,,Adding missing dependencies in the nav2_util CMakeLists txt,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #656 |  | Primary OS tested on | OS X |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * The nav2_util CMake file is missing some `add_target_dependencies` statements. Shared libraries need to link with their dependencies. Sensors_lib has a dependency on pf_lib that was not specified. For some reason this did not cause a problem on Ubuntu 18.04 building with GCC but does cause a problem for Clang on OS X.  
ros-planning/navigation2,689,2019-05-07T21:21:17Z,2019-05-09T21:35:37Z,True,2019-05-09T21:35:36Z,8da4958d59cdd367c02388e6ef21ff3519175447,3,4,ec9487a7de91b3aa83e2797acafe517fee447367 9ee2248d87892a347227aef9fe309775161ff117 02a1236bc01f894b43bd837aa4c46a8ea8495067 a2f989348b441d9d99c85fd8711a5a5e830f12f8,,Enabled parallel global planner,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (fixes #641) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (Turtlebot3 simulation) |    ---    ## Description of contribution in a few bullet points    - Created BT tree to enable parallel planning    - The global planner will not replan if the robot is within a close proximity to goal. The user can decide what the tolerance should be.    ---    ## Future work that may be required in bullet points    - Currently the goal checker is being used in DWB  BT  and system tests. We need to factor out goal checker to utils so that it can be used in other modules    - Probably a better approach would be to create  a "goal checker" node and have other modules to listen to it via topics. This way  the goal checker would be modular and can easily be replaced with something else.    ---  
ros-planning/navigation2,683,2019-05-03T00:02:49Z,2019-05-10T22:00:16Z,True,2019-05-10T22:00:15Z,396048cffeb257df8bca3dcb035d73a8575e1888,12,12,62a9f8765205ea80ad97e07a82ca79838494f567 427d53aac223b49dab2eeede58a8ea62f93bc68a d6f2ecafc71bd8adb27be87616c017bc992f6ba2 34972bc8881a9e411ff67dacabfb219145f1d2a8 ae82644ef0b66c481c0c8b1bf80563169ca387ae 8b53c5abf67e5a1793a1ec4710ce1562adc9d233 59cc3ac53edf6afaeac1caeba9ad7e95bbcfcf16 281de56218b481326b045d0d9974f10f78a804fc 5239297c9f236db3162c4ad6687f6967e60dee88 66197005fad2306de80c563635d3f508758aeed1 91b9eccadc947c25bf0c6956ba195240a55dc387 5f0e1e1bde3a2abed90a44de4005119252bb7278,2 - Medium,Experimental Random Crawl task implemented with Reinforcement Learning DQN ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (fixes #631) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (Turtlebot3 gazebo simulation) |    ---    ## Description of contribution in a few bullet points  Utilizes Reinforcement Learning to make turtlebot 3 to randomly crawl around without hitting any obstacles.    ## Future work that may be required in bullet points    - Improve collision detection method. Currently  the collision detection is based on raw laser data which can be noisy. This noise sometimes causes false positive collision which needs to be further investigated.    - Improve reward function    - Add other RL algorithms    - Will add more documentation regarding the reward function  
ros-planning/navigation2,701,2019-05-10T21:52:05Z,2019-05-10T22:09:54Z,True,2019-05-10T22:09:54Z,c06c617acfa546539559f39e479b41a88ae9ac2f,2,1,4f100b783bc5b9a1c9d664b031a97ef9cc0733c5,1 - High,Get the build working again,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points  * An upstream PR seems to have added an extra semicolon in one of the tf2 headers. This PR disables the warning generated by that file
ros-planning/navigation2,655,2019-04-10T03:00:27Z,2019-05-11T01:14:35Z,True,2019-05-11T01:14:35Z,1308a5925dc8a023c71183d524b7983690e4f85e,38,3,52f2dd1f56d59a24228e879e830468d3ea6d6537 fae4093f9845330ba8a0e741c1fd39c350e65cd2 b699d2e788e39ef8f990c2e6ae54ad577740b42d,nav2_lifecycle,Port the DWB local planner to lifecycle nodes,## Description  * Port DWB to lifecycle nodes
ros-planning/navigation2,708,2019-05-13T17:15:20Z,2019-05-13T18:17:47Z,True,2019-05-13T18:17:47Z,20246992511c4c6a950cd5844b6497b493e5d218,14,14,ed76f58eb1bbb9c5bafaed1364be65c45336a35b 7da91657d5ac05cd8b8260c6c610cdb163d0503a 352de4279e318bccdb234c72a14ea7577ef64a86 68cff981b7190929185f54f5c19206ce4ecb7dbc 21e2eccd9f3805043b36a039e95a7e70093b33f8 0b32bf944beaa708e358d96a8dc8e05e9d388c35 3068dde87b20c370e0481a1920b1f896b32e4774 7e260db84914ddc93510a958868efb275a019884 e1152ecfedaf6f2d0e8546e7f78adc60c2b0c9ee 0dd0a2e1cc9086421437eff33e739cd6374182b0 d1b343c9ed093e4d2f808b702966e2e5c4146f8a 2e4aba8f8fade1fb8a1d1dfc5515c7fd128b99a9 f5f9a3e249de83be2e99c67670eed61574ab9096 e832816b0349cf101b0803f6eb082848c93f0a73,,Fixed CI failure for PR 683,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (#683) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (Gazebo simulation) |    ---    ## Description of contribution in a few bullet points    -Corrected package dependency name for Keras and Tensorflow  -Updated package version number  -Added missing resource file    ---  
ros-planning/navigation2,693,2019-05-07T22:33:57Z,2019-05-14T16:56:10Z,True,2019-05-14T16:56:10Z,841c4aa08ab672fc8d182a50c8635e6fd53e28e1,1,2,0ddd98e8e4d0411e12c6e47486ac28e556925a8b bc7a45c3c8f8cf19e9f7d7fccea20c3bf340e3b6,,Default to a release build if unspecified ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Sets the CMAKE_BUILD_TYPE flag to Release if it was unspecifed. Without this  if the user doesn't specify  they get an unoptimized build with no debug info - the worst of both worlds. I'm defaulting to Release because if someone just downloads the source  builds and runs it  we want their code to run as fast as possible to avoid them reporting performance related issues; robot motion can become unstable if the controller doesn't run fast enough.    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    ---    <!-- OPTIONAL -->    I'd like to request maintainer: <blank> to review this PR.  
ros-planning/navigation2,674,2019-04-22T19:52:28Z,2019-05-14T17:05:10Z,True,2019-05-14T17:05:09Z,de07f90aa8f67cc5e508d6928f3659d54dce9cf5,5,5,2ab79963ba9fa514a59e08301e3471ec1a6dd437 4283819ce6353ed6acd7689aa9621be96ac64859 ee9de375eac2915d920e7f0737075966bb2c1ecf 920bac12b287502ca3e9cbe52267aff9d52d7f2f 2f93bcaaf87e7f5c915314a2097c6d080e8bb093,,Filter out IMU noise,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #514  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Turtlebot 3 |    ---    ## Description of contribution in a few bullet points    * Velocities from an IMU are likely to have a small noise component. This noise was getting filtered out in individual trajectory critics by removing any values below a threshold value.  * This PR removes the filtering from every critic that cares and replaces it with a single place to filter the noise out.  * This PR also makes the noise filter threshold configurable in X  Y and theta.
ros-planning/navigation2,695,2019-05-08T21:34:59Z,2019-05-15T00:26:51Z,False,none,63cf7b80b4d3d1c438c1f60bc646ed3f5e924d13,15,1,96a19105de49a24ad6eecb453a3df80ec9855145,,Fix launch file to use the correct naming convention,This allows tab completion to work when you run `ros2 launch`. The name should be `.` and then `launch.py` not `_`    
ros-planning/navigation2,722,2019-05-15T16:57:42Z,2019-05-15T21:11:32Z,True,2019-05-15T21:11:32Z,f32a6e50f66b963392a731212883adcce6f22a47,1,2,d11ac7405735503d8a637e6a2c3998f80bffcdd7 c622da2d59e85ab3f805862dc4c430899e5aa9cc,,adding warning readme to the nav2_experimental package,N/A
ros-planning/navigation2,724,2019-05-15T20:42:17Z,2019-05-15T21:44:33Z,True,2019-05-15T21:44:33Z,72b089b45f180a797168d77a44daa7b2afd6e2fe,4,4,adccdf0e56bf2b36c10a6b4b98b3ed0c7ec305cf 792ef45dd3b940e5b947bfd0ee263fa8ab9cb376 87a014ba8cc90e63c4a264c3faa41b5b6a88a10f d0cfc0f3ca6d9f4970242954ce76dfabb7b95a8a,,Last readmes,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/176 |  | Primary OS tested on | N/A |  | Robotic platform tested on | N/A |    ---    ## Description of contribution in a few bullet points    * Filled out the last packages requiring readmes from ticket #176 (wow  that's an old one).    ---  
ros-planning/navigation2,721,2019-05-15T16:45:19Z,2019-05-16T00:31:18Z,True,2019-05-16T00:31:18Z,af6b8cdd50c321274fb991936cb9813db26ad485,12,3,1687dfb828fba371332ddb213c26e5294d25b440 8a0eb3d5815b166b18da3a8df1a500a22ae2a44c 5e20e1a50236bd3157633a34e08c4042e5733071,,Remove simple navigator,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | N/A |  | Primary OS tested on | N/A |  | Robotic platform tested on | N/A |    ---    ## Description of contribution in a few bullet points    The simple navigator is no longer default  nor is it uniquely used in CI. Given that we now have BT running in real-life  I think its time to deprecate it where the default XML is "similiar enough" to the simple navigator logic that it all works out.     I started to refactor the simple navigator and about half way through I realized it really didn't need to be around anymore  as the default is BT now  we have a couple BT trees that we like  and this piece of code isn't under active development / use. If we're going to point people to the repo to test it out  we should point them to the thing we want them to actually use.     I think keeping the simple navigator was a smart move when this project was started  but given recent developments  we can safely remove it and make sure we don't have people looking left when we want them to look right. It took me personally a few weeks to get on-board with the behavior tree base implementation  but now that I understand more  I think it's worth not confusing others by giving the option.    This is also in theme of my PRs this month of trying to "simplify" the repo to new users.     Let me know what you think. I dont expect this to be merged out of the gate  but a catalysis for discussion.      ---      
ros-planning/navigation2,716,2019-05-15T00:01:44Z,2019-05-16T17:17:29Z,True,2019-05-16T17:17:29Z,d0782954c9a7d0ffbf8abbef1fb853ca41ba25c1,1,2,c4c27cc1280e248a038d5d089cc15f15dc70c2eb 5d13d12ce98bd5910e06406ef4f746361655efcd,,Created BT for recovery and parallel planning,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | () |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (TB3 Gazebo simulation) |    ---    ## Description of contribution in a few bullet points    -Added `parallel planning` to `retry+recovery` Behavior Tree.    TODO:  Update the readme file in bt_navigator and draw the tree.    ---  
ros-planning/navigation2,713,2019-05-14T19:23:46Z,2019-05-16T17:33:13Z,True,2019-05-16T17:33:13Z,178c7c6ce4aa3ea58189302e1287d44f800543cd,1,1,67abffcc30a1ac88511867b7b71c673b7b772171,,Fixed for auto localization ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (fixes #635 ) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (TB3 Gazebo simulation) |    ---    ## Description of contribution in a few bullet points    In PR #630 if 'initial_pose_received' flag is not set  amcl will not publish a pose.   Therefore  for Auto Localization we have to set this flag manually in global localization callback since the initial pose is never expected to be received.     ---      
ros-planning/navigation2,711,2019-05-14T17:22:17Z,2019-05-16T17:36:09Z,True,2019-05-16T17:36:09Z,38d3df6b3a2cd3f44571e611f4745a64c0c88aff,2,2,aa8161201343fc5ecf0c4c44a5f86521689288d3 ff7bcba05d07523b10e397bb75035fe760af7c09,1 - High@nav2_lifecycle,Robot class to use node interfaces,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #700  |  | Primary OS tested on | Ubuntu 18 |  | Robotic platform tested on | Gazebo sim of Turtlebot |    ---    ## Description of contribution in a few bullet points    Changing robot class to use node interfaces and therefore allowing to be used by both regular and lifecycle nodes.    Note that this PR will get merged to the lifecycle branch.
ros-planning/navigation2,718,2019-05-15T01:52:37Z,2019-05-16T17:37:01Z,True,2019-05-16T17:37:01Z,90ab26e78180064dc549ea9916e5e90a64ca2115,11,2,d103f58200e35f3865e6b3cac88fefbd9261bf6e 1d0a14f3e545500dc0667a33bfabaa2644e277ef,1 - High@nav2_lifecycle,Enable ROS2 actions in Motion Primitives,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #700 |  | Primary OS tested on | Ubuntu 18 |  | Robotic platform tested on | Gazebo sim of Turtlebot |    ---    ## Description of contribution in a few bullet points    Replaced nav2_tasks::TaskServer for the new ROS2 Actions.
ros-planning/navigation2,725,2019-05-15T22:30:39Z,2019-05-16T17:41:14Z,True,2019-05-16T17:41:14Z,9401c13ace49213e23822003954bce18a4aff95f,7,2,209ee65bb9a5113d5b8bea4350398f99efde7717 291d4e76895341f71f64b3f328676a5ec8c2eda0,1 - High@nav2_lifecycle,Update spin and backup BT actions to use ROS2 actions,As title says  I'm updating the spin & backup behavior tree action nodes to use ROS2 actions.    I'm also deleting the stop primitive  it's not needed  the dwb controller will send a stop command whenever the action command is canceled. This occurs when the `followPath` bt action node is halted.
ros-planning/navigation2,679,2019-04-30T19:21:13Z,2019-05-01T21:35:15Z,True,2019-05-01T21:35:15Z,e6cac80aa1af687308ebe65ada493641dfc92c91,1,1,61a0fede33ff4bdb9abae1a1992c8fd9d0682e22,,Add build badge for Docker Hub,To make build issues from Dockerhub repo used for CI more visible.
ros-planning/navigation2,686,2019-05-06T23:12:44Z,2019-05-06T23:13:10Z,True,2019-05-06T23:13:10Z,4aa7104511e062d1a92cdb742f86b2261d38ecfa,17,1,de76a744c474bc479e3716faf87b91a7202367b5,,Revert Add template classes for ROS2 action clients and servers ,Reverts ros-planning/navigation2#646
ros-planning/navigation2,702,2019-05-10T23:48:07Z,2019-05-10T23:48:20Z,True,2019-05-10T23:48:20Z,edb9526c7ded491a554a292e8a19410b5962fb6c,12,1,fba6ae3888cc135962ff245301767f2e0f745383,,Revert Experimental Random Crawl task implemented with Reinforcement Learning DQN ,Reverts ros-planning/navigation2#683    Fails to build due to missing files and missing rosdep keys. We need to resolve before we can push to master.
ros-planning/navigation2,723,2019-05-15T19:04:51Z,2019-05-17T22:35:43Z,False,none,6f6155024da60a9bb004c445a9691b9a811b8fc6,3,6,aecfad0fb11a7c1f51fb77bfe8bafe906cc9a5c2 395f4488a0b66468183f869ff1d0317808808e50 63680dfa0d9f44980e07c8df9cbf1797e8457d95 d7c9dc7ac8414855e37dc9d8cd6c169c85e4bc66 973eab13c338a32604641627b1f41ef870ccc39c 062cdf35081badf718bd66bdba225fa7590c768d,,enabling closed loop control in spinning,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/423 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | N/A -- Can I get help on that? |    ---    ## Description of contribution in a few bullet points    * enabling closed-loop control for the spin recovery  * closed-loop control is already in the backup recovery  * some other small tweeks    ---    ## Future work that may be required in bullet points    * Can I get a hand in testing this in simulation for last minute validation? I do not yet have a 18.04 machine in my possession but soon to be true. It is however based on math that I verified against one of my (not today public) projects that uses the same math and that has been validated on hardware robots over the last year or so.   ---    
ros-planning/navigation2,738,2019-05-20T18:02:38Z,2019-05-21T22:20:11Z,True,2019-05-21T22:20:11Z,ddd5d314775822ddd949a591058187f945ee5047,1,2,3266f19869002bb98b7ec1e7d68ec35fc45ccf4e 9dadf0f3fbf95aca14745ac2b1dddeede499590e,1 - High,Fix build error,Small change  compiler was complaining about the case missing.
ros-planning/navigation2,758,2019-05-25T18:55:59Z,2019-05-28T04:33:38Z,True,2019-05-28T04:33:38Z,6d837b17cdd81eaddca42ffde5946fbcad9f2686,3,1,a87250917800419d17cedbd4042f30c2d4a836ff,nav2_lifecycle,Initialize variables to avoid errors in the release build,## Description     * In the release build  there were a few occurances of uninitialized variables. These values are set by the get_parameter call  but the compiler doesn't know that  and issues a warning. With warnings treated as errors  this resulted in a release build failure. 
ros-planning/navigation2,764,2019-05-28T23:46:32Z,2019-05-29T16:23:10Z,True,2019-05-29T16:23:10Z,1c428ce36f4170d5ffbb2028bafd07fd13b92feb,1,1,93aca2ce73f7604d1e48e1c6a1c7ba790f2160b4,nav2_lifecycle,Revert Remove COLCON_IGNORE to enable the system tests ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * We had intentionally left `COLCON_IGNORE` in the `nav2_system_test` package to prevent the ROS 2 build farm from trying to build  test and release this package. It has all sorts of dependencies on gazebo and network infrastructure that we didn't want OSRF to have to deal with.  * This PR restores the `COLCON_IGNORE` file into the lifecycle branch.
ros-planning/navigation2,763,2019-05-28T23:32:43Z,2019-05-29T16:24:13Z,True,2019-05-29T16:24:13Z,c8268340a6d5f6dbf7f88eaa98e4ebfdcf3888d1,3,1,90a8973f968deea107b57f1b2637e55bbf890fbb,nav2_lifecycle,Fix typos in dependencies,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #755  |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Dependencies on nav2_lifecycle package had typos in various places. This fixes them.  
ros-planning/navigation2,766,2019-05-29T00:40:51Z,2019-05-29T19:02:24Z,True,2019-05-29T19:02:24Z,8fcac77776890b9064c39a0d0e8a22b5a94f8d87,1,1,2944cabbd078a1374b33f59c82e3fe8a96774d17,1 - High@nav2_lifecycle,Bug fix in DWB rotation critic,Solution to #765.
ros-planning/navigation2,697,2019-05-09T02:05:24Z,2019-05-29T20:45:20Z,False,none,379f53a90d9f41ebb40b7785c8301ca421f8ade9,8,5,fedb696b19dd231f0693b8175726428fd7c5efb8 04734b5c45526ebcb3bdf674bcc6cf29d960d090 98317d2c260aef66f0b84629c7aac7605e4b2e1a 5a31d66222d7950d14e84f6dd760d161b976389b e2c82185e743f1fb59846abfe416e9354f9b67f2,,Added a custom launch substitution to modify YAML parameters based on launch params,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 in Gazebo |    ---    ## Description of contribution in a few bullet points    * The existing launch mechanism in ROS2 does not let you pass parameters from the launch file to the node without renaming all the nodes in the executable. This causes us problems because we use many composed nodes.  * This change adds a custom launch substitution to modify YAML files with launch parameters. The idea is you have a default params file for the project (nav2_params.yaml in our case). You then have options passed to the launch file that should modify the parameters. This substitution will find all keys by the specified name in the YAML file and change their value. eg. You specify substitute `use_sim_time` with True  it will find all instances of `use_sim_time` in the default params file and change them to true. It changes a copy  not the actual file  by the way.  * This doesn't currently support scoping the name. Eg. if you want to change the `enabled` parameter on one plugin to `true` but leave the others as `false`  you cannot do that currently.  * The name RewrittenYaml is kind of lame  but I haven't come up with a better one yet.    **NOTE**  You can review this commit by commit to make the review a bit easier.
ros-planning/navigation2,751,2019-05-23T17:40:56Z,2019-05-29T22:21:21Z,True,2019-05-29T22:21:21Z,897b576e4f7a645bd4c407f4a69ad87ef5fc9fff,3,2,884bfc08cfd041f6f1db5194ec37f7186b434ecc 776d2a528ee96e43352e3657ee14b3ab870ae481,1 - High@nav2_lifecycle,Port goalReachedCondition node and isLocalizedCondition node to lifecycle,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | () |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (TB3 Gazebo simulation) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  ---    -Port GoalReached BT node to lifecycle  -Port IsLocalizedCondition BT node to lifecycle
ros-planning/navigation2,752,2019-05-24T01:19:51Z,2019-05-30T00:01:39Z,True,2019-05-30T00:01:39Z,72cc236d38fc53adac0d77005a1d3af5eef803a6,10,4,f8dab2fddd3d35b293207146bf4407fdc035f73d c92f3dfef0645a51d36d8dda67b6f57f0f633a4a 60305c1e36938fa2b237bd67b25c5455f268b2cb 5a2ffaf9bdb4295cefed1e20951b504fc4740df5,1 - High@nav2_lifecycle,Fixed costmap plugins parameter re declaration bug,Solution to #714     Future Tasks:  - We might need to do something different for the Obstacle and Voxel plugins as these don't execute onInitialize() upon reset()  #757.
ros-planning/navigation2,747,2019-05-22T19:35:32Z,2019-05-30T18:39:05Z,True,2019-05-30T18:39:05Z,2eefe52e56caac1c348418acde25cfcdf36b7f22,6,2,9513739218c21bf6c45eca2c1588a8adef532c39 b14c2d2edd2246ad7c53d06338c3ec89c50e15ae,1 - High@nav2_lifecycle,Updating Motion Primitives unit tests,Updated the unit tests to use the new ROS2 action interface.  Fixed a bug on the Motion Primitives base class.
ros-planning/navigation2,687,2019-05-07T00:09:51Z,2019-05-07T00:17:30Z,True,2019-05-07T00:17:30Z,4f8a3a7613a098d8bcf59d39035eda2b4ace791f,14,1,035f71ffe38d2f56c41f38764c23bf43e441f0ed,,Patch the build for the lifecycle branch,## Description    * Patch a few things so that the lifecycle branch builds.   * The action code has already been reviewed as part of another PR  but was incorrectly submitted to master (and subsequently reverted; Oops). Included instead in this patch. 
ros-planning/navigation2,646,2019-04-03T19:12:05Z,2019-05-06T22:33:23Z,True,2019-05-06T22:33:23Z,b73d659ddc4c9c0176b97e2a001fc3cc62b11392,17,7,063200a8cad922b21134363bf8d23d2b2dc9b79c 9543d13698b2dcd10f9964dee1de533854b5b9a5 7c4de29dc80df9e9656db7c9fdaf6f9065e6172f fc0ee38bac79947fc4127ad15aac8c7c85b91686 b3d6f602ef3f0e680e450fc9612e579dcd3daf06 1eb071a7cb718b3ed51725fc1c871bd8da17ccdb 09afaaea3a703ca100f0875c6637814cc83e80eb,nav2_lifecycle,Add template classes for ROS2 action clients and servers,## Description of contribution in a few bullet points    * This PR adds a couple template classes  similar to the existing service_client.hpp  to allow for easy use of the ROS2 action clients and servers  * Also includes a unit test for these classes    ## Future work that may be required in bullet points    * The next step will be to port task servers and clients to the ROS2 actions
ros-planning/navigation2,680,2019-04-30T21:23:05Z,2019-05-08T21:26:07Z,True,2019-05-08T21:26:06Z,989b465739eeb6482aecb22c509b1739f2c25a20,8,5,22874af0724ec2fd0dcdba0a0e7289dccae84ede 9515bf0c5e7ca89d94a2df68648d9de9f57ff099 cfc527d0409e64390f26c8efcfd809f5a1cef3f9 bdffe7ad6fe3cb06ff2c60adee67ff69d4600032 356c13dd9f52410c0ed5c3b42a6b28114c7172f8,nav2_lifecycle,Nav2 lifecycle controller,## Description    * Adds a controller node for the various lifecycle nodes. This node walks the lifecycle node through their various states for startup and shutdown. It also does pause (getting the nodes back into a configurable state) and resume.     ## Future work    * This node will be renamed to nav2_lifecycle_manager once all of the lifecycle changes are integrated into the lifecycle branch  * Not all nodes correctly support being paused and resumed (that is  de-activate + cleanup and then configure + activate). In particular  those nodes that rely on plug-ins  which don't have a lifecycle-style interface (yet)  still need more work.   
ros-planning/navigation2,645,2019-04-02T22:50:59Z,2019-05-02T20:25:52Z,True,2019-05-02T20:25:52Z,7b2b7bf2ed51196317d86593146838581e724f1c,46,5,31dcb45afb005cfec00417cf37a82b4d343278d7 c1820a80a2d93de414108a736ca98b18e0e14649 17678add61370571ea27cbbfb0b0a08e599b73a9 232ce1e13a085982ddc1fc8ec10b2c93b2c8c878 760e299bb30e47a66ddd2466728afa50d2553bba,nav2_lifecycle,Port nav2_util and nav2_tasks to lifecycle nodes,## Description of contribution in a few bullet points    * Update the nav2_utils and nav2_tasks directories for lifecycle support  * Move the costmap  map  and global_localization service clients to nav2_utils to consolidate the service client code    ## Future work that may be required in bullet points    * Next will be the nav2_robot directory. After that  subsequent PRs that have modules with lifecycle support will begin to compile
ros-planning/navigation2,696,2019-05-08T22:29:26Z,2019-05-09T20:00:11Z,True,2019-05-09T20:00:11Z,450e053d56c9b846754c14cd6a3fe2a7102629cc,13,2,998c0c4724f6450d18d3ae1e07b613aaa6e1488a 14d20224f3dff2e21a61be107c5468b67918dc62,nav2_lifecycle,Rename the nav2_controller to nav2_lifecycle_manager,## Description    * Per review feedback  to avoid potential confusion  rename the nav2_controller to be nav2_lifecycle_manger.     ## Future Work  * Will integrate the headers that are currently in nav2_lifecycle into nav2_util. There are only a couple there and they will eventually become obsolete. This will help keep down the number of directories. 
ros-planning/navigation2,694,2019-05-07T23:45:31Z,2019-05-10T00:50:42Z,True,2019-05-10T00:50:42Z,06a6e4f032218954509ac8651c3a7dccb394dc5a,6,4,f07833df9711e67484dedfadcf215918511a8e68 0cb01ee419e6f0d5035733323debe9c7642271d4 47b027ddb64b3138dcef4ded1d38b7f89a1e3604 51404cc05e00a249dd827824c218c29dfb243fe6,nav2_lifecycle,Adapt to recent changes with the ROS2 Action client interface,## Description    * The ROS2 action client interface has changed to allow for providing callbacks for result  feedback  etc. at the point of calling async_send goal using SendGoalOptions. This PR adapts to the recent changes.  * Cleans up some dead code in the navigation_dialog.       
ros-planning/navigation2,665,2019-04-16T23:12:49Z,2019-05-17T22:13:35Z,True,2019-05-17T22:13:35Z,2056c595eed97c88c7d887d6b5c56f9f56f3e537,17,7,8d8bcc3610baf1f877eee1429976e649892d5a7c 4a0bd90f701a4bed7ca32ad37fdbb197b157b414 4a35a3e9d405fb7f082585014b4ff52cc92faae3 ce9f0b773eae7bdc0216ca78e4fb593a28784d0d dd59a7b79b718721021ce5d0049e079216484d57 d5c9172ec8510538a87b97987efa7037a4b4a751 80d7c3ca4d20513cdee8f2ab3382505b33abe0aa,nav2_lifecycle,Lifecycle enable the nav2_system_test directory,## Description  * Add a bring-up/shutdown test to the system test directory    ## Future work  * More work required on some of the tests here: localization and planner  * Need to port the dummy controller and dummy planner to ROS2 Actions
ros-planning/navigation2,717,2019-05-15T01:20:19Z,2019-05-17T01:02:44Z,True,2019-05-17T01:02:44Z,cd532cfeb6b5fdfa614b8a2b2ddebeda500229d5,6,1,0a22b7f6af08319a126fe71f19995897db46a34b,nav2_lifecycle,Use namespaces on costmap nodes so that pub subs can co exist,## Description    * When implementing lifecycle nodes I removed the namespace from the costmap(s) not realizing that the namespaces are required so that the publishers and subscribers from each costmap instance remain separate. This PR restores the namespaces and costmap node names as before.   * Not using namespaces for the utility nodes (those that are created simply for the purpose of calling a service  for example)  * Updated the lifecycle manager node name    ## Future work    * There will be subsequent changes to the nav2_params.yaml file as we rebase with the master branch and get things in sync
ros-planning/navigation2,715,2019-05-14T23:10:08Z,2019-05-15T18:29:03Z,True,2019-05-15T18:29:03Z,4c8ab63acf37592c37dcea6be06df33cd4b32152,17,1,93029b630d83793c7af1800bf9e80166a281a4a6,nav2_lifecycle,Adapt to recent ROS2 API changes for QoS settings,## Description of contribution in a few bullet points    * Adapt to changes in the ROS2 API regarding QoS settings having moved from rmw to rcl  * Remove a bit of code that was inadvertantly included previously (related to rate monitoring)    ## Future work    * This PR doesn't include AMCL since that module us currently under review. Once that PR is done  I'll open a separate  smaller PR just for the QoS changes w/ AMCL  
ros-planning/navigation2,664,2019-04-16T23:00:22Z,2019-05-14T22:39:12Z,True,2019-05-14T22:39:12Z,cd05311b1e9c41ed0600569bae24eabc86ab586b,30,7,5c3b020606bfdcc6b3e0b5f49b6249e5960e2b51 dd027a92f994362f62e3b844e0cdac43385856ab bef67fe17ae889c6a27a38e451c2d5f067efc71f 364a88f73fe29dfdacf6d99d6f41e8df2f0fb409 7b665fed4573c34a290cfdc498b6848330a106ba aa26144a13ae29aa0d013affb8c283f2fb5bd367 f43e9a9defa1205ba4d5969cb55bde8b47b82ad2,nav2_lifecycle,Lifecycle enable the costmap_2d package,## Description  * Lifecycle enable the costmap_2d package    ## Future work  * More work required in the tests  * The lifecycle-style interface could be pushed down all the way to the plug-ins. We need to resolve how to treat "helper classes" so that they can work with either Nodes or LifecycleNodes.   * Enabling code in the obstacle layer has impacted a clean shutdown. Need to investigate what resources are not being cleaned up cleanly
ros-planning/navigation2,653,2019-04-09T23:52:56Z,2019-05-17T22:13:12Z,True,2019-05-17T22:13:12Z,d74d184b68a76f0d57843abfbbd2668798b44936,5,4,04a38e1bbf715b97fb6a74019a547e953c40608f 14ddf9eca8d0557bb79e29cd54e19310b4de0563 2bdbed269e53dc97ab7154e596fd76845d55b088 b902b012da5ab1593583c8aa487bdf20d2b747bc,nav2_lifecycle,Port AMCL to lifecycle nodes,## Description  * Port AMCL to lifecycle nodes  * Extensive reorganization in order to cleanly work with the lifecycle node callback structure
ros-planning/navigation2,709,2019-05-14T00:43:19Z,2019-05-15T00:52:19Z,True,2019-05-15T00:52:19Z,74e63c9a5caa3086da8be18b85076a9c88dffb2a,18,5,1df608f7703df47e6eb8fd821a3df92f53ef7b06 1fc15da730a791434ae78a45b68c1cc3064d292b e8c43330b2544f57875f9557e925ea2149cb3f04 f164600729b087b15966d60ac8cb8dfdb18f31fe 81c6aca2db39288ca2f3dfdd804dd8f407152259,nav2_lifecycle,Action enable dwb,## Description    * Port DWB from the old interim nav2_tasks model to ROS2 Actions  * Adapt to recent ROS2 parameter changes that require parameters to be declared  * One occurance of adapting to ROS2 QoS-related changes (all other directories will come in a separate commit)   
ros-planning/navigation2,667,2019-04-16T23:54:17Z,2019-05-14T16:13:22Z,True,2019-05-14T16:13:22Z,abf33b895a85142a0c6efb084bc5391078eb45b6,8,2,cb12316a1bbbfc3e19ebc2d21f9e3e03ade6a2ca e65929ecac28995d674a955d503598ed6c675f84,nav2_lifecycle,Update the launch scripts for lifecycle nodes,## Description  * Use ExecuteProcess directly for the lifecycle nodes to avoid the broken LifecycleNode class in the Python launch. The Node and LifecycleNode Python classes should not assume that there is one node per process. They should also not rename other nodes created in the process.   * Also  specify use_sim_time in the parameters file to avoid having to set it manually    ## Future work  * Could fix the Node and LifecycleNode Python classes in the launch package  * Could separate out the use_sim_time parameter settings into a separate parameters file and use cascading parameters file to specify whether or not to use_sim_time. In other words  there is a base parameters file that is used and can be specified on the command line. Then  based on a command-line argument  use_sim_time  could use a second parameters file; either one where all the nodes have use_sim_time=true or another one where use_sim_time=false. 
ros-planning/navigation2,616,2019-03-20T15:07:00Z,2019-05-06T22:07:24Z,False,none,ebbbc492421b9d6df7703ee60c7967b181f46387,1,1,e82d2e29d28518a72a470a672f482fdb7dc1d483,,Get the costmap in the navfn constructor instead of inline,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #540 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | gazebo |    ---    ## Description of contribution in a few bullet points    Moves the code in navfn that calls the costmap service to get the costmap. Now  instead of calling this service inline every time a there is a request to generate a global plan  the call is made in the constructor. The code also now waits for the service to be available since otherwise  there is a race condition - the service request could be sent before the service is available and would never be received.     ---    ## Future work that may be required in bullet points    * With the coming lifecycle changes  the navfn node will read the costmap in the on_configure callback. Changing the map will simply require bringing the relevant nodes to the unconfigured state  setting the new parameters  and reconfiguring.   
ros-planning/navigation2,633,2019-03-26T20:44:25Z,2019-04-03T21:04:30Z,True,2019-04-03T21:04:30Z,ae5ca2b8625ed70b0e854032aed9964fa1e42f20,2,1,eeb60d1c28e0de67259f5f378a100b73126afe6e,,Fix empty path re sent to the local planner,## Description of contribution in a few bullet points    * When changing the BtActionNode class to use the BehaviorTree library's CoroActionNode the BtActionNode::halt method was not updated correctly.   * When a child node of the RateController fails  wait until the next time interval to try again (instead of re-trying immedately)  * When a BtActionNode finishes (with SUCCEEDED  FAILED  or CANCELED) set the node state to IDLE  
ros-planning/navigation2,648,2019-04-09T22:38:17Z,2019-04-25T17:07:38Z,True,2019-04-25T17:07:38Z,8850bebb087fcc6a5c3cf0d2e326941e8e55b637,7,2,3646af22c973573d42c390a353685d5faba14660 c6d104fa8736f52a899790d43b60d0e22a4fc7b4,nav2_lifecycle,Port nav2_robot to lifecycle nodes,## Description    * Enabling nav2_robot for lifecycle nodes  * Remove COLCON_IGNORE in SimpleNavigator. Now that nav2_robot is enabled  Simple Navigator from the previous PR will compile.
ros-planning/navigation2,649,2019-04-09T22:42:52Z,2019-04-30T17:08:12Z,True,2019-04-30T17:08:12Z,ed281b4b1fe8a132746a8a65ad43551aab8453c0,9,2,c93f44d1c504d5c661f9e9682c5c279f58f104a3 68951f0e5bbaa8ef73cfb100ed3a69415848eed0,nav2_lifecycle,Port the map server to lifecycle nodes,## Description    * Port the map server to lifecycle nodes  * A bit of cleanup/reorg on the parameter-related code  
ros-planning/navigation2,654,2019-04-09T23:56:37Z,2019-04-30T17:10:22Z,True,2019-04-30T17:10:22Z,2de0b47433060f2286bb30af4bbc489681f4121a,5,3,bdc6fcbbbf21311809fbf9637783cc59bebea961 91a89628caeb908e8b88648e7404b5bd9a79dc7f 5a17ebf2550bacb6709db39d8b2f36483800b5b7,nav2_lifecycle,Port the world model lifecycle to lifecycle nodes,## Description  * Port the world model to lifecycle nodes  
ros-planning/navigation2,650,2019-04-09T22:56:10Z,2019-04-30T17:12:50Z,True,2019-04-30T17:12:49Z,84ffc35884edf681fbd5f2b95c8d22d2293f5967,7,2,54ff4ff77cbea5fefe13c41be7d2fdfcc5504b1f cfdb4231860c508cc6766dc2244fc1bee81c4c2c,nav2_lifecycle,Port the navfn global planner to lifecycle nodes,## Description    * Port the global planner to lifecycle nodes
ros-planning/navigation2,651,2019-04-09T23:25:58Z,2019-04-30T17:28:45Z,True,2019-04-30T17:28:45Z,a0ab2450253cdb3274781dd5dd061c536349912a,7,2,f96e556b0081836a8a1f25b3eeb3b0b548a3ae3f c1e1d9617beab942757424283cf3b5becd5b1984,nav2_lifecycle,Port BT Navigator to lifecycle nodes,## Description    * Port the BT Navigator to lifecycle nodes  * Implement a ROS2 Action server instead of task server    ## Future work    * The task clients still need to be converted to action clients once the other task servers are converted to action servers
ros-planning/navigation2,661,2019-04-16T22:11:14Z,2019-05-02T15:04:00Z,True,2019-05-02T15:04:00Z,2a84c19774cb5230153cac041990c3b680810b5a,9,3,0ac1d9278549a533431549c5b1d9a3e0605837ff 009310dd6be321e9eb5cc8bfac2fa1c65a9e3cfc 547bd28515139ab58542eaf627bc84603ff8092b,nav2_lifecycle,Update the MissionExecutor for lifecycle nodes,## Description  * Update the MissionExecutor for lifecycle nodes  * Add a test action client that can be used to send a mission plan to the mission executor.    ## Future work  * Convert the test to a gtest-based unit test
ros-planning/navigation2,666,2019-04-16T23:22:22Z,2019-05-06T22:14:51Z,True,2019-05-06T22:14:51Z,2d1df9141d37b6f58cb0f30a92e6947e61b72008,1,2,3547b4006cc61e3acc88b688ed5cf37fca7f2e69 dd64afcf3aead5d4f73c831aa4aa82b32fe29326,nav2_lifecycle,Update the Navigation2 meta package for lifecycle changes,## Description  * Update and sort the package list to account for the recent changes for lifecycle nodes
ros-planning/navigation2,678,2019-04-30T16:22:26Z,2019-05-02T19:30:46Z,True,2019-05-02T19:30:46Z,5291b0731059b6b8c4d25d4354f22eb67f9daef9,5,3,f09734037dfd66b7cc7e8438b41ab181b85c4743 01c1e5a7c57583bf4314a1e602339f44f744b2a9 753f0e5ded362deea81b894af4a6d0ad5a195557,nav2_lifecycle,Port the simple navigator to ROS2 actions,## Description    * Ported the Simple Navigator to ROS2 actions.
ros-planning/navigation2,663,2019-04-16T22:49:00Z,2019-05-07T20:54:57Z,True,2019-05-07T20:54:57Z,c8b8ed21b65961591145d0fb3ad11dafbb5a20d8,11,6,05b7ebde87199a6994ffc8965a29b9de10d8ca72 c579511decaedb064b4dbcdaf68c10af7337e611 f048b07cfb4b35e20dba87d0dfef1f44c170826d 513b30c85fe9ef24628a32a0a751a123c5bf1ce0 9195bc96f01b82148110162f41af3a5c98ada098 bcb342d0a6358b49e41ee92c6bb7c3906db1563e,nav2_lifecycle,Add the rviz panel and action based goal tool,## Description    * Add an rviz goal tool that uses an action client and has a cancel capability  * Add a placeholder panel to display some interactive information about the running stack    ## Future work    * Move the panel to rqt instead of rviz. Leave the Startup and Shutdown buttons. Could also make initiation of startup automatic based on some input conditions. Could be trickier to do an automatic shutdown.   * Instead of using a pop-up dialog for cancel  use the "button" itself. This will require a change in the rqt interface to make the methods public that are needed to update the icon and text on the button  
ros-planning/navigation2,769,2019-05-29T19:20:38Z,2019-05-30T21:22:27Z,True,2019-05-30T21:22:27Z,9e37296372f28fac4544d0d158defa66a62e5a3a,1,1,490eef5879d90be905b6161f26f589d9f51ba623,2 - Medium@nav2_lifecycle,Increase RVIZ logging severity level,We get too much output from the RVIZ logger  most of it related to some errors around message filters.  By increasing the severity level to `fatal` we don't log these messages.  We can set it back to `info` once the message filters on RVIZ have been resolved.
ros-planning/navigation2,772,2019-05-30T00:11:01Z,2019-05-30T22:06:53Z,True,2019-05-30T22:06:52Z,e4452eb04002e71d801c5b87abb1e7866bdd550c,12,9,69af159e14dbc8d5b80969671531b1cf5b7530e3 d10afc25c45a07350fbe6ab2b75b22380c30ef3c 5f507c6dcbcbaa0c4413f7cdd8fa7d5a44d91300 020428939b5bb09410519301412c210119bb1264 a5d9fa950dae05bf822f25dd10566671312b009b 0a31ea9b23b5a220e2c25db0c3aa23f18efa8998 2f69fd7190acf1e44062f93e3865cd85cc6a7e88 53462349e71f7dc02979734a2b53a55ecc35bfae 8cfa4cdc530ecdfb2eea74aa3cf7d147455290cd,1 - High@nav2_lifecycle,Modified all the Behaivor Tree s to work with lifecycle branch,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | () |  | Primary OS tested on | (18.04) |  | Robotic platform tested on | (Gazebo and TB3) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    - Modified all the BT's to work with lifecycle branch  - Deleted unused BT's  - Renamed parallel tree to navigate_w_replanning  - Fixed isLocalized condition node. isLocalized condition node was using lifecycle node but Blackboard passes regular node.    Now we have three main tree's.  The first one which is set to default is `navigate with re-planning`  the second one is `navigate with re-planning and recovery` and the last one is `auto localization with re-planning and recovery`.     TODO: #773 
ros-planning/navigation2,748,2019-05-22T20:03:27Z,2019-05-30T20:09:06Z,True,2019-05-30T20:09:06Z,861855d97636724921073264d9b64e723868ce4a,8,1,e4a01653dcb0fd21d54fec0ec4691a43af237b25,nav2_lifecycle,Use RCLCPP_FATAL upon a lifecycle node entering error state,Previous review feedback recommended having the lifecycle nodes exit upon entering an error state since we're not doing any error handling yet. So  this PR converts the messages to RCLCPP_FATAL. 
ros-planning/navigation2,761,2019-05-28T19:55:43Z,2019-05-30T20:07:58Z,True,2019-05-30T20:07:58Z,4a5604734c38d577a6a689fdf1dac321eb77df37,3,1,1855752e633f73040bc79f832caebcaee22b1909,nav2_lifecycle,Use AsyncActionNode instead of CoroActionNode,## Description  * The Behavior Tree library's CoroActionNode uses coroutines  while AsyncActionNode uses separate threads. When using coroutines  there was a race condition where the result of an action was occasionally missed. This happens when one coroutine is executing  such as ComputePathToPose  while the FollowPath coroutine is not executing. When it gets a chance to run again  FollowPath does not properly receive the result  even though the Action server has sent it.   * Using separate threads for the actions means that they can no longer share the same node when invoking the actions. Therefore  removed the node from the blackboard and each bt_action has its own node  generated with nav2_util::generate_internal_node().   * Also update the bt_navigator.xml Behavior Tree so that FollowPath is wrapped by a SequenceStar  ensuring that FollowPath is invoked only once. 
ros-planning/navigation2,784,2019-05-31T15:56:17Z,2019-05-31T15:57:14Z,True,2019-05-31T15:57:14Z,cf8fcf2d009548c99b6f71d68f7571009c3e4889,13,10,b547f5fde7b471e6ccfcf24713f7f7bd81d5faf3 75b8892d6b337e82abee0cdc001bb9c355dadc64 4af5011db4cc9eb68c47d023c327dca66c12bac7 a9af0bc45dca6921397bb31bb4ac8d5e50864bbd 5bd1e0d1e8434f10137d4b7d9321e4fe2b32c8ba 5bc686993ebe47823f8db8fa47986713b57ef944 86bee787f743dc7df65a6ef1c20d8627a7819a3c d82e5913658b5624ca6b6a0532e5857255a7a2d0 5279aaa5df44a7ae2227ae423c707fc107ce43d8 41e431f21545017a10280279e6bec4099092dbac,,Modified all the Behaivor Tree s to work with lifecycle branch,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | () |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | Gazebo and TB3) |    ---    ## Description of contribution in a few bullet points    This is the fix to PR #772.    ---    
ros-planning/navigation2,760,2019-05-28T14:00:39Z,2019-05-31T16:17:53Z,True,2019-05-31T16:17:52Z,a8880a2da0d8cca4dfd73f3d0ab573fc08f07b52,1,1,1c81576841e1fbd54a18bd6ed6a86c6f31caf9af,1 - High,AMCL to use sensor data qos for scan topic,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  * Changes AMCL to use the QOS profile for sensor data when subscribing to the 'scan' topic.    This was suggested by @miguelcompany in this issue: https://github.com/ros2/rmw_fastrtps/issues/280    I tested this change and see our tests pass now with the latest FastRTPS.  
ros-planning/navigation2,779,2019-05-31T00:38:46Z,2019-05-31T17:11:08Z,True,2019-05-31T17:11:08Z,e93c30b377fab79e7bd8ad688c422e9d0ba81329,3,2,0a176870051d3ef56b160d1f078abe109a66303c 512ffda4ac867ca15e7d6a736f838cf86d13c65d,0 - Critical@nav2_lifecycle,Fix Lifecycle NodeOptions API rename,This PR un-breaks the lifecycle branch to adapt for the recent API change in the NodeOptions functions for parameter_overrides and automatically_declare_parameters_from_overrides.    For the lifecycle branch  the `twist_gen_test` fails due to parameter declaration conflicts within the test. This is a circular problem I've encountered before  where in the test we'd like to set a parameter in a test case before it is declared in the constructor of another class outside the test  however this cannot be done via `set_parameter`  because it implicitly declares a parameter (if allowed via `allow_undeclared_parameters`. The only way I know to prepare a parameter before `declare_parameter` is through a yaml file or the `parameter_overrides` option in `NodeOptions`. For multiple test cases with different initial parameters  this becomes problematic since each test case needs to initialize a node with different `NodeOptions`. I'm commenting out this test for now and leaving as a TODO (will update with issue). 
ros-planning/navigation2,762,2019-05-28T20:04:35Z,2019-05-31T17:14:57Z,True,2019-05-31T17:14:57Z,1b4c2403d0869dc3347825b5ce7ffb2433275d6b,2,1,0e0e566fe95e496d26f15082d6d77b0c0b971813,0 - Critical@nav2_lifecycle,Re enable obstacle layer ,This PR re-enables the obstacle layer in the lifecycle branch. The obstacle behavior seems to behave normally in adding observations to the costmap. The qos setting in the obstacle layer laser scan subscriber is also changed to `rmw_qos_profile_sensor_data` which appears to resolve issues with not receiving laser scan topic.   
ros-planning/navigation2,778,2019-05-31T00:03:20Z,2019-05-31T17:15:23Z,True,2019-05-31T17:15:23Z,955fc29dc63467de5a3b6dc5aaafd8d1207871fd,2,1,1dd9b1f74af026ed5bcd5bb156afdec6d2c03a0a,1 - High,Update NodeOptions API rename,This PR un-breaks master to adapt for the recent API change in the NodeOptions functions for `parameter_overrides` and `automatically_declare_parameters_from_overrides`. 
ros-planning/navigation2,781,2019-05-31T03:59:57Z,2019-05-31T17:16:48Z,False,none,53911e73f172895c4f316756987cec428abcfe38,3,1,9dc6d8125ffc8afd449d803b1578dcc23e541eb8,,Fix the build,
ros-planning/navigation2,745,2019-05-22T00:54:30Z,2019-05-31T17:38:43Z,False,none,eaa493a082631af0aa87126b6858a182db29884f,3,3,203495a2522d02eaeeebba5127e5c4b5ad32c96f 6410347e010c9c1ff781a6ab02c059c7596f2e1c cea8eae766e4ea7c90b9148a7d7620853d734ee7,, WIP Use Opensplice when running system tests,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---      ## Description of contribution in a few bullet points    This is to fix the failing CI due to recent changes to FastRTPS  see https://github.com/ros2/rmw_fastrtps/issues/280    This change will switch the test flow to install and use OpenSplice DDS.    ## Future work that may be required in bullet points    We may want to move this into the Travis file as an argument  so we could even run the tests with multiple DDS implementations    ---    
ros-planning/navigation2,780,2019-05-31T00:53:48Z,2019-05-31T18:28:48Z,True,2019-05-31T18:28:48Z,a0c872005835e353e1152dfeb0fca6907ba2beaa,2,1,55a349b3620c97275116eee3bc0718eed832d927,nav2_lifecycle,Stop spinning rclcpp_node thread in LifecycleNode destructor,This PR addresses an issue I've had with threads in gtests. In particular  the `nav2_lifecycle::LifecycleNode` optionally creates a `rclcpp_node_` with its own thread spinning the node. In normal operation  the thread would be killed and destroyed along with the node when `rclcpp_shudown` is called. However  in gtests  I've observed these threads to hang at the end of a test case  preventing termination and causing a timeout  likely because no `rclcpp::shutdown` is called until after all the tests are through completion.     I've added an atomic bool check in the thread that is set to stop the thread from spinning the node when the destructor of the class is called. 
ros-planning/navigation2,788,2019-05-31T17:50:39Z,2019-05-31T18:43:13Z,True,2019-05-31T18:43:13Z,16081335c6f2f23eb0babe2ba29775b49e4eb63c,1,1,88f37327fea0e3bd8cf6f048c10b5121f10632a0,nav2_lifecycle,Deleted recovery_test BT,-Removing recovery test BT.
ros-planning/navigation2,770,2019-05-29T19:26:51Z,2019-05-31T19:42:15Z,True,2019-05-31T19:42:15Z,cc880022d58f73ac3dca11f5657346806462007e,2,1,89f50dcdf2e1ccaf2513460b2a0abfabfd0cbffc,3 - Low@nav2_lifecycle,Updating the RVIZ default view,- Updating the RVIZ (nav2) default config file (.rviz) to show the new navigation panel (for starting/pausing/resuming) and the navigation goal plugin (for setting the destination)  plus some other minor display improvements.  - Providing the configuration file at launch time  once RVIZ loads  it's all set to start navigation.    
ros-planning/navigation2,790,2019-05-31T18:56:37Z,2019-05-31T19:45:42Z,True,2019-05-31T19:45:42Z,0a915fa93a08f7b2b7016616a0caf22d666a2368,7,1,967ab328497d240d8514ba630fa0cc2359b51a82,nav2_lifecycle,package xml files are missing nav2_common dependency,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Adds missing nav2_common dependencies to package.xml files.
ros-planning/navigation2,791,2019-05-31T20:09:06Z,2019-05-31T20:23:12Z,True,2019-05-31T20:23:12Z,ced1baf2276362ecd16dc1d2ff09274f726f7650,1,1,9750de32c2d9ca7a8377c2da292cd3b56605ef8b,0 - Critical@nav2_lifecycle,Fix launch bringup syntax,Fixes extra brace syntax error in launch file
ros-planning/navigation2,774,2019-05-30T20:56:50Z,2019-05-31T23:19:49Z,True,2019-05-31T23:19:49Z,c4cc919baed4e131a73ca3249eeb1a7843e5c0e4,6,13,88f37327fea0e3bd8cf6f048c10b5121f10632a0 7fbe7a89933c3c3122a78f6e61a81b2917d383f5 c34dcf6c186ec210ea87833fa3397c38fc5ee211 ba0106889178f069f11e2a9e39168494a272ca96 755bc73bfb033a6c108fd1470c620b9225759372 38a7e49276655b020a7611a8f877a2465e18f435 b6bfb3df91b6b140dba11ef0a5f27b05159a7b6c ec567a49348d92353ee2f72532fe3bab6987b234 668eb1b81e3c1eceb6a0e7a448bc6a21040fcf49 d26ba5f215b19ea6ad1a9012ca7cdbdbb5d23295 d5f43068d9f752260184e95ce50691a81780a5a5 4143343af33dfae011f761d449dc82e895b3d700 6245e3cbd9253892170ea0ad5e4433cb94e9816d,1 - High@nav2_lifecycle,Fixed amcl related lifecycle issues,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | () |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (Gazebo and TB3) |    ---    ## Description of contribution in a few bullet points    - Originally at startup  amcl publishes (0 0 0) for position since it doesn't know it's initial position.  We updated AMCL to not publish a pose or update transform if it has not been globally localized. AMCL can globally be localized at startup by either setting initial pose manually from user  getting the last pose from a file or server  or by auto-localization.     - This change  causes the `costmap_2d_ros` to get stuck in `on_activate` state.  Per team discussion  once we merge the lifecycle branch onto master we will revisit this issue.    - Currently  the `initial pose subscriber` is set to have the default QOS settings. With this setting  the `localization system test` was failing due to publishing the initial pose before amcl node gets active.  To fix this issue  I modified the localization test to periodically send the initial pose. However  after merging lifecycle branch to master we need to change the amcl's `initial pose subscriber` QOS to `transient_local().reliable()`. This won't work now  because in rviz `transient_local` is not set.     - Enabled obstacle layer    - Changing rcl_info to rcl_debug for publishing velocity    ---    ## Future work that may be required in bullet points    -Revisit `costmap_2d_ros` activate state and decide if we should block amcl's activation or costmap.  -Change AMCL `initial pose subscriber` QOS to `transient_local().reliable()`  -Factor out `checkElapsedTime()` to `nav2_util` so that it can be used elsewhere    ---      
ros-planning/navigation2,794,2019-05-31T23:09:07Z,2019-06-03T18:44:14Z,True,2019-06-03T18:44:14Z,80a1ee4ce49a5d6c798e8a3f7ee35103b0c3d366,2,1,7661d1543ce173c33312631680335787b1d7f722,1 - High@nav2_lifecycle,Enable BaseObstacle critic and declare critic scale parameters,The `BaseObstacle` critic was commented out during the rebase  so it is now enabled. The scale parameters were not seen on the node but given a default in the code  so this PR declares them so they can be tuned in the system yaml file. Now  the robot should actually avoid obstacles and make progress towards the goal with the right critic scale values.    ## Contribution in a few bullet points  - Re-enables BaseObstacle critic in `nav2_params.yaml`  - Declares trajectory critic scale parameters    
ros-planning/navigation2,797,2019-06-01T00:30:14Z,2019-06-03T20:37:01Z,True,2019-06-03T20:37:01Z,51bbc3bf9fc084491e66ad46a23bca1ea3cdc123,1,2,cec04b6b82bf7b17229e9b334a4d6ffc24486e4c de89ab31c9b64eaffd09a776e619ad478360bd7d,,Remove apt key from Dockerfile,## Description of contribution in a few bullet points  Per this Discourse thread the apt-key for the ros2 build farm has changed:  https://discourse.ros.org/t/key-rotation-for-ros-2-apt-repositories/9363    This broke our CI builds  with a GPG key error.     This PR updates to the new key and should fix this problem. 
ros-planning/navigation2,618,2019-03-22T17:04:52Z,2019-06-04T15:27:06Z,False,none,6141531a60bb3169df035f286ce7ba9d761382b4,11,4,328dfdb9180c34e8a0852954749ca2f521e85871 713379d3326d0482226e54b6dee93ea8579b8a96 2e11851635ebab6aea8113e3fb0be957d7bbf3e8 5406c294d99aa8dd1aa8f636e877f8b0d7a0c169,, WIP Use tf2_transform data to get current robot pose in NavFn,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #595  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Turtlebot 3 |    ---    ## Description of contribution in a few bullet points    * I piggy-backed the current pose from costmap onto the GetCostmap service request in World Model  * I changed timeout values to be in nanoseconds. std::chrono will let you auto-convert from larger time intervals to smaller  but not the other way  * I added a timeout on the GetCostmap service call that NavFn makes    ## Rationale    I tried to make a standalone version of the getCurrentPose function  but it had so many dependencies  that it seemed the wrong approach to solving the problem. All those dependencies were already available in costmap  and it seems reasonable to ask the world model/costmap where the robot is; it's sort of the equivalent of a "You are here" indicator on a real map.    I was going to add a separate service call to World Model to get the robot pose  but we currently have latency issues with service calls. Instead  I added the pose to the GetCostmap service call. It seems unlikely you will get the costmap without also needing to know where you are on the map at the same time  so it seemed reasonable to combine them until our service call latency issues can be fixed.    **NOTE**  Updated to use a separate service to get the pose. Need to target this to the lifecycle branch still.
ros-planning/navigation2,796,2019-06-01T00:00:02Z,2019-06-04T20:01:50Z,True,2019-06-04T20:01:50Z,31c6f9393ed079daef56ed73713fbbdb9a2337a7,1,2,12cf2d5593abd31088f8765b52f9ac549cbfd599 1bf6593c24a87d30192485afa5a9f0e4f99057c6,1 - High@nav2_lifecycle,Update costmap on new computePathToPose,This PR fixes an apparent oversight where the navfn_planner doesn't update its costmap when given a new `computePathToPose` action  which previously caused failures when attempting to navigate to areas that were considered illegal from the initial costmap it received.
ros-planning/navigation2,806,2019-06-05T22:16:05Z,2019-06-06T15:59:49Z,False,none,b2a86e990fbd3a3297f7d2a2fb9f722820e8bfe2,1,1,1e64c978feace0d5085b0c97f852c52acfdb1b69,nav2_lifecycle,Work around rviz_common import error,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #799  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Nightly build tarball used in the osrf/ros2 docker image has hardcoded paths to the ROS 2 build farm's install location. This specifically is a problem for packages that use the ament_export_interfaces mechanism such as rviz_common. When trying to import that package using `find_package(rviz_common REQUIRED)`  we get the error   ```  Imported target "rviz_common::rviz_common" includes non-existent path        "/home/jenkins-agent/workspace/packaging_linux/ws/install/include"  ```  * To work around that problem  this PR creates the invalid path in the docker image and symlinks it to the real ros2 location.
ros-planning/navigation2,798,2019-06-01T00:36:40Z,2019-06-06T16:54:46Z,True,2019-06-06T16:54:46Z,7e463d376492e53f193c931ba45303c9e2990162,1,2,4dee64cc827c6fc92a8917ef08abb04c9d5a61db c20625ec5e7ef9da781534f33c647bfe7f1da980,nav2_lifecycle,lifecycle branch remove apt key from Dockerfile,## Description of contribution in a few bullet points  See #797 - this is the same change for the lifecycle branch    ~~THIS SHOULD BE MERGED ASAP before any other PRs so that we can unblock the build (again)~~    Correction - the build works without this change because the key already exists in the upstream OSRF docker image.
ros-planning/navigation2,805,2019-06-05T00:05:43Z,2019-06-06T16:58:19Z,True,2019-06-06T16:58:19Z,e5be6033a236d3a0069e4cb7347e8bdd46b87a4a,9,4,46daf6a56a2a147df8270da487e7b7e137c30820 2d2863c5601c42a33c5d43f97082a834d04d3b9b e392d431a338b92eae23f10fc612cf4554a603f9 3ffcccd5352deb615431a5951a7a3c1fc3a549e6,nav2_lifecycle,Re enable costmap tests footprint and inflation tests ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #121 |  | Primary OS tested on | Ubuntu 18.04 |  ---    ## Description of contribution in a few bullet points  - Re-enables footprint and inflation tests  - Removes obsolete static_tests from repo    ## Future work that may be required in bullet points  - The `costmap_tester.cpp` test is still disabled since there was a dependency on rosbag. I believe rosbag is now supported in ros2  so we can look into re-enabling this test   
ros-planning/navigation2,802,2019-06-04T18:09:38Z,2019-06-06T22:13:54Z,True,2019-06-06T22:13:54Z,916a6eece26190d34160a721533e05f41dedfa35,6,3,2ebe606e35d5e979b0b8614b093a398ddeef5e6a 81f4e451f6203c7dfb89e4c64a15945a16721010 ada06f258ea6a24fb935fc197bfdeef0a6b0dabb,1 - High@nav2_lifecycle,Enable navigation goal preemption,Addressing #801    ## Description of contribution in a few bullet points    * Updated `bt_navigator` in order to replace a previous goal with any new one received.    ## Details  Here's a short description of how the preemption happens. Each new pose provided in RVIZ by the `Navigation2 Goal` tool creates a new ROS2 action request. The action server (`BtNavigator::action_server_`) callback captures the new goal handle. The `BtNavigator::navigateToPose` thread is checking periodically (at each behavior tree tick) for any new goals. If a new goal is received  the previous is canceled (informing back to the RVIZ action client) and the goal pose updated.    The new goal propagation happens automatically for the planner and controller without having to preempt their respective actions.    *This feature will not work if continuous replanning is not enabled.*    ---    ## Future work that may be required in bullet points    * Update `mission_executor` (using a similar pattern) for preempting with a new mission.
ros-planning/navigation2,783,2019-05-31T14:23:22Z,2019-06-07T18:46:57Z,True,2019-06-07T18:46:57Z,f92c1ebddfc059bc9ca80935225393480be58680,7,15,36cd2cd9f352a216b2b3bae00b2ee65959fcd3d6 e36d5046a1e4b2e39866be7af682dcc8b524e429 68de23a76305fa29b2082127bd3a7de4bc90f234 47c1190c4d57b18250f8976e1dedaa69071a5188 887541968c6f95fb6549ee1612790cadf46f80cd 6ad9fc1b99c544c65123e349d16bbe1f6c1a7877 3d13f5d92b9f79e5e206aa3ae8ceeb738b33d232 b519defe6b0f33d6652e060ed50eafb4fdf9f9d7 ec19703ceea9275db9139e4475679fd224327d54 c78d1122bd4d6f8fdd4e2e3ba275e768a9de4437 ceb2afe1dff3eff3894c92229796f7bb5e1f281f 60505796469dc89339a17e65ad194ca9a78ed705 33177ef4c83611c673c7d5dd08dd75cd253ad574 7d94cfa38bdb213c89d9c7b42b6549a707c44c4b b16ed83d9ef8abc86244be08f236350af60cd56c,0 - Critical@nav2_lifecycle,Enable bt_navigator system test on lifecycle branch,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Description of contribution in a few bullet points   - Enables the bt_navigator system test on the lifecycle branch      - UPDATE: Now uses the `navigate_w_replanning_and_recovery.xml` behavior tree   - DISABLES the linters for some packages temporarily    ## Future work   - Enable other behavior trees and change the test to use the default  (DONE)   - Enable the localization test (#795)   - Enable the Planner test (was already disabled prior to this PR)   - Enable the linters again - #812    - Clean up the nav2_params.yaml - #813
ros-planning/navigation2,795,2019-05-31T23:43:26Z,2019-06-07T23:29:36Z,True,2019-06-07T23:29:36Z,986815fad514b6a86ca1ebe1cc33540777edc698,1,1,5eba2d5528cf70b41a1b9283b202dbaf37058d5b,nav2_lifecycle,Enable localization test,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | () |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | () |    ---    ## Description of contribution in a few bullet points    -Enabling localization test to make sure it is passing CI.   -We should merge this once we have the fixes for CI    
ros-planning/navigation2,831,2019-06-10T20:54:54Z,2019-06-12T19:48:07Z,True,2019-06-12T19:48:07Z,d42cbd1b035ceee3c1a051c43c4c6b5431618653,1,1,19a86ea4ef40f26d7497bc4059fbbe06aeafa1f8,1 - High,update global plan and footprint topic names in rviz,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #814 |      ---    ## Description of contribution in a few bullet points  - update topic names for rviz visualization
ros-planning/navigation2,839,2019-06-11T16:56:09Z,2019-06-12T18:58:17Z,True,2019-06-12T18:58:16Z,8b4d4d936e2b0007f2963ef79521d0109749b0b8,3,1,4ccbdf75ee6c3f1a984f6e56e106ae842a635c86,1 - High,Run lint tools on nav2_lifecycle_manager and nav2_tasks,Also checked nav2_bt_navigator and nav2_robot  which are clean.
ros-planning/navigation2,843,2019-06-12T18:11:52Z,2019-06-12T18:50:47Z,True,2019-06-12T18:50:47Z,e754f42afb7c6109f673d359641c09e84094993e,1,1,bb2ee9deae5735b1fa63f050f609c2129d1c1ebe,0 - Critical,Use_sim_time missing from a couple nodes in the params file,Probably lost these in the recent rebasing of lifecycle against master. In any case  all nodes in the nav2 system should have use_sim_time set. The use_sim_time value can be modified with a command-line parameter to the launch script(s). 
ros-planning/navigation2,845,2019-06-12T18:50:00Z,2019-06-13T15:43:29Z,True,2019-06-13T15:43:29Z,6be3a0826bc9eca716a40f3062c05a71dc59e601,3,1,fae6b3f723004547dbde05e271f4fa53663f8b09,2 - Medium,Call now on the main lifecycle nodes instead of rclcpp_nodes,Now that lifecycle nodes properly support use_sim_time  we can get the  current time from the node itself rather than relying on the rclcpp_node  (which is a temporary bridging solution to interface to ROS2 functionality  that doesn't yet support lifecycle nodes). This PR is one of several steps  that we'll take in order to remove the rclcpp_nodes from the navigation  code  thereby reducing the overall number of nodes in the system and  therefore the overall number of topics and services  which should relieve  some stress on Fast-RTPS.     NOTE: #843 should be integrated before this one. 843 adds a couple missing  occurances of use_sim_time to the nav2_params file. These ommisions  didn't previously cause a problem  because sim time was retrieved from  the rclcpp_node instead of the main lifecycle node(s). Once sim time is  retreived from the lifecycle nodes (this PR)  it must  of course  be set   properly (#843).     Also  had to remove 'const' from getRobotPose because it calls now()   which is not const in rclcpp::Node or rclcpp_lifecycle::LifecycleNode. I  entered an issue  #844  to follow up on this in rclcpp. 
ros-planning/navigation2,750,2019-05-22T21:31:16Z,2019-05-31T17:51:05Z,True,2019-05-31T17:51:05Z,845e24d813a634a593e73d18cfc16e2b2b0da378,102,3,f5e43edc2e5df28bd03e51d10df80dd501cd1d97 24c0d3ee9b7da65f9791f038306ff1d31d58b962 64579429bb45587c35fb784a45f0add2702bb8c4,nav2_lifecycle,Move lifecycle headers,## Description  * This PR moves the lifecycle_node and lifecycle_helper_interface header files from the nav2_lifecycle directory to the nav2_utils directory. It is part of a larger effort to simplify the overall nav2 directory structure. There were only a few files in the nav2_lifecycle directory and we already had some lifecycle-related functionality in nav2_utils  so it seemed fitting to consolidate there.     ## Future work  * Eventually these headers will become obsolete as more functionality is updated in ROS2 to support lifecycle nodes (the direction in ROS2 seems to be for classes to use interfaces pointers in their constructors rather than rclcpp::Node or rclcpp_lifecycle::LifecycleNode). 
ros-planning/navigation2,808,2019-06-06T17:07:57Z,2019-06-06T22:42:00Z,True,2019-06-06T22:42:00Z,c6490ea56c99bb33cca2ea6ae8d258cb3779a739,2,1,c320b629cb96031074274fca6b5ed8c6d43ee0e5,nav2_lifecycle,Spin the node from the blackboard before calling getCurrentPose,## Description  * The node on the blackboard is not on an executor. Before calling getRobotPose  we must spin_some so that it processes incoming messages. 
ros-planning/navigation2,837,2019-06-11T15:37:49Z,2019-06-12T18:54:22Z,True,2019-06-12T18:54:22Z,28f6dedce2c9a0f2d594b1ba4f3f20961fb521e0,17,1,e650149af4391619f9f2300d9c8eb6c65af05cdc,,Remove the nav2_mission_executor directory,This functionality is being removed from the nav2 repository and will eventually be revived in a separate repository. The plan is to first pull out the generic Behavior Tree functionality into a separate repo and then build a mission execution system using this generic BT functionality  also in a separate repo. Then  we will be able to span navigation  grasping  and other kinds of tasks  all coordinated using BTs.    Also  we have a general "background thread" to reduce the number of directories and consolidate  where appropriate. 
ros-planning/navigation2,838,2019-06-11T16:38:37Z,2019-06-12T20:52:58Z,True,2019-06-12T20:52:58Z,baddfdd885e98090f4eeb18475ea1430308f2e9d,6,1,feb8a74b69f87ca74fe6ed6fe47a1f0c25e37766,1 - High,Delete pause resume buttons and services,We don't yet have a full solution for bringing nodes into a state where  their parameters can be reconfigured and then the nodes reactivated. So   we don't want to expose a partial solution for the Dashing release that  could potentially be confusing for users  so we will only expose startup  and shutdown for now.     Currently  all lifecycle node parameters are read during on_configure.  Going forward  we will re-assess all parameters to allow for other  options  such as on_activate. Once parameters are associated with different  state transitions  we'll then have to clearly document the parameters and  their state associations and/or come up with an automated way to allow for  node reconfiguration.
ros-planning/navigation2,777,2019-05-30T23:25:59Z,2019-06-07T16:22:31Z,True,2019-06-07T16:22:31Z,146c29bc150df4a6d0bb4aa7108078c37d51c7ea,1,3,db9a4ba8e5036b58bdce50d35d0d710c79297bd4 094dc742c8da4e71728dc367fb86e06e3884c7ea 2949d6a5a68562a99cf0d7824e2543c304c36c5b,nav2_lifecycle,Add an all in one launch file for nav2 developers,## Description  * This PR adds a launch script that attempts to make it easy for nav2 developers to launch everything required to run the nav2 stack in simulation. There are a number of command-line options to control the launch behavior. This script isn't intended for use be end-users  who should use nav2_bringup_launch.py instead.   * Deleted the bt_navigator.xml as agreed. Instead reference the XML file in the nav2_bt_navigator/behavior_trees directory directly. 
ros-planning/navigation2,848,2019-06-12T22:11:29Z,2019-06-14T01:04:13Z,True,2019-06-14T01:04:13Z,9f5564576adc11927ed0870840560d875edd0f03,18,2,83b4e5b8e1efbec6c79becd9de247a9d427ff8b7 0d7a69d4c6de0ac612ffb4c993707e1dd3fda80a,,Re enable nav2_costmap_2d warnings,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #535 |    ## Description of contribution in a few bullet points  - Re-enables and passes warnings in nav2_costmap_2d
ros-planning/navigation2,658,2019-04-10T22:34:57Z,2019-05-16T00:12:46Z,True,2019-05-16T00:12:45Z,90f12bc1ffb1734282bdd8fc0f3395f848a27cc9,17,9,682193bb4001a2b887616778a731d769f31a1699 04d2d245269226c1d2ae62d0e899559ce85f4c38 574fda891ec9c0296e1474fb0f4831b2f2ea1d5e 56ec23abb5ddeeeb30ec5b3e37fecb1e5d5c1371 a989a89c33fb82f17b9e0d5702cf7fe1b0609765 f0a39475e3280db682358d65940bd8e8b3a0a66f d620e2ac1c63b20e0b04aad2fd702026da4b28a5 078add88d5015d5f108da7c216fe53b1cc64bfc5 ffc1b135cee58054bcdd3c41b6cdf17cbd4901c1,,Cleaning up warnings and errors detected by clang ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | NA |  | Clang version | clang version 6.0.0-1ubuntu2 |    ---    ## Description of contribution in a few bullet points    * Fixing miscellaneous errors detected by clang. Many real defects. Some just unused variables.  
ros-planning/navigation2,851,2019-06-13T19:15:17Z,2019-06-14T01:05:27Z,False,none,c58397a3ba9a3a0d2aba184d224f874e8ec868ae,8,6,0633e23c62f6fbb174340578b1265ff09687efcb 3f8e65041d85a1663f6e75b1b327224b7c74544e b40f27568e6086697c639fae23cf2c90a72bbd9a 4efce6f84ef0d19005086f7e35b746ae3898c249 ac09676616183d0bc340444f848c78fcf5095b62 0f3cb80c5ce3e1fe6200aeee9bb9b5c7e9772911,,Ignore global parameters when spawning sub nodes,Fixes https://github.com/ros-planning/navigation2/issues/842 To test  run the nav stack with node name overrides in your launch file.
ros-planning/navigation2,858,2019-06-14T01:15:32Z,2019-06-17T17:08:28Z,True,2019-06-17T17:08:28Z,d06920392a5514b5ab5f258398f037f23c575928,9,3,18ee69d8c0056e48a0e5613178c42dc64f3c4bca 709ca2c217b3d7b5cba5ac814691443828ecbafc c55588e70312eae2da34b4d8f7bde202f3ac341b,,use __node in NodeOptions,This way  if __node:= is passed to the node executable  it gets overridden on each subnode and these subnodes get unique names.  Fixes #842  This is a better approach than https://github.com/ros-planning/navigation2/pull/851 since it respects other global options  like topic remapping.  To test  run the nav stack with node name overrides in your launch file.
ros-planning/navigation2,852,2019-06-13T19:42:29Z,2019-06-18T18:03:14Z,False,none,fcc0533b384cfe309b0c43100d8bcee0c8a21287,56,9,2421d74fa10beea0e4776b5f531aff14e0e95846 0bd922b930087d69ee9cfe0fe6c2f5e9c297f6fc 2c0a9b3cca110ed51cc0833c1250fb164940bd52 bf18cc586685db841abf4b1d04a3fabe8044c0e0 d2329bcaf0524778302bb10e4ed472c9a0755498 9cbb60b0f4a15ac55593338df8e065620526b70d b830d0ac7d0fa401019b580e261d74f4baacf007 b7c711f43cfcb9188b31e60184b53d8698f6f495 9edbbef8eb50145065281f1f2f4f41c3d7352728,,line buffer stdout,When launched with launch_ros  executables can withhold logging output at log level "INFO" until termination. So RCLCPP_WARN will get output immediately  but you won't see RCLCPP_INFO until the program terminates. Explicitly make stdout line-buffered so this doesn't happen. 
ros-planning/navigation2,863,2019-06-17T22:50:03Z,2019-06-18T20:02:11Z,True,2019-06-18T20:02:11Z,241e4b81f8d0cc400dd50ec53c626630ce8949cd,2,1,2dce58a832678be929d7e1b78cf14fbfca96d54d,1 - High,Re add republishing of map every 2 sec,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Description of contribution in a few bullet points    When running with autostart = True  I don't see a map appear in RViz. I'm not sure why but I don't believe that the latching is working correctly for the /map topic. However  when I re-publish the map topic every 2 seconds  then the map appears in RViz. This is consistent with what we were doing before we moved to lifecycle nodes.      ---    ## Future work that may be required in bullet points    Debug why this is required. It may be that the QOS settings for the map need to be changed in RViz to 'transient local'  'reliable' which is what we're using for publishing the /map topic.    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    ---    
ros-planning/navigation2,865,2019-06-18T18:14:36Z,2019-06-19T02:06:42Z,True,2019-06-19T02:06:42Z,2166de4441727d71b8bf0bbe92a119c661823c6d,2,1,39e8b2adfd42655cab4cd36d341d66b02fb8f3b4,,Set environment variables so logging comes out in order,When launched with launch_ros  executables can withhold logging output at log level "INFO" until termination.  So RCLCPP_WARN will get output immediately  but you won't see RCLCPP_INFO until the program terminates.  Explicitly make stdout line-buffered so this doesn't happen.    Better solution than PR #852 
ros-planning/navigation2,846,2019-06-12T19:09:08Z,2019-06-19T17:23:43Z,True,2019-06-19T17:23:43Z,58d610f4f8d6852a59f8d4ab5b0508edb157daa3,2,1,e6b0d015b1802fd4a45920a5eb8df913463ebc83,,Check in lifecycle_manager for successful state transitions and some refactors,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #817 |    ---    ## Description of contribution in a few bullet points  - Added check for state of nodes after requesting transition    - if an error causes node to fail transition to intended state  should now be inferred  - some refactor and cleanup of code    ## Future work that may be required in bullet points  Since we don't have access to the actual callback return code (i.e. CallbackReturn::Error) when an error is thrown during a transition  we can only infer an error by the resultant state request after a transition request. A future proposal could be to add additional information to the srv/ChangeState so that service clients can more precisely learn what happened during a transition request.     Also  for now if a call to `on_cleanup` or `on_shutdown` is made and the error is thrown  during those transitions  the resultant state could match the `on_error` primary state after the request is made (if returning SUCCESS (error goes to unconfigured) or FAILURE (error goes to finalized))  and the lifecycle manager wouldn't itself catch it. This may or may not be okay  depending on what actions are being taken during the `on_error` call.   
ros-planning/navigation2,860,2019-06-14T21:07:20Z,2019-06-19T17:54:33Z,True,2019-06-19T17:54:33Z,b56f712344f231b887a5115d7baa01eebe1ac8fc,7,1,d00a735635b8ce08a6d84fa8c888fa0fcabeabb9,,Move install commands to subdirs where target is defined,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #768  fixes #856  |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    Moves `install` commands to the subdirectory where the library is defined to properly support CMake 3.10.2 on some systems.
ros-planning/navigation2,869,2019-06-18T22:32:48Z,2019-06-19T18:26:38Z,True,2019-06-19T18:26:38Z,023cdd5ba1849f4e0987ad51d32dfd6b85836c06,4,1,c2c198496442effd315c1e2af2171707019fa85b,2 - Medium,Removed unnecessary info messages,- To clean the user terminal  removed unnecessary info messages and replaced them with Debug.   - These messages are meant for debugging purposes and they don't provide valuable information to the user. 
ros-planning/navigation2,866,2019-06-18T18:27:11Z,2019-06-19T20:11:03Z,True,2019-06-19T20:11:03Z,ff754f1bb018ac0af48dd2b58639f3ec04c5822b,4,2,fadb559e55c3ed42920421fd957c91f2dc20921e 08aa9f5360bad117e2572ac150eaef955fbbe462,0 - Critical,Spin rclcpp node on executor and cancel,This approach replaces #854     ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #792 |  | Primary OS tested on | Ubuntu |    ---    ## Description of contribution in a few bullet points  - Added executor to spin the rclcpp node in thread  - Cancel executor in destructor of nav2_util::LifecycleNode in order to stop spin in thread  ---    ## Future work that may be required in bullet points  - The only difference between this approach and a normal `rclcpp::spin(node)` is that we have created our own executor that we can use to cancel the spin(). Since the normal spin locally creates a `rclcpp::executors::SingleThreadedExecutor`  we could consider adding an interface such as:    ```  void  rclcpp::spin(    rclcpp::Node::SharedPtr node_ptr      rclcpp::executors::SingleThreadedExecutor & exec = rclcpp::executors::SingleThreadedExecutor());  ```  
ros-planning/navigation2,719,2019-05-15T15:15:59Z,2019-06-19T20:56:50Z,True,2019-06-19T20:56:50Z,549c69a6619dccb6344a96919e5c830aa9078a9d,1,1,8a3c4e2099877a2daded3580c87d6d96ec81673c,1 - High,Fix no valid trajectories when obstacle on path,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 in Gazebo |    ---    ## Description of contribution in a few bullet points    * There is a flaw in the Goal* critics that cause them to reject valid trajectories. This is most easily reproduced by "navigating to pose" and then dropping an obstacle onto the path some distance ahead of the robot. DWB will fail well before it reaches the obstacle saying no valid trajectories were found.  * The root cause is in the way the Goal* critics expand their cost function. They add a 0 cost goal cell and then expand out from their add 1 to the cost at each step. However there is an optimization in the expansion that skips cells that are invalid. When the goal itself is invalid  absolutely no cells get enqueued and the Goal* critics think every trajectory hits an unknown area.  * This PR removes that optimization. It's still a WIP because I'd like to fix this in a way that doesn't hurt performance  but if there is no time  I'd like to still add this PR as is to the dashing release because it fixes a fairly major bug.
ros-planning/navigation2,857,2019-06-13T23:38:00Z,2019-06-18T21:48:34Z,True,2019-06-18T21:48:34Z,b08160c126b1b84ba11df25bfbd18a1a6f982bcd,5,8,d6228489ab01a52b8e6d181a53eb4d3bca685d18 b36c75d39fa02bd4046384a70ffb6e1f86c850e9 458ac80e9966510800c63b8259acd80cafd1cf4a ebce88f8f1e8bebc4c4827898536aa0b6ed345b5 680963c5354007dfaf5e46eb6e501b6349b1fdc1 5d2cfc04f14f63414ea86cd007d29609cea46bab 76fbaca9582f5a226260bd65b14ef76270359a12 4ffc0b0b44a5aa2900a8ebc074373368fe86ae98,2 - Medium,Adding RecoveryNode to Behavior Tree,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---      ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (fixes #832 ) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (Gazebo + TB3) |    ---    ## Description of contribution in a few bullet points    - Added recovery node to nav2_bt_navigator (#832)  - Updated our existing `parallel_planning_w_recovery` tree to utilize the new recovery node    <a href="https://user-images.githubusercontent.com/39755151/59474267-fdbeef80-8dfa-11e9-8806-b114aca05982.png"><img src="https://user-images.githubusercontent.com/39755151/59474267-fdbeef80-8dfa-11e9-8806-b114aca05982.png" width="300"/></a>    <a href="https://user-images.githubusercontent.com/39755151/59530510-a53e2f80-8e98-11e9-9c7d-f91dce831876.jpg"><img src="https://user-images.githubusercontent.com/39755151/59530510-a53e2f80-8e98-11e9-9c7d-f91dce831876.jpg" width="600"/></a>      ## Future work that may be required in bullet points    -  By utilizing the new RecoveryNode  implement local and global recovery actions.    <a href="https://user-images.githubusercontent.com/39755151/59537546-be041080-8eab-11e9-968f-8dc4bc524679.jpg"><img src="https://user-images.githubusercontent.com/39755151/59537546-be041080-8eab-11e9-968f-8dc4bc524679.jpg" width="400"/></a>    
ros-planning/navigation2,872,2019-06-19T19:49:41Z,2019-06-19T21:24:23Z,True,2019-06-19T21:24:23Z,5fe3d4ecc2a5abd7abcdb622ec34f05721da3268,1,1,78f5f432f08ed82af0dc31aa89d1d90d413f3399,,Reset non trivial objects using assignment,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | N/A |  | Primary OS tested on | Fedora Linux |  | Robotic platform tested on | N/A |    ---    ## Description of contribution in a few bullet points  * Addresses build errors when `-Werror=class-memaccess` is specified.  * Tested with: `gcc (GCC) 9.1.1 20190503 (Red Hat 9.1.1-1)`
ros-planning/navigation2,736,2019-05-17T22:44:28Z,2019-06-20T14:50:59Z,False,none,f5895785d199c2124d1da83580f1b503247e07e0,3,1,c5540d02cdf1db710fdaed0210ec4a684a2197ca,2 - Medium,updating launch file entry points to be descriptive and complementary instructions,The launch files named `1st` and `2nd` aren't super descriptive of what's going on. The split is pretty clear between navigation elements and map-localization elements (where that would be swapped out with SLAM when necessary). This PR changes the names of the entry points to `navigation` and `localization` and the complementary instructions with them 
ros-planning/navigation2,841,2019-06-12T15:04:13Z,2019-06-21T00:43:23Z,True,2019-06-21T00:43:23Z,fefa0aa00945c189698862a35baf42b061030884,5,21,1a13faac89a7a8d02d46813e040c7202627183e5 7d7dffbd40ddce28ff852e72f1218c2246dbbd07 beca44a896d2152f238bc48db197cab01e30b7fa 754fe410b449b4d930c87b6d7a2d7c58a389db36 192329a9cea628e74fe9b24c62cc2f8490195c5c 7382daf17c6e08790e929592115dbcd2a8cd2e41 f83d7bb3d62849baeb5f786f9e34b841bcd38c4b 41507f72cadb46ce3b338fe2643e9dc9448a6eab d7316489aa414221b15861e56dc93996de2c9667 e88b822e202198b5d4860c62f737fa08b4362f37 1150ddceb6a02a24eff1aef8f87e3bb1cd0453a0 96fab84d67f3c1214f91a86d1ecd039814e4a95b 4991b47b4a1036f485ba11c818147ae7e811d3bd a58286cb1ad6872fa870f24dc61424e0e7306f5e bc99555a4d233f0c64d38235d859567e782a5da0 ab2973f42746cc8c17eca125c8dff14fd6f27ab2 fb41912b50111b547f70b56be6f7e21f0b049ec3 5df8926317d597f776a6f5112bdb5870a5ecc1cf 15b0784ca7ed9dde60ca37b4d515355fc1f3daf6 2877106d6ae729c6e2b8cc333a71b80389c16975 fa9a42c43bb3071d3671bfd1fc1743a4551b529b,1 - High,Update bringup for lifecycle nodes,## Description of contribution in a few bullet points  This is fixing the nav2_bringup launch files to work with lifecycle.    It also updates the README.md file with the new simplified bringup instructions. Note that the 2 part bringup is no longer shown in the README. The nav2_bringup_launch.py file is all that is needed.    However  this is re-adding the 2 part bringup files:   - ~~nav2_bringup_1st_launch.py~~ -> nav2_localization_launch.py   - ~~nav2_bringup_2nd_launch.py~~ -> nav2_navigation_launch.py    These are not being documented right now  but the nav2_navigation_launch should be useful in the future for use with SLAM packages.     ---    ## Future work that may be required in bullet points  Test / fix the nav2_navigation_launch.py to work with SLAM.    ---  
ros-planning/navigation2,720,2019-05-15T15:34:50Z,2019-06-21T15:43:09Z,True,2019-06-21T15:43:09Z,413f4fc735e4de0dc9e2338d8413052c07636f13,8,7,ecc50b0291c70ebe9e388e437f7b11be31ac1891 ff0cdbf68ef6fdc97caf101c44448b677b81351d 776feffdc7304948fcb43eb3afcc670c34907178 bef920f0f820abcb7a9b788c940fe73efda6864a 9ffffe4747bb42a4d97729a0f268374f6b788dcb 61a2e84d0db755777ac6a52c40b97a0323628bff 5bfeca1e8074b2cb8c7feb070505aba13cae877e,2 - Medium,Add support for DWB to use a costmap in the base_link frame,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 in Gazebo |    ---    ## Description of contribution in a few bullet points    * This PR fixes DWB so it can use a costmap in the base_link frame of reference. The main problem was transform availability when DWB tries to convert the plan into the local frame of reference. Typically the transform was not available yet  so this fix gets the latest and checks if it is reasonably recent  where "reasonably" is a parameter.  * The static_layer of costmap is not happy in the base_link frame of reference  so this PR disables the static layer in the local costmap and turns on the rolling window mechanism instead.    ## Future work that may be required.  * Running on the TB3 in Gazebo  a 100ms transform tolerance was not enough. It seems like there is a bug or performance problem causing the transforms to be delayed so much. Sometimes even the 200ms that this PR uses is not enough.
ros-planning/navigation2,884,2019-06-20T19:46:53Z,2019-06-24T21:11:56Z,True,2019-06-24T21:11:56Z,f955a04cf7f654d6f3f7a9f2a78fed69c7cbb0bf,2,1,a30f0f53afb970bc0076aa646db3c7c0ea35de98,1 - High,Reverse order of shutdown nodes,This PR aims to address _part_ of the issue concerning clean shutdown of nodes even while the robot is navigating    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #883  |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Gazebo simulation turtlebot3 |        ## Description of contribution in a few bullet points  - reversed order of shutting down nodes  (reverse of bringup)      ## Future work that may be required in bullet points  - the `changeStateForAllNodes` function is only being used by the `shutdownAllNodes` call. I think we could refactor/clean up the code either by consolidating those functions or by using the former elsewhere during bringup. Instead of bringing up each node with configure and activate back to back  we could transition all nodes to configure first  and then transition them all to activate next.     
ros-planning/navigation2,847,2019-06-12T20:43:54Z,2019-06-24T23:29:44Z,True,2019-06-24T23:29:43Z,8793b3b152b8d970e5a5256cc4c6e502f44abc0b,2,7,11f643c775334c8404b4bc80321ba7447a8deb6e aaff5f722b4bc1c7ae12e449d58588d5862062ae ef96ebb10b06aac260b8669baf11fa0d8c2bbd88 d65eced9e9cc5799ca2080914726833846caffde 46d5778cbbfa3d12ff774978a883791fc11d2632 da05fed1e6b8c1e702c16b370041825240512062 a62651e76d3b072ac31455a0c541c135257fefc0,1 - High,Amcl map update,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (fixes #819 ) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (Gazebo + TB3) |    ---    ## Description of contribution in a few bullet points    - This is a quick way to bring back map topic functionality to amcl (#819) for dashing release  - This requires re-initializing pf and memory allocation during active state which is not desirable    ## Future work that may be required in bullet points  - This PR violates our initial lifecycle strategy to allocate memory during inactive state  - Let's have a team discussion to come up with a design to be more aligned with our lifecycle strategy    
ros-planning/navigation2,890,2019-06-25T15:54:04Z,2019-06-25T17:11:18Z,True,2019-06-25T17:11:18Z,a892011d0e8d1f642a100ab128422eab86cde21d,1,1,4296a0cd4eca6a4cd7858307796171fcae829bde,0 - Critical,Fixed nav2_util uncrustify issue,Fixed nav2_util uncrustify issue.
ros-planning/navigation2,606,2019-03-13T19:47:57Z,2019-06-25T17:50:01Z,True,2019-06-25T17:50:01Z,5cfcb35e30ea5d2d68bfcf0842891820dbf82fbf,4,11,442a3a6ae711b335f0073f8d97b1b9c74c69a6bd 29f7b2569a06508bd83b8f0f490fb42059d3a73a 65d2becc86ea87814eb1d2bd7e6d3ebeefff8858 06104e323578e392a49511d306131fc3ed052ce2 3f6028b06e706dae40051664e9bc91702466ba38 9a25729734f5f2e3060acfeb5b99b923070c80f6 80e0ac51c5d527226cd088463bdc5e42cc3d7b2f 156bb7bf9f41be698f2ce23ca31fbf0a8ab0d2a7 5fc802fa6ae8406054690a03c786b20088baa702 faa46e829eae10f4d06cc407361ba70268cbdd1a 31dc6aa89610c406715aa1bee8859abc1d55df9e,1 - High,Adding a docker file to help test for missing package xml dependencies,## Description of contribution in a few bullet points    * Added a docker file that builds ROS2  the navstack dependencies and navigation 2 in one big workspace without sourcing any setup.bash files. This catches any missing ROS2 dependencies in our package.xml files.  * Also added a Pre-release checklist doc.    ---    ## Future work that may be required in bullet points     * There is a lot of duplication among our docker files that needs to be fixed. I don't know how to do that yet.  * This docker file starts from `crystal-ros-core` to get the correct apt sources file and the basic dependencies that ROS2 needs  however `crystal-ros-core` installs a bunch of ros2 packages we don't need since we are building everything from source anyhow.  * The `crystal-ros-core` base image probably needs to be an argument  so we can change it based on which branch we are targeting.
ros-planning/navigation2,793,2019-05-31T23:00:06Z,2019-06-25T18:34:42Z,True,2019-06-25T18:34:41Z,700119f63fff59f8aacddeeffbbb75f5e64e29d1,11,5,a4ef09a34a4ded3f92a09ec45719f4837e834b53 9463e71710a30b6c5fe9ab3c8b072ef2a488f67b 8db0d794d6b060b0fb06e13813dba00878195bda 7948c3fa8a6d10ff43be98031e58d0225277c199 efb8302aaac6e4b0108a164be683064e4d8ac5a2,1 - High,Transform robot pose lifecycle,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #518  |  | Primary OS tested on | Ubuntu) |  | Robotic platform tested on | TB3 in Gazebo |    ---    ## Description of contribution in a few bullet points    * Get robot pose from transform in navfn.  * Fix navfn to get costmap in action instead of on init function    ## Further work that may be required  * We need to assess the impact of obtaining the robot pose via a service call instead of doing the transform locally.
ros-planning/navigation2,880,2019-06-19T22:59:01Z,2019-06-25T21:20:20Z,True,2019-06-25T21:20:20Z,1aa9b0a860cd1748fe70133d7e98c9a650a0707f,2,2,a0f643ec556d130eda9e36de9be584b81a297846 c6b063b0b11d02a08c6f720dc8025b4e09db91ba,1 - High,Addressing bt_navigator crash,Addressing #870.   ---    ## Description of contribution in a few bullet points    * Added `activate()` and `deactivate()` to action server.    ---    ## Future work that may be required in bullet points    * Action server should also be enabled and disabled in Navfn and DWB.
ros-planning/navigation2,849,2019-06-13T00:15:53Z,2019-06-25T22:35:29Z,True,2019-06-25T22:35:29Z,d1d36ddd55e45e9960660ea137ea294ef320f7c4,15,6,ce68824fb23effc3af9592296437851048a43e9c 15833761def4e9ceccae3f6529f005b221f3c109 356ee75fafc9c9e74346e8c1498338d3f3c4531d 8abbc3bfef06be66080ec01cbe35b7a66bf1acb3 af7874c1ecdadf851c5b06d7e7b9af428b143861 831b85cc24fb187095dfa3d82a55593f68d28363,1 - High,Extended the SimpleActionServer interface,## Description of contribution in a few bullet points    Extended the `SimpleActionServer` interface and improved a few other things:     * Added additional checks to make sure we only keep the latest preempt request in the queue.  * Action server users no longer interact directly with the goal handles. Provided additional functions for aborting  canceling  etc.  * Updated `bt_navigator`  `motion_primitives`  `dwb_controller`  `navfn_planner` to use the new interface.    Here's a diagram of the states and transitions:  ![SimpleActionServerStates](https://user-images.githubusercontent.com/39749557/59569861-79f84380-9044-11e9-967e-8dde48970573.png)      Refactored the DWB controller main loop:    * Changed the order of the steps to: 1) check for cancel 2) check for preempting 3) compute control 4) check if reached goal  * Made a few other small refactors.  * Added checks for handling pending preemptions after the controller has succeeded or failed.    This partially addresses #811 and possibly fix #835. Haven't been able to reproduce #835 to test.    ---    ## Future work that may be required in bullet points    * Fix the `SimpleActionServer` unit tests.  * Handle a pending preemption after reaching a final state on current goal #861.
ros-planning/navigation2,892,2019-06-26T01:49:59Z,2019-06-26T16:55:20Z,True,2019-06-26T16:55:20Z,43f8e726b9bab2eda5767203d5b30ab64c1ad69d,1,1,c3cf53335021a25fa292bba467eb5c1d28edd07a,,Fix error on visualizing the total cost,Signed-off-by: vinnamkim <vinnam.kim@gmail.com>    ## Description of contribution in a few bullet points    I found some error when visualizing dwb_cost_grid. `totals.values` seems to be summation of scaled costs.  
ros-planning/navigation2,840,2019-06-11T18:13:55Z,2019-06-27T18:39:50Z,True,2019-06-27T18:39:49Z,5754cb68a9493dc88e650971e66cb70182e6c53c,1,3,368a255bead3f94989d25164b787c3970a695d81 8b048217ae0d9dafe05856cf074e574148bd7589 abbe0688d63b1804cd2f46d72cc390311eb102e4,,Pass lint tools on nav2_costmap_2d,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #812 |    ## Description of contribution in a few bullet points  - Fix linter issues in nav2_costmap_2d    - Leaving cpplint disabled until we resolve missing copyrights  - Re-enable colcon tests in test suite 
ros-planning/navigation2,882,2019-06-19T23:55:09Z,2019-06-28T20:25:28Z,True,2019-06-28T20:25:28Z,6f671ecf660f0efcaa428405ddf216c97ce57223,11,4,293ac4c3e06e2c37aa392d4935de87751d76ff30 dbddcd5ab3ab8cf56d3310c4a93c9ac66a1cb94f 39229f61453a65f53546adad72525093603a1c38 79897a572da087c2bf8bbbf7a459a7209efcad2f,1 - High,Update Bt navigator readme,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (fixes #773 ) |  | Primary OS tested on | (NA) |  | Robotic platform tested on | (NA) |    ---    ## Description of contribution in a few bullet points    - Updated nav2_bt_navigator readme file  - Created BT diagram for all the trees      
ros-planning/navigation2,900,2019-06-28T20:37:21Z,2019-06-28T22:15:21Z,True,2019-06-28T22:15:21Z,46d98156aa98492ccb9bea14784b8a67426bd1ee,2,1,e741d82cb54f4966eca22bf94f378b87a5b0cde4,,Temporarily removing auto localization from nav2,- Currently  Nav2 doesn't support Auto-Localization.  - Will reintroduce Auto-Localization once our stack supports it. 
ros-planning/navigation2,889,2019-06-25T01:09:20Z,2019-06-29T00:01:20Z,True,2019-06-29T00:01:20Z,328983de5cd7398547e716881edd038896f8c11f,22,20,9a2bd8f28a113c97eabba318538a42ab191eb710 48c55df3e3db79df5bf8f304f554b23303df58b4 dcd2e5df8d93b04dc26912bede0df9107f4276cb cd0d9162330682c74c4377f3785eb84d4e7ad50c a54734705dce6ec04299528d89c8bee6522eb312 2ffbe48d41aef7cd571965d70fecfaa229192c52 a1b7b1f7bd499054891c3871bbbd25abd45791e6 7e8df0dfd3152da1e95ff711fdfb0990bd0b9782 6a4b21754c7546338489750729658f3f0aec698f 89504bec3e55ac56a1f6e4c5f9c7913f00785733 743c3c3c2f418f6e157367c157e9f84f4bfd3f9e 84c30314f8be9cbb8ac279ac5316cc5af6814dc5 7bfe5a3d9e69886555eb6852ce795ad802808f1d 6f334af2fabf6c1887bcf7eb2a608f9450440e8b 7c91f069a6ac24812cb66db52b9014ebc963653c a7a3a82fd4995f6e1cc6f0804e0029ab5d74bf4c 67936d86c74494ab8c2bea9740642ea5ed569d45 9c633acefcf722c85cedbb037d571fc396703f18 a2a413118643bc7533e11f3c4ff3dc332fe54ead da4f12c09ca639d38303e925d4259e665a951412,,Check for collisions in motion primitives,This PR requires #737.     ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #533|  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Turtlebot3 |    ---    ## Description of contribution in a few bullet points  - Adds collision checking into spin and backup actions  - changed default robot radius to 220 mm to reflect [turtlebot3 radius for waffle model ](http://emanual.robotis.com/docs/en/platform/turtlebot3/specifications/#data-of-turtlebot3-waffle)    ## Future work that may be required in bullet points  - Add robust spin and backup tests
ros-planning/navigation2,737,2019-05-18T00:32:13Z,2019-06-29T00:01:55Z,False,none,c60112ab9cf7637950a70d55f39152c18a0f3fbb,13,11,9a2bd8f28a113c97eabba318538a42ab191eb710 48c55df3e3db79df5bf8f304f554b23303df58b4 dcd2e5df8d93b04dc26912bede0df9107f4276cb cd0d9162330682c74c4377f3785eb84d4e7ad50c a54734705dce6ec04299528d89c8bee6522eb312 2ffbe48d41aef7cd571965d70fecfaa229192c52 a1b7b1f7bd499054891c3871bbbd25abd45791e6 7e8df0dfd3152da1e95ff711fdfb0990bd0b9782 6a4b21754c7546338489750729658f3f0aec698f 89504bec3e55ac56a1f6e4c5f9c7913f00785733 743c3c3c2f418f6e157367c157e9f84f4bfd3f9e,1 - High,Add classes for collision checking,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->  This PR adds classes to abstract the footprint and costmap2D across the ROS2 topic interface and enable collision checking in other modules. The collision checking code is modified from the `ObstacleFootprintCritic` methods    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #533  |    ---    ## Description of contribution in a few bullet points  - Publishes a `nav2_msgs::msg::Costmap` in the `CostmapPublisher`  - Adds a `FootprintSubscriber` class  - Adds a `CostmapSubscriber` class  - Adds a `CollisionChecker` class  - Adds a test for the `CollisionChecker`  - duplicates `line_iterator.hpp` in `nav2_util` (to be later removed from `dwb_critics`)      ## Future work  - Use above classes in recovery behaviors  - Refactor dwb_controller to utilize subscriber classes and collision checker
ros-planning/navigation2,910,2019-07-03T23:35:45Z,2019-07-04T03:45:35Z,True,2019-07-04T03:45:35Z,fd16483e0e8b570beceba1d078202fbe81d8d880,1,1,c37b74cab5af4da056938784a49b91824bf655d0,,Set preempt request to false when resetting handle,This PR addresses dwb_controller crash found when there is a failure of dwb. After the `followPath` goal handle is aborted from a dwb_controller failure  on the next loop of the `followPath` it will check for a preemption request on the next `updateGlobalPath`. Currently   the pending goal is being aborted and reset but the `preempt_requested` flag is not set to false. This supposedly causes an exception and crash when the handle is now `nullptr`.     Here was the log info:  ```  [dwb_controller-8] [ERROR] [DWBLocalPlanner]: No valid trajectories out of 398!   [dwb_controller-8] [ERROR] [DWBLocalPlanner]: 1.00: BaseObstacle/Trajectory Hits Obstacle.  [dwb_controller-8] [ERROR] [dwb_controller]: No valid trajectories out of 398!   [dwb_controller-8] [WARN] [dwb_controller_rclcpp_node]: [FollowPath] [ActionServer] Aborting a pending goal. Should check for pre-empt requests.  [dwb_controller-8] [INFO] [local_costmap.local_costmap]: Received request to clear entirely the local_costmap  [world_model-7] [INFO] [global_costmap.global_costmap]: Received request to clear entirely the global_costmap  [world_model-7] [INFO] [global_costmap.global_costmap]: StaticLayer: Requesting map from the map service  [map_server-5] [INFO] [map_server]: OccGridLoader: Handling map request  [motion_primitives_node-11] [INFO] [motion_primitives]: Attempting Spin  [motion_primitives_node-11] [INFO] [motion_primitives]: Currently only supported spinning by a fixed amount  [motion_primitives_node-11] [ERROR] [collision_checker]: Footprint Hits Obstacle.  [motion_primitives_node-11] [WARN] [motion_primitives]: Collision Ahead - Exiting Spin   [motion_primitives_node-11] [INFO] [motion_primitives]: Spin completed successfully  [dwb_controller-8] [INFO] [dwb_controller]: Received a goal  begin following path  [dwb_controller-8] [INFO] [dwb_controller]: Preempting the goal. Passing the new path to the planner.  [dwb_controller-8] [ERROR] [dwb_controller_rclcpp_node]: [FollowPath] [ActionServer] Attempting to get pending goal when not available  [ERROR] [dwb_controller-8]: process has died [pid 28945  exit code -11  cmd '/home/brian/ros2_projects_ws/navigation2_ws/install/dwb_controller/lib/dwb_controller/dwb_controller __params:=/tmp/tmpymrpysik'].  ```  This PR ensures that this flag is set to false every time that the pending goal handle is reset.
ros-planning/navigation2,809,2019-06-06T18:11:15Z,2019-06-07T16:59:02Z,True,2019-06-07T16:59:02Z,e5838731edc38818012ffb514c431cdecddcf49c,1,1,f3a191350a014be5fa72dcc72eb760437075b8ab,nav2_lifecycle,Don t set the path_updated flag the first time through,## Description  * In the ComputePathToPose BT action  the code was setting path_updated on the blackboard the first time it was called. This results in the path being sent to the Action server and  immediately  the same path being sent as a pre-emption/update. This change avoids setting the path_updated flag on the blackboard the first time through. 
ros-planning/navigation2,804,2019-06-04T21:50:36Z,2019-06-05T23:36:45Z,True,2019-06-05T23:36:45Z,69e7962bd80090d3fb36f6b16f058f67203333ba,1,1,ddfd4992dd3bf507ba7a0949c8e36937880c6194,nav2_lifecycle,Only allow one spin_until_future_complete at a time,## Description    * Now that the BT nodes are derived from AsyncActionNode instead of CoroActionNode  it is possible for halt() to be called from a different thread while tick() is active. This PR ensures that only one spin_until_future_complete is active at a time. Without this  there is a race condition that can result in an "already on an executor" error.   * This should fix the error we're seeing occasionally with the rviz action-based goal pose tool (since it's intermittent  it's hard to test. I've run many times without encountering the error again). 
ros-planning/navigation2,807,2019-06-06T15:00:11Z,2019-06-24T18:23:52Z,False,none,b5027b9d579c890cae4d5cf7a7d2eacf009f3ca2,5,2,673a591dede44f4d99681f1eb3493ec18cc96f2d 23972bd1a9298f7d81ea97ea09d97fc172058d52,2 - Medium@nav2_lifecycle,Avoid delay on last tick of RateController,## Description  * The current Behavior Trees resulted in a delay where the RateController object would be ticked and wouldn't succeed until the RateController allowed the tick to propagate to its children. This PR reorganizes the BTs a bit to pull the GoalReached checkout out of the RateController so that it can succeed immediately when ticked.   * Also   because the tolerance for the GoalReached check was the same as the toleranced used by DWB  the GoalReached would never fire  resulting in an extra ComputePathToPose  after DWB has succeeded. I've set the tolerance to 0.5 for now for testing  but am open to other values to use that are greater than DWB's tolerance so that the GoalReached actually kicks in and stops the ComputePathToPose recomputations.   * Finally  the GoalReached and IsLocalized conditions need to spin the node they get from the blackboard in order to have the call to robot->getCurrentPose succeed. 
ros-planning/navigation2,836,2019-06-11T14:59:34Z,2019-06-13T15:44:12Z,True,2019-06-13T15:44:11Z,d141ffdfb943c12ab0e7e0b4d16d659cd8984853,1,1,22df5cdf42ce4d0e51181966e6b36858a4d21731,1 - High,Revert back to CoroActionNodes instead of AsyncActionNodes,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #820  |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | gazebo |    ---    ## Description    * This PR changes the bt_action_node template class to derive from the Behavior Tree library's CoroActionNode instead of AsyncActionNode. The async version spins up threads for the client side of a BT action  while the Coro version uses coroutines. With BT actions  the client side is doing spin_until_future_complete (with a timeout)  so a coroutine rather than a dedicated thread is ligher-weight as well as simpler  since there aren't multi-threading concerns between the various client nodes (such as serializing access to the blackboard); only one is active at a time.  * Previously we had changed from Coro to Async thinking that it would help with a problem we were encountering. However  we have since found the source of this other problem and can safely revert back to Coro.   
ros-planning/navigation2,854,2019-06-13T20:54:00Z,2019-06-18T20:09:34Z,False,none,20f87fc2ccec5ca144d23cf8c0de5fa074266e8b,4,4,fc1b5585987fb2d171c162e877ce0ba7566d4873 b1ea4f8d45f1e860694d8fa59732480a25cd252b 99b88725499dcbdd463ba802da7074e34a77f9d3 119952c810f35265e41065540a361b2a92f74b47,0 - Critical,Fix spin cpu fixes 792 ,## Description    We have a temporary solution in place where our lifecycle nodes can optionally create a normal ROS2 node and automatically create a thread to spin this node. These "rclcpp_nodes" are used to interface to functionality in ROS2 that is not yet lifecycle enabled. As such  the rclcpp_nodes are temporary and will be removed fairly soon.    To spin these rclcpp_nodes  the code for nav2_util::LifecycleNode previously used rclcpp::spin_some and then  in the destructor  checked the status of a boolean variable to know when to exit this thread used for spinning the rclcpp_node. This resulted in high CPU utilization (issue #792 was reported for DWB  but this is true for all of our lifecycle nodes that request an rclcpp node) because there is no efficient wait; spin_some was being called in a tight loop.    This PR uses spin_until_future_complete to efficiently process input messages  which also checking a condition variable to know when to exit the thread. One difficulty with this approach is that it will only work if there are messages on the input queue for the node. This is normally the case  but may not be true in testing scenarios  for example. So  to ensure that there is at least one message on the queue  when a nav2_util::LifecycleNode is terminating  it puts a timer event on the queue. This ensures that this message will be processed and then the spin_until_future_complete will evaluate the future and exit since the future is indeed complete.      ## Future work that may be required  * Instead of using a timer event  we can define a custom waitable  such as a "null waitable" that we could put on the queue instead of the timer event  * There are similar situations in ROS2 code  such as the TransformListener that need to have this issue addressed. 
ros-planning/navigation2,859,2019-06-14T17:47:17Z,2019-06-17T18:34:06Z,True,2019-06-17T18:34:06Z,cd9bd29007ed2ec293da6dd495f14d7842a5fafc,1,1,d4d0054caa2160858c3fce03b6571ff1a17a9fe3,0 - Critical,Consolidate related parameter sections under a single namespace heading,The navigation2 launch implements rewriting of the input parameter file in  order to change some values  such as use_sim_time  based on command line  input. This is currently required to work around some node renaming that  occurs if we use the Node class in the launch system.    The input nav2_params.yaml file had separate sections for nodes under  the global_costmap and local costmap namespaces. This caused some issues  for our parameter rewriting code (see example below). So  to work around  this problem and to use what is probably a better organization anyways   this PR puts the nodes under the same namespace section.    **To demonstate the current issue:**    Example input section:    ```  local_costmap:    local_costmap:      ros__parameters:        use_sim_time: True        robot_radius: 0.17        inflation_layer.cost_scaling_factor: 3.0        obstacle_layer:          enabled: True        always_send_full_costmap: True        observation_sources: scan        scan:          topic: /scan          max_obstacle_height: 2.0          clearing: True          marking: True    local_costmap:    local_costmap_client:      ros__parameters:        use_sim_time: True    local_costmap:    local_costmap_rclcpp_node:      ros__parameters:        use_sim_time: True  ```    Example resulting output:    ```  local_costmap:    local_costmap_rclcpp_node:      ros__parameters: {use_sim_time: true}  ```  The result is that use_sim_time is not set for local_costmap.local_costmap or local_costmap.local_costmap_client.    
ros-planning/navigation2,891,2019-06-25T21:09:39Z,2019-06-27T16:28:15Z,True,2019-06-27T16:28:15Z,7a0e634d06dea0b88960dc01f6a0de84f8c3a680,48,3,309b19e29986817b267a81bf5c9666bae643eb23 c2ca1d38ce696806c58330844e359f4a36b5c93c 1cc35085a7d347451de08b63a731d1de2044eed5,,Rename nav2_tasks fixes 821 ,Now that actions have been implemented in ROS2 and our temporary tasks implementation  is obsolete  all of the task-related code has been removed from the nav2 repo. What remains  in the nav2_tasks directory is Behavior Tree related code. So  to bring the directory name  up-to-date  this PR renames nav2_tasks to nav2_behavior_tree. This new directory will   contain any of our domain-specific nodes and BT-related utility classes. This fixes #821    Also  as a result of running cpplint and uncrustify after the rename  this PR updates a few  minor issues called out with these tools  such as including missing header files. 
ros-planning/navigation2,875,2019-06-19T21:31:14Z,2019-06-21T23:03:45Z,True,2019-06-21T23:03:44Z,ea39ef2baeff0bd09a9732c64eb499af6507435f,4,2,48da0b526752d5b771c69b8068a3a78a30523f67 a8a9217741926c50abdebba4f95b9a1bd870c5ee,2 - Medium,Improve shutdown reliability,## Description  * Previously  the nodes that contain the costmap node (world_model and dwb_controller) relied upon the rclcpp::shutdown (checking rclcpp::ok) to exit the contained node's thread. This PR uses an executor and its cancel operation to cause the thread to exit. This eliminates a race condition that was present which occasionally caused crashes at shutdown.     ## Future work  * Either make the costmap node a full-fledged node where it is accessed through normal ROS mechanisms (topics  services  etc.) or have it _not_ be a ROS node and accept a ROS node pointer to use to create its topics  etc. We currently have it as a hybrid where it is a ROS node  but the classes that use it (world_model and dwb) access its functionality directly using method calls. 
ros-planning/navigation2,767,2019-05-29T16:12:33Z,2019-06-10T18:21:46Z,True,2019-06-10T18:21:46Z,c530cd89eb2e23cd4e9928c9df9dcdf21eaa042a,263,95,79e65d51ba49976db7754e866d5225589c46cbc1 1c7d3e2b408be5fdad4a1d6cc174082c8a5512f7 c52c62455f52387b2796fc553e0c5f54d9f8c75c 7cd658adfbde496424d4ba4ad0fe87f0a3153aba 510d9034285b1db7954949aed9357689c7a359bb 17603c6f4d7503eae2998a34f9142f61d3725237 a147c3bfbd4a0783461a0e4acda0947c31991567 ba8a031695924e531c92a6068fab773aaf26a69a ebd911055c19ddf3368d52c2a618ff65279a8913 55d71007c35a0d5b92be4500e06ec7fe64826039 cb567188539d0b6669a1e3f8086ffa62a1edf361 1a16e2ff29d9eedb1e062fb6105e3da8cc365014 04b94fa6eeb84acdd0f650cb1ff065592604e81f 08312eb22b86e75dc0d579b06e2885ea505c4151 ef61df10bfac8aba102e1532f48310d27b62ae77 aa4aed3397629c58b758469d7e5f275b4f7876d3 7ab30d02aa4f158dedafa361190d22352a0f679b a6fe4e7a88543f340e8d010417617bc6fba2aa4a ad641cfc38e3e74d52914da6956b0b3cc76f3576 0be555b059005a0c50c2c06745095f5e92a66fcf 0e7f4c4e48edaebf4e3416b1b1bf90b31f6f2d33 79887e5e608472e5c8bdd75405f4f89f75284578 3d8717fd1f8ceb1eae9e36e6f3c06f22aa86b340 60e59ad3da6cffd2181dff41867ea6244dc65369 d673558b5ccdd2498ed3893b07d401db1ea25d4c ac8d34ce619c9b5e17cf6ec62fbdaf43506d61c1 ae767ef10b46ed42f6986c2809feba43d71f52a2 d10add9597b6655d447435af36b284b38b1520a5 379bdfd8abc5c2b69c6653fe291e856e317ee2f2 b0718302daf49c51044e0b9ed355a2065576d592 a1b49678dc62386b7ce9d2347adfa2edc9c042c0 7a056c2a592752b53272aea58f44b0454cffe14d cb8e42f7ea59f4eae09c009c3a38102b6b73f115 383993b25fcc7cecf4daef7f14100397a7536f9c 8feadb2a5bb9d2ca69bd166d8781387c0f4364e2 1ddfd9a70066081c8222722ff7047d44d402d516 9fb12c3fad304e9ce108c82bfd4ea67072419f93 a36d5d4b4e2d2864ea54310fdac18bfd1aecbac0 e639de3cff84c8b1da04d1e015d4e5b710755c2c 3d818c0fd10830d9d03f2463c383b9179a6b1358 3e152eb805c3737363a2f4eaa20471ff5292ed41 874f03ff9f7cde433b6d51c164b21e622cd7e7f9 dff707edd0f7c74256dbbf48027976e4bf4b40e8 34404c8772fffdfdeb71cf9082689a5dba055cb9 dda26f8fd6fea21ba1c4c0be52268beaea3783c0 9642779b5533d9ce33af525327006c38d7369e66 e34711e8bfed0fa4b088745430989c8fe8bbc097 aa43bc72ab3bfa823a611c42c598dc31776a5184 8ed3c2bf45ec6731ec99aa3af89585e7713d7ed3 318538f8001ff0eea0d28f6047a0206fad805c17 a10ccbde6a60feec6803b8bc1974d72f911dac93 8eaf2087f2a8a3e63805027ebcf0c60849000df9 33b668014504fb5db69c1bb0aed88351c55ccdf8 5258cb87476ca4a387caf8d04bb6fdf63603dc71 1f2bc78901a99e5d356773a7316d0a78cac179b3 c256b2499f076418ca5ea198064e5a3dd01a2378 4ec93abe3b30aa854f9d0e87b09f3443d4f7fa78 dcbe8481e153e9df8c79dae59a9241ea0e0e3de2 852b4d9497c532e8d0038b3f5fd4f229e74d5130 8a2645ba04fa3eceba8f82f773ae53529bf49ce4 63e2bf6e708dc254ffef5decbcd386a9c263275b b55a1e11c13ca5dcac53484fd32f05a701e5c20a bc4c38d0498526af3e586d30b79468e41192a710 6b9ffc9e53e46c12d8f77b0e2d250c19814ebbab fc5aaeee45d966c2a90e3fe74f43d011611830aa e1714e19dde5786c568626bd33766ef504a6933c c4af587022a876f25e824eb79d2e26de99a34b21 75724dc872250283b7942d210fc1f9e590e93dbf f8d84e173513bc00c2ac09f7fb1616838f7f10b5 f0182dee6c7ee45059572891b9dd7f34b163316c fd2e5f80e18671f9c23dca661d041981eda25340 ae7435b10442ef36b1b95040fda4af014c70d991 871f0fc287d113175e5c0c9811a02a3b4bbb52b1 2e9dd69fe9cf672cbfcabfd182e1de97430381e9 916a6eece26190d34160a721533e05f41dedfa35 c6490ea56c99bb33cca2ea6ae8d258cb3779a739 146c29bc150df4a6d0bb4aa7108078c37d51c7ea e5838731edc38818012ffb514c431cdecddcf49c af32279e79dde74b9d4ea133fe1a0acd9b5e6e47 c595b1a619e15e61fa691fa3e9c7bb54f40dbbf2 cbc51a0de63498dc60717f8433e4d0846820f713 8b655a10ab68f0ea1d23b80cf91331ef5eab32f7 94bc05d3155f56fa4c43922d68c2167d9802d234 3aa7db9afa46e83ef010e066b8359c12a13bacac d582606a84dbf43dfc2421c28c847c69204c1a2d 440147e8e50c64b3b10804050d3015d9c547a043 69d6415b737e5449d143f11ac4feb77c1928b5db 2b738d4e0f2a3e53077463148d4d4a36cde83eea 41f30b03c26467a5075cd5591040acd2c98459f2 2306c36de37add92dca859064f651d3f47d0ab16 c5b916f6c6f4939ab032109f32161e044b254724 ead48920de20bdd5f7914d484e2133c0c5f3c33d cd87787bbaf8a0b945e3de9d15bf494ecbf73ce5 f92c1ebddfc059bc9ca80935225393480be58680 986815fad514b6a86ca1ebe1cc33540777edc698,,Merge Lifecycle Branch,
ros-planning/navigation2,681,2019-05-01T21:32:42Z,2019-05-08T14:57:33Z,False,none,ceb76d123742cda22b91f9f8970d756d6876d3f8,2,2,f5b5bcbeba90e8f0259690b4d9643a36fbed549f 9d00ee0b91e77a006ed24c296e5586e4a81644d9,,Fix CI pipeline by controlling fail on build,Presently the CI is deadlocked given the build for master branch is currently broken. This prevents our CI pipeline from completing and pushing updated docker images to our automated docker repo  thus blocking the use of CI for testing PR that could be merged to fix the build for master.    ![image](https://user-images.githubusercontent.com/2293573/57044439-6a9d7200-6c1f-11e9-8b8f-d205547c24d2.png)    This PR simply adds a build ARG that controls the fail-on-build behavior that allows the docker build to succeed even if the colcon build for the repo fails (default)  thus keeping sure the CI images remain fresh.    Alternatively  we could just skip the colcon build step entirely for the tag `rosplanning/navigation2:master`  given the build artifacts for workspace are wiped clean when used in CI anyhow. 
ros-planning/navigation2,732,2019-05-16T20:29:10Z,2019-06-10T23:53:26Z,False,none,99ea357b7bd890d34afdb50a993fc5a868ccbe72,2,1,eb6a14a9866275b035c12dba06c377e1b2f21fcd,1 - High,Revert Get the build working again ,Reverts ros-planning/navigation2#701    ros2/geometry2#112 has been integrated upstream. This change should no longer be needed.
ros-planning/navigation2,776,2019-05-30T23:22:59Z,2019-05-30T23:23:58Z,True,2019-05-30T23:23:57Z,74a58b653e49847db4414f1a1117e6d93561a4cb,12,1,398d180bd0f61b1f3b4a3fa8ce5a45a1cb4b8252,,Revert Modified all the Behaivor Tree s to work with lifecycle branch ,Reverts ros-planning/navigation2#772
ros-planning/navigation2,917,2019-07-09T19:14:23Z,2019-07-10T20:26:29Z,True,2019-07-10T20:26:28Z,fa695e3b9871d017b93e0977625e0f2f0fefeef5,1,3,126053439fd2f2870a7598c6d005d9837d8d797f 6177031a39d46bff2be5b11d78f7e543cab2866e 9b30bbb5c9977008ee7428c68878002e48646a9e,1 - High,Check goal handle status before canceling,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #904 |  ---    ## Description of contribution in a few bullet points  - Checks that a goal is either `action_msgs::msg::GoalStatus::STATUS_ACCEPTED ` or `action_msgs::msg::GoalStatus::STATUS_EXECUTING` before attempting to cancel when `halt()` is called for `BtActionNode`  - fixes crash seen in #904 due to race condition between aborting a goal on server side and sending a cancel on client   - removes redundant cancel goal   
ros-planning/navigation2,918,2019-07-09T22:53:33Z,2019-07-11T18:11:29Z,True,2019-07-11T18:11:29Z,e63b853eb1ccb6d55cf038e571225f45f50d02f6,7,2,2be23e35561dc5c6c04962df0ad16fbd75f56a0b d1ac7b0ececdb09c1e10933f4d76588b65414ff5,1 - High,Fixing bugs with action cancellations,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #911 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Turtlebot3 gazebo |    ---    ## Description of contribution in a few bullet points  Made a few improvements to `SimpleActionServer`  mainly to address #911:  * Check if the goal is active before canceling or aborting.  * Cancel only if the client has requested so  otherwise abort.  * Remove separate `cancel` and `abort` methods  instead have one `terminate_goals` which calls the appropriate method depending on the state of the goal.    ---    ## Future work that may be required in bullet points
ros-planning/navigation2,706,2019-05-11T23:09:49Z,2019-07-11T23:27:58Z,True,2019-07-11T23:27:58Z,728edfed98ba86c8a2b67a47c5fc5d882f43a64d,2,3,3dc15d3b8ca880853308ea7948c1fe40f2aeb7b2 3ecdf390c70b332723cfd175ba0c20f4feac70f1 6071b41f34bf9f629e15e66da08708c847101802,2 - Medium,catch exceptions by reference and print relevent information,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/659 |  | Primary OS tested on | (N/A |  | Robotic platform tested on | N/A |    ---    ## Description of contribution in a few bullet points    * Catch exception by references across stack  * print exceptions as needed    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    ---    <!-- OPTIONAL -->    I'd like to request maintainer: <blank> to review this PR.  
ros-planning/navigation2,928,2019-07-11T20:50:26Z,2019-07-12T23:03:59Z,True,2019-07-12T23:03:59Z,0dec4146c0120873b66856a6b0be48ddc8a089cd,4,4,8f1d924c8b23579a5843de51526dd68afa90620d 216b85dd1d484b0240ba6f9286ea095467154c34 f8c0ce1a4b339f404b38e77c3fcec6abbf914e2c 6e197fb65334ff36420d119ec328a84df4e221fd,,Shutdown nodes cleanly,  ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #883 |  | Primary OS tested on | Ubuntu 18.04 |    ---    ## Description of contribution in a few bullet points  - deactivate action server in DwbController and NavfnPlanner  - check and return if action server is unavailable or inactive  - stop robot when deactivating DwbController    ## Future work  - Enable and test pause  resume  and reset     - `pause` can deactivate system    - `resume` can activate system    - `reset` can take system to unconfigured state (but not shutdown since it is terminal)      
ros-planning/navigation2,930,2019-07-12T23:02:58Z,2019-07-15T16:51:29Z,True,2019-07-15T16:51:29Z,f7326865c1a7ab8aef44a2cb837c0455e1ec94d3,1,1,ddab8b0e51ad7f646560ce0e956cd4eeb98d95d8,,Show global costmap in rviz as default,Since the current default doesn't support showing the local costmap in the odom frame  this PR enables the global costmap to be visualized in rviz. 
ros-planning/navigation2,919,2019-07-10T02:19:18Z,2019-07-11T22:02:08Z,True,2019-07-11T22:02:08Z,b5b324681008c3dc9fbbf988e2ea172d3b97fc18,1,4,341edcd8661c42dd1db892d32d504b98395ac9aa f6d5e841bdfec968727b7b0915f7c87a110551a1 cdf3646076ee22965c5545a76c35ad56dacdc636 4094e0adf641fcd525c49d4a68b5df8eb00046c7,1 - High,nav2 rviz plugin action server timeout fix,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (#901 ) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (Gazebo simulation of TB3 Burger  RVIZ) |    ---    ## Added a timeout to wait_for_action_server(). Previously  it was causing RVIZ to crash if the action server never gets available. It usually happens if the initial pose is not set or Gazebo is not running. Now  it waits for the action server to be available for 5 seconds and than if it is not available it prints an error message and return. If the action sever is not available  this will cause RVIZ to freeze for 5 seconds  but at least RVIZ doesn't crash and works as expected.    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    <!-- OPTIONAL -->    I'd like to request maintainer: <blank> to review this PR.  
ros-planning/navigation2,935,2019-07-16T17:54:20Z,2019-07-16T19:27:15Z,True,2019-07-16T19:27:15Z,162f2e7250c60182b7ffe3fd7c298c7dc229ca1c,5,1,aa31c243b06a8194084d3816184bb8952e99f1f1,,Fix the dashing 0 2 1 build on OSRF build farm ,All our builds have boost installed due to other dependencies  so  we've never run into this. The build farm must build with all other  dependencies removed somehow.      
ros-planning/navigation2,885,2019-06-20T22:26:11Z,2019-07-17T00:32:05Z,True,2019-07-17T00:32:05Z,d147f97987a484ac1b71db78af7e616cd0f983c4,8,13,a783876300b35561020a2619c5ac91cabd063108 068d504aca251458d982ff5ad1e2d5d06175abd4 7d8368f43655cb32a55edd51c866f8d97aa54a68 66ad63858af7eb1c8e695ee9009a485022ebec72 427d74219fc32193bd00e3e2262fd97200f9921b 2953562b8b87c6ff35fdb242ae4de60e92e1bd9b 6e216984baba5d69a5686abeeedfdf7027f6dbe4 5c786cbd0eb5f8affc3a14bbf16c52507dea0f70 82f88a73006d8c696625c1ce8327659654745627 fab446bffee5383aadd8b28d1a4307b0439551b5 1ff5b860a6d23c0e34cc949c8c580e69f6df0407 fd886c4eea0801a7f2cd61af4a87b7e505ddf33d 35b4d94dc075b4f83920a485ecd07d21b9dbc80a,,Switch from map service to topic,This is necessary to use navigation stack with cartographer so the stack doesn't hang on bringup
ros-planning/navigation2,940,2019-07-16T22:45:00Z,2019-07-17T03:30:31Z,True,2019-07-17T03:30:31Z,054a4bf4afe7dd4cf2553fa6d03ddeed9e7c00b2,2,1,69d0aea89cb3742a8d7cb1fbdfcf0909d9b7369d,,removing old maintainers from navigation1,does what it says so we're not blasting unwilling participants  #372 
ros-planning/navigation2,734,2019-05-17T02:58:08Z,2019-07-17T16:41:32Z,False,none,c395d8f9ba0bd03edc7f12b9e452ea0a3154a9d1,39,1,93a422e5ba30817444af59bd1ee85b0c933be9a6,,Changes to refresh crystal devel branch,This is the PR requested from @crdelsey in issue thread #682     Also this seems related with what is mentioned in issue thread #728    # WARNING!!!!! USE JUST FOR LOOKING  **You must not pull this request to master branch**  since this PR used the modified master branch source pulled PREVIOUSLY in 05/16/2019 Korean time. Pulling this source will mess up your entire workstream    You should use this PR JUST FOR REFERENCING which is modified (only NodeOptions related stuffs were modified)... Other changes is come from master version difference.
ros-planning/navigation2,705,2019-05-11T03:50:54Z,2019-07-17T21:06:18Z,True,2019-07-17T21:06:17Z,c5e814fb25dc44d62e5d3fe8ffe6bbd86faf41f9,26,5,ccdff0f05e6d07f19904ce54d3f04b8b10850efa a7a4a38f0bed293e961749506b08be6246c3c4b1 c977061dcc6505c67cdeb8ab994bafced98ab651 1a6d14d094b77b27f65dc2a9a3f872010d07c51c 3213f2762c74a91b0f8c0a4c99b4e4b0c19b9916,,change primitives to recoveries,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/691 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | CI |    ---    ## Description of contribution in a few bullet points    * Renamed the primitives to recoveries    ---    
ros-planning/navigation2,948,2019-07-18T18:40:42Z,2019-07-18T19:48:29Z,True,2019-07-18T19:48:29Z,aaa8c2eb3f9d0d3f1787b77e0c3f9a73325fc4df,1,1,8041d79d1f7416c987572bbd727886d328f556df,,Stop robot on cancel in recovery,Fixes #939 along with #947     | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #939 |    ---    ## Description of contribution in a few bullet points  - stop robot when cancel is requested during recovery      
ros-planning/navigation2,947,2019-07-18T18:13:22Z,2019-07-19T15:59:55Z,True,2019-07-19T15:59:55Z,4225e7bb5579a47b007bdfe69fd56b6a4174c347,2,1,be3888eaf2b718bef643a82926df78a33ddcd552,1 - High,Fixed a bug to be able to reset recovery node internal states,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (#939) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (Gazebo simulation) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  - This PR partially fixes #939.  - The halt() method needed to be overwritten in the recovery node to be able to reset the internal variable states of the recovery node.  Without this fix  if the tree is canceled  the reset method will invoke the halt but the states of the recovery node will not get reset. Thus  if the recovery node was ticking its second child during execution when cancel is called  the tree will remain in that state forever.   ---  
ros-planning/navigation2,946,2019-07-18T17:29:06Z,2019-07-19T22:34:36Z,True,2019-07-19T22:34:36Z,640ec4105cad7148a630ce053af223e7e810c509,3,4,177ff524d9a6e52368c5653b6f33bfcd150364b3 2ad6dde6d1d5a26bf46ae3f09362f8455e8333d2 97dd96afa27a613ccd27e15037683cf703db9703 1d4603d13965790935b180d318f6f2cb931ab62a,0 - Critical,Add support for CreateTimerInterface fix CI,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  fixes #941 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 in Gazebo |    ---    ## Description of contribution in a few bullet points  1. Makes use of the new CreateTimerInterface API in TF Buffer.  2. Reenables TF listener to create it's own node and thread. I don't know why this is necessary  but it seems like the right thing to do anyhow. Without this change we seem to end up with more transform errors.  3. Fixes a bug in the system test launch file introduced in #705    
ros-planning/navigation2,924,2019-07-11T00:40:02Z,2019-07-19T22:41:26Z,True,2019-07-19T22:41:26Z,2e1a53113696d42fcd67eaf34730c7640b0e5e9e,2,1,0e6f1634f4bbb9cc83ece1e1cfc56b479b4e5a4b,3 - Low@for review,Build scripts update for ROS2 Dashing,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on ||    ---    ## Description of contribution    * updated build_all and initial ros setup scripts.  * it was checking if the ros2 distrubution variable is set to bouncy.  * now it checks if it is dashing.    ---    ## Future work    * I am not sure if we need to do this check at all. I will test the scripts without checking the ROS2_DISTRO variable. If it doesn't cause any issues during build  I will do another commit for the scripts.    ---    <!-- OPTIONAL -->    I'd like to request maintainer: <blank> to review this PR.  
ros-planning/navigation2,704,2019-05-11T03:28:28Z,2019-07-19T22:48:28Z,True,2019-07-19T22:48:27Z,d076e5d23e03dadfff91db4f199f71698892da9c,33,14,7a53e07929af192b672a886b914d50b31ca60558 cebc582c7fbf251a86429c0233ce68d614fe8618 8a85061068aebd19aea6741aac68c4e51444e0b0 67d451e6c5c1b405187d6c3ccac8f9cbd689768d 3d5d0a37a5cf6ce962db9e51b6eeccffd69a740f 585586408c2901135acd28d12e7519d4a9cf8924 1577d2ce838fc006d96d056bec573db7ba35a11f 5db19c8c2b5d6dd128b7af7ea5476f4a1dee6d23 86d5923bc1ab5bf5a9ac12d9cefc3c64daa12d30 6d4d92b4a1c114427da0aea4c4786f9dcd2f1828 9534a7cd00122ba21d00d68d75d85e7d83f5ee6e 18fecaca3a3cdc7f76e4e11c661d12ca0ba19563 1fb5efed502fe9e98c20acfca9376225c1ae7a7a 052064eb1b283120d773ec6eb4e411755fbfe466,2 - Medium,Robot class to util,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/692 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Simulation |    ---    ## Description of contribution in a few bullet points    * Remove the robot class   * Replace with 2 utils: VelocityPublisher to wrap the cmd_vel topics for the recoveries  tests  and DWB planner and the RobotStateHelper which currently contains helper methods for pose and odometry information about the robot.    ---    fixes #575
ros-planning/navigation2,966,2019-07-22T17:09:43Z,2019-07-22T18:43:05Z,True,2019-07-22T18:43:05Z,8cee42c9122096ede6c7bc528722159bd06be90c,3,1,bd4dd9a5be01aeb5b236bad2b2d27a1b2ce65447,,remove extra files re introduced in PR 704,PR #704 re-introduced old files/package folders due to the merge. This PR removes them again.
ros-planning/navigation2,638,2019-03-28T23:34:17Z,2019-07-22T21:21:16Z,False,none,60f7db726bcc9b455e6b08ee53306c43a48afa26,3,2,a9d422f7ad472b4e2406f0b57d071bc2786f0e27 4d06452c76670af3cb1378a92e4241688313f570,for review,Added random test to system_tests,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (fixes #637 ) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (gazebo simulation) |    ---    ## Description of contribution in a few bullet points    - Added random test to system_tests.  With random test  target x and y positions are chosen randomly from a set of valid poses that are in `valid_pose.csv` file.       -with `NUM_IT` variable we can run random test many times.  - Deleted `static_transform_publisher` and added `turtlebot3_bringup` launch file instead    - Removed `setSimTime` for `map_server` and added `setSimTime` for `world_model` to be consistent with the way in which we currently launch the nav2 stack.    ---    ## Future work that may be required in bullet points    Currently in `test_system_node` we PASS the test by calculating the `distanceFromGoal` method which is okay for now. Once the actions are implemented we should `PASS` the test by checking to see if local planner returns `SUCCESS`.  Therefore  for now the number of iterations should not be more than 1.    ---  
ros-planning/navigation2,936,2019-07-16T18:21:37Z,2019-07-22T21:37:05Z,True,2019-07-22T21:37:05Z,2c17640b568085cdd20e9420bd8f38cc05508ec7,1,1,348c2296b8c21f97839eeff289bb0a141ac17c30,,Set GoalAlign PathAlign critics scale to 0,The navigation and obstacle avoidance perform less than ideal when the PathAlign and GoalAlign critics are being used. In the local planners from the ROS1 navigation stack  these align critics weren't used  so this PR sets the scale to 0 until we can further investigate why we were receiving poor obstacle avoidance using these critics. Removing their influence for now has led to better performance so far.    ## Description of contribution in a few bullet points  - Sets PathAlign and GoalAlign critcs scale to 0      ## Future work that may be required in bullet points  - Tune and test critics scaling      
ros-planning/navigation2,937,2019-07-16T18:26:45Z,2019-07-24T17:32:28Z,True,2019-07-24T17:32:28Z,5816733b3fa24fd6119017e83624004d4a3bd829,3,3,5d3c0cc9fd25610b04e3ed17d8eafdd5a28a4af9 f8ec2f88c5b782cb368958ce28e5bd4eff601f47 df14336c06657e5c5dddb7efe1757556ca65f98f,1 - High,Nav2 rviz plugin changes ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (#901  #925) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (RVIZ  Gazebo  Nav2) |    ---    ## Description    - I added a timeout to spin_until_future_complete  so it won't keep spinning and rviz doesn't get frozen if something goes wrong in the navigation stack.     - I did some changes in the start Navigation;          - changed the function type to Boolean        - added returns to the function  so it will return false if something goes wrong.    - I changed goal_tool added a if statement to check if start_navigation doesn't return false before calling any other functions in goal_tool    ---    ## Future work    - These changes fix the current RVIZ crashing and getting frozen issues  but more testing is needed.    ---    <!-- OPTIONAL -->    I'd like to request maintainer: <blank> to review this PR.  
ros-planning/navigation2,962,2019-07-19T23:12:18Z,2019-07-24T22:10:00Z,True,2019-07-24T22:10:00Z,25e918924c7e3c64fe8fe8b1be2ec3a3a587658f,3,3,f109fcc20229ec3256ed46c8f74ecff35346181d 71af3acb17523dfe558f0c96c6c95c1224f7f52b a8e20d9ce37f0fb590e227a578cc0710dc34a6bb,,Build tools Run build_all sh from any nested repo workspace rename dependencies workspace for nav autocomplete,Build tool improvements    - Check if we're in the `navigation2_ws`  `ros2_ws`  or `ros_nav_dependencies_ws` and then cd out into root before running. Now you can run the build tool from any where that navigation2 touches    - rename `navstack_dependencies_ws` to `ros2_nav_dependencies_ws` so that auto complete for "nav" will bring you to the workspace you *actually* wanted to go to. 
ros-planning/navigation2,979,2019-07-25T00:44:56Z,2019-07-25T19:37:38Z,True,2019-07-25T19:37:38Z,742f53f4724ef61411c2daa0539466345a65dcd2,2,9,5d3c0cc9fd25610b04e3ed17d8eafdd5a28a4af9 f8ec2f88c5b782cb368958ce28e5bd4eff601f47 df14336c06657e5c5dddb7efe1757556ca65f98f 4d7c2397ffbdfb8a8aada25e411ea8a7d6290025 b1fae74d55a2b7d0274d43cb0506f29ad6f650e3 8acbf7f0fcb32af89f5041e341de0546b850d352 9ece0610b7583bf217d6d14cc4c7ffc659681688 5916f2739c5470daf7273234871db992f505e8bb fcbc77be197c44233701697955ecef7fef0f46a3,,fix linter failures in Rviz plugin,This PR fixes the linter failures in the PR #937 that I recently merged.
ros-planning/navigation2,982,2019-07-25T19:41:03Z,2019-07-25T20:24:45Z,True,2019-07-25T20:24:45Z,c97e19f922c5aff122f5934a3c28f3433c2bbbad,3,3,e24beaec449ef23281495d8074b9efef04eabbba d7476fa7b525d711e1e635053b269faf01115b11 aaf4808085dcd988024acaa5c69e5454f4a59b2e,,Fixing typo in dependencies,    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points  * Fixes a typo introduced in #663. This typo now causes a build failure.  
ros-planning/navigation2,981,2019-07-25T16:07:33Z,2019-07-26T17:01:06Z,True,2019-07-26T17:01:06Z,e480753ddeb7e843405a1122a152abff5ecdef9f,1,1,37b12f9f3f7156ef8f953506ec624e6aff20db51,,Fix for TEB local planner buildable,It is dependency of [this PR(port TEB to ROS2)](https://github.com/rst-tu-dortmund/teb_local_planner/pull/159).    Signed-off-by: vinnamkim <vinnam.kim@gmail.com>
ros-planning/navigation2,970,2019-07-22T20:03:42Z,2019-07-26T18:27:39Z,True,2019-07-26T18:27:39Z,d7e8b65e7b31ced76738c01bd16f3fc84f886527,2,2,ec9279e4d7f9872935c0c4082b4aa62814c30aa0 0fb4aab7928cab3708bd46874186323b1c21daf9,,Add support to change the local controller rate ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #952  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 in gazebo |    ---    ## Description of contribution in a few bullet points    * Added the `controller_frequency` parameter to change the DWB rate loop. This is the parameter name used in ROS 1.  * Added printouts to report if we missed the loop    ## Future work    * We could push a change to the rclcpp::Rate object to allow us to retrieve how long the loop actually took so we could report it to the user. This would match ROS 1 behavior
ros-planning/navigation2,969,2019-07-22T17:51:48Z,2019-07-29T17:26:01Z,True,2019-07-29T17:26:01Z,270c8d4ed4172e329e9f71ff11eec9202250c8f8,33,3,25f6082a66f3d2c725f263bd7af0eb1a0ddffdcf 07a9cc4036d8fd507e03e3fc2a220356a15435d5 f6008762a9bf4b2f9d052f16f3d7462a23cbf4d3,,Sync master branch with 0 2 2 changes on dashing devel branch,A few changes were made on the dashing-devel branch to support the 0.2.2 release. This PR brings them back to the master branch as well.  
ros-planning/navigation2,743,2019-05-21T22:38:05Z,2019-07-29T19:54:15Z,True,2019-07-29T19:54:15Z,d253a3e0ed3799ad761e5dfef3a73750a340c814,3,4,8885a4cbbdb8c3c3c99406180dd41922ecfc563d 129b41d1a120d93f713624a4af4f20269dcba61c 13da434d9c37cb232f31a48a9cd190e5eefa3a06 4b380c07d819be80fb0f9f23944df5e187b33a44,,adding rate loops where applicable,Small changes  nothing worth getting into much. Adding rate objects to throttle loops as needed. 
ros-planning/navigation2,983,2019-07-25T20:57:17Z,2019-07-29T23:19:26Z,True,2019-07-29T23:19:26Z,d4cad3cd7ae1cbb0aa0d5d883fccde5d57839a13,4,2,bfed78f83ad324cf04e138512d1b8406cc94f147 6cbf137c6fad2dd1917869ef1b68ef7ca621d484,,enabling closed loop control in spin,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (fixes #423 ) |  | Primary OS tested on | (Ubuntu 18.02) |  | Robotic platform tested on | (Gazebo sim) |    ---    ## Description of contribution in a few bullet points    A closed-loop controller similar to backup is added.   Since for this task  we don't care how close we get to the setpoint  a simple on-off controller was implemented and overshoot is expected.  The faster the robot moves and the slower the loop rate gets  the higher the overshoot.      ## Future work that may be required in bullet points  Parameterize the angle and speed.  Currently  the angle is set to `pi/2` in `spin_action.hpp`  We should be able to change the angle from BT.  For example:    ```xml  <Spin theta="180"/>  ```  Should make the robot to rotate 180 degrees CW  ```xml  <Spin theta="-180"/>  ```  Should make the robot to rotate 180 degrees CCW    ---    
ros-planning/navigation2,525,2019-01-18T02:45:48Z,2019-01-31T17:57:53Z,True,2019-01-31T17:57:53Z,626b1609d3811e8e8d32c404387c94a0c7689f3f,2,12,14487f071d59f9768e143477dcc733bb0f2812b6 de873e28a9dc6482e98ad37d2a9051c9e7d145d6 a92094b28c83d5f0681287cd63c56e55f0a00158 9614dc1dd456ed9c74d1380a52f4e54e1c4be5ff c753747ae347dfb2433cc650adc172d062592492 76c1a37e8f084c780783aced0f2cd6b78871e5d3 69accc7872d535f3694489526adf4c4908377c52 5b460ffd29486f13ab86e8f65bcd60dd85b290fb 5bfe74041af114ab09c05d991dc73cbafef15c0c 6a5a6d5e4e3f4cb6ab65c2f639614d8e673509c4 aa1651fad9282a099b8e19d807fb5fb0968a897d be4d220e5a9b104ef25e96900f307a7b0be44517,,Update CI Dockerfiles,Updates dockerfiles to use new Official Library docker images for ROS2 and/or nightly builds from osrf/ros2:nightly. This PR avoids changing users  shells  and repeating layers.    Context:  * https://github.com/osrf/docker_images/pull/202  * https://github.com/osrf/docker_images/issues/201  
ros-planning/navigation2,534,2019-01-24T22:10:15Z,2019-02-05T18:04:27Z,True,2019-02-05T18:04:27Z,69d9e04dabe99222ecace39078fb435d99628b6b,2,30,14487f071d59f9768e143477dcc733bb0f2812b6 de873e28a9dc6482e98ad37d2a9051c9e7d145d6 a92094b28c83d5f0681287cd63c56e55f0a00158 9614dc1dd456ed9c74d1380a52f4e54e1c4be5ff c753747ae347dfb2433cc650adc172d062592492 76c1a37e8f084c780783aced0f2cd6b78871e5d3 69accc7872d535f3694489526adf4c4908377c52 5b460ffd29486f13ab86e8f65bcd60dd85b290fb 5bfe74041af114ab09c05d991dc73cbafef15c0c 6a5a6d5e4e3f4cb6ab65c2f639614d8e673509c4 c6031596dc4bbc28e84d5f76f46a158ed49a9ded e21e47a89fa0e79adf2fcf165ff312f2bcf43a23 ad0929280161a1204e512fb93b37adbfbe966a6e c2f7179858b2f5817ea801ed8384a2680c420f9d 398bde2d42e65c79cfbe4a37f28d4ab57d067ce6 7dff98d542c6433b047ef0d098c943d4555142fa e7e4e81a4ee259dd8a88b212041a74a29bbe8d2a ad237161a255241fdb38352364a7493255ea1c32 37d88df8f3ca797a221f7049ebbfa9ac60de2d55 d286ce097880516e33db21b5430d663d5395fe0d 8b2f762c9a2cc5e2c3dec7fd68eaad8bb43c515f d0869973c31612c495a7ceb692a9fef70e2f82a2 c37ef38831479238a04f1240825e283d9cbb6b5f 9a3fe4210012143fbd4972e271569a9d9c5916c0 9fcb6aae92d2594a454bb4c8b0cc6c26abbef74c e2b8f7598dc3b2c19eca75d0513761147571536b c3c175fb218b8a726687b1ad610b3c4bc4f2bcc7 ce560677b44a619b75ecd2b9cc0f6d9d1e698269 48ef768e2986bf68f01a30f742a929896eff3fde 2f02de17b4743dbe4f17fd34ae19cf210f0245d3,,Add CircleCI,This PR add CI support for CircleCI.    # Summary    Like Travis  CircleCI is a Continuous Integration service  however CircleCI provides more docker integration such as support for custom images without resorting to machine type executors. This means that CI jobs can start as soon as they are triggered  rather than queuing for an available Virtual Machine to then spin up. The pulling of the Docker Image is perhaps the only main flat overhead in triggering jobs. Further features such as caching and storage of artifacts additionally accelerate job times while providing insight into build and test results.    ---    # Overview    The proposed CI would start with pre-build Docker Image  hosted on automated repo on Docker Hub that would trigger tag builds upon new commits into particular GitHub branches or rebuilds of linked Docker Hub repos  i.e. `osrf/ros2:nightly` base image. Built tags would include all/most the necessary dependencies for the project  include any build dependencies for prerequisite dependencies  i.e. running `vcs import`  `rosdep install`  etc. on the master branch. Even when short cutting the install time by building `FROM` the `osrf/ros2:nightly` base image  this takes about 90 min on Docker Hub  so it helpful to offload/bake this amount of setup into the image our CI pulls from.    Once the CI pulls the docker image above  the config proceeds to clean the workspaces and checkout the source to inspect. This also entails `vcs import`ing and prerequisite defined in the new checked out source  installing the prerequisite dependencies  building the prerequisites themselves  installing the source packages dependencies  building the source packages  then testing the source packages.    In between steps in the job of the workflow  caching of the build stages for both prerequisite and source packages is attempted. Caches are broken with either the installed dependencies change or the source code has changed. This allows the cache to persist across jobs.    > An example of current table of caching in action:    | prerequisites | source build | source tests | time |  |---|---|---|---|  | w/o | w/o | w/o | [16:19](https://circleci.com/gh/ruffsl/navigation2/58) |  | w  | w/o | w/o | [05:07](https://circleci.com/gh/ruffsl/navigation2/62)  | w   | w  | w/o | [02:07](https://circleci.com/gh/ruffsl/navigation2/60) |    Lastly  the log files for the colcon build and test steps are also archived and made linkable by storing them with the job's public artifacts.    ![image](https://user-images.githubusercontent.com/2293573/51814617-1033f480-2271-11e9-8cf7-8a8e8e6154a2.png)      ## Workflow    - DockerHub builds CI Image    - Triggered either from linked base image or branch commits    - Shortcuts CI by installing the majority of decencies  - CircleCI    - Triggered by any workflow condition  e.g. commit  PR  web-hook    - Pulls CI image from DockerHub    - Cleans source and prerequisite workspaces    - Checks out respective source from trigger    - Prerequisite      - Checks out prerequisite from .repo file in source      - Installs any new/missing prerequisite dependencies      - Restores prerequisite build cache if possible      - Builds prerequisite if cache restore falls through      - Saves prerequisite build cache if needed    - Source      - Installs any new/missing source dependencies      - Restores source build cache if possible      - Builds source if cache restore falls through      - Saves source build cache if needed      - Save build log artifacts    - Test      - Test source build      - Save test log artifacts    # Action Items    - DockerHub    - [x] Create the `ros-planning` DockerHub organization (admin)    - [x] Invite relevant Collaborators to DockerHub org (admin)    - [x] Link GitHub `navigation2` automated repo to DockerHub org (admin)    - [x] Configure build rules for automated repo (@ruffs)      - [x] Add rule for branchs  e.g. `ros-planning/navigation2:master`      - [x] Add repo link for Base Image: `osrf/ros2:nightly`    - CircleCI    - [x] Enable GitHub integration (admin)    - [x] Invite relevant Collaborators to GitHub Team (admin)    - [x] Configure Advanced Settings for ci repo (@ruffs)      - [x] Only build pull requests (**On**/Off)?        - Save build usage by only testing open PRed branches      - [x] Auto-cancel redundant builds (**On**/Off)?        - Save build usage by only testing current HEAD of branch      - [x] Build forked pull requests (**On**/Off)?        - Looking at repo's history  most merged PRs seem to come from forks    ---    # References:    ## CircleCI  * [Configuration Reference](https://circleci.com/docs/2.0/configuration-reference/)    * To get the gist of the config file in PR  * [Building Open Source Projects](https://circleci.com/docs/2.0/oss/)    * Special considerations for Open Source Projects  * [Migrating From Travis CI](https://circleci.com/docs/2.0/migrating-from-travis/)    * Other notes/suggestions and highlighting differences in CI  * [Caching](https://circleci.com/docs/2.0/caching/)    * More on Caching Strategy Tradeoffs when used between workflows and jobs  * [Debugging with SSH](https://circleci.com/docs/2.0/ssh-access-jobs/)    * This was helpful when writing/debugging this config  * [Caching apt-get packages](https://discuss.circleci.com/t/caching-apt-get-packages/9076)    * Using 2.0  this is now done by priming the docker image  * [Storing Build Artifacts](https://circleci.com/docs/2.0/artifacts/)    * Used make colcon build and test log files more accessible    ## Related:   * https://github.com/ros-planning/navigation2/pull/525   * https://github.com/osrf/docker_images/pull/202   * https://github.com/osrf/docker_images/issues/201  
ros-planning/navigation2,991,2019-07-30T18:24:30Z,2019-07-30T22:29:42Z,True,2019-07-30T22:29:42Z,2350778c3eb11196de68ce006d5ec246e848f27b,2,1,b49ecfc744545dcbf002e9a91ac0dcc1b1067525,,remove files reintroduced,
ros-planning/navigation2,977,2019-07-24T17:18:38Z,2019-08-01T18:20:11Z,True,2019-08-01T18:20:11Z,05517fb13f476707709f4e838b6c7f29e97654d9,73,42,7a53e07929af192b672a886b914d50b31ca60558 cebc582c7fbf251a86429c0233ce68d614fe8618 8a85061068aebd19aea6741aac68c4e51444e0b0 67d451e6c5c1b405187d6c3ccac8f9cbd689768d 3d5d0a37a5cf6ce962db9e51b6eeccffd69a740f 585586408c2901135acd28d12e7519d4a9cf8924 1577d2ce838fc006d96d056bec573db7ba35a11f 5db19c8c2b5d6dd128b7af7ea5476f4a1dee6d23 86d5923bc1ab5bf5a9ac12d9cefc3c64daa12d30 6d4d92b4a1c114427da0aea4c4786f9dcd2f1828 9534a7cd00122ba21d00d68d75d85e7d83f5ee6e 69d0aea89cb3742a8d7cb1fbdfcf0909d9b7369d d147f97987a484ac1b71db78af7e616cd0f983c4 054a4bf4afe7dd4cf2553fa6d03ddeed9e7c00b2 c5e814fb25dc44d62e5d3fe8ffe6bbd86faf41f9 aaa8c2eb3f9d0d3f1787b77e0c3f9a73325fc4df 4225e7bb5579a47b007bdfe69fd56b6a4174c347 18fecaca3a3cdc7f76e4e11c661d12ca0ba19563 1fb5efed502fe9e98c20acfca9376225c1ae7a7a 052064eb1b283120d773ec6eb4e411755fbfe466 1d73654caa4bbb5c22c162b94eb523637a7422a3 2ede683356dc51cbd1732275aaacbf27ce3d0bd3 c15c93fcec944a35d2ffc634417417faeb89b6b7 640ec4105cad7148a630ce053af223e7e810c509 2e1a53113696d42fcd67eaf34730c7640b0e5e9e d076e5d23e03dadfff91db4f199f71698892da9c f109fcc20229ec3256ed46c8f74ecff35346181d 71af3acb17523dfe558f0c96c6c95c1224f7f52b 8cee42c9122096ede6c7bc528722159bd06be90c 2c17640b568085cdd20e9420bd8f38cc05508ec7 a8e20d9ce37f0fb590e227a578cc0710dc34a6bb daf1a71feb1cfbec38fac681fbc0134146be2439 5816733b3fa24fd6119017e83624004d4a3bd829 25e918924c7e3c64fe8fe8b1be2ec3a3a587658f 742f53f4724ef61411c2daa0539466345a65dcd2 c97e19f922c5aff122f5934a3c28f3433c2bbbad d7e8b65e7b31ced76738c01bd16f3fc84f886527 cacccadfe95ff9cb4a07a4310d11e7b65a2cde62 4cacc17cf9d69590953405c6cbf87cd1928571f8 1d439d60d63e452c5879892e1c8a8483fc7358f2 270c8d4ed4172e329e9f71ff11eec9202250c8f8 0fe7d4d85b32e3e6b0e91a3b78f949e1c0391aa1,,Release Candidate 0 2 3,This is the current 0.2.3 release candidate. This PR merges master onto the dashing-devel branch.    We expect a few more changes to be added to this PR as additional PRs get merged to master this week. The goal is to test this early next week and then merge to dashing-devel.
ros-planning/navigation2,945,2019-07-17T22:13:55Z,2019-08-02T16:35:41Z,True,2019-08-02T16:35:41Z,675574f382c015d9901f81dc6761fcf17a67986a,8,5,e293b718df9261297c601663830d1d91083cd2ce edbc7382efb3b5c1c9eddcd24e88e9753765d352 f3e845a1664fd84b5759b07ab38a9fb5c82d8f30 0268fcfdc86ee6e82b9bb444a99b8c2e54c1c99f d84532772883987f20e944a2986a94f5903640c9,,Creating a simple action server to be able to invoke Random Crawl from BT,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | () |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (Gazebo simulation of TB3) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    - Created a simple action server for the random crawl to be able to invoke the Random Crawl from BT    - Created BT simple action node for random crawl      ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see a lot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    - Currently  there are two nodes for Random Crawl  one is with simple action server and another is without action server.  I need to either combine them together or remove the one without the action server.  Also  the simple action server node does not exit cleanly. Will address this on a different PR.    - Review Python's coding style convention for classes and member variables.       
ros-planning/navigation2,1003,2019-08-03T09:13:07Z,2019-08-05T03:40:10Z,True,2019-08-05T03:40:10Z,526893ae479f835faa69442c1a77ecac431c3719,1,1,fce802487cd07aaf49ad79e55ca430db1d547f09,,amcl particlecloud is best effort,Signed-off-by: Mikael Arguedas <mikael.arguedas@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | N/A |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Gazebo simulation of Turtlebot3 |    ---    ## Description of contribution in a few bullet points    AMCL publishes it's particlecloud as Unreliable/SensorDataQoS.  https://github.com/ros-planning/navigation2/blob/675574f382c015d9901f81dc6761fcf17a67986a/nav2_amcl/src/amcl_node.cpp#L1098    So the `Unreliable` box need to be checked for RViz to receive and display the messages.
ros-planning/navigation2,1011,2019-08-07T01:35:06Z,2019-08-07T18:44:58Z,True,2019-08-07T18:44:57Z,c4ddb0228c3b8297760329885baa7ecb9479e3b1,2,1,861e612baed62ae3d94bbe891ef064bd01da76b8,,Make FootprintSubscriber topic parameter a const reference,Signed-off-by: Shane Loretz <sloretz@osrfoundation.org>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | None |  | Primary OS tested on | Ubuntu Bionic |  | Robotic platform tested on | None |    ---    ## Description of contribution in a few bullet points    The `FootprintSubscriber` constructor takes a non-const `std::string &`  for the topic name. This makes it impossible to give the topic name from a string literal. The topic name does not need to be mutable.    ---    ## Future work that may be required in bullet points    * I did not test this locally due to #965.    ---    
ros-planning/navigation2,1012,2019-08-07T17:02:44Z,2019-08-07T18:45:17Z,True,2019-08-07T18:45:17Z,54ab6e80ae4bc73a3d72af547a354b553dd57f30,2,1,189dd38f595a67b116ec7049875868a7fb4eb444,,Costmap subscriber const topic,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on |  |  | Robotic platform tested on | |    ---    ## Description of contribution in a few bullet points    * Similar to #1011   * Non-const reference to topic prevents passing string literals like `"costmap"`  * This PR makes the parameter a const reference    ---    ## Future work that may be required in bullet points    * I did not build locally due to #965   
ros-planning/navigation2,957,2019-07-19T20:46:51Z,2019-08-07T23:26:10Z,True,2019-08-07T23:26:10Z,8c4960e82f928fb35513c40d1ed50044f66083df,12,4,00661db9ca04940b8bee14a6c5e36837f378c0e6 50f8881e56f21e0a7418fb05965e443d1a95d94c 7619e1b22dee031e0d7ecdb0b188d4bedd5b1e51 e0b97f8c22428464da08e9ce215776c07336005d,,Reorganize some of the BehaviorTree related code,## Description  * Eliminate the NavigateToPoseBehaviorTree class  merging it with the BehaviorTreeEngine  * Put clear_entirely service client with the others in nav2_util  * Move RecoveryNode to nav2_behavior_tree with the other BT nodes    ## Future work that may be required in bullet points    * Port the 3.0 version of the Behavior Tree library (which supports plugins)  * Implement plug-ins
ros-planning/navigation2,984,2019-07-26T00:15:54Z,2019-08-08T17:24:50Z,False,none,0f4880188b2ef53c5cbb095ca8245d4f07b6c612,3,3,396c98c82d971dcd9516d5e8bf9da7f3f794a9b8 d9c9df81a575dbeba0abb9a7474571109a09a8ac 7fa67d5b1b6ccf1fd9cd67ddf6522a6aa625f2ca,do not merge, WIP Change retry count to 100 for system tests,This changes the retry count to 100 for the system tests.     It would never actually reach 100 before the CI times out but this arbitrarily high number is to see if it can be made to pass at all while we're debugging stability issues.    Marking this as WIP and 'do not merge' until it is passing CI  at which point we can decide whether to merge it or not.  
ros-planning/navigation2,1004,2019-08-05T17:58:03Z,2019-08-08T19:07:32Z,False,none,117a454220f0cfb2d5b6596ea6cffed5bb61ac51,2,1,5f5741a00ee09594594c56a3d63e7ca7c938e9f0,,spin up thread for goal tool to not block frontend,https://github.com/ros-planning/navigation2/issues/1002    Makes it so RVIZ doesnt lag when you use the action server interface
ros-planning/navigation2,1007,2019-08-06T18:30:34Z,2019-08-08T20:44:17Z,True,2019-08-08T20:44:17Z,2196ad80af16a3fa726e629ea43d82e1f2f89238,1,1,b5077000aa388344002a0042860ce7dd50e3d5d2,,disabling by default the debug markers for local planner,The rviz config shows the set of tested DWB paths  which is nice for debug but a little TMI for typical development  just toggling it off. 
ros-planning/navigation2,1005,2019-08-05T18:07:32Z,2019-08-08T20:43:06Z,True,2019-08-08T20:43:06Z,3fcf498da9b5accabef9cab46b4a5265ea72fd16,1,1,590594da13f54add55241cd9944f0a76ea9349f8,, nav2_costmap_2d remove unnecessary CMake code to remove warning,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | (Ubuntu Bionic) |  | Robotic platform tested on | (NA) |    ---    ## Description of contribution in a few bullet points  Removes CMake unused or duplicated variables    - `ament_INCLUDE_DIRS`: CMake complains that this variable is uninitialized. I believe this is a leftover from ROS 1 port (catkin_INCLUDE_DIRS was bundling all the found ROS packages include dirs but `ament_cmake` doesn't)  - `laser_geometry_INCLUDE_DIRS`: laser_geometry is in the list of dependencies passed to `ament_target_dependencies` so its presence in `include_directories` is redundant  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    Signed-off-by: Mikael Arguedas <mikael.arguedas@gmail.com>
ros-planning/navigation2,993,2019-07-31T17:07:26Z,2019-08-08T18:57:40Z,True,2019-08-08T18:57:40Z,9f749e6d6f0e4987ae22534df1df9bbf7d6f5d52,36,22,a1eeb1016453594d0aa96ec3badd11f0ad39ec2f 0875c765be4b83990260c5d1be09de29f85111ff 9f06d4bc5cbaf58c036b8d562bcab11c6f1a8cf4 a7935a47252a449b750497bd9025596fb2ae3683 12e89827c7a08f652dcdac1f92476edc142f697b bc52128b85cfcbf6ef227a00aa82870c7e20c925 454b4c8f79fd9af1a3d1347e65df7dde88fcc8c4 d9bf9734e648f830cf4151365342623542868dce b3a4f63c497d14015624e9d0d0edcd563b66a5d2 53e7f570a8963f8bd9949abc89983a7a71e2e520 a74acea123f025e9e1badbf90c4321d33a202c7f dd796039bc5711a973ebf5f42f42e9a75417b962 13d3343818784865bd9f80ba696cdd770cefd471 c784737f1affedad22db66812ca316e9aef132ec caa65075b14657d2c7aab3262c31d9c830b6d9e0 23ca6f967d154eab8fde8ede41dde06ff1402b45 6353129f0bc37250262c168a91baa74e7fe89052 cac3ef6a3c9c45b8567e279daca9cf6aba6b1e94 089a4b38f7aa2cc46e0c021c8710109ba09e54f0 0bb875c40af1f43b766f9489181b2398c20169bc b6c3b73cd9b00f03c5b3ca4cbdf1e582f1e54dbc bfc8fe0dc57a90de31beff096991da636b4437d2,,Tf based positioning,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #960 #993 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | WIP |    ---    ## Description of contribution in a few bullet points    * TF positioning  removing less-ideal topic based positioning  * Option to change reference and base frame  but set to logical defaults  * Fix dependency issues  * remove extraneous utilities  * Cleanup timeout consumption in costmaps 2d  * removed the is localized condition check  as it uses information from the position data that no longer exists. More over this is something that should probably not belong as a node but as a utility for another node to look at.    * still needs testing  ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    ---    <!-- OPTIONAL -->    I'd like to request maintainer: <blank> to review this PR.  
ros-planning/navigation2,1017,2019-08-07T22:49:48Z,2019-08-08T21:53:24Z,True,2019-08-08T21:53:24Z,27b3f5935c9948b44b7597df582ceb5d16ffafdf,1,1,6c33c1d3fd2d6c4c1a573cef8258d8b38920704d,,removing extra PR template field in application no one uses,  ---    <!-- OPTIONAL -->    I'd like to request maintainer: <blank> to review this PR.      ^ enough said
ros-planning/navigation2,1022,2019-08-08T21:39:08Z,2019-08-08T21:53:39Z,True,2019-08-08T21:53:39Z,658185b397bbdc55f3902ef67e142f423e645130,1,1,940100b398126fac5f8ae5e7d047b65a638180cd,,adding deprecation warning for topic based goal navigation,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1008  |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * added deprecation warning for topic based navigation  giving folks in the community a few weeks (months?) to speak up if they have a problem with it    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    ---    <!-- OPTIONAL -->    I'd like to request maintainer: <blank> to review this PR.  
ros-planning/navigation2,1016,2019-08-07T22:24:18Z,2019-08-09T16:37:50Z,True,2019-08-09T16:37:50Z,d4e11d9febc45caa165c032f69ca74b94dcf70a4,8,2,f55a87fc940541ab1660a06edf3d11acd26f981d 090aaffecce5d448a55aa53d7d12af320b52c258,,removing unnecessary smart pointers that dont effect lifecycle,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/950 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * first step in auditing pointers  * removing any pointers that don't fill a purpose  and not effecting lifecycle bringup    ---    ## Future work that may be required in bullet points    * convert more of the code to lifecycle so we can remove even more tiny configurable chunks of code from pointers  * understand better our style interest in lifecycle - some places we configure parameters or create pub/sub/clients in the constructor and in other places we do so in the configure state. Get an answer for what we want to do and I can homologate them.    Phase 2 of this looks like:  - Things that are purely pointers because they configure things on creation and no other substantive reasons  turn them to lifecycle so then the lifecycle nodes calling them can control them & have them be member objects. Lots of things fall into this category  especially things in `nav2_utils`  - **OR** initialize these objects in constructors of their parent objects if we're not trying to be too strict on the lifecycle thing -- which I might suggest for simplicity     ---    
ros-planning/navigation2,897,2019-06-27T21:16:57Z,2019-08-09T16:36:05Z,False,none,c2d4d3c1fa2e9f5b748d4323036c4f7a13d7e27d,9,3,7d624db6c92c781e235ed6520b76184682b0c601 01e729bb82fea136af88cb4e1a6e45fa97f6db14 f2ad376617fb4451c71303d0bb1f90d908887be1,2 - Medium,Removing service client nodes from navfn,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #816   |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | gazebo simulation of turtlebot 3 |    ---    ## Description of contribution in a few bullet points     As described in #816  several nodes are created and used solely for interfacing to services. This PR proposes an approach for removing such nodes.    * Several improvements to `ServiceClient`. It will no longer create a node for interfacing with services if one is provided.  * Updated `GetRobotPoseClient` and `CostmapServiceClient` to use improved `ServiceClient`.  * Updated `Navfn` to use new clients. For obtaining async service responses  it requires a multi-threaded executor.    Once we agree on the model  which I'm using `navfn` as an example  I can propagate the changes to the rest of the nodes on a separate PR.    ---    ## Future work that may be required in bullet points    * Remove service nodes from amcl  costmaps  bt navigator and lifecycle.  * Replace the multi-threaded executor with a custom async service executor.  
ros-planning/navigation2,995,2019-07-31T17:52:19Z,2019-08-09T20:12:21Z,True,2019-08-09T20:12:21Z,88da3f15618bdf85f782be2dfdea5812e04f5658,6,10,794ab41f6a539a0c0931c3ccb49e791a47ef7122 a22cf4e8952003983e35a774bd759ace650f4cad 97fed9ec221ff36157f3ed0e6c958e56461912cf 8276c4edcb5c645cebd67295cccda5a8ad2f9c06 599fe3b1def337528c2566ffa54120512ee7c447 d232c1f79056f1dd17757d82449745c1e27ac4d7 0d6773f0f1043709e9c81c74edf642b427442f34 9a71604ce629782f4dd500373a890016092306b8 73aca3586f12aa5df63a87a92a9c2f5158027ab0 4acb6975fd8fabfa5f27b1852e3a2e983ca115e0,,collision checkers in recoveries now look sufficiently far ahead in t ,…he local coordinate frame    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #959 #994  #899 |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * recoveries will look a simulation period ahead in increments of cycle time  * the backup recovery needs to use the local costmap if you want to look at the local coordinate frame!    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    ---    <!-- OPTIONAL -->    I'd like to request maintainer: <blank> to review this PR.  
ros-planning/navigation2,902,2019-07-01T18:37:01Z,2019-08-09T21:14:46Z,True,2019-08-09T21:14:46Z,42fd63fc87ca7e272c9f6d3f3b7c98d155d2db20,4,6,babc09b05bb7e88a7154b4f65547b88d493f644f cdf96b022bc8f0291c43b87783e953dcd49aba5d 3bbe8446a3c10ba6079d5417517c5dc58ac077cd b8ebf83f7113471ecec80c45b53a0f700fcc1c6a d361e9ea5cab57a1185a90c04aa4e8fdd847ff3a d935618c22220ad40e4e97cd04e7687eeafa25a9,,Parameter dumping utility,## Description   This is a utility that will dump all of the parameters for one or more running nodes. It can be used to document the default node parameters. The intention is to automatically generate markdown and/or yaml such that the output is derived from the code so that we don't have to manually keep the docs in sync with the code.     ```  Usage: dump_params  Options:    -h [ --help ]           Print help message    -n [ --node_names ] arg A list of comma-separated node names    -f [ --format ] arg     The format to dump ('yaml' or 'markdown')    -v [ --verbose ]        Verbose option  ```    ### Examples:  The following will dump parameters for all nodes currently running  defaulting to the concise yaml format (parameter name and value):    `dump_params`    The following will create yaml output with a verbose listing (including all of the parameter descriptor values) for the map_server and amcl_nodes:    `dump_params --node_names "map_server amcl" --format yaml --verbose`    The following will create a markdown table that has node parameters and values for all of the parameters for map_server  amcl  and dwb_controller:    `dump_params --node_names "map_server amcl dwb_controller" --format markdown`    The PR adds utility functions to the nav2_util::lifecycle_node class that provide a simplified interfaces to the user to specify the various parameter and parameter descriptor information.     ## Future work    * We could embed some additional information into the "additional constraints" field. For example  whether or not a parameter should be presented to the end user. This field could be used to filter the output. Another example: specify the lifecycle state a node needs to be in to update the parameter.  * This utilility could potentially be upstreamed into the "ros2 param" sub-function. We could write the equivalent functionality in Python and provide an interface something like this:    `ros2 param dump "map_server amcl" yaml verbose`    * There might be other output formats that are convenient (XML  for example)
ros-planning/navigation2,1029,2019-08-12T16:54:39Z,2019-08-12T18:07:01Z,True,2019-08-12T18:07:01Z,8603f2e44123a6e10a632ad5903b7823348d8d54,6,3,9cab423b65cab2cc0259f38300ba971cca28e592 35ffac577ae08bdcf22b8c179d3bb2bf6bfbf1a5 8743fd2a2398dfa304f01595756b0975fe2c6ae5,,Fixing linter failures introduced in master,Fixing linter failures on master.    I'm just going to merge this one as soon as it passes CI  without waiting for review unless you object quickly :-)
ros-planning/navigation2,1023,2019-08-08T21:47:16Z,2019-08-12T21:15:11Z,True,2019-08-12T21:15:11Z,9f00e9149568773796f8d9e39481ce1c65a114df,9,7,5ecd5d8861201e6e4d77dd576567213318a2be3e b8afe79afd6b4ddca0c3f8f2bf2810ca01f07655 656b3271e3970267ef502bd84a8179890bf25082 669e3d4d71de7c18e432a34d10c8195f73c7eba5 212ccae54373d3c1a8a65b1474db4024d3a0eb64 f7b880889c7f3fd6825554e99be300cee5e6a380 fec8d0e228c8aa11188635873614e61d20170981,,Recovery using odometric poses and costmaps,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #994 https://github.com/ros-planning/navigation2/issues/1026  |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * using the odometric positioning so that the recoveries are **not** effected by global localizer updates for controller outputs  * pulling local costmap at potentially higher resolution so anything controlling motors is using the same sets of information   * correcting the frame of reference  ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    I need to test this before merging  but I'm having a hard time figuring out exactly how I plan to do that    ---    <!-- OPTIONAL -->    I'd like to request maintainer: <blank> to review this PR.  
ros-planning/navigation2,1009,2019-08-06T19:38:56Z,2019-08-12T21:14:10Z,True,2019-08-12T21:14:10Z,db301c0f1ebc4d44544a36fbfe1e19eb785529dd,4,3,36a8bda0d0acf16ac153ab10c430ffef1dec3ca6 21ea41edbb741a0164a5fbfe8960f5194f199693 3fd24c46d23132884f5a975087000b420ea40271,,removing extraneous visualization from tests that have been removed,There's some extraneous visualizations for `endpoints` that were added for a system test that was later removed  I'm now removing the visualization as it doesn't really provide any benefit
ros-planning/navigation2,986,2019-07-29T20:01:39Z,2019-08-13T13:52:27Z,True,2019-08-13T13:52:27Z,48a7c5db0f480bdd2a061f6196c7b00c5a37e650,2,3,75d67f99d7fdcf160998a3878effd7c5ede5a8b6 29c69d71cc0720af9f9fc8cceac63759b52bca12 ec72597a5e9f854475f99f1aed7218dff7bc8239,,on download rosdep all necessary items calling on each build is redundant,Also came up because the ros2_ws didn't have rosdep called over it so anything in a clean 18.04 container (or metal) didn't have alot of things installed that were necessary for a clean build on a new machine    Edit: I start out yesterday to work on recoveries... ended up battling dependency PIP vs APT nightmares for 15 hours... "Oh that's missing let me just pip install it..." *famous last words*
ros-planning/navigation2,1031,2019-08-12T20:28:20Z,2019-08-13T13:57:22Z,True,2019-08-13T13:57:22Z,7fa7400bc71860829c3bb7f05bf0b62a4e3b860f,2,3,fb98afc6654884ed60e2a1239ea922406cbcbc06 017c21e4ab0415502bbf67294b836237cc7b6bc3 77709f0c8ac6be0df03ac651378b6e4cd9bf4c14,,adding recoveries XML to simulation launch file,Adding the `..._and_recovery` XML file for the simulation launch file so we can have the recovery behaviors running in the simulation. There were a few issues I resolved that likely would have been seen earlier if it were default. 
ros-planning/navigation2,944,2019-07-17T22:10:13Z,2019-08-13T20:54:48Z,True,2019-08-13T20:54:48Z,a58732744b197910871030764015f47658827902,10,8,c16844e69dfbc2e0e64d1d16edfd3dfdbd39ee20 07e7a5e90726a4d677b71acfde21c9d2706a5784 4d2fbb44452d4190f0343655bbc0967898f843fe 3bf47f833f8213ad6d524f2ba40969403e4918f1 9e31a4ece06e0d681a6dd0a73187dc3d55393a52 0a46d421ff8c05592ba7f75db3d7f02952b3bfa9 c36e90b8626d5d6967c847424bd97dbf2f27d26b 10caf3a494a96498b98b0090f604035833a12fad,,Refactor NavigateToPose action client into rviz Nav2 panel and expose Cancel Shutdown,## Description of contribution  - creates `GoalPoseUpdater` QObject to emit signal for goal poses. Creates a global object to be accessed in both the nav2 panel and nav2 goal tool  - modifies`nav2_rviz_plugin::GoalTool ` to send goal poses via Qt signal using `GoalPoseUpdater' QObject  - adds action client and supporting goal-related functionality to `Nav2Panel`  - the cancel button state has been added to the panel  - the shutdown button now transitions to cancel when the NavigateToPose action is active  when the action is over or is canceled by the user  the shutdown button state is again present    - created custom  `ROSActionEvent` and `ROSActionTransition` to  handle Qt button state transitions     ![Screenshot from 2019-07-17 14-57-54](https://user-images.githubusercontent.com/22353511/61415174-ddc09700-a8a4-11e9-9c57-81fbe09c6e78.png)    
ros-planning/navigation2,1036,2019-08-14T17:28:41Z,2019-08-14T18:56:36Z,True,2019-08-14T18:56:35Z,59f0360827a504ac9d54dfbc7019cd8547fc766c,1,1,d6444a04edacabe5bc973586c1648cde0388eecd,,Fixing up paths for codecov io report,    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1) |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * adding a config file for codecov.io so that it can find our source files to include in the report.  * The actual code coverage data records the path relative to the top of the workspace eg src/navigation2/nav2_amcl/src/main.cpp. Codecov.io needs the file names relative to the root of the repo. So we just tell codecov.io to drop the src/navigation2 part of the path
ros-planning/navigation2,963,2019-07-19T23:18:11Z,2019-08-16T18:03:30Z,False,none,8e2f03496cc6d2271c3a4041b0116a3f7c8606d1,2,1,a2ae0bd701d6e451894c1dfb2c12e1467655a7f7,,added Position2DInt msg,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info  Adding Position2DInt message  because porting base_local_planner requires this message.      ---    ## Description of contribution in a few bullet points    <!--  * In order for the porting of base_local_planner and making it compile we need this msg  -->    ---    ## Future work that may be required in bullet points    <!--  * The ported base_local_planner will be in a different PR  -->    ---    <!-- OPTIONAL -->    I'd like to request maintainer: <blank> to review this PR.  
ros-planning/navigation2,1037,2019-08-14T18:46:19Z,2019-08-16T21:27:00Z,True,2019-08-16T21:27:00Z,7bafe500e4730c56af88f07758b2322ce1f560a9,1,1,22c3cdcb3bf339484fe32831e8ccd492a479f9a4,,Mark timerEvent override,
ros-planning/navigation2,988,2019-07-30T00:20:09Z,2019-08-19T21:36:10Z,False,none,1892d6bd470820ce950910d53ab1d14f546c2834,8,8,dffe206134359b945073f25e99e6b12958d8b458 b222229c75924c1bc56476758e02ca43f9b36bac 80c95f46acf6970018e4675933c16272594c1486 970f93a536e1e157a46e8e1f137cce555bd12d69 155deb3c14c359d0b2bb33259b73ebf7bf466c61 4aa32a682d5c3debed184fbad4d9cd8eff1a2021 b7d7c5e14b2dfd8dd7e11791bc83384a9250be60 9fc5dd3440c60ca2bb820b312e0ce45bb1674b8b,,Clear costmap recovery,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #953  |  | Primary OS tested on | ubuntu |  | Robotic platform tested on | simulation |    ---    ## Description of contribution in a few bullet points    * Clear costmap server in the recoveries process  * Removed the implicit calls for clear costmap into a BTServiceNode  * Created BTServiceNode comparable to BTActionNode's for nodes to call that are actually services and not actions    ---    ## Future work that may be required in bullet points    * Spin / backup recovery inherits from the "recovery" base class which implements a action server  not all recoveries are going to be actions so that should be renamed to indicate optionality. We need to come up with a pluginlib definition for recovery-nodes in the BT  and rather than having this server spinning we can call them directly to reduce redundant communications.    For instance: BT -> Spin Action -> Spin recovery -> cmd_vel topic. We can reduce a full set of communication by BT -> Spin Recovery plugin of Recovery type -> cmd_vel    * implementing the clear around / region as needed (right now I dont really think people use those features? they're default in nav stack1 but I don't know that they're actually useful features)    ---    Tested and working  
ros-planning/navigation2,989,2019-07-30T04:44:17Z,2019-08-20T21:03:03Z,True,2019-08-20T21:03:03Z,8b239fb4e276d8c2430a788fb3bc5a0d5746ed2b,13,1,3fde33b2fb36b9f90cb331292a8d1db7b38f91d2,,Rewrite nav2_map_server,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #466  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | hardware OpenRover |    ---    ## Description of contribution in a few bullet points    * I added parameters to map_saver which can be used instead of or in addition to arguments.  * I added the following argument to map_saver: `--fmt <image_format>` = image format (png/jpeg/pgm/etc.)  * I added the following argument to map_saver: `--mode trinary/scale/raw` = how to save images. Primarily of use is scale  which prevents data loss when converting images from grayscale to trinary (previously the only option).  * I switched the image processing backend (for saving and loading) from SDL to GraphicsMagick  which supports writing several graphics formats and is in general nicer to use.  * I rewrote YAML writing to use the same library as YAML reading.  * I renamed map_generator to map_saver  which more accurately describes what it does  * The MapSaver node now exposes when the map is ready with a promise instead of a polling a public boolean field.    ---    ## Future work that may be required in bullet points    * There is another implementation of map loader in nav2_util. These two implementations should be unified.  * Add a convenient wrapper to map_loader run without separately invoking the nav2 lifecycle manager.  * Implement multi-layer maps (#547). This should be a lot more straightforward now  since the new graphics library supports several multi-layer formats
ros-planning/navigation2,1018,2019-08-07T23:19:11Z,2019-08-22T17:56:33Z,False,none,57874ce3f0d1b628e630ecf1a79980f22be329e7,18,12,4f8e53c230c0622900714f4858269d2201829afe 346b82cc80572537bbe5add743ee4d76ef3d1282 1e9c106630333cf9aa11a91e578aa516dfa357a5 d5cb795ea912316822774525880e38efb4178f21 2fa009f0f93031a4993a38c0b004a804a684a23e 84a9fe9d4aa9724ad8577807454d44c2cfd99ecf dadca9909ed1367fd495621bf6d45a07eefd3ea1 87be9a07d2c2914631879bd67e309e2784c03599 694e182f5a91a0203557f8dca60515bcacec932e 006b714be695195df52fb2490592291705ccdb9b a7222e900c17fd6540188c242a75ffd13bf695af d565498d81110a201b09ea99a7a871bf31dfb6f3,,Update updown test,## Description    A while back a change was made to AMCL which broke the updown test. After the change  AMCL no longer initialized its pose to 0 0 0 and continued with startup  which resulted in other modules coming up later to wait for transforms  which would be satisfied only after the user entered the initial pose. To re-enable the updown test  I've added made the following changes/additions:    * Added a few parameters to AMCL to allow the user to specify an initial pose and whether to use it at AMCL initialization time. This way  a program like the updown test  which is running without user input  can tell AMCL to start at a particular location.  * Towards a clean shutdown: disconnect the Connection created in the obstacle layer when the object is destroyed  * Towards a clean shutdown: reset the timer used in the map server so that it doesn't continue to run once the node has be deactivated  * Created a utility function orientationAroundZAxis that can be used by other modules    ## Future work     * Update other modules that are using a private version of orientationAroundZAxis to use the version in nav2_utils  * There are still shutdown-related race conditions in the various modules which cause some of the modules to fail occasionally. This needs more investigation and cleanup.  
ros-planning/navigation2,1053,2019-08-21T23:30:34Z,2019-08-22T17:56:33Z,True,2019-08-22T17:56:33Z,8196e1f422fc6f3c7bad8c54a9744c2fc2809356,18,11,c5505ec00cac7027bdb6320b2f2c85c0816e8187 6ed133fd6e9279e99e07b90fad7d41561bf3131d 8fca800f2bd9f2175b960cad957a48bff5af5dd9 619f4e1bfb0b4c605b9f7e5116e63f93ef978404 4cf839c4897c698683537e382dceae5befbbbdcf 6ea714e90e46e56f98298ed4479537b02a9f7608 6195139355fd0e02ea8c721a5a5e9da24485a539 e601fc4119f0d6b76a8d6f9af9db5bdbe9ea8118 93b181ec04e19c14fc41b57948e9dfcb863ae4c4 fe12977e15f9d32dac04f268d3dd0191af540966 474c2643b03d849c87184ab93faf20cbe1b62710,,Update updown test rebased ,Had to rebase mjeronimo's PR but can't push back to his fork  so this is a duplicate PR. If it passes CI and code review  we'll merge this and close #1018 
ros-planning/navigation2,1059,2019-08-23T01:12:24Z,2019-08-23T16:44:20Z,True,2019-08-23T16:44:20Z,3c7b061b468751b31ab0f01a8fa26f5cdbad11ca,1,1,27001d8b3b761d7975e6a30929f86892bb9a135c,,Add missing dependencies to system tests,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Primary OS tested on | Ubuntu (docker container) |    ---    ## Description of contribution in a few bullet points    Without these dependencies declared  if I build `--packages-up-to nav2_system_tests` on a clean ROS 2 source install  the tests fail.    ---    ## Future work that may be required in bullet points    I heard that `gzserver` may be crashing while running these tests at times  but I wasn't able to reproduce it in a clean environment. If anyone knows how to reproduce it  I'd be happy to take a look on whether the problem is coming from `gazebo_ros_pkgs`.  
ros-planning/navigation2,1027,2019-08-09T20:32:04Z,2019-08-23T19:50:20Z,False,none,2f23438b258d4f52911421d15e675a50c87dd188,1,1,ddf0b1e3e98c8e4abf7c4c39ff544be51957467a,,Launching nodes instead of executing process,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | TBD |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | not tested yet |    ---    ## Description of contribution in a few bullet points    Due to some recent changes to how parameters are passed on the command line to nodes  the `nav2_bringup/nav2_simulation_launch.py` is not working  since currently we are running the nodes using `launch.actions.ExecuteProcess`.    This PR changes this so we now use `launch_ros.actions.Node`.    Can someone help me testing the launch file using the latest ROS?    
ros-planning/navigation2,1063,2019-08-23T22:10:14Z,2019-08-23T22:32:04Z,True,2019-08-23T22:32:03Z,cb3f76eccdce42a374e60cad7923ec062e21349e,1,1,c1c273e30a74ac2e876792b741ca859fe1611f88,,add tf2_geometry_msgs dependency,Fixes a failing compile bug for `nav2_util` which won't compile due to a recent commit that forgot to include a dependency on `tf2_geometry_msgs`
ros-planning/navigation2,1061,2019-08-23T21:33:45Z,2019-08-23T22:33:17Z,True,2019-08-23T22:33:17Z,18bf2a6f0a9757c32ab096bceedd6b652ec004f9,2,1,0523f83b4b39f0af9c424c99dd6666b851c0374f,,Fix the updown test ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  NA |    ---    ## Description of contribution in a few bullet points    * Fixes the updown test. The test launch file was written using the `ExecuteProcess` action  but hadn't been updated for the new commandline interface that requires the `--ros-arg` option.  * Adds a script to analyze the test log to report results.    ---    ## Future work that may be required in bullet points    * The launch file should be re-written to use the `Node` launch action instead of ExecuteProcess  * The test should be refactored to use the nav2_bringup params instead of providing its own.
ros-planning/navigation2,1064,2019-08-23T23:40:51Z,2019-08-26T04:53:55Z,True,2019-08-26T04:53:55Z,23628db71470d6416c25e8a5304f4f329350d805,2,2,57ba89fb699783f3e36b2586b704c1eb0e468617 4e731cf9748bc57635705b407f7b5cb7c3a9c9a8,,Remove set sim time,Previously on Crystal  the system test had to set 'use_sim_time' dynamically for some composed nodes like /global_costmap/global_costmap. That's not necessary anymore. This removes that code.     Let's see if it passes CI before reviewing.   
ros-planning/navigation2,1020,2019-08-08T20:10:48Z,2019-08-10T00:23:22Z,True,2019-08-10T00:23:22Z,97db4b2d1332c643aad6003ace95f306680f80ec,7,2,a111076c7cbf93b08961e13d30306472214ac6f8 02dfb322ac85441d87fc2e645d1ec2c7766f7498,,Fix node name collisions,Make sure service clients have a unique node name (this was a problem in recoveries nodes) Delimit ros arguments with new `--ros-args` `--` due to upstream changes in https://github.com/ros2/rcl/pull/477
ros-planning/navigation2,1048,2019-08-19T21:55:39Z,2019-08-20T21:01:42Z,True,2019-08-20T21:01:42Z,7c473cdadb71355fcdc8dd73bd4bbf40e75141ac,10,2,bdddb45b935a44cf33d3eb357fd9590cc48d144e 551c5eef03bb09150ab44f4fbf55ac88af0a6fb8,,nav2_util duration_from_seconds rclcpp Duration from_seconds,
ros-planning/navigation2,1040,2019-08-15T20:36:58Z,2019-08-16T21:22:06Z,True,2019-08-16T21:22:06Z,3c0bf3439490bd850280768626518d689b556b70,1,1,dead8f57e41b1a3cc917e39c7af5d9c42375f7f0,, Eloquent Fix the build due to access specifiers,No idea why this builds under GCC but these changes were needed to build under clang.
ros-planning/navigation2,1039,2019-08-15T20:32:08Z,2019-08-16T22:56:23Z,False,none,a4283fe5ab0f79a399820d7a4a29c17bc526aa70,1,1,d81cbae40dd58857f941be46fc6f39cfa3dfb90b,, Dashing Fix the build due to access specifiers,No idea why this builds under GCC but these changes were needed to build under clang. 
ros-planning/navigation2,1038,2019-08-14T22:19:57Z,2019-08-27T17:11:53Z,False,none,32bdac5e4c9e8a397009ce640afbbf5af9d30e8e,6,1,ea404f8a8dcfdc3ec0a61be97d8c9f41ebf5a499,,Split robot specific parameters into separate yaml,This PR creates a separate yaml file for the robot-specific parameters in the navstack (e.g. specific to turtlebot3 waffle model) and integrates it alonside `nav2_params.yaml` in the launch files. For different robot yaml files  they can be specified at command line via `robot_params:=/path/to/robot_params.yaml`.    I've left out changes to the `nav2_simulation_launch.py` since it is currently incurring run-time failures due to ExecuteProcess and rosargs for params.    #### Future work:  - Simplify and clean up launch files (too many and redundant)    
ros-planning/navigation2,1065,2019-08-24T00:03:55Z,2019-08-27T19:10:28Z,True,2019-08-27T19:10:28Z,4f42633b9320d503e0f26d1fc7773485b4f94de3,1,1,7651b9ac822f3b326725e02345e23607840082ef,,Fix nested class indentation,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |  ---    ## Description of contribution in a few bullet points    * The `public`  `private` labels on nested classes was outdented to the level of the containing class making the code difficult to read. This fixes the problem and turns off uncrustify on this section to silence the incorrect error messages.
ros-planning/navigation2,1055,2019-08-22T20:47:23Z,2019-08-27T21:23:31Z,True,2019-08-27T21:23:31Z,886e3e1a4d194216da819830dbc031690150b86a,8,6,ddb9b0d186a90b80d308f2f00fbecc01239136a4 93be300dfd040e1e15157ce22f3b4446b9bc96ce ec6aa75d5cc20a2185204653917592393fdd9799 2541272f71d28d0d4b89b63173d7a96ceb86dafa 907e1286b3da60a7788da060322b07392c902931 cfd03d46dae8eeabfe236f744717908877f860d4,,BT Service node implementations,If we're leaving service callers in the behavior tree  at least we can generalize the calls leading up to plugins.    * clear costmap no longer a specialty function  implements a base BT service node  * global localization as well  * renamed global localization to be more specific  that name wasnt clear to me what it was trying to accomplish  
ros-planning/navigation2,896,2019-06-27T18:03:16Z,2019-08-27T22:56:31Z,False,none,18eb10a7372de0995b399bb54fe0a8382f281767,2,15,477838e767c65238ae3464721ecb5d868b529907 b06fc5e08c779700db1b05a96d274c2ed2e60ef6 22922e7968a70965b1c960bf9d8a0f4c82a2e509 cb289d9e7aa81a4ba62c359243bcd5ae957f6459 17e6c15d6f1b231ec5bb9e38a9f0ce297edfbd80 a37adf07bca30324abfdbc1c7259e273baff1e07 ef1fde7f2d68c3b5d3af327a0b21ea78523d815f e2c3be23d5c0f8170a35f6d32387408e8ffc35c1 f1c9cae39843f64ae527e22c5656899b72146954 40d83775ea8cd2af8cb64187b29146ee671f3266 efa296236a4f4db0330de513fb756f7a5ec2c73f 4a32c7ffefc5455c1207f123c056f8cd0342d445 31a58cf1027da501e4280637862aafb658b1aba3 0ed427a703d6b1267c3039d3891fa72a58fc83d2 dad6563bc442ea339709bc8b7345fef8b479b112,,A new Navigation 2 Tutorial for Turtlebot3,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #605  |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (Turlebot 3 Waffle Robot  gazebo simulation of TB3  all the other hardware info can be found in the tutorial) |    ---    ## Description of contribution in a few bullet points    * I added a new step by step tutorial for Navigation 2 stack.    ---    ## Future work that may be required in bullet points    * Add tutorial with a real robot (Turtlebot 3 Waffle)  * More videos  * Add more to Troubleshooting Guide   * Example for TB3 Burger in Gazebo    ---  
ros-planning/navigation2,1072,2019-08-27T22:26:10Z,2019-08-28T19:11:49Z,True,2019-08-28T19:11:49Z,75632414a6ab352ace935e5a3476321ebf6cd6b1,1,1,427dbd632ce1349124eb708e835c6dfdf2a4d85a,,Removing an accidentally re introduced file,  ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | NA |  | Robotic platform tested on | NA|    ---    ## Description of contribution in a few bullet points    * This file was re-introduced during a faulty rebase a while back. Re-removing.
ros-planning/navigation2,1073,2019-08-27T23:05:30Z,2019-08-28T19:12:16Z,True,2019-08-28T19:12:16Z,7a7ce075bbd2593a83ca6986102fd4db652d99d8,1,1,6f5baac1d73b7aabb9d1101583921b7c0e1c2057,,use seconds in Duration,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1054 |    ---    ## Description of contribution in a few bullet points  - uses `rclcpp::Duration` constructor signature for seconds 
ros-planning/navigation2,1075,2019-08-28T04:20:35Z,2019-08-28T19:13:15Z,True,2019-08-28T19:13:15Z,c27d6638311a4a3b2b133d9d4d0ee9ad4fa91c9b,1,1,4da138a6ed4a99786630ca907c0eb7bb56a4da5d,,Removing deprecation warning,Also sometimes I forget that GitHub's web code-editor isn't the worst thing I've seen :laughing: 
ros-planning/navigation2,927,2019-07-11T18:27:15Z,2019-08-28T22:50:03Z,True,2019-08-28T22:50:03Z,39ab506d865f830efdff01761a3ed9d681548d57,8,5,326d40f75dc86584c6be236407c7ee0ee016308d f24aeaddef299968a86d3e6cd68ba94f38710735 6419307fd59c35131caa01eb1d7f6a80b27bbf47 848d6fa5737d8c78ae5969d079ca7388a52c0cc9 d30c4fb8b91e31972edbef6ae1f782fa11eefeb8,2 - Medium,Enable global planner tester,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #586 |  | Primary OS tested on | Ubuntu 18.0 |  | Robotic platform tested on | N/A |    ---    ## Description of contribution in a few bullet points    * Made a few upgrades  including using the ROS2 actions interface.  * Enabling the planner tests on CI. Ran the tests on my machine 100 times with two failures -- planning service was not available on both.
ros-planning/navigation2,1077,2019-08-28T21:45:25Z,2019-08-29T16:16:32Z,True,2019-08-29T16:16:32Z,2eec1436b75cdf7c5d5ecf9993406752ebb7e17d,1,1,faf4ec7a8d4530618b3d4bc92b01cd676c7aa19e,,use rclcpp Duration from_seconds,#1073 changed to the improper `rclcpp::Duration` signature that uses `int32_t` for seconds though in the code we are passing in a double. This PR used the `rclcpp::Duration::from_seconds` which is more appropriate.
ros-planning/navigation2,1076,2019-08-28T21:15:32Z,2019-08-29T18:03:45Z,True,2019-08-29T18:03:45Z,dcad656db397f66fd4e7320f00cd9582132a14a6,4,4,45b17455ee286c4e12ced1d42010a1aed7d8fd58 09b229bda8a3a17d0558fe980d42cd9b44e2b153 59fc7152f86fb81e985156bddd3cb0de396782bb abe7058f0c19c62cc1d8b871087b447fd6c622ad,nav2_system_tests@2 - Medium,Add ctest loop script,## Description of contribution in a few bullet points  Adds a script to the system tests directory for looping the bt_navigator system test. Useful for reliability testing.     Also updates the README files with instructions    ---    ## Future work that may be required in bullet points  N/A  
ros-planning/navigation2,1074,2019-08-28T00:05:10Z,2019-08-29T19:22:18Z,True,2019-08-29T19:22:17Z,c241ab6cfa3f1504849824f604a8d59fc0b6a4d2,48,10,265f1070e932a364df975dfa610c87ef599b9a8e 7f4c2fea4386969d4b385c4a6c3367da5e5f627b 3549593e84ba3a93bfbc20e2419c0b61b2aacd32 97e25dc8f512ad394634bd1ac28a11e0050b383b e12cac80c18b833c03a971205c2ed6c43cc23b00 3312d637d9f4c4c07d7235fdee36bfd4fec12246 599aefb586bffc030cd5395e30a2cb9fc46e1f75 d9d253db68fba46ae858e824ac23921bf850f142 7e9598f927934c4bac92ac05f5e932ca6f1f32dd 7c24be2752759bf8ffba0015e299af6ff9efeb73,,Recombine AMCL library components with AMCL to have consistent license,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #1035 |  | Primary OS tested on | NA |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * moves the map  sensors  pf  motion model and angleutils from nav2_util back to nav2_amcl  where it originally came from. This brings all LGPL components back into a single package.  * Re-licenses Intel contributions in nav2_amcl as LGPL to resolve conflicts and have a consist license.  * Adds in missing copyright headers to nav2_bringup and nav2_common package.  * Re-enables the copyright linters in nav2_util and fixes up whitespace in some licenses to make the linter pass  * Disables the license checker in nav2_amcl because it doesn't like the eig3.* files that are now in that package.    **REVIEWER NOTE** - Git did a good job of tracking the file moves  except on the motion_model.cpp file. If you look at the individual commits  you can more easily see the changes to that file since the move commits are separate from the change commits.
ros-planning/navigation2,1041,2019-08-16T20:25:07Z,2019-08-29T20:04:12Z,True,2019-08-29T20:04:12Z,f46c8ee3dc8fd1d802e4492c1e3169cff9e8f3de,1,3,1aea005e8ef0ca2114499d4815c59d31f3046430 37457581977a7ad6af08c49dc5d921ada550e016 d80a3f52ddb9c1622565674126dc5ba402be760c,,Update bt readme,Removed the nav2_tasks-related material and brought it up to date.
ros-planning/navigation2,1080,2019-08-29T20:23:25Z,2019-08-29T21:11:08Z,True,2019-08-29T21:11:08Z,97de88d91dd90141486f34a4b45258f03b2874e2,29,2,40c4e30d47e081f504e3bf2e9c6e5f41ac842da7 fd1b1d9478b794e6b022749ac6a08d290822db3d,,Clarify Licensing throughout the repo,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1035 |  | Primary OS tested on |  |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points    * Changed the license tag in all `package.xml` files to proper [SPDX ID](https://spdx.org/licenses/).  * For packages with mixed license  added a second license tag. This is the method specified in the [Package format specification](https://www.ros.org/reps/rep-0149.html#license-multiple-but-at-least-one)  * Added a LICENSE file  * Fixed a minor linter issue  even though the linter is currently disabled.    **NOTE** - I believe this resolves all license issues in the repo.  
ros-planning/navigation2,964,2019-07-19T23:35:48Z,2019-08-29T21:42:47Z,False,none,421c2b1a8eabf20071b79f33a67fd8883c52327b,72,9,6bb0ffb77aab61a747ee055903b34936f31e239d a2aaef83c21f4a5bd4f8380e54a473e124cb8bcb b70a740480bb7517044c3b99cdec5d5f53914255 b3d69666df636d2666198c049ff658fb44e11ea4 036c0abaa2aa1b4652b85581b65e3946fe11974a 3f90526e42cfb366de6ff9ad035952bf5a7b89d8 7e065522d513b8a812a85d229298194c99cf2796 acf9572d88af2efb8dbea0ec740429197116e5a7 9185192521f0a63e66c2380876b4e4ed2df479e4,, WIP Adding components of ROS1 base_local_planner needed by TEB ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Ported a subset of base_local_planner that the TEB local planner would require. |  | ------ | ----------- |    ---    ## Description of contribution in a few bullet points    <!--  * Ported files that TEB planner would require from base_local_planner (from ROS1 -> ROS2)  * Note: Compiling it requires Position2DInt.msg  which has been added with #963   -->    ---    ## Future work that may be required in bullet points    <!--  * Port rest of the base_local_planner if deemed necessary  -->  
ros-planning/navigation2,1085,2019-08-29T22:10:04Z,2019-08-30T21:18:41Z,True,2019-08-30T21:18:41Z,c004f21e6be61c3a3eabea8e686307cd1dc63cad,1,1,5d2c6ddd5d0f6b98d60eaca934b62c6e76598cdc,,Fix python yaml loader,## Description of contribution in a few bullet points    Fixes the feature deprecated warning we get during runtime on `rewritten_yaml.py` -- more on this [here](https://github.com/yaml/pyyaml/wiki/PyYAML-yaml.load(input)-Deprecation)    ```bash  rewritten_yaml.py:56: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated  as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details  ```
ros-planning/navigation2,1093,2019-09-01T20:48:58Z,2019-09-03T18:15:59Z,True,2019-09-03T18:15:59Z,443f56bbf40db5a8fafed59c2353de214c697df7,1,1,1bc6d0b6f23d14add6ec919c9308950ae5eaffeb,,Null terminate string to dirname function,possibly responsible for heisenbug https://github.com/ros-planning/navigation2/issues/1079#issuecomment-526782592 
ros-planning/navigation2,1088,2019-08-30T18:00:17Z,2019-09-03T20:16:21Z,True,2019-09-03T20:16:21Z,1aaca6d02d708720df0bb90030945885faefff48,1,1,7ee7d209a0c0cd297f8aa645da71639572053bc9,,Update to latest v2 BT Library,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | SystemTest |    ---    ## Description of contribution in a few bullet points    * We were tracking the ros2 branch of the BT library  however  this branch seems out of date. Grabbing the latest tagged version instead.  
ros-planning/navigation2,1071,2019-08-27T21:45:30Z,2019-09-04T02:19:25Z,True,2019-09-04T02:19:25Z,b629f5520c9de3e5c7345e26bf714de35dc20b7e,2,1,ee3d1500512dca5f97657477de049d5cddcdff06,,changing pose topics to goal_pose,Reflecting the fact move base doesnt exist and this ticket in RVIZ https://github.com/ros2/rviz/issues/444
ros-planning/navigation2,1086,2019-08-29T23:59:34Z,2019-09-05T23:06:33Z,True,2019-09-05T23:06:33Z,cba1e8cf8efbcd765ea9a8345ea139190cd787ed,6,6,b756b868925e4d8a3c82f470feff7d9d69f5280f d6d9d763773128fc223074ebaec69e179c9ea29f 3fe125495698ac3075827d625503d45ac3cf2014 f6202f0a4b7ba5768b9a88f046008c6d0cb6b85c 213f98cf170a789cb5e8440b527f549895ccf9cc dbd0da8dbd950644dc48050495343844caa5da5c,,Lifecycle manager services clients and transitions refactor,This PR refactors the `lifecycle_manager` services/clients    In particular:  - Creates a new `msg` and `srv` (`Command.msg` and `ManageNodes.srv`)  - replaces startup and shutdown service service/client with one `manager_service`/`manager_client`  - adds `pause`  `resume`  and `reset` command transitions for managing the nodes  - some cleanup and refactors    - removes individidual bringUpNode and instead changes all nodes to configure and activate in blocks    - return bool if transitions were successful or not    - `callService` only needs to know the transition command      I'm open to suggestions on the naming of things in this PR.
ros-planning/navigation2,1096,2019-09-05T00:02:17Z,2019-09-09T17:04:28Z,True,2019-09-09T17:04:28Z,ec6ae7cf4e7a804f51776d8877ad65bdfc94f2d5,212,222,7a53e07929af192b672a886b914d50b31ca60558 cebc582c7fbf251a86429c0233ce68d614fe8618 8a85061068aebd19aea6741aac68c4e51444e0b0 67d451e6c5c1b405187d6c3ccac8f9cbd689768d 3d5d0a37a5cf6ce962db9e51b6eeccffd69a740f 585586408c2901135acd28d12e7519d4a9cf8924 1577d2ce838fc006d96d056bec573db7ba35a11f 5db19c8c2b5d6dd128b7af7ea5476f4a1dee6d23 86d5923bc1ab5bf5a9ac12d9cefc3c64daa12d30 6d4d92b4a1c114427da0aea4c4786f9dcd2f1828 9534a7cd00122ba21d00d68d75d85e7d83f5ee6e 69d0aea89cb3742a8d7cb1fbdfcf0909d9b7369d d147f97987a484ac1b71db78af7e616cd0f983c4 054a4bf4afe7dd4cf2553fa6d03ddeed9e7c00b2 c5e814fb25dc44d62e5d3fe8ffe6bbd86faf41f9 aaa8c2eb3f9d0d3f1787b77e0c3f9a73325fc4df 4225e7bb5579a47b007bdfe69fd56b6a4174c347 18fecaca3a3cdc7f76e4e11c661d12ca0ba19563 1fb5efed502fe9e98c20acfca9376225c1ae7a7a 052064eb1b283120d773ec6eb4e411755fbfe466 1d73654caa4bbb5c22c162b94eb523637a7422a3 2ede683356dc51cbd1732275aaacbf27ce3d0bd3 c15c93fcec944a35d2ffc634417417faeb89b6b7 640ec4105cad7148a630ce053af223e7e810c509 2e1a53113696d42fcd67eaf34730c7640b0e5e9e d076e5d23e03dadfff91db4f199f71698892da9c f109fcc20229ec3256ed46c8f74ecff35346181d 71af3acb17523dfe558f0c96c6c95c1224f7f52b 8cee42c9122096ede6c7bc528722159bd06be90c 2c17640b568085cdd20e9420bd8f38cc05508ec7 a8e20d9ce37f0fb590e227a578cc0710dc34a6bb 5816733b3fa24fd6119017e83624004d4a3bd829 25e918924c7e3c64fe8fe8b1be2ec3a3a587658f 742f53f4724ef61411c2daa0539466345a65dcd2 c97e19f922c5aff122f5934a3c28f3433c2bbbad d7e8b65e7b31ced76738c01bd16f3fc84f886527 4cacc17cf9d69590953405c6cbf87cd1928571f8 1d439d60d63e452c5879892e1c8a8483fc7358f2 270c8d4ed4172e329e9f71ff11eec9202250c8f8 d253a3e0ed3799ad761e5dfef3a73750a340c814 d4cad3cd7ae1cbb0aa0d5d883fccde5d57839a13 2350778c3eb11196de68ce006d5ec246e848f27b 794ab41f6a539a0c0931c3ccb49e791a47ef7122 a22cf4e8952003983e35a774bd759ace650f4cad 97fed9ec221ff36157f3ed0e6c958e56461912cf 675574f382c015d9901f81dc6761fcf17a67986a 526893ae479f835faa69442c1a77ecac431c3719 debc3f33c770ad08768b8d075eab0cd1070d7989 8276c4edcb5c645cebd67295cccda5a8ad2f9c06 599fe3b1def337528c2566ffa54120512ee7c447 36a8bda0d0acf16ac153ab10c430ffef1dec3ca6 21ea41edbb741a0164a5fbfe8960f5194f199693 d232c1f79056f1dd17757d82449745c1e27ac4d7 861e612baed62ae3d94bbe891ef064bd01da76b8 189dd38f595a67b116ec7049875868a7fb4eb444 c4ddb0228c3b8297760329885baa7ecb9479e3b1 54ab6e80ae4bc73a3d72af547a354b553dd57f30 0d6773f0f1043709e9c81c74edf642b427442f34 f55a87fc940541ab1660a06edf3d11acd26f981d 090aaffecce5d448a55aa53d7d12af320b52c258 6c33c1d3fd2d6c4c1a573cef8258d8b38920704d 8c4960e82f928fb35513c40d1ed50044f66083df 9f749e6d6f0e4987ae22534df1df9bbf7d6f5d52 3fcf498da9b5accabef9cab46b4a5265ea72fd16 2196ad80af16a3fa726e629ea43d82e1f2f89238 940100b398126fac5f8ae5e7d047b65a638180cd 27b3f5935c9948b44b7597df582ceb5d16ffafdf 658185b397bbdc55f3902ef67e142f423e645130 d4e11d9febc45caa165c032f69ca74b94dcf70a4 9a71604ce629782f4dd500373a890016092306b8 73aca3586f12aa5df63a87a92a9c2f5158027ab0 4acb6975fd8fabfa5f27b1852e3a2e983ca115e0 88da3f15618bdf85f782be2dfdea5812e04f5658 6d437df14d40759ce91982f6276b809cf7f48d53 0259ac40a99a084a23ee51f421966ac84ac0317c 42fd63fc87ca7e272c9f6d3f3b7c98d155d2db20 97db4b2d1332c643aad6003ace95f306680f80ec 8603f2e44123a6e10a632ad5903b7823348d8d54 3fd24c46d23132884f5a975087000b420ea40271 db301c0f1ebc4d44544a36fbfe1e19eb785529dd 9f00e9149568773796f8d9e39481ce1c65a114df a01365ef61f53e39e3f18a05e49110284ca5bc45 383fad07af4731f98d21117b5f23ab634ddbc4a7 48a7c5db0f480bdd2a061f6196c7b00c5a37e650 7fa7400bc71860829c3bb7f05bf0b62a4e3b860f a972e81fac333675797588e93caceb49a47eae66 8f1eaa2975388c66969c009596ef1e8fdce22030 80f4b3dcda1c30a0ac87a4888f43506422c60162 d4b5c76ef22bfe01768db78ef5260f4e554ae761 f2342412fdcdca8e2648df88ef106d2aa19d917d 83b7037cf7d781de7d583b0d80e61918c7a78a49 48a59a7e2266ca7c1a126dc5cff1c9fa588d7dad a58732744b197910871030764015f47658827902 5f59f682ffeca74d5df9943e1e9a7cde775b4936 c2cc8faecda3896e6499f4b440f06d4d8fcb09ae f9b0682455230f9ce899ab1bd608cee676e2721a 0386f4435fe5855cf8ee288962dcc7766f8fe477 abd33800082a3940b9b888641fbed87998addc1d 53ba5d631099bed5e302baa32042d1ee76aa9829 103d3f28e4dce4da95764aa7aed9d990519025d6 45b35d39e49d10a6c6f8d125943d283f6e2d691a bfb5f65ec1af72311f4f4472a2d795800aecf7bd c8c00f1fea59ccd795b2713463325dac7aecabb2 bc747019fbf380a56d213c3a5b2520f30227e91d fdd13cac3bbb6305a95eeb6cc998f277972d134c 6e8b927be7d6750b904b9d3fa1f49990322e9f8b af78ecb7b857d9649d9ab96b0c1278399d91dd07 dc8b43eaa07b25dfcea2ea9a2dfa2960d6215140 60f60290a17037005ce436be7e940c2157ebbae5 1a0d9753341747c362a711d9f18e3ecbe605d34a c2b5c9653dd330a0b1cdfd41e282c55774f79589 cb67dd98f0115562272ac4a6635fc9893238b210 f1d5c22142839b6b2daed571ea03a8fe857bf381 17cf28a0c9d126eb6292a8ba8eaf928b02a05c82 e866ce96f0b8a24e4818b26b650ec7f44ef7bb1f ee98e993e769ef97eb5878c90fb1385b86a8be72 b4393117f9d348109ec673afd0bbed78930cec0f f5c000dc3c19e0ff8f83f30641f2598c147b47fe fc52350213bf30fb0db61b99926b652db490eb34 b54e7a1230d3187c3c49a97ab735458dc2c738c6 d54d1b5f0725eaa4e96cff2b072d67ac2c3e5ec4 8f6215459a83a786b8756f15d9e4406412195ec6 6d7f90cb579c0d24ef2a5e391836798f0cd352e8 1e7130798af60eabb9400b6f540d8cfe391321cd cad449d613671b019935d48d7dfb2f82a0b10fa3 92d966164eff2e0b6931270bd5c7d006daf67b5c 60491b1928df409e3fb613cdea24c53837a8cec4 d1fa0b2036e86272415adb325c7e3a88934a6686 7f5e02015f66600de50aaee37ae9b3b5a69f5717 27ea4cb745891e49213b5098de7dc3e880eab1f1 2eb191697783bb071de2c49f63dba800dd6fecc9 142d7c967c34f12fe1ed1f9a1a05c48371f9a0ce b89c1f3fc3cf06ab9e9ffd828d9decbdc92defb8 b4fea138025372269821c26f19c054f83977799c ac71fe5a4e75d8adef59d6fc7bcde9f6f99abb75 980063b1eafc8c2301d051574279de5373316242 a0fa810521752ecd833f80346c78c0e4fdaf0b7b 321e0e8f1f1be70b7c8bf64fdc167230ea62df93 d53be70027644b362c362d6a79ccdcabf5da30e3 e0fd2ebf88104d87dffe2fa80d0567ccf55c284e 1c6e4a85d1743c7551304c2367b0e7992e97c300 c6853560879e4109be4267ae078c9eeb281d6c0c 64d5ddd255d3adfffa0c1ee04a04ac0c1c961ae8 94f73430becb793ac8177c577317dbb4010347d8 d5379dc08708c6e4c5cca4ec55b592dcf94f1a02 a4c53dedef5fea17c4ffbc615d673d1ad84cdd29 b2e3d720809760fc18b90f0c3bf9c32fe26e513a af127127d3915ee526d49adc89dbe2897b743e59 0359bf76cb6a77cb2a30b5431ec0ca5a93430a6f 208e4e5147cf3a8ea4012bab7a6df985586edf68 01b367c6a7fbd3e8bdb37367dc73a15118e7875e fd21ee90d86802922418f53504bff951697eb10b 286a88157b0ad3f56b45e1368174b19d24e39ed9 970aee8fcf7cca59902b2541b74947aca45d808f 0ce96c96c43bb016341300bd64497c5cde6c7b97 2c9cd822b82338a07397c3279e6c499e14eccffc 59f0360827a504ac9d54dfbc7019cd8547fc766c 099402f31abd6939b3285f1cb899c0c0be389bb3 a1345de8f28e2c4225f009450a903e9f55b54a7b cf8fa70e0ca22af4218f067d7995ddb8a49b470a 66892a6eed8bbf24f7bb3d004642d68d1ddf2047 6eef8e53b3dcb829be93f37346ac9251a04ddf9b aa65146f3beb1b52373d9e8c9a1243765eb442d2 d944605e90b898dff7986d2800c5144fc0b0a929 a177fe2a2790ef8753ad7517c68fbb047128351d f85c2bee6302025921493bb6ca25261f306dc9b2 a071cfdb94479f460932d9c5cc2a533be8c79909 3c0bf3439490bd850280768626518d689b556b70 7bafe500e4730c56af88f07758b2322ce1f560a9 98e62e451fd67f8a146e757a3674e9e0978db644 e03175ba9f0634cdcd59b07e9936c049e48641aa ca948f28b9aa5d331b114b12c68bd1a8900348c0 7c473cdadb71355fcdc8dd73bd4bbf40e75141ac 8b239fb4e276d8c2430a788fb3bc5a0d5746ed2b 618e642f1e8177ddaebbd95b4eaaa65e9a98d2a9 5c0dfbe7a49cdc91a0db893ae5e1fb0e1bc84e6d 5a5fe5662ac03b47a0dc2141b601ea7b55104c52 46efbfa0c1e86efb49e1d977de2bee712c23a722 0c6a1bc0aff39aec59affab444ca1477d8a0e616 de44f045aa09ee18be0c60826bd204b80f563fbe a1692543ca3ea410b7fc1671ca61bfb025729950 6dccd404e3173d0acba3b9a0201a2a02c8138acd 5a70ad0d8b7409b23b90c0112dfb8f03fbc8a3dc f4f62d1d1e012870b5d55e3bc32953af5e6ce5d0 e9bf8da7aac2e9bc535cd0742f502ccc6d921bfc 41cde9f5273c6c3b904caddff59eae789ac1fc78 8196e1f422fc6f3c7bad8c54a9744c2fc2809356 3c7b061b468751b31ab0f01a8fa26f5cdbad11ca cb3f76eccdce42a374e60cad7923ec062e21349e 18bf2a6f0a9757c32ab096bceedd6b652ec004f9 c1b4fe4bfecd7a3a374119b7190870112510b271 baa0f83e7433e3565d0e0e8f90fb04bc3d16a8d5 6a1b16181de5f900b83a4c4167a4843fd6ce9a5b 23628db71470d6416c25e8a5304f4f329350d805 ef90f8af53364944deb4ad82d2ceb292e38893d0 4f42633b9320d503e0f26d1fc7773485b4f94de3 886e3e1a4d194216da819830dbc031690150b86a ee3d1500512dca5f97657477de049d5cddcdff06 4da138a6ed4a99786630ca907c0eb7bb56a4da5d 75632414a6ab352ace935e5a3476321ebf6cd6b1 7a7ce075bbd2593a83ca6986102fd4db652d99d8 c27d6638311a4a3b2b133d9d4d0ee9ad4fa91c9b 39ab506d865f830efdff01761a3ed9d681548d57 2eec1436b75cdf7c5d5ecf9993406752ebb7e17d 63b1fa03518b24f088c43efe1643c08a73173121 ea34bba8252514a597ba5b527ec14a9f172cecda bb20578c2363e9654a142759dac19bf827b93c6b dcad656db397f66fd4e7320f00cd9582132a14a6 c241ab6cfa3f1504849824f604a8d59fc0b6a4d2 3d5d4cd50c8c53daa5ed7a22985f111a85b82d02 9e309dfdd12446918b7b136696cd0f6dbc572088 f46c8ee3dc8fd1d802e4492c1e3169cff9e8f3de 97de88d91dd90141486f34a4b45258f03b2874e2 c004f21e6be61c3a3eabea8e686307cd1dc63cad 443f56bbf40db5a8fafed59c2353de214c697df7 1aaca6d02d708720df0bb90030945885faefff48 b629f5520c9de3e5c7345e26bf714de35dc20b7e cdea9746d371d882846b077b8aebad79a28d4130 6aecc6a0c64ed2946f3b349ee80819316c2c79ae 5053bfe5b9ada963c2d67afe8cc2936aa3876bb2 ba0ce63c944b61fb39a44bee933327bd911af5b1 52061fba987e4f054a84f91ba85e56845a6d3f47,,0 2 4 sync Ready for testing,Updating dashing-devel branch to the master b629f5520c9d    Everything seems to be working as expected. Please test!
ros-planning/navigation2,1089,2019-08-30T21:13:03Z,2019-09-10T19:37:22Z,True,2019-09-10T19:37:22Z,41da7b80f1cccfa8480a3bd166a19220c1ed7909,38,18,38f7fcb21d5f11a84021c4d87e10d3a036a2ba96 05076bf72e51f56457d8f1c463eb8222e3856689 d7f440db8bbf2c233b7d3c732c6002119ff8a281 4745fdeccf27269d275b3ba1760e2db56249d6f1 0895df8560656f98826a1527e947cf670d4d4320 a7acb33ab9747df5014fb85cbc1543ed3b9f50ef 5711646e1aeeedee3e59ee7c796d9d2a4c0e2bf6 61be8c60119e0946b2b80cb750b2ef590b114ab6 4103d418207fc7f3a48e7122685a5c689790e146 e9fa7ecfc3216ef9b7fe1a4457dd62207311a11f 3972e3cf4981a64874af6a8ccbc7c7fb75539203 fb25e8fd3a25b1e85173e31eb85702a7742d6735 0514c9aaf071166918ca85e65236a7b735e3191a 183d6eceec6740361982ca400df3cdd3626a3c85 50bb913114abda4e17132054c5f1e86866ae5aac 675717da58cbe68eed8df8bc46fbf66c1ece78bb 4efa7357d36c5d1bdec1857a7047c1ea91062ef9 71d5d7152df8e71dd7ba3aa022ac4980550d058b,,Move Costmap into NavFn process,The test updates may be flaky  I'm still working through the automated testing. #992     But on the real robot or in simulation this works fine.     Major motivating reasons:  - Global costmap is very large in even medium sized spaces  a 100 000 sq.ft space could have a costmap in the MBs. Even ignoring the serialization elements of DDS  even copying that data to a ROS message  and copying it back out for use on the other end is a huge thing to incur. Add in the serialization/deserialization processes and we've got quite a CPU and now memory hog on our hands.  - The costmaps should have access from the planner/controller directly to ensure that if a message is dropped or late  we're not running into a sudden obstacle. 
ros-planning/navigation2,1099,2019-09-05T21:05:11Z,2019-09-11T00:03:08Z,True,2019-09-11T00:03:08Z,e342010bdbfd9ab69f285d19759a42341cda3fca,21,2,ce28a7ef3bbe056b0baacd4f9bab8d9eaa84f072 c678f1a87b145106e22fe41594e81f2d664fafd3,,Declare if not declared parameters,Adds a `declare_if_not_declared` template function and integrates throughout the stack to allow nodes (and particularly plugins) to be reset (unconfigured and configured again) without causing run-time errors for a parameter that has already been declared.     Related to #714
ros-planning/navigation2,1104,2019-09-10T00:30:23Z,2019-09-11T01:04:03Z,True,2019-09-11T01:04:02Z,ccc36177e80fee003dc14be3930d56032c1dab8d,7,4,aa38e9885cd991d9c07dee845cc2d27a828fd601 4a1929cd029ce493b4be08cc5505b12de4c5a5f3 a3aa6e963dd59b55e06c7084d480ae62159b62a0 ef8162fd09c96eea889b9783c0433e2f7e29b0a0,,Fix System tests for new argument parsing,## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---  Fixes system test   - Adds new <argument> tags for --ros-args and -r flags in turtlebot3 world file   - Fixes QoS setting in system test   - Fixes namespace for the "clear costmaps" services    ## Future work that may be required in bullet points  Namespaces may need more looking at for global_costmap topics  didn't do that in this PR as it isn't blocking the system tests      <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1101,2019-09-07T04:56:25Z,2019-09-10T19:23:46Z,True,2019-09-10T19:23:46Z,0c5641ff50c203459d6f803929f8f2b3fb907744,1,1,b87942a3502af9e4b6ea7d6cf78a510f55539cc1,,map_loader add SDL include directories,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | none |  | Primary OS tested on | NixOS (Linux) |  | Robotic platform tested on | none |    ---    ## Description of contribution in a few bullet points    `nav2_util` fails to build on Nix (https://github.com/lopsided98/nix-ros-overlay) with the following error:  ```  In file included from /build/navigation2-release-release-dashing-nav2_util-0.2.3-1/src/map_loader/map_loader.cpp:36:0:  /nix/store/snzbjcqvacn5i4y96i8wan4zvkaybdbn-SDL_image-1.2.12/include/SDL/SDL_image.h:27:10: fatal error: SDL.h: No such file or directory   #include "SDL.h"            ^~~~~~~  compilation terminated.  ```  Nix uses non-standard installation paths  which is probably why this bug did not show up on other platforms.    This PR adds the SDL include directories to the `map_loader` target.
ros-planning/navigation2,1057,2019-08-22T22:29:03Z,2019-09-12T01:33:11Z,True,2019-09-12T01:33:11Z,19dd3302d53edf77ec80a09e95fe44691946cfb1,5,8,8f83655e860f0c64f56e5fb7599c4b0006120727 3b78c38eab4a080dfc7e467dffe3bbc1ace2e233 07768d2ccf762337d7ae581341fac5c2090812a6 bf1cbff3d44eeca3956e360d8fbd2b0707dc8205 64eadab53456097421149f9dc8a09592151396ff 98b3cd9bc1aef99b394f714ec4571a0a6269ef20 de6988f197b2684bb0bdc12e8dc733d7030afd6f 7cc209da5ba2d775be19e90afc3a5c4d564379d0,,Add support for running nav2 with cartographer,This PR includes changes for using Navigation 2 and Slam together. These changes are tested using Navigation 2 (Dashing-Devel)  Cartographer and real robot (Turtlebot 3).    - set map_subscribe_transient_local parameter in the launch file to False when launching Navigation 2 without AMCL and Map Server. The default value for this parameter is True.  This parameter is used to set the QoS settings.    - Set QoS Keep_last to 1 or 10.    - added if costmap_ == nullptr. If for any reason costmap_ is nullptr  wrold model will stop working. this problem occurs when the QoS settings are not right.
ros-planning/navigation2,1111,2019-09-11T22:22:30Z,2019-09-12T03:34:14Z,True,2019-09-12T03:34:14Z,0d863052ddd1a4d2fe5636a20ec5628aa415e533,1,2,ed62c6bfd82e3030d07ef42b60d503e55e911ee7 0247d0a399ca1ea7319ad1c0df5ee04f70c45921,,add ros args flag to costmap,Adds ros args flag to NodeOptions on costmap.
ros-planning/navigation2,1112,2019-09-12T00:51:04Z,2019-09-12T14:09:50Z,True,2019-09-12T14:09:50Z,816db291b0de6e56bc31d74fd7228a352279766e,1,2,3a54fba4aa671b2913f64e85a521421995356fd9 3a47ada14e699b395e4bf080d8d251fe57345fd4,,Adjust issue template,@SteveMacenski   Fix #1102  Clarify which version and how to get version. 
ros-planning/navigation2,1109,2019-09-11T16:34:50Z,2019-09-12T14:10:38Z,True,2019-09-12T14:10:38Z,173206ce95eabea6fd56a66eb9869828af37c93e,3,2,163efd7c6c54e44958cf8a3552333199192a7756 c4b193efc018052979c588a2dc85cf64bedb54bf,,Forward port dashing devel 0 2 4 dependency fixes to master,## Description of contribution in a few bullet points    * There were a few issues with dependencies that I fixed as part of the 0.2.4 release. This PR brings those fixes back to the master branch.
ros-planning/navigation2,1091,2019-08-30T22:07:14Z,2019-09-12T20:59:02Z,True,2019-09-12T20:59:02Z,e60db7c6fcdf6248dc625026a5eb5c28ca4e2025,1,2,1b6594d8703b42f227544e7c8cff15b5cb910665 69419897c8565ead9511e05761d19696a4691a76,documentation,added a new dependency to the list and updated ROS 2 dependencies the ,- Updated the link to the ROS2 Installation page  - Added the dependency  graphicsmagick  to the list
ros-planning/navigation2,1098,2019-09-05T19:59:21Z,2019-09-12T21:00:45Z,True,2019-09-12T21:00:45Z,7a8ab473b66266ce584269a1b3d55fdfa4e653c0,2,1,cbd081bf167ff010433b457bf29eff1b8a796fde,,Simplify Nav2Panel button state transitions,This is a small cleanup of the QStates for the `Nav2Panel`. Whereas previously  there were new added states for `starting_`  `canceled`  and `completed`  this PR removes a state and simplifies the logic. The new `canceled` state is a kind of a short-circuit back to the `idle` state.    Here's the new state diagram:  ![Rviz Panel state diagram](https://user-images.githubusercontent.com/22353511/64376266-be103a00-cfdc-11e9-9684-7d529437936e.png)      Compare with the old one:  ![Rviz Panel state diagram](https://user-images.githubusercontent.com/22353511/64376093-50640e00-cfdc-11e9-8a50-60d685a000a3.png)  
ros-planning/navigation2,1113,2019-09-12T21:48:21Z,2019-09-13T17:49:17Z,True,2019-09-13T17:49:16Z,fa92240d9d288bf9af1650d8c91378aa5923468c,2,1,f48f8be5db5ee343b0f2267b24c6be03449c1dc7,,Fix ExecuteProcess actions to use new parameter format ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1) |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * there are two launch files that still use ExecuteProcess instead of the ros Node action to launch nav2 components. They are currently broken due to the new command line parameter format. This PR is a quick fix to get them working again. Replacing them with Node actions is being done as part of the multi-robot fixes.
ros-planning/navigation2,1115,2019-09-13T18:48:39Z,2019-09-13T19:21:22Z,True,2019-09-13T19:21:22Z,32d36f802e017f1bd02cf9e2eac79df980ab1ea6,1,1,3e05f5de4b806a57d37bf2d37e7d90565d7ccd4a,,Add current workspace to the rosdep install command,# Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | This PR addresses the issue noted here https://github.com/ros-planning/navigation2/pull/1107#issuecomment-530652301 |  | Primary OS tested on |   |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points    * CircleCI is currently only running rosdep on the underlay(navstack dependencies) workspace  and not the nav2 workspace. This PR adds the current workspace to the rosdep command.  * When the CircleCI `install_dependencies` command is run on the underlay  the two paths will collapse to the same directory and should be harmless but redundant. When the `install_dependencies` command is run on the overlay (nav2) workspace  then underlay and overlay will be scanned for dependencies as desired.  * Once https://github.com/ros-infrastructure/rosdep/pull/699 is released  the `$UNDERLAY_WS/src` component can be removed and the redundancy can be eliminated.
ros-planning/navigation2,1106,2019-09-11T00:42:43Z,2019-09-11T04:43:36Z,True,2019-09-11T04:43:36Z,ec34755fa46539d191803dddd4bb928b80cd8fce,6,2,eec7127d700cc5f4c1d3d35d46f723ba7d921f88 51e8663e7078d0df33afd77f3aa017cb5abe564f,,Remove COLCON_IGNORE from nav2_system_tests,Context: https://github.com/ros2/ros_buildfarm_config/pull/38#issuecomment-530117611
ros-planning/navigation2,1107,2019-09-11T03:48:57Z,2019-09-13T21:09:00Z,True,2019-09-13T21:09:00Z,a2b8ed99ab47920ebe27763451947e4a0d4907f4,45,19,465e4e1d70cf0bf4869c6297d7ad15ae7017bef5 fc9ab5d2612ad06c0f344b578657db846e16017f 92a50aa69aff2ea1dfcf3f6038052ba83c63204f a473526f4e4a4ed7bef944b27971e00bd7f5bf2f b1b33bf1a764965cc155830c8b5c9c8f7c45bc5d 7dee2eafbb57e0d1de6f2319b06798378cc60b32 867b03b3fb22beaf5e55c4cce256635f579707af af402c5329df8834e1a9744995ddcd257dbbfe21 85f32dc2b8dd3170cd450bfdf9574ac75adbd0b9 446925e9d6cd2dcb5815012acbaa09ea5a0cf194 c6ec5647746f978a836852bd34c55c083e48f030 82f56f786da0778abc79dfc5650f3fe6fd234d03 b0eda85808d39ac780319c21dcad9f9e009e7dab 8e6b959a9a8e3699dc4b7a71f34f10ac7b32d3a9 9c4367d61d3e1c11b3ae52306694d2cb9ea7110c 828516328dab3c492ed6c5d84bff232df4dd7dda 577fb6cd1b1d883b1a70ca5ce38ee973685669f2 ee184fc43e7f4ac780e58d64634b71d8c9f6a8df 3112a3d120a60be876e1a9b5e2cec437b4d785d1,,Nav2 Planner Navfn plugin,Major items    - removed nav2_msgs/Plan in favor of nav_msgs/Plan because they're basically the same and nav_msgs/Plan included the PoseStamped which is more general for model based trajectory planners  - Created plugin navfn planner  - created general planner server  - updated relevant tests and launch files  - Refined global planner and recovery abstract headers as needed
ros-planning/navigation2,1117,2019-09-13T21:30:09Z,2019-09-13T23:07:30Z,True,2019-09-13T23:07:30Z,1781a5b9780a6f85e24ba17cd9773b668ce21772,4,1,6753cd6d63125384a9c09ab18cf4fbe46af7fd3b,,move costmap in nav2_planner to shared_ptr and node to rclcpp lifecycle,Turns out the issues were from other things that I had to fix along the way. All good now
ros-planning/navigation2,1120,2019-09-16T17:49:29Z,2019-09-16T21:39:28Z,True,2019-09-16T21:39:28Z,4973026a4397ffe5a56a47b2fb32c5c25aa8daa6,1,1,dc5839c538705fa7ad68c9ed1c900376e8c63adf,,updated deprecated setting of ros args ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | |  | Primary OS tested on | (Ubuntu) |      ---    ## Description of contribution in a few bullet points  Fix for rviz complaining about deprecated params:  ```'Found remap rule '__node:=navigation_dialog_action_client'. This syntax is deprecated. Use '--ros-args --remap __node:=navigation_dialog_action_client' instead.```    ---
ros-planning/navigation2,1123,2019-09-16T23:18:22Z,2019-09-17T18:42:07Z,True,2019-09-17T18:42:07Z,448ee32a3e8efc0d3be9d02c6cf4f6fdeff44ba1,1,1,8f55c3329898b844ad112a0d124183162914975b,,remove reset of costmap_ros shared ptr,Part of addressing fixes in #1121 . `costmap_ros_` is being created in the constructor of the planner  therefore we shouldn't be resetting it during the `on_cleanup` call  as this will crash the node when attempting to call `on_configure` again.  
ros-planning/navigation2,1128,2019-09-17T19:21:08Z,2019-09-17T21:02:21Z,True,2019-09-17T21:02:21Z,16fda6af269c4e8f209f9ff953e8c009b2d67350,14,1,9142f21fc6e03b6c63cee8628d82f70c24032dad,,remove nav2_dynamic_parameters,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1126 #933  |    ---    ## Description of contribution in a few bullet points    * Hasn't actually been released since its not in the navigation2 package.xml  * Build issues  * Isn't used in the repo  
ros-planning/navigation2,1132,2019-09-17T23:35:24Z,2019-09-17T23:56:02Z,True,2019-09-17T23:56:02Z,5ef79f723db56c6234802d1e447b8b4f41a35dbd,1,1,03775f6c8a9a6f264f778abec24e64982a7908dc,,Update lifecycle_manager_client cpp,Fix build error under clang:  ```  --- stderr: nav2_lifecycle_manager                                                                                                  /opt/ros/master/src/ros-planning/navigation2/nav2_lifecycle_manager/src/lifecycle_manager_client.cpp:149:5: error: cannot pass object of non-trivial type 'std::string' (aka 'basic_string<char>') through variadic function; call will abort at runtime [-Wnon-pod-varargs]      service_name_);      ^  /opt/ros/master/src/ros-planning/navigation2/nav2_lifecycle_manager/src/lifecycle_manager_client.cpp:160:5: error: cannot pass object of non-trivial type 'std::string' (aka 'basic_string<char>') through variadic function; call will abort at runtime [-Wnon-pod-varargs]      service_name_);      ^  2 errors generated.  ```    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | None |  | Primary OS tested on | Untested |  | Robotic platform tested on | Untested |    ---    ## Description of contribution in a few bullet points    * fix build error under Clang and runtime error
ros-planning/navigation2,1118,2019-09-13T22:25:15Z,2019-09-18T02:40:34Z,True,2019-09-18T02:40:34Z,44dcd6054ce2922dc9481a75ac07871450612af4,13,5,f5c048c909bf01941500e2308e0a29ee5ff4ef34 6d5ddd94b566abd27f3fa7100beb32428e2e36cd d2356fe532bb384da063a62dd982155f7efb1b32 061f21557d2abd9f2bf3f02911e957cd938ba9e0 66db570fa999a2737bea7b4a923102e311b505cd,1 - High,Refactored launch files,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1078 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TB3 simulation |    ---    ## Description of contribution in a few bullet points    Did some refactoring of `nav2_bringup`:  * Improved launch file re-use: `simulation_launch` :arrow_right:  `bringup_launch` :arrow_right:  `localization_launch` & `navigation_launch`  *  Use `launch_ros.actions.Node` mechanism to launch the nodes instead of `ExecuteProcess`.  * Fix launching full simulation.    I'm setting priority as high since running in simulation is currently broken (other than system test).    ---    ## Future work that may be required in bullet points    * Pull gazebo model from TB3 repo once it has been fixed: https://github.com/ROBOTIS-GIT/turtlebot3_simulations/issues/91  
ros-planning/navigation2,1133,2019-09-18T05:13:30Z,2019-09-18T17:26:36Z,True,2019-09-18T17:26:36Z,0bfa19c92d0019a2e3ee6a92c0799482f7d56928,1,1,899b296f06cefc55ee1fce7b1d8211019a1afc83,,Fix deprecated publisher api issues,There were recent changes in rclcpp for the deprecated publisher API  this PR fixes the current compilation error for the `nav2_system_tests`
ros-planning/navigation2,1122,2019-09-16T22:56:28Z,2019-09-19T21:28:57Z,True,2019-09-19T21:28:57Z,919aa32c11b52b514d9c33b7722aa0800a389479,1,6,dce46bf06a47a751e6e01700115fbb97e7c8d964 ce1724d1ba3f59aa9131aaabb43cb59df2642417 6de6f2d2741d2a145a375be1bb73d667a4c4967f a1097607c27c563587317280021474e67f754580 b49a4699107018550e8cc97557a74a998f4d5a09 35e80f417ca79d5dae02e8209bfb80cf8da08110,,Cache per packge xml via multistage build,Use multistage build in Dockerfile to cache dependency install agents only the package.xml files themselves  rather than the entire build context passed to the docker daemon.    Context: https://github.com/ros-planning/navigation2/pull/1106#issuecomment-530614144
ros-planning/navigation2,1140,2019-09-19T19:22:02Z,2019-09-19T21:44:28Z,True,2019-09-19T21:44:28Z,77f3a618ddbc38fee1374060c76a7ee79bc6bc90,1,1,e486ae25b2c414a680beb7e0c47437cc376b42e3,,Fix params file path for nav2_params in the system tests,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Set correct path for params file |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | (Ubuntu 18.4) |    ---    ## Description of contribution in a few bullet points  changed nav2_params.yaml file path from ```/nav2_bringup/launch/``` to ```/nav2_bringup/params/```    ---    
ros-planning/navigation2,1127,2019-09-17T18:38:34Z,2019-09-19T22:47:07Z,True,2019-09-19T22:47:07Z,f2a9fb7a32f2b913a6438f149f94cccfdfd08760,1,1,c9b497bc4d688756e1cd93dd37cfe1313df751e2,,Colcon mixin now installed from base image,Update Dockerfile now that colcon mixin comes pre-configured from base images.  Context: https://github.com/osrf/docker_images/pull/315
ros-planning/navigation2,1144,2019-09-20T00:15:47Z,2019-09-20T00:29:11Z,False,none,none,23,6,f5c048c909bf01941500e2308e0a29ee5ff4ef34 6d5ddd94b566abd27f3fa7100beb32428e2e36cd d2356fe532bb384da063a62dd982155f7efb1b32 061f21557d2abd9f2bf3f02911e957cd938ba9e0 66db570fa999a2737bea7b4a923102e311b505cd 072bcfc3cf8e03c93fb07e0b2fc7d05f804a0de2,, multirobot Part1 Spawn multiple robots into Gazebo,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | # | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  *First PR (of multiple stacked PRs) with the objective of enabling multiple robots running nav2 in simulation.*  Add capability of spawning several TB3's into Gazebo
ros-planning/navigation2,1137,2019-09-18T19:32:51Z,2019-09-20T20:48:36Z,True,2019-09-20T20:48:36Z,030a0e1d0c55c573c7698fbf2e51d801b979b768,1,1,9788fb7eae77f85fc9deaf7ac936d5ca1388abcc,,declare_parameter_if_not_declared in NavfnPlanner,Since parameters are being declared in the `on_configure` call of `NavfnPlanner`  they should be `declare_if_not_declared` to allow for the node to be re-configured  otherwise we get an error.    
ros-planning/navigation2,1141,2019-09-19T19:54:42Z,2019-09-20T20:53:04Z,True,2019-09-20T20:53:03Z,cc50e2e6738d19a9a88c5a0080cf97fa9591029c,2,1,e0929a423db6a97f88455b0e8c5e89945dc8aabf,,set first_map_received in amcl to false when cleaning up,Fixes amcl lifecycle node transition bug in #1121  where the `LaserReceived` callback was being called even though the map had not yet been received  causing a crash because the map was null. There was a check the that `first_map_received_` was true lest it returned  so this PR sets that flag to false when the node calls `on_cleanup`.     This is the last bug I've seen blocking the lifecycle nodes from being transitioned via the `LifecycleManager` with `reset` and back to `startup`.   
ros-planning/navigation2,1139,2019-09-18T23:52:58Z,2019-09-20T20:55:08Z,True,2019-09-20T20:55:08Z,5f96f5b345eb0c2441f9c23f021b216639e4e7c5,2,1,61e010442d8f897ac92c8f1332d32dae9fb15f94,,create action server on BtNavigator node,Fixes (at least in my several local tests) `bt_navigator` bug in #1121 on re-configuring after reset. This PR creates the `SimpleActionServer` on the `BtNavigator` lifecycle node as opposed to the `rclcpp_node`. Added new constructor in `SimpleActionServer` to support node interfaces. In any case  not sure if there was a good reason not to have the goal subscription and action server on the `BtNavigator` node itself.     Before  we were getting crashes in `bt_navigator` dealing with creation of action server on the `rclcpp_node`.  Current theory is that the `rclcpp_node` still had ownership to a shared pointer to the first action server even though the SimpleActionServer was destructed.    ```  [bt_navigator-10] 2019-09-18 15:21:13.370 [PARTICIPANT Error] Type : action_msgs::srv::dds_::CancelGoal_Request_ Not Registered -> Function createSubscriber  [ERROR] [bt_navigator-10]: process has died [pid 22624  exit code -11  cmd '/home/brian/ros2_projects_ws/navigation2_ws/install/nav2_bt_navigator/lib/nav2_bt_navigator/bt_navigator --ros-args -r __node:=bt_navigator __params:=/tmp/tmp25obzljr'].    ```    
ros-planning/navigation2,1150,2019-09-20T19:35:37Z,2019-09-20T21:50:45Z,True,2019-09-20T21:50:45Z,decb36fc2f4df911ae3b744d89f17fc07ad1e6fd,1,1,28576e5fe9d3cc129b1ce4714bbd96ba7ce5f359,,Change the system to managed nodes in lifecycle manager logging,The entire system may involve other nodes launched from a launch file  including non-lifecycle nodes  nodes not managed by Lifecycle Manager  etc.  
ros-planning/navigation2,1153,2019-09-20T23:56:33Z,2019-09-20T23:57:54Z,True,2019-09-20T23:57:54Z,3aab0745426f6a5a4feeee615c90bc6eeecaab66,1,1,7fb4ad59408281358428c04b66b9c0a7845f7e0f,,Rematch dashing topics with rviz,#1151
ros-planning/navigation2,1097,2019-09-05T18:11:37Z,2019-09-23T04:56:51Z,True,2019-09-23T04:56:51Z,5da8e2111614d37c4ed3dc132107104d130d6be6,6,4,a91f0338ab94996476590ca94cdbd80bfc63a636 3136c2d4e3c52efe9ccb97c02af625413509b7ad d89b88a33b6b046b1320d4f7d13f02846cd89daa 19fe6fd52bea321023622ee0181439cfefb7b3cc,,Rviz panel autostart fix,This PR enables the `Nav2Panel` to transition states properly whether the navstack has been autostart enabled or not    | Info |  |  | ------ | ----------- |  | Ticket(s) this addresses   | #1067 |  | Primary OS tested on | Ubuntu 18.04) |    ## Description of contribution in a few bullet points  - adds `is_active_srv` and `is_active_client` to lifecycle manager and its client  - sets active flag  if lifecycle manager `startup` was successful  - adds `InitialThread` QThread which starts in the `Nav2Panel` constructor and requests active state  sends signal to button state  and terminates when finished  - Creates new `pre_initial` state that waits for the lifecycle manager to respond before transitioning to either `initial` or `completed` (should probably rename this state)    
ros-planning/navigation2,1108,2019-09-11T04:08:16Z,2019-09-23T05:56:49Z,True,2019-09-23T05:56:49Z,b7c6761a2c97dd774f6d2e25d129f021613bc411,2,3,b0c205bd60308005fbaa20743f161bea8190da21 e49ab57307f56e441b13b872976982631fce6a1e 1425ff76573058cf781b6ad18ebc1b64b4015292,,Add Pause Resume and Reset rviz panel buttons,This PR is based off refactoring done in PR #1098     | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #818  |  | Primary OS tested on | Ubuntu |      ## Description of contribution in a few bullet points  - Replaced `shutdown` with `reset`  allowing users to `startup` again  - Added second button for `pause` and `resume`  which will deactivate and activate the navstack lifecycle nodes    State diagram:  ![Rviz Panel state diagram](https://user-images.githubusercontent.com/22353511/64806417-f6b59380-d547-11e9-95e0-38a3129ce35f.png)      ## Future work that may be required in bullet points  - Fix bugs to allow `startup` to work again properly after system has been `reset`  - This is an old problem  but perhaps the button states should fail transitioning if the lifecycle nodes were unsuccesfully transitioned? Right now the calls are asynchronous and the states will transition regardless of the outcome    
ros-planning/navigation2,1159,2019-09-24T17:32:22Z,2019-09-25T20:53:44Z,True,2019-09-25T20:53:44Z,c0777fb975743e0347bfa54e0ca763b8cfdbc830,2,2,6a3c4e53b5fb90b3e6ed2b67b0ee8b4bb1728fce a7d2084c9e2fdd26488eafe2b942416530140122,,reset AMCL initial pose with last known pose covariances,By default  we have the last known pose being initialized as the initial pose when AMCL is reset. However  when re-configuring and re-activating AMCL  the particle filter was being cleared and the covariances from the last known pose were not re-initialized even if the pose position itself was being re-initialized  causing poorer initialization after a reset. Also  if pose is set via parameter  the original initial pose parameters are being set even after AMCL is reset. Lastly  in the case that the robot does move (robot kidnapping) between resetting and starting up again  there should be an option to require that the user provide a new initial pose.    This PR addresses these issues via the following:  - forces update of particle filter when started after `on_cleanup` is called  - sets the initial pose parameters  to the last known pose if  `set_initial_pose` is true  - sets the initial covariance of particle filter to last known pose covariance  - adds a new parameter flag `always_reset_initial_pose` which will require the user provide a new topic pose for the initial estimate when resetting AMCL (if `set_initial_pose` is true  it will still use the  pose from the parameter)
ros-planning/navigation2,1167,2019-09-25T20:16:51Z,2019-09-25T21:11:39Z,True,2019-09-25T21:11:39Z,0bf7f9ce3eb1862271ccb329d515df653a24f32b,1,1,2ef6777e068b889ef306e6ce6db9c7080fb8fbf3,,Enable deprecated warnings,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | (add tickets here #1) | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  Enable deprecated warnings during build. -- we're currently getting no warnings :smiley:
ros-planning/navigation2,1146,2019-09-20T00:35:12Z,2019-09-25T21:46:37Z,True,2019-09-25T21:46:37Z,a0ee02ea932ba8e48419ce0d16f18a2ed655d7f3,21,2,4ab8930bbc86a8aa62ab8720a30d557bf2bc0a49 9cb8638cc8dc9df398aa827249d3cd129a1cecd3,, multirobot Part 1 Spawn multiple robots into Gazebo,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | # | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  *First PR (of multiple stacked PRs) with the objective of enabling multiple robots running nav2 in simulation*  Add capability of spawning several TB3's into Gazebo
ros-planning/navigation2,1143,2019-09-20T00:04:44Z,2019-09-25T05:12:26Z,True,2019-09-25T05:12:26Z,78a0272c585dc575d84ea4ec4d3e58d169c7c622,1,16,77e84b7fd0236758bf1a2a243082b325b3025aad 304c951f061eab1396f06d97c58bc59e9bd01a60 017402ebb01a6c5dddc526e5e4f0c57ff76a9af2 e94a02d20664a6c8a52502648af0ccb19770171e 37d7f3662c2d16154f75bfd3e5f766e2cf2a1073 d3525d2a8e8efb9fae4d0d7e87dda07bcf0915bf 6e6ebace6f730ec0318fa3db4877bc413e710017 c490dddb3b6afb96926f2acb780fea0698878f99 53db6f4697e36f28a868601d48ba968d5602aab6 cde8f01d7ebf1b0be0f1ef3faed0cacc15b03d61 a3f54a84540f7c16654b31fd80113954c1f3c9e6 e59edeb5d02881f1307f739c273b3c5a58a088e9 b9e260644c7180d2ff8b3ccc5fadeaa707dfe7bd 484490cbe13159939688785abc8306b9283c2331 49315d1fc13ab77e628d64e465d719d01ea73e5c acac03ef1ca81d51c89b363d8113fafec51d20c2,,Navigation 2 with SLAM Documentation,Navigation 2 with Cartographer documentation.  #1134  
ros-planning/navigation2,1147,2019-09-20T00:39:00Z,2019-09-25T22:01:48Z,True,2019-09-25T22:01:48Z,226f06ce282c727ca240ce8be0cb4b093e26343b,13,1,0dc160d092a5f15f9f80bc33915c503faa8b673a,, multirobot Part2 Add namespacing to nav stack,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | # | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  Extends #1146 adding capability of namespacing the stack (nodes and topics).  * Extending `rewritten_yaml` to also replace keys * Adding a node launcher that puts a condition to applying the remappings. * Add namespacing to launch files * Update namespace of costmap. Planner and controller now pass the correct namespace to use.
ros-planning/navigation2,1169,2019-09-25T23:17:37Z,2019-09-27T18:45:52Z,True,2019-09-27T18:45:52Z,c9d4241af4d865c559a25fc8acaf4092742eebeb,1,1,bcc9fd0d8215ad64ac92242bd11f0e3c0723e7af,,prevent dwb controller from missing changes to the global path 1160 ,this fixes rare cases where my dwb controller isn't picking up changes to the global path.
ros-planning/navigation2,1136,2019-09-18T16:20:25Z,2019-09-30T20:00:34Z,True,2019-09-30T20:00:33Z,7063776a5b01bbc4d503845bf6a96396f08b21e1,1,1,b389096d58bf1e481c1a319ee37220d62d8f0c31,,Update behavior tree with local and global planner recoveries,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 simulation |    ---    ## Description of contribution in a few bullet points  When running the system test 1000 times  I often saw this (12/1000):  ```  12: [test_system_node-11] [INFO] [nav2_tester]: Distance from goal is: 1.6401835582713067  12: [navfn_planner-7] [WARN] [navfn_planner]: Planning algorithm failed to generate a valid path to (0.00  2.00)  12: [dwb_controller-6] [INFO] [local_costmap.local_costmap]: Received request to clear entirely the local_costmap  12: [navfn_planner-7] [INFO] [global_costmap.navfn_planner]: Received request to clear entirely the global_costmap  12: [navfn_planner-7] [INFO] [global_costmap.navfn_planner]: Subscribing to the map topic (/map) with transient local durability  12: [recoveries_node-8] [INFO] [recoveries]: Attempting Spin  12: [recoveries_node-8] [INFO] [recoveries]: Turning -1.57 for spin recovery.  ```    After this the system would get into a state where it would not be able to recover  it would keep retrying and eventually fail.     We had some discussion on this  and the simplest thing to try was to have the global planner clear the global costmap and try again. Likewise for the local_planner.    This PR adds a recovery for the global planner of clearing the costmap  then retrying ONCE. If it fails  then it will still fall back to the previous system recoveries (including spin  clear costmaps).     Likewise  it does the same thing for the local planner  clearing the local costmap first  then retrying before going to the global recoveries.    I tested this change  and running 500 times  I never saw the failure above.     ## Future work that may be required in bullet points  More work can obviously be done to improve the BT  such as potentially just ignoring a failure by the global planner if there is already an active plan in progress.     *Edit - fixed formatting
ros-planning/navigation2,1148,2019-09-20T00:42:20Z,2019-09-30T22:42:23Z,True,2019-09-30T22:42:23Z,0fa1a95e3fa528573445cef7f9779646e82412a7,7,5,30403a7e4c80a960dd431dd30409472b08d1dcae ba19b2fc5d3c81bd5643c1d5f1b0c9369aa10e5e 414cf80ffa9014d7cdfb0b03f54099e1f8957b3c c1e93259a78acfd4b8ee98df33314bb929b0b52c 80f4b75224e6ee013eea3992686b5734b411e543,, multirobot Part3 Add multi robot launching,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | # | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  Extends #1147 by adding a launch file that: * Starts a Gazebo world with no robots * Spawns two robots into Gazebo * Creates to namespaced instances of nav stack
ros-planning/navigation2,1149,2019-09-20T00:46:03Z,2019-09-30T22:46:31Z,True,2019-09-30T22:46:31Z,70fc0738636e17b4cfed3f6c55572f79e4da8da8,4,1,b40e7de865754f44ac5c498d41b2c243054df8ca,, multirobot Part4 Multiple robot control via RVIZ,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | # | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  *Last stacked PR*  Extends #1148. Adds functionality to launch one RVIZ instance per robot. Each instance is set with the correct namespacing for controlling the corresponding robot.  ---  ## Future work that may be required in bullet points  <!-- * I think there might be some optimizations to be made from STL vector * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform -->
ros-planning/navigation2,1131,2019-09-17T22:07:16Z,2019-09-30T23:35:14Z,True,2019-09-30T23:35:14Z,46b329571d3b9f9a60bf9da7158bcdfa64992f23,24,28,ff9352ebe50311430a7064b56a9e4dcf8b8c284e 44a0a6f72739e1c0cf14087d899912dc8b44a7f2 2b9f87e975e9c33d471af9bf310dcc3986e73e9f 11b73c355e11e40be9bff7b49541cf79be2d593b 61eb3829c9d41ee717c3f5dde545aaaeeb6b4c9a 4c3e788191cc7ce0c21089b1e1cc8227077ff868 1ff6bb76dae6dcfe5532e62a085db8c58adfebe8 99f0518945f68601046b2341f2601a0281318184 7c3dca23bc8d24f58ad5919eeed86e0d18158c5b cd22a7b68d60449d1992296a15119dd393e0890a 68ba083185ae33d0ed001035c906ec619ef6692f 8ee2726ea7c1e966e3e953f95e21804d214eef0a a133dfdc6387af274fd6a9ca3e8291788e73c9bc ccefa77f7890a0cf4c474515d3066b65131f11c4 de0aba5ee8c5e5a9f45afed28772db76395904e1 89da35da3a8077633749bbbb1749cc79490c82c1 bab0e81d1ded4ef9920731a7fd9ad7e55b87e345 2f6bb041840379dadc9a6490325dd30df9cfd115 0c611bac446bd76578ba9033f34a0110cd21e77e d8ab5d2a86f01f42fe4ef34b074af50339d21c12 704dbaf39f18b9814757e3c576cbe5d37497186d 8b8985ec6165606f75b5edb496db95ad67c0527a 206105cfbac8ec08dbbf5b5bc2f755e58d310240 700f36554180602430afe8aaa043b54ccad98f75 e40ffaf5d9329f8aceaaf2983393d8397dfd976c 50c3157b5a5a5f16f30afc17af63454b1ee5eab6 fa82367b9dffecfb429646fc6b776ae779578f9f 180814ba686c57540c7e9cbe986885c96c6a0562,,Nav2 recovery server,Implements a plugin-based recovery server and the following plugins  - spin  - backup    that still derive from the base action server of the recovery class. I think that this isn't the best way to go into the future  but baby steps to get to plugins here.     Up for discussion for continued work:  - should each recovery broadcast its own action server independent of the recovery server to use? Optionally we can have 1 recovery action server and it indicates which plugin to use. Optionally we can support both  however add a Plugin definition method for `hasOwnServer()` to know between them.  - If we want them to all expose their own servers  how should we (or should we?) homologate them? I commented out the `executeRecovery()` method in the interface *for now* while we discuss     ~Right now this has 1 problem on my computer  but I'm convinced its a local issue that would work in someone elses environment but I'll validate before merge~ fixed     
ros-planning/navigation2,1175,2019-09-30T17:53:29Z,2019-09-30T23:59:54Z,True,2019-09-30T23:59:54Z,ba9cba71756234540a645d67c34b4d77bdf1c671,3,1,f6aa7217e0fadf24b467728c8c38500570ab01e5,,Re enable test_collision_checker,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1030  |  | Primary OS tested on | Ubuntu |  ---    ## Description of contribution in a few bullet points  - Added sleep after broadcasting tf transform in  `test_collision_checker.cpp` to fix race condition when collision checker tries to get the pose off the tf transform immediately after it's been sent  - re-enable `test_collision_checker_exec` in CMakeLists  - for cleanup  removed nav2_dynamic_params from the `test_suite.bash` since that package has now been completely removed    
ros-planning/navigation2,1116,2019-09-13T20:52:03Z,2019-10-01T17:04:06Z,True,2019-10-01T17:04:06Z,e988e9795b5e4aa13beb00a8c4af9c74cd995d52,9,33,503a8375ad29922b129094524291a53cf2b66dc7 ca8db642d0bb49440a195b8ec6502fb58a7cdb75 4485f6688dc82e1e74474ddd965889056472b200 6db0d3b477c4ef0f247e6d34851f70dfc5ce1950 f3bbcc332f270992cf9feb8a85a90598532098dc 0cc8da77c560531a18f67f7adc7e3d84f0a32692 a46c1db30e8d3a2e605e588e26ef16802f7c8dc6 69e754151e54f7c3372796932816e9ae3f40bc77 4807644852b901a9a32b19e5aff00d618ef468d3 9c5fdf6e52bb76b32069210f3c9a22e2a9aa7170 da0dbcb97ca00170f002ec734d562e1323f8227f 84c2bfc776efd02151260bdc9ab23b2e24e24f67 9b37584306017955b8978034def3d7eadc5265b7 821b63f002eb55d3481782544b58e85d2be56de6 21b16618183bc6685e465ea8370405a07f8c9b3d 7f3b0bc3da40bf71488b8ec3c7f808784075df14 61c7333380bb8db4cf7c160460ab2ffd1b093d7a a60c494ea93d9368e3cb345625d0d2e47b6c31ed 3f9d66b4f078738206a40aa3b05d0b24c0fe57d0 6add6882bcb4f58adb6d04cfb20f6a6a53ce2a18 5695ffcff16b26b3af8c391b3d598ce537810810 7ca5c799c3cef31bc5688605fc169f49f7533705 72b81df16d46028960532ade963003e20c4356b5 8296e69e7df7eb33d719f5be6a1d2ce1604777c8 bc962553bd25f1a5097deaaefa0687459668e65b c294c6d8e87943aaba9b92805e3aad4a1126dff4 644c6ed71c2c0b43bb07df405c193f9883083d65 04c6606211b5f920cb7f5ab4c9f088403cfa227a 8d746b309c4e93a8f88f54631eecd159223261ba 71aba1bdfcaa829937a1251dd3f7f524e004b505 b0dec1f52e6e0d714a531aa662b2e7deb0f2f369 a8d7d052d33ea35dccf3e01cc63804410b407ee1 1a1a55dcae3bcf0a2c0e6d391288e7bd41f69a62,,Added core rl environment and implemented navigator with dqn and ddpg using Keras RL,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (#913 #934 ) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (Gazebo + TB3) |    ---    ## Description of contribution in a few bullet points  - Modified TurtleBot3 RL Environment. Now there is:    -  `Env` base class  which has all the needed functions for an RL environment based on gym    - `GazeboInterface` class  which creates a node and has all the methods that are needed to communicate with gazebo and actuate the robot.    - `Turtlebot3Environment` class  which has all the subs/pubs and basic methods that a turtlebot 3 needs for RL task.    - `NavigationTaskEnv`  this class implements reward function and other functions that are needed for a navigation task.  - Added ddpg and dqn implementation for the navigator task which utilizes the keras-rl library.  - Modified the existing `dqn.py` to fix linter issues.  This file will soon be deleted as we are planning to use Kera-rl and Coach libraries.     ## Future work that may be required in bullet points  - Implement random_crawl similar to `navigator_dqn` and delete `dqn.py`  `parameters.py`  and `random_crawl_train.py`
ros-planning/navigation2,1178,2019-10-01T17:22:20Z,2019-10-01T17:23:48Z,True,2019-10-01T17:23:47Z,ec834a5d55f9a7f00f551c147717ea8a9d5e796d,4,1,668042104ceb75a58d3789416af0a938bdd5bfce,, multirobot Part4 Multiple robot control via RVIZ Fix merge,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | # | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  Incorrectly merged #1149 into a development branch -- I had the multi-robot PRs stacked and forgot to switch this last PR to `master` before merging.  Anyway  I'll just merge this since #1149 was already approved.
ros-planning/navigation2,590,2019-03-01T23:35:42Z,2019-03-11T16:21:38Z,True,2019-03-11T16:21:38Z,8973af86016443be72816226705bd4139715d8e8,9,7,ed39fbb44001e4801cc04f39da9ec445c4bea0eb 6991901c08b31e646fc0547a91bbb4d8a579aef3 646c0483e13818441657d02b87077506015bfdf7 fe2098a7b86593d31287242611831d44e0675964 7c58eec582d4087d6432365f31776481c1451b07 46042e95031eceb0342421f109ef7ef0db514d2e 756728df4d3be9ca06d2e5dcbf26f626781b4026,2 - Medium,Motion primitives unit tests,This PR adds some unit tests for the `MotionPrimitive` base class. Addressing #384.    In the process of making the tests  I found a need for adding a stop method to the task server base class.
ros-planning/navigation2,587,2019-02-27T18:49:36Z,2019-03-18T17:40:34Z,True,2019-03-18T17:40:34Z,eb162b84fe9078a310cb629b43248dc543e16310,4,4,b749eb6956aade2ff541a0495b40d6f1bcd1335d 276db3c60fdb6cf4e2194ee61caca24083e80b72 87b5c14a5a69cce55c54b6a4fc4fd20bc0ef402c e9f2cff0bd25fcf860bad89cbb3a82fec27e3a65,enhancement@2 - Medium,Improvements to Global Planner testing,Fixed some linter fails  cleaned ROS logging  removed code related to parsing yaml as it's not currently suppported.
ros-planning/navigation2,559,2019-02-07T23:15:22Z,2019-02-13T03:22:35Z,True,2019-02-13T03:22:34Z,0aac62e2c68fb6737fb2b08aea47f73784c8314e,9,11,3fb9759d6ccc90b819f65b297af2c245f2f614db 33425d1b37a364ea64dcfd690e01e99ec157a09f fafddee2deadb0fd5d07f79d6a44830e2f6a0aa2 d10207e4ea9db36ad4b46836a84c563f9d19f632 5934384dd8fcc23997464bad535d54bf3ee7385c bd0b01b2649278a141a7b3dba4cbf7c124c78bea 24152c0e2643ddca1dd3b5f75e8fca4d6cf2277f 012452fac2311fbd006834a3eae543fb4f1de590 45d43a9836337f13389c7193aaeaf9fd43dad2be 512c9de42b84ce23354b17c35c6073d7108721b9 bc8f9b612ef9a4a4c874db1efc0eb509e48e3d6f,,Adding a service for clearing a costmap except some region around the robot ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #551  |  | Primary OS tested on | Ubuntu 16.04 |  | Robotic platform tested on | gazebo simulation of turtlebot) |    ---    ## Description of contribution in a few bullet points    Adding similar funcionality to [clear costmap recovery](http://wiki.ros.org/clear_costmap_recovery):    >This package provides a recovery behavior for the navigation stack that attempts to clear space by reverting the costmaps used by the navigation stack to the static map outside of a given area.    In other words  this clears everything on specific layers of a costmap  except some area around the robot.     Instead of making it a [recovery behavior](http://wiki.ros.org/nav_core?distro=melodic#RecoveryBehavior) (as nav1 `clear_costmap_recovery` is)  we move the functionality of clearing a costmap structure directly to `costmap_2d` and make it a service.    This is the first step in defining the full behavior -- see #406     ---    ## Future work that may be required in bullet points    Additional steps in #406
ros-planning/navigation2,546,2019-01-29T22:40:45Z,2019-01-30T22:21:38Z,True,2019-01-30T22:21:38Z,1094c1056357276ea0be79ac70c37829ed3cd2a7,2,2,7304466a6d126c286cd98e9c79b3cf1f8e728cf4 1137874d3dff511f7dd0929ce0e615a2f3d30eb0,1 - High,Enabling dynamic obstacle detection,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #544 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of turtlebot |    ---    ## Description of contribution in a few bullet points    * Some important code was commented out in the obstacle layer by mistake  * Changed params to use obstacle layer by default.
ros-planning/navigation2,493,2018-12-14T23:47:49Z,2018-12-17T18:18:13Z,True,2018-12-17T18:18:13Z,95dcb97f715925a72fac1860c62434e8ce9050fc,1,1,54811cc361e12b110905c00af9d2e8fa1bc9b5bf,1 - High@nav2_motion_primitives,Robot velocity should be set to zero after primitive is cancelled,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (#491 ) |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | ( gazebo simulation of turtlebot) |    ---    ## Description of contribution in a few bullet points    * Fixed a bug with motion primitive base class. After a primitive is cancelled  velocity should be set to zero.  
ros-planning/navigation2,460,2018-12-09T00:57:39Z,2018-12-10T20:00:25Z,True,2018-12-10T20:00:25Z,0b5b0475230eef4f470191039d4e951ef7de67bc,3,5,c4a6a9cd086770912d9d5c04ab19c2f33e5d3cd5 95f99b78ec678e3de587f6285a522315d78240c2 de5b9c37ec614a6520eea898e072ccb3419d192f b716ffb83b35a9c550d0b3371588dae1bd819a58 b5bd33bf81b1d9cf5c9f12dc14448db363acadc7,0 - Critical,Simplifying is_stuck condition detection,Fixed a bug that causes the robot to run two consecutive recovery runs.  Also made a few simplifications to the code.
ros-planning/navigation2,495,2018-12-15T00:27:19Z,2018-12-17T22:33:47Z,True,2018-12-17T22:33:47Z,04fe0ce914efd9d4e2e1632debe25bd35e9a0324,1,1,9eb46c9b10e4c9e03c59e477a912abfd5b12e92a,3 - Low,Adjusted path endpoint markers size and duration,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #494  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of turtlebot) |    ---    ## Description of contribution in a few bullet points    * Reduced marker size and duration
ros-planning/navigation2,596,2019-03-07T17:55:06Z,2019-05-06T22:13:49Z,True,2019-05-06T22:13:49Z,43d9b0afa152698ee77d03f37be80d2f7f11e73e,4,2,c472d743df90ba9644caae03afa89e40caa2a2ab 521815015451bf5fd2c66eb38c5548149258c86d,enhancement@1 - High,Adding a service to clear a costmap around the robot,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #551  |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on |Gazebo simulation of Turtlebot |    ---    ## Description of contribution in a few bullet points    This PR adds a service for clearing a window around the robot  similar to the [clear costmap window service](https://github.com/ros-planning/navigation/blob/a6f3d4b49335b6de5c33044dd2123df0f491453f/move_base/src/move_base.cpp#L330-L338) available in ROS1 move base.    This is the last item pending from #551. 
ros-planning/navigation2,733,2019-05-16T20:32:57Z,2019-05-16T22:16:18Z,True,2019-05-16T22:16:18Z,07444cd0b1315d198e873ba96af9b3a10c4d797d,1,1,ffc1ad72af2276598488ac9cd987c6ce0f146328,1 - High@nav2_lifecycle,Fix typo in motion primitives,
ros-planning/navigation2,1174,2019-09-27T17:22:56Z,2019-09-27T22:37:18Z,True,2019-09-27T22:37:18Z,9517be78fbd967e9136d856f67fd83c07516536b,9,2,6cfa3e264f89393e1c39c1dfc8a5e83b33aba021 1a8639da29a0ad98e3cc8965ca25fa23230b0c30,1 - High,Fix linter errors,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | # | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  CI broken due to linter fails  this PR corrects them.
ros-planning/navigation2,1166,2019-09-25T19:58:17Z,2019-09-25T20:53:21Z,True,2019-09-25T20:53:21Z,2d368cafe6318d3ba239ea9a0d28433e63bd77af,1,1,43069beedf8228e04b727f7adb1b459107e62156,,Fix linter errors,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | (add tickets here #1) | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  Fix CI failing due to a linter error.
ros-planning/navigation2,1165,2019-09-25T19:47:55Z,2019-09-25T21:12:11Z,True,2019-09-25T21:12:11Z,9c061867064c1ff45167d5456d9297d8985905a9,1,1,49a0e84a412d962a387cc99d21c5c58dba71e842,,Set correct time in Planner,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | #1164 | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  Params yaml file had wrong names for the planner nodes. It was also missing a parameter on one bt node.
ros-planning/navigation2,1157,2019-09-23T23:28:32Z,2019-09-24T22:11:42Z,True,2019-09-24T22:11:42Z,1193dbc90690944dd01ccc85736cf3ff021f0f1e,5,2,20a411ee6c027687a6a77ed77e0caaeb1644a30f eb9fbfe4e6994116b7d796a0da22d20c69011a48,,Update design for providing transform to bt nodes,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1) |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Gazebo simulation of TB3 |    ---    ## Description of contribution in a few bullet points    Fix for #1105.    * Making a transform (buffer) available on the behavior tree blackboard for nodes to pull and use.  * Updating `GoalReachedCondition` to use the blackboard provided tf.    More details here: https://github.com/ros-planning/navigation2/issues/1105#issuecomment-534203963  
ros-planning/navigation2,1083,2019-08-29T21:31:41Z,2019-09-09T23:27:53Z,True,2019-09-09T23:27:53Z,6993fcd950a871f15dccacc565e0134fff8859b1,9,7,9a97d59569d4ee79ff13182ff74eda3c18dd21ea 353d2768439e96d2ddeec8b3788d9b929107acaa c3494ca92598b45f5d0dbd87d732c34ddbfa9dcb 4b6ec5e0dcfeab1441843e6f5d098a710e79ffa1 92d7475c9510c9a77ebe3a1a6c2d8ac1c4596eff a5796e8a6bba5199527eadcdd8d9f54ed383c0a4 96c99c4657eb380e69d33bc254e6f2ce8c8b4a3e,,Improvements to global planner tests,## Description of contribution in a few bullet points  As is  the global planner tests still fail occasionally. The failure modes I'm observing are related to the robot pose transform not available to `navfn` at the time the plan request is sent and what appears to be a race condition where the tests are waiting for the planner to become available and planner is waiting for the costmap to become available.    Fixed this by:  * Replacing control of state transitions for `navfn` through `LifecycleManager` with transitions directly on the tests.  * Added periodic publishing of transforms.  * Added a `bringdownLifecycleNodes` method to `nav2_utils`    Ran tests 300 times with no failures on my machine.    ---    ## Future work that may be required in bullet points    * Bringing down the `navfn` node results on a fastrtps error.  
ros-planning/navigation2,1001,2019-08-02T21:28:31Z,2019-08-05T21:23:55Z,True,2019-08-05T21:23:55Z,debc3f33c770ad08768b8d075eab0cd1070d7989,1,1,9b32360a06c7c5b3856d216e77ded0274addbf79,,Disable displaying RobotModel in Rviz by default,Temporal fix for #1000  let's just disable displaying the RobotModel by default.
ros-planning/navigation2,810,2019-06-06T21:50:08Z,2019-06-07T16:59:56Z,True,2019-06-07T16:59:56Z,af32279e79dde74b9d4ea133fe1a0acd9b5e6e47,1,1,611c177bb83902e3efd27b238f15671658cfe961,1 - High@nav2_lifecycle,Adding check for successful action cancellation after halting a bt action node,When a BT action node is halted  the (ROS) action client should cancel the goal and check for successful cancellation.
ros-planning/navigation2,741,2019-05-21T22:13:08Z,2019-05-22T19:10:03Z,False,none,2b05f95e910c0875f9e2c758bab06a33ae81f2e7,250,47,1b13246d5b39366bacc566688f0f50bd45ae50f3 8c6c687fd03e95c8999581b3a4d2e7aaab89a31e 8850bebb087fcc6a5c3cf0d2e326941e8e55b637 ed281b4b1fe8a132746a8a65ad43551aab8453c0 2de0b47433060f2286bb30af4bbc489681f4121a 84ffc35884edf681fbd5f2b95c8d22d2293f5967 a0ab2450253cdb3274781dd5dd061c536349912a 2a84c19774cb5230153cac041990c3b680810b5a 5291b0731059b6b8c4d25d4354f22eb67f9daef9 7b2b7bf2ed51196317d86593146838581e724f1c 20ab604ad303f57a5acbbf424e4bf256da94c4d4 2d1df9141d37b6f58cb0f30a92e6947e61b72008 4f8a3a7613a098d8bcf59d39035eda2b4ace791f c8b8ed21b65961591145d0fb3ad11dafbb5a20d8 989b465739eeb6482aecb22c509b1739f2c25a20 450e053d56c9b846754c14cd6a3fe2a7102629cc f11466a372597ef3bdfddc950a1fdf7c087f0fe4 06a6e4f032218954509ac8651c3a7dccb394dc5a 1308a5925dc8a023c71183d524b7983690e4f85e 176944d4f7a08e9d7c65c44bded13371628f776e abf33b895a85142a0c6efb084bc5391078eb45b6 cd05311b1e9c41ed0600569bae24eabc86ab586b 74e63c9a5caa3086da8be18b85076a9c88dffb2a 4c8ab63acf37592c37dcea6be06df33cd4b32152 f729650a8c0edf7df419fc4ad03730436235ae10 38d3df6b3a2cd3f44571e611f4745a64c0c88aff 90ab26e78180064dc549ea9916e5e90a64ca2115 9401c13ace49213e23822003954bce18a4aff95f 5ea16b78ba5e12b498130ee0d984862d63b569d3 07444cd0b1315d198e873ba96af9b3a10c4d797d cd532cfeb6b5fdfa614b8a2b2ddebeda500229d5 d74d184b68a76f0d57843abfbbd2668798b44936 2056c595eed97c88c7d887d6b5c56f9f56f3e537 b4eead18b734d5971a986231f8b698a329c8bae3 78f92013edcaff224e1405282bd22edd8453e0f6 e53662dd8dd0325f5e1833e4582af7ddaae4d0fc adab7909ea5c97825cecea8082edc1fdbc7f88e0 6c47baabb6ed3e30e67f289ad1f3052c599bca63 3947790bc1649301754180b46cae90d6bea2c132 fc32ca4c7680f1242f790a22541d8e7945070751 b0ed6e9f00ae3472dc7919bb59a3a59e9c599a03 35fdbda1f402db1554808973a12f729fa029af55 8fabdef30796fba662ffcf0808042122b04dd142 a01a46c7c211d2d0a43bdb2d68b5faa1344604b8 cfdebdf5a15042c7c7d0faf75cff9c8ffa990779 98e912ab29c4e18edbfbd387e3e383597f5ca804 cf0ae89ecd1c45f655523e8b5cd3b2b171df99c8,1 - High,Updating Motion Primitive unit test to use new Actions interface,As the title says  updating the unit tests to use ROS2 actions instead of `nav2_tasks`.
ros-planning/navigation2,987,2019-07-29T20:50:50Z,2019-08-09T21:07:12Z,True,2019-08-09T21:07:12Z,6d437df14d40759ce91982f6276b809cf7f48d53,2,1,0f8baff94a8a6aab16c0e8a36a56e752cad571b0,,Provide correct path to default map on bringup_launch ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Description of contribution in a few bullet points    * Providing the correct path to the default map on `nav2_bringup_launch.py`.  
ros-planning/navigation2,1058,2019-08-23T00:05:38Z,2019-09-20T17:11:21Z,False,none,68dab02f12e9a442b15818b836a958c12f5f042a,38,12,0a0c03c698529a7ed515256ea7d723e61008ff05 6b6f1d9f39d663ba06e40646993a892984a3ef1d 036605a9e7201dae784cd9b794f1fbefddb4cd86 fddfa069d39289bc67fe19e71cc6a13cf8e72ba4 b3b965945c17dc5873dc66f124609ca0e1e02c23 fc754f6caf9f5ac4dca5bd491aaa5d9b6bc4c66d a29d93c6468a90cdae29ca220cd00caae6280cba 38fc5194fa2b93e433caddfeeed399e6ce9877d6 a64870012a34eaeecd0b08db2fd9f5042acd3bd9 76f86b77c765d3ac2ad1da89806a9720f4f45bc6 15efe5629adc07e694f436a65793371e1700d454 1e4d48dcb9384dab350b84636acc21a148940634,nav2_multiple_robots,Add support for multi robot nav2 simulation,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #971  |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Turtlebot3 |    ---    ## Description of contribution in a few bullet points    Enabling multiple robots running nav2 in simulation. It's not ready for prime time  the purpose is to provide interested parties a glance into the work done so far.    *The branch should be built against ROS2 master*:  * Apply the change described here ros2/rviz#442    Once the tasks mentioned below are completed  I will create ~3 PRs to merge the work and get more detailed feedback.    For a video  click the image below.    [![image](https://user-images.githubusercontent.com/39749557/63557667-7da1be00-c4fe-11e9-855b-80ca259c206c.png)](https://youtu.be/JNnt53rziXE)    ---    ## Work-in-progress    To do before submitting the work for review:    - [x] Fix launching a single robot using `nav2_simulation_launch.py`.  - [x] Organize nav2_bringup into /launch  /map  /world  /rviz.  - [x] Rebase  build and test agaist ROS master (Eloquent).  - [x] Move `spawn_turtlebot3` to `nav2_bringup`  - [x] Set correct topic namespace on the RVIZ config file.  - [x] Extend `launch_ros.actions.Node` to conditionalize remappings -- remappings are only applied when launching multiple robots.    ---    ## Future work    To do after the initial solution is merged:    - Update docs  add launch instructions  - Move `/map` & `/cmd_vel` to relative namespaces  - Singular view of the system through RVIZ.  - Fix limitations preventing from launching successfully more than 3 robots.  - Create a `RobotsLayer` in `Costmap2D` to avoid bumping into each other.  - Create a multi-robot system test.  -  Enabling a `PushNodeRemapping` action. [upstream ticket](https://github.com/ros2/launch_ros/issues/56) to prevent defining remaps without context.
ros-planning/navigation2,999,2019-08-02T20:45:04Z,2019-08-09T21:11:33Z,True,2019-08-09T21:11:33Z,0259ac40a99a084a23ee51f421966ac84ac0317c,6,1,99fa53993c5289ab6e8a35479e52c9f0166976ca,nav2_multiple_robots,Add global namespace to costmap s local namespace,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #971  |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Gazebo simulation of TB |    ---    ## Description of contribution in a few bullet points    If the nodes hosting costmaps (i.e. world map & dwb) are placed on a namespace  this PR will also put the costmaps on that namespace:    | Namespace | World Model | Global Costmap  | DWB | Local Costmap |  | ---------------- | ----------------- | ---------------------- | ------- | -------------------- |  | /      | /world_model | /global_costmap/global_costmap | /dwb_controller | /local_costmap/local_costmap |  | /robot1 | /robot1/world_model | /robot1/global_costmap/global_costmap | /robot1/dwb_controller | /robot1/local_costmap/local_costmap |    The namespace could be provided on the hosting node constructor (directly or through `rclcpp::NodeOptions`) or the launch file. Notice how the costmaps specify a namespace locally but the hosting node's namespace gets appended.    Without this PR  the behavior is:    | Namespace | World Model | Global Costmap  | DWB | Local Costmap |  | ---------------- | ----------------- | ---------------------- | ------- | -------------------- |  | /      | /world_model | /global_costmap/global_costmap | /dwb_controller | /local_costmap/local_costmap |  | /robot1 | /robot1/world_model | /robot1/global_costmap | /robot1/dwb_controller | /robot1/local_costmap |    Notice how we loose the local namespace specified on the costmaps.    This is one step towards solving #971.  
ros-planning/navigation2,599,2019-03-08T02:00:39Z,2019-03-08T20:42:21Z,False,none,7c2d264c35724f1d50e8da4ab221504a3bf5585d,2,3,b84d0993c5a41f983c0d92c7a6e7c6c04e0732b3 f2523c0254eae3939ba2fd5dba1fbf664b6d71df 47af7fa7ffcab3f4a4d96dd45080ef89c45f8428,enhancement@2 - Medium,Spin primitive motion controller,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #423 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Gazebo simulation of turtlebot |    ---    ## Description of contribution in a few bullet points    Currently the spin primitive rotates the robot (yaw) by a fixed amount of time  I change this to use the motion controller by default and therefore spin by the provided angle.    Also made some correction to the controller algorithm.
ros-planning/navigation2,241,2018-10-25T23:18:47Z,2018-10-31T18:05:41Z,False,none,3d79c8d5e951afe4db8d738e176946d15e4cd40a,2,4,90301ec9469ab274259ec68bb782e44b954e84ec a8417502a15fc2e48d60a44521761fa4e33eb907 fe4cbdf2c318572d879962f96f1c3eb5f7a0420f 669bb9e1c693271e96a220ca980c776cd2dfac3c,,Adding a demo robot,... for testing the nav stack. We can use this one while we wait for Turtlebot to be fully supported in ROS2.    This robot has a differential drive  laser  and imu sensors. Uses the corresponding ros_gazebo_plugins to interface with Gazebo.
ros-planning/navigation2,20,2018-08-09T22:45:15Z,2018-08-24T23:57:09Z,True,2018-08-24T23:57:09Z,3c2e3e6b3280a725a1e6b074fbed8c9f1b6120ce,35,9,7434c7f23322b7ead99cd53c6e805ed715a619e2 8612ec389a95e959d48f0c4fcecf0b3be4c2bab5 391eb2b24efaee0689c1bb85cf84376705fd75a9 ce62bedf51acb1b38499c8b00d360b04aa6584de b325a12d7a010c8658bf6a135d6a3de5ec798b8a 116a55ba7c516d6887b3fa3546cc0a1c8e7a5b87 ce664aa68e1b0df34fa75f4955649f659d3d3afa 5d65bc95fb65754775284f1cc52a16f008d3a9e3 b2b8e9dd556fb0fd6493960a4bed9dbf742ed507,,Planner integration,- Created the DijkstraPlanner based on the core algorithms from Navfn ROS1 nav package.  - Updated the SimpleNavigator to use the new DijkstraPlanner  - Created an initial WorldModel node and Costmap mockup to test the new planner.  - Fixed bug with TaskClient.  - Added a few new messages and services related to Costmap. Made a few updates to the Path messages.  
ros-planning/navigation2,516,2019-01-08T00:09:40Z,2019-07-11T19:04:27Z,False,none,2059ab6fb060c8e21af17deb2377aed1856800cc,38,65,58513fd31c0fb7c1776658a77921a0a4b119a6a1 6447ce22858091249d57f5429cee136819138645 a2cedc7c208a0d1c1beeb6402444c9048f1c26ce 5535940c026c117038637da9d2fe45e7e276c7a6 b4fe6634b8a468a48c58fa4cf72b1a507a1a53e6 d08d07c73094806464692e38b1a37de97cf8e407 92df77a2c76d234529eab87d631802f848a85d87 d9670a17e305096bf9bd3190a6d49542750af276 de51b8c18e38930968ec3140ad33eeb419b41753 3f6901d02f7a1b6075c2d6ee5ae1f8bfd9c20830 5497dbfb2b1e3d8ce838826180a05bce6d8e039c 55da1bb657f651504d1955b3e94e4416106d40eb fd2e90331e9564e187225b58ee19ef6969f53500 5600606ed66e5cf7ce70b1d4ccb96bcb8e4d6c38 4a6c9f6fc14b9398de716e8b5ef3d60503220178 2e91db38d1cbef09af7b8dd36290d368723f0ad7 23bf5dee6045beb4188dc2775430e79e267fa27c 03e1b69da161275780c3ee4b77577037c8f0c915 9d202c5e4f7d258a44ec943db8c48d173470cd11 4542a4a71072426e0f7966c6a661c54a436cc2bf 98a33f4c38978078366837bb74a79bf28835f85c fc01f1bded6136b8534c32f13ea095988358bc61 ad8dbc704c2a83d83d3490b8e081e346703e1f54 ff9f3db29caf74e4eb0ff445aff05be55f5dbaff 25bb1d7295db3bd7406f6e2b0a72950fdcba4035 4840edfdd8dedd7cf05ab99b681a5ebdc82abb89 07ff3767d6a680f5e68f21fdfbbb004ff1a9b711 231d53b438430f07d296a13f7185bc7a9fb645e9 ff28d06091426b877ee0f015f4346786d3d80cd7 a6caceed04bc5d2db75c0b7c79dd9ac7d2213fab af0b39691a53191c7225c905662fed1cb59b68db 38d9b6b02a9b87c95d2ac4027d92a16c2df31c3a 14927e790b5312c7c28ab814a2eca134476fe277 71d4c915216e0f9ef939ed4dc91e77060e8a4d59 f20121d73585b0a8737861667151a983433fa4f1 5fdbd5714b03e4ffbf7b2815bc28fcef6e2d79c0 91ba67135ec4fbfe7904be0c45d357c155ebee9b d947fd9a6a79ac4c687ffb93545735c364bf2db9 8ba2821a84408a02418846c2e35e39f9dbcf9310 88dea35f66a1be4d1a62cdef9598b45d31e617b8 caaac115984b912b487074c3e740da4e1bc410ac cb3bc423e07e29dffb414b5aef2a2f2aaeaba0b2 905b5c37103ff6c458806e6f2f82c870e969ed15 2c1facb5769b9e88dc0cd99f5d08b39ba71b9a0d 92e91bc6660205d22fc937c9ab0f8ec1f4d24c7a f283a556ec770247a4a810ce719341ab2500c0d3 09ce837d6ec9549a38d25f3fe92717da884579ae 1e01eb21a0d011f06d6cca1efd20cccdabb2c0d0 fc522ce691cadd71e38472c6e981bd9775252c06 14accaeeea9c7fd405306ed189ea13a33dfd7c5b 1c5fc8d6a1e07e78f9b3038e319b300014298f7f a0de14ee89826b1c77a5784b5a418537412e076f d106d109b91d116589eca363d67316aaaf5d924f d8621c402aa0bb6177e3001e21789d64ac53dc4d f1cd625d6b23221473053ec629ca15804f257ad9 b1163bf23118120ebd77be658ffe741a35a159d8 ef82ba9006874f831d84e48d1f11c41ce344af76 2e9285b8effbe3ea093c2db3ebea36c0143d0a07 c7e6145c275867774d16b6227812538cb57b7837 67a119795d1d3811e897867ddd6c2c923f611a25 d955c2e2d489fb5abdd66494ef31ca3921abe895 361685dc18f0e14094d41b833342108260746647 bc04ad9def13a4d1f12c42c06884e668c595520c b18f98abbd97974e3c0965fc009758007599e144 b9cfd4d78d66bb8cf87804661ae5d350878e9d97,, WIP World Model refactor and new features,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info |  |  | ------ | ----------- |  | Ticket(s) this addresses   |  #379  |  | Primary OS tested on | Ubuntu 16.04 |  | Robotic platform tested on | Gazeobo simulation of turtlebot |    ---    ## Description of contribution    * Refactored `nav2_world_model`. Defined an interface for specifying different world representations (`WorldRepresentation`) and moved current functionality to a `CostmapRepresentation`.  * Added service for checking if a region is free of obstacles.   * Added a `RegionVisualizer` for displaying regions in RVIZ that get processed by the world model.  * Defined a World Model client class.  * Modified the Global Planner `Navfn` and  the `Backup` motion primitive to use the new world model client interface.  * Added a new method in the `MotionPrimitive` class called `pathIsClear()` that motion primitives can implement for checking if there is enough space for execution.  * Modified `Backup` so it checks if there is enough space for backing up before executing.  * Added a new nav2 service description for specifying a rectangular region.  * Added a `robot_centric_costmap` with only the obstacle layer enabled and centered on the robot.     ---    ## Future work    * Obtain robot footprint on motion primitives #524 * 
ros-planning/navigation2,1176,2019-09-30T22:22:27Z,2019-10-01T20:35:18Z,True,2019-10-01T20:35:18Z,a0a9eb237635c44cc5e2fdf4c274af95ed233609,14,7,4d80d5d33891e524ec913b7a49df0d7613b09b63 e17b29eff0965333b7466878d68fd19c6a8e0bd8 0d21ddd4d345ff932323076145ffdd983796f133 2c84c534b8fe28776aab199729c29ce997af74b7 e9e96a391f7b72d72fdb7d1ff6e0370351c5b1c1 21a3b113c1b350283211ecb2562a86e3004bf54d 691abe365d2561a61142e38da1980e9a14c8b6d8,,Wait recovery,Adding an additional plugin recovery behavior     To be merged after #1131 (and rebased)    I also removed the `bt_navigator.xml` from the bringup package  it was an exact copy of the non-recovery tree in the behavior tree package and was out of place    The wait plugin is very basic  it just waits some particular amount of time and returns success. The recommended use in my mind is the very first thing you do is plan -> control -> fail -> wait 2 seconds -> if OK continue  if not continue with other recoveries. It is often the case that just stopping for a few moments clears up whatever the problem was in a well tuned system    A more useful version of this is to have contextual wait behaviors. Wait until XYZ. An example would be "wait until person is gone" if you're failing to plan because there's a person in the way. Another would be wait until dynamic obstacle is gone to be more generic. Wait until unix time. Wait until external command. Wait until... All can be fairly easily created for a specific robot  but I'm not certain its too useful to try and provide any of these that would work in a generic robot in a generic environment
ros-planning/navigation2,1138,2019-09-18T21:50:12Z,2019-10-01T20:41:12Z,True,2019-10-01T20:41:11Z,a05c9440e76dfd0d76f243740c143a2a1b5d7c1d,61,2,9e935f4a31d70914bb962f1a0121863505ba70b3 60240ff90d01a35017002318407da556c40fba49,,Sphinx Docs Template Only,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on |  |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points    * This PR contains the template we'd use with none of the content migrated over.  * I previously converted the old markdown files to RST. That content can be found on the old [PR branch](https://github.com/crdelsey/navigation2/tree/sphinxdocs/doc)  * The built version of the docs are visible at https://ros-planning.github.io/navigation2/
ros-planning/navigation2,1180,2019-10-01T18:54:40Z,2019-10-01T20:59:24Z,True,2019-10-01T20:59:24Z,c4cc3f5f4adc60fa82b2daa35ad469fa1ffe654d,1,1,4679312694cc153f1b28ed56dfc22de2ba7cc044,,Use relative namespace for clear costmap services,## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | # | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  Clear costmap services should be placed on relative namespaces.
ros-planning/navigation2,1130,2019-09-17T21:46:00Z,2019-10-01T22:09:34Z,True,2019-10-01T22:09:34Z,e16ec48e4f4d730ba564275ad2b57646244535fc,1,2,27c5b7710489fbdd97ae3024f5728e061758edd7 6dcbdf553decb5bda7bbc3351d689c1734cc23a7,,Handle map messages even if there is no initial pose,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (Gazebo + TB3 simulation) |    ---    ## Description of contribution in a few bullet points  - Initial pose is not needed to save map messages. We need to be able to save map data even when the callback is called only once.  - When map messages are being published periodically and `first_map_only_` flag is set to false  we are resetting pf every time the map callback is called.  This can cause divergence. To fix this issue  every-time we get a map update  I only clear the map and laser data without re-initializing pf every time.       ---
ros-planning/navigation2,1158,2019-09-24T06:11:29Z,2019-10-01T00:30:56Z,True,2019-10-01T00:30:56Z,0df1713bcb4bbe43471c9ed45cae84065bfb8875,2,4,555bd7fb629480b6944a388d25f30ae416434521 f4e704864be972f861d8b62cdd82ac71db75fd38 da9cec635fd3c87c4ae2fc7086929503b6c34d87 e96d1851351deed32d4324e16b10c29ec5229b37,,Fix underlay parameter for install_overlay_dependencies,Use `/opt/underlay_ws` as the target underlay for overlay's `install_dependencies` command  otherwise the checksum.txt for the overlay is improperly copied from `/opt/ros_ws` instead of `/opt/underlay_ws`.
ros-planning/navigation2,1142,2019-09-19T22:53:54Z,2019-10-01T05:02:55Z,True,2019-10-01T05:02:54Z,8e88686722032298b1f1f77e684185972fee5aba,2,1,818ae9d83d7920e9855fcf2650beb5290ca89dad,,Use ament index to resolve rosdep install,WIP  waiting on:  * https://github.com/colcon/colcon-ros/pull/79  * https://github.com/osrf/docker_images/pull/323
ros-planning/navigation2,1051,2019-08-21T00:05:16Z,2019-10-02T17:06:46Z,False,none,5d0f0670feea2f86afb3f24f23976c2958c452be,2,2,6f5b059a1944176e2cd4ef71b430e3ba6a1d3685 293322fe2cbeeafa6c6873ad575b77ba8301d06b,,Add getFootprint overload that returns time stamp,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points      * Documents `FootprintSubscriber:getFootprint()`    * is this documentation correct?  * Add overloaded method that returns time    * Without the time stamp  I'm uncertain about how to get the footprint in the base frame. If I un-orient using the latest position  the result would be incorrect if the robot has moved since the footprint was published.    ---    ## Future work that may be required in bullet points    * I haven't actually tried to build this patch. This PR is both a contribution and a question to make sure I understand the footprint subscriber.  
ros-planning/navigation2,1188,2019-10-02T01:12:27Z,2019-10-02T17:11:05Z,True,2019-10-02T17:11:05Z,475931ba4b9b5ca9213c0eb757695f33aa909764,4,2,64b9733b54589cbac4f24fa504528c896e4bf737 7b967ddecb20cec8f8fee7a89f6c305a99684f36,,Instead of copying icons reference them in origin package ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu  |  | Robotic platform tested on | TB3 in Gazebo |    ---    ## Description of contribution in a few bullet points    * Deleted time.svg. It was unused.  * Deleted SetGoal.png and referenced the original in the rviz_default_plugins package.
ros-planning/navigation2,1172,2019-09-26T20:26:34Z,2019-10-02T21:32:27Z,True,2019-10-02T21:32:27Z,cf45254beb98d6e5c47d04d51235331d5633cafe,2,8,382241f54806ae14657f789ee7bd037a897914b5 400216e628022fb919e16571f8ec913e927bbba3 6b1e7d2986cc2c3eca1cc6e60993c86fe19a01bd 3285f6aa695ab1d2fef8d0d97a3ff2b98c609c34 1b92d1ef3cd91ec4ebcfc796825662e12139ee46 f9e66eba2a80140c9c52ed2912de7182004dd39f 9bafebc76850f6d03e0ff397a1ac4e4dc516f4f8 0866a804458687b714f388ce08314350bcddc01c,documentation,Documentation Updates Bringup Nav 2 with Slam,- Updated Navigation 2 Bringup documentation  - Renamed the Navigation 2 with Slam tutorial
ros-planning/navigation2,1183,2019-10-01T21:12:59Z,2019-10-02T22:41:20Z,True,2019-10-02T22:41:20Z,58476591097e74006fda973ca6d91228477c62aa,1,1,762b867ac50b0da8c144d8eeb5c573f22788d446,,Fix bug in BT Navigator transform,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | # |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Gazebo simulation of TB3 |    ---    ## Description of contribution in a few bullet points    Since we're passing a spinning node to the transform we should tell the tf buffer we're using a dedicated thread.    We currently get some warnings on the terminal:    ```bash  [bt_navigator-10] Do not call canTransform or lookupTransform with a timeout unless you are using another thread for populating data. Without a dedicated thread it will always timeout.  If you have a seperate thread servicing tf messages  call setUsingDedicatedThread(true) on your Buffer instance.  ```
ros-planning/navigation2,1184,2019-10-01T21:34:17Z,2019-10-02T22:44:40Z,False,none,none,1,2,e2e8e1acdc77d485c4eace87ca16fc802635b695 334ca6adc7dbec0dd31336117f4f51d359310641,1 - High,Revert to previous default bt xml,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | # | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  The current bt xml fails to navigate after a second attempt #1179. For now let's go back to the previous bt (without local recoveries).
ros-planning/navigation2,1189,2019-10-02T16:47:47Z,2019-10-03T18:27:51Z,True,2019-10-03T18:27:51Z,7544f1ad3528d51b1edc63bebed8da5980d8cf16,1,2,7676327e082f2a5b2f60dc8041d804a60672d110 76f2b9c523a8afebfc8e63e331127b48f59311ed,,Halt method in the recovery node is not being called after successfull navigation,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (#1179) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (Gazebo + TB3) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---  As a temporary quick fix I am calling the Halt method when recovery node returns success. We need to dive deeper to find out why the parent node is not calling the halt method.  
ros-planning/navigation2,1193,2019-10-02T19:07:32Z,2019-10-03T21:36:38Z,True,2019-10-03T21:36:38Z,9735adffd236a0afedd4a0ab61a8a7b0f0edfb8c,1,1,6dfad6c9d0a6d8414266cdc82b95d2cb529a05e7,,Change system test back to using move_base_simple goal,## Description of contribution in a few bullet points  The bt_navigator and bt_navigator_dykstra system tests won't pass on dashing  since they are using the wrong topic "/goal_pose". This changes it back to using "/move_base_simple/goal"    NOTE: THIS IS A PR DIRECTLY TO THE DASHING BRANCH  
ros-planning/navigation2,1198,2019-10-03T21:45:51Z,2019-10-04T17:09:25Z,True,2019-10-04T17:09:24Z,7e41f13e5ed7d40c1ab99f359714d24c5deccd4b,16,18,7d5b0d44fc7227b5df043318b0ec8344ba845ebe f5169aa137a5b5037506c2bb8003c20cc397d74a c89ff44f0575f7cbf5a2abb38890735ccfb6f42a 79e9f96bdece2d05ca601fdcfd8ec0c03769905d a65ae1f29a04d6042ee86797a6f88b4d307feb83 6abcf09cd4d848fbf0ada4ace06601470235a878 021de46adf4b47576b8598e91fd67e49871d9e29 2e69c8778b943b0bf44a809e6c48de684928fab3 c1525db889d51774a329f51e8dc98c5bef3f6f4a 5237e20fb0c40b3281ff0aa7bacdc9ccd487267c 954a03c210aaf876f32896374b6417d33bb83e80 7d828179551dc2d8b4b18e707d670a426d355340 c6ac213aead6d631972ee1d52720019546a2be13 43c1182b4ccb3156418d94158c63afd2221dda86 2ad1439748709210cb89ed1fa2e9dcfa7ad67438 7f09b640b59a230015e1b7cf5dcccce176771cc6 c3e6f21e62a49991169007518c2440e2d93e318a 47b0f1f90b58b41365f5307bde29446d396124d5,,Dashing 0 2 5 Candidate,Do not merge yet. I'm still testing.
ros-planning/navigation2,1192,2019-10-02T18:40:12Z,2019-10-04T22:29:31Z,True,2019-10-04T22:29:31Z,d01308eec166c8254e881abb8e481aed0419a42b,1,1,fb79136c6c80b42d379709f8f1f15bc0b98126fb,,Activate recovery server velocity publisher,The spin recovery cannot send velocity commands because the publisher is never activated. This PR activates/deactivates the publisher for the recovery plugins.
ros-planning/navigation2,1191,2019-10-02T18:13:26Z,2019-10-04T22:30:15Z,True,2019-10-04T22:30:15Z,6b3088ddcb4d3f77f16b8388516d52891ca92396,2,1,6f0c39a83047babca4cbc16719cb7278ace8efa8,,Declare parameters reset startup fix for recovery server,A reset and subsequent startup of the recovery server causes an error due to the re-declaration of parameters in the `on_configure` call. This PR moves parameter declarations in the `RecoveryServer` to the constructor and uses the `declare_if_not_declared` function in recovery plugins.    
ros-planning/navigation2,1204,2019-10-04T23:19:56Z,2019-10-07T17:27:10Z,True,2019-10-07T17:27:10Z,8f8b564afd3f126edaa9c7b5982ba5a5c4fbdd42,1,1,bea7b7f05b418c2c35c3d68dd9bce0dd5655fd0a,,Set init_pose yaw component in AMCL,The `init_pose` double array is intended to be for (x y  yaw)  not (x y z) as erroneously thought before  causing the yaw to be initialized incorrectly every time the stack was reset. This PR fixes this by setting the last known orientation. 
ros-planning/navigation2,1203,2019-10-04T23:14:56Z,2019-10-07T17:37:59Z,True,2019-10-07T17:37:59Z,4388b4620941a00674cd46a068fd92d753b0b5bd,1,1,46fccebc04a434fc746b02a3689ad50f203b1d0c,,Clear recovery plugins on cleanup,There is a bug when cleaning up the recovery plugins in the `recoveries_server` where the plugins are cleaned up but the plugin instances are never cleared from the vector. This causes an issue when the plugins are loaded again in the `on_configure` call  since duplicate plugins are added to the vector without removing the old ones.    This PR clears the recoveries vector `on_cleanup`. For consistency with the stack  I'm also resetting the tf buffer and tf listener. 
ros-planning/navigation2,1119,2019-09-13T22:40:14Z,2019-10-03T20:22:25Z,True,2019-10-03T20:22:25Z,126464caf33a465b9944de5d4a0ea287c6935cfa,5,11,96a08878873d5a0f00e0fc7ecb063e37aff547eb 62902ee5d09288c9fe88fa0648b8cf437769ea8a 946624760cb7777524e99d0c07c05055957e6350 2eb268a1d6627b5b57b3e3aa3ffce849b81e0005 7e3db2ceb6509df28548bcbee97b053868988678 0fb0a1fca2f980b1aede0f0089945652303a9078 22bacd0ea22330bf319ccf4ebbd70dfa0974f7f9 0a16405b82dbda6ef92de7769e3fe21c06e7422c 15248e577bfdae61ae5f24280c3ae1805f404833 1adfe0df8b79e137a0cd5fd36d96428d45a16ede ab468f613b38c9aafc3a571ba339c6eb76ce4186,,Build navigation2 in the same workspace as ROS2,Context: https://github.com/ros-planning/navigation2/issues/496#issuecomment-530479067    Building this Dockerfile took a total time of `12m36.300s` on a workstation with   * Processor: `Intel® Core™ i7-6950X CPU @ 3.00GHz × 20 `  * Memory: `62.8 GiB`    This *might* be buildable on Travis given current timeouts.
ros-planning/navigation2,1202,2019-10-04T22:28:11Z,2019-10-07T19:27:36Z,True,2019-10-07T19:27:36Z,74dd39fd6932f11abae1a02cbcd68579638b0f47,1,1,47ecb087ad1f1cc75e1763a4eea7da21303bf813,,Allow parameters in WaitAction,The current WaitAction does not work properly because it does not accept parameter arguments from the behavior tree xml  making the duration 0 seconds. There was also a bug upon reset and startup of the recovery plugins such that the call to sleep for the duration hangs which this PR apparently fixes too.     For reference  bt nodes which accept parameters must pass in the `BT::NodeParameters` in the constructor and implement the static method `requiredNodeParameters()`
ros-planning/navigation2,1209,2019-10-07T22:49:47Z,2019-10-07T22:50:31Z,True,2019-10-07T22:50:31Z,0023411ced7dd23fab32421585b61f9d4705d644,5,4,817dacbbfe5ec0b226d2bbb7318bed043e0c3089 63edde07ba8519dfaa8d7d422b2fd45f0e2d3872 19415227a42b3ebf245a287c757693df48ac5426 2ba0e3e97bb2cffcda2f5a0de1652be7c30bcb52,,Integrate coach,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | () |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (TB3 in Gazebo) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---  Making the environment to work with the coach library. 
ros-planning/navigation2,1199,2019-10-03T23:53:18Z,2019-10-08T19:55:13Z,True,2019-10-08T19:55:12Z,bd2dbc8eadbd864e2bb42b8c2ab09885ff1986bd,3,5,4f8066d6f8c5271aae8c5b61a8627eac6b145cb9 bec9008cca44f1211a509a880cb5f2f1d7e64aa7 c65e143622a6cc8f731c0099cfe68d9d9e8c486b 2e3beb2eb717e4e52d3dcde81853d0bcb8d287e1 11b7efbb159544f972d542e2a310937338a8aae2,,Dont republish map,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #867   #331  |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Turtlebot3 simulation |    ---    ## Description of contribution in a few bullet points  * removes timer thread from map_server that republishes map every 2s  * updates the Rviz config file to add new QOS settings  * sets Rviz QOS settings for map topics (map  local & global costmaps) to use transient_local with depth of 1  * sets Rviz QOS settings for sensor topics (scan  pointcloud) to use default sensor settings (Best Effort reliability)    ---    ## Future work that may be required in bullet points  I grepped through the code to look for any other non-default QOS settings  couldn't find any others  but if anyone notices that something no longer shows up in Rviz  this PR could be the culprit    My testing looked good  I think it shouldn't be an issue
ros-planning/navigation2,1212,2019-10-09T00:46:34Z,2019-10-09T17:28:18Z,True,2019-10-09T17:28:18Z,8905c3fc988fe76614e31ad2080aff336006c8c3,1,1,19392bdce82dae01d3314a07f87bfeeeef38ad9e,,Move scan parameters under obstacle layer namespace,The scan parameters were not being set from the yaml because the `declareParameter` was expecting the parameters to be under the 'obstacle_layer' namespace  e.g. `obstacle_layer.scan.topic'.  Therefore  the obstacle layer was never receiving scan callbacks  causing the robot to ram into obstacles since the costmap was not updated.    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1208 |  ---    ## Description of contribution in a few bullet points  - moves parameters for the scan observations to the obstacle layer namespace in the `nav2_params.yaml`  
ros-planning/navigation2,1213,2019-10-09T17:52:28Z,2019-10-09T22:00:31Z,True,2019-10-09T22:00:31Z,277582ee17d94a1b09d55981259e859710199510,5,8,36ba821af69ecca096dca6660a410a77da4bedb3 bd0dfd55608d5c0a5aff8658039d76b02b6520c1 ac47b8d3bdd5034b4a86a09314465593eed79469 207ca0f1738e4978b2f1398d9f33e7a7ab95b80b 73f3e0f4bfc464ea99548d3666e7806d196cccdb 08a045197e23e72c7104e1e26dbd0c711ccd3457 1058c03f0d9544c6fa3d082908ca167b610a6989 f643120760f20c6701eb70a342396112877c8089,,Backport Nav with SLAM to Dashing,This is the same change as PR #1057  which is in master.    This is a simple enough change to back port and it was requested for integrating into the dev kit.
ros-planning/navigation2,1211,2019-10-08T22:33:18Z,2019-10-09T22:06:51Z,True,2019-10-09T22:06:51Z,6bfa8c48ea0291fff540eb7aead6e5e511130bd7,1,2,b7888139ec1579a2f14a8d4b4c22895238fb1339 7423e8c4726d347b8a6e3497beac3f2df9ae89ad,,Enforce costmap to retain its node name,This PR is a fix for the global costmap node not receiving parameters from the `nav2_params.yaml`. The issue is that the launch file [mechanism to remap the node name](https://github.com/ros-planning/navigation2/blob/master/nav2_bringup/bringup/launch/nav2_navigation_launch.py#L115)  in the planner server node in the `nav2_navigation_launch.py` has a bug that also overwrites the name of the `Costmap2DROS` node that is created in its constructor. The name of the costmap node becomes 'global_costmap/planner_server'  which doesn't align with the node specified in the yaml as 'global_costmap/global_costmap'  thus the yaml parameters are not being set.     This PR resolves this by adding the `__node` remapping to the node options in the costmap in order to enforce that the costmap node keeps its node name being passed via its constructor. This also fixes the full global costmap showing up in rviz since the `always_send_full_costmap` parameter is now being set to true from the yaml.    Some thoughts to consider:  - Adding the `__node` remapping argument into the `rclcpp::NodeOptions().arguments` seems to have a bug that creates a duplicate costmap when you call `ros2 node list`. This didn't seem to cause any error or problems in running the stack  but seems an issue that needs further investigation  - I originally wanted to rename the costmaps to be `/planner_server/global_costmap' and '/controller_server/local_costmap' in order to namespace them under their host node  however I found that the parameters set in the yaml weren't being set on the node. Perhaps there is a bug that doesn't allow a node name to _also_ be used as a namespace in the yaml  i.e.  ```  planner_server:    global_costmap:      ros_parameters:        ...  ```  - One alternative solution would be to remove the node name remapping from the launch file. I'm not sure if this would be a preferred solution since we wouldn't be able to remap the planner_server name (it's default in the code is `nav2_planner` which could be changed). Please comment if you think this is preferred.  - Another alternative would be to leave the naming as is and change the params file to be:  ```  global_costmap:    planner_server:      ros_parameters:        ...  ```  Not sure if this is preferred given the awkward naming (and the bug that made this name)  though
ros-planning/navigation2,1095,2019-09-04T15:22:47Z,2019-10-10T06:32:15Z,True,2019-10-10T06:32:14Z,9ddac997360457329443934c7fd18303700f3730,1,4,59a00d8a10c5e71a5f9260c458139e52d954472d 6fa2d9ab62b605925fbf5dc4322ccf54fb481b06 4a3ce930fb2621cc478c65cafff3c3b6f53cab04 0482296c44b03aca29a3d201d02f047a60f05f89,2 - Medium@documentation,Update BUILD md,Add numbered steps to build navigation2    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |#1060 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points  This change is to fix the build instructions for navigation2.  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    ## Future work that may be required in bullet points  Old contents have not been removed yet. Next edit based on review comments.  <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1210,2019-10-08T22:04:07Z,2019-10-10T20:01:56Z,True,2019-10-10T20:01:56Z,8c0c0c2eb23d4fc88ec7d697845321b803c4e2f9,7,8,08fbd86de85f0da9f031fc7db71361d833004932 d891b619a2693fdb6c03fc004f8368852097d81b 7942d3200830f1f0a62214839e741b2cc05c1dac 08e32556243943d501c10d654c41351b989c681a c75d78d250ab78c9c9fcb5ea20472ec10db2c87d 633b52eea212082c25088a478bbce236b8cd9833 49c2cb7063ee6a0074cb4a2703e68bd756536ec2 0d5a9d5c9ca3684cecd0eb54c6adaad595e7984b,,Nav2 experimental rl,### Description of contribution in a few bullet points    * Disabling amcl  and publishing static map->odom transform (creates new launch file)  * Calculating global path using action call to ComputePathToPose  and creating a test file for the same    #### Future work needed:  * Remove files if unnecessary  e.g.  the launch file once we know all the things that need to go in one launch file. Currently there also exists the previous launch file which uses AMCL. I didn't delete this just in case we want to run amcl.  ---  
ros-planning/navigation2,1219,2019-10-10T23:05:19Z,2019-10-11T16:08:41Z,True,2019-10-11T16:08:41Z,4a92d7b4a4095b57bb54bf649addc6a44f6470ef,1,1,15a5567fc78270041fefb49f1389d7ef7b298e73,,Adding recoveries lifecycle server to defaults,One thing needed to be changed for parameter-less successful bringup
ros-planning/navigation2,1222,2019-10-11T17:32:31Z,2019-10-11T17:47:18Z,False,none,5022734e8346ceb6a4b6f75fd2511e2024a28ad1,1,2,1530e10b95e1000fc417244244759a1fe43adcdc bc9cc6181cf0c798190838bb12b0ca984e655ebc,,Update ros2_dependencies repos,Remove unused dependencies image_common and vision_opencv    ~~@crdelsey I think these are no longer necessary.~~  Maybe not.
ros-planning/navigation2,1231,2019-10-11T22:25:54Z,2019-10-11T23:47:31Z,True,2019-10-11T23:47:31Z,e09cabde2bbf1a8d3a87352e11a201700ebba089,6,2,5f5377913f7586176453845f2461c87c91fa4cae 8ab7fd74e2a92e5cdc3426c795153a49db1e21d9,,Install Behavior Trees in correct location,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #1090 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TB 3 in Gazebo |    ---    ## Description of contribution in a few bullet points    * Install behavior trees in `/opt/ros/dashing/share/nav2_bt_navigator/behavior_trees` instead of `/opt/ros/dashing/behavior_trees`
ros-planning/navigation2,1232,2019-10-11T23:47:00Z,2019-10-14T18:41:33Z,True,2019-10-14T18:41:33Z,aad1f2433b6ac41c68a9c04afee6e89469f87eb4,33,1,9db54b7ed34168024d1bb5505c7a104c9fa62ef7,,Remove unused test dependencies and files,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Removes unused test files  * Removes unused <test_depend>s
ros-planning/navigation2,1235,2019-10-12T01:26:41Z,2019-10-14T18:42:23Z,True,2019-10-14T18:42:23Z,7652518af52f257d097269309986943771d98683,7,2,08bdc9a625c8449460a1fef57e0020ec0e4788e4 b363519c23a3c2d0ae9a819ed18dd94609af4ed9,,Enable Linters in nav2_bringup package,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA|    ---    ## Description of contribution in a few bullet points    * Enable linters in nav2_bringup package  * Fix linter failures
ros-planning/navigation2,1234,2019-10-12T00:35:58Z,2019-10-14T18:11:32Z,True,2019-10-14T18:11:32Z,63afa48df632536f51d76ed1a3f8b0cc53b391e3,3,1,9a62d5a617bfb65ca47e80459734d0c962ca2711,,convert candidate shared ptrs to unique ptrs,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1114  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | CI* |    * since just ptr type changes  ---    ## Description of contribution in a few bullet points    * changed any shared ptr that could be unique to unique.   * Now only shared ptrs are needed as such or TF  * frankly  we were in better shape than I suspected     ---      
ros-planning/navigation2,1233,2019-10-12T00:20:15Z,2019-10-14T20:43:33Z,True,2019-10-14T20:43:33Z,a095038da9f4e3729679e5d20b39e1d95582fb16,12,4,3525e0ce4d94afe71e73e73ddf4436aac1a28171 07cb037e7cd5a3f7d1112df204853097fd6a875b 49e129dd3a2b4fef7d164fcf6775eb962b76d2df 81d951079f0198d725141b18015531291c8dbf9a,,Remove hard coded numbers from recovery actions,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #775 https://github.com/ros-planning/navigation2/issues/727 |  | Primary OS tested on | CI tests |  | Robotic platform tested on | CI  |    * tested on CI since BT would simply crash if any of the behavior tree stuff was broken. Will test Monday for recovery server side but don't expect issues since primarily is just declaring params or taking new params from action message    ---    ## Description of contribution in a few bullet points    * got rid of all magic numbers in stack (except timeouts)    ---    ## Future work that may be required in bullet points    * parameterize timeout  
ros-planning/navigation2,1196,2019-10-02T23:24:42Z,2019-10-15T20:38:56Z,False,none,3ee4b5f26030de1e383408836174249d87e64a3b,8,3,f3a31c0ab349ff90412a9e039cc1a7830d5c7ccb 4dcebf888fa33df2f793cfe961dd55c4539bda12 ae1354cde252e72a5d8fd3386f2b9efccb78d831,nav2_multiple_robots,Multi robot system test,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | # |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Gazebo simulation of TB3 |    ---    ## Description of contribution    Adding tests to evaluate the multi-robot features we recently incorporated.    Basically uses `nav2_bringup::nav2_multi_tb3_simulation_launch.py` to spawn two robots and bringup nav stacks for each.    The tester will provide the initial pose and goal pose for each and check for completion.    Currently  I'm seeing a success rate of ~70% with Fast-RTPS. -- I still need to go over the log files to check the failure modes.    ---    ## Future work    * We currently have two system-level tests (single robot and multi-robot) and there is some code duplication between these. We need to think about how to refactor or create a single system-level test.
ros-planning/navigation2,1220,2019-10-11T00:07:11Z,2019-10-15T22:35:53Z,True,2019-10-15T22:35:53Z,ada1b648eb2e6e029a23eb5e4af956bfa7387cca,11,1,dd62a849b880b58d1d364ac4c421d7c0e07b1159,,Add node thread object to nav2_util and replace nested node threads,This PR consolidates the thread and executor pattern that is being used to spin nested nodes in an executor inside a thread. A `NodeThread` object can now be initialized to create the thread and the lambda which spins a passed in node on an executor. Also  the object will take care of canceling the spin and joining the thread so the user doesn't have to manage the thread when the user class is destroyed.
ros-planning/navigation2,1241,2019-10-15T03:23:19Z,2019-10-15T18:27:30Z,True,2019-10-15T18:27:30Z,2edfb83152f71e771b683c6f834ed1c69b62fbe4,2,2,b86abe27b91b3718d524b98ce477a0288a688cd4 2f91bffd1fab140242fb2111e18e6ca85abccb18,1 - High,Dashing Slam fix,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info  The upstream ros2/cartographer changed to use transient_local  so now we can use transient local in the nav2_navigation_launch.py     Also  during back-port of the previous change  another change was needed to set the "map_received" flag to true in the static layer after it is received. This change was already existing in the master branch  but not backported.    IF it's not too late  we should release these changes with the newest release (0.2.5 -> 0.2.6)  
ros-planning/navigation2,1246,2019-10-15T21:39:04Z,2019-10-16T23:57:32Z,True,2019-10-16T23:57:32Z,ac4d76d4ad3b9c7b0d5415a00ab5bdf68fd1e353,5,3,fcce35073a078ac6aa70101316a6f50a0b6c938c 922d7019fe4b2337649469b013e80bd756d6a643 b4298903cc159fed3195bd60bb16102b0861375a,,remove helper interface for lifecycle,#828 simple refactor  trying to get through the backlog of tiny tickets
ros-planning/navigation2,1190,2019-10-02T17:06:29Z,2019-10-16T23:58:14Z,True,2019-10-16T23:58:14Z,ebb9d0501091a0156ed279a2eecccf3a5da0664e,6,12,6f5b059a1944176e2cd4ef71b430e3ba6a1d3685 293322fe2cbeeafa6c6873ad575b77ba8301d06b 1d22a3738d09a8be20a18ec62654c20a994d4238 a42ee06111ffc71de80b9884f4acfcac8bc97537 dff7dcd67cfe6440de574774094b3c5f4c975c2e a20bca096b042218b810470d127bf03edf7feca2 317094a71e4a750298362b0b1be1d69ba1bc6d58 c31e15efa97b072b32e1db6dfafbee79e0c6b689 5a6fc036644a01c971e29898735a23c9874c73ef f82d241dfff673df455c9a6b04822400560e111b 86b8086776ae5dab4277688877b41657aecfec5c 006244d69d32e1bf6d2d6282854975796c70d567,,Get footprint time,Successor to #1051     Adding use of time for all callers of the footprint subscriber + linter issues
ros-planning/navigation2,1250,2019-10-16T23:59:11Z,2019-10-17T00:00:06Z,False,none,3e6a312b46dbe0d614d82eddbe2ea997b2caeeef,6,1,f2f4d014cc9b1edab9f43716e6057633dc9acde8,,Revert Get footprint time ,Reverts ros-planning/navigation2#1190
ros-planning/navigation2,1238,2019-10-14T17:24:28Z,2019-10-14T17:54:46Z,True,2019-10-14T17:54:46Z,a989118992f38f46ef3c98e3224d0373755dc77c,1,1,8ce073ed5c8f9148cdc8dfdc89fc8a15847e0432,,Update README md,- Update navigation_to_pose_action.hpp link as it was pointing to dead file.    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | None |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1237,2019-10-14T17:00:58Z,2019-10-14T17:25:58Z,True,2019-10-14T17:25:58Z,e317d99be4bdc0945a1247da40b161a8937b22e8,1,1,bd938413d61ed2c757f0d8c5d2093c60fa663786,,Update README md,- Removed "Current Plan" section as it has already been dealt with.    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |#1236 |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1171,2019-09-26T20:12:27Z,2019-09-26T20:36:23Z,True,2019-09-26T20:36:22Z,90e7a99049c45c109f727d7c2746cd8a8b90ccd3,1,1,d22b681e85e918d238b5ff570068d613eb55a549,,Fixed documentation typo ,Changed "GlobalPlanner" to "Recovery" in file recovery.hpp    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1170 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | None |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  * Fixed a documentation typo in nav2_core/include/nav2_core/recovery.hpp    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1230,2019-10-11T21:37:24Z,2019-10-21T18:55:23Z,True,2019-10-21T18:55:23Z,60b4ece3e5dec8d5cf1439a3c12ca1eed6bbaa0e,14,19,1fae8657a85d3257c154df5674ea989b1a5fd1ed bd48705318dfdcb486cd9117e3fc48a686c7cd23 de8b47881be8f95a4b160a50128457dd9315dc83 3b5ba947f9697bd5e20932008569cfccc5a016a2 4e23da99d6b027250651b44725c22d2b90acc8b7 02955bd51fab7ebdca4dafdeb33639144c4fa234 968b539d7d01a9e640912a207ed513e167b887f4 ca4f1e18e9be9c4166b8571c41e4c94c1af1a8ae 2eff2671ce2b440d1175e76c17df0e68bd32486d 7dd78b007e2c5d0bd0e9538258e8b75ce4805a9c c3cf5ae1811201998a4a5f26cd60209fefe26f5a fc0fb096aa9751644f326b3ba7e29545956ae56f 846baaa59452bff39d6a83b22ff0fa93da8cfb0a fd560c0989b8539a3f0e5a9abc636ee2d02268ba fe7094a75896167c4d14d28eb41351fd660972c0 bb760e4f99f9608ef6fdb547546516a46ef13553 cd079079ee39cacfae4db5ba312d7ebfc812b2f2 b2b874b15681eb1a5085229be00cd05b4cf52d29 8a5b38f5ac09ad67dfe91c6d737e85be8c34773f,documentation,New Navigation2 with Turtlebot 3 tutorial,This is an updated and more maintainable version of the Navigation2 with Turtlebot 3 tutorial that I created a while ago. It has been on my to-do list. #896    The tutorial includes:        - Navigation2 with TB3 in Gazebo     - Navigation2 with a real TB3    Once this tutorial is approved and merged I will upload the pictures to the repo and change the links.
ros-planning/navigation2,1264,2019-10-21T19:23:36Z,2019-10-21T19:25:40Z,False,none,none,14,20,1fae8657a85d3257c154df5674ea989b1a5fd1ed bd48705318dfdcb486cd9117e3fc48a686c7cd23 de8b47881be8f95a4b160a50128457dd9315dc83 3b5ba947f9697bd5e20932008569cfccc5a016a2 4e23da99d6b027250651b44725c22d2b90acc8b7 02955bd51fab7ebdca4dafdeb33639144c4fa234 968b539d7d01a9e640912a207ed513e167b887f4 ca4f1e18e9be9c4166b8571c41e4c94c1af1a8ae 2eff2671ce2b440d1175e76c17df0e68bd32486d 7dd78b007e2c5d0bd0e9538258e8b75ce4805a9c c3cf5ae1811201998a4a5f26cd60209fefe26f5a fc0fb096aa9751644f326b3ba7e29545956ae56f 846baaa59452bff39d6a83b22ff0fa93da8cfb0a fd560c0989b8539a3f0e5a9abc636ee2d02268ba fe7094a75896167c4d14d28eb41351fd660972c0 bb760e4f99f9608ef6fdb547546516a46ef13553 cd079079ee39cacfae4db5ba312d7ebfc812b2f2 b2b874b15681eb1a5085229be00cd05b4cf52d29 8a5b38f5ac09ad67dfe91c6d737e85be8c34773f 17f32c5ea798c9232abd5de4ded005f6199b7ea9,do not merge,Updated tutorial image links,Follow up PR for TB3 tutorials. This PR updates the image links in the tutorials.
ros-planning/navigation2,1261,2019-10-20T20:24:48Z,2019-10-21T20:48:31Z,True,2019-10-21T20:48:31Z,3a9e9f2f865966581739b9766e9bff40ed0fbb5b,1,1,640e6a2eb3dd8718686771a1331cccadf87235d7,,Removed map_loader hpp,- Map loading function is directly taken cared in occ_grid_loader.hpp file    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | None |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  * I found this file redundant as it is not been used by any other source file.   * occ_grid_loader.hpp file is directly loading the map from the specifed <MAP>.yaml file.     ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1265,2019-10-21T19:44:46Z,2019-10-21T22:24:50Z,True,2019-10-21T22:24:50Z,f72007e2d5dd8157810da529d57108f8c1427360,3,3,84e016d51eb83d74663c07ce9bfbc6b19b6a0f80 9d84b9a90f5343cc9b85436f380c4c041dfd5f14 d318f88341aefa3620fe13b1483087d7e7ec434a,documentation,Updated tutorial image links,Follow up PR for TB3 tutorials. This PR updates the image links in the tutorials.
ros-planning/navigation2,1259,2019-10-18T19:12:30Z,2019-10-21T23:04:01Z,True,2019-10-21T23:04:01Z,caea1d2cb748cebaf2b3444675226e8db14419c8,4,3,0c098c0606a47781e6ddbc36ed6e3bed22f24335 e43f32b5a58a5195017c3327d261217e99158a0b 55571cf648f021c67200bbf7d8396f5ff63ced16,,Add arbitrary obstacle in CI map that isn t in static map,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1253 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Gazebo simulation of TB3 |    ---    ## Description of contribution in a few bullet points    Addressing #1253. Here's a [video](https://youtu.be/FcJejE2xqd0) showing the robot successfully navigating on an alternate path.    ---    ## Future work that may be required in bullet points    Even when the scenario is straight-forward  the test still fails occasionally. We need to improve the default recovery behavior.
ros-planning/navigation2,1243,2019-10-15T20:38:15Z,2019-10-21T23:44:08Z,True,2019-10-21T23:44:08Z,5d1319eebbb86a74823eebfcd6495263acd1b6cd,26,7,a64ef05f68e4319d3ac6b9ce98b20ddddcf1f58e 2481fc9025d05a2912e14009a39ae9b119c55e2f 1d2fee6a42cd4f9c03e6bf7d049df7cd99e79315 ba97693bce815390e50809df2d33d464e742f06b 20753ec3f7b3a0a2cac11fde92acfab3732bd126 9cb8957aaaa92e247abccb885579881d233ee475 73b10a7eb020d267ae22545c51e07c1b051f4ef8,,Refactor System Tests,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | # | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  Adding multi-robot system tests and addressing #1135 and #813.  * Created a `NavTester` node which can be used for testing with single or multiple robots. * Added launch files to test multiple robots. * Added TB3 model files needed for running tests on ROS build farm. * Updated `spawn_robot` to accept any robot sdf description.
ros-planning/navigation2,1255,2019-10-17T23:38:57Z,2019-10-21T21:43:06Z,True,2019-10-21T21:43:06Z,482b5a50b4005e896d8f80a3608f5d5535341376,1,2,9f0bdd4e15ace5f28de2de747ee7677139ca428a b41d5d40e42211f24a2162f28faf54c5ab958dfc,,if no map name given to map saver add unix timestamp to ensure uniqueness,#1019     Title has it all
ros-planning/navigation2,1260,2019-10-18T23:04:26Z,2019-10-21T23:53:33Z,True,2019-10-21T23:53:33Z,5d1f876823f9d22be64699e34c1de4a9943d134b,1,2,b55af7233e92a7db60862ecbbb59811b33cb569d 844222e6da77848fe0733b35dbe9992392768262,,Adding single terminal launch instructions,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | (add tickets here #1) | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  Adding instructions (for advanced users) for launching the simulation stack on a single terminal  including the multi-robot example.
ros-planning/navigation2,1251,2019-10-17T00:31:14Z,2019-10-22T00:09:05Z,True,2019-10-22T00:09:05Z,ce23b5eca5ff29ee10e5c3576bbf9d8d8a3a73da,27,7,15dfca5354353f65b3d7d3e285dffd4a8aa9a851 7cce8f0d27373a39711acaf6869ebd3a47aba927 c0bc93ac25dfb02b5c203c79ca5d1da73dbbd91d 04f38860416449aec9423668e5bba8583f7d752b b911e8e215319c19cbe95edea6dd7778cdef1bce c03ba3353209c3203f9f50dda6a30c3beafb2fa8 037a5f5f0a32c73958afd9b66a469a2337c7d30c,,Migrate to Behavior Tree V3 ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #958 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  System Test |    ---    ## Description of contribution in a few bullet points    * Switched to version 3 of the behavior tree library.  * Major changes include:    * Parameters in the XML are now ports. The classes now use the new port interface for that data.    * Tree nodes are provided a configuration that includes the ports instead of being passed parameters.    * TreeNodes no longer have an onInit method. Initialization happens in the constructor instead.    * The blackboard is accessed through the config method instead of the blackboard method
ros-planning/navigation2,1262,2019-10-21T03:52:32Z,2019-10-22T00:31:52Z,True,2019-10-22T00:31:52Z,46b0ed9e298fbe981080a3a2e783e21b916fe26d,4,4,8283d2dc83d7a4718b47d25deab1b8bf2724c4e7 fbd08817ed799ef0d8a5ca58b65738aaf20b2494 f6dc048d0216cdd45d9c23058f98001961978583 c8fe775d62ef913486b99958e293ec106d243c8f,,Doc map server,Add doxygen documentation to nav2_map_server header files   <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1256 |    ---    ## Description of contribution in a few bullet points  * Added relevant doxygen style description to classes and its methods.  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    ## Future work that may be required in bullet points  * Need comments on my documentation.  <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1267,2019-10-22T15:53:04Z,2019-10-23T17:04:22Z,True,2019-10-23T17:04:22Z,67a92be87f8a00470313c232b1462d45379273e8,2,3,d5854fa9626a47f48c80a7ab6ea99579eb1a8a31 ef6829746b60e8c8cbf4c2bdf4c6ee7168426cfd 57d098933f79eec2a5bdafa75ce2b71c732e0f72,,Add doxygen doc to nav2_controller,- Add doxygen doc to nav2_controller.hpp  - Add doxygen doc to progress_checker.hpp    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1256 |    ---    ## Description of contribution in a few bullet points  * Added doxygen  doc block in nav2_controller header files  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    ## Future work that may be required in bullet points  * Need comments on the doc  <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1275,2019-10-23T17:17:05Z,2019-10-24T17:16:12Z,True,2019-10-24T17:16:12Z,0e4333a0b83ba9ac4e04af1faf37466522c7d8a5,1,1,397dfee5224d255661b6304ca63da3d45bcc9a77,,Refactored nav2_dwb_controller README md,- Removed plans which are already been taken care off    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1282,2019-10-23T19:57:58Z,2019-10-24T17:16:23Z,True,2019-10-24T17:16:23Z,45359a0b7d77c2183144e22714386dbc996cb1bf,1,2,c2a30f6408c3bfb5ee65ce762bc7c43318c0daa2 5fbe31570468f05c9b790e0a39d20413f5c0fc0c,,Add doxygen doc in nav2_bt_navigator header files,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1256 |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    ## Future work that may be required in bullet points  * Need feedback!  <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1288,2019-10-23T22:22:41Z,2019-10-24T17:16:50Z,True,2019-10-24T17:16:50Z,ac4d0affdb90915ec22a42130605c61f34b89865,1,2,6f99f842b9e4aaf61a6d072af8c2e6250d6d503b c928abd8fd83c6ab615a379d04708b9c906fd081,,Add doxygen doc to nav2_planner header file ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1256 |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    ## Future work that may be required in bullet points  * Need feedback!  <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1293,2019-10-24T17:03:48Z,2019-10-24T18:08:24Z,True,2019-10-24T18:08:23Z,14f8cc3ed7a44e85fad20988daa3b5e683ac2a8b,2,1,4522627dbfb81e4ee442331ed5cde95a68208f1c,,Fix BT xml paths on tests,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | #1283 | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  Path to the BT xml description file was not provided correctly to the tests. Fixes #1283.
ros-planning/navigation2,1273,2019-10-22T23:42:40Z,2019-10-24T19:09:03Z,True,2019-10-24T19:09:03Z,ab2c71d0d81cd67774a35a0d571728cd503ceb49,1,1,c3213c5d0f4e06af791c170e5fa379923ba79433,,Switch behavior tree to dev branch instead of 3 0 9 tag ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1) |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * Switch the build to use the latest version of the behavior tree library instead of the 3.0.9 tag.
ros-planning/navigation2,1242,2019-10-15T20:03:57Z,2019-10-24T20:09:28Z,True,2019-10-24T20:09:28Z,88d94d18a889748086f2ee652575408df5a9a359,12,7,bfa922cbc1b42aad6f0b40f8eb2179f4c606f5b5 847f0561dee8cf0a22df3928b01595512cd16b84 1191492552ac446a1a5bfe64f6ca786c303c830d 453cd5289a7eab7b561530e1abb47fc68ff1e78d d893decc456caa5a58fa4bf073e01233ef85a7d1 1799e14fb57bb309fe757d2fd8a494dd63fc5c17 f74cf2c643798fd64864b82b34c2fe0d25210a00,,Overview and Getting Started Page for GH Pages ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points    * Adds an overview section to the main page and a getting started page that takes you from 0 to navigating in the simplest way possible.    **NOTE** Since the site isn't really considered live yet  I went ahead and published these changes so it is easier to see what the result looks like.    Take a look at this page https://ros-planning.github.io/navigation2/  and the Getting Started page below.
ros-planning/navigation2,1287,2019-10-23T22:20:30Z,2019-10-24T20:12:49Z,True,2019-10-24T20:12:48Z,72221ba1e7feda486405b12731e6cef22878f0af,1,1,6e8f2920c613c0401a4f38a1dbabbb841b55ec51,,Cause build output to be sent to screen to prevent Travis timeouts ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1281 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Testing to see if passing console output through prevents travis timeout failure
ros-planning/navigation2,1298,2019-10-24T19:16:03Z,2019-10-24T21:09:12Z,False,none,c9754a571885bf1b0b81536b73e385f929666080,1,2,5048ce2599cee5b2f44c8ad5591c28e6cf85bbef a88c7cc75ed0165be9c1a6463612dcd71834dbde,,Using Goal Handle in action server ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1289  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 simulation |    ---    ## Description of contribution in a few bullet points    * Right now we check if done using an action server result request  which is not using the information we have right in front of us  it also doesnt handle most other terminal cases other than success  * This instead uses the goal handle we have available to check the state of the goal and only request a result in a terminal condition  * Also lets us meaningfully catch errors in networking    Need to test in simulation before merging that it handles preemptions correctly and we're all squared away.  
ros-planning/navigation2,1268,2019-10-22T16:04:07Z,2019-10-25T02:25:56Z,True,2019-10-25T02:25:56Z,7bfba887fc62df10d27fe3791da38299c51faa95,1,1,13f820a86583825de8ead7ccd20f95daed258f84,,Change localization test QOS settings to transient local reliable,## Basic Info     | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of turtlebot |    ---    ## Description of contribution in a few bullet points  This changes the localization system test to use transient_local + reliable QOS settings for subscribing to the amcl_pose topic. It also slows down the re-try rate from 100ms to 1s.    With this change the test passes 300/300 times. Previously it has been passing at about 85%
ros-planning/navigation2,1296,2019-10-24T18:14:41Z,2019-10-25T05:01:44Z,True,2019-10-25T05:01:43Z,56afb94822e7c6d62301ae8d034dfbbdd1522dfa,2,2,a8097c3e0e408ba671073ea92120bc6de80a10a5 836a9c257d21c337b19d8615299b8f9688388f48,,add clear area method for plugins,#1290     This PR gives control to costmap_2d plugins to clear sections of its own area. This also helps by letting a plugin override this method if it also needs to clear out sections of its own internal data structure separate of the costmap_2d projected costmap.    Nothing uses this right now but it is necessary as more things are ported to ROS2
ros-planning/navigation2,1257,2019-10-18T07:42:27Z,2019-10-25T05:03:50Z,True,2019-10-25T05:03:50Z,fa2ce51f5f55cf477797a5ddfa121e3ecf9eb9d9,10,4,3ed934a16719734a8377a6e230699c995975f320 6812d3318fe9efab7137449069b156c8bc5130c1 fc86eddb2d9a8ff9512a3d36d20756d46786ce30 884f4f199eae3d9b60c5a777e7cb7009bc6642ef,,Service timeout,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (#1248 ) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (Yunji Robot) |    ---    ## Description of contribution in a few bullet points    * Add a parameter to control the timeout of every specific action/service  ``` <ClearEntireCostmap service_name="/local_costmap/clear_entirely_local_costmap" server_timeout="200"/> ```  * Add  a warning  stating that the service timed out     ---    ## Future work that may be required in bullet points  * There might be another elegant way to fix this problem  cz' clear a 10000x10000pix costmap  may take a while.  <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1295,2019-10-24T17:54:36Z,2019-10-25T16:02:43Z,True,2019-10-25T16:02:43Z,f409ba184e54f919bb8a2cbb6d0057b8b3658dde,2,2,3ee54ec92936e2d2dd964dbd47fa386a4ba75458 47670c904afa26d5a71c4100be74e788f90cdeb5,,Minor updates to documentation paths in READMEs,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | # | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  Updating paths to NAV2 documentation website on multiple READMEs.
ros-planning/navigation2,1270,2019-10-22T21:32:12Z,2019-10-25T21:07:39Z,False,none,94b33f68395d45469206b6ed8d485e506533593b,8,3,3975e7d814e507f7b5af51737bccc7828d7ea36c 8dd8646d60bb94c0098976aa964907617c8b8885 e388a0e02bf2af336435aab6223a78449f49ceb9,,make nav2_bringup part of navigation2 metapackage,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation |    ---    ## Description of contribution in a few bullet points    Disclaimer: Not being involved in navigation2 development this may be changing a design decision instead of fixing what seems to be a fluke.  Feel free to decline this PR if not relevant.    It happened to me a couple time than installing navigation2 (either `navigation2` from debs or `navigation2` and its dependencies via `rosinstall_generator`) I fail to launch my nodes because I didn't pull in `nav2_bringup`.    This PR changes the dependency orders for `nav2_bringup` to be grouped under `navigation2` and not the opposite.  It also changes the `nav2_system_tests` to not `find_package` a lot of things when being built with `-DBUILD_TESTING=OFF`      <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1306,2019-10-25T22:24:27Z,2019-10-26T01:14:39Z,True,2019-10-26T01:14:39Z,ec4904be2af7dc5a6ed74dc46edac5ea4bfb6aab,4,2,71dadad925f52760c388848321510813393d4466 9681f8f75f3a1cfd2baa68234893644dd990216d,,Get spawn_robot installed correctly Fix for multi robot test,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #1283 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Minor tweaks to package structure to match other ros python packages.
ros-planning/navigation2,1247,2019-10-15T21:57:59Z,2019-10-26T04:07:44Z,False,none,47f31e900967bbd3231a26ed385561de7e1b2bc6,6,1,b1ff083ffb2f0d6d0b44a83232eaa74b22cefc52,,nav2_bringup launch file refactoring,## Description of contribution in a few bullet points    * Simple refactoring of launch files in the nav2_bringup directory
ros-planning/navigation2,1286,2019-10-23T20:59:14Z,2019-10-28T18:00:47Z,True,2019-10-28T18:00:47Z,cd239d604876bb0e8df4fdfc7c4936c97a7afd42,1,2,fe565dbfcb833dfff971ede8252dc1aeeed9174a 647d34a1e370f3a41f929a0afaa969dbf64be439,,Launch RVIZ using launch_ros Actions Node,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | #1272 | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  Updating simulation launch files to launch RVIZ as a node instead of using `ExecuteProcess`.
ros-planning/navigation2,1315,2019-10-29T18:38:23Z,2019-10-31T21:36:28Z,True,2019-10-31T21:36:28Z,afd25e659d1909645daedf82717d95c7981998e2,3,4,28b6bb80b2e9ee43df72bc9c1a9c8752a89fa964 711e71cae40283b06188501fa408f3e4daeb5bb5 8de40552cb91cafc1d0ddd46844de7034b1ebaba 1618c71ff057c681e84296c5a12ec8e26c10cee0,,nav2_core and nav2_controller short documentation,## Basic Info  Added a short documentation for nav2_controller  and nav2_core packages since it has none right now.  
ros-planning/navigation2,1311,2019-10-28T17:56:43Z,2019-10-31T23:22:35Z,True,2019-10-31T23:22:35Z,1a1070ae8fd4aa19436773bd0877f5ec093f9170,1,1,7c1b31d907ae31d9f4781b6a6e558881db34b044,,Run multi robot tests on Travis,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1308 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Gazebo simulation of TB3 |    ---    ## Description of contribution in a few bullet points    Addressing #1308  tests have been consistently passing on my machine so I think we can enable them.
ros-planning/navigation2,1214,2019-10-10T18:49:07Z,2019-11-03T11:38:06Z,True,2019-11-03T11:38:06Z,a227539ea9a9d979baa91e1139cbcf60499ad564,14,24,8f0b460147a9c574afee232c176b5575a294760b aecdd12d2366ede6404a37a6449b887da0732a8e 4bc4dc9fdd662f07b8887d9980280bfa448691bb 84ae766fbc098fbf406b585ced5700caaec51164 5d0aa7218fc9521a8c7f0e5dbdf4d6de5d46008c 29c3fed3b882a1b209efe0117389d69fbd2f7ab5 03e4a59d8b94bbeb68ebfeed663f6c168d962c38 4ba5e55da6acf04c231c98f3ef4ebbc448f61fcf 38882580bec7777edfaf2f3a108fa565ff3b25a6 3c57c076eff7986c605570378c50eee485281d74 fff4d673b4b7ffb517bce1cb97b5bc850a695682 6154be4c56c3553f3798e261f80490846d34daba 73ea1e47ced1517631fd6943f7067a912291bcc7 bddb25f8627e996348349413be317494fed5e3ae ce1ee1cf00e1359c4ca0eca23d9c2d2ce88691e7 26ac5be349005b79f9855dd626fa10149263e6b2 19169b58b1ae5789b0e925da5dd4edfb6a61dc28 17f9573226f12035b0e20865f57dc616d146ef23 fd064012817cadab463a539bd94d16210ab7fd0c 83155d083175feae244c33a85502b609c0352f15 11fdc904c121307007a7c461b36a08715d27a5dd d2d5881b855dfadc85b9234d9383ace27e794a21 7ca68ffacf08cc574c16a375c710f3df42e307d7 45fdac6a42692c6d5fe7f5c59bfc09c066256550,,cleanup all globally hardcoded remaps for multirobots,Fixes https://github.com/ros-planning/navigation2/issues/746    This PR cleans up all the hardcoded global scope topics across the stack so were not unnecessarily remapping basic topics.     Passes tests but I think @orduno is in the best position to give this the thumbs up that it resolves all the issues he needed the remaps for.     Now the remaps are just for things genuinely needed (TF) where there isn't (yet) an option for a prefix
ros-planning/navigation2,1324,2019-11-01T23:03:07Z,2019-11-04T20:54:43Z,True,2019-11-04T20:54:43Z,9d17355276f77eed01cf6ef8e788155f8167b371,1,1,9e957642e9fe7a0a4240c2bc18dc53f1b55f14c4,,Track Behavior Tree 3 0 9 release tag instead of ros2 dev branch ,There is no "stable" branch the behavior tree repo. We just need to track the latest tag instead.    The branch we were tracking was deleted  so this fix is needed to get CI working again.    We need to update to 3.1.0 before making our Eloquent release  however  3.1.0 doesn't build successfully yet  so I'm tracking 3.0.9 instead.  
ros-planning/navigation2,1321,2019-10-30T21:50:41Z,2019-11-04T20:56:47Z,True,2019-11-04T20:56:47Z,555bb391d364d3419dc74cc2b0a355cfc4603031,1,4,c0ec255766947350e7be93048eed59a7db9112fe f45513645fba5269f71028375ad2316371c495c6 eab609280d1e4463a2931da238c2dccb9d6b9d49 db2cee177b2f313a3b70d07c00c11e5d3c23321a,,Add subscriber count checker before publishing costmap ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1028 |  | Primary OS tested on | Ubuntu) |  | Robotic platform tested on | gazebo |    ---    ## Description of contribution in a few bullet points  * Added `count_subscriber()` check before publishing costmap.  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    ## Future work that may be required in bullet points  * I have locally tested it on my system but some unit and integration test might help.  <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1326,2019-11-04T07:53:17Z,2019-11-05T01:39:56Z,True,2019-11-05T01:39:56Z,b1c97f634e1489faffe10df4ecfa483c3c379e7c,1,1,67ca282f9b56005516bef95dbeb1b96378e8ebf4,,Remove duplicate exec_depend,Remove duplicate exec_depend in `package.xml`
ros-planning/navigation2,1291,2019-10-24T16:06:13Z,2019-11-05T07:30:19Z,True,2019-11-05T07:30:18Z,49f0a124d742105ecccc0ac8b96ef1e549c50fac,7,10,5766c44d33befdad364093b1d7d85802eaa3a6a2 17c1ecf88883aabe0419022d2f74dc1350b765c1 97e734f35fed70f2cd131f4b5ecfa7767d22fd8e 9a1af6e4c5216456ec957e116cd528b666c8cbbb d152d51145bc0344568651d446cdae51cd76d141 e953f6bb7e80a8743ac0265a4f95ecdd70889fb5 c8c17c66cc0e0885a0a95ffcbc29f2826240e78d 7497265f8401cdf565ea4eb81d6019dc505720a9 9bcb25a0d01560c4b317129bfaf21f9beb3711d3 6e48ee2808986c7bb60eac2f1402ecdfdaa22913,,Enable voxel layer,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #955 ) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | Turtlebot Simulation |    ---    ## Description of contribution in a few bullet points  * Voxel layer enabled  and used pointcloud2 data.  * Tested with multiple sources using obstacle layer (scan and pointcloud)  * added short documentation in the costmap_2d readme file    ![voxel_obstacle_avoidance](https://user-images.githubusercontent.com/12860979/67730537-8a390b80-f9b2-11e9-8835-bf1cc3e79a94.gif)    ## Future work that may be required in bullet points  * Test with real robot      
ros-planning/navigation2,1269,2019-10-22T18:24:48Z,2019-11-06T14:12:43Z,True,2019-11-06T14:12:43Z,48dc74bbdd48995b5e27358a9baad83f48b13d65,41,17,53e1a31d005d619ec7f1cb8716c1e42fc916ea8f 3a8846f9d295fa4f3f16c70ef1c14f90f0b4fe9d a808659de60f3567e0a9dd8c73f82179d4b89275 4958f679352f23c65152eb2b9693672f5ad93468 d68b449c892b38b5239bc7a5f32c166c752f8a2c 5305df903955768942791b3ddcdc036b71a88617 7ce209f99d1fd905bdcb646e4663357b5edfef38 f9ba3f3c197a2edd5e4cbd402c29e313bec266d2 a8fece364864c3a32758d32fba758eabfe37bcf4 8bd82a7489cf145d6003a3e3f3e7ec0c95fbe873 401f2bdf42276c1cce01046bc4a5c9411e30acb5 47b8ed92488836a137bdf4b97cf71fe4529427e7 6da9d3d9e34a9623e28c205ebc9178e6f914de3f 56b98782ad86c12311aeb45720efb66d9f07ed21 2bfffb05771a9514169cadc1ea51376f21386a20 e70eb08b704bb0cd52ad119373f12f75c89166bc 65dab923acb60e7b6f56470a154a80965cb7dd25,,Multiple planner plugins server for contextual planning,This is a draft currently addressing the discussion to allow for multiple planners and controller to be available in each.     Right now its just the planner server being able to host multiple planners  but I wanted to throw this out here early for comments if someone has an issue.    My plan:  - [x] BT navigator refactor/rename compute path to pose to a general planner  add a name field  - [x] test we're getting all the good stuff hooked up    If anyone has strong thoughts on plugins within BT at this time  maybe we start here      If anyone has a better name than `ComputePlan` as the map name for `NavfnPlanner` plugin  let me know  I'm not good at naming things
ros-planning/navigation2,1305,2019-10-25T20:53:50Z,2019-11-06T22:43:27Z,True,2019-11-06T22:43:27Z,f2697dabee6612aaabee28c49ad384542951756a,4,4,28862b3c08082231762afb6d4c095247e7999c5c c21033038c6537f67a123760f5053515639899da 45fc5e4b92ce03897672a69f4d45e0d8c116f63a d57e4a8d8d2f1a6c7191b16843518ea29f554b8d,,Provide a list of all tunable parameters,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | #951 | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  Addressing #951: Adding to the documentation site a list of all tunable nav2 parameters.
ros-planning/navigation2,1328,2019-11-05T21:14:33Z,2019-11-07T00:52:45Z,True,2019-11-07T00:52:45Z,054a68718faf0e6bf13524d88b94978433189ce1,2,1,492ff739cd801b0ff74a8e546561741614bb75e9,,Remove dead code from behavior tree engine,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu 18 |  | Robotic platform tested on | TB3 in simulation |    ---    ## Description of contribution in a few bullet points    * removing an unused variant of the `run` method from the behavior tree engine class
ros-planning/navigation2,1343,2019-11-11T20:23:40Z,2019-11-12T18:10:42Z,False,none,3c358039903a6ea8894f3bb537015163c286ad40,1,1,418abeee470137ec8b5e0e549d53ca48e2c2a852,,Reduce the number of tests run in Travis to just a single system test ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | CI |    ---    ## Description of contribution in a few bullet points    * Travis is frequently timing out due to the number of tests that have been added. This PR turns them all off except for Dynamic Obstacle. That test should cover the vast majority of the functionality that the others cover without being overly time consuming.
ros-planning/navigation2,1319,2019-10-30T02:46:45Z,2019-11-12T22:17:52Z,True,2019-11-12T22:17:52Z,f2739228fb53ca857e7cfb795dc3ec0b7bf48fbc,6,1,5d558d78a0af77bb807a35e9521f73568901f5c6,,declare parameters inside searchAndGetParam,Fixes issue with some dwb critic parameters not being declared.    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1154 |    ---    ## Description of contribution in a few bullet points  - updates `searchAndGetParam` utility function to declare parameters if not declared  - adds parameter namespace where relevant for critics    ## Future work that may be required in bullet points  - the `searchAndGetParam` has largely lost its original meaning  so we should consider to remove function entirely or rename   
ros-planning/navigation2,1323,2019-11-01T02:58:28Z,2019-11-11T19:41:02Z,True,2019-11-11T19:41:02Z,43bace3bbb9ddec4d2b362b56af05957194233b7,22,5,8e0b2612a39874aa032cdc060f7e8853dda55aae e4770e44a226174e57e6fc14b27f61a9c6d87603 78a1c33d2075edd44c18ed9b7c51cfdf2daca792 2f8fbe6b5a40a1959d62e6fe84341ad6491220b9 483b3d993bb81464d0691e57f202a0960d7d8bb5,,Enable dynamically loading BT nodes,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | #942 | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  Addressing #942:  * Making the existing nav2 behavior tree nodes plugins. * Modifying BT engine to load plugin library specified on params file.  ---  ## Future work that may be required in bullet points  Provide documentation explaining users how to create and use a navigation behavior tree with custom nodes.
ros-planning/navigation2,1347,2019-11-12T03:59:00Z,2019-11-13T01:04:26Z,True,2019-11-13T01:04:26Z,7f56c98a8fc230a420a848e495b4739df599c207,1,1,cce62d5fbc0d239fdc56b97176ea6a31b2a8b71b,,Add GoalTool to the MultiRobot rviz file,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu  | Robotic platform tested on | Gazebo simulation of TB3 |    ---    ## Description of contribution in a few bullet points  * Change to enable Navigation2 Goal button in rviz  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    ## Future work that may be required in bullet points  * NA  <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1332,2019-11-06T15:17:17Z,2019-11-13T02:14:55Z,True,2019-11-13T02:14:55Z,eec14fb964b5829baaf3dd7d42a53fa7006ee6b4,9,1,07481701d76c1b4779bc4cefb1906961914508dd,,robot_spawner nav2_gazebo_spawner,#1304     navigation2 gazebo spawner since robot_spawner is going to be problematic
ros-planning/navigation2,1348,2019-11-12T19:47:03Z,2019-11-13T15:34:11Z,True,2019-11-13T15:34:11Z,dac7dd9ed10e2afae91c3fa97a80fd30aaa84641,3,2,26afc6098ac3bd73063f6aa1aaf7a013f8408acb f6129860ea8cfd249a09399e65b8d5919f6783c2,1 - High,Clean shutdown of system tests,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | #1168 and #1274 | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  Cleanining system tests shutdown (#1168 and #1274):  * Request navigation through the action interface (instead of topic).      * Shutdown nav-stack once test has been completed.      * Have lifecycle manager reset managed noded in the correct order.      * Add comment about race condition on action server during shutdown      * Listener should be reset before the buffer.  ---  ## Future work that may be required in bullet points  * Need to re-enable topic-based nav request.
ros-planning/navigation2,1249,2019-10-16T06:11:47Z,2019-11-13T23:17:13Z,True,2019-11-13T23:17:13Z,e3997789b18d2c737ce4f0be79becf1f03d4d7d7,3,5,eba478f69b11720fa8bb8a3b04afcfad8e9b6c03 28d4a55f11a4b4b7550af320b618033604739933 a820cb7ed4f5eba0006e42c403e96d2e041f3fbd 7b8e8d9b43c5c6cc21092862b1c6dcaa82540c9d 2fd3f150169aa230b7f7f939da2912bd43a3b5ae,1 - High@for review,Turtlebot 3 Waffle Gazebo model with ROS2 depth camera plugin,I am not sure where exactly this model and the robot description file should be in the repo. I am open to suggestions. Depends on system and network performance  the camera update rate and picture resolution can be reduced and rbg camera sensor can be disabled.    This robot model is needed to test;  - voxel layer  - robot with no lidar using depthimage_to_laserscan    Do we want to have the pictures and the readme file in this directory?
ros-planning/navigation2,1334,2019-11-07T12:30:10Z,2019-11-13T23:43:18Z,True,2019-11-13T23:43:18Z,f80356380f765d75d0cb6db62332d3917983eac0,23,1,132d4aaf284fb31c72d478e5cc8b07441e7ca268,,updated header files with v3,Behavior Trees Library in C++ has now updated their include directory files from behaviortree_cpp to behaviortree_cpp_v3 in their latest commit in [ros2_devel branch](https://github.com/BehaviorTree/BehaviorTree.CPP/tree/ros2-devel). I went ahead and updated the includes in navigation2 header files to reflect this change.
ros-planning/navigation2,1313,2019-10-29T17:39:18Z,2019-11-14T20:02:37Z,True,2019-11-14T20:02:37Z,d8b8a9a0c41d2a86795a365d49d833c3ecd2b3e4,1,1,44f766a08a91310fe2bdb479bcb0af414e0d6708,,Script to run the thread and address sanitizers ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #850 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * This is a script to run the thread and address sanitizers on the navstack  as described in https://github.com/colcon/colcon-sanitizer-reports/blob/master/README.rst  * I didn't see any serious concerns  but I've uploaded the results to the ticket. #850  * We should run this manually from time to time to see if there are any interesting results.
ros-planning/navigation2,1340,2019-11-11T19:06:31Z,2019-11-15T00:51:39Z,True,2019-11-15T00:51:39Z,2e28e23a4beb5db06dbdd0849ad4a90e781eb40c,2,4,b6f8a45e9d568539149c50707a30d95cef4e1a20 b316ab9c36e19e8c5bcb323d92a771c7f9d2bb11 7dcf392de2e7104f29bd96723bd1b9c44aa0f2c6 406cb94c7a2aad2f68cb93f0c6dac2e96e44d3fe,,Attempt to filter out generated message files from code coverage ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #973 |  | Primary OS tested on | NA |  | Robotic platform tested on | CI |    ---    ## Description of contribution in a few bullet points    * Add filtering rules to remove any files in the _msg packags  so they don't affect coverage results.  * Also  reduce the number of tests that Travis runs to improve the odds of completing in time.
ros-planning/navigation2,1310,2019-10-28T17:24:04Z,2019-11-15T21:21:02Z,True,2019-11-15T21:21:02Z,e8e6d944c11444c77605202564393bc23eefc8a9,3,1,53dddde713a91f8c384ce2aa7dbea22d533a0547,,Use action client instead of goal handle to get result,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | #923 | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  Addressing #923.
ros-planning/navigation2,1292,2019-10-24T17:00:24Z,2019-11-15T21:54:40Z,True,2019-11-15T21:54:40Z,8c1a8e6e15a6b7ea52d32dc0a2e4abd70e4f9e12,12,16,fbb124b65c15a75afb0436daee9ca137859d059e e36df7b475dfa7381d530340e1f7add746da02d3 dc93370f383767e1febbb30ef3febe5f39b228d6 a35226b4ec73576bd1bc742208e81a6452b367d8 d513e841159c3e25a8f1f6f9d6848cca4b3e5c48 a26cb5b3b1efefad5162f7d75095ca3d7dbecf4c a15fe717fe98a5e9ba57060d4e7b3a6e7f67efee 24223fe0056d23c12d00f0cc4fa88190806a8b7d 1b4099c4fc2a4b7953a2d949036f515ca660d712 263ecca82b2897fd9e1b630caaffecf566f2bbb8 f795909cf7b09f990fc108d012ba8a0c841f246e 3eaff13a9a7a8c3e25cf0e7a7696b16d46419830 0bf83dfd45e1f0b025b35aed001bf5f5cdb86535 7e10a780f31634f2a8d7852e5dd68268521364f1 975793b4d90474fe4ec60a1fcd86d26c69db7a9e 9cd972b70305711a8a9147727c9117980e8baa65,,Multiple controller plugins in server for contextual control ,See #1269 for planner eq.    I'd highlight that I add a `name` field to the controller interface. This is necessary in case we now load multiple of the same type of plugin. DWB will ignore it because it doesn't have alot of output logs anyhow  but others may require it. Should go in before Eloquent release 1
ros-planning/navigation2,1223,2019-10-11T17:50:20Z,2019-11-17T16:47:49Z,True,2019-11-17T16:47:49Z,8fe5dee535410c55b0549ab22710a22a045fb532,4,3,648ecaeaf128d497c778f3a4591f9a8805c64713 cc1a7f4858498d195969d1242a4eecae83ade98a a642460e107dd07a6da90caab37454dc947de466,,Update Dashing ros2_dependencies repos,Switch dependencies to dashing branches  
ros-planning/navigation2,1349,2019-11-13T01:17:14Z,2019-11-18T18:52:34Z,True,2019-11-18T18:52:34Z,7770a4547bb706ca59f0c6cf5ac34db935ab9bfe,1,2,b53564f7d4df08ca17eba1837162a064661dd1fe 553bb93ae636cf6821cfeb033754896797b8a36f,for review@nav2_bringup,Execute gzclient and gzserver independently and use the argument headless ,This PR is for #827     - Execute gzclient and gzserver independently in nav2_tb3_simulation_launch.py  - Check an argument named `headless` when executing `gzclient`.  - The default value for `headless` is False.    - `ros2 launch nav2_bringup nav2_tb3_simulation_launch.py headless:=True` brings up `RViz` and execute `gzserver` only.  
ros-planning/navigation2,1350,2019-11-13T01:25:00Z,2019-11-18T19:25:24Z,True,2019-11-18T19:25:24Z,f1fa618156f9c949ce644f8036726dc3fae3cca2,3,2,f5f2f89d4754c1086ab0c7f94ca889702c36084b 9c1524e9a7828d69815a726db152ef729da1f877,,Re enable dwb_plugin tests,Fixes and re-enables `twist_gen_test` and `goal_checker` test in dwb_plugins package.    ## Basic Info  | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #789  |        
ros-planning/navigation2,1354,2019-11-13T14:27:44Z,2019-11-18T20:02:57Z,True,2019-11-18T20:02:56Z,d2f2145a6100521bfee10d25caa415d77fa204bd,2,1,885477b94ae4e27c499b96988e63339f2331b0a9,,fix clearing logic for near max_obj_height instances,Fixes https://github.com/ros-planning/navigation/issues/662
ros-planning/navigation2,1364,2019-11-16T20:53:49Z,2019-11-18T21:04:55Z,True,2019-11-18T21:04:55Z,827506be1fed4887935043f8d0501671df8a77a6,2,1,c0963c8fbc4fa225f200f6fda944f08a259b06a3,,changing docker file removing travis,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #1360  |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points  * Changed docker references from my docker images I set up to the rosplanning version (can't believe that was still there  I did that so long ago)  * Removed travis badge and travis file    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1299,2019-10-25T03:06:09Z,2019-11-18T21:40:21Z,True,2019-11-18T21:40:21Z,eb413f82e21c0131c538551949467832b5a99fcc,2,4,4d358a60c502f1399223dcd96fbb02527d1ec6ba 9882367f69fd7fb9e1a1c56c9398367197d6f9d5 b46a644ae7ad7a13d4d92077cf03c852c9bea9c3 1451dc5fc49f999e56d9ad0839d6f840fa99ce78,,Add doxygen doc in nav2_lifecycle_manager header files,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |    ---    ## Description of contribution in a few bullet points  * Add doc to nav2_lifecycle_manager  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    ## Future work that may be required in bullet points  * Need review!  * Its kinda hard for me to put into words whats happening in both the classes  so need suggestions for the class brief   <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1357,2019-11-14T16:12:33Z,2019-11-18T21:58:15Z,True,2019-11-18T21:58:14Z,abe51671084bcc18dd210e95edab962b92d518eb,2,2,40efecf885e22d420d38a7001cfe8468f10f8d87 e7d7b56931edd0d75326c766b253ddade6fe5c1a,,Fix twice backtracking of path by navfn planner ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #573 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Gazebo |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  * Fixed the bug where navfn planner was backtracking the path twice.  * Before the fix the whole operation was like       1. set `goal` and `start` pose.       2. call `calcNavFnAstar()`/`calcNavFnDijkstra`           a. call `propNavFnAstar`/`propNavFnDijkstra`           b. call `calcPath()`       3. Find new `goal` point around the old `goal` which has low potential and is not far from old `goal` point.       4. call `calcPath()` with new `goal` point.  * After the fix  its like       1. set `goal` and `start` pose.       2. call `calcNavFnAstar()`/`calcNavFnDijkstra`           a. call `propNavFnAstar`/`propNavFnDijkstra`       3. Find new `goal` point around the old `goal` which has low potential and is not far from old `goal` point.       4. call `calcPath()` with new `goal` point.    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    * Let me know if there is any other way to do it.  
ros-planning/navigation2,1374,2019-11-20T18:28:02Z,2019-11-20T18:35:45Z,True,2019-11-20T18:35:45Z,56df1448c2f67f41063a21b649620b7a32bc38c0,1,1,5fc885621d31ed4d9bf1368de2e7efd7caaa074e,,Minor fix for broken link in build md file,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    Minor typo fix for broken link    ---  
ros-planning/navigation2,1376,2019-11-20T21:48:18Z,2019-11-20T22:19:21Z,True,2019-11-20T22:19:21Z,5fe111a9d65d4d64d2f1f328559b21def159655e,11,1,07ea1988e8f6a86289120e5934e7c99fbd8d9e5e,,planner controller properties to IDs,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1330  |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * changing `properties` for `ids`  * Mostly to open for discussion to get this over the line    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1375,2019-11-20T21:35:02Z,2019-11-20T23:23:40Z,True,2019-11-20T23:23:40Z,e99d63bde9a4be7fcdb59a2fe404c75469a46a6f,2,1,4f9d7476ab4ed3a4032aeef5a385579a6b4dd247,,adding navigation2 new diagram,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #111  |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * Diagram for navigation overview  * Adding to base readme  ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1361,2019-11-14T22:49:38Z,2019-11-21T21:56:29Z,True,2019-11-21T21:56:29Z,b229f3540de8c764b9481264ff6bd927668c6050,28,11,39c6b9cbbcba9cba8d7d46382db5133e054dc9af 1d7dc168916c45409ef9467d290ecfa34559a907 6ad0115f7b369e4b48aecac709ece4c16bf7e71f 9b745337006b51d25c2d92dea2b3415343a95b7b 2a805a8a754922aff9ba46682f76756f6de38922 03f0b8830598fbd67915035498a2f447d7b8efe4 3793a0de4df04984b6f6023c5413753baad03880 399241a27ef785bfc16996a360eddfe12174df94 06771c17e5a63230387ad63707b055ade5eee8eb 335460788519a3f2f389547c7b6a4ce2cfaa8787 753aac95ef733142cd712e2037e461eccc7f8bfa,,Reorg bt nav,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1351 |    ---    ## Description of contribution in a few bullet points    * Added behavior tree plugin registration to their respective headers  to make them single file examples like pluginlib plugins  * Reorganized the nav2 behavior tree package to have some clear structure. They are separated into their respective behavior tree types (actions  decorator  control  condition). This has the benefit of not having one large `/include/` directory of stuff and breaks it down by task which I find **immensely** helpful in thinking about what tools I have available.     ---    ## Future work that may be required in bullet points  * potentially swap out BT plugin with pluginlib just so that everying is using the sample plugin library  but I'm curious if anyone finds that to be worth the effort. I think given we have enough equal examples with the registration in the same plugin  this is clear enough*     (but doesnt mean it can't be improved)
ros-planning/navigation2,1371,2019-11-19T10:07:42Z,2019-11-22T22:03:13Z,True,2019-11-22T22:03:12Z,4ece520ba87e1a813fb6d5dc680c01dbb94873af,14,5,fb781f63ec9f55622e32e20e690c0f0660aaf41f 2e5cefc19c961127d823f376d932e60c85fbb90e 1b9a0c7aaa0331cb4e8c6d91372c8f3d02f7f2d1 50a70dfa68cacebd5ffbe41694c2561dfd8edf4f 8bd1172d3e5261f3416a056ad59e03efa0ff722f,,Fix parallel replanning in the behavior tree alternate implementation ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #1301  fixes #1307 |  | Primary OS tested on | Ubuntu|  | Robotic platform tested on | TB3 in Gazebo |    ---    ## Description of contribution in a few bullet points    * This is an alternate implementation of #1336 that the team mostly prefers.  * This uses an alternate control node that I'm calling PipelineSequence for lack of a better name. The comments and documentation for this node should explain how it works. I'd start with reviewing the readmes and the comment block at the top of the class definition  * This approach used in this PR simplifies the overall behavior tree at the expense of a using a harder to understand  and maybe not generally useful control node.  * The behavior tree image generator is essentially identical to the one in the other PR  so  if you've already reviewed it  you can skip it on this PR.    Here are the new behavior trees visually:    ## Navigate With Replanning    ![simple_parallel](https://user-images.githubusercontent.com/39749483/69137261-4006ef80-0a71-11ea-8693-836ad84f4b23.png)      ## Navigate with Replanning and Recovery    ![parallel_w_recovery](https://user-images.githubusercontent.com/39749483/69137282-4f863880-0a71-11ea-9d59-849f6b68b7c0.png)  
ros-planning/navigation2,1336,2019-11-08T01:29:50Z,2019-11-22T22:03:44Z,False,none,e868b630ada20691afdd276c310aab48eb62a589,14,8,8d1df3b0a87f837eaaa29a2bd633c0e064de59d2 bef6c646c3d7ead12ea2ba5baeb16409770c90bd 6311c40933c47ca86b2ced799c62458dedb72b5c f6d495e95dc7ff9d1736ef238f909520cc2cfebf 08a82aa78d459aebe3bd749bd95074e157cb928f 9bf289d3e7443ffbf077eedbb5d9a6510d993a10 072a8e4d097e8216683272321ad375bb7aca82db eea1ca0bc248fefc953c7bdd3f9e24282734afde,,Fix parallel replanning in the behavior tree,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #1301  fixes #1307 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 in Gazebo |    ---    ## Description of contribution in a few bullet points    * The `sequence` node in the V3 behavior tree library works differently than in V2. There seems to be no way to have two subtrees running simultaneously in V3 unless you use the `parallel` node. Unfortunately  I couldn't find a way to use the  `parallel ` node in a way that was convenient for us.  * Instead  I created a custom control node that runs all its children in parallel until one of them completes.  * I modified the behavior trees to use this node.  * I also added a simple python script to convert behavior tree XML files to PNG images. This can be replaced when Groot can be used to edit our behavior trees.      
ros-planning/navigation2,1382,2019-11-21T18:50:09Z,2019-11-22T23:38:11Z,True,2019-11-22T23:38:11Z,cf5a548ab9dd8c4715c9998a3d74aff6a8f5ca7e,5,1,451f9aba112aab116595f43603397476c43124a8,,move collision checker as an input to the configure method of recoveries,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1239 |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * reduce duplication of subscriber and resources    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1331,2019-11-06T14:34:30Z,2019-11-23T02:29:51Z,True,2019-11-23T02:29:51Z,992f706936694cd6998e8f476d4432b2e87c6128,3,2,742a335e65192839fa8e808f52ac049e8d1ee510 8475b4901af08b145cb6b1c314a29e9c644d7e4b,,changing TB3 burger to waffle,#1258     Changing TB3 from burger to waffle  that we actually modeled and used
ros-planning/navigation2,1381,2019-11-21T06:05:44Z,2019-11-25T23:41:05Z,True,2019-11-25T23:41:05Z,d8f13e2d974c24fdce6d6a7f2e349b8c62492b47,1,2,7ed5c3eddf2265b8f6f396f72a5840bac77b741c 80f6d5ced1fd069b1011c5058fe4c1f47ae80275,,Update index rst,I was following this guide.  To install ros2-navigation  need to edit `ros2-dashing-navigation2` to `ros-dashing-navigation2`.    When I tried original command from this guide  I got error below.    ```bash  $ sudo apt install ros2-dashing-navigation2  Reading package lists... Done  Building dependency tree... 50%  Building dependency tree         Reading state information... Done  E: Unable to locate package ros2-dashing-navigation2  $ sudo apt install ros2-dashing-nav2-bringup  Reading package lists... Done  Building dependency tree         Reading state information... Done  E: Unable to locate package ros2-dashing-nav2-bringup  ```    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1) |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1377,2019-11-20T23:19:06Z,2019-11-26T18:27:13Z,True,2019-11-26T18:27:13Z,0154951f9cbeab9b5272f36ed02d65b25fdda0f4,14,3,5a6583657e4007751d15e65de56effd53502ce3e fc300b4ad2859b6cebe61b28b8b8018e6184a453 36e1348fd37ed8411082c771d69b6bb3af265380,,changing references from local planner to controller outside of DWB,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1325 |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * changing all references from Local Planner to Controller outside of DWB  * DWB is ignored because  frankly  its so embedded I can't get rid of it.     ---  
ros-planning/navigation2,1385,2019-11-21T22:42:09Z,2019-11-27T22:14:44Z,True,2019-11-27T22:14:44Z,85a2ac17321b53ddd276eb3f9f4bdbf7be69de13,13,3,597e3991b79b99a63bb8ce602973598df4ccd790 83e9c06c4c96155b17fa493dfa13cf729079a7a9 95c3a78c3fa6c5dcaa2c284b26ae8d352668ce15,,Correct CamelCase with snake_case action server names,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1373 |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * Fixed cases for FP  CP  NTP  and recoveries    ---    Whoop  this is also my 100th PR. Do I win a realsense camera or something now @mkhansen-intel :wink: ?  
ros-planning/navigation2,1383,2019-11-21T19:27:40Z,2019-11-22T23:37:40Z,True,2019-11-22T23:37:40Z,f07680907901504c1a85e901a067a00c47b2adf8,3,1,0cb56581f998225a99ec5eabc7c51eb7d0603680,,adding warning when robot is out of costmap bounds,#903  very straight forward
ros-planning/navigation2,1384,2019-11-21T21:37:45Z,2019-12-02T19:37:51Z,True,2019-12-02T19:37:51Z,876b833e8d5b0495db922d8893072e597325a250,3,3,f0ece42c6ecf0487eddceec8a6e4f580a8441d77 26ab4f4330b6cb19f5b08c2269b805f142e31fff 19de536550a39a54d6d3b9f219d40826a6db10c6,,Fix BT action client implementation,#1289     Fix BT action node spinning methods.
ros-planning/navigation2,1338,2019-11-11T15:54:28Z,2019-12-02T20:02:20Z,True,2019-12-02T20:02:19Z,adb27629b605687f2debc7e27f3829796e69cebb,19,16,ca6ab1ccf07f41f80009b4b7059813f2979afd27 7a786f3de39f91ddc3f0cca601fa26e0585f1937 20467dfd89e29337154acdd56700d2ff5ca84ec8 d9c96068d7d47b445662caa8608109ac415d995a 25e9ad466b9394e6d3de34b2c52cac14796bb4ef 383184e44fa9f67b4191a002dc1434e55c0630d3 e79da51f88c95809611417c750021d039466d41d 26fc95857394c0946d2442f92c64487092760729 050e89e8ab9a9efce75bb5fe27bf73d7086d5faf 75bc4a6fc52b15a1c21cc72807f2117fa9435b61 b9f646cb3026ef797f5eed1f38db82a6eb723843 939de11cdd4033461644b8c66fd3a9b788a40967 bf48a525955cb922bac7496864112c5162118089 2ccbbfc34ec27bc7d008ffb9696a546339cd87ba a021f3eefc4a59a6069f8535b34200e2c272ca9b b4c34d365d33c5cb687d49b8336e2f8a8728841b,,Nav2 wp follower,In response to #1327 #803     This is untested but to continue the discussion on the how I think is best to approach this problem. If we like this  I'll test and make example demos launching from a set of given yaml waypoints
ros-planning/navigation2,1380,2019-11-21T02:17:48Z,2019-12-02T22:22:34Z,True,2019-12-02T22:22:34Z,533044db0b661dfdac2578a656a7e6dc960a155b,1,5,1b830d226ed037f54a2a6aaf52d8bcf57170699d dc50259ccbffd3c9e323b0b01a47e871ade976e1 99b241594748714fd92b658f084fb0a6748fc3ba ac067a429204a83a605b284db1400b9906b2cac2 e0a6d7416447cc7f414fd933f682b14d0882ec61,,update dwb plugin pkg readme,Handles #1316 just giving some more flavor to the readme for DWB.    Also makes some assumptions on the merging of #1377 which I don't think is a controversial topic
ros-planning/navigation2,1400,2019-12-02T22:45:54Z,2019-12-03T21:29:43Z,True,2019-12-03T21:29:43Z,6d8e23f7e9e9490fac58cbff755cb1d1d2b6be8d,2,1,1aa81547b0c639b2bb68c50e722669233eb5ac52,,Enable auto publishing of the docs on the master branch ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  NA |    ---    ## Description of contribution in a few bullet points    * This change will cause CircleCI to commit the generated sphinxdocs into the gh-pages branch  * This causes the actual website to be updated.  * This will only happen when a commit is merged to master. All other branches are ignored.
ros-planning/navigation2,1403,2019-12-03T21:57:30Z,2019-12-03T23:53:00Z,False,none,f49ff68f5c20e3fc9d4180c2f053af7f8c7f98cb,1,1,557990a5ca7175e81ab337cf3ca43ca388993a0a,,Fixing CircleCi config to publish docs ,Please ignore this PR. This is just to get CircleCI to do some pretesting of the config file before I push to master.  
ros-planning/navigation2,1386,2019-11-22T18:46:33Z,2019-12-04T16:58:56Z,True,2019-12-04T16:58:56Z,63fb5ea85bd49434c3f86eea45d397e981d19265,1,1,bb11aa8fd069b70e6cc566d7906de9b034071ff9,,Fix rate controller issue,Once the child node begins to run  it should continue to run until completion.
ros-planning/navigation2,1370,2019-11-19T06:20:37Z,2019-12-04T18:30:11Z,True,2019-12-04T18:30:10Z,7ddaaf4b9b1ce9ac2ffbcef80684b8d21ff7bbb0,14,4,18948c58b04ff25f60945f4658e9d5ece52b30d7 e3dc600123ccc8894e9bd36d4cd46786e66da915 60c0b9a7100edbd1dcfff02ce8f85ab1b6a93dc0 47244514b15f6be9163f3aa56d583d006e530897,,Bringing back dynamic parameters Costmap2D,This PR brings the `ParameterEventsSubscriber` class into the `nav2_utils` and re-enables run-time configuration of parameters. As a first re-integration step  this PR adds parity with ROS1 dynamic parameters for the `costmap2d` package.    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #956 |  | Primary OS tested on | Ubuntu|  | Robotic platform tested on | turtlebot3 simulation|    ---  ## Description of contribution in a few bullet points  - Adds `ParameterEventsSusbcriber` parameter event callbacks  - adds parameter callbacks for costmap layers  - adds event_callback for Costmap2DROS      ## Future work that may be required in bullet points  - re-enable dynamic callbacks in other packages  namely `nav2_amcl` and `nav2_dwb_controller`  - re-access usage of dynamic paramters throughout the stack  - If my PR upstream (https://github.com/ros2/rclcpp/pull/829) is merged  then we can remove/replace the class from `nav2_utils`  
ros-planning/navigation2,1407,2019-12-04T17:32:38Z,2019-12-04T18:54:49Z,False,none,81843e6b8b396f1e6a849d5d15d6838741e92837,1,1,2027b1a23cdd8fd03bfeaf5ceb67a36f4548ad9d,,nonsensical inclusion to test PR CI vs Prod CI,#1406 testing to make sure it actually did something  which I'm not  convinced by from looking at the CI errors https://6500-135363400-gh.circle-artifacts.com/0/opt/overlay_ws/log/test/nav2_system_tests/stdout.log
ros-planning/navigation2,1378,2019-11-21T01:17:28Z,2019-12-04T19:44:56Z,True,2019-12-04T19:44:56Z,35aa85946603b63e9ae32a2d8952bebdb31a264a,2,1,5131fad5ca0c22b239c5427cc1962bb9e033342a,,Bringing back dynamic parameters Amcl,This is primarily a direct port of the callback (though refactored) for the ROS1 navigation `reconfiugreCB`.     | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #956 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | tb3 waffle simulation |    
ros-planning/navigation2,1406,2019-12-04T16:53:11Z,2019-12-04T22:02:29Z,True,2019-12-04T22:02:29Z,c2d93596084968376ccb3d6213621f1cf59fe7b5,3,1,91ea44e6f1e7d2222ccfb212c7ca2d656905157d,,Revert Fix BT action client implementation ,Reverts ros-planning/navigation2#1384    This seems to be causing the tests to fail as seen here.    https://circleci.com/gh/ros-planning/navigation2/6500?utm_campaign=vcs-integration-link&utm_medium=referral&utm_source=github-build-link    Backing this out till we can figure out what's going on.
ros-planning/navigation2,1408,2019-12-04T22:20:00Z,2019-12-04T23:25:17Z,False,none,6f32ecdfcf4b9913f73f60354632ee7d759bb411,2,2,094e776a438ba1ab0fa47a238655e437882f194e 767e5a84ce4240b5b414cbf371a58113a541eaa4,do not merge,Dummy PR for testing CI linter fails,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | # | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  PR to check that CI fails when linters (cpplint  uncrustify) catch some style errors.
ros-planning/navigation2,1186,2019-10-01T22:48:30Z,2019-10-05T05:31:53Z,True,2019-10-05T05:31:53Z,07c17a3cd9f8697915a82431b4e8b8cfc8c71506,11,5,eedada188308a0f16ab91178648bced900071540 af04d830f21fb000e7f6aada71ebc1a7eead7787 b034c0fa9b90f78acbb4378454c83508d3a00a8f ed0f88401f0890f204dc6845150fb4b80075ad8b 47407cfefdb57de7889898e1b638de6061874dca,,New Gazebo world model with dynamic obstacles and a map,New Gazebo a world and models for testing Navigation2 and training reinforcement learning agents.    - Dynamic obstacle Gazebo model (Randomly moving box)  - Empty room Gazebo model (20x20 meter empty room with walls)  - A gazebo world model with an empty room and 9 dynamic obstacles.
ros-planning/navigation2,1087,2019-08-30T17:48:48Z,2019-09-05T21:41:50Z,True,2019-09-05T21:41:50Z,240bcef79f72a759ca3d8bebb62fe83aa4aac7fb,5,9,5792216881899f483a4d422120ee6a1ed17a742a e8b588c8e8a9416bab53054de93f0c2248b7e80e 80d7a8697e0400fcd5c097cc1e1e776b5b762b49 c03c3296e959085bb9e4e991dfcd1f746579366f d544c68ecf91c02879933af7c745e6b5731fe383 a43fa2565a394c9cd654b4857caee3fe59ed7d96 78854bdb18f998cb4641c2798a51c54f73453455 41a487396b6058533e614df4e05c17331a1015c5 e18090ba0b64c803ba31a980b53ae27fc866298b,,Nav2 core,Navigation2 core header definition starting point.    Rather than trying to integrate all the APIs over in 1 shot  I think its better to lob out a potential starting API and adjusting it as we start porting resources like navfn  dwb  and recoveries over to it. I don't think the functions proposed will change  but potentially include additional overrides for different types or new functions to check/get information. Changes from this point on will attempt to maintain ABI compatibility  and this includes the base functionality + more than the predecessors.     This takes some of the experiences with nav_core2 and nav_core  adding in some of the lifecycle-y elements so that each plugin can distribute the setup tasks into iterating over the plugins.    I intentionally failed to include the local planner plugin so that it can be included from the other PR on this topic (which hopefully doesnt use nav_2d_msgs).     Other plugins I think we should have  - Bt plugins  - Lifecycle  I don't have a concrete example of how it could be useful  but something to think about  - local planner  obviously
ros-planning/navigation2,1045,2019-08-19T19:26:06Z,2019-09-20T20:36:12Z,True,2019-09-20T20:36:12Z,ea0524fb6a75b9ab8f113556ff5d6e492fab6e0c,51,11,d2ecf9576c3218e1746a28fbe4ce9bdb88a89260 d81be902e02de5567b168b9ba3de1b7426f58d08 cdd3723efb189e06eb2722fc91bd386ef0d60269 29b13a598358d871fd9324b6417a8fbfeb1dbfbc ac825943f39fa504d72533616f5b2f87f9c40261 ec7cf0a93f84a9c1e5a27a769b2d335a8f749519 538ccbcb994b33c43afb1ce02048e9ef7f0d41d5 39bc7f6ffe24ecc637b708146fef6865da0ffaed ea444f0c69be82777c34f90e4ff2060c3d6376b2 374440cdf7bd50d4a80f3add542fbd6933dfd34b 011305d4df3c8c0b72d762e78b2596fcc22a68ed,,Planner interface and action interface for local planners,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Adding plugin interface for local planners |  | ------ | ----------- |  | Ticket(s) this addresses   | #943  |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | gazebo simulation of turtlebot3 |    ---    ## Description of contribution in a few bullet points    * The UML diagrams for these changes are in #943   * Created an interface package in nav2_core. This has the interface classes for local planner  exceptions  and goal checker. This extracts the interface parts from the nav2_dwb_controller/dwb_core package.  * Local planner (dwb) is now a plugin to nav2_core  and other planners can be now added as plugins to this interface.  * Created ```nav2_controller```  which is the action interface for the local controllers. Local controller of choice can be defined by using a parameter. This gets rid of the nav2_dwb_controller/dwb_controller package. The executable is called ```controller_server```  * Changed from ```nav_2d_msgs``` to use 3D msgs from ```geometry_msgs```    ---    ## Future work that may be required in bullet points  * More testing with interface functionality  and other functions/classes that can be made part of the interface. E.g. GoalChecker and ProgressChecker plugins  
ros-planning/navigation2,1052,2019-08-21T23:02:35Z,2019-09-18T19:56:00Z,False,none,66952090dc83231872273188b232b246c61fc1ac,104,15,f71b6c7e16e7d2eaf7408cd24b9a78ade457219c 30363cbda2f601bf3b306e3bca587d2960479a21 bdbde4684917a1fbdb338746a497ded27b1aa438 db07d4a438149a7219b4e673713bcc671c29b2cd 2b73e09e61d32d3909d4867d660118cd05743c47 35c9568cc7bfc116137a2af93b4188d4b18f15bc 62f452e6d411e92aec11cab961233fc2ab2fd7d9 1190c148e3e2f583735a7a45904d130baffaa1ed 6671fe10e99f018ac5c706a4ef0602eee1712573 bb3bfee1a71c245c3ebc4a0c832961d6eb76113e 208b4d587a6082d47ba0b3bf2225778479881a1e af2ca4efa29ac365ce110ee6a5a362f7edabbf9f a23e7d58f3c7524ef54ab0ed841e3d43ea629939 cc0e1d44bc3d519355cf96b871ed3c9605fefb8f c04f51e01324cd624fa4e881ed0ee67e93976096,documentation,Migrate docs to sphinx template on Github Pages,## Description of contribution in a few bullet points    * Restructure docs as a read-the-docs themed site and publish to github pages.    **NOTE:**    I'd start the review by going to https://ros-planning.github.io/navigation2/ and looking over the docs to get a feel for what this looks like.     If you aren't already familiar with Sphinx and Restructured Text  review the docs documentation at https://ros-planning.github.io/navigation2/contribute/doc_guidelines.html and https://ros-planning.github.io/navigation2/howtos/docs/index.html.    You can review the actual files changed  but most of it falls into the following categories:  1. Import of template from OTC-TCS team.  2. Conversion of existing markdown files to RST.  3. Moving files around.    I avoided making much in the way of content change in this PR.  
ros-planning/navigation2,906,2019-07-02T23:55:53Z,2019-08-29T22:11:08Z,False,none,1dcdb8228d77d09e13a01134d1c1d90d68f13939,21,2,dda609c9ddc3a7a5eb18b077c3b94f62bae99858 7d06023a8511f8aa65ba383b0682dcb1afcef966,,Organize and refactor nav2_util client code,This PR organizes the service clients in `nav2_util` and creates a simple subscriber class.    ## Description of contribution in a few bullet points  - create include directory `nav2_clients`  - create service clients for `ClearAroundCostmapServiceClient` and `ClearExceptCostmapServiceClient`  - adds `clearAroundCostmapServiceRequest` and `clearExceptCostmapServiceRequest` to `NavigateToPoseBehaviorTree`  - creates `SimpleSubscriber` of which now `CostmapSubscriber` and `FootprintSubscriber` derive  ---    ## Future work that may be required in bullet points  - Organize dependencies of client libraries
ros-planning/navigation2,744,2019-05-21T22:39:28Z,2019-08-29T22:39:42Z,False,none,b71d53412e14875aea81ea8db77abcabd9253ad4,14,4,71175c8e7de45651cb7c1d7c937bb2dbe74d3769 85f9e700f3d3afacc0b8dc3606a3a6f9d41c6514 aea74079d66ebf625158669574bfc9d6be630607 ed5d9bbd297d9a356c13a5b63ecc016caa97bbb9,,Safety Monitor,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | A few  I'll look up later :-) |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | none  yet |    ---    ## Description of contribution in a few bullet points    * Implementation of a sensor-level safety monitor for use in the stack  * Simple API to include in the main action server  or add in any `while` loop for an action  * Parameter example of how to fully use  * All typical safety sensors are included: laser  sonar  bump sensors  * Example in readme  * optional timeouts for sensors not publishing or in collision region for too long to make sure robot doesnt dead lock  * May work with any number of sensors (0-N lasers  sonars  and bump sensors)  ---    ## Future work that may be required in bullet points    * Support multiple safety or collision regions for laser  * Support more sensors (not sure what they'd be?)  * Configs for safety zones and ranges per sensor vs. per instance    ---    This PR hasn't been largely tested  this is going up here to start a discussion about where it best belongs. It resolves different conversations we've had about using the laser for special things  now this should replace and self contain all the information needed to use a typical safety sensor for at-rate collision or slow down region detection.     It implements on the laser level collision detection like [this](https://cdn.sick.com/media/content/hac/he7/9692847570974.jpg)  sonar/range via looking at some minimum range  and collision sensor by  well  collisions.
ros-planning/navigation2,1411,2019-12-05T01:03:23Z,2019-12-05T19:12:05Z,True,2019-12-05T19:12:05Z,59f9637c777f0d9b4e305715813aac67cf842305,2,1,8d7dcdec0e7e450cdea4af787d34039aaa3885e9,1 - High,Fix launching multiple gzclient instances,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1410 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Gazebo simulation of TB3 |    ---    ## Description of contribution in a few bullet points    Fixes #1410  the problem is here:    https://github.com/ros-planning/navigation2/blob/c2d93596084968376ccb3d6213621f1cf59fe7b5/nav2_bringup/bringup/launch/nav2_tb3_simulation_launch.py#L138-L141    Where the `and` operation over two conditions is not well defined.
ros-planning/navigation2,1414,2019-12-05T18:50:30Z,2019-12-05T19:13:58Z,False,none,8ce7997ec0682707f939782b8b48df28c9f0ec3d,1,1,6922305590de7aaead503c12d71a2fa6e8274151,,Read controller plugin parameters,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 in Gazebot |    ---    ## Description of contribution in a few bullet points    * We declared the controller plugin parameters but never read them. This reads them as well.
ros-planning/navigation2,1388,2019-11-23T00:16:12Z,2019-12-05T19:19:44Z,True,2019-12-05T19:19:44Z,54df1fa413f15104adc0441246f5a6deb2293efa,9,9,dce13f805908dc96fd4828a8c171926112e6e692 a55cb3aa1a73514f36d73d4202051662b6a414e6 0edc6d4db6ac76a733ac3eee06174d07b988d738 9a1acf90186ca0b855e04278a1c7f5ea2a0a1e34 4920a17bc2c25c554e0ca70ad4ea5eb6a86de7fc d27ed70e0408c978f25abf5d06ec5616389ea111 8e4c38b8936345795ce5ec62d2d2ed7255b904cb 84270336909bf67ab3cee59e7ab92e99d4388cda abe8f10cc1e486a29f7d91966641753a893ecb59,,Be able to invoke a single recovery action at a time,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (fixes: #1206 ) |  | Primary OS tested on | (Ubuntu  18.04) |  | Robotic platform tested on | (gazebo simulation) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    - Addressed #1206 by adding the round-robin node that Mike introduced.  - Round Robin is a custom control type node that can have many children.  If the child returns RUNNING  it will tick the same child until it returns SUCCESS or FAILURE.  If the child returns either SUCCESS or FAILURE the node will tick its next child. Once the node reaches the last child  it will restart ticking from the first child.    - Fixed a bug in the planner server. If there is no path  it should throw an exception.  - Note: the new tree is not the default tree.      ---  
ros-planning/navigation2,1365,2019-11-16T22:19:51Z,2019-12-05T21:51:37Z,True,2019-12-05T21:51:36Z,c12dffb682dd725fff5e1ecb1c17404906dd626e,4,3,480f7765caf2d8b4ba488dc4151c3c3ca928846c c00dd374c84e309162601acd65d20219cc1135cb 2af4db21d491ba92771706850d0272942d98760a,,allow for remapping of the server name for the follow path or compute ,… control effort for remote or multiple servers    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1300 |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points  * Allowing a new server name other than `ComputePathToPose` or `FollowPath` so remote or multiple plugin servers can exist    ---    ## Future work that may be required in bullet points    * if the defaults of the BT library works  this could be ALOT cleaner. The constructor wouldn't need to take in a `action_name` at all  the default could be `ComputePathToPose` or `FollowPath` and we just use the `getInput` method in the constructor to set the action server on bringup.  * Because this isn't the case  we're resetting the server to start a new one on bringup when the remap of the BT node is given. Since these are now plugins  I could argue this is a little unnecessary as they could just create a new BT `ComputePathToPosePluginv2` with a different string name  but this will let it be a XML tag change  
ros-planning/navigation2,1415,2019-12-05T19:44:55Z,2019-12-05T21:52:17Z,False,none,e3c2e98822594f5eedb34b48c178ff63210ccd38,4,3,63c503a6f6856cca55cfb0a9d8858cb9ed933619 dd9c68822c52625c685d386a0b290f3184493544 4440992274fe5636ab1c7c91bf6385825474407c,,BT action node try 2 with commits based on current master,
ros-planning/navigation2,1372,2019-11-19T19:45:29Z,2019-12-05T23:51:43Z,False,none,fc6dc8219761c68c22ce2bac49a46e0c5dbb1ffd,1,1,1d6a05782be02b30176acb37addf529aa4b13963,,Disable voxel layer,    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | workaround for #1363 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Gazebo TB3 |    ---    ## Description of contribution in a few bullet points    * Disables the voxel layer as a workaround for #1363 so we can do an Eloquent release.
ros-planning/navigation2,1418,2019-12-05T21:00:41Z,2019-12-06T18:16:56Z,True,2019-12-06T18:16:56Z,073b00759ab9885603f305da9ddee634bc2e0204,1,1,a7f39f764f1788374222be1f14b422a13d486964,CI,Fix docs_publish error if nothing to commit ,## Description of contribution in a few bullet points    * This fixes the doc_publish step in CI. It is currently failing if there are no updates to publish. The failure is harmless  but gives us another red X in CI.  * This PR makes the docs_publish step check whether there are actual changes before making the commit. if none  then it just returns.
ros-planning/navigation2,1303,2019-10-25T20:23:48Z,2019-12-06T21:37:03Z,True,2019-12-06T21:37:03Z,859843ff9b4b9d81beece1f52e17cf2a90330a49,11,15,85ec223455a8ef4038e6c108f9dc6782f57feb3d 9eb0151f7a8eedd181c2b93cbc774497397aa088 e6f6119366e1abbfb0984c48d26e106454c5b89f 3bead3b06c0d7f5d27d655f3bdf6bb12b484efe8 afc55d8026a8bccd8ba156a84030e9f424cd2abf 79a97d9c934c52371453d0cded85273f1fc98a51 203be30ceddbaab65eccf9e29540c9fa3e5b446f 802402380892d07e31939d893a13764f1b7a3d1f a1384d7e4b63f7368ddec02f57d1116ef087af76 c39e6e523724bf4480088dd7e0b6d3d254b54dbc 81e67f3b432e871a2c859309486e2eddf34f2743 9d04d078a406f681d6f3c4f14b93bacce20d304a 9824627978fee7fa12a23933c27cb0c8bda74b5c add1ffbd83c113a19fa6d142b1296a90ee1d3d6e 1f52a51f40c0b21b0d866b6597386bd83e79583c,,Add LoadMap service to map_server,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #239  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of turtlebot |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  Added a "LoadMap" service  which accepts a filename and loads the file into the server  Still To Do:    - [x] Return fail codes (marked as TODO in code)    - [x] Create a unit test    - [x] Update documentation    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1413,2019-12-05T16:17:15Z,2019-12-06T22:04:58Z,True,2019-12-06T22:04:58Z,577df8083b14e31f7a2c8d93f73888233a6aba39,6,7,e34006c7ab25c6b73ebb600b9b59a914e89b69f7 51337d698ad599ced5f33779bec69eab9be1a236 5dbb8b4abef9fc442a18b84ba915238135e8f3e6 0deab814794af741dccea3ee0679007aa4138934 203d051b54b4b47c37a2658353ed9603fecefcf3 03a8904ce8eeb573c12856628809cf41c20b2f65 3065b140533d283fbe6acb20f9bb5420634bc8be,,Remove simulation from updown test,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA (this is a simple test) |    ---    ## Description of contribution in a few bullet points   * This updates the updown test so that it can be used as a simple startup test on a robot to ensure the install has worked correctly   * removes the simulator from the launch file and use static tf publishers instead   * replaces launching components individually with launching the 'nav2_bringup' launch instead   * adds 'install' commands to the CMakelists files to install the launch file and maps folder  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    ## Future work that may be required in bullet points  This is not currently runnable through ctest  or enabled in CI. I **don't** think we need to / want to do that.   <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1423,2019-12-06T22:31:16Z,2019-12-06T22:34:16Z,False,none,142867a4f6ece8ae6c4e6ac627d1914ed10eb65b,4,1,2abf5fe82f082f3a2bd5a94eed1c0258d221d6f7,,Fixing minor issues on eloquent devel branch ,  ## Basic Info    ## Description of contribution in a few bullet points    * Testing the eloquent-devel branch shows a few minor issues:    - rosdeps in the base docker images are out of date. They don't reflect the new behavior tree release. I added a rosdep update call in the dockerfiles to address this.    - There's a missing dependency in the nav2_system_tests package.xml    - There is a linter failure in nav2_util.    These fixes need to be forward ported to master as well.
ros-planning/navigation2,1424,2019-12-06T22:48:26Z,2019-12-07T00:49:42Z,True,2019-12-07T00:49:42Z,a27f020ba1983cbbddad537124bab3846daa1edc,1,1,d117720c3f93bd5c5cbc2e3cba54533864f365f3,,Fixing linter failure in nav2_util on eloquent branch,## Basic Info    ## Description of contribution in a few bullet points    * Linter failure was introduced on the eloquent branch. This PR fixes it.
ros-planning/navigation2,1425,2019-12-06T22:51:24Z,2019-12-07T00:51:29Z,True,2019-12-07T00:51:29Z,a3eebcee0bb33509ac005808e53dc5d1cb36a6e8,3,2,500fb808d30929dce932a8a97fb0e9876959f662 16ff4a13569c605e0e3efc2f38b7cdc91a32b084,,Dependency test related fixes needed for eloquent release ,## Description of contribution in a few bullet points    * We need to update the docker builds that are used to test the release branch. They don't have up-to-date rosdep information in them  resulting in a failure to install the behavior tree package. I added a call to rosdep update into the build sequence  and that fixes the problem.    * The test found a missing dependency in the nav2_system_tests package. I've added that dependency as well.    This will need to be merged to eloquent in order to release.
ros-planning/navigation2,1356,2019-11-14T00:19:53Z,2019-12-09T22:19:29Z,True,2019-12-09T22:19:29Z,25981de1b5ce259c6497a5d983aa41b3a639f461,6,9,03b6acdc2a287cdde00ed9b79535f75b14c4b8c5 6b8cce8338d1f266b3e4eea2915e4bffed7f87d8 eb0fe446f1b0afd33e95ee7c815a3c602aea251c cfffc77665653f97dcd27ca2585b3316609ae2f6 cfa9317d3d3878919971f161f5d2d3f8db1cd299 65e2e275d15965b2e0cc60fc0d6b927bb87eba89 1cac98a8ae422f8e8376fa9ae86bd45abe9d48e8 5c9639a8aff82cf3cc210b442158d8a52fe65f1b b3d0e2af5422f68f8995c5b7f9fd027e88e335da,,Improvements to Simple Action Server,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #861 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Gazebo simulation of TB3 |    ---    ## Description of contribution in a few bullet points    Addressing #861 and partially #1344.    Improvements:  - Simplify usage by removing the need to terminate goals if the action was not successfully completed.  - Handle action server deactivation while the action is still running.  - Handle race condition between completing an action and receiving a preemption.    Improvements were mainly implemented by wrapping the action execution callback around a method that will terminate the goals if needed and re-run the callback if there are any pending handles. This addresses #861  i.e. if there is a pending preemption in DWB after returning from the callback  the server will re-run the callback with the preemption.       Adding unit tests for:    - Activate-Deactivate cycling including in the middle of execution.    - Preemption during goal execution    - Preemption race condition after the goal has been completed
ros-planning/navigation2,1426,2019-12-09T11:53:15Z,2019-12-09T22:52:20Z,True,2019-12-09T22:52:20Z,fc81f1b265744eb059a94cfba813b6e057ea5187,5,5,ebbf27be03ad530abbd905a99bbd7b27da404ec4 792a1ca9bc2867accb14dd6eea8c1dce83137099 faf0bf4470bcf5adced61b312669a9096057e16c 18cebef3fdbfe3135cafd20049758c6f3d0a35ec fce7f51126275c4e853a04def7f8f125a24b4a95,,Waypoint nav markers,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #803  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of Tally |    ---    ## Description of contribution in a few bullet points    * I added visualization markers to show the waypoints in the navigation waypoint mode    ---    ## Future work that may be required in bullet points    * I think we could use a .dae model (I used a road cone)  but I tried and I got some error opening the file. Maybe I could try again in the future
ros-planning/navigation2,1427,2019-12-09T23:04:26Z,2019-12-10T00:19:25Z,True,2019-12-10T00:19:24Z,3c736f87dfcbba029e92f2f40de332073aba742a,2,1,5bac366ca7365ab0e24438865f634a882dd2829a,0 - Critical,Fix build error,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | (add tickets here #1) | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  Fixing build error introduced by #1356.
ros-planning/navigation2,1394,2019-11-26T23:32:31Z,2019-12-11T18:39:04Z,True,2019-12-11T18:39:04Z,f4f6a11d533afed5ea19ede383c5c7c2bdfe9634,8,2,d388235c80eb39f34f6639735e298e84bdc14802 3e245d40e70980384ee621e70f762357c2bcc47c,,Remove the obsolete parameter use_dwa ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #1110 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 in Gazebo|    ---    ## Description of contribution in a few bullet points    * Removes the use_dwa parameter
ros-planning/navigation2,1419,2019-12-06T01:23:13Z,2019-12-11T23:00:12Z,True,2019-12-11T23:00:12Z,aa764eb9a24e8b1f4b979871c76721afdc81f442,3,2,941a9d01aeb9491e8281d00a727b91afedc3922b 11a00d7ed0cb804e495278ea28f399ce4db31c9d,,fixes changes for nav2 systems test models and maps,- Changed the empty_room.yaml a file. It was a symbolic link before.  - Directory and model name changes for tb3 with depth camera.   - Increased the depth camera fps from 1 to 15  
ros-planning/navigation2,1431,2019-12-11T02:14:14Z,2019-12-12T21:05:36Z,True,2019-12-12T21:05:36Z,d944a84c330e3fa75b7de805b6c6e97aac4602d8,6,2,734138354145e98ea3fc27cb87255be476509927 08f508a0ea324e1dd07b987a85a41686a1e8c9c2,,Fix costmap on_cleanup issues eloquent devel ,    The `nav2_system_tests` were failing in large part due to the parameter callbacks being called erroneously during the `on_cleanup` of the `Costmap2DROS` object. It is a pattern that the `reset` of costmap plugins will reset/deactivate and also re-initialize. In this PR I'm maintaining that behavior since I believe that is intended for use when clearing the costmap during run-time  but here I'm  removing the `resetLayers` inside of `on_cleanup`  especially since deleting the `layered_costmap` will destroy the plugins anyway. Also  since the parameters are being `declare_if_not_declared`  there's no real need to undeclare the parameters when resetting.      ## Future work that may be required in bullet points  - cleanup plugin activate/deactivate/reset logic in alignment with lifecycle transitions  
ros-planning/navigation2,1430,2019-12-10T22:21:14Z,2019-12-12T21:09:28Z,True,2019-12-12T21:09:28Z,cc006c8b651f6b82dc9a20760592eb79b2cc64b5,1,1,27374df6210d6802571fb0ac2e4270c67920f7f1,,Check if future is valid in action server deactivate,If the action server is deactivated before it has accepted its first action goal request  then the future does not have a state associated with it since it was never initialized with the async thread. In this PR  I'm checking that the future is valid in the `deactivate` call with the assumption that there has yet to be a goal request accepted.     ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1429  |  | Primary OS tested on | Ubuntu 18.04 |        
ros-planning/navigation2,1432,2019-12-11T23:09:36Z,2019-12-12T21:27:32Z,True,2019-12-12T21:27:32Z,f903ffb06755a8854d5d2b097960bc30048838b8,2,1,442a8f887e7e6e8988af3f959aaf01b928e9dc86,,Clear controller and planner map on_cleanup,This PR fixes bugs in the `controller_server` and `planner_server` where upon a reset/startup of the stack  the plugins are not being reassigned into the map since the keys still exist on the map. I think it makes better sense to clear all the plugins in the map when cleaning up. After this PR and #1430  the stack should be able to successfully reset and startup.       
ros-planning/navigation2,1428,2019-12-10T19:16:22Z,2019-12-12T22:38:26Z,True,2019-12-12T22:38:26Z,c6d98d99c1c018c5d3e0dc2bf1105b10066639e9,16,10,cd2129c5a79977b0ab25fa53df490f4d11880c22 4860bb65f6674c1b0bdb5d1f89088f7e6a0ee7f8 fdd601abafe4412bd4b1aaa0c448375ffe523425 67b81b2e5978c63f74e5a340a3f3531f8d4b00fd 297fc60c27220a3248c30a2ae0907ce80037b18c 0c4f3b19bc7fa310721c8e34cec3b7f1cf601823 9e8ba529efb9030cf2c5fb224290e96d5f2ce055 2ce3e652b7e5906f895ef24d5fb078b365c4aedd 731ec2c5c04763430c8a0e0cc0229dbdf0119722 580a4190d7c75cc0e3d9dd33876317f5183cfa75,documentation,convert navigation2 tutorials to rst format for github pages,Manually converted the following tutorials to rst format.      - Navigation2 on a Real Turtlebot 3    - Navigation2 with Turtlebot 3 in Gazebo    Copied the doc images to sphinx_doc directory.    Changes in PR #1393 may affect this PR. (doc tree and links etc)
ros-planning/navigation2,1435,2019-12-12T20:30:32Z,2019-12-12T22:49:38Z,True,2019-12-12T22:49:38Z,a935949af3e64892d0c879c1bfcbf860b77ed41b,44,32,9192f562c34bbe7002f03d5a809211cc785a6849 0bcb98eff99e192e6dab32b425ada4411b4324c7 c6f5c6eb33781fb6c4edc4cd8a585e16bab32c69 64d5bda4ad4bcb68836e14b9a7f01223b27b47c4 c401823dffb9bb336cf65d657b2697c2e00fb0c5 5d150c299ad7ed41fb5c897d241771353ed5a7cc 77c6d59a2b4dbafaa8a9b3351688589c10dcc2ea 148f305b1ee4cd9b8d78d743792c7d20bfff488e d5df26a098ea54d9af0c1055c84da9b2d4332e6c ceab4111ff10fc52f04c1a0745a4fe0b8ca1808d 8ac78baeb7b660c78254374282282f3af4e83a4f 677d6a6c219dc845b3b5f95b2aed70f76e585ac0 1003d4acfb6926fa98d9b4c92b27c3da95fa17e7 9fc4ab84356fe908ed74fbf88214137a57e0bad9 dd26cf5e5f1d7a11a94bf1d5580aa970008adcfe 4a0a0230f22bbcfcdc31726e4c1cf6be88b983bd cb6f7f20ce201f441baa830e1b4035ba4c6c932b 1925d20e59ba048f2d39720272ab52da7c61c31e 6d9bb1044728f63b9940488c1cee55e3877b5dc9 fe6f9271f0907115f31e2f238bae6f103197403d 3e5b9f4237651f568d6684566fd4724d597aa48a c4c9ff590aad9fc9e09d96bc5468f79417d9c4df 6574bdc557135eb37b4b288be0c934805572aa5f c010b51c22ea280bad1620ccd0d2d125a63a5a76 4d07c4c75624d6ba8593a0bb4cb6d19cb2cdba19 fcb222d283b14e231a5960042ce3872f792fe57a a022c0f9ad8349f7fd9502ac02b840dc2c95cb08 e93a5006c6503060b1415846b22b178bfac4a97b 61ab7c53db460b505f27f8f370568cb93ad5d6bc de3a30aae67fcead720b0d387c3e33a7495da44a 2caaad7c509212cf4fe8ecb7e7cafbaae8e7853b d6c8d2865b92b5dcfa5d68fec9e0888d6b364d6d,,Eloquent release candidate,I'd still like to add #1412 if there is time. However please start testing.
ros-planning/navigation2,1412,2019-12-05T02:34:44Z,2019-12-12T23:57:11Z,True,2019-12-12T23:57:11Z,f2c896d391bd4923ed201b32519015cbe2993803,8,9,4bf60238010e2a39315a864e1c6ae87539d9b430 bf1f60534f5fe4aa42cdc5aecad1992241966ef0 9810848e0c9315318f33abdf85343d3325c81b91 71604c0bbc0879c4c07e8e86bf61ceff68a9b264 c32808820ba8c8a6dfa779e87c46f7be4317c9f1 36ee2e5d236304b16aeced258dfe3700c358931f 25b367ae25dc7d0124347022fde7bdb568bca486 917a6708b51da03102336fc6ffe51955173451c2 3552e9c0467ef9469f04d99abc4ce50c31ad26a5,1 - High,fix for 1363 use clearMap instead of reset to clear costmaps,- This PR is a fix for #1363.   - Created clearMap function for each layer  - Use clearMap() instead of reset() to clear the costmaps because reset is costly since it does so many unnecessary stuff
ros-planning/navigation2,1392,2019-11-26T21:29:52Z,2019-12-13T00:53:32Z,True,2019-12-13T00:53:31Z,b6cf82719ad028255c9189ba4078a1f7dd270499,3,4,ac81eb02e81526ff3b7a0e7411671f20bc7cc458 8820e6d3f94269cc5faa94249788c1c4e888d6a3 402713780e85856f34e6d4de77c516a2c9417ab2 4ab25a9792dc8a442d443144e831f5b648407189,,nav2_lifecycle_manager documentation,## Basic Info  Added nav2_lifecycle_manager documentation.  Addressed #1317     
ros-planning/navigation2,1416,2019-12-05T20:03:34Z,2019-12-05T20:22:01Z,False,none,ca98242b13f3b81616b84cc88ddc2a8140039f1f,14,4,7829e4948e5cb2597faacec187a4ec6c034fe06e 8cd8522ec40c609025ed59549127e1cbda107e8e cecc0d7e6c09bfba84c04e47c25c73d3185c57b3 424ca58ab52d8a7078cb652a814385e35bf0cf1f,,Revert 1370 dynamic params param subscriber,Back out #1370. It seems to be causing test failures on master. This PR is to check if reverting fixes the problem.
ros-planning/navigation2,1437,2019-12-13T18:19:02Z,2019-12-13T18:19:13Z,True,2019-12-13T18:19:13Z,f6defdbb70a2419e8585ac59ba09a0cdf1c1fe4e,31,1,939e3f64ad301dfa724ef94a6af0e1f1bfdac7fa,,bumping master to 0 3 0,
ros-planning/navigation2,1327,2019-11-05T11:22:39Z,2019-11-15T00:55:25Z,False,none,3e11014200a7a793aee8fe7814c5ab0156c29631,29,2,f8b628b4c2885721f0f03f27a8d123af3659949f b625f064dc4558287b1d2783892c16fb755a0ebe,nav2_wg,Navigation following a set of waypoints,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #803 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of turtlebot3) |    ---    ## Description of contribution in a few bullet points    * I added multi waypoint navigation.   * NavigateToPose action changed to NavigateToPoses  where the request is a path. If the path contains a single pose  it works in the same way as NavigateToPose  but it is more general.  * I added a button to rviz plugin to test the functionality.  * Video with the result in https://youtu.be/a9sD2xlZCek    ---    ## Future work that may be required in bullet points    * Finishing passing the tests  if you feel adequate this approach  
ros-planning/navigation2,1443,2019-12-17T08:38:32Z,2019-12-17T16:34:05Z,True,2019-12-17T16:34:05Z,fd6545edbea59f8a64bb233dc9c04a54fec6c06a,1,1,1fcda77bba9f9b9da6a88954c9099fa70d42831e,,Fix minor typo in tunable params rst,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    Minor typo fix in `/sphinx_doc/howtos/tunning/params/tunable-params.rst`.
ros-planning/navigation2,1441,2019-12-16T21:42:44Z,2019-12-17T16:34:48Z,True,2019-12-17T16:34:48Z,5733c71ea1c0dcef1882807c54f01989fb597d4b,14,1,414c106e618b4307e2db2b1573692b2796872678,,remove extraneous md docs,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1440  |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * remove gazebo / real robot tutorials in md files from the website    ---  
ros-planning/navigation2,1444,2019-12-17T12:58:42Z,2019-12-17T21:20:29Z,True,2019-12-17T21:20:29Z,a71ea592ca1d32aab300e180a298eb0eefd0fb72,1,1,fcc5bb88a5bc89c1253c490b5b451abf8d8ae516,,initialized member variable root_key with default value,A default value of None is not given to __root_key in the RewrittenYaml class and will cause it to throw an exception if root_key is None. This PR initializes __root_key with None to avoid this exception.  
ros-planning/navigation2,1442,2019-12-16T23:03:39Z,2019-12-18T23:03:18Z,True,2019-12-18T23:03:18Z,416b5f9cbf0f3f6b8860721bf81f9107a57e658c,3,6,a135090eb02183da3fe7a8cd1e2d8ed201def04c f0ff6fd61d7cdbafebfd1c242b559ecb5270cde0 1f1430659f7bb4a4441b918d8bea9f8c5465bf91 beef08cca75af02118579db5301f54eacf727b6d ee5c0aa1166815db9e0872abe4de164bf67a4068 5e68ed2020d1c8020bda335b7a31d6421cf3a1b2,,adding STVL documentation,Adding documentation about how to switch out costmap 2d plugins  with the example being the newly ported STVL https://github.com/SteveMacenski/spatio_temporal_voxel_layer available in Dashing and Eloquent.    The goal of this is to A) give some explanation in general about how to use plugins  B) highlight STVL as an option in Navigation2 and ROS2  C) learn rst.    I followed rst examples in the repo and I found online  so let me know if you find issues. The youtube link is wrong (its the real-robot video you have) but will be updated soon as I can get youtube to upload..
ros-planning/navigation2,1448,2019-12-18T22:14:39Z,2019-12-19T00:42:09Z,True,2019-12-19T00:42:09Z,36b207ad4776487fa913d1799dec6b3a7f4d13a4,5,1,5d1115f6346971dc757bb9fd9844f37c7ba2d1e0,,Disable boost includes in packages that use pluginlib,They aren't needed in ROS2 and cause the official build to break.    See http://build.ros2.org/job/Ebin_uB64__nav2_recoveries__ubuntu_bionic_amd64__binary/1/console for an example of the failure.
ros-planning/navigation2,1446,2019-12-17T19:33:30Z,2019-12-19T23:13:40Z,True,2019-12-19T23:13:40Z,2873bfc3468a25a47483f22d17a232a83355dfc6,7,3,e2bab8a41eba2e5b6d488994ba41851af2814d30 fc4e4aeb9278ae82104e105e508316dbb7667010 fa941cfd5574712d0194f66a3a8faba7bb4d1573,,Adding support for multi robot bringup with actual hardware ,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1366 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Gazebo simulation of TB3 |    ---    ## Description of contribution in a few bullet points    Mainly making changes to `nav2_bringup_launch` so users can apply a namespace to the navstack  for example  `/navigation`  `/robot1/navigation`  etc.  by default the namespace is empty.    Removed pushing a namespace from multi-robot launch  instead passing the namespace arguments to the bringup.    Lastly  adding a namespace rviz launch that users can call separately when running on actual hardware.    Compare to #1398  which introduces a separate namespace bringup file.    ---    ## Future work that may be required in bullet points    * Update documentation
ros-planning/navigation2,1445,2019-12-17T18:58:58Z,2019-12-19T23:20:18Z,True,2019-12-19T23:20:18Z,ea42a7d670ad80d03c4612c92bb4160665f072f8,3,3,56ee7673b8b6203303c2e8598d91343dae2398ab 18405901de60bc185039f235cf200eb5d20d688e 0bc9881df95759a8227a5db240462c567043f730,,adding a local copy of the turtlebot URDF to stop the need for general testing and the turtlebot repo,Moved from #1438.    Basically  we don't need the turtlebot repo or workspace at all for simulation  expect for the URDF. That keeps causing me personally trouble when I have a separate workspace but more generally I think if we're going to include a world file  rviz config  launch files  etc that are self contained  we should just throw this in there as well.    Also in enabling the depth camera  we had to make some modifications to the turtlebot URDF camera link and such  so we need to have now a separate file stored somewhere. Edit: (Maybe I buried the lead on that one)
ros-planning/navigation2,1438,2019-12-13T21:24:25Z,2020-01-11T07:11:30Z,True,2020-01-11T07:11:30Z,ba6f171332648a909a25d1790cd2a7927727b885,7,10,51b9d6cfbc550c08d097411e7f825cea5d8ddd11 5ca0a69646779bc6fb4e1e6d7898e3e829ef5a65 08c41cb60574ec498e3413e2f31e1d6d6fb9aa1a e3ee2da2d5a274b52d32fcdf7e270567ca1093d0 ede21a80470a7126a1a1c1de1e94477ef683aea1 6f9db1a05f2791ab91d8ffcdc5722617ddff64d2 6a16cfde3c50078bb1f2bcda75b6288986ad8b53 32a457a38a5ee3b768fe405a0e688907ddef10fd 80b78f755846d20eaed9934f03f5b27d5aa39dfd b62e7432f7fad957bb032da9f77eac78b1be97cd,,including install forgotten costmap 2d cloud publisher and removing lifecycle nodes from debug instruments,Somehow we missed the install rule for the cloud publisher.    How were folks visualizing the voxel layer cloud to know how it works? (serious question)    There's also no reason for the marker or cloud publisher to be lifecycle  they're just quick scripts taking a voxelgrid message and converting types for rviz visualization (or maybe we should make an rviz plugin that does that for you in the application?).     Closer to fully describe parameters in param file  especially ones that are really important to have correct. Included TB3 URDF needed for depth processing. Turtlebot ws no longer required if we just have this. 
ros-planning/navigation2,1454,2019-12-25T04:10:19Z,2020-01-11T07:11:46Z,True,2020-01-11T07:11:46Z,70bf38e7fb6d51862882ac85a9c5e26d9c2ea4f8,2,3,e0ca12ac1ad21935a80b5944cb020e6a25430399 ca0697d0042ff46fb2441f69dcbbd89fc3ca6f0d 7d7e64e503bdf93c2a519d1a207b227a3f96e31a,enhancement,Use arrow markers for waypoints instead of circles,Using arrows instead of circles to shows the user robot's target pose (location and orientation)    This PR is a result of the conversation that I had with @yathartha3 a few weeks ago about how to use way point markers in a more efficient way.    ![arrow](https://user-images.githubusercontent.com/12270197/71431546-4d725380-2687-11ea-9ab5-772e99573e79.png)    PS: I guess I should have opened an issue about this first :)
ros-planning/navigation2,1434,2019-12-12T20:20:12Z,2020-01-11T07:21:31Z,False,none,1d2e72b6b660bc2a8a6b86ddc1fbe6e9dfa751d8,2,3,72d1a5badac217e83c4547209a576848574dd6f7 71fad58b0347eeb8181fb20a06161465a682fbaa 3323f44b69e7cdaff08018cb50a89ba332dec774,bug@2 - Medium,fix for publishing to goal_pose topic,Publishing PoseStamped messages to /goal_pose topic was not working via CLI and RViz.    - rviz SetGoal tool default publishes to the /goal topic.       - changed it to /goal_pose in rviz file.    - Modified onGoalPoseReceived()      - to be able to send a goal to NavigateToPose action server  I followed the same method [here](https://github.com/ros-planning/navigation2/blob/aa764eb9a24e8b1f4b979871c76721afdc81f442/nav2_rviz_plugins/src/nav2_panel.cpp#L458)
ros-planning/navigation2,1457,2020-01-09T19:21:40Z,2020-01-14T01:01:39Z,True,2020-01-14T01:01:39Z,21562a204c4ae001f37ad32ff3c35956dc8d3d78,1,1,30333bc733100a2d82b7bc6711c31555dc73922c,, eloquent backport initialized member variable root_key with default value 1444 ,This backports #1444 to the `eloquent-devel` branch. I skipped the PR template since it's a trivial change.  
ros-planning/navigation2,1449,2019-12-19T18:41:38Z,2020-01-13T23:20:23Z,True,2020-01-13T23:20:23Z,c0f73ddef27eb84e2c96c5bffc34d08333303cc6,6,1,ac91affbab1ac2f8fba947305ada8c96e93d3946,, eloquent use remapping tag in urdf sdf,Signed-off-by: Mikael Arguedas <mikael.arguedas@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | None? |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | None  used simulated tb3 to test the implementation of the tag itself https://github.com/ros-simulation/gazebo_ros_pkgs/issues/991#issuecomment-544895833 |    ---    ## Description of contribution in a few bullet points    - This change is not valid for dashing and older.  - This is the result of a simple search/replace for all argument tags with the new `remapping` tag in SDF.  - Apologies for unrelated whitespace changes    I sanity checked the diff but haven't use this on actual hardware  assuming that the CI here will run all the tests on this change.   Ran tests locally but had failures  they didn't seem related to this change.    ## Alternative or follow-up solution    Pull the turtlebot3 SDF files from upstream once https://github.com/ROBOTIS-GIT/turtlebot3_simulations/pull/101 has been validated / merged
ros-planning/navigation2,1460,2020-01-13T22:44:13Z,2020-01-14T00:14:19Z,True,2020-01-14T00:14:19Z,1ec7b205ddee240273ac6ba5d218d050e8ab4f4c,1,1,c9ddb81cdd5296c6b81206bca7a964503b2e3f53,,Change stvl video link to embed type instead of watch ,  <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #1452  |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * Fixes displaying the STVL video in the docs.      *Change stvl video link to embed type instead of watch.      *You can get the youtube embed html by clicking the `share` button under the video and choosing the embed option.  
ros-planning/navigation2,1467,2020-01-14T23:49:25Z,2020-01-15T02:16:35Z,True,2020-01-15T02:16:35Z,1faa3425cf5a51c3e0d1102687555932663b499e,2,1,a98a2adec22a3a68bcd9604e66d13c5556c34195,,Use NavigateToPose action name everywhere ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1450 |  | ~Primary OS tested on~ |  |  | ~Robotic platform tested on~ |  |    Note: I don't have a platform at hand to test and system tests are failing for me  even on plain `eloquent-devel`.    ---    ## Description of contribution in a few bullet points    - Fixed inconsistent `NavigateToPose` action names (camel case vs. snake case).
ros-planning/navigation2,1469,2020-01-15T02:29:24Z,2020-01-15T20:30:55Z,True,2020-01-15T20:30:55Z,94283482d4e61ab323f5d9fb134efa5dbf3cc3b2,1,1,fd87b69d190def0bcd14804a96e45e23e52ee024,,Fix getting started instructions,The documentation was incorrect - the launch file to use is `nav2_simulation_launch.py` for the dashing release    We still need to update for Eloquent  
ros-planning/navigation2,1393,2019-11-26T22:51:36Z,2020-01-15T21:57:03Z,True,2020-01-15T21:57:03Z,6fa310c1e3fc8fed5a291bb4f0fc3eea3648c7dc,7,4,128a10e9b5f6520f22a093475b8a9f7390ad268e 010c1b41e22c3c580f3d34b31647dafaa685a1a1 b45a2629361d9c47192b11ef7cf63adeba841be4 a2679d013763bec8f7260fc9c1e5be13dbe8b227,documentation,github pages for build instructions converted build md to build rst,Github pages version of PR #1368.    This PR only adds the build.rst file. The changes need to be published.    TODO: Break this doc into multiple pages.
ros-planning/navigation2,1422,2019-12-06T22:17:33Z,2020-01-15T22:21:40Z,True,2020-01-15T22:21:40Z,7097e6944c8617cccbf93286b0d61ff70b580518,8,5,1661549dbf2bd2acb1da9495f945ae73b1e9fe72 cf6aa5133876c7b6729697544547715af50d3d8c 4ea1b956c484fd0a10b1090cccedc500dbc5c934 1c5d5a6eeffe2a50e3c31760ef488e42a01bd203 06d2040be11d75538b180afb07d0d1c62b541bcb,,GH Pages docs for DWB,## Basic Info    ## Description of contribution in a few bullet points    * Documentation on the Controller Server and DWB parameters    ## Future Work    * Need to document the DWB plugin parameters  * Need to figure out what the **publish_cost_grid_pc** parameter does    **Link to the built docs**  https://7213-135363400-gh.circle-artifacts.com/0/html/howtos/configuration/index.html
ros-planning/navigation2,1471,2020-01-15T21:32:10Z,2020-01-16T01:58:39Z,True,2020-01-16T01:58:39Z,f798cc2167078d2ff162f02b0ccfa64a969a6e61,2,2,4fd68dec06d5f48528b6df59aae3fff0f78affef f6534fcb1e2cb2f07b9ecb0ed5e4f92a3275c95d,,Add README for Updown test,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1092  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  ---  Adds documentation for running the `updown` test.    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  Updown test is not run as part of CI  that could be added  but I think it's a low priority since it won't add coverage
ros-planning/navigation2,1398,2019-11-28T07:38:02Z,2020-01-16T15:57:50Z,False,none,b0b88841054c357e6a5515998b8f980cc36bca7c,1,1,d45155aa4ea53eb3ac3f71ab96376825c202e5ed,do not merge, WIP Add launch file to bringup nav2 with namespace,DO NOT MERGE    This change is to support multi robot system.    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1366  |  | Primary OS tested on | Ubuntu18.04 |  | Robotic platform tested on | TB3 hardware |    ---    ## Description of contribution in a few bullet points  * Create a bringup launch file with namespace support  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    ## Future work that may be required in bullet points  * Remove some hardcodings that still exists in the launch file. Need to extract the string from namespace arg and use it for param/rviz etc file selection.  * Reorg the launch files currently used for multi-robot simulation so that common files are used for multi-robot setup in simulation as well as for hardware.    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1473,2020-01-16T19:55:02Z,2020-01-16T21:19:19Z,True,2020-01-16T21:19:19Z,4cf60e9d342adf71bef5c0a60faa7c686c0f86fa,2,1,b65131fd26a49366fe8a537da7335424d847ec23,,Order of activate deactivate nodes in lifecycle manager,Signed-off-by: Francisco Martin Rico <fmrico@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1345 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of Tally |    ---    ## Description of contribution in a few bullet points    * I removed the need to pass a flag for performing the transition of nodes in reverse or normal order. As @orduno said in #1345  this was prone to errors.  * My PR removes the flag. The transition itself defines the order.  * I tested on gazebo with tb3. Nodes are activated in order and deactivated in reverse order when pausing.    ---    ## Future work that may be required in bullet points    
ros-planning/navigation2,1477,2020-01-22T05:47:53Z,2020-01-22T05:48:53Z,True,2020-01-22T05:48:53Z,2de5f1c336311457f2461fd075399b0322b84617,1,1,dbfb230ced0095841041e405d7f1c9963d23dd17,,fix map loading,Fixes #1470     ### Description of contribution in a few bullet points    Simply set the default value to an empty string as discussed in #1470.  Tested on simulation. Map loads and the robot is able to navigate.  
ros-planning/navigation2,1462,2020-01-14T00:22:59Z,2020-01-24T21:36:14Z,True,2020-01-24T21:36:14Z,0a060f6dc79f3378ef1c0bc3aab8e44e855817d6,1,3,6e3a426540a86bc9f3e579995dc07736afa4cf36 a68cd15ede2bb8f9ef39b362ba477e00b46a1f37 a910082a30c064898bc893da324538b835ec83c0,,made table for badges and added doxy info,Updated readme file.    @ruffsl I noticed on DockerHub the docker file it says its using is (https://hub.docker.com/r/rosplanning/navigation2/dockerfile) the dummy file  though I see from the `.dockerhub` I believe it shows it using the `Dockerfile` which is the "real" one. Can you confirm for me what its actually using and can we get rid of the dummy file?
ros-planning/navigation2,1476,2020-01-17T01:10:41Z,2020-01-27T04:37:11Z,True,2020-01-27T04:37:11Z,ee501b77768d181382ccddd3b9908dc1a5601625,9,5,f5367fb098d20a1375777028e5dc9fdf8f425a2f 35b44dafcd828edb3c19127654d094dd8e5360f8 b97779a77a470c4606108175411e5c6efb10e829 62530ad6b30b112b82051fe3d076c036df31a479 fb901358f7847444a696cdcc26f3af318a146e3f,,Make the nav2_common Node action use the launch_ros Node as super class,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #1474  fixes #1466 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 in Gazebo|    ---    ## Description of contribution in a few bullet points  * Rather than reimplement the launch_ros Node action  our custom class now derives from it.    
ros-planning/navigation2,1451,2019-12-20T17:26:21Z,2020-01-14T22:56:48Z,False,none,d26641598150aafc4b83b893028902c3fcdc6576,1,1,19d1f8e241794852c631d0ac1f339c31078ecf5e,,Restore correct NavigateToPose action name ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/1450 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Gazebo sim |    ---    ## Description of contribution in a few bullet points    * Fixed regression on `nav2_bt_navigator`  that was bringing up an action client with the wrong action server name. 
ros-planning/navigation2,1483,2020-01-31T07:01:03Z,2020-01-31T17:11:23Z,True,2020-01-31T17:11:23Z,942ea483863e3268023cb0cd504c93632fcbf155,3,1,97652a1f2a21276598cc265025e04ad60aea5903,, dashing backport store shared files in share PROJECT_NAME rather ,backports https://github.com/ros-planning/navigation2/pull/1481 to dashing     The other two CMakeLists didn't install anything into share/* in dashing.     I did another basic grep and didn't see any additional offenders.
ros-planning/navigation2,1482,2020-01-31T06:54:49Z,2020-01-31T17:10:38Z,True,2020-01-31T17:10:38Z,b02dd80de3241d211e9068c439821b9e7ae39646,5,1,7fc1207c152cb8777daf4ff7e77f3e5dac285399,, eloquent backport store shared files in share PROJECT_NAME rather ,backports https://github.com/ros-planning/navigation2/pull/1481 to eloquent
ros-planning/navigation2,1329,2019-11-06T08:01:19Z,2020-01-31T23:03:43Z,False,none,5cf5b7ac06224025550132428f005ddc110423b5,12,3,b3476eb644275775065225ac3dbfe770512a2f40 098f8c729b82e7ebbc6ca00f9505ec61be3381cd e11d7e17dd415d58ebca7872d9c3e717349b2359,,Provide behavior tree logging output on the console and a topic,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #589 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  TB3 in Gazebo |    ---    ## Description of contribution in a few bullet points    * The BT library provides a mechanism to log all node status changes. They provide an example to outputs to stdout. This PR creates two custom loggers and enables them in the behavior tree node. One logger outputs to the ROS console as RCLCPP_DEBUG messages and the other outputs the same data on the `behavior_tree_log` topic.  
ros-planning/navigation2,1464,2020-01-14T02:44:56Z,2020-01-31T23:29:21Z,True,2020-01-31T23:29:21Z,c6fa8dd6c3659c4ac64ee2161d84fba54bfd4d9c,13,10,b78badafd5fdc3860817490aa314bc867556e07a b51f0767a03f980fe47b610d380af000f2b9693b 939e628c7c93bc66ddfbee8fbc3bff30b2f26ebe 2346ad7409c4403b8545fa8592eea2ab5a6446dc 4ab19beb68c2b91beaffaad4b3a827031af090cf 064eaf2680eba5baab0203839e485e33cf7e632e 35922c6cbb70a3b359ef90cdc733bc84c3b19f4f 0c93549d4f3cf69cf327dc36ee244fc5be89ec0c 895388c614522bd05da089b91d595fb411e8c19d ba7110ed220134a7b466e288e45879ef557c8701,,Simplify bringup,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/1216 |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * Simplifying bringup. No need to declare a bunch of parameters the later launch files are going to declare and use  * Give the launch files control over their own node management. There's not really much reason to have 1 lifecycle manager globally when there's 2 main launch files that can maintain themselves (and now 1 list of each node)    Something I noticed though  and I see this on `master` so not related to this PR  is that I'm having problems reading in the parameters file right now. I'd like it if someone else were to run off master & tell me if they're having issues. If I just run out of the box  I get a load error for `declare_parameter` in `map_server` for `yaml_filename` because its not taking the override. Same thing for the bt navigator `plugin_lib_names` libraries  its taking the default `nav2_behavior_tree_nodes` which no longer exists (and that default was removed)    This has been happening to me on and off since Crystal and I've yet to be able to figure out why that is  but its worse right now than normal so I'm actually wondering if master is broken.    ## Future work    * the nav2 simulation launch files can have their excessive declarations removed as well
ros-planning/navigation2,1468,2020-01-15T01:10:10Z,2020-01-31T23:29:33Z,True,2020-01-31T23:29:32Z,a3e03443a2b70c1aeab60e92df51cc767876ce3b,34,10,6c4bd8913a6a7e705b336a64b578ec958b95a4d6 79c52b151b9c1a53f21d8414f25698669824693c 8fc3f59edef3aa37d527f4c4be973e322c0661bb 7eba1acadc9df5b27a871544034ec3b1b42abc15 ad57c40d47842ccf29d4ce3986ea07e2db490c6d b6a161d1a938d4912c9ac0e3cfce0e0c2c0d446a 647c0273323e209a1d232b4466880f98bf2afa85 948605a1a2d85301865a017f4a128fe842a00fe9 56953636bfdac37946cfaa5c8808616f1757f45e 9d25fdc1c52e148e351c05c552878644d5c87a43,,namespacing plugins for servers,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1314  |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * Namespace the plugins for controllers and planner plugins.      
ros-planning/navigation2,1487,2020-02-03T09:02:02Z,2020-02-04T08:23:46Z,False,none,f112b4c3a2d1d7fbb9f738a52d57d9feb6dffd46,1,2,68330b2aa73ed957efb4b1183a2b3d228e624726 d231bbaf8d2ce855cfd67a5ed67fac78c31f7f61,,Add ament_export_libraries to map_server,This Pr would allow one to derive from map_server lib in another package to add custom functionality.
ros-planning/navigation2,1488,2020-02-03T19:28:02Z,2020-02-04T23:37:01Z,True,2020-02-04T23:37:01Z,075208a23b50a4429406937412b2756738ed144e,7,8,3d04eceae4291201d488b1e307b8113b5724fdee 299fe0cecdfe5abd7886d826d5e1fe6af49cd145 08fa1a04fc6f55774868b57085cc19874c3bb65e 44ffaf536d6d8e8c794ca4ba5b4ab119e6b4009b 3b0d3a414aa4cafdda7009ea019c4c8ef7a9de86 4f884375a48ddb8fc6880bd175145de665bed38c b0b5a106a33ad5dd2db2fa0e8727efd303f88bb1 286bc9b812671d1eda1268eb17b52cecc1b86407,for review,Fix CI,This has been a game of whack-a-mole.     Fixing CI per #1475 and #1436     - [x] Action utils  - [x] Lifecycle manager  - [x] Recoveries  - [x] lint nav2 bringup (?)    I will deal with the smoke tests in another PR.    I "fixedish" the race conditions in some of the tests that were flaky. Calling the action server so quickly was unreliably handling the new goal and it was hanging forever on the `spin_until_future_is_complete` and the action server didn't even get the task to handle. That may be a bug to look into  but not today's problem. I filed a ticket https://github.com/ros-planning/navigation2/issues/1489  probably the result of #1356     The only failures left are system tests    
ros-planning/navigation2,1491,2020-02-04T08:31:37Z,2020-02-05T19:17:57Z,True,2020-02-05T19:17:57Z,b475c1f585419d1687c7a960574985add49f57e1,1,3,6c1ac5732e0afb24d75c93af5d86a28831c8b60e a1a167247ae32f58f7f0e104d592484d8a852bcb a8cbd808d1fe52e4ed39151bfb427a014858f7a7,,Add ament_export_libraries to map_server,This pr would allow one to derive from map_server lib in another package to add custom functionality.    
ros-planning/navigation2,1498,2020-02-05T21:34:10Z,2020-02-05T21:34:23Z,True,2020-02-05T21:34:23Z,2daeefc3feee5ff8c9a719f357ea742d3c527a63,1,1,3ff5d039b1572575059efc51d6671aa9677a28ef,,fix nav2 build farm badge,
ros-planning/navigation2,1502,2020-02-06T22:45:48Z,2020-02-06T22:47:18Z,True,2020-02-06T22:47:18Z,fea59ca8d349616ccd381c890d56149ccfe8b669,1,2,becac1cf66f5f78673f8443ce79450086eaf1448 983f2e5780995ae52a8e690b0bf89d175b3c3683,,Changing dockerhub from status to pull counter,Per https://github.com/ros-planning/navigation2/issues/1499  DockerHub is incorrectly reporting a failing status when it is building fine.    I've seen this problem in 5 projects and there's tickets filed with DockerHub that are being ignored widely. As a result  I'm going to replace the badge with something that's actually accurate  the pull pointer
ros-planning/navigation2,1494,2020-02-05T20:32:59Z,2020-02-06T22:49:53Z,True,2020-02-06T22:49:53Z,2e7548232288f24b119d8bd6dac0714acade35d1,2,2,f8b37fcfeccd8c5026e9633340293550673b35fb 20b7667a19504e694604f2fa3e591683887de61d,, website sprint include the structural diagram on the main page,Right now  there's no reference to this highlevel architectural diagram on the website. I'm adding it to the main root page so its front and center as the first introduction to the stack.
ros-planning/navigation2,1496,2020-02-05T20:47:40Z,2020-02-06T22:50:40Z,True,2020-02-06T22:50:40Z,f12d88aa5595da1b5778bbeef81d3a77c90c6c41,2,1,d28a98327e45cd1c13ab7d131d73610d4027b6cd,, website sprint remove the how it works tab from documentation,its empty and not likely to be filled in anytime in the medium term future
ros-planning/navigation2,1493,2020-02-05T20:28:51Z,2020-02-06T22:56:24Z,True,2020-02-06T22:56:23Z,6274dc74b27011d8d9ba6911fde00a8f6c747911,18,1,e7e6f11aefcd788bf01a721d65fbfed285b4139d,, website sprint move tutorials to root of website,Right now the tutorials are buried in "how tos"  I think this should be an immediately accessible tab on the root of the page
ros-planning/navigation2,1497,2020-02-05T21:05:18Z,2020-02-07T00:39:14Z,True,2020-02-07T00:39:14Z,33fc770cf612fa358b30367c9b36c593633a6838,4,4,c0f0a975292b1e39438b7609642ad068a5917ff2 209b385307d6dae09169b90ac7c8aad335349c91 e5d10d71704e6ce076f87bae390e8e0263ed9e55 a085017fddc4d1bc03d3ce730e5bb4520723754b,, website sprint Moving SLAM tutorial from docs to website,RST-ifying the markdown instructions to run slam. Also updated to use SLAM Toolbox as the new ROS2 supported default.    Note: when #1493 is merged  we need to move this over to the new directory as well   
ros-planning/navigation2,1503,2020-02-06T23:52:05Z,2020-02-07T00:59:20Z,True,2020-02-07T00:59:20Z,a0182cccf051ec97d19016063304d1ffa3ea503c,7,6,21e38c74c650ed5cda9931d47e32053209362f4b 91ed4aeee1da490d2e3025317b8ec3ce13128042 050f84572dcd9f6bd775678f2082d68c205e6ed5 e499392b283f7dc4254e967196f1e55423f5b6ad d7d0c3108a22acc664b341c061b3865b38abd359 67662f3fe5deecbf93e8cd80fe4dcf8bed74ca25,, website sprint adding new docker pages removing from readme and new icons for statuses,- Added docker how-to build guides  removed from readme  - Added readme icons for each package for building  dev  and source  - Added readme for doxygen     There is no loss of content  just reshuffling. If we're going to have a website  I want to drive traffic to it as the sole source of information
ros-planning/navigation2,1504,2020-02-07T00:21:21Z,2020-02-07T00:22:25Z,True,2020-02-07T00:22:24Z,9da863acd31994282828ec9b3aa7e619a45dae73,1,1,cfe00a692636956b8f984fcc5932f7167af8e8c0,, website sprint adding exact resolution of the architectural diagram to not be distorted on website,
ros-planning/navigation2,1507,2020-02-07T05:15:36Z,2020-02-07T05:34:17Z,True,2020-02-07T05:34:17Z,8793b3a806b51f21bc88526e0896e332bffc3e7d,35,2,f1267b86c0b3da18149ff9f6be673a8aa2c3b97a 2fabd6956ea4b98f88dca345cf8e51251a476b82,,adding bringup to system tests package xml,Intermediate step trying to resolve #1506 
ros-planning/navigation2,1456,2020-01-07T09:09:05Z,2020-01-13T21:18:06Z,True,2020-01-13T21:18:06Z,124663a8b7def5cad403a97223c0483bb6173877,2,2,7b20cedfc172d8079629b538036d19babf4c2e47 3ff7705df8a03d8dc6443f4b353a004154f28263,,Change robot speed at runtime,Signed-off-by: Francisco Martin Rico <fmrico@gmail.com>  ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1455 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of Tally |    ---    ## Description of contribution in a few bullet points    * I added the option of changing the speed of the robot at runtime. Actually  this PR lets to change any parameter of the DWB controller    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1510,2020-02-07T20:59:04Z,2020-02-07T21:04:44Z,True,2020-02-07T21:04:44Z,51943aa3e1f6928674201f3efb3017c7bc68293e,1,1,6c7140ec88f08579ad46246aa029f37a377f467d,,Remove OpenSplice test jobs,As support for OpenSplice has been discontinued from ROS Foxy onwards.  https://github.com/ros2/rmw_implementation/pull/79
ros-planning/navigation2,1509,2020-02-07T06:05:53Z,2020-02-10T17:45:59Z,True,2020-02-10T17:45:58Z,7e284a3f02a1b889cadfb6ab402a8278337cf040,108,20,b1773f538875f5b3ec8e262fbd8239610b8087eb 68dbb8359ba9a02817c5e6f293e0788c3541727d 58466d8e38118ebed73f1e733d758603adc428a2 8775d6f1f4e93d6a6a5a3bfaec6ac3841f0b7daf a98e8e1baeb4c1a1c866ba14ee6198a95833487a 54cf4db2ffc99fcf2b93f81c3a1d2a7ad5d00d2c 0aae38221e08937796ab29bf5b4cb53f32398894 c4c6c521a9dfac2460c9fa68a4af57ba3061b279 7f24c525daa13ec2be625974b37a986829b38583 8d416b577bacefe1cf99d4b748953489021e7919 9ff0ab5c74096ba6d84daf66ad8509357658273a e8da2c56af029fb2aa0e0c39ab4b8caba4dfadab ac6421ea45031f164df276b516e6504db9c3d884 c74ec138807184386eedfda1162c7ada55c2b9be 8330b3f2ba4980c5684150be80545039cf5bd20b e3c2ff1939fe2566d7a0ce8516bca502f69c9a05 6090cafffdf695758b5be75c56848931380c11fe 8a872e7724d8ba0455053dc12eb0fe0ea8cc43be a73c20e114a739bc5fafe9ea8786e007789501f6 058183973abca6d6b9db80b6ec1af27ca78a629d,,Fixing system tests in CI,#1475 #1341 Working through fixing the CI tests for system tests. This is going to probably be a long task but need to see how the workers react to changes.     - [x] recoveries with 0% failure rate  - [x] action tests with 0% failure rate (but now reduced to ~25% and on a deterministic place in the last test). Failures are from https://github.com/ros2/rclcpp/issues/861  outside our scope as far as this PR is concerned.  - [x] system tests: planning  - [x] system tests: localization  - [x] system tests: bt nav with planners  - [x] system tests: bt nav with dynamic obj  - [x] system tests: multirobbot  - [x] system tests: updown  - [x] system tests: waypoint follower  - [x] crazy new linting for foxy  - [x] get CI to work with now functioning test suite    - [ ] CI working with planner system tests    All tests have a >90% success rate  except where mentioned above and an upstream documented issue. Per #1508  multirobot tests are too flaky for CI and it can be shown to work locally. I'm going to comment it out  while working  to speed up CI and increase liability as this is not a core feature.   
ros-planning/navigation2,1505,2020-02-07T02:01:57Z,2020-02-10T17:46:56Z,True,2020-02-10T17:46:56Z,aaa97902c1e1bb9a509c4ee0d88b880afb528f20,58,3,2ac4fcd1efe16bd8c3eeb1022d22176b53ca953b 0a708b79360a5e34a485c045d879e5f8495aff79 96042a83811b5cb319be9f9e861c26ae249ac0b6,, website sprint new description for website with overview moving all to the root,- More detailed navigation description  - Moved all into root  we don't have that much and the organization is over kill  - removed templates that have to do with sphinx but not navigation  - Added a little more context on index pages  - Removed the gazebo simulation tutorial  as it is largely  the same as the getting started page. I added a little more context to that and replaced it. 
ros-planning/navigation2,1513,2020-02-10T21:29:15Z,2020-02-10T21:29:47Z,True,2020-02-10T21:29:47Z,7a4c2723e15a8f764ded8a05fd6cdb3ed8858497,1,1,cf599109a743381a2f897aca8db41c48833acea1,,adding hyperlinks to website in readme,
ros-planning/navigation2,1322,2019-10-31T21:29:12Z,2020-02-11T16:42:06Z,False,none,6bc025438f2d489dc842ed52c60c3c5728c84534,4,1,c177362569b850704957929f3dc8d5cd4a892f75,,Create BT for each navigation fixes 1285 ,Rather than trying to re-use the behavior tree  create the behavior tree each time NavigateToPose is called. This avoids some problems in the BT library when using CoroActionNodes (coroutines).
ros-planning/navigation2,1515,2020-02-11T16:06:08Z,2020-02-11T17:01:12Z,True,2020-02-11T17:01:12Z,2a37b51aa20c2f5e6acaa40164be338d46c5967e,4,1,d1e3512d2e0ef817101e20fd766e87dc62f98579,,cherry picking mjeronimo fix_bt_crash_after_reset,This is https://github.com/ros-planning/navigation2/pull/1322 targeting head of master.     Like that ticket says      > Rather than trying to re-use the behavior tree  create the behavior tree each time NavigateToPose is called. This avoids some problems in the BT library when using CoroActionNodes (coroutines).      should fix   https://github.com/ros-planning/navigation2/issues/1285  and  https://github.com/ros-planning/navigation2/issues/1439    Recreation of the tree is taking 200-300ms in my test environment. This delay directly adds to the time it takes the nav stack to receive to a NavigateToPose request.    Future work can be done to reduce this time.    Tested with rviz start/stop commands in simulation and a script with some start/stop commands.   
ros-planning/navigation2,1368,2019-11-18T19:28:46Z,2020-02-11T18:39:29Z,False,none,0bb88db113014bf2f5f83741ae4815596f01019b,1,8,18490cbab1be9c4c1c73b16a22a665487b8eae3e 23daf4612c940d2439e9080b9a6602a69ce354d5 8f9d37d499397459b9b3075d268b2bb2dd041dd9 29078908b3eb6aa00d11c718b0809bca42f8088b cbbc3ebded89e2ecd87311f443a4e745b0f7f3d7 8aa839251a737ee71f5cba8e8e08e22b6918ba0a 3751a182a3cb0c4f718ed12bc5b37ea942db7ccc 1744a5ea25d80352ee21d614097506a06488f24d,documentation,Build readme update for Eloquent release ,I wanted to submit this PR early  so it can be ready by the Eloquent release date.    Updated and cleaned up the build instructions a little bit.    - update for the upcoming Eloquent release  - reorganization of the documentation  - added anchors for easy navigate  - fixed broken links  - easier to follow clarified explanations  - copy-paste friendly commands  - made the documentation more maintainable (removed tb3 build steps and added a link to their instructions)   - added a build failure troubleshooting guide for the common mistakes  - added debug build information  
ros-planning/navigation2,1501,2020-02-06T18:31:39Z,2020-02-11T18:29:03Z,True,2020-02-11T18:29:03Z,f3a138124ae3d24a52c0963d971f29993a6cebf3,28,5,ae0694f97ffbeb42faa58ad8b9b6e4f15d2f8398 890371a4963022142318af5d4f601440a0ce7acd f2170be344f4b7f875632fcf5210381cff3f41c4 da40a853c72a1e28905c798ba811064aa597560a 7f0572eb9302d7e1844a0cdf31d2590d75702807,,Update dwb_controller as per robot_navigation stack ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #229 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Turtlebot3 |    ---    ## Description of contribution in a few bullet points  * Ported most of the changes from the robot_navigation repo.  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    ## Future work that may be required in bullet points  * I haven't ported some changes which includes [input_params](https://github.com/locusrobotics/robot_navigation/pull/15/files#diff-a7386ed917198fe34cc4d7dd79b44d1a) and some minor changes.  * I am planning to complete this work shortly.  * Need to know if anyone wants me to port [input_params](https://github.com/locusrobotics/robot_navigation/pull/15/files#diff-a7386ed917198fe34cc4d7dd79b44d1a) which I think is redundant. But it is just my thoughts.  <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1495,2020-02-05T20:41:28Z,2020-02-11T21:50:35Z,True,2020-02-11T21:50:35Z,de4349fe19e29cdfa439488bffdc3a8d69086c3f,13,3,3f3e262e81bfbc96cd977bace737488e917b67f0 453fb3278aefe5dccc56e2201f5b1990a9b97fd0 6ad097ca491d242bcb1d8991b57b4b59d90adf81,,remove nav2_ prefix from all launch files and docs,We're in the `nav2_bringup` package  adding the prefix to the launch files is largely redundant. 
ros-planning/navigation2,1486,2020-01-31T23:02:02Z,2020-02-04T18:55:16Z,True,2020-02-04T18:55:16Z,19402664adbe71371f6c3a28258a99cc325dab38,10,7,b3476eb644275775065225ac3dbfe770512a2f40 098f8c729b82e7ebbc6ca00f9505ec61be3381cd e11d7e17dd415d58ebca7872d9c3e717349b2359 10bcb3da70d099b56906dd13667623a76e1dc070 4ebbc6c0ee333d1803c0de54535b651b54583b63 e03f3915866083d04b84571f6af28bab123d143b 7cec4302340782f1052e44d378598f136416047c,, Continued from 1329 Provide behavior tree logging output on the console and a topic,See #1329 for details.    Fixes #589    @crdelsey @mkhansen-intel can you give this an approval since you guys were involved in the original PR?
ros-planning/navigation2,1484,2020-01-31T17:01:09Z,2020-02-13T00:39:17Z,True,2020-02-13T00:39:17Z,4e6a733eca98b2d76c8c9f3c30636ef27a78af54,5,2,031275bc03e29db35fea0d434e80db2eb602d615 389c2f3046ed39a4c22ab795c499dac53b2d8743,,Normalize navigate_to_pose action names to be snake cased ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | follow-up after https://github.com/ros-planning/navigation2/pull/1467 |  | Primary OS tested on | - |  | Robotic platform tested on | - |    **Note**: it took me a while to get this one up due to lack of time and because I repeatedly attempted and failed to run `nav2_system_tests` locally. I presume I'm not configuring my environment properly  but I didn't want to further delay this.      ---    ## Description of contribution in a few bullet points    * Normalize action names to be snake cased.    ---    ## Future work that may be required in bullet points    * I think the `navigate_to_pose` action isn't the only one that may require snake casing (e.g. see the [`FollowWaypoints` action](https://github.com/ros-planning/navigation2/blob/3c736f87dfcbba029e92f2f40de332073aba742a/nav2_waypoint_follower/src/waypoint_follower.cpp#L61)).
ros-planning/navigation2,1463,2020-01-14T00:28:35Z,2020-02-13T01:35:14Z,True,2020-02-13T01:35:14Z,1f6d5a509865936c0537b1a454ae656d2dfe1783,2,4,65b912e52736d37425c13cb8fb9f5b30506d7d91 826c7fbb97acaa3fd39fd8099b836d65dcdfa129 123d7fdc122c195826132b5588966524a421376b 80c09cfd426263754c16d563a670d8bcf9675281,,Add warning to lifecycle node constructor so people know they ve launched a lifecyle node,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #1240 |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * Adds a warning to end of each lifecycle node constructor informing the user that they've launched a lifecycle need and need to take addtional action  * This is mainly meant as a warning to users who directly run a node using `ros2 run` and aren't aware that additional steps are needed to get the node fully active.    Thoughts on this approach? If that seems reasonable  I'll go ahead and change the other nodes as well.
ros-planning/navigation2,1525,2020-02-14T21:18:11Z,2020-02-14T21:41:49Z,True,2020-02-14T21:41:49Z,1928e4912bd9638745db2df552e7871004148700,1,1,8ee826df2060c0b0e81e41588f92c89a70a5b2be,,Collision fix for flickering laser scan ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1521  |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TB3 waffle simulation |    ---    ## Description of contribution in a few bullet points  * Shifted collision of RGBD model to prevent collisions with the laser scan.  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->      
ros-planning/navigation2,1526,2020-02-14T23:49:57Z,2020-02-15T00:36:29Z,True,2020-02-15T00:36:29Z,cc28e8a27aad8be919d08d6cb3ee46f7d618a935,3,2,a9c4079e9aad1b727daad6115533dac7f29174ee a991e7accae63bc24f7b627ca4e2aaa70c5bd788,,Declare progress checker parameters,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes https://answers.ros.org/question/344004/configuring-the-progress-checker-in-navigation2/ |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 on Gazebo |    ---    ## Description of contribution in a few bullet points    * Progress checker parameters were not declared.  * Progress checker parameters were on the wrong node (the controller_server_rclcpp_node)  * This PR fixes that.    ## Additional Work    * Make the parameters dynamic. Right now they are only read once during the configure lifecycle transition
ros-planning/navigation2,1527,2020-02-15T03:33:43Z,2020-02-15T03:55:28Z,True,2020-02-15T03:55:28Z,19b844b577bfa6987912a1bbf9d63ae704d4adec,2,1,01e1a330095c0096f4ba23157e0eb6fd5674e6d4,,fixing nightly builds with exception handling,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1514 |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * Attempting to fix nightly builds  * Only Connext and Cyclone are failing while shutting down from a success due to an unhandled exception   ---    
ros-planning/navigation2,1528,2020-02-15T03:54:26Z,2020-02-15T04:12:23Z,True,2020-02-15T04:12:22Z,e15d8f228d8c9814506099e22aacce5ce6d7400a,3,1,7963c9286cbd6ed6b2d54e2f9ac3d3f9fc5e613d,,move odom sub thresholds to the controller server for no change in be ,…havior but prior change in authority    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |#710 |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * Move the thresholding where appropriate  * To not change behavior for other plugins  its been moved to the controller server  which is very high profile as a place to look  so I think it'll be clear this is happening. This threshold is minimal and probably good for everyone anyhow    ---  
ros-planning/navigation2,1529,2020-02-15T04:23:41Z,2020-02-15T04:36:56Z,True,2020-02-15T04:36:56Z,efcd0678ba423d7116187cd8fcb166da54d446ad,1,1,d7f9ab8fc1e4dcc3a38f0bd8caf0c54f4aa70c07,,adding full list of default plugins,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1523 |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * Provide a reasonable set of default plugin libs for cli run commands  
ros-planning/navigation2,1532,2020-02-15T04:43:05Z,2020-02-15T05:35:05Z,True,2020-02-15T05:35:04Z,0555f2e16419fdf0d3ace436ee63cadafd2ed845,2,3,b5adefd671f373e4f9af6919bd21e4adf2840640 27d192247357d5adf69ce2228471a0bfbf78b961 0b4a0a4e37de7327e2c97f5a2bc93c3a127ea51f,,adding lifecycle shared from this to lifecycle utils,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1409 |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * Adding proposed lifecycle shared from this implementation.    ---    ## Future work that may be required in bullet points    * Perhaps rethink the use of a lifecycle node wrapper **once** we are able to remove effectively the client nodes. For now its required  and as @bpwilcox brings up  it may be beneficial for some users.   
ros-planning/navigation2,1534,2020-02-16T00:11:07Z,2020-02-16T00:13:06Z,True,2020-02-16T00:13:06Z,fbe8fad9c30df3f57dfad8909c7f32af9f49f18b,1,7,b5adefd671f373e4f9af6919bd21e4adf2840640 27d192247357d5adf69ce2228471a0bfbf78b961 0b4a0a4e37de7327e2c97f5a2bc93c3a127ea51f 06fca90382cfd32c38176ad3536e27e61381124d 505d5eb1566cfef6ca160f4228b1ab1f634176a3 e6cc8b12c5c4c8301c7b3dfc0bf28ee2ef119bf0 3dfa078794cdc63a8e451a3dcb882d94c4821d1a,,Readme badges,Adding back docker badge after working through those issues
ros-planning/navigation2,1535,2020-02-16T02:22:03Z,2020-02-16T02:39:18Z,True,2020-02-16T02:39:18Z,005739529b2e79343571677e0c4dcf229b931c0f,1,1,f2224e22f699230ff0d6396bd06d4dee52e8c95d,,wrap spins for waypoint follower in try except,On the path to fixing nightly woes    This stops the crashing for all nightly builds  but doesn't yet solve the issue of them not exiting after destruction  which is interesting.     See here (https://8834-135363400-gh.circle-artifacts.com/0/opt/overlay_ws/log/test/nav2_system_tests/stdout.log) and search for `***Timeout` . You'll see they all pass and appear to shutdown cleanly  yet fail to actually return to exit the test
ros-planning/navigation2,1536,2020-02-16T06:02:33Z,2020-02-16T06:06:57Z,True,2020-02-16T06:06:57Z,3b9baa684e6ddc2268daadf88f6f3d426cc6b2f7,13,1,fd5b8da204c644684b809e4b544cfe8da61b4062,, website sprint2 adding about pages,- [x] fixed gif in getting started page  - [ ] added barebones robots using page  - [ ] added ros1 comparison page from the docs/design/* directory  - [x] added about page of people involved and contact  - [x] limited the page width for my massive monitors to not spread out ridiculously   - [x] Added references to about / ros1 comparison to main page
ros-planning/navigation2,1537,2020-02-16T06:26:02Z,2020-02-16T06:29:25Z,True,2020-02-16T06:29:24Z,a560b23d8da63b6543fea12583cbe4121a7bdf15,3,3,fd5b8da204c644684b809e4b544cfe8da61b4062 af218097b8d6c5658cf2f816bc6703eea6c3a36a 74cefdbf8579fc8041ed4bbe078fbf659cbd5b8a,, website sprint2 adding page references and resizing figures,- [x] fix table missing  - [x] fix no references to comparison and robots page from directory  - [x] fixing 2 figure resolutions
ros-planning/navigation2,1531,2020-02-15T04:34:51Z,2020-02-16T08:19:50Z,True,2020-02-16T08:19:50Z,6177b5f5ad969e9ecd68570d0d49117b7b6d898c,1,1,8cded8f4e3edf42f378ee01ca087c1e701d9e471,,removing last time updated from readthedocs,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1421  |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * Its a little involved to update the timestamp  and its not that important. I'm removing it so that we don't burn maintainers time on a superficial accessory.     ---  @crdelsey can you give your thoughts on this one? I won't just charge it in since I know its something that people may disagree with. Its definitely the "easy way out" but hour-for-hour with limited bandwidth  it seems silly to spend any time on this.
ros-planning/navigation2,1543,2020-02-17T22:23:33Z,2020-02-17T22:37:50Z,True,2020-02-17T22:37:49Z,56c384b74797557fa6c4c4122e8738d32bbc63ed,3,2,bc474f7d786029d5dc06cf5451518906213dfbd8 9af6624eb282c0d833464a22d371058ff8fa9e05,,Remove nav2_system_tests from code coverage report since they are itselves tests,
ros-planning/navigation2,1542,2020-02-17T22:19:49Z,2020-02-17T22:38:22Z,True,2020-02-17T22:38:22Z,ec64966a94822019a5e9ef4ec4337073be26d19a,19,2,bc474f7d786029d5dc06cf5451518906213dfbd8 0b4de60721f98879c25d9099be59a5f4a1b71b56,,Move RL experimental to nav2_experimental branch and remove from master,#1540 
ros-planning/navigation2,1544,2020-02-17T23:56:02Z,2020-02-17T23:58:03Z,True,2020-02-17T23:58:03Z,ec110ac19ca600bed79b1fc40253a961a7f35ac8,15,1,9bc86aa42464bfaf9c15ab270f885a79b2b68a6c,, website sprint2 centering making consistent images vectoring diagram hidden trees ,… and streamlining    - [ ] center all images and videos  - [ ] all visual assets are the same width (images  videos  etc)  - [ ] vector images where possible in diagram  - [ ] section listers are at top or hidden (at bottom isnt very helpful  now is it?)  - [ ] streamlined contribution section  
ros-planning/navigation2,1539,2020-02-16T07:13:12Z,2020-02-16T07:15:51Z,True,2020-02-16T07:15:51Z,07cb7639206ab6e96753aad074c71af8d89c3d08,1,1,af40a47bcb7f451ca83a9c0dfba7219381b66ad1,, website sprint2 fixing table of maintainers and moving expanded pages around,
ros-planning/navigation2,1538,2020-02-16T06:53:56Z,2020-02-16T06:56:49Z,True,2020-02-16T06:56:49Z,a667068f7172f944c7e841249a8ad3c27e0957c1,2,1,3278122738b195a0405b8335ed93cb2dfb2467cc,, website sprint2 optimized sizes and table dimensions,- [x] fix table size of contributors  - [x] fix image sizes  - [x] add the robots and comparison pages before about (idk if this will work...)
ros-planning/navigation2,1545,2020-02-18T00:22:53Z,2020-02-18T00:29:26Z,True,2020-02-18T00:29:26Z,0b9872fee8c4c4f94849aede7ca51d73326b389e,6,1,df8fafe9373a420511e76b8e2d8b829fd07e1a31,, website sprint2 move tutorial outcomes to beginning to demonstrate what will be the ending,* moves videos to top of tutorials  * fixing side by side images  * build instructions with install context
ros-planning/navigation2,1546,2020-02-18T00:43:28Z,2020-02-18T01:21:45Z,True,2020-02-18T01:21:45Z,f4b67b77718b8b58eacc11ae2750f04e20d1903c,3,3,bc474f7d786029d5dc06cf5451518906213dfbd8 3b67aebbbbef2b0c4216a821cab5fc78437a1e4d 3fb9fa621b7bb958380158964d7df45158406b97,, website sprint2 Finishing touches on scales for side by side images,
ros-planning/navigation2,1547,2020-02-18T01:29:08Z,2020-02-18T01:29:14Z,True,2020-02-18T01:29:13Z,9b558e321def2c7ba97a805939286eaf5757f503,4,4,bc474f7d786029d5dc06cf5451518906213dfbd8 3b67aebbbbef2b0c4216a821cab5fc78437a1e4d 3fb9fa621b7bb958380158964d7df45158406b97 dcb4a89fd1a88c08afbfef501e5e64a3a7a8be32,, website sprint2 autoplay embedded videos,
ros-planning/navigation2,1548,2020-02-18T01:41:27Z,2020-02-18T01:45:34Z,True,2020-02-18T01:45:34Z,4836c7ff40e28497b350a5cc67e2e0a26488df51,1,4,bc474f7d786029d5dc06cf5451518906213dfbd8 3b67aebbbbef2b0c4216a821cab5fc78437a1e4d 8072627d16135c37414fc99c07dd379410910681 9e5329c29fccf789e2481b412ff6e21f415895a3,, website sprint2 last of website sprint 2 increase sidebar by 20 pixels for longer titles,- [ ] increase sidebar width for longer titles
ros-planning/navigation2,1549,2020-02-19T00:23:18Z,2020-02-19T00:30:27Z,True,2020-02-19T00:30:27Z,b3f079c30356ae805f86cee572a9ee1f4483046a,9,1,0766420a3551c4c9546a2ea07b511c6b82286039,, website sprint3 adding robots table clearing up ros1 conversion and adding dox files,![image](https://user-images.githubusercontent.com/14944147/74789892-e5954f00-526a-11ea-990b-4a4dc8f91567.png)      Look at that beautiful page. Just the best webpage. I don't say that  but other people have said that. We build the best webpages over here at Navigation2  let me tell you.
ros-planning/navigation2,1550,2020-02-19T00:37:32Z,2020-02-19T03:09:12Z,True,2020-02-19T03:09:12Z,294c0fc6fd37dd3ab9b85fc5ceee6d9f989216fe,1,5,bc474f7d786029d5dc06cf5451518906213dfbd8 3b67aebbbbef2b0c4216a821cab5fc78437a1e4d 8072627d16135c37414fc99c07dd379410910681 1c91af64c4d41dde78f82a1b094bdb29c3fde856 1bc9bda8c294ffa3913ca569e722c70d52bbd03b,, website sprint3 fixing code page overrun in SLAM tutorial,
ros-planning/navigation2,1551,2020-02-19T04:14:49Z,2020-02-19T04:52:52Z,True,2020-02-19T04:52:52Z,21460485733906163ee407261e256aca697044e2,6,6,bc474f7d786029d5dc06cf5451518906213dfbd8 3b67aebbbbef2b0c4216a821cab5fc78437a1e4d 8072627d16135c37414fc99c07dd379410910681 1c91af64c4d41dde78f82a1b094bdb29c3fde856 a21bbc52db93fd8e44909b7aec520ff4d525800c 8d893854079a99298a0e204ff7bb11c1d26c2ea5,, website sprint3 cleanup build instructions and fix getting started images,
ros-planning/navigation2,1552,2020-02-19T05:04:37Z,2020-02-19T05:11:09Z,True,2020-02-19T05:11:09Z,bc0757e200d41ceff35950476090ffbb5889fa1f,7,6,bc474f7d786029d5dc06cf5451518906213dfbd8 3b67aebbbbef2b0c4216a821cab5fc78437a1e4d 8072627d16135c37414fc99c07dd379410910681 c5fb94081f6ca7ce65a257c5199d4a4d9f44f55e 32e297a58b66581f4a6571a71b6691069186c267 cb576003149403d3c776d1d485843523d01e4417,, website sprint 3 build and install menus with dropdown for options,
ros-planning/navigation2,1553,2020-02-20T03:36:41Z,2020-02-20T03:57:40Z,True,2020-02-20T03:57:40Z,281360b33386ecfe36d6cfb3e685aed3ec300b13,1,7,bc474f7d786029d5dc06cf5451518906213dfbd8 3b67aebbbbef2b0c4216a821cab5fc78437a1e4d 8072627d16135c37414fc99c07dd379410910681 1c91af64c4d41dde78f82a1b094bdb29c3fde856 a21bbc52db93fd8e44909b7aec520ff4d525800c 962e2e9b2d810e07f301fd70673a5dd2e650d2a3 50dd3d3ba26c3bd89b32e4b9205d4dbe567a912e,,Tf throttling on costmap activation,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1518 |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * developer quality of life improvements throttling down costmap checks and removing the 1 second timeout resulting a flood of messages    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1554,2020-02-20T05:10:02Z,2020-02-20T05:12:23Z,True,2020-02-20T05:12:23Z,64eb5a0ea335f5dee5c6fc564a1878787e743ec2,7,8,bc474f7d786029d5dc06cf5451518906213dfbd8 3b67aebbbbef2b0c4216a821cab5fc78437a1e4d 8072627d16135c37414fc99c07dd379410910681 1c91af64c4d41dde78f82a1b094bdb29c3fde856 a21bbc52db93fd8e44909b7aec520ff4d525800c 962e2e9b2d810e07f301fd70673a5dd2e650d2a3 711893b4ce29549913e0e5ebf5daf6b6b9991d02 5c11e5b72009c33a5f2af15c61db8971b1743ac8,, website sprint3 Updating hyperlinks and adding new robot to robots page,
ros-planning/navigation2,1541,2020-02-17T15:18:36Z,2020-02-22T01:30:23Z,True,2020-02-22T01:30:23Z,f06245376a1238a5477fc6a053aa1a826ab52995,5,10,0b6c7483bbd54d697c1f78c855e68bfd0e94e55e 40e99de26000b35d6911c86862a2e3edeafd9841 e4c0225768122edc39033109b5c75766ee50984d 4be7da35a9cb012ee45190df673a0db2916bab11 e6c4f46ee36701525f3478d8228883671b5e2bec e3e6d4fdb4e6344bae682e0c40ab117a7a6ff4ea f454fcf51f0e8cd2e4c8dafc451a1cf5984bdcc0 16b7bf19846c077d270cc7f3a9d1a332a2cd97e2 8749775b567ea730b1cb30f3d71feace121be344 0c4000ec8682fc10c93d782a6f2af0507afcb3c3,,adding gradient layer costmap2d plugin tutorial,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1533 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Gazebo simulation of TB3 waffle |    ---    ## Description of contribution in a few bullet points    - Adding tutorial: Writing a new Costmap2D plugin: gradient layer
ros-planning/navigation2,1555,2020-02-20T19:02:05Z,2020-02-22T18:58:02Z,True,2020-02-22T18:58:01Z,129a77855ac124341a83ad324c4dc383ae5d717f,1,5,620159f908785e7918913394131b6aea2d807eba 579757c4225d42ead02b51374ef31df7290df954 86da51e9a050cb472b684b457699e3c4b3356b63 7abcd5f910297fff0cfa92a512bdf9bc730a4db1 a9ac3d187481a57bfc00f64f00d7fb1bef0dde13,,robot_base_frame parameter for planner_server,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation |    ---    ## Description of contribution in a few bullet points    - this allows you to change the link where the planned path starts    ---    ## Future work that may be required in bullet points    N/A  
ros-planning/navigation2,1559,2020-02-24T01:34:03Z,2020-02-24T01:55:43Z,True,2020-02-24T01:55:43Z,d930a2b36ad92bda71df533bd0375a947da2b3d2,1,1,90018140f9d44945c54a45658cd841cc80f5afa5,,Update topic name to set a goal pose,## Basic Info  Update topic name in documentation from `/move_base_simple/goal` to the updated one `/goal_pose`  
ros-planning/navigation2,1481,2020-01-31T05:48:08Z,2020-01-31T17:10:29Z,True,2020-01-31T17:10:29Z,15104c4c053fd6a0ebd0f930ddabcb50280fa808,5,1,a071b3ec6c52a75f045926e70efd312559b5a0dd,,store shared files in share PROJECT_NAME rather than share ,fixes: https://github.com/ros-planning/navigation2/issues/1480
ros-planning/navigation2,1560,2020-02-24T22:34:11Z,2020-02-24T23:05:37Z,True,2020-02-24T23:05:37Z,547f7bc6dea6b20256df0ecafb3d0a91f39e8758,1,1,e3232700c2d4d805e87722d94cb8c67d02805613,,FootprintSubscriber use from_seconds to avoid integer truncation,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | () |  | Primary OS tested on | (Ubuntu Bionic) |  | Robotic platform tested on | (gazebo simulation of turtlebot waffle) |    ---    ## Description of contribution in a few bullet points    * uses `Duration::from_seconds()` to avoid the footprint timeout (given as a `double`) being truncated to an integer  ---    ## Future work that may be required in bullet points    * This change could be safely backported to `eloquent`  
ros-planning/navigation2,1562,2020-02-25T03:56:35Z,2020-02-25T04:00:43Z,True,2020-02-25T04:00:43Z,d0190a6cf859e92e8db5bd14de1974b8817d147a,3,2,fc5b6a9f07c00c67f433c002f7283443aa1d7232 a9e08bf6eef16b203d419c8de934ca117f5fdd5f,,adding webpage for known navigation recovery planner controller costmap bt plugins,
ros-planning/navigation2,1561,2020-02-25T01:04:43Z,2020-02-25T04:01:08Z,True,2020-02-25T04:01:08Z,d44596cf26e574784e6eb05b2d089a5b7ca65f20,1,1,84ed77131350eadeb2f53d617a9af49fe38f3cf9,, eloquent Backport 1560 Use from_seconds to avoid integer truncation,Backports #1560 to the `eloquent-devel` branch. This PR is a cherry-pick of 547f7bc.
ros-planning/navigation2,1569,2020-02-27T01:25:43Z,2020-02-27T02:17:05Z,False,none,5d8c1b5101b0a9f303905d917b70aa7e29042ead,7,3,5a7fa31602bbbc2a80ce12b974e3db0d0c017ef2 00b32e04b6e2ce600f6abba798edc8a7ad3d4f76 4b0a53a6a2e0e9d2ef28a61d4672482fabdd9b81,, dwb_core Never shortcut trajectory scoring,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of turtlebot waffle |    ---    ## Description of contribution in a few bullet points    * Removed short cut of trajectory scoring from `dwb_core` because it often leads to worse overall trajectories being chosen    ## Description of documentation updates required from your changes    * Removed documentation of parameter that optionally disabled short cut taking    ---    ## Future work that may be required in bullet points    * an ABI compatible patch to Eloquent could be done by always passing `-1` for `best_score` to `scoreTrajectory()`        ## Long description  When evaluating trajectories  dwb will stop running critics as soon as  the trajectory's score is better than the best trajectory seen so far.  It looks like this often leads to worse trajectories being chosen as the  overall best.    Consider 3 trajectories and 2 critics:    1. t1 is scored by both critics and gets scores [0.5  0.0] for a total  score of 0.5  1. t2 is scored by the first critic and gets a score of 0.6. Since  it's better than the best so far  the scoring gets cut short. If it  hadn't been cut short  t2's scores would have been [0.6  0.5] for a  total of 1.1  2. t3 is scored by both critics for scores [0.4  0.4] for a total of  0.8. t3 is chosen as the best trajectory even though it's total score of  0.8 is smaller than what t2's would have been if all critics had been  run on it.
ros-planning/navigation2,1566,2020-02-25T18:43:04Z,2020-02-27T04:45:41Z,True,2020-02-27T04:45:41Z,35dd96e1a4efc7cff4af294bf3b8d5cfd6a87776,12,5,0ceb7502bcae21be146852390616a6e5e49d9aa4 5c936aff968d1e6ca730e868e357b761e6fbdfbf 820743310101b82a459e4e575b099e851e0b27ef 0fdac4f708ede5c890780c95ba679a993a04dd33 6f2da9fa4e9ca9a9a5393873f299a7225b701da4,,Dwb minimal updates,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points    * Added publisher checks  * Name change from addGridScores to addCriticVisualization  * Added unit test for trajectory_utils    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1571,2020-02-27T05:19:07Z,2020-02-27T05:20:21Z,True,2020-02-27T05:20:21Z,9d739cd1855c10f4e8c906a70721da63d73a0085,1,1,bdf8fcfe105e95e6ad28512dfe2f078848d9c056,,adding getting involved page,- description of process to get involved  - description of resources and websites to be involved  - simplify the DCO text
ros-planning/navigation2,1565,2020-02-25T06:24:25Z,2020-02-27T16:30:19Z,True,2020-02-27T16:30:19Z,5a64849c1ae4328cb688bb41b2f3fbb8af7268ba,2,3,2aad1c2b83daf5ce698cf7ccfd6af4fda22c0a79 1cc4a4539bbe03b15a5fbcd0ce6691f88ec2f4ec bee7f1cea8c01bbd3c493088c410207d085da4c5,,Add ROSCon talks to other tutorials which might be relevant,similar to creating a costmap layer tutorial which i found really helpful.    ## Description of contribution in a few bullet points    * Added videos to tutorial using STVL and tutorial using SLAM Toolbox  
ros-planning/navigation2,1572,2020-02-28T02:30:08Z,2020-02-28T02:52:28Z,True,2020-02-28T02:52:28Z,dfc202ef7e1c1a8e901233be72ce1ebce96ef5c6,3,2,2f8f1fa14a27b73c805745db18276532a7f51f36 371dbe7503be1d139eacdae36aa357861289784e,,A couple test updates to add a little more test coverage,Mostly me toying around with how codecov computes values but adding a little bit of coverage while I'm at it 
ros-planning/navigation2,1573,2020-03-02T19:24:29Z,2020-03-02T20:54:51Z,True,2020-03-02T20:54:51Z,d6f63d3e487a9e6c6c80bfacb0a59f3f4678eb43,8,9,bc474f7d786029d5dc06cf5451518906213dfbd8 3b67aebbbbef2b0c4216a821cab5fc78437a1e4d 8072627d16135c37414fc99c07dd379410910681 1c91af64c4d41dde78f82a1b094bdb29c3fde856 a21bbc52db93fd8e44909b7aec520ff4d525800c 2fc57173b437ec18153f457c8582f76becfc5f79 ae4d7bccd7de879d7ef9caf44511e784f34ab06e 14527c26060206c7c5315a910e5b56f441dac408 d0bc66157db6b9b24241cb2e58df5ab4e2667693,,Is transform available BT condition node plugin,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1563  |  ---    ## Description of contribution in a few bullet points    * Added a TF transformation conditional lookup for the behavior tree  * This may be valuable to block navigation until after a given transform exists  * After it checks and succeeds once  will return success always to not add redundant calls.    ## Description of documentation updates required from your changes    * Adding to readme and added to website plugin list    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1574,2020-03-02T20:37:27Z,2020-03-02T20:57:08Z,True,2020-03-02T20:57:08Z,2ec4507e26008d6960ad68d5e1306893100d882b,2,1,f8b94c946c2bf841356b2b804e598a4fc10e4f8f,,removing the filter message warnings,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #949 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  gazebo simulation of TB3 |    ---    ## Description of contribution in a few bullet points    * Removed all nav stack message filter dropped messages    ## Description of documentation updates required from your changes    * N/A    ---    ## Future work that may be required in bullet points    * RViz still produces them  
ros-planning/navigation2,1576,2020-03-02T21:15:09Z,2020-03-02T21:26:52Z,True,2020-03-02T21:26:52Z,06903b0abff3299d824a74eb9478b758399bcf05,3,1,b74c4583dbdc5a66ee791b89209f892c5be64410,,adding Rb1 and Tiago robots from Marathon experiments to about robots page in documentation,
ros-planning/navigation2,1568,2020-02-26T03:35:29Z,2020-02-26T04:10:20Z,True,2020-02-26T04:10:20Z,f1aee9915fc913a7248bcb5b48c0c586200f68e9,1,1,eb57b98638909368a3b1d7d17cd8263122fcffda,,Updating PR template to force people to reference necessary documentation changes,I've spent a bunch of time (and will continue to) on improving the documentation and compiling resources.    I do not want this work to go in vein because documentation isn't kept up with changes. This acts as a reminder in case folks forget when they make changes to add them to documentation
ros-planning/navigation2,1577,2020-03-02T22:32:06Z,2020-03-03T00:27:31Z,True,2020-03-03T00:27:31Z,b4b49fa2489ba27be3e882329f9c4e9c1a37e6a2,42,5,3a221a2d87fa2f2d161c4a71fb3fd663b75f5cc0 5042db62822714f71647ddd2112a612b52db98bd 5c2d630ac3098ad0337835e5088a4dd3858293ed 1753a265aad7af2f08c97d9c22a27f3502146b87 06d1f0338c9a60f7717a9eea2c7a680d9dad04fd,,Eloquent sync,Syncing Eloquent with master for good bug or feature fixes.    - 3a221a2d87fa2f2d161c4a71fb3fd663b75f5cc0  - 5042db62822714f71647ddd2112a612b52db98bd  - 5c2d630ac3098ad0337835e5088a4dd3858293ed  - 19402664adbe71371f6c3a28258a99cc325dab38    Fixes BT navigator crashes and rviz visualizations. Many of the recent commits change behavior and shouldn't be synced  or are documentation updates that aren't necessary to backport.
ros-planning/navigation2,1579,2020-03-03T00:43:15Z,2020-03-03T00:43:27Z,True,2020-03-03T00:43:27Z,b2ef43027cda731ec08c147c56c8a7fbfde06fce,29,1,902fde93f5df08cb0d998cbb109138b70a4a0679,,bump master to 0 3 4,
ros-planning/navigation2,1575,2020-03-02T20:51:41Z,2020-03-02T21:15:16Z,True,2020-03-02T21:15:16Z,ceb47226c496feae01429d7ab1fe3e373789e8a9,4,1,ee6f4ab9d18dc0744d0892762e78f1cd1db8600a,,RotateToGoal param name fixes,this fixes issue: https://github.com/ros-planning/navigation2/issues/1567    I changed these two params because they are shared with other parts of the system    `xy_goal_tolerance` is used by the `rotate_to_goal` critic and the `simple_goal_checker`    `trans_stopped_velocity` is used by the `rotate_to_goal` critic and the  `stopped_goal_checker` (I do not use this and did now know what it was before this PR).       The other two params  `slowing_factor` and `lookahead_time`  are exclusive to the `rotate_to_goal` critic  so I kept their names in that critics namespace (I don't use them and don't know what they do).  I updated the default param file in this repo to the correct names for these params.    I reordered some params in the yaml file so that only critic params are declared after the critics are listed. It's easier for me to read this way.       
ros-planning/navigation2,1580,2020-03-05T23:13:35Z,2020-03-05T23:18:34Z,True,2020-03-05T23:18:34Z,90e06d4610954785e630b4f22ae5886c67c2dcab,5,1,75b1fe26fe6dd601fd9ba034190a5582533028ac,,adding migration guides to website for new distributions,Adding migration guides for Dashing and Eloquent to the website
ros-planning/navigation2,1581,2020-03-06T00:59:59Z,2020-03-06T03:14:39Z,True,2020-03-06T03:14:39Z,05c75852c991b94c2e85e2d9d28da76b424e5684,4,4,06fec3a9462376f18a0f26d0101220b7b1cfa1f1 7654c43097f4406dd2cac749677bf40ef34c3571 07c117d416f1f3a79e797acd0da831dc1e6308fd 4aabe697af355fb56ac328e6f6d4fd2e6e9a9f2c,,reenable planner tests,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1512|  | Primary OS tested on | ubuntu |  | Robotic platform tested on | CI |    ---    ## Description of contribution in a few bullet points    * Trying to reenable planner system tests    ## Description of documentation updates required from your changes    * N/A    ---    ## Future work that may be required in bullet points  * N/A
ros-planning/navigation2,1520,2020-02-13T21:36:11Z,2020-02-13T23:11:21Z,True,2020-02-13T23:11:21Z,66543509618a8100c92bb22eb029efb77967ca43,1,1,9092a89aa249c7a9ecc3a38fe80a368ba2fb0b81,,only let a new goal in after the currently running goal s thread has ,this seems to fix https://github.com/ros-planning/navigation2/issues/1519    All I’m doing here is waiting to execute a new goal until after the thread executing the current goal returns  so we don’t start a new goal before we’ve cleaned up everything related to the old goal.       I think its a little awkward that `execute_callback_()` has to handle setting the status of the goal  because there's no atomic way to set the current goal status and do cleanup on the simple action server. But I don't have any change suggestions right now  
ros-planning/navigation2,1582,2020-03-06T17:20:38Z,2020-03-06T18:39:53Z,True,2020-03-06T18:39:53Z,ea1667e510335789f932594b6604b177c4592763,1,1,60ad107ddc0b3166776a44fbd4737c60de7ea391,, eloquent backport only let a new goal in after the currently running goal s thread has finished 1520 ,Backports #1520.
ros-planning/navigation2,1583,2020-03-06T21:36:39Z,2020-03-06T21:37:16Z,True,2020-03-06T21:37:16Z,439b883990df51a7a456c4005c99edb3f37a4567,2,1,eae1cec84d28cafed0e048393bcef013856b715c,,adding logging for nightly tests,Next steps for bugging the nightly builds - also just more logging is required.
ros-planning/navigation2,1584,2020-03-06T22:22:16Z,2020-03-06T22:22:28Z,True,2020-03-06T22:22:28Z,4aac81ee5f44c12a79a2b008eb895ab6b4229398,2,2,eae1cec84d28cafed0e048393bcef013856b715c 9a8e6103a18cf3d923f06eaab467adbb72f0d888,,Adding destroy call to rclpy action client in system tests ,I suspect this is causing the issues:    ```  [453.043s] 10: [tester_node-13] [ERROR] [1583454435.358193353] [nav2_tester]: [1;37;41mService call failed RuntimeError('Failed to take status with an action client: error not set' )[0m  [344.359s] 13: [tester_node-13] [ERROR] [1583454326.674545839] [nav2_waypoint_tester]: [1;37;41mService call failed RuntimeError('Failed to take feedback with an action client: error not set' )[0m  ```  which may be leaving a server up causing the lack of exiting. This is not seen in Fast-RTPS  which is the only RMW which regularly passes the nightly builds.     
ros-planning/navigation2,1587,2020-03-09T16:52:10Z,2020-03-10T05:40:19Z,False,none,785cd1f460b15d99501387052f831011d1f777d6,1,6,7668f42a16581b8d25f1dcf1f3e044f11aa8db6e eb6f2dd5433419cb2fbfd258f7e6ea5e67a479e0 4669774b7e751e0951cf92184d7f17ec9a044576 6f4bc94de52c10dcf6cd36d4ab25ae6688a3fc28 e056306dd0c344a401b804c47c0afb2925bac0bf a5bc87b137ba9592c8a7ff4bf1fd2bbd4015b869,, test ignore testing planner test failure rate in cloud getting CI metrics on failure rates,Please ignore. Testing number of planner test failures across many CI runs     Run 1: 3/4  Run 2: 2/4  Run 3: 3/4  Run 4: 1/4  Run 5: 3/4    so we have a 60% success rate on the planner tests. Fails waiting for map frame.    With a longer wait:  Run 1: 3/4  Run 2: 4/4  Run 3: 2/4  Run 4: 3/4  Run 5: 3/4    so we have 75% success rate when we add a 5s vs 1s sleep    With even longer wait:  Run 1: 4/4  Run 2: 3/4  Run 3: 3/4  Run 4: 2/4  Run 5: 3/4    10s also has 75% success rate  so that doesn't do anything helpful extended.    Changed some TF tolerances and reduced back to 5 seconds.  Run 1: 3/4    * I'm pretty sure at this point it is not actually related to TF but node spinning or executors. After this bit  Ill look into that.
ros-planning/navigation2,1591,2020-03-10T20:30:17Z,2020-03-10T20:31:34Z,True,2020-03-10T20:31:34Z,91d80f275af95328553e55ba4297752e80f793ea,2,1,4025b32a69e043a946fd0f27a3a16c30b160c147,, website add more cool videos from real robots,Adding robots from the experiments with @fmrico 
ros-planning/navigation2,1588,2020-03-09T20:12:17Z,2020-03-10T21:50:37Z,True,2020-03-10T21:50:37Z,8cc391425f7064850f0f6fab4be69e9b098fdab4,4,1,0ca519b34cccfca225aed4842528cdfc7ce40220,for review,Adding Concepts page to website,Adding concepts page to explain the role of the various components and standards in the navigation stack.
ros-planning/navigation2,1593,2020-03-11T04:51:09Z,2020-03-12T03:37:49Z,True,2020-03-12T03:37:49Z,8a8810c454c5854907165a0dfd5a7ba4df84e3e2,1,1,919677a2180582ddaede8d1986032cc0a8bdf583,,Fix segfault when second argv is none in map_saver,It made segfault when running map_saver using option param without value.  Ignore the param and continue the process.    Signed-off-by: Koeun Choi <gony0206@gmail.com>    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1592  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of turtlebot3 |    ---    Please look the issue ticket. 
ros-planning/navigation2,1564,2020-02-25T05:30:40Z,2020-03-18T03:00:27Z,True,2020-03-18T03:00:26Z,33bb5ba6669c4f1554b08f8e2fba7dc0c41d3170,2,9,7befdb3ffd7365faf17120a39caf87a362411a27 3ef5ae4206e24013b3f3c611438b00421ff08d57 65a6ca608c39bc37dfee9d3f84cd9925e57275a8 19d9ea8ba7bd0d7c39e838b6d34ebcb66f087288 e1589be6c7faef7d04b7dd5381d9d33416890026 337fa0b6ccf11e90b486f0db6158db61db7e6414 39095c03fb45627d65646eae85be9977494db208 549536b7d011a280d2a093012da8525dbae07ba3 f29076427e8c32ce534f005f8719be596d19d980,for review,Nav2 RVIZ Plugin include Status of Lifecycle Nodes 1479,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (#1479 ) |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | gazebo simulation of turtlebot3 |    ---    ## Description of contribution in a few bullet points    * Created new widget to give feedback about the status of Navigation and Localization lifecycle managers in rviz plugin.  * Changed InitialThread class to check the state of only one lifecycle manager at the time. This allows showing independently the state of both managers.  Now the state of the lifecycle managers is checked every second until navigation manager returns Active  and every 30 seconds after that.  * Updated state machine to update the state of the plugin when the system is paused or the navigation lifecycle manager times out.   The new state machine consists of three stated: offline  online and paused.   The offline state is entered when navigation lifecycle manager times out while online. When the manager is back online  the state changes to online.   When pressing the pause/resume button  the paused state is entered. When pressing the pause/resume button again  the state goes back to online.   The previous state machine runs while on the online state without any changes excepting: pre_initial state was substituded by offline; resumed state was deleted.    ---    ## Future work that may be required in bullet points    * We could add more information about the state of the lifecycle managers in the future. It would be probably good to add some way of detecting an error on the nodes and display it.    ## Update:  Changes made to state machine and added widget have been replaced by QLabels showing the state of the lifecycle managers after initialization (end of InitialThread)    Some captures of the resulting changes:  * Before the end of the initial thread  the state of the managers is unknown:  ![unknown](https://user-images.githubusercontent.com/14293015/76053673-18a54580-5fc2-11ea-80af-9c6f84ee0ced.png)    * Once finished the initialization  the text on the labels will change according to the state of the lifecycle managers.  When in slam mode:  ![slam_active](https://user-images.githubusercontent.com/14293015/76053671-180caf00-5fc2-11ea-9c8a-f0c7d6d19a0c.png)  When in normal navigation:  ![all_active](https://user-images.githubusercontent.com/14293015/76053669-16db8200-5fc2-11ea-9325-c1c6ea948166.png)    
ros-planning/navigation2,1578,2020-03-03T00:10:07Z,2020-03-18T03:01:10Z,True,2020-03-18T03:01:10Z,24c6929d749bf11b7a03fcac1b9e0904aad9fc30,3,3,55fb76a6be1010d11f25dbeeb16425fd57b0e0dc 126e04083bd95fc02630d9529fd76beaaa02ea41 bb10730fbba68816d0f3c665b63edca5ec05dc78,for review,fixing BT node action processors,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1289 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of TB3 |    ---    ## Description of contribution in a few bullet points  * Clears up unnecessary networking traffic in constantly timing out a request  * Handle the preemption of the controller server abort rather than throwing away results    @crdelsey I'd appreciate a review on this one since its a big behavioral change. I found the issue in the last time I tried to do this.    Turns out the controller server will return a preempt (which translates to failure in the BT action node) which the `goto` actually completely throws out and is missed. My synchronous callback method didn't throw it out because it triggers on a result. So I added a check if it was preempted  if so I ignore the result and continue spinning  since a preemption means a new goal was accepted and is processing. Then the next loop will grab that new goal and replace the handle. 
ros-planning/navigation2,1601,2020-03-19T06:15:11Z,2020-03-19T17:33:59Z,True,2020-03-19T17:33:59Z,0da23bb108b0c8236d6d8bb5ee6be3a505bd7473,1,1,42869237b7e4308bf698b2f42a2d30680ae1d8b5,,Corrected check to detect collision 1404 ,Signed-off-by: Aitor Miguel Blanco <aitormibl@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1404 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | gazebo simulation of turtlebot3 |    ---    ## Description of contribution in a few bullet points  * Modified CollisionChecker to detect collision with inscribed radius  occupied or unknown state cells in costmap for a given pose.    ## Description of documentation updates required from your changes    ---    ## Future work that may be required in bullet points    
ros-planning/navigation2,1599,2020-03-18T14:24:55Z,2020-03-19T17:35:31Z,True,2020-03-19T17:35:31Z,951a2bbaf379dac66245aecb13755749da1d94fa,2,3,77a5faa2ec7ec7d0aed14ffd7f51eaf8a4112281 4b384b6dbf27515ec41a1435887eab94a913aa7e d5ad5fbe1b1c29fc6865201f0642389acd09136a,,Script,Fixes #1598     ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1598  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points  * I added `eloquent` as default value for `ROS2_DISTRO` variable which was set to `dashing` before.  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1602,2020-03-19T23:00:52Z,2020-03-20T00:00:13Z,True,2020-03-20T00:00:12Z,19e5b4197c65baa63c98b940fae1a5d7c3774a19,1,1,0851f0ea6805e17b63ea00cb3dc1609f6c406169,,setStatus BT NodeStatus IDLE removed,The removed code has no effect at all: the status of a node will be its returned value!    In general  you never set your status to IDLE  unless halted.  
ros-planning/navigation2,1605,2020-03-21T12:04:24Z,2020-03-21T21:56:11Z,True,2020-03-21T21:56:11Z,efc42bd161bb3672ed273f3f4142fc35d88bd190,1,3,42869237b7e4308bf698b2f42a2d30680ae1d8b5 8d5fa2e5cf95be9b649e06e5db627224e641ec95 9a279238b4315da97e122f2e2e39aad1978b507e,,Spin recovery,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (#1404 #1603 ) |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | gazebo simulation of turtlebot3) |    ---    ## Description of contribution in a few bullet points  * Changed check in collision detector to be triggered only with lethal or unknown cells.  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points  * We need to look into how to deal with the clear footprint function to allow the robot to detect obstacles during spin recovery. Thanks to this function  at the moment the robot won't be able to detect any obstacles inside its footprint.  <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1610,2020-03-25T03:12:26Z,2020-03-25T03:14:27Z,True,2020-03-25T03:14:27Z,9ab0bf357a343c68c650f67c68f45d186c60c959,6,1,076c030d966ebb1c8e711d37a8c6b2ae865562bd,,making documentation distro agnostic,Updating docs to reference only the abstract `<ros2-distro>` in install and setup guides to reduce burden on maintainers to keep updating. At this point  we don't expect any major changes to happen in the future to require too much additional versioning
ros-planning/navigation2,1609,2020-03-24T12:39:47Z,2020-03-26T19:16:32Z,False,none,4c7c09bcc93275abee7d8034a30e3c10b18f09c7,1,3,163e7b35033294e0bf7b2ca4e44a7e0f8cf7052f e95d21f33d4876258b97c959d65e65593ed462fb 8949d9da9ee8a15617eb42c764cca09b58c0d358,,bugfix Segmentaion fault in planner_server node 1608,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1608 |  | Primary OS tested on | Ubuntu|  | Robotic platform tested on | ( gazebo simulation of Turtlebot) |  
ros-planning/navigation2,1612,2020-03-26T11:49:24Z,2020-03-26T19:17:17Z,True,2020-03-26T19:17:17Z,042dfdbacc7c39922dec6037b615bb09a91314c0,1,3,a481b6523be8a5395dc92cc27db6f0397c32bcac bfbe65b4baa5bb692913efdda4a2220fd81ff5cf 37552d1cda0ab960e0ea2f290f4ea536b0cb5996,,Issue 1608 segmentation fault planner server node master,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1608 |  | Primary OS tested on | Ubuntu|  | Robotic platform tested on | ( gazebo simulation of Turtlebot) |  
ros-planning/navigation2,1606,2020-03-21T17:21:34Z,2020-03-27T00:09:00Z,True,2020-03-27T00:09:00Z,2214a04a61b1dadc2f2518b29a2237bb3c6f190c,6,9,8c1c996571f7b28e37d2d07f206b9958e9428c57 0f6353d43966c16c851055718927a0265e82b920 5fb753aed0eeb027c60bbe5089c71a76402bf58f ba82d258acd40db6cb51e6bd7ae576b2fc26a3e9 5a00966a847353545cec3a1c86e5b9d2c6ee91f6 35b197f3f6e26b7a1c046255c652a608e093afc9 3b4a2ee68fd50d0b01576c145b3cc8b0160ac313 6d2da703c887b29e010eeec556b08db0802d96c9 95afad6dbb25171824e6fc2e66fa04472a3fd060,,BehaviorTree refactoring,I haven't been able to test these changes yet  even if I am 90% confident that they should work and fix issues #1600 and #1439    I compiled on Eloquent  Ubuntu 18.04.   I wanted to test it using [these instructions](https://ros-planning.github.io/navigation2/getting_started/index.html)  but the turtlebot3 packages haven't been released in Eloquent.    I am really sorry to ask  normally I wouldn't  but... is there anyone that can try these changes?    @SteveMacenski and @Jconn ? Sorry for asking  I really wanted to do this myself  but I am hitting a wall.    
ros-planning/navigation2,1615,2020-03-27T12:55:23Z,2020-03-27T20:58:37Z,True,2020-03-27T20:58:37Z,98faef53b6f1b4e53ba7da7a3b1cb561fa0fc82c,1,1,ce46733abc1d26f5deceb908cc2eadadd6252805,,Decide the output of BtServiceNode based on the service response,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1614 |  | Primary OS tested on | Ubuntu |  ---    ## Description of contribution in a few bullet points    - `BtServiceNode::check_future()` was created  to encapsulate the logic  where a the output of the BtServiceNode is computed.  - Inherited classes can overload this function according to the requirement  of the user  
ros-planning/navigation2,1616,2020-03-28T16:10:05Z,2020-03-29T00:15:15Z,True,2020-03-29T00:15:15Z,826a4d2eddd01456a6c8005f442d9200b95eedbf,3,1,3d74e20c294857f912c5857e07f5ba59bd984e4e,,Add server_name parameter to BtActionNode,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1613  |  | Primary OS tested on | Ubuntu |  ---    ## Description of contribution in a few bullet points  - A `BT::InputPort` `server_name` is introduced in case the user wants to change the default action_name  of `BtActionNode`.  - A similar implementation (which was dysfunctional) was removed from `ComputePathToPose` and `FollowPath` BT actions  
ros-planning/navigation2,1197,2019-10-03T21:04:54Z,2020-03-29T03:37:08Z,False,none,b0fce294ed9decf9d60b576af6ca155e18b92b20,7,3,cf311fa51dd5ee8f1206b8798fe953997a8578b7 6736300f90a74cefedb5e4cfa22a5b04c5544068 c376bd2dea94c2e73cd09952849dab5d5943be65,do not merge,Remove wait for action server service in bt_action_node and timeout send goal,## Basic Info  | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1177  |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | gazebo simulation of tb3 waffle |    ## Description of contribution in a few bullet points  - Removed wait for action server and wait for service from `bt_action_node` and `bt_service_node`  - Add a timeout when spinning a send goal or service rest  - Replaced throw error with returning `BT::NodeStatus` to exit `tick` when client fails to send goal or service request  - Added override function to allow recovery behaviors to return SUCCESS when the send goal/service fails  allowing for the bt tree to attempt the next recovery action instead of exiting tree    ## Future work that may be required in bullet points  - The override function `on_send_goal_failure` can be removed when we update the recovery node (currently using the sequence star control node) to allow action nodes to fail and and still proceed to the next action node  - With this change  since there is no guarantee that when the system is active and a user sends a goal pose that the services and action servers are ready and available  the navigation may possibly fail  possibly attempting any recoveries specified in the behavior tree. I think this may be acceptable behavior  but we may consider creating a bt action node or some way to check that the servers (or also transforms) are ready before proceeding to navigating. This could be an optional behavior someone uses to ensure everything is up and ready before continuing on. 
ros-planning/navigation2,1621,2020-04-01T01:21:57Z,2020-04-02T23:31:16Z,True,2020-04-02T23:31:16Z,db4193fd87dbd9ffc12237f47814704793ec405b,7,2,2f62e66702d9b7f8d819901e59fcbc1c5937e420 554887d26513ae6c1b4f0c4703f66d7edd367485,,Added thread synchronization to KinematicParameters 1459 ,Signed-off-by: Aitor Miguel Blanco <aitormibl@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1459  |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | gazebo simulation of Turtlebot3) |    ---    ## Description of contribution in a few bullet points    * Refactored KinematicParameters class.  * Added KinematicsHandler class managing the kinematic parameters (initialization  parameter update).  * Parameters are now managed dinamically with an atomic pointer  making their access thread safe.  * Deleted unused function declaration ```reconfigureCB```.  * Fixed bug: values of ```min_speed_xy_sq_``` and ```max_speed_xy_sq_``` are now updated when updating the parameters ```min_speed_xy_``` and ```max_speed_xy_``` (before they were only set on initialization).  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1626,2020-04-06T07:22:06Z,2020-04-07T01:40:43Z,False,none,dd00ed593b53ee416cd27a52d0dc648460f58ede,4,1,a12d069949d7e1b2fc8763c3e71d80f8a92c33c5,,add load_map service in dashing devel,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1) |  | Primary OS tested on | Ubuntu Bionic |  | Robotic platform tested on | gazebo simulation |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->  * I added load_map service in nav2_map_server that already exist in eloquent-devel branch  * And I added LoadMap.srv in nav2_msgs for above service.  * I brought source code from eloquent-devel branch.  ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1629,2020-04-08T02:36:54Z,2020-04-08T05:05:32Z,True,2020-04-08T05:05:32Z,e3469486675beb3376b2b3e3e62bdcf0ae42fbc1,3,3,f3c7c643ebbf9442937472d1b77283ece52581a3 a2b4c9674c2c41f00a280eb2402a2362f4cd5b46 f7a519311cbf7d8f95fd902154436615cdf9c348,,Docs,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1228  |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Gazebo simulation of turtlebot3 |    ---    ## Description of contribution in a few bullet points  * Added new gifs for getting started and slam tutorials.  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1636,2020-04-14T09:03:55Z,2020-04-15T04:07:00Z,True,2020-04-15T04:07:00Z,d653088aa4666ee0573c5855bbe1df956311ea7a,2,2,b881af3b69ae902aee633d0d3e23f4b21efe033a f6c7160676e52d4a4e44d0f77f265a95dea6e265,,Allow reaction to cancellation and preemption on wait recovery plugin,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1622 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | gazebo simulation of turtlebot3 |    ---    ## Description of contribution in a few bullet points  * Updated onCycleUpdate to check if wait time has passed instead of using a sleep function. This allows stopping the wait action if needed.    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points  * Currently only the cancellation is working due to issues with the preemption handling.  This will most likely require bigger changes and will be taken care of in a different pull request.  <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1633,2020-04-10T16:26:34Z,2020-04-16T00:35:23Z,True,2020-04-16T00:35:23Z,b72c11fc27c83e05cdd7370b54ba3806e266ee6c,3,6,8e2d690be2ce9f7b5d466d3e18a9993760ca0d77 390e8a73f60cf29e20f50528c89dabc9a1bbcf4f 9f635f49fd7de67dfc31c3bbb095ae1337b57be5 b6b9be8cb7fe2fe2e34b6114e8314fe0cb1e9ab7 238efc6cd35bb40ad9993300a08db935f58efc9c b664c6ae10292f475816f8260b87c19c3f9a1c36,,Nav2 planner plugin tutorial,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1533 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points  * First draft of Nav2 planner plugin tutorial  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points  * Need feedback for my draft!  <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1638,2020-04-16T02:28:08Z,2020-04-16T03:11:33Z,True,2020-04-16T03:11:33Z,83054e6594bafb2afaf840dcbee8ef1745408d29,2,1,9add9febfbf97b536c11b00efa1eefbadfd665a0,,Minor path fix for gif,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on |  |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points  * Minor path fix for gif  * Fix some typo  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1637,2020-04-16T02:06:03Z,2020-04-16T03:12:01Z,True,2020-04-16T03:12:01Z,5a69a4437d6dfb95ba8caa470c0394ec061d910e,1,1,cf5f47646ccf16a329aff3949eed47f9585d8306,,Minor improvement on best practice for pluginlib export,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on |  |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points  * Add best practice line for pluginlib export macro's location in costmap plugin docs  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1640,2020-04-16T11:12:39Z,2020-04-16T14:37:28Z,True,2020-04-16T14:37:28Z,26d776b4b1e3b39c01bd2f3a32fc924fff04ddf5,1,1,282055c7523baf0b4642d949676d5b072d9fb114,,Fix segfault in test_planner_random_node test_planner_costmaps_node,Fix for the `test_planner_random_node` and `test_planner_costmaps_node` flaky tests.    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1585 |  | Primary OS tested on | Ubuntu 18.04 with ROS2 eloquent onboard |  | Platform tested on | colcon test |  ---
ros-planning/navigation2,1639,2020-04-16T03:31:16Z,2020-04-16T03:57:37Z,True,2020-04-16T03:57:37Z,6ab8521d3b93072c6147c378592f9ac32a70356a,2,1,9c73209d2d130924987b50ed84253992f05c772a,,Add caps to headers,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | |  | Primary OS tested on |  |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points  * Add caps to headers  * Fix some grammar!  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1417,2019-12-05T20:24:17Z,2019-12-05T21:01:01Z,True,2019-12-05T21:01:01Z,2ac07b2a8a8f718edd596c9363a53d2d6998163b,16,5,e95425823ef1e7e2de052cbaf47d68725c4f8b4b 3e5090c1c6785246914a0f8f88df4aff6bc6652f fe50a8fce472664c9b36247030f565f1a1a182d0 ff4a66b1f8babe660e9bffeb008c41f49e8a7302 1daba4408493a421a96fb7ce6357fd5ed26398d6,,Revert dynamic params,## Description of contribution in a few bullet points    * Reverts the dynamic parameter changes. They broke the system tests.  * Something in #1370 is the primary cause of the failures  but #1378 depends on #1370 so this backs it out as well.
ros-planning/navigation2,1643,2020-04-20T01:14:46Z,2020-04-20T01:35:44Z,False,none,e9973b8c610d5b5d2d5d78cc8f2a1e65175dddf6,1,5,b881af3b69ae902aee633d0d3e23f4b21efe033a f6c7160676e52d4a4e44d0f77f265a95dea6e265 292105c41ccc0e65d83e58110aac587a856ac3ea 93866cf5d61e443eb2e59869add8e6d0f1cd7002 492d80a56e20d9a86537bf5062414dba48db58e5,,Updated RecoveryNode to halt both children,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1622  |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | gazebo simulation of turtlebot |    ---    ## Description of contribution in a few bullet points  * Modified the halt function on the RecoveryNode to call halt on both of its children (originally  the halt function on the base class does only call halt on its first child).  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1641,2020-04-18T04:25:48Z,2020-04-22T22:42:00Z,True,2020-04-22T22:42:00Z,9615c2ef5d3c89db901f916b136845367e5fcabb,15,2,2354dd9be5f707576aa284af5256eab8fa897825 e9d976fbe792e1edbeff19043b69bf4953bfdef9,,cherry pick 2ac07b2a 1417 for eloquent,Per #1417 and @seanyen 's request.    Waiting on CI before merging. 
ros-planning/navigation2,1649,2020-04-23T11:38:55Z,2020-04-23T16:25:47Z,True,2020-04-23T16:25:47Z,320586106e10845d21b61aa0123b95aa33e72508,1,1,e96d54231f4c6dd43b22b13536f706141f6035eb,,Fix trans_stopped_velocity comparison with x y velocity,Signed-off-by: Shrijit Singh <shrijitsingh99@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1645) |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (gazebo simulation of turtlebot) |    ---    ## Description of contribution in a few bullet points  Updated trans_stopped_velocity threshold to compare with hypot() of x & y velocity.  
ros-planning/navigation2,1624,2020-04-03T19:09:35Z,2020-04-23T18:34:32Z,True,2020-04-23T18:34:32Z,b01810bcf5da97620afa53ec047f54f34c80c3e1,46,5,84cff7d8cf43443e23bc4852129791d665f6e5c7 8256121d9ddfece535c5f56a5d30bc5312b90275 89ece9672dc847161607acc658b63fe2bafb90a7 0db44c7227b1811f4781531d46d708fadc149051 85cba4295b22a70910adea4f791c0b23b8ef9ddb,,map_server refactor and cleanup,nav2_map_server global  * Add SaveMap service messages for "save_map" service  * Add object-independent logging for static methods  * Re-organize file names:     main.cpp -> map_server_main.cpp     map_saver_cli.cpp -> map_saver_main.cpp  * Fix tests    nav2_map_server/map_saver  * Add saveMapToFile() static method for calling it directly from    libmap_server_core without having an object.  * Add ability to save a map from custom topic ("-t" cli-option)  * New SaveParameters struct with map save parameters  * Add parameterless constructor for using map_saver with dynamically    updating parameters and subscribers  * Add setMapSubscription() method for creating a new map subscription  * Reset subscription in the end of mapCallback()  * Reorganize parameters verification code to new    checkSaveParameters() method  * Correct logging for incorrect input cases in checkSaveParameters()  * Add new_promise() method for resetting promise externally  * Rename try_write_map_to_file() to tryWriteMapToFile() and make it    to be static method  * Fix some comments and descriptions    nav2_map_server/map_saver_server  * New map_saver_server executable: continuously running server node  * Add MapSaverService LifecycleNode that provides map saving services  * Add "save_map" service for map saving from a topic  * New launch/map_saver_server.launch.py server launcher    nav2_map_server/map_server  * Move LoadParameters struct from protected to independent state  * Rename loadMapFromYaml() -> loadMapResponseFromYaml()  * Add loadMapFromYaml() static method loading map from YAML  * Make loadMapFromFile() method to be static for using in    libmap_server_core  * Add node prefix to "map" and "load_map" service names  * Fix crash: dereferencing nullptr in map_server running as a node    while handling of incorrect input map name  * Rename load_map_yaml() to loadMapYaml() and make it to be static    method  * Add setNodeTimeInMsg() method for correcting a node time in    OccupancyGrid messages generated in non-static methods  * Minor changes and renames to keep unified code style    nav2_util/map_loader  * Remove as duplicating of MapServer::loadMapFromFile()    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1010) |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Gazebo simulation of Turtlebot3 |    ---    ## Future work that may be required in bullet points  * Fix after review  * Cover these changes by testcases  
ros-planning/navigation2,1650,2020-04-23T17:04:48Z,2020-04-24T20:07:15Z,True,2020-04-24T20:07:15Z,5fd07b47e7770206276f9d49e0921d4bd819fc15,1,3,ae73aa019fcfa89f0a3f13d5a4813e33b9be0ae5 c3cca1798963d093810f1798e27b18dedb05e260 08a9cc1066fe1fbe49a7f4ded6e27ad39ffadd1f,,Map Server docs update for Foxy,Adding "Map Server Re-Work" part in Foxy Migration Guide    ---    ## Basic Info    | Info | |  | ------ | ----------- |  | Ticket(s) this addresses   | #1010 |  | PR this addresses   | #1624 |  
ros-planning/navigation2,1654,2020-04-25T18:35:35Z,2020-04-25T20:28:00Z,True,2020-04-25T20:28:00Z,a0279a10d72fc297e3dabca2e017b7443616b7a9,3,1,6ce976b6d4725e02d58a1a6e24392446d964ca17,,Initialize variabes to avoid errors during build,Signed-off-by: Pablo Vega <epvega@gmail.com>    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  #1648 |  | Primary OS tested on | (Ubuntu 20.04 |  | Robotic platform tested on |   |    ---    ## Description of contribution in a few bullet points    * I initialized some uninitialized variables which were causing build errors on master branch for Ubuntu 20.04. As in #758  the values are set by get_parameter and get_parameter_or but the compiler issues warnings   which are treated as errors  
ros-planning/navigation2,1656,2020-04-28T03:06:05Z,2020-04-28T04:18:18Z,True,2020-04-28T04:18:18Z,bc6a41d08dbf1c36c0c4e32b0a32393194d12ffd,1,1,a6a42a2baa3c72457f4ed96a6282d92d1c95d225,,Temporarily remove planner tests,These are by far the most flakey tests. Removing them from running to return CI to some stability. 
ros-planning/navigation2,1657,2020-04-28T04:01:02Z,2020-04-29T23:32:53Z,True,2020-04-29T23:32:53Z,0e4a9bb632ecac1b480b0ea72697575c5d4cc1b9,78,1,22e1770e66a6e5e3cf9bc3b760d32f3274657a29,,remove docs from navigation2 repo,Removing the docs from this repo and moved all to https://github.com/ros-planning/navigation.ros.org    PR following to nuke the gh-pages branch and put a redirect to the new location.  https://github.com/ros-planning/navigation2/pull/1658    @ruffsl can you sanity check my circle CI removal?     https://github.com/ros-planning/navigation2/issues/1653
ros-planning/navigation2,1658,2020-04-28T04:02:18Z,2020-04-29T23:33:20Z,True,2020-04-29T23:33:20Z,f8cdc696a4dbddea172ee9a280e06988f6478ab6,145,1,316fdf4c094a204d23192dab201dbfc368875b26,,Manually redirect gh pages to new website navigation ros org ,Remove all in gh-pages manually and updated `index.html` to redirect to navigation.ros.org     Source removal PR is here: https://github.com/ros-planning/navigation2/pull/1657
ros-planning/navigation2,1668,2020-04-29T23:35:55Z,2020-04-29T23:50:00Z,True,2020-04-29T23:50:00Z,c64ee48b06d3ed24c55b7aaf6089017a080057b2,1,2,605e8a0ee5029c40bb5f442e8dca36aea55f997f 0d57860138ec912c2a68cabde2e407e3f7b6bd40,,Update hyperlinks in readme for new website docs,
ros-planning/navigation2,1671,2020-05-01T04:51:47Z,2020-05-02T02:33:56Z,True,2020-05-02T02:33:56Z,e85802c5970de72366ee93b1abe2696544819229,2,8,035fa6f71b227b86139f338b3c1b8f928015a783 472b4dd9357c80fbf656f69ae888c606e655cafe 8dd42f2f39a415ff8c512146e325c9ed74e37f39 2b4018755be24d8b37880945052a7a0ddc47274c 895cf8d8d73aec509f3c609c2e0b4711c5e6f991 3400a917dcde98f3450863b4d62692884ffdd8eb b7f2ff22b1aee39855c963c153997a892f36497c 2c3a89f9d2645cbeb4924e151db99d4b014159d3,,Ignore codecov paths in tests,Ignoring the codecov results for the test directories. We should be measuring code coverage of production code  not redundant coverage of the tests themselves. 
ros-planning/navigation2,1674,2020-05-03T11:14:23Z,2020-05-04T02:16:21Z,True,2020-05-04T02:16:21Z,ecc42fb3879d470590b9d9ef893c7565cee3b69b,1,1,c7087f5b1af958681bed72433ae5d64b4debb021,,Fix bug in the condition to publish local plan,Signed-off-by: Francisco Martin Rico <fmrico@gmail.com>    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | No ticket |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of Tally |    ---    ## Description of contribution in a few bullet points    * I have found a small bug while I was trying developing a controller plugin  trying to debug the local plan  * The local plan wasn't published because the count subscriber condition was wrong.  * This small PR fix this bug    ## Description of documentation updates required from your changes    None    ---    ## Future work that may be required in bullet points    None
ros-planning/navigation2,1670,2020-04-30T23:30:01Z,2020-05-05T02:59:54Z,True,2020-05-05T02:59:54Z,1a4e79f5f8d868b8c0022749097298ac33ce7c4d,9,5,b79a29c94d240edcd916133696cb64e40023e87b c19fad445b7cdbdaf26f54696a09feecaf03a17f 3aedf58579e23373cf6fca333abb4b1573cc8c1e b68b2c7164a8cf4617d9495efae4f2be089a2556 4a880ac67ff85687a4c9870c43c0727c640d8ff6,,Fix infinite rotation in Spin recovery when angle PI,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  #1655 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | gazebo simulation of TurtleBot3 |    ---    ## Description of contribution in a few bullet points    * Fixes the logic to keep track of relative yaw which allows Spin target yaw to be greater than M_PI/-M_PI  * Calculates velocity commands based on the remaining angle to cover  * Adds tests for Spin Recovery
ros-planning/navigation2,1681,2020-05-05T02:18:01Z,2020-05-05T03:03:00Z,False,none,0044f07c5d933ab4c67d4777cf8a973c5db0c5da,1,2,e8b825645744b25e2c135bea6f98ce28a8b6a005 b2cad80606f01a26e82b810da070915df2708cbf,,test if recoveries construction increases coverage,Testing test coverage for constructors
ros-planning/navigation2,1682,2020-05-05T03:27:34Z,2020-05-05T04:22:20Z,True,2020-05-05T04:22:20Z,b2c1661743f3407025ad0acf050fcb6c288537b3,1,1,cd27cb2f19963b7e2a69ce55cd5336806f546aca,,Remove dead code from navfn planner,Removing dead code from Navfn that is unused. 
ros-planning/navigation2,1685,2020-05-05T06:05:13Z,2020-05-05T07:20:20Z,True,2020-05-05T07:20:19Z,6fb43d4a0543897d29d38b3e4a749b6bea6108e1,11,3,0f711df1c0c8331b6e65416c9fea746345fe24d1 5ecd1b1099331996dac54a9d1590afc0bb5a937e a3825bb21e3c6f62571e2e279042a3699a2cd69b,,adding wait recovery integration test,Adding integration test in style of @naiveHobo for the wait recovery to boost test coverage. 
ros-planning/navigation2,1691,2020-05-05T18:04:03Z,2020-05-05T22:08:57Z,True,2020-05-05T22:08:57Z,0af05e375e27beefa3ed4612fc7c9f636c05770c,2,3,5ef44b1b52c4ba3c6ba4424370ed464313083648 0f2377251d182229f34cd08c78a25999dc258dd2 64d870da567525a007606dea8b7a1d0719302e44,,Add ignoring code cov any files named test_,To deal with code cov still picking up:  - https://codecov.io/gh/ros-planning/navigation2/tree/master/nav2_map_server  - https://codecov.io/gh/ros-planning/navigation2/tree/master/nav2_recoveries  - https://codecov.io/gh/ros-planning/navigation2/tree/master/nav2_util/test
ros-planning/navigation2,1690,2020-05-05T17:17:37Z,2020-05-05T22:49:44Z,True,2020-05-05T22:49:44Z,368b3c138a19be87b89cfc17fbb9779e22f1f2ac,1,1,5a049c1e80444b34ff543ae43402fb11760c0c26,,Inflation test fix,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (#1689 ) |  | Primary OS tested on | (Ubuntu) |  ---    ## Description of contribution in a few bullet points  * Fixed mentioned issue by replacing object reference with copy.  * Added distance calculation before enqueuing cell since map key should be distance of the cell being enqueued from it source.    
ros-planning/navigation2,1635,2020-04-11T21:19:13Z,2020-05-08T07:33:06Z,False,none,6aa9f5d0d603c0707274b1ce83a0dad3d5e70692,95,5,a57b04b63349bc41615708d515ca0854f9cb5535 805f62bb5168bf4c352551b2e96e60891529bd25 8855b5a70d9b173e7abe449582931e727897d095 6a404be0d284c9a5903681abec85fe1ed0714421 0754897cc46c5b8056da1b74152922d3043a895c,, master visibility_control portable installation ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1634  |  | Primary OS tested on | Windows |  | Robotic platform tested on | turtlebot on Gazebo Simulation |    ---    ## Description of contribution in a few bullet points    * Added visibility control for properly building shared library on Windows. https://index.ros.org/doc/ros2/Tutorials/Ament-CMake-Documentation/#building-libraries-on-windows  * Corrected the executable and libraries installation location for better portability support. https://index.ros.org/doc/ros2/Tutorials/Ament-CMake-Documentation/#building-a-library    * The bottom line is that this change should not break other platform builds.    ## Description of documentation updates required from your changes    * None.    ---    ## Future work that may be required in bullet points    * More coming changes are staged at this branch: https://github.com/ms-iot/navigation2/tree/seanyen/windows Let me know how I can break them down to review-able changes.
ros-planning/navigation2,1644,2020-04-20T07:56:28Z,2020-05-07T23:24:20Z,False,none,d7d11ec64ad6b8faf5b4a65bca37ff7880768e55,8,3,0cec123eb2dc4330e24b5a4842e47cae191a9e87 15702a04b3cf5f83a3130707b29a9f552d357657 764913400ed69e87b22605527addcdaa3369af27,,Added preemption to recovery server,Signed-off-by: Aitor Miguel Blanco <aitormibl@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1622  |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | gazebo simulation of turtlebot |    ---    ## Description of contribution in a few bullet points  * I added the function to the behaviour tree action nodes so they can perform an action when goal is sent to the BtNavigator.  * I also included the functionality to allow preemption of goals on the recoveries server.  * Now when the navigation goal is preempted  the spin and wait recoveries stop.    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points  * The current implementation can stop the spin or wait recovery when there is a new navigation goal  however  their parent node is not notified on this update (the action will just return a success when done). This means that if the order or recovery actions is spin->wait  preempting the spin will not prevent the wait action from happening.  This could be fixed with a new control node able to stop the action sequence when a preemption happens.    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1673,2020-05-02T15:39:28Z,2020-05-08T19:13:02Z,True,2020-05-08T19:13:02Z,2113b6a7d9a9f8ab2f482047e312a72af87a3b2e,22,8,5c175587a76608932d274444b716fa3e8161faa6 cb2705e1230ab26ef1bcaca9ade084060a5313f6 e9dcb8b21270d864af8a1bf1c68650728ecef516 63507ef0b600ce84238eae8da123b0d6c1ceeb3d ed6ff7d18fa75d101c4e7e29c77e713dc11164eb 0c25c4651e55403b12f79f26b4b96f05904b6334 628bf78e75e733433c6500aa8ccea2574d65eb16 e3e7314a9effba0b4bf346d09af41e6f3776d421,,Change publishers to publish unique ptrs,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1672 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | gazebo simulation of TurtleBot3 (Waffle) |    ---    ## Description of contribution in a few bullet points  - Change all the publishers to publish unique pointers.    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes  - Publishers in navigation2 should publish unique pointers rather than raw messages.    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  - I have tried to cover all ROS publishers in navigation2. I'll make the necessary changes if any required.  
ros-planning/navigation2,1714,2020-05-09T19:29:11Z,2020-05-09T20:36:10Z,True,2020-05-09T20:36:10Z,50b044a863fa8b470bd862c72e1e5b30d672e840,9,1,e2edfad3662494bf48cf0159b21dab5a7368ef47,,update for BT cpp master,Per #1686     
ros-planning/navigation2,1684,2020-05-05T05:56:16Z,2020-05-09T21:33:36Z,True,2020-05-09T21:33:36Z,dafcffa75ba7a1a5e1b1bdd86c80454ba11d2447,6,13,408a2c56fc4c5d94de5720e31862a2694ad27514 60da5f13daa6b71a28b4637c9d6e9444f38f869f 88f4856b28a5671567832ea46eb58005a3b84ca4 881dd700b7b14d93ba3c4bedcecbcffa3491736b 3311fd8a4a5cd4a851c769b02a2ed09b565fed6e e6934f2ec7f82c69b8c9d49739721d18b16af789 97db5de7a367670890a01776e3a0bb5fe6671c39 e3fc4e1e91936026d8d8616bc20b5d629fcf490f 65807823fc8697ff0af632d9abe501dbb4c55522 9964c342e74dd18bd8857a798e8b59c96533f40f 301eb5435f531289514e0e21cd32c661868ccfc5 44b19c22c4d73d7d297ab7bb8d73c02c6fa0c495 3b775b0ca20d042b50929c68667d46e7bea1ee1f,,Update CI for ROS2 Foxy,Fixes: https://github.com/ros-planning/navigation2/issues/1627
ros-planning/navigation2,1669,2020-04-29T23:45:47Z,2020-05-10T21:00:42Z,True,2020-05-10T21:00:42Z,36d73c5719b8c64027f7ef087c9e178c0fba7064,1,1,755762b625b218a1284768594a2cac1ee7314f36,,Replace deprecated ament_export_interfaces,with ament_export_targets  See foxy notice here:  https://index.ros.org/doc/ros2/Releases/Release-Foxy-Fitzroy/
ros-planning/navigation2,1702,2020-05-07T17:16:36Z,2020-05-10T22:13:08Z,True,2020-05-10T22:13:08Z,7addcb7f63643a44b652e4dfb8b3bc1ef8ef509b,1,4,01fbd7d4b73207802a4dbae1c786f02611beabe5 4ca2de67957e67830e68e873bd8aa17ac77e4e78 c58d10baeb047fa15f27db7d47c509150c0dbf7b 828fb19d63f3834b2830153ea42d7737b7f15120,,Refactor rclcpp executor FutureReturnCode deprecation,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Description of contribution in a few bullet points  * Remove deprecated rclcpp::executor::FutureReturnCode to rclcpp::FutureReturnCode  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Future work that may be required in bullet points  <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1720,2020-05-11T16:01:54Z,2020-05-11T17:31:05Z,False,none,eaa1f1bccf0c87156974c02f5b67b30521bfde22,1,1,5b6874d0c0a700de20cde1b7db022a659f580b85,, WPI Checking fix syntax error in current cppcheck issue,Checking if this fixes one of the problem caused by cppcheck after foxy ci update
ros-planning/navigation2,1718,2020-05-11T06:55:03Z,2020-05-11T19:59:32Z,True,2020-05-11T19:59:32Z,536ed1f45708ef6f55639b4d615f46e480fe6941,8,5,f2d65c4ab6b73d4ecc4e6e461efbc8af3088f1a9 a49e389d35a2946fefaad1c6c678546ffd47ef37 d79cbdc4dbf92809242be7bf49ad2c32b3d14b79 1a830c742d1bc3ba48825916208bf88d8d2636ad 8ce6169900cafa027a9ba02dfb5d47af707bcecb,,Fix cppcheck errors,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  #1717 |  | Primary OS tested on | Ubuntu 18.04 |    ---    ## Description of contribution in a few bullet points    * Fixed cpperror in ```nav2_system_tests``` and ```nav2_costmap_2d```  * ```nav2_costmap_2d``` errors were fixed by converting raw pointers to layer objects to smart pointers  * ```nav2_system_tests``` error is related to https://github.com/google/googletest/issues/1419
ros-planning/navigation2,1713,2020-05-09T13:55:10Z,2020-05-12T00:29:35Z,True,2020-05-12T00:29:35Z,433c6ac72685920c70f5b9cb84e349962239d48b,1,4,2b1bf8b2179e8be3a445d46cbeaa7056f3a49290 92c0781aab53e071c017d651ee2eadb21fe21366 8d40ae67908f185bb47c03c10c6f1f1b63251c21 d804dc06814efbb47dd394ce300f703bdaad0069,, WIP Checking line coverage in codecov,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  #1709 |  | Primary OS tested on |  |  | Robotic platform tested on |  |    ---    I am changing some options here to see if it makes any difference to current branch coverage.  
ros-planning/navigation2,1704,2020-05-08T07:28:31Z,2020-05-13T20:37:39Z,True,2020-05-13T20:37:39Z,879a9379ee0a8931fc73315c4eee477ea902049a,40,3,9c07fb8ce6fda403fac6f8cdc616aadaa8b0b841 5d16bc5b520fea91a4032c96453ac79a7d369e5c 81805709fd32cc2619ae39c2fbd6c3facaf4f01f,, master Windows bring up,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1634  |  | Primary OS tested on | Windows |  | Robotic platform tested on | turtlebot on Gazebo Simulation |    ---    ## Description of contribution in a few bullet points    * Addressed the visibility control by CMake built-in feature - `WINDOWS_EXPORT_ALL_SYMBOLS`  which minimizes the maintainer effort to keep the visibility up-to-dated.  https://blog.kitware.com/create-dlls-on-windows-without-declspec-using-new-cmake-export-all-feature/    * Corrected the executable and libraries installation location for better portability support. https://index.ros.org/doc/ros2/Tutorials/Ament-CMake-Documentation/#building-a-library    * Cherry-pick AMCL Windows port: https://github.com/ros-planning/navigation/pull/849    * `ros_topic_logger.cpp`: Removed a extra `std::chrono::time_point` cast which is not portable for Windows.    * In favor of C++ standard data types for the cases using `uint` now.    * `FindGRAPHICSMAGICKCPP.cmake`: accommodated the [Vcpkg port](https://github.com/microsoft/vcpkg/tree/master/ports/graphicsmagick) and fixed typo.     * Provided `basename` and `dirname` implementation for Windows.    ## Description of documentation updates required from your changes    * None.    ---    ## Future work that may be required in bullet points    * None
ros-planning/navigation2,1712,2020-05-09T09:35:06Z,2020-05-13T21:18:13Z,True,2020-05-13T21:18:13Z,49963404e027d39c7b947d572d4e8b7907769dc2,14,6,20363e15bd2ecedd6cffefb990cb85d14c662e30 e815166df02402fcafc66135d05c3dfa3ba8280a 67fcea69caf6e3307a02b52a05cb8d4b89ec78d7 755e759281ea8398076066bd8a307ac0c402b137 1ce446ea398598b15cfc469a9d7dfe33e9adb1ee 7651dc2dc27009c8f3d88910c66dca8e3a80ae56,,Added goal updated condition node,Signed-off-by: Aitor Miguel Blanco <aitormibl@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1622 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | gazebo simulation of turtlebot |    ---    ## Description of contribution in a few bullet points    * Added new behaviour tree node that checks if the global navigation goal has changed. This is used to stop the recovery behaviours when a new navigation goal is recieved.  * The new node stores the current goal when it's ticked as IDLE (first tick) and returns success if the goal changes in the successive ticks. Otherwise it returns failure. The node is intended to be used with ReactiveFallback control nodes (the goal is checked each time  and all children are halted if it returns true)  like:     ![simplification](https://user-images.githubusercontent.com/14293015/81469800-6c364880-922a-11ea-8c64-4b393d65f43c.png)      * The behaviour trees have been updated accordingly  ending up like:    ![bt_rep_rec](https://user-images.githubusercontent.com/14293015/81469647-773ca900-9229-11ea-85ea-36e93fb05b44.png)  ![bt_round_robin](https://user-images.githubusercontent.com/14293015/81469649-7ad03000-9229-11ea-9590-3e87c03837f7.png)    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    * I have updated the readme  but I'm not sure if other updates are needed.  <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->        ---    ## Future work that may be required in bullet points    * It might be useful to add a decorator node that is equivalent to this. If we make some decorator nodes that can be nested  we can use them to trigger the replanning.    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1620,2020-03-31T04:38:06Z,2020-05-13T21:20:15Z,False,none,9b31e9fbb2d78d55f65cbcc6e416e574717c6eff,2,3,bd278bdc7b8f5671a64ca6cb9ac3631b17c3601e 4dba91ee7a544e146308b261020bdfcae785522f d7110880ab31ed69901c325c054f77374c2dd7e7,, Eloquent Fix vtheta_samples not having any effect ,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu Bionic |  | Robotic platform tested on | simulated turtlebot |    ---    ## Description of contribution in a few bullet points    * See #1619 ; this fixes `vtheta_samples` being unchangeable on `eloquent-devel`  * #1619 is actually a cherry-pick of this branch; this PR I've tested locally    ## Description of documentation updates required from your changes    ---    ## Future work that may be required in bullet points    
ros-planning/navigation2,1724,2020-05-13T00:15:40Z,2020-05-13T23:25:07Z,True,2020-05-13T23:25:07Z,13633cd3efdaf2a206bb9df0f76e4f5e8e996d2b,5,7,4008b02554b4877b543cf0df3a6d58a448fedf4b 64b9bbd6fb1a8827771449d0882e66de21c58b48 b3ec76ca7e036c99f73bc66a0274d4fe206fe699 a324e1c61d37ccfe7a31c3ed3c38abbda9ff9e6d 19ca42c2cbe5766c8af758a03f542e84908ecf56 d19b81ea3600e465dca982fbfb1668e51c78ec5d cc56a13c209035793f6bea7ae4895e6b1b9c1517,,Tf timeout,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #978 |  | Primary OS tested on | (Ubuntu 18.04) |    ---    ## Description of contribution in a few bullet points  * Added the required tf timeouts  * Refactored tf timeouts to use `transform_tolerance` parameter  * Refactored  amcl former `transform_tolerance` parameter to be `transform_publish_shift` (this is a proposal  just to differentiate this parameter from `transform_tolerance`)    ## Description of documentation updates required from your changes    * Update amcl param list with  `transform_publish_shift` and  `transform_tolerance` (if proposal accepted)    ---    ## Future work     * Refactor map->base_link or map->odom transform to use `getCurrentPose`  
ros-planning/navigation2,1647,2020-04-22T22:04:07Z,2020-05-14T01:51:42Z,False,none,0b7b7ff5bd5f08908ae7815e94190493f7058a7b,5,2,22c7d05b3e3950dd4ef137fb9d51147b1d27fb87 df5d339ec24ea19b4a000c198559cffb50e9b76d,,nav2_ompl_planner plugin for ros-planning/navigation2,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1646 |  | Primary OS tested on |  |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->      ### Roadmap  - [x] Add base code or boilerplate (0th draft)  - [x] Add basic implementation (1st darft)  - [ ] Work on feedback from the 1st draft  - [ ] Update dependency for ompl (eloquent or foxy release)  - [ ] Test on willogarage's map (Steve you know this!)  - [ ] Final touches  - [ ] Update documentation    ## Feature tracker  - [ ] Take into account costmap  - [ ]  Create somewhat smoothish paths  - [ ] Take into account robot footprint  - [ ] Have some defensible use-case for addition  - [ ] Use OMPL/sampling-based planner best practices  - [X] Have a roadmap  
ros-planning/navigation2,1723,2020-05-12T09:10:35Z,2020-05-14T16:37:19Z,True,2020-05-14T16:37:19Z,3cf92233e4f208a1222ef266b97e3c02ae7cf1d5,3,3,e2e8e709cb32850020c38db703223365b0d970d4 ebfd2b674522076bfd6e24ab2490d0f8086aeb2e beac06419d8a09f20ff01f8e86fb5fe3934f14fc,,Fix system_tests flaky issue,Testing PR for reproduce Issue No.1 from ticket #1585 
ros-planning/navigation2,1728,2020-05-14T10:36:46Z,2020-05-14T17:09:39Z,True,2020-05-14T17:09:39Z,ee719c9f9098376742fbd60f66c7ef61df9ee19e,5,2,060f2cc21a8b3017c57adaf2796a1db5d9035874 a7262d3be8d6a88214225a7cf35d80103f450e97,,Fix uninitialized variable warnings and change default value,1. Fix minor build error for uninitialized temp_tf_tol in static_layer.cpp.  2. Follow [this ticket](https://github.com/ros-planning/navigation2/issues/1683). Change default GridBased.tolerance from 2.0 to 0.5 meters. People (like me) are used to 0 meter tolerance without knowing there is a new parameter set to 2.0 meters. If we keep using default 2.0 meters  users may wonder why navigation is always successful even the robot is stuck inside a 2x2 meter square area.
ros-planning/navigation2,1675,2020-05-03T13:47:37Z,2020-05-14T19:17:29Z,True,2020-05-14T19:17:29Z,1b7c67f20ad8363ab41f68f245ed8bdc65fde8f9,6,7,36e1a8af0a231db55347c7c60d4a507500d3f6dd 044aca907d9a917c813d68a7a13bfd3da2b09d5e eeb58e8d4b53ab5ce8f16d03f2937a71b257ebb9 eee336a09afab92f1b3c09b347ad3adaf4ec324f f46fb01a706ef68f8b7844625b98374b10fc3d8e bad22eb641eb84375b72c9ee9eefea5589733624 5f2ddaed301cbdb581b8c672b0736df77d3687ce,,Add option to inflate unknown space,Signed-off-by: Shrijit Singh <shrijitsingh99@gmail.com>    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1628 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | turtlebot simulation |    ---    ## Description of contribution in a few bullet points    * Added option to inflate unknown space  * Made some small optimizations and changes to make code cleaner  ## Description of documentation updates required from your changes    * Added new parameter `inflate_around_unknown`  so need to add that to default configs and documentation page    
ros-planning/navigation2,1725,2020-05-13T20:10:11Z,2020-05-14T19:19:57Z,True,2020-05-14T19:19:57Z,4918067ba05ccb907923440c949393ffd968e4f5,3,3,42972acc33cdae15cc4e21393519a746e1de8dc0 ecbc336322bcc72e0385ae44cb05477f937ee932 199b22b68d162a37319cbfa667a7154c59a6d61c,,Add BehaviorTree visualization support using Groot,Signed-off-by: Sarathkrishnan Ramesh <sarathkrishnan99@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1700  |  | Primary OS tested on | Ubuntu 18.04 |    ---    ## Description of contribution in a few bullet points    * Add nav2 TreeNodesModel containing all BT Nodes used    * Add instructions on using Groot to visualize behavior trees    ## Description of documentation updates required from your changes    * Added instructions on using Groot    ---    ## Future work that may be required in bullet points  Deep integration with Groot:  * Add support to create new BT nodes and trees using Groot  * Monitoring tree status using Groot  * Update instruction to use Groot.  
ros-planning/navigation2,1732,2020-05-14T19:35:41Z,2020-05-14T19:52:10Z,False,none,f7d66ba78cefeabab4a62524cb2e47b0d5531559,2,7,17a140d25d488001b306e556b1d804a4e81669cd 825f5370d14d3ac52d687f263856bda29a4fcada 3180565930bf069a27feb9fe90c36224cfad1ec3 bd4ca7487e1f4cd16e5b014a16af00ba65405368 3cd70b59205d0c725a7281c721304588274e56f4 b20d05dc61f752aed67672356df8ebf6a9912843 85b1251b6b5797bad2f95b08fb8f737854d106f0,,Test PR,[Comment](https://github.com/ros-planning/navigation2/pull/1675#issuecomment-628837792) for reference
ros-planning/navigation2,1703,2020-05-08T00:32:45Z,2020-05-14T22:15:22Z,True,2020-05-14T22:15:21Z,21e2fec2a129c9e156ab95198c5fcbdf6a0713f4,14,9,fb69b25be69b17bc48e556916be80224e19a9afc e8c04c818213ff41b7b567846cf915854c996c08 0e2ff34c818e2c15ca2971f0d411d5d661f086c2 f5bdeb2011f4333d01553c0d377f8df88ca340ba 9274ab18b62ebf61b9148f11d729f96a4cdea4bb 6067d3a9614bd50f664dec9605915c39b9387595 826761eff00cee389c807e1602c358943f2d4687 82e793164e80cb0dab0f9552b96ff0cc3b02a9f1 87dfc8d062a68b57e3aec7d84867e572e176f672,,Add collision checking for footprint without using subscibers ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---  Closes #1666   ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1666 |  | Primary OS tested on |  |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points  * Add collision checking feature without subscribers  * Stripped `CollisionChecker` class to support this feature.   <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points  * Maybe adding more rigorous unit tests.  * Integration tests  <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1699,2020-05-06T21:35:24Z,2020-05-14T18:20:13Z,True,2020-05-14T18:20:13Z,2e665e44eedf0568ae84b9287bf765a3ca297f7a,19,9,87ddcf1dcbd6063e848b8ddd200ced50fcc7d618 670b54874b5501b094c988369bc77038dcd126d4 dc43b41ed31dffb5b8631f161a36e27f2e7bd944 27e05a26bbadc49f7daacfcc727d130bdece25ae 04153aa3658407fbae98ae0abe166792389903b3 3d52d3f9a4eed1b182e32bb94bd1a8ee7a1d9458 519a66252176f631e5937d358245aabd265a2cf1 1370d10390078ce1eb5e5fceb9d497b883b03b69 cb772f61ebea30e93635a353feaf6b03df9368d4,,Add DistanceController decorator node,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  #1692 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TurtleBot3 gazebo simulation |    ---    ## Description of contribution in a few bullet points    * Added DistanceController decorator node to replan after every N meters    ## Description of documentation updates required from your changes    * Add DistanceController in ```nav2_bt_navigator/README.md```
ros-planning/navigation2,1586,2020-03-07T02:06:00Z,2020-05-14T22:50:39Z,False,none,f982480cc327855d5a5f28ccca3bcf6b2c7ccbf6,24,4,c619545ac5e7502b16b40abaa58aae3f937ce5a9 d3eea8e8d1a064c094bd108c4e995b57644dea6b 2f55fa97346077aeb478828637eb72748cf8aead cda8ddb2d51f608fd9ac0273a9443074d35a20a7,for review,Feedback in navigation2 actions,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1339  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Gazebo |    ---    ## Description of contribution in a few bullet points    * Added feedback to long running actions.  * removed random crawl as it is still in nav2 experimental with the server    * NavigateToPose; pose  time spent on task  number of recoveries executed  distance remaining  * Follow path: Instantaneous speed  distance to goal in odom  * Spin and backup: distance so far gone  * Wait and compute path: none  as either has a while loop naturally conducive to feedback.     ## Description of documentation updates required from your changes    * **TODO** add to migration guide for Foxy    ---    ## Future work that may be required in bullet points    * **TODO** test each metric is properly computed and reset between runs.    This PR is also to gather reviews and feedback on other metrics you'd like to have included in the API.  
ros-planning/navigation2,1741,2020-05-15T18:53:32Z,2020-05-15T19:41:36Z,True,2020-05-15T19:41:35Z,f0cf03437caf6df7db30843b79eef047bc59e454,2,1,46158e7f68e39f7504581dd3ba5a7697f7f6bc31,,Expose distance controller frames to ports,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | closes #1730 |  | Primary OS tested on | Ubuntu 18.04 |    ---    ## Description of contribution in a few bullet points    * Exposes global frame and robot base frame to ports in ```DistanceController```
ros-planning/navigation2,1195,2019-10-02T21:56:18Z,2020-05-15T20:22:46Z,False,none,9ff4aaa71930cedfe7b7cedf33c9c3a1fb132290,2,1,2eb1b2e6f88368e3a47352d23c94b63b6e7db0c7,help wanted,Un block costmap activate transition move transform check to map update thread,Right now the navigation2 stack is brought up sequentially such that the `controller_server` and `planner_server`  which contain the costmap_2d_ros node  are blocked in the `on_activate` transition due to the costmap's dependence on the transform between global frame and robot base frame to be available before successfully completing the lifecycle transition. For the global costmap  this transform is broadcast from amcl when the initial pose is set.    This PR moves the transform check to the map update thread in the costmap  so that the `on_activate` lifecycle transition is unblocked.  Part of my goal here is to remove external dependencies from the lifecycle transition of the node. When the pose is eventually provided  the thread will proceed to updating the costmap.    Notes:  While the thread is awaiting the transform to be available  if someone requests a `NavigateToPose` action  the planner will now fail and the recovery behaviors will start and eventually fail  failing the navigation. If executing recovery behaviors is undesirable  we can add a `isTransformAvailable` check as a bt condition node to fail the stop the tree if the transform is unavailable.
ros-planning/navigation2,1420,2019-12-06T18:42:35Z,2020-05-15T20:44:08Z,False,none,b18edc5b17c80deb9a9b9724d71844503c88a59a,31,9,abf2a03ac9acbf94553d3bd5086984b9f91a9ead 16cbb0aa5628ce18bbdc473e7628904316d0b532 37a121f208175e321f075f8753e0b960ea1cc831 93c730e4a1f2bcb6fd908451b92faaa93cf7314d 4f4c83fa9338f0b6971e3ce37b07940dae3bae90 9177fc0d9ff4e7f6728a21423fc45cdfdf4f736f 97e895e89f362745fdc5954688bb34f4abfb26eb 3f1d8e6ab30c4672c35321d26c7abdb739b48a2a d4b57f55427c889737be462a525ba9fb2fdfa927,,Dwb dynamic param callbacks,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses  | #956 |    ---    ## Description of contribution in a few bullet points  - Adds `ParmeterEventsSubscribers` to dwb plugins and critics to create parameter callbacks during `initialize`  - fixes `loadParametersWithDeprecation` so that parameters are declared first  - filters event for the its own node name in amcl and costmap event callback    ## Future work that may be required in bullet points  - Refactor such that callbacks can be added from node (either from nav2_util::LifecycleNode wrapper or from upstream changes)    
ros-planning/navigation2,1695,2020-05-06T06:03:05Z,2020-05-06T18:40:27Z,True,2020-05-06T18:40:27Z,0c4aea88a2c553504693decd109e8733cf463137,5,7,e1f56c84f6c748181f016b5639ec07345bbcd5d4 df91becae25c6e0dcdc1f6b3660a20cf43cd0cfd 25ac336e305c1a8ec9725a9e0900e1c593f04f42 eea584285b266c7b45e55f0f412848326f3ddfb0 d428abe658a821fb2be0efb3b2a9c69965099759 fccaafb8dc61f355ae08a37745f45025ecd40127 2a682253a2d91e332d98ed2f3385f3f9769490d9,,Adding more simple action server nav2_utils and lifecycle bringup CLI tests,Filling out no particular ticket.
ros-planning/navigation2,1729,2020-05-14T12:35:47Z,2020-05-15T23:52:50Z,False,none,1bbe073957e3da1002b9a70c66287ed8b8dfcc6b,7,1,71f9a62d0f8dcb0267935d6c6068138b5afad3d5,,Use parameterized frames,Signed-off-by: ymd-stella <world.applepie@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1726) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | [Stage](https://github.com/rtv/Stage) and [stage_ros2](https://github.com/ymd-stella/stage_ros2) |    ---    ## Description of contribution in a few bullet points    * Added new parameters (global_frame  odom_frame  robot_base_frame)  * The default values does not change the behavior.    ## Description of documentation updates required from your changes    * Added new parameters  so need to add that to default configs and documentation page  
ros-planning/navigation2,1746,2020-05-17T02:47:30Z,2020-05-18T20:35:49Z,True,2020-05-18T20:35:49Z,7040aeb4a0aae244ca97a0d945d639e935ad45a8,1,1,82f70a4900b0020aefe41068b793a105253868bf,,Switch to nightly tag for release image,Not sure why connext related cmake from the upstream nightly archive is blocking our builds.  This switches away from the `nightly-rmw-nofree` tag  given connext rmw tests where disabled.  Related:  * https://github.com/ros-planning/navigation2/pull/1742#issuecomment-629703245  * https://github.com/osrf/docker_images/issues/403    I manually pushed a local build to Dockerhub to check  and the release CI seems fine with this:  Example: https://circleci.com/workflow-run/11963602-4cc1-44c3-a3f2-e66b176e4547
ros-planning/navigation2,1735,2020-05-14T20:33:19Z,2020-05-18T21:13:16Z,True,2020-05-18T21:13:16Z,4e87ee0eca9d7eec691899f4b3507d75aeb34994,11,9,aa980bfbb02881e8693c4f81b10ec6074180ea5f 877db4df0c471f55368885233e3d0f40b9747b65 40eb239d59ca9e7e2d9a8bd1b7f706a410fb8b98 6191970249d450cbd8341863c1c170bf166779f6 59295e8641e9208d9307c3450c82fd31ae2f6a33 7c0d15310db4ee4d553263ae9bb00707a5991512 24cafab931d6bd947780823024c6f333d9e31602 13cfac263ecf99f2fae7c726ce119d71f4e13b8b 235f572bd2596d62b5a6f1110250849c0f04f20f,merge,Parameterization of the tf_tol argument for getCurrentPose calls,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (#978) |  | Primary OS tested on | (Ubuntu 18.04) |    ---    ## Description of contribution in a few bullet points  Added `transform_tolerance` parameter in:  - goal_reached_condition.cpp  - recovery_server.cpp    Updated the following to use the `transform_tolerance` parameter in their calls to getCurrentPose:  - spin.cpp  - backup.cpp  - goal_reached_condition.cpp  - collision_checker.cpp    ## Description of documentation updates required from your changes    N/A    ---    ## Future work that may be required in bullet points    N/A  
ros-planning/navigation2,1747,2020-05-17T15:15:22Z,2020-05-18T21:39:39Z,True,2020-05-18T21:39:38Z,24dcf1ceefc0907213ace467ed0b3bb85740df20,1,1,7326fabbde9a96e293922f9a42554b79056d3879,,Enable Goal PathAlign DWB critics reduce forward_point_distance,Resolves ros-planning/navigation2#938    The forward_point_distance used in the GoalAlign and PathAlign critics projects the current pose forward a default 0.325 meters before scoring the trajectory. This can cause velocities that create sharp turns into obstacles to be chosen (reproducible with the Turtlebot3 simulation).    For TB3  which is small in size  0.325 meters is too far. Instead  enable GoalAlign and PathAlign critics in the DWB controller and shorten the critics' forward_point_distance (how far the current pose is project given the current orientation before scoring the trajectory) from the default 0.325 meters to 0.1 meters which improves stability when running with TB3.    Signed-off-by: Jack Pien <jack@jackpien.com>    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | 938 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 Simulation |    ---    ## Description of contribution in a few bullet points    * Enabled DWB GoalAlign critic by changing its scale factor from 0.0 to 24.0 in nav2_params.yaml  * Enabled DWB PathAlign critic by changing its scale factor from 0.0 to 32.0 in nav2_params.yaml  * Reduced the forward_point_distance from 0.325 (meters) to 0.1 (meters) in nav2_params.yaml to better tune for Turtlebot3's small size    ## Description of documentation updates required from your changes    * For the GoalAlign and PathAlign critics  describe the forward_point_distance parameters (which defaults to 0.325 if not set in the YAML).    ---    ## Future work that may be required in bullet points    * Further fine tune the various DWB related (ie FollowPath) nav2_params.yaml for Turtebot3  * Look into doubling the scale of the BaseObstacle critic to compensate for the enabling of the GoalAlign and PathAlign critics.  * With forward_point_distance set back to its 0.325 default value where TB3 runs into an obstacle and raises a "no valid trajectory found" exception  bag the /evaluations topic to better understand why we get into this situation.  
ros-planning/navigation2,1743,2020-05-15T23:48:05Z,2020-05-18T22:52:54Z,True,2020-05-18T22:52:54Z,f510bbc4ed42274ce13bcc756758113e70b6145e,3,2,c300e98ee5ed5ca9704cfe2f08b385662c74a6d2 2d65eb4349c059bfcf63c00ea5d1945cdb6225bf,,make basic failing test for tf2 wrapper start of robot utils tests ,More tests to increase coverage - starting to handle all the different tf2 exceptions that our robot_utils can throw. 
ros-planning/navigation2,1352,2019-11-13T05:07:08Z,2020-05-18T22:55:58Z,False,none,92915490886103dbac329b09425a1a9a2311faa5,9,3,950196431732c548ff0b2bb42858644c4e28e9e4 f0b832d5f139783b6beb712216103df966b7b745 6bdfe86d4dbb4b73f0e0d013c0437c6a41e6a779,,Default subscribe to costmap topic OccupancyGrid in CostmapSubscriber,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  #1028 |  | Primary OS tested on | Ubuntu |    ---    ## Description of contribution in a few bullet points  - added flag and conversion support to allow `CostmapSubscriber` to subscribe to the nav2_msgs/Costmap topic ("/costmap") or use the nav_msgs/OccupancyGrid topic ("/costmap_raw")  - modifed `test_collision_checker` to test for either using the raw costmap topic or the occupancy grid  - changed recoveries to use the occupancy grid topic    
ros-planning/navigation2,1750,2020-05-18T19:53:10Z,2020-05-18T21:35:18Z,True,2020-05-18T21:35:17Z,55edf58be9eaec3bb12a81e86a97f049e67a8daf,3,2,057fe3f88fbb9b95b65174aa47a65d39449cdae1 312cc1464877175678d1e87f286b178ef0588ba6,,Revert libgazebo11 workaround for CI,Fixes: https://github.com/ros-planning/navigation2/issues/1687 
ros-planning/navigation2,1751,2020-05-18T23:34:14Z,2020-05-18T23:38:23Z,True,2020-05-18T23:38:23Z,5a35677e0c2b6c0c72dde74da88c43fc67606483,2,1,fa6b8ed31ef2a86384919ee7f4eb3fc247c89520,,Run rosdep update in builder,So we don't have to wait for the nightly parent image to update rosdep.  Related: https://github.com/ros-planning/navigation2/pull/1750#issuecomment-630482940
ros-planning/navigation2,1752,2020-05-19T00:01:23Z,2020-05-19T00:04:28Z,True,2020-05-19T00:04:28Z,f119f30ef7da3a657c736ac29a9b8245ad5ad793,2,1,def6222dc053a2c99bf3e802f8c720d03f727d55,,Don t pass rosdistro when using empty index,Context: https://github.com/osrf/docker_images/pull/399
ros-planning/navigation2,1753,2020-05-19T07:46:42Z,2020-05-19T16:26:41Z,True,2020-05-19T16:26:41Z,2dfa07b81e3e604fdff529bd39a4de73713c7a8b,1,1,21daa13e262921742d5bb1762d54af66f1e3bb8f,,Explicitly set junit_family parameter for nav2_gazebo_spawner tests,Explicitly set `junit_family` parameter which fixes pytest warning message appearing in stderr.    ---    | Info |  |  | ------ | ----------- |  | Ticket(s) this addresses   | #1749  |  | Primary OS tested on | Ubuntu 20.04 Focal |  | ROS tested on | Foxy |
ros-planning/navigation2,1742,2020-05-15T22:17:57Z,2020-05-19T23:25:37Z,True,2020-05-19T23:25:37Z,ca33b19bfb75dbdda5929a299ab2baa8ef76ed1a,11,10,b814a304ef0b0e3c1eaff6d3a1f8d7412f70525d 71eb9f444067c57bb2c839907743057f2984b7d4 ee2e902e393b19c7e5fe28ece0cc70e49926f299 9aafde139dffc3d69cfa6837145e0cca74f1ede7 152475f467c22a2d92bdb513c19cd68ccf5e42a5 1e51cc2e63b6875c186af173278d8ccde492df3a a90b35678e029d40b7e98237c3d537f6c395bd9d 772a3a79cc1f34fc7a14eb32e9bd5fda3d666d55 6bfa9c15a3b4cbf1d6f649604a6a63edcca3a795 5c373ac0555116f4b10feadc7b09f8279b620b25,,Parameterize frame IDs,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    Original PR:  #1729    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | closes  #1726 |  | Primary OS tested on | Ubuntu 18.04 |
ros-planning/navigation2,1734,2020-05-14T20:09:55Z,2020-05-20T17:12:07Z,True,2020-05-20T17:12:07Z,6b79b34a08e4ef237d2c21fe6a3e4234b1c88334,1,2,1648f4ddb72bbc1073029134794fe029e36ecf7c 5e212347b83aa671305ec054505f0f2a35afc11d,,Add the goal to NavFN tolerance region traversing algorithm,Reproduction & fix PR for #1733
ros-planning/navigation2,1760,2020-05-21T20:25:45Z,2020-05-21T20:55:03Z,True,2020-05-21T20:55:03Z,7ee17c337ba62d73b5793ab56430efd365783a61,1,1,5899ffa2bc71f01139c75cc10e6cae7154c17074,,Re enable nightly debug builds for codecov,Looks like codecov analytics from merged PRs alone do not update codecov status for the master branch. Re-enabling nightly debug builds to keep codecov status on master up-to-date.    ![image](https://user-images.githubusercontent.com/2293573/82602782-792a3480-9b66-11ea-83ad-37f6e5b162c5.png)    https://codecov.io/gh/ros-planning/navigation2
ros-planning/navigation2,1756,2020-05-21T00:36:00Z,2020-05-22T21:41:05Z,False,none,b8ae8dbb6423f065f880cf82776d8221ffa1f49e,4,1,d49b37fd490f7847395b67bc5d74bf1b9c46c86d,,add namespaced params sample,make sample launch file easy to use.
ros-planning/navigation2,1694,2020-05-06T05:30:03Z,2020-05-06T06:05:00Z,True,2020-05-06T06:05:00Z,07312bbcff363965a651eaa195dcf3c310db675b,2,1,2dcba12a23af93baef4aef297071ae150586814e,,Fix segfault in test_planner_random_node,deactivate needs to be called before cleanup to stop the mapUpdateLoop()    Signed-off-by: Siddarth Gore <siddarth.gore@gmail.com>    ---  ## Basic Info  | ------ | ----------- |  | Ticket(s) this addresses   | #1585  |  | Primary OS tested on | Ubuntu 18.04 (WSL2) |  | Robotic platform tested on | colcon test |    ---
ros-planning/navigation2,1759,2020-05-21T04:50:15Z,2020-05-22T17:51:24Z,True,2020-05-22T17:51:23Z,7c0ac74514506591c0d508a6bc10e42d1d67162f,6,1,97891c59dae6dcb26c6f49f712a0994937a7af3c,,Wait for initial pose and increase timeouts,Initial pose is needed for the test to run  so it makes sense to wait for it till it times out.    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (#1733 ) |  | Primary OS tested on | WSL2 Ubuntu 20.04 |  | Robotic platform tested on | NA |    ---
ros-planning/navigation2,1769,2020-05-26T19:37:55Z,2020-05-26T20:15:25Z,True,2020-05-26T20:15:25Z,d7ff68b7f35d20a90f908be1e9e3c46c32709acf,1,1,c990aee608bc8bede2ac843709e508d42488fb6b,,Removed unused condition in twirling cpp,Removed an if condition that never gets executed which mentioned in #1766.
ros-planning/navigation2,1770,2020-05-26T21:53:23Z,2020-05-26T23:00:33Z,True,2020-05-26T23:00:33Z,1a96da4405916eaa9cc0e791c01e0211bb7ab3b1,3,4,257c37e60d0cfd6559e5b38b962ef0c8c6e813de d038ac22cbe53345551af50f8a445cc877bca303 456097eef703131de38ec76ed5d3ef909c60ea78 22b5afe9e61434f95d5c045954ba6d71b1d6dfb8,,Declare odometry subscriber topic and goal_reached_tol ,Requesting pull request to fix missing parameter declarations in odom subscriber and goal_reached_tol.  --    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |#1763|  | Primary OS tested on |Ubuntu 18.04|  | Robotic platform tested on |Diff drive robot using DWB|    ---    ## Description of contribution in a few bullet points  * declare odom topic for odometry subscriber.  * declare goal_reached_tol for goal reached condition.    
ros-planning/navigation2,1765,2020-05-22T19:32:05Z,2020-05-27T00:05:50Z,True,2020-05-27T00:05:50Z,de0ed9aa85ae912cdb85e7eb12fb96dbdaa53c88,2,4,5f53ac035a694b3fa21daebae0484d9639eb8171 99b61bcc444d30e679ed71e9ae5153381fe7701f 13ca548b4bab5f77a3e9cf900c0c2c3dbbbe31ed 2850e8948673586b4e40966572551a6c2631b1d1,,Added use of declare_parameter_if_not_declared ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1763 |  | Primary OS tested on | Ubuntu 18.04|  | Robotic platform tested on | None |    ---    ## Description of contribution in a few bullet points    * Added declare_parameter_if_not_declared calls so that parameters are read from yaml.    ## Description of documentation updates required from your changes    * None    
ros-planning/navigation2,1764,2020-05-22T19:31:19Z,2020-05-27T18:28:55Z,True,2020-05-27T18:28:55Z,41d97c5d272076d32e417c126ab3ea2803db2c74,1,1,245c912a6365b41cf61d5daa45ea14f2b8e035a1,,a bugfix of clear costmap service action,The following is an example of the error.    [ERROR] [1590171638.335693813] [bt_navigator]: Action server failed while executing action callback: "failed to send request: ros_request argument is null  at /opt/ros/src/ros2/rcl/rcl/src/rcl/client.c:278"a bugfix of clear costmap service action    `BtServiceNode` creates `request_` in `on_tick` but it was overrided without it.    https://github.com/ros-planning/navigation2/blob/master/nav2_behavior_tree/include/nav2_behavior_tree/bt_service_node.hpp#L94    Signed-off-by: Daisuke Sato <daisukes@cmu.edu>  
ros-planning/navigation2,1705,2020-05-08T16:38:56Z,2020-05-27T18:30:45Z,True,2020-05-27T18:30:45Z,ec7f550ced0bcba19dedc013a55c5ee5a02b76c9,15,9,cf39a5457d4d6696ae1955a4332b7db5f3a1dbaf da73f76a958e7ba54412e708bae0910f7c26c806 363f97403e444b7d7208d78ba7b0167a9945e50f da6f5b2fc9700ca7353672cd97ab3904ba160b05 24d39bae2174a8d134351770651a2971d9123a6e 19c8c4f092ccd4c8b6f8372b48be3c636eac533a e0d23051c9ce2991566f69695aae5ece15c65ced ce4b7dc7de333134539140ead7870960eff148d8 de0f7972dd5fa4714190ee49903f081f1ebed57a,merge,Add condition nodes for time and distance replanning,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | None |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TurtleBot3 gazebo simulation |    ---    ## Description of contribution in a few bullet points    * Added three new condition nodes:  1. **TimeExpired:** returns SUCCESS after every predefined time period  2. **DistanceTraveled:** returns SUCCESS after every N meters distance traveled by the robot    ## Description of documentation updates required from your changes    * Add new condition nodes to https://navigation.ros.org/plugins/index.html  
ros-planning/navigation2,1776,2020-05-27T22:48:30Z,2020-05-27T23:20:11Z,True,2020-05-27T23:20:10Z,09a4878d7b4d58446c2069fae2de952ba83f4a08,2,1,a50a9500cce8b0e362ea3c9ba8967be89d9f840b,,a patch for 1773 BT navigator nodes with use_sim_time,Signed-off-by: Daisuke Sato <daisukes@cmu.edu>    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1773  |  | Primary OS tested on | Ubuntu |    ---    ## Description of contribution in a few bullet points    To deal with #1773 issue  - set `use_rclcpp_node` option to true to prevent from creating a node not used  - change the name of the node `client_node_` as `xxx_rclcpp_node` to keep configuration file consistency     ## Description of documentation updates required from your changes    N/A
ros-planning/navigation2,1778,2020-05-28T00:30:53Z,2020-05-28T01:55:46Z,True,2020-05-28T01:55:46Z,e47787311c4f2cffbb40c14ce6c09553e5da720c,17,2,063a3b7cc870050de6884e0ccff741ec2034e951 1447e8acc1b971d05781d08f90f23680f91ab9ed,,Replace deprecated launch params,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | closes  #1775 |  | Primary OS tested on | Ubuntu 18.04 |    ---    ## Description of contribution in a few bullet points    * Replace launch 'node_name'  'node_executable'  and 'node_namespace' with 'name'  'executable'  and 'namespace'
ros-planning/navigation2,1774,2020-05-27T22:05:52Z,2020-05-28T02:52:37Z,True,2020-05-28T02:52:37Z,a9171d0233de1aac5467cb0cf89adc1de0e73dfb,8,5,ccf7617a09cebff4d7d00be4c2a62461d63bd7ae de671c55474e11f15d80d40d65ddb229ea2f9e8b 2d6db2ca32840b4463c9677ef724b2c923fe29ab ae13863feb72b2a6c6d9a3548d2d10107d41dfe6 04046230d11f4f174796490240d1bc3a8edec0f6,,adding backup tests,Adding test coverage for the backup recovery behavior. I have it back up in 2 phases: 10cm and then 20cm  both should succeed. Then a failure case of -2m to hit a wall.   
ros-planning/navigation2,1767,2020-05-26T07:30:34Z,2020-05-27T18:28:06Z,True,2020-05-27T18:28:06Z,8765a25540465d4faeca8f91a54be6ed47b3595d,1,1,4b6673eb7dd1b3b07b31090fd423da920c76fb06,,Issue 1608 segmentation fault planner server node master 1612 ,* corrected wrong indexing in NavfnPlanner::smoothApproachToGoal function    * resolved uncrustify errors    * corrected the condition inside NavfnPlanner::smoothApproachToGoal to replace last pose of computed path    Co-authored-by: chikmagalore.thilak <chikmagalore.thilak@bshg.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1) |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1785,2020-05-29T17:58:01Z,2020-05-29T18:41:58Z,True,2020-05-29T18:41:58Z,6843266a847f7ef15a35f6dd578ad05c623e43dc,1,1,401cdbd7c85b001c83d6f4a10d6bad3b4890ed9b,merge,declaring default_critic_namespaces param in dwb_local_planner,Declared `<dwb plugin>.default_critic_namespaces` parameter as discussed in #1783
ros-planning/navigation2,1761,2020-05-22T01:53:14Z,2020-05-29T18:42:29Z,True,2020-05-29T18:42:29Z,4708b5939fbf9be184af29cdf4e48586e9d2d907,1,7,8ff014db4a3d4950d0709a79834afb71a7bc409b 18ad72504c4ca180f121235046c817a81178ba76 660427db0fcc8418aa03313f6618feacbb9c7e7c 1e07175c1b8ac9efdcb90be65be2fd81db721a06 7348dafb45651fa206b2bee6b97e9652de210298 041f917207d205ce907dd809f71eed597c131c69 8982aafb6c0aff2394a188364ce69dce3d0e8011,merge,List of parameters in the stack ,This should contain a list of all the declared parameters in the stack #1589.    Was thinking of having each parameter in it's package readme  let me know what you think of the best format and location for this data.
ros-planning/navigation2,1790,2020-06-01T16:33:56Z,2020-06-01T19:04:56Z,True,2020-06-01T19:04:56Z,13d6629356e897e1717f2fd9579d807bd3c8cfc6,3,1,4c8aeaea3d1550bd300695c6bfee9bc6f8acd24a,,Fix some parameters not being passed to getCurrentPose,  <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | None (related to #1742) |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | [Stage](https://github.com/rtv/Stage) and [stage_ros2](https://github.com/ymd-stella/stage_ros2) |    ---    ## Description of contribution in a few bullet points  * Fix some parameters (global_frame  robot_frame  transform_tolerance) not being passed to getCurrentPose    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  <!--  ## Description of documentation updates required from your changes  -->  <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->  <!--  ## Future work that may be required in bullet points  -->  <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1768,2020-05-26T15:07:33Z,2020-06-02T19:37:42Z,True,2020-06-02T19:37:42Z,d2bfdf2de7ec74adf3d0a9ccf46d2f1f455de42f,5,3,3579850ec0c6a1959cc96f939e971bfebc7f4194 05d1cc663c6839c8c5def79d2405c55c29e30a0d b03d1d4304ce452650155dcd1bdb13be99415bd6,,Add SLAM Toolbox and map_saver_server into launch files,Adding new `nav2_bringup/bringup/launch/slam_launch.py` file running SLAM Toolbox  map_saver_server and requesting once a map through `/map_saver/save_map'` service call. This can be enabled via `slam` parameter  as follows:  ```  ros2 launch nav2_bringup tb3_simulation_launch.py slam:=True  ```  Default behavior when `slam` parameter is not specified did not changed.    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1630 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | Gazebo simulation of TB3 waffle |  
ros-planning/navigation2,1789,2020-06-01T02:32:35Z,2020-06-02T20:35:23Z,False,none,70b541f81c2e326604d7c83a59343572c2617c48,3,2,663d3cc8bb260fbf7c20d3c6ccbfbc9409984f84 7b43a30cb5195de6f048299626cd495e066d8b8f,,Add spin test for collision,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points  * Add collision case for spin recovery  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points  * Change expecting status to FAILED (or false in bool) after action status fix in #1779   <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,879,2019-06-19T22:48:17Z,2019-07-02T21:09:31Z,True,2019-07-02T21:09:31Z,d719479d994a04150eb4c3568ee7d6f2fbb8c737,3,1,34674ffcec6b3efd18d69dfe0b7d82b62f32d73b,,Fix backwards compabile parameters,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | N/A |  | Primary OS tested on | Fedora Linux |  | Robotic platform tested on | hardware turtlebot3 waffle |    ---    ## Description of contribution in a few bullet points  * Without these changes  I've been seeing 'foo has already been declared' errors.  * This doesn't appear to be covered by tests  but repro's when the `critics` parameter isn't set  triggering the following code path:     https://github.com/ros-planning/navigation2/blob/5fe3d4ecc2a5abd7abcdb622ec34f05721da3268/nav2_dwb_controller/dwb_core/src/dwb_local_planner.cpp#L190-L230    ---    ## Future work that may be required in bullet points  * When a backwards compatible parameter is set and moved  it is deleted. However  if neither the supported nor backwards compatible parameters are set  they're both left declared. I'm not sure what the desired behavior here is  but it seems inconsistent.    I'd like to request maintainer: @crdelsey to review this PR.
ros-planning/navigation2,877,2019-06-19T21:36:01Z,2019-06-20T20:44:42Z,True,2019-06-20T20:44:42Z,c1ac12638bc25553d8445dceec735e6f65ff5e8c,1,1,b917266d163f65b8fb7dc6ae6a6a126033920d18,,Use proper exception rethrow for DWB critic init error,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | N/A |  | Primary OS tested on | Fedora Linux |  | Robotic platform tested on | hardware turtlebot3 waffle |    ---    ## Description of contribution in a few bullet points  * This change makes critic initialization error messages display properly.     Without this change:     ```     [dwb_controller-7] [ERROR] [dwb_controller]: Couldn't initialize critic plugin!     [dwb_controller-7] [ERROR] [dwb_controller]: Couldn't load critics! Caught exception: std::exception     ```
ros-planning/navigation2,874,2019-06-19T21:10:20Z,2019-06-20T20:13:40Z,True,2019-06-20T20:13:40Z,6bccff3bf6cb48a0c589d35d34af96f259bf337d,1,1,eb3309b7a6df7edfe7e085df1789fdbc66f65714,,Fix robot model and LiDAR display in RViz config,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | N/A |  | Primary OS tested on | Fedora Linux |  | Robotic platform tested on | gazebo simulation |    ---    ## Description of contribution in a few bullet points  * Laser scans are published using `SensorDataQoS`  which means 'Unreliable' should be checked in RViz  * `robot_state_publisher` pushes out the model over `/robot_description`.
ros-planning/navigation2,873,2019-06-19T21:05:00Z,2019-06-20T19:06:47Z,True,2019-06-20T19:06:47Z,8f71577fbe51cca58c2ea5cf5bb7882afcac34df,2,1,7478afb2cc1ba3b2d4fb2e27d13b26e207df19a0,,Use platform independent library paths for DWB plugins,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | N/A |  | Primary OS tested on | Fedora Linux |  | Robotic platform tested on | gazebo simulation |    ---    ## Description of contribution in a few bullet points    * Resolves the following runtime warnings:     ```     [dwb_controller-8] [WARN] [pluginlib.ClassLoader]: given plugin name 'lib/libstandard_traj_generator' should be '/libstandard_traj_generator' for better portability     [dwb_controller-8] [WARN] [pluginlib.ClassLoader]: given plugin name 'lib/libsimple_goal_checker' should be '/libsimple_goal_checker' for better portability     [dwb_controller-8] [WARN] [pluginlib.ClassLoader]: given plugin name 'lib/libdwb_critics' should be '/libdwb_critics' for better portability     ```  * This aligns the DWB plugins with costmap  where this is already correct:    https://github.com/ros-planning/navigation2/blob/549c69a6619dccb6344a96919e5c830aa9078a9d/nav2_costmap_2d/costmap_plugins.xml#L2    https://github.com/ros-planning/navigation2/blob/549c69a6619dccb6344a96919e5c830aa9078a9d/nav2_costmap_2d/CMakeLists.txt#L79  
ros-planning/navigation2,871,2019-06-19T19:04:26Z,2019-06-20T17:42:46Z,True,2019-06-20T17:42:46Z,a2a631a994c4b299195712b961bbba83fca23681,4,1,dcd85eea11fccfebbf9b9b169cec2f9b137337ef,0 - Critical,Catch polymorphic exceptions by reference,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | N/A |  | Primary OS tested on | Fedora Linux |  | Robotic platform tested on | N/A |    ---    ## Description of contribution in a few bullet points  * Addresses build errors when `-Werror=catch-value=` is specified.  * Tested with: `gcc (GCC) 9.1.1 20190503 (Red Hat 9.1.1-1)`
ros-planning/navigation2,1793,2020-06-04T06:03:27Z,2020-06-04T17:58:33Z,True,2020-06-04T17:58:33Z,fd2955a4a64b22a40d1bb7f0469177640f98d966,3,2,f42fe41a1a1cd8a98d1544c3c943ec14309d4365 2b7d80c10b95a83795406fd116eb068af0ab71bd,,BT navigator conversion fix,Signed-off-by: Daisuke Sato <daisukes@cmu.edu>    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Primary OS tested on | Ubuntu20.04 |  | Robotic platform tested on | Turtlebot  nav2_system_tests |    ---    ## Description of contribution in a few bullet points    bt_action_node and bt_service_node could not get server_timeout input properly due to lack of `convertFromString` definition.    * include `bt_conversions.hpp`   * remove redundant include statement    ## Description of documentation updates required from your changes  N/A
ros-planning/navigation2,1786,2020-05-29T22:16:07Z,2020-06-05T18:01:41Z,True,2020-06-05T18:01:41Z,d1240c23428ac386096d622ca5eeb12c261632d2,1,7,bfeff0e6214af91e3c57a107abffba7a824861d4 75d575abf12f9febb88685666bc0e3465e14ba7f 59f75503843d84113003cba65755a9d40cfe5a74 b3ad6e402a94f94e3e246564b66b84420d097d67 5dede22d6bdcd8842ce74baedbeb22420b1f1d44 f66095c550e2b794491cb49557846f6e17e694ee 414db6d1f964bb971cb4021310db3c654237a3ba,merge,Add complete parameter description documentation,Adding complete descriptions for all parameters in the stack.    Currently missing   - [x] AMCL  - [x] DWB    Need to review some notes to add those  but the rest are here
ros-planning/navigation2,1794,2020-06-04T19:59:31Z,2020-06-05T22:12:08Z,True,2020-06-05T22:12:08Z,9e304b1ad4c10d03f7a08991224fd9686c6bb26d,4,6,30b2a8f5e7a279516cefa5045d7c3600464ef742 81c1b7d0ed61c9bff62db64b58743c4b65b1d77b 6da6b02f7c28432f1c32ee23927c68e9672b4f28 3ac43cdb3009ea24302cf9d9913a73715949a7ab f481dd0f80594c30bd47fd1721a4066f433bb610 1217775342668b8240dd37b9474da7f6c52d1745,merge,Test for lifecycle manager,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | ||  | Primary OS tested on | |  | Robotic platform tested on | |    ---    ## Description of contribution in a few bullet points  * Add tests to Lifecycle Manager  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1758,2020-05-21T02:45:22Z,2020-06-09T05:58:50Z,False,none,bbcb33c9f188642fc2d9cff7dd65024c4482804c,3,2,ec9d278001739dbc7ad86c5aa726668985828971 03a84705f02f36dc5c3dcaecc23dcc6e2713d21d,,Added tool to request transition to ErrorState,Signed-off-by: Aitor Miguel Blanco <aitormibl@gmail.com>    Included tool in lifecycle utils to call a transition to the error state in lifecycle nodes.    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | - |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | - |    ---    ## Description of contribution in a few bullet points    This is a preliminary version of the tool  and I would like to ask for some feedback.    At the moment  this tool can only transition from Transition States to ErrorProcessing. This is because the Primary States do not include (yet) the transitions to the ErrorProcessing state.     The pull requests [ros2/rcl_interfaces#97](https://github.com/ros2/rcl_interfaces/pull/97)  [ros2/rcl#618](https://github.com/ros2/rcl/pull/618) and [ros2/rclcpp#1064](https://github.com/ros2/rclcpp/pull/1064) address this issue by including the extra transitions for Primary States plus a `raise_error` function that triggers the transition from the active and inactive states.    Because of this limitation  it won't be that easy to test the `on_error` callback from lifecycle nodes until the mentioned PRs are merged.    I would also appreciate any ideas about how to test the tool itself. I can only think on creating a mock class that waits on specific states for the error to be triggered.    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1797,2020-06-10T05:48:54Z,2020-06-10T18:42:40Z,True,2020-06-10T18:42:39Z,caea7fa4e68be18f6018796b983c8d008a8b492e,1,1,6e80cfbe7764b30f778ce7f9e62990b8911082c0,,Update modified default_bt_xml_filename parameter,Parameter ``bt_xml_filename`` has changed to ``default_bt_xml_filename``    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1784  |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1784,2020-05-29T06:48:58Z,2020-06-12T18:22:35Z,True,2020-06-12T18:22:35Z,105dd15a2d90d776de6cb6f629e867fc3b4ec270,10,7,0144679438f7be50f381c4a2a95972cc3ceb4931 76bfa80d9395e5c1461474642214886aabe952c2 adce6a12343a366a4c9d4f069d1fd9d56c3347fa cbfacb40df9137e5b63adbf7799dadbfc610419a 48aa0e6182519126e9ad870ef6663d8e46757b4d b0db05e4685141f56d54f84197f46fccdb199260 8cdf0854c971b59c1cfa79c690e228f054f2b7ee,,Select behavior Tree in NavigateToPoseAction,Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1780  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of Tally |    ---    ## Description of contribution in a few bullet points    *  Changes in  NavigateToPose.action to include a field `string behavior_tree` with the ID of the BT to use. If it is void ("")  the use the first BT in params. This change solves backward compatibility.    * Use a list of BTs  in the similar way as plugins (the first could is the BT by default):    ```      bt_xml_filenames: ["navigate_w_replanning_and_recovery.xml"  "navigate_w_replanning_time.xml"]      bt_xml_ids:  ["default"  "time"]  ```    - In `bt_navigator`  tree_ is changed to `std::shared_ptr<BT::Tree>` to ensure a clean BT when it is changed. Measured BT recreating time. It is inexpensive.    - Remove `bt_xml_file` param in launchers  as it is selected in by params. Specifying this from two places (in `nav2_params.yaml` also) could be confusing.      ## Description of documentation updates required from your changes    * Description of `NavigateToPose.action`. Field behavior_tree in the request should be described  * Remove all references in launchers to select BT    ---    ## Future work that may be required in bullet points
ros-planning/navigation2,1744,2020-05-16T15:47:39Z,2020-06-12T20:01:15Z,True,2020-06-12T20:01:14Z,94615e7b412e3d947b888a6d799aa6e6f78a9031,21,22,c9c566305afb6bc2707ee7b9fbc27cfdaafa35be 1b100a7600cde88b5c514e19b4bbbbdbe1d24ce6 004dc6be148ff6136aa186508b025e93ee0c5724 8f439dc5bdec07efb71050f9b053f718498cffdd 779faf73c07a4299f5097da9a23270935e57201d 4a5e7a283d4d8fb5666b0fa6e001a623b85fe50d cec72c62bfca2b42e5e881a270a5c24543c70006 75e925cd5ce6ab99324f9fc7394d1d722689eb5d 28e9d31677c9b978851a6ed9a8ef76d306dc0cb9 f32581812128021992845f7631b1f75a8f634488 331d8a4f4a14bca1110e88cd00b66dd0455598a5 571d25e878e395a92c59cbf4ef014b514bbfa875 7e8e0d13630030364b279ce0d87bd9026a82f194 a55168cf0a7fc2b59c2809862d87fad46ace90d1 e354bd0597f1a8f80864f94067538f5dec26cba6 653b55773f4268a8df87b8739c8958f7e530c750 1385c60073fbf3af3de68ab34e2c361db583be0d f00ec8940f233cfbbf1cc72d4a785e94b6154abd 6ff9a705dcc1a0c4f6d9d2415677ff815f0f11a6 00f4710729af30c7db61352691d87cb36364e4da 64596b2aed2bb748bc3f84bf2641526514bfcb21 66daff6821369a76ab12d27217bdcd21828a26e8,,Add SpeedController nodes to adjust replanning rate according to speed,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1740 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Gazebo simulation of TurtleBot3 |    ---    ## Description of contribution in a few bullet points    * Added ```SpeedController``` decorator and condition nodes  * Updated default BTs to use ```SpeedController``` instead of ```RateController```    ## Description of documentation updates required from your changes    * Update [navigation.ros.org](https://navigation.ros.org/)
ros-planning/navigation2,1806,2020-06-16T21:27:55Z,2020-06-16T22:48:06Z,True,2020-06-16T22:48:06Z,dd0d9fd9b8415e0bdfaf5d7f373967a65b779900,2,2,e41079aec66d19f6a20e275a4b7990b3a60cedf4 a613fc5c128ec4d792e8f56b90e27bd699eeab4c,,Replace eloquent with foxy in the install scripts,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on |  |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points  * Removed eloquent and added foxy in the install scripts as foxy is released.  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1807,2020-06-18T01:23:44Z,2020-06-18T18:00:24Z,True,2020-06-18T18:00:23Z,dc597153236cd2eaa48b11e45f9eb3ae7c447af0,1,1,23839e9d1b78eb45361539e758899463ff54b165,,a workaround patch for 1652,Signed-off-by: Daisuke Sato <daisukes@cmu.edu>  ---  ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1652  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | turtlebot |    ---    ## Description of contribution in a few bullet points    * fix the issue BT action node does not abort #1652 for temporary until rcl interface is updated     ## Description of documentation updates required from your changes    N/A    ---    ## Future work that may be required in bullet points    * #1652 still needs to be tracked
ros-planning/navigation2,1811,2020-06-18T20:21:56Z,2020-06-18T21:11:00Z,False,none,423666075898d898a9e600eeeb54ec404a788211,52,5,768d6b93cca3cf28182d7c1134e4208c7cd27478 71f6ca858847f893658dd1588dddf8061d5de9c7 68545e645645ffbd0058ad779e8a162651ecee36 aaf68966a92a7a28c0a506c0116f2968aced21b9 2cd3909d285d10a9d89c4beaff13f20db3d722ff,,Add nav2_behavior_tree tests,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1810 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TurtleBot3 Gazebo Simulation |    ---    ## Description of contribution in a few bullet points    * Improve `nav2_behavior_tree` test framework  * Add tests for `nav2_behavior_tree` plugins  * Added header files for behavior tree plugins  
ros-planning/navigation2,1812,2020-06-18T22:19:34Z,2020-06-19T00:43:21Z,True,2020-06-19T00:43:21Z,fe404dfec4de9b9cffcf3ffe96c2936b373c8c29,17,3,58f236c229636fde53abe52c881de917b6a04bbd 693af3b2ce2e2df701e7a5a071bdd369f75149c9 fe387ac4295a3c59949b4656cc2f01623002fe93,,Add BehaviorTreeTestFixture for nav2_behavior_tree tests,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1810 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Turtlebot3 Gazebo |    ---    ## Description of contribution in a few bullet points    * Add `BehaviorTreeTestFixture` which gives a general interface to write BT plugin tests  * Move plugin header files to subdirectories
ros-planning/navigation2,1801,2020-06-11T17:27:22Z,2020-06-19T23:23:09Z,True,2020-06-19T23:23:09Z,0fa309a2f17d2689045187b4f144505a981e5e53,4,1,dd7babd67920cce480ec9930dbed91f43eeffbea,,Warn if computing plan took over the specified amount of time by the ,# Basic Info    | Info |  |  | ------ | ----------- |  | Ticket(s) this addresses   | #200 |  | Primary OS tested on | Ubuntu 20.04 |    ---    I wonder if the [SteadyTime](https://design.ros2.org/articles/clock_and_time.html) would be better than the ROSTime here.    Maybe  we should rather monitoring frequency than duration?
ros-planning/navigation2,1813,2020-06-19T01:03:56Z,2020-06-19T21:44:18Z,True,2020-06-19T21:44:18Z,97c49dfaa930eacd09016d17d1359ccab879afa8,10,1,4b5b292ec78829c79764011b4f9eb2a47298d9a6,,Add goal reached goal updated and initial pose received tests,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1810 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Turtlebot3 gazebo simulation |    ---    ## Description of contribution in a few bullet points    * Added tests for `GoalReachedCondition`  `GoalUpdatedCondition`  and `InitialPoseReceivedCondition`
ros-planning/navigation2,1820,2020-06-22T16:36:06Z,2020-06-22T19:38:47Z,True,2020-06-22T19:38:47Z,806dc9e9cd0eb1075b93b0822bfead1398aaf7ac,1,1,8e9f1abcadd1de91c074a8e4b7b07f09272bf6ee,,Make GoalChecker reset a pure virtual function,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1810 |  | Primary OS tested on | Ubuntu 18.04 |    ---    ## Description of contribution in a few bullet points    * Make GoalChecker::reset() a pure virtual function
ros-planning/navigation2,1815,2020-06-20T13:45:04Z,2020-06-22T20:30:43Z,True,2020-06-22T20:30:43Z,87ee2dd0f12173461c71f34daeeb5afa0bef382c,11,5,46f0470bcab587d33ba61989cb56024ef5a421b0 144fbf1d94653082277c2384bf367a4a222fcbf0 6e04fa4962a1a73d9435f912c98a19d457b90214 17b6ac259b0b19f98adecd7b54f44f7a5ee2d8a2 6ceaabeb869b9143e74f71d60bfe993e2cfaacde,,Add IsStuckCondition TransformAvailableCondition and RateController tests,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1810 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Turtlebot3 gazebo simulation |    ---    ## Description of contribution in a few bullet points    * Added tests for `IsStuckCondition`  `TransformAvailableCondition`  and `RateController`
ros-planning/navigation2,1822,2020-06-22T22:29:09Z,2020-06-22T23:19:46Z,True,2020-06-22T23:19:46Z,30130640e7e92bff63b932a895bc4eb70689d3c2,2,2,57134d5cc0f27391bff2bedfb775ed7b7c47cad4 de3de0886eb4912217fd1d26d4b218e54f9ce7e4,,remove old lifecycle functions for updown tests,
ros-planning/navigation2,1792,2020-06-03T03:19:46Z,2020-06-23T19:36:03Z,False,none,0bc936271da04b393173838612971816b934c179,17,4,67fa03fb0feedd9d082c24e1d0966820682f7b24 c8d7bdeff5e38d2ca216d73d5f44f62d7c392b58 bd82113a52a6418edd7b9ea41f102ce539a83784 fb1a74b6dea99c52114739a1861a01d6f3494801,,Allow zero velocity to be valid,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | ( #1642) |  | Primary OS tested on | (Ubuntu 18.04) |      ---    ## Description of contribution     * Removed the zero velocity check from kinematic parameters. This allows critics/users to have zero velocities as valid.  * Moved the zero velocity check to one more level higher(xy_theta_iterator). This plugin can be overridden if needed.      
ros-planning/navigation2,1816,2020-06-20T18:57:35Z,2020-06-24T18:10:41Z,True,2020-06-24T18:10:41Z,df8a4456d107a08eb085850f6d4c1699b89dbd60,1,4,cd12ad6bdc9939abc34426ae1d68dadb3c11e099 de2d483902943e082cfbe21f4bb9b8a6e7bf224c 4b4f346cf07f2ff1940fdaa7c970611047341344 aff186c8ee3df69fcd6830086c809254599ad7d0,merge,Updated bt2img py to handle subtrees,This PR enables the behavior tree print script to also draw subtrees.     The way of calling the script didn't change.      But there is a change of how the root node is detected.    I now read the `main_tree_to_execute` tag to know which one is the root tree.    Also maybe consider using the _explicit_ form of writing BT xml's  that way one doesn't need to update the `node_names` array every time a new node comes into play.    So writing `<Action ID="FinishTaskNode" />` instead of `<FinishTaskNode />` leads to automatic detection of the node type.    ![demo_tree](https://user-images.githubusercontent.com/11796203/85209344-6b1f2d80-b337-11ea-90b0-31cdba8d1e29.png)    ```  <root main_tree_to_execute="Demo">      <BehaviorTree ID="Demo">          <SequenceStar>              <Condition ID="HasNavigationTask"/>              <SubTree ID="Navigation" />          </SequenceStar>          <SequenceStar>              <Condition ID="HasTransferTask"/>              <SubTree ID="Transfer" />          </SequenceStar>      </BehaviorTree>        <BehaviorTree ID="Navigation">          <SequenceStar>              <Decorator ID="Cancel" cancel="{cancel}">                  <Action ID="FollowPathNode" name="FollowPath"/>              </Decorator>          </SequenceStar>      </BehaviorTree>            <BehaviorTree ID="Transfer">          <SequenceStar>              <Decorator ID="Cancel" cancel="{cancel}">                  <Action ID="TransferNode" name="Transfer"/>              </Decorator>          </SequenceStar>      </BehaviorTree>  </root>  ```
ros-planning/navigation2,1825,2020-06-23T06:36:24Z,2020-06-26T01:02:33Z,True,2020-06-26T01:02:32Z,c6fccc054d2f8082273e7ea1d6987449a5e36749,4,8,67fa03fb0feedd9d082c24e1d0966820682f7b24 c8d7bdeff5e38d2ca216d73d5f44f62d7c392b58 bd82113a52a6418edd7b9ea41f102ce539a83784 fb1a74b6dea99c52114739a1861a01d6f3494801 59de9b8950224c07ea189b05d6b7f10d1f54dd23 40ee6d6ecb5607d9dbc7841650868a4f8fa6931f 6d8edd0f3cbe04669ef8e6c8ce18e510899f6a69 52c69bf9fb08833997e6f30b9f4d8b15c8fed373,merge,Allow zero velocity to be valid test fixes ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1642  (Original PR #1792) |  | Primary OS tested on | (Ubuntu 18.04) |    ---    ## Description of contribution in a few bullet points    This PR includes the changes in PR #1792 plus a small bug fix (which was failing some tests) and corrections to the style.  The main contribution (by @gokul-gokz) included the following points:    * Removed the zero velocity check from kinematic parameters. This allows critics/users to have zero velocities as valid.  * Moved the zero velocity check to one more level higher(xy_theta_iterator). This plugin can be overridden if needed.
ros-planning/navigation2,1805,2020-06-16T15:56:54Z,2020-06-26T19:09:21Z,True,2020-06-26T19:09:20Z,2bb998059069ff9d581c8a1f07c917da8316008b,1,1,88a4e1ce1bef39495089ec7e13787cd74661dac9,,changed argument to remapping,A small change  if you use 'argument' instead of 'remapping' you get the following warning:    `[gzserver-1] [WARN] [rcl]: Found remap rule '/tf:=/robot1/tf'. This syntax is deprecated. Use '--ros-args --remap /tf:=/robot1/tf' instead.`    Using 'argument' still works  but as it states it's deprecated. This one word change removes the error.  
ros-planning/navigation2,1832,2020-06-29T21:28:04Z,2020-06-29T22:38:18Z,True,2020-06-29T22:38:18Z,e47036698dac9a140a7234e98a5512011a412d72,7,7,7e69bb09dce2c772b33f39ae2205c805e3f4d70d d8402d69fcac93c0261ec07d91ffed0a17e5d979 148b10cb6eb7837bc5cfb1494df0ba97af3497d9 ed3477dba8362b7ff8c9ce9a904b26b9789696ac d6ea73db5fc86c6fd73a3544e0811e11dfac23e9 b826cca1f206b045b3a83eb1f75a07e021d3ebf4 e5eb61fe73a3e53fc338848d11d406617331e623,, eloquent fix API changes from BT CPP,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1828 |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * Fix BT.CPP API changes for eloquent devel    ## Description of documentation updates required from your changes    N/A  ---    ## Future work that may be required in bullet points    * Release new eloquent binaries  
ros-planning/navigation2,1833,2020-06-29T22:41:29Z,2020-06-29T22:41:54Z,True,2020-06-29T22:41:54Z,2b073964f166f00b0ed29c04bbcede3b278135b7,30,1,623d6a19e7d793720888752cc697320f9eca5f3e,,bump to 0 3 5 eloquent ,For release of new BT.CPP v3 library version
ros-planning/navigation2,1817,2020-06-21T18:26:16Z,2020-06-22T19:49:09Z,True,2020-06-22T19:49:09Z,ac64bd204daf494530acaddcdbbecfad3ffac448,13,6,9f47a60bd2a14638773be06bfebc93dc67155d6b 4648b6d54927ff77a0d440b848da3a80c029456a f07762b15a729f1aabbc83f381409428c842f222 99b90917608fad0a6773707e16386e71e6623ba5 a1ada61c0c6780c6739c22ecb78fc3ad6b2e64e6 b53416fe24bfecdd345c12f91c2198ecd84ad0b4,,Add dump_params integration tests,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1810  #1818 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Turtlebot3 Gazebo Simulation |    ---    ## Description of contribution in a few bullet points    * Added `dump_params` integration tests  * Fixed error in `dump_params` for array type parameters
ros-planning/navigation2,1835,2020-06-30T19:50:12Z,2020-06-30T23:27:29Z,True,2020-06-30T23:27:29Z,c33cc89d604232fdf87ff813fa24c76029b265a7,1,5,d87347e6a402ae8738db44a477b8cdd9f984ed37 486890a6781d08f7a17b55ae016152a2b52c95d1 5dc297ad6cd003a78f5438d34cba32f5bb88dad9 09d27bd1365330c8a1c89c0d96ac43cbc9084387 0910e4e688a95f54290c842e1177b5c64d6cb9f1,,attempt to resolve issues with mixins in CI,Removing the release / debug elements from the mixins list for CircleCI
ros-planning/navigation2,1829,2020-06-25T22:19:20Z,2020-07-01T20:31:31Z,True,2020-07-01T20:31:31Z,7f8c7b692d33ee4580a5b4c40a53768fcbd22d6f,9,1,08efe56166b527dfe1f5c09e4fbddbfe4d3e6c96,foxy,Return time which was taken to compute the motion plan via ComputePat ,# Basic Info    | Info |  |  | ------ | ----------- |  | Ticket(s) this addresses   | #200 |  | Primary OS tested on | Ubuntu 20.04 |    Next step to solving the upper mentioned issue (previous step https://github.com/ros-planning/navigation2/pull/1801)    ---    Added new field to the result of the action message    ---    I'm not sure  how can I properly test this feature? Does **ComputePathToPoseAction** class needed some changes?  
ros-planning/navigation2,1841,2020-07-01T22:10:54Z,2020-07-01T22:14:50Z,True,2020-07-01T22:14:50Z,aece9e94c46877216e97283cde65662ce79cb783,29,1,4f487c665d58599a1cc36b184beb8c4be6ff6a6f,,bump master to 0 4 0,Syncing new foxy-devel with master versions
ros-planning/navigation2,1827,2020-06-23T19:23:58Z,2020-07-01T22:59:20Z,True,2020-07-01T22:59:20Z,fbdace2325084c9f65c7bda8a95c4eba3ec244f1,3,8,e6c4df75404576ebc646d382a6780fbe0901db9a 8e446e77ad60055ce86403b1ac532efe81fb2bfa 1bae7d4c83dbfb20388f9c2a006e2e2d83b1694c 097bc8297d1333c1dc93574be5514743eb9226e8 ba1cf0fceca4234f768abc7066977c79d406f706 ae85d0378f8c9ef11b760538633556214d3fa1a9 c53550b603486b4f39681867253c5212de83c812 d03ce486e74995a925dbcbdbb065bb0358ade277,merge,Add slam toolbox as exec dep for nav2_bringup,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1827) |  | Primary OS tested on | Ubuntu 20.04 (docker) |  ---    ## Description of contribution in a few bullet points    Added exec depend to the package.xml for nav2 bringup to address issue #1827    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    Handle ceres solver dependency to the docker container
ros-planning/navigation2,1840,2020-07-01T22:09:45Z,2020-07-01T22:59:29Z,True,2020-07-01T22:59:29Z,342816556b89294ccc3266e0b08c57dc603e3570,29,1,3bb4a12ddddc42fde6e3b00f84a8b142782ef58e,,Release for ROS2 Foxy bump to 0 4 0,Releasing ROS2 Foxy Navigation2. All PRs wanted for Foxy have been resolved and we're ready for an initial release!
ros-planning/navigation2,1831,2020-06-27T20:53:39Z,2020-07-01T22:13:32Z,True,2020-07-01T22:13:32Z,6310737c1a4396c8093cb1cfa0ad8fdd04b2049a,13,3,c3c6818cf2352140498656e0eee68767b5d0c93a c7cd3389bda1dbc1d2106fe17eb50fbce63609e9 a61f9dbab532d9b50551f3bda7adc20c4a2b237c,,Add unit tests for spin wait and backup action BT nodes,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1810 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TurtleBot3 Gazebo Simulation |    ---    ## Description of contribution in a few bullet points    * Add header files for spin  wait  backup BT action nodes  * Add unit tests for spin  wait  backup BT action nodes
ros-planning/navigation2,1821,2020-06-22T21:39:33Z,2020-06-22T22:09:30Z,True,2020-06-22T22:09:30Z,38ad1d2101454c8ced1a07329b83cd04ca2738c6,9,6,11d8e341f77e189000f5cf9e4469ba0b6b0f9ae2 0abc0b668fde892d07a6df9d0f776188b7f7ddb2 d117bde9f4d7bc4630bcf64bf72a87953a207a06 93c1cc69511f9e0d0dd8fccb85ea627c61c1bf6c 8f52b8bd16e031a6e2faaa398619c705f85dfe34 3142a213b21f5e9bff4ccb518e89d29e9be3d376,,Add PipelineSequence RecoveryNode and bt_conversions unit tests,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1810 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Turtlebot3 gazebo sim |    ---    ## Description of contribution in a few bullet points    * Added unit tests for `PipelineSequence`  `RecoveryNode`  and `bt_conversions`  * Add header files for `PipelineSequence` and `RecoveryNode`
ros-planning/navigation2,1823,2020-06-23T00:50:24Z,2020-06-23T02:12:32Z,True,2020-06-23T02:12:32Z,d51a2d3e444f5a393c511f9843903d3be64f8422,6,3,e850db02ba88e03e2b6519e2b2ad51bbdc9f97f6 68f525f5b88160e4f3744d9a8df70fb53664f79e 090ea9a138f40532b0fcd95c488dbd2707a39107,,Fix logic in RoundRobinNode and RecoveryNode and add unit tests,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1819 #1810 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Turtlebot3 gazebo simulation |    ---    ## Description of contribution in a few bullet points    * Fixes `RoundRobin` logic (if current child return failure tick next child until all fail or one succeeds)  * Fixes `RecoveryNode` error where actual number of retries performed = required number of retries - 1  * Adds unit tests for `RoundRobin`
ros-planning/navigation2,1808,2020-06-18T14:03:27Z,2020-07-01T18:48:46Z,True,2020-07-01T18:48:46Z,f3b7be2397f585c53d4940b0fc516d8fe4738670,14,21,a5a89fbf81eb1916e8f81ae2c9ea6b86349bccda 3bcbd5d800e37c23255ba30ff3029b8c8c0ba925 91e9ff1f10630190396736afce44515904889944 9dcec0958085b67d93b3aa0ee8fa473b1ac8a8e4 4bbab8e255df56ee405456908b1d9ffc6a16e699 1b072d575dc8f69404ee2418a44bd1c0a34d198f 40a7c2fac5f3878aac06fec58e32150aa9d06299 9f216f9c11bb7eb647065f287d40570a6789b436 b02a82c19b503b219077c9bd36da90a6a137200f 48c5c50349a54bb24d2aa930e4af37258514cbc5 20ab23babe63766d244eb78ea21c8e892d56552f dee40172f664c96758a547228b62ce3b2aadab93 a95018f1ef2cf230f4a837301e63dd56f4beeeb6 b88482d458d2a47e244d7464b72cfc03bc96ab8c 1f56364caac541affc3ddd8e22f15e867f15ac38 e07c07708f4392fa814309497859a74ef207f232 4c78829a161f5c02c5cf869562315890e1aa1280 95823ca481217260560b1e1b31c35cc1fc95ccd5 359058f8ffde288dba20361175344ea6193a2b37 6e896ef555c211f43ec6ea98b1f3f65660288178 35f3ab2dadb77c642554095c8cd9d65661cb5446,foxy,Refactor parameter interface for plugins,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1791 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TurtleBot3 Gazebo Simulation |    ---    ## Description of contribution in a few bullet points    * Added utility function to read `plugin` parameter  * Remove use of 2 parameter lists for plugin names and types  * A plugin list is defined only by the names and plugin types need to be defined in `plugin` param under the plugin namespace    ## Description of documentation updates required from your changes    * Add `plugin` parameter and description everywhere where plugins are used  
ros-planning/navigation2,1851,2020-07-06T22:18:50Z,2020-07-06T23:29:32Z,True,2020-07-06T23:29:32Z,aa9394a6b57a23ede7add9cbba901ba1a21a26da,29,4,60f7b52d75325f2c7d7a73fa88d6bdae3af62ddc f76e1abafe05f939e11115e79c227e93b0e5c697 a8006f1b7ce013dbc80c029dc0d8f95450aad164 ca9d16c12a7b7d8b9cb646ae6c9f27276cb36f16,,Adding missing deps to nav2_util,#1847 
ros-planning/navigation2,1853,2020-07-06T23:53:50Z,2020-07-06T23:55:27Z,True,2020-07-06T23:55:27Z,145d2b1ca24a82c3493f87a28b9b6fee0b6459fe,1,2,6fba1ceab2fc2e751cd81736cbae7a012ae76fd1 77f0bb05b740c4844841edb07409a2f3a48c35e3,,adding foxy build icons to readme,#1843 b
ros-planning/navigation2,1852,2020-07-06T22:19:57Z,2020-07-07T00:02:41Z,True,2020-07-07T00:02:41Z,e6106452716a351601fe66c6454049bc280faf7a,29,2,a70320d50f5787f71f4080d961d8929d42e28f37 b6d4c669888f482441fb7aa4090e33ce1ecd0bdf,,sync master from foxy version updates,Per #1851 and #1847 
ros-planning/navigation2,1844,2020-07-02T02:54:44Z,2020-07-02T19:06:37Z,True,2020-07-02T19:06:36Z,c6bffe853edcbe90a886c25a5e2fbb359869b1b3,10,3,93ae26c4e7cb87dd105595f33a00f89e2577cc77 f8563eae876265e9e43f97daa7192767ab7b80fb 82d08d611f5d99d264b322b75816a4a3f195e275,,Add unit tests for follow path compute path to pose and navigate to pose BT action nodes,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1810 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Turtlebot3 Gazebo Simulation |    ---    ## Description of contribution in a few bullet points    * Added header files for follow path  compute path to pose  and navigate to pose BT action nodes  * Added unit tests for follow path  compute path to pose  and navigate to pose BT action nodes
ros-planning/navigation2,1845,2020-07-02T03:08:26Z,2020-07-07T04:04:49Z,True,2020-07-07T04:04:48Z,647b53bf058717284a99b6e3ed219bb5c5e50cc7,8,3,3cfd6506bd1e6d9621bd08208392971706e9c356 aea58f6b0b353201d935dee8c6d8cfd7994cf344 354475b6d7435b5ef424208de48fd0c6e2fe9c18,,Add unit tests for clear entire costmap and reinitialize global localization BT service nodes,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1810 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Turtlebot3 Gazebo Simulation |    ---    ## Description of contribution in a few bullet points    * Added header files for clear entire costmap and reinitialize global localization BT service nodes  * Added unit tests for clear entire costmap and reinitialize global localization BT service nodes
ros-planning/navigation2,1848,2020-07-03T07:08:22Z,2020-07-07T07:24:04Z,False,none,93e150cb3624cfd427fb95413d3b5a2a88a606a8,1,1,dd90a5f1773db8b2284497b08a20a1cf667efb4d,,Rename acc_time by dt and document it ,The variable `acc_time` is used as `dt` downstream and set from `dt` upstream.    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | N/A |  | Primary OS tested on | N/A |  | Robotic platform tested on | Gazebo simulation of Tally |    ---    ## Description of contribution in a few bullet points    * Rename acc_time by dt  * Document it
ros-planning/navigation2,1856,2020-07-07T05:24:02Z,2020-07-07T07:01:29Z,True,2020-07-07T07:01:29Z,4755a1ea0b73644689eaf786af63e2f75f8da732,2,1,af718d7b118ef7fe0c5c59f3f491a2dcfd52b85a,,Temporarily disable dump_params test,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1836 |  | Primary OS tested on | Ubuntu 18.04 |    ---    ## Description of contribution in a few bullet points    * Disable `test_dump_params`  * Rename `test_dump_params.launch.py` to `test_dump_params.test.py` to follow `launch_testing` standards
ros-planning/navigation2,1854,2020-07-07T00:03:48Z,2020-07-07T21:23:25Z,True,2020-07-07T21:23:25Z,8b8807a6043aff0225f7eca90428f0233633c658,2,2,d7bc4119c683949c18e3d117ba8773de7c47cae7 fd5b214a49f5fcb5c8a4c05caa63f4958b35e79c,,commenting out unused validPointPotential,Increase coverage rates since this is unused. To be removed in future distributions if it continues to not have value.     I leave it in since its been here since ROS1 and I don't want to delete an algorithm outright that might find use down the line.     @shivaang12 @fmrico can you sanity check this?
ros-planning/navigation2,1748,2020-05-17T17:08:30Z,2020-07-08T07:09:18Z,False,none,b89967ee6d688950f56371f931b0080dbec875c4,9,1,29845436fcae29f4e12cdfa7ec41fbb5c276d166,, WIP Following an object a certain distance,Signed-off-by: Francisco Martin Rico <fmrico@gmail.com>  ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1660  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of Tally |    ---  This is a **work in progress**. I don't pretend to be accepted as is. I want only to discuss this approach.    The goal of this work is following a dynamic pose to a certain distance:  * The goal pose can change during the execution of `navigate_to_pose` action.  * The robot stops when the goal is nearer than a configured distance  and then it faces the goal.    One use case could be following a person to ~1 meter in a house. We want to use it in RoboCup@Home.    I don't want to implement this as a new plugin for controller or planner. This work is independent of the algorithms used to create the plan and following it. To implement it I have:    * developed a new control node in nav2_behavior_tree that overwrites the goal received in the `navigate_to_pose` action for the one received in the `goal_update` topic.  * added two input ports to `FollowPath` for indicating that never returns from the action  and the distance to the object. The other option was to create another action node in BT  action  action client  action server...    ![BT_carrot](https://user-images.githubusercontent.com/3810011/82154598-4551c500-986f-11ea-84ca-f977509d6380.png)    This is the result (click for video):    [![](https://img.youtube.com/vi/t7helr1IY_8/0.jpg)](https://www.youtube.com/watch?v=t7helr1IY_8&feature=youtu.be "Click to play on You Tube")    ---    I don't know if this is the right place to discuss this  but the complete real use case I want to address is:  1. Make the robot navigate to the desired pose on the map.  2. Once there  make the robot follow a person (the dynamic goal pose  provided from outside Nav2)    The behavior trees used in the two steps in this application are (could be) different  but the BT to use is defined statically in the yaml param files. One option to solve this could be to select the BT to use in `NavigateToPose` action. Maybe `NavigateToPose` action could also include some options decided from behaviors  instead to be fixed in params.    Francisco      
ros-planning/navigation2,1861,2020-07-08T19:45:35Z,2020-07-08T20:11:31Z,True,2020-07-08T20:11:31Z,3dcd589f1b2b914a0b0744c38e39ad864ac8b5aa,1,1,2bd91f1bf5cdcd107be7b0f1cea79a867cf0f97e,,Adding ROS2 versions to issue template,I want people to be required to specify this
ros-planning/navigation2,1858,2020-07-08T05:49:39Z,2020-07-09T02:51:37Z,False,none,348c0b0ab72bd773a0061e9cada854a8f902764c,1,1,9bfaa8404950a0c31570e8751141939343bb8c8e,,Update README md,updated example of map_server service with CLI interface    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | None |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | none |    ---    ## Description of contribution in a few bullet points    * I updated the map_server service Example on using /load_map service  * Updated the command used to call service with CLI       ## Description of documentation updates required from your changes    ---    ## Future work that may be required in bullet points    
ros-planning/navigation2,1849,2020-07-04T03:30:22Z,2020-07-09T06:36:56Z,True,2020-07-09T06:36:56Z,69977cd83d9040df3422d8a2e564715b6002f3fb,1,1,6acfbb341c14b8696e5c26ffd130c83532979a63,,A patch to fix BT navigator nullptr error or no behavior_tree_log problem,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Tturtlebot |    ---  Bugfix of BT navigator    - symptoms: nullptr error or no `/behavior_tree_log` topic  - problem: `tree_` is replaced after making a topic logger    How to reproduce  ```  # launch TB3 and give an initial position  Terminal 1 $ ros2 launch nav2_bringup tb3_simulation_launch.py    # send a goal to navigate_to_pose with a non default bt tree (different from the last loaded)  Terminal 2 $ ros2 action send_goal /navigate_to_pose nav2_msgs/action/NavigateToPose '{"pose":{"header":{"stamp":{"sec":0 "nanosec":0} "frame_id":"map"} "pose":{"position":{"x":1 "y":1 "z":0} "orientation":{"x":0 "y":0 "z":0 "w":1}}} "behavior_tree":"/opt/overlay_ws/src/navigation2/nav2_bt_navigator/behavior_trees/navigate_w_replanning_speed.xml"}'    # echo topic  Terminal 3 $ ros2 topic echo /behavior_tree_log  ```
ros-planning/navigation2,1867,2020-07-14T00:04:31Z,2020-07-14T17:12:39Z,True,2020-07-14T17:12:39Z,0446b6a544f91692560f70aaf5c51d89feb7eefd,1,3,26253a9628a0472114bddb27fc4000262969c714 9f074d51f811a3401612edc60c4753890738c8a2 23ea88179c85505a093d8ea9d9f358b99982fccc,,Add citation for IROS paper,Relates to https://github.com/ros-planning/navigation.ros.org/pull/44
ros-planning/navigation2,1872,2020-07-14T11:02:57Z,2020-07-16T02:44:36Z,True,2020-07-16T02:44:36Z,4e1c18db7766d4a9fb5c8a497952b3743a0bb1b5,1,1,9819cf3fe12f4cd9c488f6a0e38dc3aa436bceb8,,Use current time to check if observation is out of date,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/545 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | prototype |    ## Issue:    Points remain in obstacle layer after we stopped publishing a point cloud on regular basis. Settings to reproduce:    ```        obstacle_layer:          enabled: true          observation_sources: pointcloud          pointcloud:            topic: "blabla"            max_obstacle_height: 2.0            data_type: "PointCloud2"            expected_update_rate: 0.0            observation_persistence: 1.0            clearing: true            marking: true  ```    According to `observation_persistence: 1.0` the point clouds used by the obstacle layers should time-out after 1 second.     ## Analysis:    * `last_updated_` is updated on every new cloud that needs to be added to the buffer.   * **purgeStaleObservations** checks the cloud's time stamp with `last_updated_`.   * When we stop publishing a point cloud `last_updated_` will never be updated.   * Hence the observations will not time-out and remain in the `observation_list_`.  * This may result in the following warning  when the robot drives away from the clouds in `observation_list_`:    `Sensor origin at (x  y) is out of map bounds. The costmap cannot raytrace for it.`    ---        ## Description of contribution in a few bullet points          * Fixed it by replacing `last_updated_` with `nh_->now()` in **purgeStaleObservations**          ## Description of documentation updates required from your changes    * _None_    ## Future work that may be required in bullet points    * _None_  
ros-planning/navigation2,1857,2020-07-07T14:00:51Z,2020-07-20T19:13:09Z,True,2020-07-20T19:13:09Z,d7494ec8c501522200089c54947232fe86c0ef94,24,9,d7979eeba2db0a18ff536ce67ad39c01261564a0 2d466a8ec745d5f57a9150cf536538c0358994bb 73197adcac0ae123de161010179dfe53b13d9868 e271cd8585b636077c128b92dec47188f639d3be 20ef7d5264a5d332762683def274ceb5567fa593 6558ec8132481c98aa84765c7fd6b955f0fe3d56 2dfc4b93fa4b1eb5656bb06bc1300c2aa9aa729f 9d93bae7f27ce6a80c0737744a44be2b30937ebb 30740cfdfb282058b97ed2b0eb766f607e6a983e,,Move dwb goal progress checker plugins to nav2_controller,Signed-off-by: Siddarth Gore <siddarth.gore@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1390  |  | Primary OS tested on | Ubuntu 20.04 (WSL) |  | Robotic platform tested on | colcon test |    ---
ros-planning/navigation2,1837,2020-07-01T01:24:39Z,2020-07-23T20:20:02Z,True,2020-07-23T20:20:02Z,0fcbd7c85bff4b58b5caff3784f16b80f54459ec,2,4,7c630416751a61cd2d9fb0608634751b8fe95565 7e926b8c12f6838bac695ec7318ada1b9acd53e8 a241308e1915289e8b243afe5866804abecad354 51acf47d88779b5028493e2ff0bdd58c66385f28,,Added new costmap buffer to resize map safely,Signed-off-by: Aitor Miguel Blanco <aitormibl@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1625 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | - |    ---    ## Description of contribution in a few bullet points  This changes still need to be tested  and might need some updates. Please let me know if you see any bugs I might have missed  or if you have any design recommendations.    * A shared pointer has been added to StaticLayer as auxiliary storage of a new incoming map. A flag is set when a new map is stored and the map is updated at the beginning of UpdateBounds  making the costmap updates thread safe (hopefully without a big performance penalty).  * The StaticLayer mutex is now locked earlier in processMap  to protect the `costmap_` variable as well.    ---    ## Future work that may be required in bullet points  * Add tests for the use case of dynamic costmap resolutions (updating the map several times).  
ros-planning/navigation2,1884,2020-07-23T15:13:06Z,2020-07-23T20:07:23Z,True,2020-07-23T20:07:23Z,f1d7f0ddafe1afa6a53adab48ee2cbf1752d1812,8,2,27dab76a18e4bbd2064eb15d524d22ec5321f0f7 c518620d854fe7e7c289c0356585344fd4dc3796,merge,Remove Deprecated Declaration,Remove deprecated rclcpp::executor::FutureReturnCode::SUCCESS in favor of rclcpp::FutureReturnCode::SUCCESS    Signed-off-by: Hunter L. Allen <hunter.allen@ghostrobotics.io>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    Trivial Change.    ---    ## Description of contribution in a few bullet points     * Fixed the [deprecated declarations warning](https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wdeprecated-declarations) that was being treated as an error.    ## Description of documentation updates required from your changes    * N/A  ---    ## Future work that may be required in bullet points    No future work should be required (unless it changes again  obviously).
ros-planning/navigation2,1870,2020-07-14T05:10:18Z,2020-07-16T19:06:04Z,True,2020-07-16T19:06:04Z,0a9477e2577becd0d8292865f5847013224cbb6b,6,4,408bb0000d9a022f6b44fc07a459dd5b27d1ec10 d1a095666577a4d0878a02452bf4a9ec3f1e9aa9 cf0f44a0c776a97f553fd273c627e00f0b41ea83 c87dfa38a02c347a972734accf6651af24227df2,merge,Added parameters to configure amcl laser scan topic,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 simulation |    ---    ## Description of contribution in a few bullet points    Adds the ability to configure the amcl scan topic in the parameters yaml file like the topics of the rest of the ROS2 nav nodes.      ## Description of documentation updates required from your changes  Added in PR to the configuration docs of navigation.ros.org (https://github.com/ros-planning/navigation.ros.org/pull/45)
ros-planning/navigation2,1868,2020-07-14T00:48:34Z,2020-07-15T21:09:30Z,True,2020-07-15T21:09:30Z,42a919472eda720c833a78d8f9126fa16c2e5813,3,1,1741449ccb7bd1c3514ce0da3912ba248524e145,,Updated the line buffering command,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1865  |  | Primary OS tested on |  Ubtuntu 20.04 |  | Robotic platform tested on | TB3 robot in simulation |    ---    Updated set env command in launch files to add buffering to RCUTILS logging.    
ros-planning/navigation2,1890,2020-07-27T11:03:44Z,2020-07-28T14:41:30Z,True,2020-07-28T14:41:30Z,95b905cd07cfb1c4169c46d8191005dfe80743be,3,4,a0504b9b372e561568af12d3d05d8e23c3b4387c 81c4dfa729045bfcb7c388560b4c1754d2b46b4f 51c177dce97bdf3fe38d7b871f898891a9771990 633f0ba1eeda24773364ab7f26f100afe1243ccd,,Move definitions in tf_help to separate src cpp file,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1879 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | gazebo simulation of turtlebot3 on eloquent |    ---    ## Description of contribution in a few bullet points    * Moved definitions of nav_2d_util::transformPose into separate cpp file to avoid multiple definition compilation error  * Added library to CMakeLists    ## Future work that may be required in bullet points    Noticed a few other methods in nav_2d_util were also defined in header files. These too could cause an issue if included in multiple src files.  
ros-planning/navigation2,1869,2020-07-14T02:24:52Z,2020-07-28T20:41:43Z,False,none,9403655490b3865818615e1de54799c1e2badcd3,18,15,c483e8888583bb2748e407604ee8dd9a2f40708c 36ed224e197e4ba4cba5c9121bbdd990bdc42fbf 983212386772e79b9490bfeee8de3c9d4750d32f ed9f12449b5cfeab6aaa32933f42a7654d514d64 21778b5c0b90ff83d79531d287a80e7addb6bc29 fcc7cd62f59fe457fd8ef3a64fc93b8f336727fa 227c30ad4c84e839a6aff9fc6cfcb95ceabb833e 1f017eeab13f906331e2a446ce15171473d93c1a ccacefb9b84c7b1d98d128bb9d2b933f24fcf305 c2020d16bd1f0d5c8afb295cf9b61fae38ad8033 78c6f73b577a3b8c611e90a578d451f1e297540b 19e1dcc03ab21ca942b6b0731e33a725446d060d 4640d22d0109e6b592b8f0817670f8db9c6afc91 c159968e3ab8e147417af5934e7fc7b494543908 2f95d54885b97904825a7903e88803f0b4600391,,prototype of lifecycle bond system,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1754 |  | Primary OS tested on | Ubuntu  |  | Robotic platform tested on | gazebo simulation |    ---    ## Description of contribution in a few bullet points    * Added bond support to the major lifecycle servers   * Kills all the nodes if one of the critical relevant nodes fails  then will wait for stimulus to restart up    * Parameterized to be able to disable  * If misconfigured (e.x. can't communicate to a non-existent server) will bring down everything for safety    ## Description of documentation updates required from your changes    * Add to migration guide   * Add capability docs to let people know this is happening and why    ---    ## Future work that may be required in bullet points    Before end of WIP:  - [x] test working basic (timeouts work and settable/disableable  will actually bring system down  can be brought back up  clean shutdown and startup  no false alarms  delayed/no connection on startup clean warn)  - [x] should keep the bond option or always?  - [x] If always (and if misconfigured) how does it handle never connecting on startup (or delayed connection)?  - [x] Make sure all forms of shutdown have this triggered to break the bond  - [x] option for duration before killing (which could be set inf to disable)  
ros-planning/navigation2,1881,2020-07-20T09:36:41Z,2020-07-29T15:43:36Z,False,none,983727ab2766f6088edf3aebe69c9ebd3fd13752,12,12,c6d2fcfb0a126bf430bc8dd134e0ae4943263ffc 501159254e4a8deb87a24e25ca572cda259918d1 2a365cad176db97c68378a13921d2d0528dd38da 12b489c49cb783a11e835aa57b2f20b3f91a4d3e 82f570e8339093302ee4b4977ff2888fccfb9741 58d48c548df44578dee4ad4eef66bd4d87ffd927 4b9689d82f99d02cfeb883bea41b3da5b26f5be4 9bc314d8492753beb12a66e5eae3ee77c88a8416 92f3ade747d7ac3129f29a5a3b6fecbdef4418aa f8399841c4e70f47893d900512446600deb49928 0a9dc765c5a1307934d455997737ab1f30058994 7a45b33a2831d7f72b9b8879bd06788e5d8e4ba1,,Updated the specific releases versions instead of referring to ros2 ,The references in the `ros2_dependencies.repos` are updated to the specific versions that were used for that build.    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1863  |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | n/a |    ---    ## Description of contribution in a few bullet points    As suggested by the [comment](https://github.com/ros-planning/navigation2/issues/1863#issuecomment-660264308) from @SteveMacenski at   the dependencies.repos file is updated so that it contains the specific versions after they were released.    | Repo | Version |  |----|--------|  | BehaviorTree | 3.5.1 |  | angles | 1.12.3 |  | gazebo_ros_pkgs | eloquent |  | image_common | eloquent |  | vision_opencv | eloquent |    ## Description of documentation updates required from your changes    There are no updates needed for documentation. This PR is not for current development.
ros-planning/navigation2,1887,2020-07-26T00:49:03Z,2020-07-30T18:53:49Z,True,2020-07-30T18:53:49Z,f4e77e32802433cb1873e14af27744ab5915f1ad,1,1,28c7e5ba2efeeea0f04b3613402aa39b4cdfb1fe,,Considering robot orientation during back up recovery ,Signed-off-by: Marwan Taher <marokhaled99@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1878 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on |  Turtlebot gazebo simulation |    ---    ## Description of contribution in a few bullet points  * Resolved the simulated moved distance into its x and y components instead of assuming the motion is done in the x-axis only.
ros-planning/navigation2,1901,2020-08-01T08:59:56Z,2020-08-01T22:25:26Z,True,2020-08-01T22:25:26Z,b350452532ebdab54a2d5e04e7a31ccb3e903317,1,1,292e4edf9d0b421804eb46658ea25f7feaef2e2d,,Fix nav2_bt_navigator cleanup,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  #1893 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TurtleBot3 Gazebo |    ---    ## Description of contribution in a few bullet points    * Tiny fix in `nav2_bt_navigator` cleanup to clear `current_bt_xml_filename_` which prevented `BtNavigator::loadBehaviorTree` to load a BT with the latest blackboard
ros-planning/navigation2,1903,2020-08-04T00:23:13Z,2020-08-04T01:42:14Z,True,2020-08-04T01:42:14Z,b04c865b6699cbe8e1703919a40568a2147bfcfd,5,2,77ee61d8cee31416cbb56358cbfd5958d11c7f59 84212ada8028ca31b735cc8230d6ead9b7e88686,,Adding some more test coverage,#1810
ros-planning/navigation2,1904,2020-08-04T00:37:03Z,2020-08-04T02:24:59Z,True,2020-08-04T02:24:58Z,0d9785f9845d7eed3e25cdfd5ea793109896812b,19,2,a8c422ef23436b3aaf864feadce429fe6e3bf376 8bca387d784ce95fc1bed54cfb5f9d3efb59c56b,,remove on_errors in specific servers in favor of a general lifecycle warning,#1810
ros-planning/navigation2,1907,2020-08-04T18:17:11Z,2020-08-04T18:51:03Z,True,2020-08-04T18:51:02Z,78106fd5d8576e40c74511633c006f272efd21fa,5,1,860c604ab348364ca1f7961cd9512f0f7d335817,,simply nodes some nodes to remove dead code,#1810 
ros-planning/navigation2,1885,2020-07-23T20:23:38Z,2020-07-23T20:52:18Z,False,none,fc30615f4c2cdbb12fa149eda4c9891280011ce1,2,1,ba2402bb94907d8dd9db4272267a3f8498837c6a,,Revert Temporarily disable dump_params test ,Reverts ros-planning/navigation2#1856    See if the foxy sync fixes this issue @naiveHobo 
ros-planning/navigation2,1908,2020-08-04T19:20:41Z,2020-08-04T19:28:41Z,False,none,5c3ed1d4419f32c1b6db988047235c415933b7cd,1,1,1a51fdb656f805cb7b010e96a3791a0d55909ed8,, WIP A dynamic tests to work as advertised,#1810     Looks like from test coverage docs that we're not actually testing A* at all even though set in the parameter remapping. I think we're missing the full namespacing from it to count. Seeing if this will fix things. If not  we'll have to reassess how to get A* coverage. 
ros-planning/navigation2,1909,2020-08-04T19:20:41Z,2020-08-05T00:24:49Z,True,2020-08-05T00:24:49Z,8501a84d770e5551832f5ee2707668851f467e8a,8,6,1a51fdb656f805cb7b010e96a3791a0d55909ed8 e371e3e6a02c2d2c333cbd39aee6ef2083194d6c dbabd033e5c3660eefd03a5f10b8bc6c978869e3 dad763249a8987ca5421e86e91de6cfc2f05ed53 21eef8dfa6537191fc122229a69ca11d6b712b60 bc7a1e959105bcd510ef1b5fc9c302c0679baba1,,Bunches of random new tests,#1810     Looks like from test coverage docs that we're not actually testing A* at all even though set in the parameter remapping. I think we're missing the full namespacing from it to count. Seeing if this will fix things. If not  we'll have to reassess how to get A* coverage.     cleaner destruction of planner server  add preemption and cancel coverage for waypoint follower and cancel for bt navigator coverage  A* coverage via planner tests  topic-based navigation  
ros-planning/navigation2,1912,2020-08-05T00:55:32Z,2020-08-05T03:04:43Z,True,2020-08-05T03:04:43Z,87188c668038b19fb5d35bd66ef344ffd2583d56,12,3,38fea14cbaf1ef0c378fa0876d058917b14dda58 ad2bdca1dd9a843db5fe50c9ba963e7fe0d1a79a 9ba4de3b5b44d0403558b108dc1f441f4819ac44,,Adding failure to navigate test,#1810     Test for failures to navigate with a bogus target
ros-planning/navigation2,1897,2020-07-30T12:34:08Z,2020-08-05T18:04:37Z,True,2020-08-05T18:04:37Z,6f4a5582a568391b13a409e54b5c2d2ae0a565c4,4,3,784e14fbc91593c6830124e6d013e25d90a8f907 76339c6472c5a8d0003380a25e6277ed94654bcd c906ec549867e12267a111e4876df54f345e18eb,,Speed is inverted when dist is negative,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  #1896 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Gazebo |    ---    ## Description of contribution in a few bullet points  * Fixes that backup_action_node cannot enter a negative speed and therefore the action cannot backed up.  * Changed to invert speed when distance is negative (robot should go forward) similar to backup recovery node.  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1913,2020-08-05T02:16:10Z,2020-08-05T18:43:02Z,True,2020-08-05T18:43:02Z,cf3a9f8d971d680957b121c6d4b1e948c05d48dd,2,2,04ceabeabe3e328641bd9ee6cbca82b8f0ece3cc bd981e91bfc7dd39a177a624d586183534dc52f6,,Costmap lock while copying data in navfn planner,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1911 |  | Primary OS tested on | Ubuntu|    ---    ## Description of contribution in a few bullet points    * This avoids making a plan while the costmap layer is updating  ---    ## Design consideration    * This may happen with a custom planner plugin  * The following version could prevent such problem but may lock up costmap update longer time  https://github.com/CMU-cabot/navigation2/commit/ba6b87e60899e7f0ce960d74bef11ee21a2a01d0
ros-planning/navigation2,1910,2020-08-04T21:15:52Z,2020-08-05T18:46:53Z,True,2020-08-05T18:46:53Z,cf0d8a0545459213f68db0c5a6fdb24e901f7fcf,4,7,0496e0c9974a31d6e9eb52cd7b9f3f55f0a4b9de c614bef0acbf4fc5df79464a4e168d505e3b54fc c0bc3f1df4c0b3e915406521bc514d8bf0cc04f5 88dbc3e9460b6882fe183974101d0a209cdd9e51 8abb96168f53a0da0f301102f3bfb2b4d32ef6f7 d9f977ee731b7247b7a718468324ed3891f6c353 07601601917eeeab94782562610fc7c4d66afa6a,,Add map_topic to static layer and amcl,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1906 and #1905 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | Byte Robot simulation |    ---    ## Description of contribution in a few bullet points    Add map_topic parameter for the AMCL node and the static layer. For the static layer the map_topic parameter is in addition to the map_topic parameter in costmap_2d_ros. If  the <static_layer>.map_topic  remains empty then it is will the map_topic param from costmap_2d_ros    ## Description of documentation updates required from your changes    Added to docs/params and added PR for navigation.ros.org.  https://github.com/ros-planning/navigation.ros.org/pull/63
ros-planning/navigation2,1914,2020-08-05T19:44:48Z,2020-08-05T20:30:46Z,True,2020-08-05T20:30:46Z,2a9ad80a41fe19f278a38c0a82d14d1120a2f07e,1,1,f83e722c4d1f6eb43c5c7507182d2485dd644bad,,spin_some in cancel to allow result callback,#1810 
ros-planning/navigation2,1915,2020-08-05T22:36:25Z,2020-08-05T23:44:08Z,True,2020-08-05T23:44:08Z,635d6bd4d642ac4b857f302936514ad5cd6ba6b5,4,3,c36fadbd1861fa8971ae0606c2aa0abd659400e7 5127ef64a4e3256d0f8e13420953e76953c06e5c 7a75513a3bfbbd268be7c9769d166a9002e5b721,,Adding near complete voxel grid test coverage and more to controller server,#1810  
ros-planning/navigation2,1796,2020-06-09T00:53:47Z,2020-08-04T01:54:42Z,False,none,a0997750c610c1bc17c53feab77ff48032625dce,29,43,045cee3a37167a29897d4a305034636a8bb1f7c1 5e5b44b6c702dcfb5d5dddd6338d97b1ea0a1ff1 e96624b0a9bcc19a8af83db6676f50df208033d8 532fb3e89ce97e1f14bf5ad5bb8337309c61f61e 51879e679b80c2e207b4f8c37fb3bf4464552356 865934bfe345d203dff394e5e45446df8f2e2393 a587988c1e25cbad043be6de37f03738fe6426b1 4d97f9f92455f8b6c4fce083ae7a88d71a3046d1 cf44114f11100b2145e5ece759aa9caa133ab0f2 a4f4036ca45f2a98f581acf7f08a670ea49324cc 020d6f8ff4dfb9d83da491b193cb2b0809788fbc 5ddeb7776f85f53720430f7f9ba06dd5878fbe4e 92430a238a3b72ab32fb62679e8ca57c4e47efcb bb68e425500a1c1712590a092efce3248a8585ac d973c4e147cd8e1bd7192e27f0779c5045c4cfdf b0b36c36504f689d9f51cdd8f0370be22f56d372 3872ea6c6ee7c07118465725f4e9b634d7d6ebd2 5902b8b8eea927bcfd1b50ec601c2b989e84aef8 77ab10140ba87e29d3857781e04ee253dc5e0886 0d950eae33893abf498156510eb0da7d13f77ccd e8ae94412012f83b5f1a67f454c2bbfa503ff1e3 453ac24e9b3a4a657540e2ebec7fa5b74f4bc282 39364e48f29b6d2aa9540e89cbf36064baedb57c 7741216ac1433367ee38b77866fcfa8f1bc4f664 5ce920dd375a6540f2c8ea332822a15db58d33de 531f5d29d274a02e2ef424cf900f892772abb961 f8c804d018ec4e6a50ad116cafe5c009fd573902 0c0670526ec11a8f5e4369c9df12171a3a7fbcdd 8a6f8bb7c7b8b9c613b2a72d57467a7cbe204313 2c2f281b8a20c8b0f5bf4258d5208fde6890a0c2 50155bcd6e53d18c9b713d74402282544a7b0c69 f1004efbc73cdda728a9a44f8977b21e5d53e8b6 63a749431d148cafec3af63e8ff07f5985eda4ea 0f9d57163d50756fcd267d3ce65e864206f72155 75e283abe7166766735ca1f8e514f02f0c3b291b cc28a79c5ee985e0ad9094b2ed26b8d14f0a3b13 fb15c21d72151f04a75f6ffa91bf7ba7a55e897e bcf5d483472477496fe9900ec8a515e0fd5c34c3 213f273c0bea8cffac0a60dbcd5f26adbbf47b94 1b5b3ca7b3692ebda3e45ad073f4a6f9df1b7282 9f096eb10b7c6362003d89699b982ed575f87860 df763fd96296f438bfa43268246cd7777161ccb0 c0bc37f0e37809f673498cb8241f329e6a88ce82,, WIP Add BT based implementation of waypoint_follower ,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | related to https://github.com/ros-planning/navigation2/issues/1651 (another implementation of #803) |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | None |    ---    ## Description of contribution in a few bullet points    * Add BT based implementation of waypoint_follower (Action server of FollowWaypoints)    * Customizable recovery behavior will be available for FollowWaypoints (As in the case of NavigateToPose)      * [follow_waypoints_with_skip.xml](https://github.com/ymd-stella/navigation2/blob/020d6f8ff4dfb9d83da491b193cb2b0809788fbc/nav2_bt_navigator/behavior_trees/follow_waypoints_with_skip.xml) is an example    * This is also an example of NavigateToPose BT-node  * ~~This PR contains refactoring of BtNavigator (to make the implementation of FollowWaypointsBtNavigator easier)~~ Reverted    ## Use case  If there is an obstacle on the waypoint  the robot will not be able to reach it.  In such a case  I want to perform the waiting action used in [navigate_w_replanning_and_recovery.xml](https://github.com/ros-planning/navigation2/blob/9e304b1ad4c10d03f7a08991224fd9686c6bb26d/nav2_bt_navigator/behavior_trees/navigate_w_replanning_and_recovery.xml#L27).    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    * Add unit and integration testing  * ~~Add test for plugins~~  * ~~Update nav2_behavior_tree/test/plugins/action/test_navigate_to_pose_action.cpp~~  * ~~Add documentation and BT diagrams~~  * ~~Add BT-nodes~~  * ~~Add sample BT (Use wait action)~~ Done.  
ros-planning/navigation2,1918,2020-08-06T01:41:45Z,2020-08-06T02:15:30Z,True,2020-08-06T02:15:30Z,4e2f39e202b43c13598ebea6bddb3e7276b9277f,3,1,23e16a4a555047b1c9eadf180cd4d0cbb8bbda2e,, Testing sprint minor changes to lower redundent warnings ,#1810     Collapsing lines that can be on 1 line where they make sense. Also removing a controller server warning that is covered by exceptions. Adding sleep to waypoint follower integration test to give some time for networking to die down 
ros-planning/navigation2,1919,2020-08-06T19:54:10Z,2020-08-06T20:13:00Z,True,2020-08-06T20:13:00Z,34d6184b08116d4267c234c207aaf63cb7972b77,1,2,e10d795e3870d703d04fa4b48f1d74d8b0512ec8 443644774644aab249b0c58586e373a0ab1c35b6,,Costmap plugins declare if not declared for reset capabilities,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1917 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation  |    ---    ## Description of contribution in a few bullet points    * Declare if not declared the plugin parameter when getting plugins for costmap_2d    ## Description of documentation updates required from your changes    * N/A    ---  
ros-planning/navigation2,1920,2020-08-07T00:37:07Z,2020-08-07T01:43:00Z,True,2020-08-07T01:43:00Z,bb47d8f8981f00779304c12fb6ce5fb37c457407,3,1,ba6da5aeed39444674dd77a4c17a7fdf44d284a9,,adding map saving CLI tests,#1810 
ros-planning/navigation2,1921,2020-08-07T01:58:15Z,2020-08-07T02:43:34Z,True,2020-08-07T02:43:34Z,be283d7530a17454dea85ac6dda4bf0eb44e19b9,1,3,ba6da5aeed39444674dd77a4c17a7fdf44d284a9 3f16bc8c98680130c68a067f8f49afa81d68c5e7 1d7ef3dcfe048eac0652a9f0a1f6e144ed146174,,More coverage in map server tests,#1810 
ros-planning/navigation2,1880,2020-07-19T04:17:00Z,2020-08-07T18:40:33Z,True,2020-08-07T18:40:33Z,4376e23ffb61a5a0180aeaf01f4b78e258b6daf4,7,4,326c7c071541bc782da6c61bffe3ef5911c35fd6 873d90e291870142f6939047c12be7a01898e3c1 0076233715ad1e6157a9b5e438671b69ece0633d 8a6e9a6c4e03156f0edb8611a3d956cca5e8c892,merge,Improve interface of NavigateToPose,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (related to #1796) |    ---    ## Description of contribution in a few bullet points    * NavigateToPose input has been changed from (Position  Orientation) to Goal to make the goal easier to handle.    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1922,2020-08-07T02:59:53Z,2020-08-07T22:26:02Z,True,2020-08-07T22:26:01Z,fd49876f8360c3aa3242dcffc2e2e5d65762ac50,8,10,ba6da5aeed39444674dd77a4c17a7fdf44d284a9 3f16bc8c98680130c68a067f8f49afa81d68c5e7 23ae1a38984d714f0c9abbeb97c41d2fe8b52b1d f1702a5f68072d78494a76170faca75bc63394fe d2096c9bd15304fb25a8789fe432635a6eeef811 583a1bc89591b8dd6fe1bd0be9ba67856cd234d2 ba7b10ad0d46bde1499ee98e68c7ccd2c2df095c b1f73a83b75e8d6350f879ce0ca7263ba0ed1452 8670e4964dccd9cdffce4f5ca0c1f58aad430ae1 40d857c257e9c077f92375d9c88738aee79afa1d,, Test sprint push nav2_map_server over 90 ,#1810     Added planner server coverage of the planner logic
ros-planning/navigation2,1924,2020-08-07T22:51:43Z,2020-08-07T23:28:15Z,True,2020-08-07T23:28:15Z,a5402ee3e90abc059eea5a69948410ce90044020,4,12,ba6da5aeed39444674dd77a4c17a7fdf44d284a9 3f16bc8c98680130c68a067f8f49afa81d68c5e7 23ae1a38984d714f0c9abbeb97c41d2fe8b52b1d f1702a5f68072d78494a76170faca75bc63394fe d2096c9bd15304fb25a8789fe432635a6eeef811 583a1bc89591b8dd6fe1bd0be9ba67856cd234d2 ba7b10ad0d46bde1499ee98e68c7ccd2c2df095c b1f73a83b75e8d6350f879ce0ca7263ba0ed1452 8670e4964dccd9cdffce4f5ca0c1f58aad430ae1 40d857c257e9c077f92375d9c88738aee79afa1d 7bba1c2f9caf0edbd386b43dca734a6dfd7a6a41 f20debdd7ad6e8eba9695f07482a765ce4204e06,, testing sprint final test coverage and debug logging in planner controller servers,#1810
ros-planning/navigation2,1926,2020-08-07T23:17:40Z,2020-08-08T02:51:07Z,True,2020-08-08T02:51:07Z,909c6f2da7423440d7bd4db3115a82cf8802249a,6,6,eda47e9ef94bb7f1fffe894f2643bcb84645b006 e491478a822982ca0c0d7c3c6e29ec0628b78613 c7c0adc996a959d4371a9634b3f05f09ccfb73fe 8b297d0ed311235cce6e3b5917932913ccfc6b5d 3ed7f56d9fcf9f4be47dd879930e1a7884d44fa0 e3df6097857f2ebccb954921cd08ae6f4a01624d,, testing sprint remove dead code not used in 10 years from navfn,#1810
ros-planning/navigation2,1888,2020-07-26T22:04:13Z,2020-08-07T18:46:00Z,True,2020-08-07T18:46:00Z,988b2d3b90307b19b3908a7d12596e16e3793d5c,10,26,0496e0c9974a31d6e9eb52cd7b9f3f55f0a4b9de c614bef0acbf4fc5df79464a4e168d505e3b54fc a44c09aa75ee05b6c07167d0c1a018a70629800a 51bbbe7e5b4ee01f8a2babe8132eb032d22051a1 509732f85cfaa7fdb51be07e42b632562b750faa a79b52127c638a37102475083ba26479e107eada 84248715c12fd5d2490da9dd297299dcf9702c80 86cd84414fbba1c4a5851501707c319d851c0eee b46c66a7780376ab0236f731598114944bb9a196 25fde5c5edf0baa5298a7c01231ae0aa7aa42c7f 9bc8ff446d41e374c5c15c88e2a4eddd3071c405 6bb1536e6ed214b2d5210ab8df8fe2f1efd5278a 2275f05eaa3dd4507f8a3a84bfd7bd52512276c8 a2c27fecf9a22b6ca2d015c2173a4f19cb5cb9ff 72b1e338f87ef3e4d36373cd8bf944c58a677a02 cefd1fe3c5d3b187a08259d3828f2d5a885170a6 57df64130879d744ff8100312e24443ff840efec 99bd8e5486d2c62a35c40daa18b04667d263cfaf 3061c2808f77c85569b8da722f1d1fb0e9328329 46f992a012793d3349769c0f44d96a34de0dfa11 4b24898f94a9e2242e8271ab95638d3036840807 e841cdf8d07cf81db450f4e131d47694f8d17840 91d20868c8dde94080c30af73c10d9983bb93e82 d8a220cb517eed8e17a739221b5038408ae09193 a34c557932392956439a9eb4c316a162129d606b 18fa0cc1293dbf786cbe4bffceac0de5aeebced2,,Add in range sensor costmap layer,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1830 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | Bytes Robot |    ---    ## Description of contribution in a few bullet points    Added in new costmap2d layer based on the range sensor layer in ROS1.    ## Description of documentation updates required from your changes    Added parameters and costmap layer to `docs/parameters`. Added layer info to navigation2.ros.org.    ---    ## Future work that may be required in bullet points    *  Add unit and integration tests for the range layer
ros-planning/navigation2,1927,2020-08-08T03:07:46Z,2020-08-08T04:24:03Z,False,none,4869bdea33edb6adbe6d31f715f395e8216fa476,1,1,bed67b0fee25dd5c5e02e0a2b703949074ecd800,, test sprint generate report for nav2_system_tests included in coverage report,#1810     Right now its not included  I'm curious what it will say if it is included. Its technically test that's being covered  I'd like to know if that should be counting in our statistics.
ros-planning/navigation2,1859,2020-07-08T07:08:51Z,2020-07-23T19:46:17Z,True,2020-07-23T19:46:17Z,69fdfd6dc305d5a4ee66dc0c9a21803edfa465c5,15,11,fb176ed65a16a0447339c041d5865633d0286903 7b92667f851fcd7c76debb47f13239f5363ff483 dc46712bb8e4404f9783f443301c4d1a071dd743 6849484c5c264142f591cbb563c4463072b3975e f4685e0786608db939f8c7e32815639268556b02 7491a81bbb80470dcee52f901e79444c0b5e175a af9deec067e6518d9bd26543361bb0245cecd6f8 fae94801b6807fc1dee51c9f63df8281978a5da6 8e3e3e261b09654e9ad7b317ccc7d0534d105492 eaeb7b0c0a8a4960423f72ab748a30c6e6092c02 995bae054fb20a342a5fb223a24187b2c847eb8c,merge,Follow pose,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1660  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of Tally |    ---    ## Description of contribution in a few bullet points    This PR replaces #1748.    The goal of this work is following a dynamic pose to a certain distance:    - The goal pose can change during the execution of navigate_to_pose action.  - The robot stops when the goal is nearer than a configured distance  and then it faces the goal.    One use case could be following a person to ~1 meter in a house. We want to use it in RoboCup@Home.    I don't want to implement this as a new plugin for controller or planner. This work is independent of the algorithms used to create the plan and following it. To implement it I have:  - developed a decorator node for updating the goal pose from a subscribed topic.  - developed a decorator to modify path. The modified path makes reach the robot to a pose to the desired distance and faces real final goal.    This is an example of BT for achieving this functionality:    ```  <root main_tree_to_execute="MainTree">    <BehaviorTree ID="MainTree">      <PipelineSequence name="NavigateWithReplanning">        <RateController hz="1.0">          <UpdateGoal input_goal="{goal}" output_goal="{mod_goal}">            <ComputePathToPose goal="{mod_goal}" path="{path}" planner_id="GridBased"/>          </UpdateGoal>        </RateController>        <KeepRunningUntilFailure>          <TruncatePath distance="1.0" input_path="{path}" output_path="{mod_path}">            <FollowPath path="{mod_path}" controller_id="FollowPath"/>          </TruncatePath>        </KeepRunningUntilFailure>      </PipelineSequence>    </BehaviorTree>  </root>  ```  [![](https://img.youtube.com/vi/4vae3p73OUo/0.jpg)](https://www.youtube.com/watch?v=4vae3p73OUo&feature=youtu.be "Click to play on You Tube")      ## Description of documentation updates required from your changes    * I have still to document BT nodes.  
ros-planning/navigation2,1284,2019-10-23T20:32:34Z,2019-10-24T20:14:07Z,True,2019-10-24T20:14:07Z,a03b3e401fe81b1dee7fb53057f0ab93da54fad6,1,3,2e583ea8d77f52d552b4aa862040be69aeb54ebf 4764e9c995c2c53f0675f90207c0f56019bf1733 07c52ead2b324ee8e17644799843080516a0bb4c,,Enable retest until passing with limit,Context: https://github.com/ros-planning/navigation2/issues/1271    I'm not sure what retry value would be preferred. I just copied what was used in:    https://github.com/ros-planning/navigation2/blob/67a92be87f8a00470313c232b1462d45379273e8/tools/run_test_suite.bash#L22
ros-planning/navigation2,1923,2020-08-07T02:59:53Z,2020-08-08T04:02:00Z,False,none,8f01c72b3005449ad76668c8dda9f91933cf52e5,1,12,ba6da5aeed39444674dd77a4c17a7fdf44d284a9 3f16bc8c98680130c68a067f8f49afa81d68c5e7 23ae1a38984d714f0c9abbeb97c41d2fe8b52b1d f1702a5f68072d78494a76170faca75bc63394fe d2096c9bd15304fb25a8789fe432635a6eeef811 583a1bc89591b8dd6fe1bd0be9ba67856cd234d2 ba7b10ad0d46bde1499ee98e68c7ccd2c2df095c b1f73a83b75e8d6350f879ce0ca7263ba0ed1452 8670e4964dccd9cdffce4f5ca0c1f58aad430ae1 40d857c257e9c077f92375d9c88738aee79afa1d 9670cceecce364956217dea36e55aafab652fa24 1d18e2a990173989c31bd55f3038190dd1bd63ba,, Test sprint push nav2_map_server over 90 ,#1810 
ros-planning/navigation2,1932,2020-08-11T18:54:37Z,2020-08-11T21:27:25Z,True,2020-08-11T21:27:25Z,671dde625ade1092130cea68a64eca7e97435033,168,45,28be30e993d621700723622fa4bf30e145f18dee 3913408bdb5cd8d8b456970e227ec10b4a19d9b1 36d0b25790dbe8f4dedabb6daa6c75557cd1d15f 9963518aab0f7063db046ce2774b6e084a08350d d99618c89f01b42bc30cb466f9e0c1530f88ba19 1be625430c5715d9f090f5b363f50c76d8dc4d4f 1a6824952be78e320a1f2e37672e3a3034611fd8 e458ad93002631304c8f52a3f94d12f0c55efbac ab98fe896acb0ac627c3b9a831d754ca64af4ad5 098e9c3fb63f6c7b8f6047eb8d7f4b9faa778e73 a0be179998d1c9760054f67c958f12dc943ba8ab 41e6bcef2c079497a9b6d4d9c2c8f9e1cbaf4ace f38b3c2b7b59369570aeff248e2c928ba53883ce 329c2046f87d2fb7245b1f32b1e3b8bbe00d05f6 c2bde4c250f001f3c7b48ab4271d940a613ac1b2 a5fab34a8ff60a36e405c548eb1ef077cf6926ed 71fda3166d321bb74324f8d6f7ba6088f427dd84 6a61ee6bc2b2a94f9a6d2579ed8e318d7fbc2a17 53a103207c1a2b307f14182de5b0dca16c75161b 45dd4f5ebecb6a67fa5553d39325c4fa0346fc52 8631c0a6d364536ee01702aa32ab4c6ba9616b92 02dff32a5baa6673ffc6949b26996c917c02b36f 68c7e14fd841f4d571235dec63b7b0bd44708194 1ebbad60a9ac3ea07d3ee5655b927c9ddae1c517 e1891d0f6df1890449df41368fc316dadc12a3ec 27abf03bc58a05b4af3cb427175be29f41c735e6 e4c2ab1f417e0a553c5203bbdc55a4280c38386c 33ecb85731ad806e0495904fd6905f16d1651c62 e90be199563b8f65910b7c2388844f10b2bb915e d57da0dcdb9143bc996f89e578e69dbd6eb4834c 0cf409a33cda4bb94773e2ddaec4e46b8646e447 e222944022d6f1a784fcb136d38a172e23a285e8 1a784d683b16cbae1ca9c233ff813619485e833c fc3b89a5c0c1c159f9f64ce883934289914c2e47 2a8d8cee7839dc8f28ab7f84adb7810000246cf7 9855a9b4d28110f5a5bc85160a86b19bbee25dc2 d60249543938fe7a67b2a689f477d1d8266bfbf7 29b3153471889493eeeb32255aee85301cfdee2c 053e3030e8c267bf04d15d29bf07d4fae2ba62dd 615cebdf75ad0c3cec18211d276088906f901d28 4346a3e6769775441952ebad33d7229739bfe7ef f86795e0cd7130af2dac193ec010e4a452e59ab7 8100ccb524a577de5f86c2f7da21a4bb0b4ff9e2 cbda8f3c7024c39523bfe7f5a994d3f9756e57bb 445cdce75de2e157518fe3cfbb190185655424e2,,Foxy sync 2 July 1 to August 7 ,Foxy cherry pick commits in range July 1 to August 7    Excluding:  - 4e1c18db7766d4a9fb5c8a497952b3743a0bb1b5  - ec2603960816a3b39204efb6d77ef5dff3d0a838  - 6f4a5582a568391b13a409e54b5c2d2ae0a565c4    with API or default behavior breaking changes (bond lifecycle  spin API change  observation buffer behavior     Major additions:  - Range layer  - Slam Toolbox rosdep keys  - Goal checker / progress checker in nav2_controller (default same)  - scan and map topics for AMCL and static layer (default same)  - Dynamic point following BT nodes  - A bunch of tests  - A bunch of new BT nodes (default same)  - Fix BT navigator crash on new BT  - Async resolution in updating static map    API breaks:  - How we load plugins  though all documentation to the effect this should have been in foxy    Doc needs:  - Update tutorials for "Galactic and newer" to "Foxy and newer"
ros-planning/navigation2,1935,2020-08-11T21:32:07Z,2020-08-11T21:32:33Z,True,2020-08-11T21:32:33Z,045224beff7e89101ae9b7d286f36006ebf0ba1e,30,2,8d41c79aaafdf7347aafa8c6062df348bb8f6e9a 8f8d0d08f7a28c8897097691074fdb5455f6e623,,Syncing Foxy updates to master branch,
ros-planning/navigation2,1939,2020-08-12T21:23:17Z,2020-08-12T21:27:41Z,False,none,4f4291cc239e1ef422ecb01b074efa9cc07d881b,169,46,1b0a7b160245daafae074c85e168a50a9d5bacbf c19199175ec81061fc4d13b7e76cdd8a52c8da45 ceac373de9b67af182afe618c8cd2f7386e1b20e de5efdd56f7199c3cbedb5b6a47482f1a7ffc377 d6e49730b4dd3277bf7a68826c989ce311e4fb66 84420bc0dce558287d8aa59587cdf8fbabd6f538 280468576625575020e4d6375bc7bde97fd8f1fb af6b3950664ea24b4867c5a49482a847c58cf65d b206e044d07f65964977e4c0eca6b6dc6015e0ba d2658c3fa9edaeabd569367c3776255bbc5095ec f697a3b2acdc42208183e70203b43ca18f82bad8 40c0cf89dd5e19e4ff67c196ee6e212bfa277973 ac6f994f86e41ac3786d6a2e40a44315eccc6ded 5f7bf97f8f477aaecc355e5f01ef550d629d4d03 5008ceb4edf99faf32a01784d113d13b26806e78 bdaeb5d3b7e92d1b7f3a427eb3ea909e38355d71 a6d081ca3cb77e7c2269d4f14b653cb4dd0fdee6 cba0737838f29bb0a53173101d0afdb606558af4 a28de8029418372022d340771d5b96de1887ce78 f37457ee680f458d3285c0cdfec6c1b8863f2fef 9c1d3fb971ed2fc1d7984b54c77df04b0901261c b3c12665990394d7b85538fc08b01033289fdeb0 c330aee20e1d1fbd844e26e495ee96aa681e8e26 de1b9183343fac2c68f18fa7dca2ba7dfcdde527 a88b5f1195d7320c955fcb4ee1cba8bfb3a95c4e f4d55e1de1b58b38b03f3dcbfc61366bdf7f58b3 b7f5e713c002580f3ec4a7b85bb8ce55a63cf16e 83a7bc53f8dc35a3e7a56bea7e89f164ef697c45 6674e03bac0ba4e6571d546a9b5eb8a563726543 ffc77d83385bd57bd24ae213875d71a2f2ec16bd ea9d77cd69f425cf7fa2014aea61a951f05510e2 7b58975d01abe58ec753f57c8b4cef2fb0553f19 6c5ca28b21a08558965cbca265d935e71b60872a ea67710d186f1bde5ffff606845355ccf03c200f 9d8bb26259d049742636e65c79841fd653ac66f7 a97bd9454573a670dcc9479d89745f9c62d0f46a 3fa8592067079cfabc08c9a39e4a058fae02ac87 9d43e8d9183d52ead805541c7e112f07eb9c64f2 67a0c2feb08bd4e6e749f78dafeb0cb198f371c1 4c62be229f93b0fabd545729ea103c86d54aca92 d1818959c03afd5167145d5d0baad0cbc20ce11f 06ef57fdaacf52904660eab8cf735ebd28cd6a88 356be78905b178cfd5b9cd58f679538841f3ff77 843f6c70ffbaad932e1eebe98401f02d8d6f0618 dbd1d1f2d01340e8aba30951ab4920ceacecd467 eab7895d437b67dd584e2c49851d140b2fbaef96,,Fixing multiple instances of waypoint follower node appearing resolves 1937,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1937|  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Sim |    ---    ## Description of contribution in a few bullet points    * Changed the way we define the name of the node  which as memory serves for client / secondary nodes has to be done a little bit of a funky way. I think there's some hacky solution in rclcpp for remapping the node names in the C++ code to launch that effects the entire process' nodes not just the object of that name.     ## Description of documentation updates required from your changes    * N/A     ---    ## Future work that may be required in bullet points    * N/A  
ros-planning/navigation2,1934,2020-08-11T20:12:39Z,2020-08-11T20:48:48Z,True,2020-08-11T20:48:48Z,4c9b43f9922f42afdbca8d8fc982f3488d0e948f,1,9,12a6037a1e5eb13c8118498e379c98c5e7cd0996 1b1d7c4b05a0a7aa74f9c6b93c97fe82c7173d57 6786c6de491920b97766192eae0de4834a1ea203 c729e0325250f780343edcfba46acdab72a56539 d9e32a0759e691852101ec281d94beabb8f98564 baba3ad8abc849ad6ef0ebe944473c84e8d59487 94f5e06670d559c040423aef7698e433a3d31244 4d4ccb7a7cd7afcaf0cbc44db883ccbcedf2f736 7be62713bd897e19d7ff3ce58fba5280348d7aba,,Cleanup CircleCI config,Avoid duplicate colcon tests  and update/optimize CI config.  Context: https://github.com/ros-planning/navigation2/pull/1284#issuecomment-671636246
ros-planning/navigation2,1941,2020-08-12T21:30:25Z,2020-08-12T21:32:24Z,False,none,3298a8a00600d85d14e957ccab6615bb57636bdf,7,4,53a8771097056cf72e7772eb30457b404e072043 b0408001420b26b03b288d33e5ffb9d5783b7bbf 0cdf4f44c7a4171bfa4c6eb885d46c3c19f26a87 4afbd67135c88c5a22611ba178737215d93546ab,,Fixing multiple waypoint follower nodes on network resolves 1937,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1937|  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Sim |    ---    ## Description of contribution in a few bullet points    * Changed the way we define the name of the node  which as memory serves for client / secondary nodes has to be done a little bit of a funky way. I think there's some hacky solution in rclcpp for remapping the node names in the C++ code to launch that effects the entire process' nodes not just the object of that name.     ## Description of documentation updates required from your changes    * N/A     ---    ## Future work that may be required in bullet points    * N/A  
ros-planning/navigation2,1940,2020-08-12T21:30:25Z,2020-08-13T17:35:14Z,True,2020-08-13T17:35:14Z,606ca7abb40f04eae924a07fd27fa2caf1f94f5c,1,1,4afbd67135c88c5a22611ba178737215d93546ab,,Fixing multiple waypoint follower nodes on network resolves 1937,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1937|  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Sim |    ---    ## Description of contribution in a few bullet points    * Changed the way we define the name of the node  which as memory serves for client / secondary nodes has to be done a little bit of a funky way. I think there's some hacky solution in rclcpp for remapping the node names in the C++ code to launch that effects the entire process' nodes not just the object of that name.     ## Description of documentation updates required from your changes    * N/A     ---    ## Future work that may be required in bullet points    * N/A  
ros-planning/navigation2,1946,2020-08-14T18:44:40Z,2020-08-14T18:49:21Z,True,2020-08-14T18:49:21Z,c9441b14a9b8272cb970af80d9224f4c7309724a,1,1,a40c734865dabe49712cca546ab6229cee454804,,Add include vector for vector ,To fix cpplint   See: https://app.circleci.com/pipelines/github/ros-planning/navigation2/3602/workflows/c6d8b916-c656-4f75-a89b-381d44b02903/jobs/14110
ros-planning/navigation2,990,2019-07-30T05:55:48Z,2019-08-21T03:06:17Z,True,2019-08-21T03:06:17Z,5c0dfbe7a49cdc91a0db893ae5e1fb0e1bc84e6d,12,77,5f59f682ffeca74d5df9943e1e9a7cde775b4936 c2cc8faecda3896e6499f4b440f06d4d8fcb09ae f9b0682455230f9ce899ab1bd608cee676e2721a 0386f4435fe5855cf8ee288962dcc7766f8fe477 abd33800082a3940b9b888641fbed87998addc1d 53ba5d631099bed5e302baa32042d1ee76aa9829 103d3f28e4dce4da95764aa7aed9d990519025d6 45b35d39e49d10a6c6f8d125943d283f6e2d691a bfb5f65ec1af72311f4f4472a2d795800aecf7bd c8c00f1fea59ccd795b2713463325dac7aecabb2 bc747019fbf380a56d213c3a5b2520f30227e91d fdd13cac3bbb6305a95eeb6cc998f277972d134c 6e8b927be7d6750b904b9d3fa1f49990322e9f8b af78ecb7b857d9649d9ab96b0c1278399d91dd07 dc8b43eaa07b25dfcea2ea9a2dfa2960d6215140 60f60290a17037005ce436be7e940c2157ebbae5 1a0d9753341747c362a711d9f18e3ecbe605d34a c2b5c9653dd330a0b1cdfd41e282c55774f79589 cb67dd98f0115562272ac4a6635fc9893238b210 f1d5c22142839b6b2daed571ea03a8fe857bf381 17cf28a0c9d126eb6292a8ba8eaf928b02a05c82 e866ce96f0b8a24e4818b26b650ec7f44ef7bb1f ee98e993e769ef97eb5878c90fb1385b86a8be72 b4393117f9d348109ec673afd0bbed78930cec0f f5c000dc3c19e0ff8f83f30641f2598c147b47fe fc52350213bf30fb0db61b99926b652db490eb34 b54e7a1230d3187c3c49a97ab735458dc2c738c6 d54d1b5f0725eaa4e96cff2b072d67ac2c3e5ec4 8f6215459a83a786b8756f15d9e4406412195ec6 6d7f90cb579c0d24ef2a5e391836798f0cd352e8 1e7130798af60eabb9400b6f540d8cfe391321cd cad449d613671b019935d48d7dfb2f82a0b10fa3 92d966164eff2e0b6931270bd5c7d006daf67b5c 60491b1928df409e3fb613cdea24c53837a8cec4 d1fa0b2036e86272415adb325c7e3a88934a6686 7f5e02015f66600de50aaee37ae9b3b5a69f5717 27ea4cb745891e49213b5098de7dc3e880eab1f1 2eb191697783bb071de2c49f63dba800dd6fecc9 142d7c967c34f12fe1ed1f9a1a05c48371f9a0ce b89c1f3fc3cf06ab9e9ffd828d9decbdc92defb8 b4fea138025372269821c26f19c054f83977799c ac71fe5a4e75d8adef59d6fc7bcde9f6f99abb75 980063b1eafc8c2301d051574279de5373316242 a0fa810521752ecd833f80346c78c0e4fdaf0b7b 321e0e8f1f1be70b7c8bf64fdc167230ea62df93 d53be70027644b362c362d6a79ccdcabf5da30e3 e0fd2ebf88104d87dffe2fa80d0567ccf55c284e 1c6e4a85d1743c7551304c2367b0e7992e97c300 c6853560879e4109be4267ae078c9eeb281d6c0c 64d5ddd255d3adfffa0c1ee04a04ac0c1c961ae8 94f73430becb793ac8177c577317dbb4010347d8 d5379dc08708c6e4c5cca4ec55b592dcf94f1a02 a4c53dedef5fea17c4ffbc615d673d1ad84cdd29 b2e3d720809760fc18b90f0c3bf9c32fe26e513a af127127d3915ee526d49adc89dbe2897b743e59 0359bf76cb6a77cb2a30b5431ec0ca5a93430a6f 208e4e5147cf3a8ea4012bab7a6df985586edf68 01b367c6a7fbd3e8bdb37367dc73a15118e7875e fd21ee90d86802922418f53504bff951697eb10b 286a88157b0ad3f56b45e1368174b19d24e39ed9 970aee8fcf7cca59902b2541b74947aca45d808f 0ce96c96c43bb016341300bd64497c5cde6c7b97 2c9cd822b82338a07397c3279e6c499e14eccffc 099402f31abd6939b3285f1cb899c0c0be389bb3 a1345de8f28e2c4225f009450a903e9f55b54a7b cf8fa70e0ca22af4218f067d7995ddb8a49b470a 66892a6eed8bbf24f7bb3d004642d68d1ddf2047 6eef8e53b3dcb829be93f37346ac9251a04ddf9b aa65146f3beb1b52373d9e8c9a1243765eb442d2 d944605e90b898dff7986d2800c5144fc0b0a929 a177fe2a2790ef8753ad7517c68fbb047128351d f85c2bee6302025921493bb6ca25261f306dc9b2 a071cfdb94479f460932d9c5cc2a533be8c79909 98e62e451fd67f8a146e757a3674e9e0978db644 e03175ba9f0634cdcd59b07e9936c049e48641aa ca948f28b9aa5d331b114b12c68bd1a8900348c0 618e642f1e8177ddaebbd95b4eaaa65e9a98d2a9,,Extend CI Workflow to test multiple RMW,This PR extends the CircleCI workflow for testing multiple RMW implementations. To compensate for the added build time in generating messages  a combination of ccache and CircleCI caches are used to accelerate fresh PR jobs  including jobs across successive workflows. To compensate for the added test time  RMW implementations is tested across parallel jobs using the quicker release build.     ---    ## Motivation    In preparation for the security workshop at ROSCon  @mikaelarguedas and I have been working to demo SROS2 running on the Turtlebot3 to secure the entire ROS stack  including the navigation2. However  when using other Tier 1 supported RMW implementations to verify security functionality  we’ve been encountering a number of issues  including:    https://github.com/ros-planning/navigation2/issues/915  https://github.com/ros-planning/navigation2/issues/916    To help navigation team detect and debug these issues  I’d like to extend the current CI workflow to include support for testing multiple RMW implementations  as well as a number of other optimizations that may be helpful in keeping the CI tractable.    ## Changes    * DockerHub and Dockerfile    * Clarify underlay and overlay terminology and inconsistencies    * Parameterize the `FROM` image using build a `ARG`    * Add hooks for reusing Dockerfile for multiple tags    * Install and use ccache for CI optimization    * CircleCI config.yaml    * Clarify underlay and overlay terminology and inconsistencies    * Split RMW testing for release builds into parallel jobs    * Add nonce to cache keys to avoid collisions between parallel jobs and workflows    * Use CI caching to preserve ccache across jobs for both underlay and overlay    <!--  ### Before    ![image](https://user-images.githubusercontent.com/2293573/62171013-57637680-b2e2-11e9-9ceb-a3b233c7788a.png)  -->    ### After    ![image](https://user-images.githubusercontent.com/2293573/62171073-98f42180-b2e2-11e9-84f5-6c7db24d6be7.png)      ## Action Items    - [x] Update DockerHub automated build config  - [x] Change over image repo from ruffsl to rosplanning    ![image](https://user-images.githubusercontent.com/2293573/62169463-20d72d00-b2dd-11e9-96c7-a9e1783673fc.png)    | Source Type | Source | Docker Tag | Dockerfile location                | Build Context   | Autobuild |  |-------------|--------|------------|------------------------------------|-----------------|-----------|  | Branch      | master | master     | /.dockerhub/nightly/Dockerfile     | <leave_empty>   | True      |  | Branch      | master | master-rmw | /.dockerhub/nightly-rmw/Dockerfile | <leave_ empty > | True      |
ros-planning/navigation2,647,2019-04-05T14:08:04Z,2019-04-08T16:28:18Z,True,2019-04-08T16:28:18Z,531e09f9767d32427ca5c1fe5a588f744a5eff18,2,1,b16c85f718e6547859982e68ec5479c025aaa4b8,,update READMEs,While reviewing the docs and coming up to speed  I figured I would update the readmes. Reading the linked tickets  the costmap layers mentioned have now been ported. Also fixed a typo.
ros-planning/navigation2,1936,2020-08-12T00:30:26Z,2020-08-12T19:17:54Z,True,2020-08-12T19:17:54Z,07349028c235d56263d521979362b4fa707e6b98,2,1,e5241327ed046ff2fb3347a032c6fb44ec10776e,,Fix InflationLayer resource locking problem 1931 ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1931  |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | tb3 |    ---    ## Description of contribution in a few bullet points    * fix resource locking problem of InflationLayer    ## Description of documentation updates required from your changes    N/A      
ros-planning/navigation2,1949,2020-08-17T00:02:33Z,2020-08-17T21:01:05Z,True,2020-08-17T21:01:05Z,ed8ddafb3b30557767b7eafce5fae76e99c2795f,1,1,eec7094f7f5ab458381989281c03bb68367ee2b7,,transform goal to costmap frame,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | UBR-1 |     * fix regression from #1857 - the goal has to be transformed to the costmap frame or you never finish a navigation goal (I presume in simulation you don't notice this because odom is pretty close to map frame?)
ros-planning/navigation2,1956,2020-08-18T18:29:07Z,2020-08-18T19:42:37Z,True,2020-08-18T19:42:37Z,a1e07200dbb5ced654e71d1cf40bf8461ae66968,3,7,6d6ebb4edf26e656b8c507f1c611091358a10e0d b1a0ad2ba463ad0d9b3d32c7ee558be0d6d444c5 6440b9914761f86d23948fff7e38a8ea1fa80113 7ced903c9475a3b4873162e2773363f985fed693 eab926e6ae5a604a7082043c62c835a607c50e0c e5d7fa4643278e8c9b57c2fb6691bf32c16920fd 599d166c22d70c51a1690388ba42f172a82e7606,,Trigger Dockerhub from cron job rather than Autobuild,Currently  Autobuild is enabled for the navigation2's Dockerhub repo. This results in pushed commits to the default branch triggering rebuilds of the docker images used for CI. Autobuild also enables repository links to trigger rebuild whenever a upstream dependent image is updated on docker hub  i.e. `osrf/ros2:nightly` that rebuilds once a day.    Although  with more frequent PR merges  this build queue can build up  delaying fresh image builds. More problematic however is that updating docker images in the docker hub registry before a CI workflow has finished can disrupt jobs within; particularly the caching strategy between jobs in the same workflow that necessitates test jobs run from the same executor image that the build jobs before it use.    This PR opts for triggering dockerhub builds via a nightly cron job rather than commit events to the default branch. This will rate limit image rebuilds to once a day  while reducing the likelihood of interrupting any ongoing workflows.
ros-planning/navigation2,1953,2020-08-17T22:50:04Z,2020-08-18T01:14:34Z,True,2020-08-18T01:14:34Z,f07c1eed7bcab8927a693c46a88d54311e7a2307,1,2,f118b4f06bb474f490772522119a2bf8280621e2 451c0b1d79b9ba413fcbaa563d700e86b09baf2e,, WIP removing rviz plugins from test coverage since its not a production run time component,#1810     We exclude navigation system tests because they're not run-time tools use on someone's robot during an actual use. The rviz plugins are a similar analog  only used for entry level testing  not used when actually on someone's robot for use. We should consider if it makes sense to exclude this as well.    CC @naiveHobo - thoughts?
ros-planning/navigation2,1957,2020-08-19T00:55:36Z,2020-08-19T02:11:28Z,True,2020-08-19T02:11:28Z,69bed34f922e9972fbc80833d67770eb7f7cc9ae,2,1,f32d0471324901f9ff0fa62cafa2d2e05a791e5c,merge,adding clearable layers to defaults,#1850
ros-planning/navigation2,1952,2020-08-17T21:08:55Z,2020-08-19T02:12:47Z,True,2020-08-19T02:12:47Z,2e0697c64c265f31bd4ef6c5ed43374841242077,2,1,d140bedbb8dd4bf6a3c9fb98b1ce49789d40cae9,merge,Fix InflationLayer resource locking problem 1931 ,I resubmit this PR because of the merging issue.  https://github.com/ros-planning/navigation2/pull/1936#issuecomment-675092401    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1931  |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | tb3 |    ---    ## Description of contribution in a few bullet points    * fix resource locking problem of InflationLayer    ## Description of documentation updates required from your changes    N/A    
ros-planning/navigation2,1959,2020-08-19T05:23:10Z,2020-08-19T18:58:47Z,True,2020-08-19T18:58:47Z,db2f917bd5a1bdacf7acc5436f49434be0d02ad5,4,1,e4e8ee0f875af7ae74d68f9101d582d1cf254175,, Foxy More Windows build fix ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | N/A |  | Primary OS tested on | Windows |  | Robotic platform tested on | Turtlebot3 Simulation |    ---    ## Description of contribution in a few bullet points    * Those build breaks are found by building against [release-foxy-20200807](https://github.com/ros2/ros2/blob/release-foxy-20200807/ros2.repos).  * `tf_help` has a linkage dependency on `conversions` for the usage of `poseStampedToPose2D`.  * Fixed a time\duration conversion build break in `ros_topic_logger.cpp`.  * Added the missing dependency `angles` for `nav2_costmap_2d`.    ## Description of documentation updates required from your changes    N/A    ---    ## Future work that may be required in bullet points    N/A
ros-planning/navigation2,1945,2020-08-14T16:55:46Z,2020-08-20T20:38:19Z,False,none,15e5538407bfc8b39a30498c9c27a92fee056edb,5,5,c2682b7f6c8865dbfa91ea3625a250086660f4a5 3c0f3b8eb2d12f6bb93a98732bf8561afcb05894 a56d4b1a425b8a737c361038c6ad183616519c9f a31029127d2820f98249419e1793744425087565 5248ce4ce552532b0146742ead25abdcfdacbbef,,Rename AMCL parameters for global frame ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1) |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---      ## Description of contribution in a few bullet points  - Update AMCL_node parameters to match other node parameters name for Frames (global  base  odom)  - Allows "Quote" or Unquote values to be use inside yaml config file.    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1943,2020-08-14T01:17:59Z,2020-08-20T22:48:23Z,True,2020-08-20T22:48:23Z,b6b17e2979c5478c4050adc36bd1c85d161b61cb,14,4,07c6b59098f9db2d064699fbee229a2dd2bb506d 457a9fe8027a649a8aa3c814a83a11a64ad3016e bb29d801d504cf5de8c33524d01f76974f76e23a 4d1f0c38f510cf0d1ab84fd3e77df71009c8a9f3,,Fix FollowPath path_updated issue 1938 ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1938 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | turtlebot |    ---    ## Description of contribution in a few bullet points    * Remove `path_updated` blackboard variable and use `path.header.stamp` to check if the path is updated or not    * This change fixes both #809 and #1938    ## Description of documentation updates required from your changes    * I think nothing    ---    ## Future work that may be required in bullet points    * if this change is okay  tests should be fixed. There are many tests that set/gets `path_udpated` to/from the blackboard
ros-planning/navigation2,1619,2020-03-31T04:33:18Z,2020-08-21T19:25:19Z,True,2020-08-21T19:25:19Z,d191e0a41148ef87597711d5bab18dda98fa7c0c,2,8,7704c4fe5014a56788cfacfb4a8d31760b9e4183 e6a210fee12705a4eafa1511c0abe25d19eadc26 deded44faaa35090c67294238cb517d6b4222d12 6ef51ebed0f6d8b64c88eb1ad7ca65a9d9fcdef6 12119444ef6e24dc088bc7240070751e4cb7934a c3ad9c4e1518cfe1ef629df85ac914883986344c 9013a9bf0b86d1c84cd89989e8dc4271d08721f9 1ac0b63a9458262d31e0311b022d984c057bfb5e,,Fix being unable to change StandardTrajectoryGenerator parameter vtheta_samples,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu Bionic  |  | Robotic platform tested on | simulated turtlebot |    ---    ## Description of contribution in a few bullet points    * On `eloquent-devel` changing `vtheta_samples` has no effect; the controller always uses the default number of 20  * The root case is `loadParameterWithDeprecation()` not declaring parameters  * Existing test did not catch this bug because it uses `set_parameters()`  [which automatically declares parameters](https://github.com/ros2/rclcpp/blob/99286978f92c30fe171313bf0785d6b6272c3257/rclcpp/src/rclcpp/node_interfaces/node_parameters.cpp#L523-L542).  * Existing test further used node options that are not used by the real ControllerServer node  * This PR fixes the test to use [same node options as ControllerServer](https://github.com/ros-planning/navigation2/blob/826a4d2eddd01456a6c8005f442d9200b95eedbf/nav2_controller/src/nav2_controller.cpp#L32)  * This PR fixes the test to pass parameters via overrides rather than using `set_parameters()`  * This PR fixes `loadParameterWithDeprecation()` to declare parameters; a consequence of which is it can only warn about deprecated parameters if the set value is different from the default value.    ## Description of documentation updates required from your changes    * None    ---    ## Future work that may be required in bullet points    * This PR is a cherry-pick of a fix I made for the `eloquent-devel` branch see #1620  * I've actually only tested using `eloquent-devel`  so I don't know for sure this bug exists on master    * I'm relying on your CI to do that for me :upside_down_face:   
ros-planning/navigation2,1947,2020-08-15T08:25:27Z,2020-08-17T19:27:32Z,True,2020-08-17T19:27:32Z,d616e496bbcc4318338cfc2d9bf4630632983b50,1,1,82d7bcee7a9166de3a68aa72f769bbfd3bff0baa,,Add angles dependency to nav2_costmap_2d package xml,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | None |  | Primary OS tested on | Ubuntu 18.04 |    ---    ## Description of contribution in a few bullet points    * Added 'angles' as dependency in `nav2_costmap_2d` package.xml to fix failing foxy debian builds
ros-planning/navigation2,1965,2020-08-24T18:24:25Z,2020-08-24T19:13:07Z,True,2020-08-24T19:13:07Z,fa1a64ad4d47a3793d22ce7da3f7238c92294af7,35,8,a5575f9195a363fc25fc2a819d2d3916ef17e9f7 f23faac3729fa8cbe238465b17444941f061adae 7dff65a7fc4a970783d0fe141baf318e3ce3bc9f 5e522b8a23f722e56eacf373155ee10bf57cfb29 f59812a0c4bc8ca5a16f9dbf17a08cd91aa02c4f 189b4b4bf3dd077540f1ef37dcb94422bf56e8fe 3b32bc67974c5b230dcf5f09cbc1909973f871ed 34fa0192cf45309a2e0968395292b18585bb08ab,,Foxy sync 3,Cherry picking:  - 606ca7abb40f04eae924a07fd27fa2caf1f94f5c waypoint name fix @SteveMacenski   - c9441b14a9b8272cb970af80d9224f4c7309724a include vector header @ruffsl   - d616e496bbcc4318338cfc2d9bf4630632983b50 adding angles dependency @naiveHobo   - ed8ddafb3b30557767b7eafce5fae76e99c2795f transforming global plan @mikeferguson   - 2e0697c64c265f31bd4ef6c5ed43374841242077 locking inflation layer updates @daisukes   - d191e0a41148ef87597711d5bab18dda98fa7c0c parameters for DWB @sloretz 
ros-planning/navigation2,1900,2020-07-31T19:45:28Z,2020-08-25T01:02:28Z,True,2020-08-25T01:02:28Z,f237751f557b2e921e08f96d4749bfe3f2b2b091,65,12,b56b78f7bc011098f2a780fbb6110eb71c554b48 cc56e2a273c7c6995aef0f463e6f113c09e0597e 08a598d1d292b0b0b3b50ee0efcd8160a00b38cd b990bc90ee1cd3d422948e8f09a26b1408e83dce bfdf4e9e0484d14dd28de431749e9121a62fc953 151bc6fd86279cd2b73c174493f5132cd6b13f9d 4e888b313abd0617dab49270e5b161e8a59260c5 5d23e33269d30e4b2c050568cd65a558cf6a510d aeae2cc3c09aa6367374479ff015613703fda05b 8942273b0840e08e730ff73552a4d1dc79586f49 0722a30bd46126f801c79c240d35bb1cb6055d55 45775b360a8bad5e1fb04cf7fb230a318159df4b,,Fix memory leak,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1860 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Turtlebot3 Gazebo |    ---    ## Description of contribution in a few bullet points    * Fixes shared_ptr (created through `shared_from_this()` cyclic dependencies in major servers which causes a memory leak on killing the system when the node is in any lifecycle state other than `unconfigured`.  * All server were tested for memory leaks using valgrind (report below)    - Run the server using `ros2 run --prefix 'valgrind --leak-check=full'`    - In a separate terminal  manually make the `configure` lifecycle transition using `ros2 lifecycle set /server_name configure`    - After configure transition is successful  kill the server using ctrl + c    **planner_server:**    ```  Before:  LEAK SUMMARY:     definitely lost: 875 bytes in 41 blocks     indirectly lost: 4 587 bytes in 63 blocks       possibly lost: 887 563 bytes in 1 385 blocks     still reachable: 8 052 031 bytes in 21 690 blocks                        of which reachable via heuristic:                          multipleinheritance: 20 552 bytes in 80 blocks          suppressed: 0 bytes in 0 blocks    After:  LEAK SUMMARY:     definitely lost: 795 bytes in 38 blocks     indirectly lost: 4 571 bytes in 65 blocks       possibly lost: 0 bytes in 0 blocks     still reachable: 91 972 bytes in 205 blocks          suppressed: 0 bytes in 0 blocks  ```    **recovery_server:**    ```  Before:  LEAK SUMMARY:     definitely lost: 1 032 bytes in 36 blocks     indirectly lost: 3 677 bytes in 48 blocks       possibly lost: 308 929 bytes in 728 blocks     still reachable: 5 022 993 bytes in 11 043 blocks                        of which reachable via heuristic:                          multipleinheritance: 10 392 bytes in 39 blocks          suppressed: 0 bytes in 0 blocks    After:  LEAK SUMMARY:     definitely lost: 744 bytes in 24 blocks     indirectly lost: 2 621 bytes in 36 blocks       possibly lost: 0 bytes in 0 blocks     still reachable: 53 562 bytes in 185 blocks          suppressed: 0 bytes in 0 blocks  ```    **controller_server:**    ```  Before:  LEAK SUMMARY:     definitely lost: 1 595 bytes in 76 blocks     indirectly lost: 11 429 bytes in 173 blocks       possibly lost: 1 189 300 bytes in 2 196 blocks     still reachable: 9 467 852 bytes in 25 774 blocks                        of which reachable via heuristic:                          multipleinheritance: 25 880 bytes in 98 blocks          suppressed: 0 bytes in 0 blocks    After:  LEAK SUMMARY:     definitely lost: 995 bytes in 51 blocks     indirectly lost: 9 453 bytes in 150 blocks       possibly lost: 0 bytes in 0 blocks     still reachable: 106 448 bytes in 251 blocks          suppressed: 0 bytes in 0 blocks  ```    **costmap_2d:**    ```  Before:  LEAK SUMMARY:     definitely lost: 2 328 bytes in 33 blocks     indirectly lost: 450 004 bytes in 711 blocks       possibly lost: 118 613 bytes in 267 blocks     still reachable: 5 258 764 bytes in 13 553 blocks                        of which reachable via heuristic:                          multipleinheritance: 5 800 bytes in 28 blocks          suppressed: 0 bytes in 0 blocks    After:  LEAK SUMMARY:     definitely lost: 824 bytes in 28 blocks     indirectly lost: 3 429 bytes in 50 blocks       possibly lost: 0 bytes in 0 blocks     still reachable: 56 522 bytes in 187 blocks          suppressed: 0 bytes in 0 blocks  ```    ## Future work that may be required in bullet points    If the changes with the recovery server are approved  I can make similar changes for all servers which use pluginlib.    - [x] Recovery Server  - [x] Planner Server  - [x] Controller Server  - [x] Costmap 2d
ros-planning/navigation2,1968,2020-08-25T16:54:32Z,2020-08-26T02:44:56Z,True,2020-08-26T02:44:56Z,98e994fa6912e87cf547a15cbe0f26fd67a3f01a,1,1,0e603627f1bf0da83680769e76e94e7be8f128a0,,Adding bond to map_saver,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1966 |  | Primary OS tested on | CI |  | Robotic platform tested on | CI |    ---    ## Description of contribution in a few bullet points    * Adding bond connection for map_saver     ## Description of documentation updates required from your changes    N/A    ---    ## Future work that may be required in bullet points    N/A  
ros-planning/navigation2,1677,2020-05-04T10:13:23Z,2020-05-05T03:57:28Z,True,2020-05-05T03:57:28Z,e7ad13534c2ccaadea214fd09cd1db3aeb6775e3,7,2,2520743477b802805da666a2f1d490ecbc968d38 5e7356eabda89942cdddc34d74f042e88a70931c,,Add weights to AMCL particle cloud,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1623  |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TurtleBot3 gazebo simulation |    ---    ## Description of contribution in a few bullet points    * Adds weight information to AMCL particle cloud   * Add Particle and ParticleCloud msgs    ---    ## Future work that may be required in bullet points    * Find a better place for the Particle and ParticleCloud msgs instead of nav2_msgs  * Remove the PoseArray publisher in AMCL node if visualization is not needed  * Add an rviz plugin to visualize ParticleCloud msg which scales pose according to weight  
ros-planning/navigation2,1970,2020-08-31T13:30:54Z,2020-08-31T17:39:05Z,True,2020-08-31T17:39:05Z,0a2dfbe2886d6c615512fd2ff2c81caa5391263a,1,1,0f99724573048a6bc050cd30f1fc120051f06e32,,initialize variables in inflation layer,another fix from noetic release    https://github.com/ros-planning/navigation/commit/71b95c26c9b713705ea584e93ea494c3d02b919d
ros-planning/navigation2,1969,2020-08-31T13:17:27Z,2020-08-31T16:24:59Z,True,2020-08-31T16:24:59Z,ef8cfad646fc2d52a06152cbbb1b88b70765af5b,1,2,5ea3020048874f548a86651aebdc27d214aabe7f e536f28e694f235eab7da0b4e82aba801ccdbe68,,fix invalid memory access,this fix was applied as part of the noetic release of costmap_2d    https://github.com/ros-planning/navigation/commit/05d42ac1f8d164359f2f0da1d63d52e1d4b6ec05
ros-planning/navigation2,1972,2020-09-02T18:11:17Z,2020-09-02T19:29:47Z,True,2020-09-02T19:29:47Z,26b975b78af4ac0b839a8b825f621a2a2e611ee1,1,1,4d4a63a70fb6d6b738b5f8e1902f5365fc6faaec,,Update Bond URL branch from merged PR for lifecycle support underlay repos ,
ros-planning/navigation2,1978,2020-09-03T16:29:04Z,2020-09-03T19:11:09Z,True,2020-09-03T19:11:09Z,a35953222f282b413261495570c1201ec40b7358,1,3,4c8dd0cea469f2478ab521c054f2346aed5fc396 d7ec0dbedfa20094d3e98998b5f58817c1cebe25 ba003b662cfa72d2179ad4c85d769f91ecbdc2c4,merge,Fix zero waypoints crash,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1977 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | Gazebo simulation of turtlebot 3 |    ---    ## Description of contribution in a few bullet points  Check for the number of waypoints. If there are no waypoints  then terminate the action and return.    ## Description of documentation updates required from your changes  No updates to documentation required.
ros-planning/navigation2,1974,2020-09-03T01:12:27Z,2020-09-05T07:25:17Z,True,2020-09-05T07:25:17Z,91d0a831c074a5df147c71ed02215e9c6c0c9762,8,8,11c13af1db3dbbb09c116509eb5f1c2c2620d1ca c76a338f99843054cfaa4d7519f38902544b4e8b d26ab10106e38aca7ab068e18b274cd7dd212c15 c7fd70427c7822aa377c5ebf98caa1cbabb82bb7 384bd5e34f006b31078e1772d5a8661ad9d52e5d 636f2917ba5c45918032d101e75e52316ab91024 7c103802f31a9498251e5b9a781b15a8369bdf6f d71ae1709e0f69f55fcfdf1185fca4a232109f7c,,Add IsBatteryLow condition node,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1973 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Gazebo TurtleBot3 simulation |    ---    ## Description of contribution in a few bullet points    * Added `IsBatteryLow` BT condition node    ## Description of documentation updates required from your changes    * Add new BT plugin to [navigation.ros.org](https://navigation.ros.org/)
ros-planning/navigation2,1745,2020-05-17T00:08:16Z,2020-05-20T00:12:01Z,False,none,ffff3fe39a7070988fe7d5155da26811d5e2fb0c,1,2,945dc467027fc1d1e68b2951b0df4c1e8e6885ca cb3a24ed5dac6598bd16a40912c2897384bb9a0a,,Add timeout to BT action node,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #985 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Gazebo simulation of TurtleBot3 |    ---    ## Description of contribution in a few bullet points    * Added ```timeout``` parameter to BT Action Node to timeout when action takes too much time    ## Description of documentation updates required from your changes    * Added new parameter  so need to add that to default configs and documentation page
ros-planning/navigation2,1982,2020-09-10T19:02:14Z,2020-09-11T01:58:09Z,True,2020-09-11T01:58:09Z,d2c53de8b1f4aa223d25568f5c25b993ed620faf,1,3,f49a6ae329dafc98af658e1e4786d686ff42ace6 d8292b96c196b3034d3b0f66af66fcd6b45c5366 b04af1c1988e4a0b1f2423f8703475bccaeff43d,,Add footprint tests,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (#1810 ) |  | Primary OS tested on | (Ubuntu 20.04) |  | Robotic platform tested on | (n.a.) |    ---    ## Description of contribution in a few bullet points    Added some basic tests to increase test coverage.
ros-planning/navigation2,1960,2020-08-19T14:52:47Z,2020-09-13T21:01:13Z,False,none,a78e8f6d851287b7d758c95947ead6d18ea1530b,0,2,683f8d95ff2316e18c5f0d65a54e066ed0de903e d5276acc4a19780eb6ca54e9f6e542e52c65ce3d,, WIP Fix collision checker test bug,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1) |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1985,2020-09-13T21:27:06Z,2020-09-14T02:11:33Z,True,2020-09-14T02:11:33Z,79963a4267060e7b5b4730f3d96b757fe1aa4646,1,1,e542570c34752d1a5e8ff569c814d89d91856856,,Fixed typo in Dockerfile Ture True,Just a typo fix: Ture -> True
ros-planning/navigation2,1980,2020-09-04T18:24:27Z,2020-09-14T19:29:24Z,False,none,1902f899b4f0db98586e09c5af7c8b58af69e3b3,31,1,82cbd0a1efb416682382f059b7027f88cadf68ec,, foxy Enable System Tests on Windows,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | N/A |  | Primary OS tested on | Windows |  | Robotic platform tested on | Gazebo simulation |    ---    ## Description of contribution in a few bullet points    * Enable System Tests to be able to build and run on Windows.  * Most of the changes are related:    1. Normalize the test file path to use forward slash `/` since many of the Nav2 components are expecting this convention.    2. Add `python.exe` in front of any Python script execution. On Windows  the script is not an executable and one needs to prepend `python.exe` to run. Hope the convention is portable and won't disrupt the tests on Linux.    3. Use more portable `M_PI` macros.    4. Adding the missing dependency (angles) to  nav2_costmap_2d.    ## Description of documentation updates required from your changes    N/A    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1988,2020-09-15T16:19:06Z,2020-09-15T17:20:39Z,True,2020-09-15T17:20:38Z,b8e9fba422d6e024767d1a5b668703625454fdcb,2,3,4e185b948f48b6727285cef0cc34d0931486a43a 4264c2f827ece6f20c1c16d66cc6cba247515ed7 baf47a5dc8814827658ff7010c6e30efd134bf31,merge,Initialize inflate_cone_ variable ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1987  |  | Primary OS tested on | Ubuntu 20.04 in VirtualBox on Windows 10 |  | Robotic platform tested on | n.a. |    ---    ## Description of contribution in a few bullet points  Valgrind reported uninitialized variables in range_test. After this initialization valgrind does not report errors anymore.    ## Description of documentation updates required from your changes  No documentation changes required.    ---    ## Future work that may be required in bullet points  The unit and integration tests are unstable. We still have to find what the problem is.
ros-planning/navigation2,1984,2020-09-13T21:00:44Z,2020-09-23T17:12:15Z,True,2020-09-23T17:12:15Z,b181a398e185d3047b1d78abaea7cf537bba8e0d,1,1,f88be0085fcafc6231c0467c6a4a7f8c75da153f,, WIP Collision Checker test bug,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1954|  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    * Increase the sleep time to 1 second from 50 milliseconds    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1996,2020-09-24T03:17:52Z,2020-09-24T03:26:25Z,False,none,c4cd2ff8a25fb2b8aaf1461ed4646157e301386a,4,1,6ca9299e088f8e842a4c4408aa790d59e7cf463d,,nav2_waypoint_follower Add an optional param to specify a sleep time ,Signed-off-by: jediofgever <fetulahatas1@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (https://github.com/ros-planning/navigation2/issues/1992) |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (Gazebo simulation of Turtlebot3) |    ---    ## Description of contribution in a few bullet points       * Added an additional/(optional) int parameter to `nav2_waypoint_follower`  in order to control behavior of robot in between waypoints. This int parameter species an amount of time in seconds to wait/sleep after reaching each waypoint. The parameter could be set to zero if a continuous execution(or as in original implementation) of waypoints is desired.         ## Description of documentation updates required from your changes       * Added new parameter  so need to add that to default configs and documentation page on doc         ---    ## Future work that may be required in bullet points     * A more advanced concept for controlling robot's behavior on arrival of waypoints  could be based on service/action as mentioned by @SteveMacenski in https://github.com/ros-planning/navigation2/issues/1992#issuecomment-696955758   However I might open another ticker for that later on. 
ros-planning/navigation2,1995,2020-09-23T22:46:02Z,2020-09-23T23:57:09Z,True,2020-09-23T23:57:09Z,182d3b3ea433cbed68b4e19ac91acc33d4e331c6,8,11,7f17abeda95453d27ffd02d9052cd3bfa4742a6c 29020b8f03300b5e72fced57b4644a07d809736f e3730106930d64cf6a7b9d98cef7913af47f19ad 536813d88dde230950c5a965717b1dbaa8dfd6fa 7f733be9b2b3f47e2691ee0f2b40ee62cd573678 de77b11411298f41aeb89c85a9620340ff1b564e 0910c66621e9c5cccc6e4cd13db2689ffdcf20cc e70850ec7be49ecda2ddee3736003fb58955a767 69aed4a43a57c150a1d9a2c2b92791e86a076b18 502c23525974e11afc518bb636db9a6b3891c304 46aa4d879720eb58f5b784ea4976c2b037f3d7e1,,Update Dockerfiles,- Fixes typos  - Simplifies Dockerhub config  - Optimizes source build with more multi staging    - folding between install and build stages    - parallel testing of workspaces    This doesn't affect much of the current build time  given how front loaded the build dependencies are with most of ROS2  but will help with consecutive rebuilds/tests  or if our underlay dependencies grow.    * Source build before    * 39m54.422s w/ `--no-cache`  * Source build after    * 37m6.997s w/ `--no-cache`    ### TODO:  - [x]  Update Dockerfile path in automated build config on Dockerhub after merging.
ros-planning/navigation2,1916,2020-08-06T00:08:36Z,2020-08-06T01:13:44Z,True,2020-08-06T01:13:43Z,2496218836301f53616af06c9a79c34d8dc7dace,8,3,33ac9c8197ae298306857de2e52db552ef6e05c0 fb68998d0b149ec41514621c5f7e4cbb11b85d78 f80e24c271e1d481bf272bf3efb692659574755d,,adding waypoint follower failure test voxel layer integration tests etc,#1810 
ros-planning/navigation2,2000,2020-09-28T07:35:31Z,2020-09-28T16:47:56Z,True,2020-09-28T16:47:56Z,369e62df464f6863f213180877c8e808257d0677,2,2,9ba38c2ea35f950ae22562f8944e562ed1120edb 635144bddf9695e88ecff47dd8daa42962cf5591,,Fix nav2_waypoint_follower bugs due to upstream ROS2 changes,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1997 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TurtleBot3 Gazebo Simulation |    ---
ros-planning/navigation2,1962,2020-08-20T15:52:08Z,2020-09-28T21:32:55Z,False,none,849e2e9e1767a3dbb58d3ce5687c162af910ae05,5,6,13cf4437749d4e0c842214a5f6e105b650f30b76 44a35221cad835a26b981eaef97700cd07512eca 8bfbdf3e6f2fe9c6b0e3ad13bf0a2cc4656b9083 76b86b9722ee420bb934f382bc7aa9b625888e41 2bc255e2d3927b9ba43553fb0ea461845412ff52 8d6e67001b3d1ab8642f339069bb208219a9606e,,Update Parameters and Value type consistency between packages inside Navigation 2,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (#1945 on Foxy Devel) |  | Primary OS tested on | (Ubuntu 20.04) |  | Robotic platform tested on | (Others) |    ---    ## Description of contribution in a few bullet points    *Update parameters name in amcl to match other packages in navigation. As well as  how you can initialize its value in config files.  *Now you can use both "quote" and unquote values for frames in config file like other packages.    ## Description of documentation updates required from your changes    * This is ABI braking because of the parameters name changes.   * Update to navigation.ros.org is needed.   ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1882,2020-07-20T10:43:42Z,2020-09-29T15:43:31Z,True,2020-09-29T15:43:31Z,4c8334f93bdebab775cf56c0d7df8eb71bc1b91e,39,32,5e02773ced8fcce3c1d21cc9dde4d7c344851d47 fcde94fa70b3c138458ea0658dd1ebcc800c2b9d fc2ed2674c972bcc0407e4d7b62d4a1e8c10b348 685115803a4e50ab3ce32c6593e1816237ecf768 e184945fda32b5a3a4bc40170f73b98fda535c80 c68136405bfcceba656a1d8927ec8113d3114ec2 9c234761468b6d0df8b077622fc19770cca77b4e b355574b455dabdf5ac97041cd8f797b6cee709d 9328b59f626fcd1c36c25a8424f45c95ebd502fa 938a93e1f2306679268d0b72d9e2b5f3265b475d fb5fe13c36b55902ec067ab14f5c29e19ece029c c711166a3fd0b9819051d7889a6dd61d33aca06c 879e7147db0ecb01b5c5df18e79e56f50014b930 6cc1130da58d0c905602ed1d58b41a1bfe54f121 4668c98f09f09c1ef942ef71f71eda1b464faed4 7bf7645623fcd2b691c8036e73d75b37c979edcc eee3635ee0934798b5d3a97c0bfe066829658aa1 7e1ecf1e45e38c55d120a9dcaca0bf7a1f5dd330 12ed8fc834794ece189357ffaf8a1b0040660f84 04169b3497f6252c039c248a175820b678a5cb30 610e11827aed126769f453486e0e0f44713afb1b 690b50b1fd44151c27fa4db0a7b5af7fe23efbba 1dd6face331efda27655b219c740263f93828e8a 1a317ff15dc3a87b912383a35c3f144c040b4847 af5214d74295b261b8a8fa490b476fa874d3b28c a55ce9337ba232e7881a6f8c38871773ec023359 d04e05be66d71c9115db2d71abc6517dfe6cae32 da0fcda67dc24a87a4311f9d93c28ff4fafccc53 49d9292f01eefe4bd0afe493d480ea1a1e367676 87fa61b52af12d6bb606f671951e6dd3b130e1fd 1e3ed29aeefecbb8756afcb092218bab741c14c6 19b3e114db484fad38a5e6e839a4c1f9bdbee303,,Costmap Filters,Codemap Filters feature PR for keep-out zones  speed-limit areas and preferred lanes use-cases.    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1263  #1522 |  | Primary OS tested on | Ubuntu 20.04 with ROS2 Foxy onboard |  | Robotic platform tested on | TB3 Gazebo simulation |
ros-planning/navigation2,2001,2020-09-29T14:55:36Z,2020-09-29T15:41:55Z,True,2020-09-29T15:41:55Z,970f5b529d43d9940f75599f5f3c4fd90f7751de,6,1,a7e71fb26190d642ceec31b55c5283fce4ec99aa,,Fix flaky nav2_behavior_tree tests,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    Noticed some flaky tests in `nav2_behavior_tree` which failed sometimes especially during the nightly builds ([example](https://app.circleci.com/pipelines/github/ros-planning/navigation2/3834/workflows/50051751-1124-4fac-810d-f875d3c0e96e/jobs/14847)). This PR should fix all the issues.
ros-planning/navigation2,1998,2020-09-25T23:51:03Z,2020-09-29T16:12:07Z,True,2020-09-29T16:12:07Z,506384f2bcf32978428278f65567bfaf429d6d63,6,2,7f46342fb3dde6ca74fb0ce63796b45e40cd1821 ffb621f2ee2d3b8fa2d7baa27f3e3ab607538b1c,,Add timeouts to all spin_until_future_complete calls,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #985 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TurtleBot3 Gazebo Simulation |    ---  
ros-planning/navigation2,2008,2020-10-01T20:43:32Z,2020-10-01T20:46:01Z,False,none,none,374,56,bc474f7d786029d5dc06cf5451518906213dfbd8 3b67aebbbbef2b0c4216a821cab5fc78437a1e4d 8072627d16135c37414fc99c07dd379410910681 1c91af64c4d41dde78f82a1b094bdb29c3fde856 a21bbc52db93fd8e44909b7aec520ff4d525800c 962e2e9b2d810e07f301fd70673a5dd2e650d2a3 d2e2afbaef01c1649e10dc18d2363d3af35d3410 8468db7abf32ff2685f110a807dc8299f49332c4 c6cd44d78162b6ff5587c09350d9517a8ef18f66 b0830c312adb276f5f654638b6c7d9d3b882bf4a aa322579400e87b27e1ff7ca05a4e71c4d97c211 1cc420bc4e14cd385a5d30da6ce400c07f349aa8 16cfc8f4d8870232dbe114be94f20e33bc15efc2 56ee4b37d8e65f4d6203ce132dd6963ce23e9d62 12833435586c572b6b2241a4dee02e8f08d2c8c9 85bf58165c38b91f802cdb421dadfe3146460df6 a99619720a566dbb79ab520ff525dc8a7bf2ee4b d4e36c17210ede22c6cdfb45b12752787a341871 a75ffede04aed3dd4ec6dfd3c2de98517b26ad33 d4672b1e79861daf47e1371109a0fff958b6d5ba c8a1989455dd0bea69089209dbc06f6959482841 c1046bf95b8fe8bad6e264056eb30500d11185b5 4dc2ef5fd540686d6e4ba156c4f8177a1baa0439 3fd6418615fde23b897d2a681e0351d5587d4c13 f7da3b57127420761c1cf2f9de687bb6c6fce663 e6ac436916ef05c8a98e63b7d10b50d11d24c0b4 a441be28ed02a581700777bc81bd0c1bc7686890 6ee82e95c85ba764d71e8f14e025b7506c191edf c47450c5bfcf38bb4a66e46c62794e430ce1ed75 979d7c1b51012f175d33f25822c1d0db6ea0c514 76c566e12375d74a16b03ae63e7ffcf06995893b 5955fc39fdc7e9e84d4f93400692f670f06d354a c01118298d1ce56ac501f232e1de10558e72d12d fd6570caf5afbe808d18014fd81bda125a836804 c2cc4d94b4f2741307d587b7c1ad01e4214d94a0 40045de647bd9341cd332ab6575bc6f60be984df 0cdaf0ef686b98e2a86d8ee837d6556bac9b401f 47f710d4a97768b4588781900a425c11e9058866 6339ac43e2017076263186a05d61d14cdf1fec62 6141b2d6f5745d52d4894eff693473bf3a2f414d 4e60a9577be5ed91de9f26b6b88cdf9afdc8b32b a18d68a23ce9ab9564b06a002d0b13ca5514b008 a0cdcc026613ececc2a0fce0609814e79d2390d4 1480ea920c2f6df27decffb53e1d1d944ffb0268 7804d37f60b49f6a39a196d20a5484bc041e4be4 7cee84b7c5e59aa05d3919c3c23d48971b94c7da de0d4b7d0d0cdfc7d040f7b8e61d8582715fdcf0 dd2495513b04a1ea24dba2188c5e1b15264ea1fb d417a94e3425f9599d98cdae92e7754da9f9fe0a adbee3559b8fe30561df38302228bbda00974c55 27487c21746a18095c8d795a4b7988edbc572d0e e807455712dd5d672c7f41e900ab43a8488dca76 f3695fead57a47b67fe7fcd634aa43d36f23f75d 4c2107b96da10863f6eb062fbaba74f1e43cafbb 40011d2d95fa49a7e37933c9ad05072a05513a9b c2a9b1e4d6154391d68b18feb03909f7ab6069e4,, WIP Nav2 smac planner,Adding Hybrid-A*  2D A*  and templated search libraries / plugins.     To merge:  - [ ] https://github.com/SteveMacenski/navigation2/pull/43 this in branch  - [ ] Documentation in readme  parameter guides  descriptions of algorithms and implementations  etc  - [ ] Doxgyen cleanup  linting  etc  - [ ] Complete upsampler / smoothers and tune defaults  - [ ] Provide smoothing server  - [ ] metrics / video
ros-planning/navigation2,2007,2020-10-01T20:06:45Z,2020-10-02T03:45:32Z,True,2020-10-02T03:45:32Z,64871a7283a08eb08d7365c6279d0b330155f7f6,3,4,d6d51ca7aea17c078fa021f7fd1bf2593a2af074 ac78b84f231f7dbcac718f8dd4ed1a45bc543f09 294bb193b76cb89923b9460d68b83552e321f341 55781ef431ccd7c411885021f1b0a799b00b5a90,,Fix finding Codecov config for CI,The codecove orb was running from the wrong working directory to find the `codecov.yml` config file  i.e. the root of the overlay workspace instead of the root of the navigation2 git repo. This just swaps out the orb with the command it generates and adds the needed `-R` root dir argument to specify the path to the navigation2 git repo. It also cleans up the root of the project dir by moving the config file into the CI dot folder  given the codecov bash script can find it there anyhow:    https://github.com/codecov/codecov-bash/blob/9d9a1b61c04e8aea9ebb8c200d1fbc399eb6cc99/codecov#L963-L968    Fixs: https://github.com/ros-planning/navigation2/issues/2006  
ros-planning/navigation2,2005,2020-09-30T22:28:48Z,2020-10-01T01:22:11Z,True,2020-10-01T01:22:11Z,a30816f2939e441f2054df0f40775adb76b57997,1,1,39de3410c719c9a776e0c32ab42470ae20b95d1f,,Fix trajectory publisher not publishing unless subscribed to evaluation,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | - |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | simulation |    ---    ## Description of contribution in a few bullet points    dwb_controller has a parameter `publish_trajectories` to publish the scored trajectories on the `marker` topic. This publisher is enabled by default  but does not actually publish anything unless something also subscribes to another topic called `evaluation`. This is due to the `publishTrajectories` method being called from the `publishEvaluation` method  while `publishEvaluation` returns early when there are no subscribers.    ## Description of documentation updates required from your changes    As far as I could find  there's no documentation referring to the trajectory topic. IMO the topic name could also be improved from `marker` to something like `trajectories`  but that could be a different PR.    ## Future work that may be required in bullet points    * For clarity and consistency  the other publish methods in the same class could be changed in the same way.  * I think the publish methods could be refactored to use STL algorithms instead of for loops  possibly opening opportunities to optimizations.  
ros-planning/navigation2,1993,2020-09-23T05:15:14Z,2020-10-06T01:41:32Z,False,none,14989597a8ad1066d5265ca3680b3abc59cdb394,183,6,53a8a7bccfe0ae9243a5ad364199825b2344d765 1500a5dba5ab01756779199f3c007a4822ae777b b59d7afbeae9a4f204191dce2ff9a0823e019fd5 08e4eac5323b23676b73fd49a70a157b80b98840 4ad6f4dc2887dbdaf3d5aac557f351b74539af59 3369ca65db2e8190355e44b115edb20a07d9f21b,,nav2_waypoint_follower Add an optional param to specify a sleep time ,Signed-off-by: jediofgever <fetulahatas1@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (https://github.com/ros-planning/navigation2/issues/1992) |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (Gazebo simulation of Turtlebot3) |    ---    ## Description of contribution in a few bullet points       * Added an additional/(optional) int parameter to `nav2_waypoint_follower`  in order to control behavior of robot in between waypoints. This int parameter species an amount of time in seconds to wait/sleep after reaching each waypoint. The parameter could be set to zero if a continuous execution(or as in original implementation) of waypoints is desired.         ## Description of documentation updates required from your changes       * Added new parameter  so need to add that to default configs and documentation page on doc         ---    ## Future work that may be required in bullet points     * A more advanced concept for controlling robot's behavior on arrival of waypoints  could be based on service/action as mentioned by @SteveMacenski in https://github.com/ros-planning/navigation2/issues/1992#issuecomment-696955758   However I might open another ticker for that later on.    
ros-planning/navigation2,2020,2020-10-06T18:06:46Z,2020-10-06T18:45:25Z,True,2020-10-06T18:45:25Z,8f971aac77e7c0da0b7fdccc10f77ce150e02f08,6,1,04f10bf4a7bdfad2150a57a0240dac5cfe4e686c,,remove dead code from costmap_2d,
ros-planning/navigation2,2017,2020-10-06T01:42:19Z,2020-10-06T18:13:31Z,True,2020-10-06T18:13:31Z,dcc1d4dafba6f6c7588cb5f7f6ca918b2a6c48ef,1,3,535d787d7e490ef1669cb5022c4ffe3144e54316 999b2ceba311cf1d9bd080611d857cb2fc03cd16 932d278ac0d0f4dfab25745a509841f633c01003,,Fix max path cycles for case where map has larger Y dimension than X dimension,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/2016 |  | Primary OS tested on | (Raspbian Buster) |  | Robotic platform tested on | (Raspberry Pi 4 + RPLIDAR A1 + Roomba) |    ---    ## Description of contribution in a few bullet points    My test environment is much larger in length than width  I was frequently getting failed path plans when issuing commands that traversed the length of the environment.  I noticed the max cycles to run NavFn::calcPath is derived from the X dimension alone  I changed it to be depending on whether the X or Y dimension is larger.   
ros-planning/navigation2,2018,2020-10-06T16:35:49Z,2020-10-06T16:46:23Z,True,2020-10-06T16:46:23Z,c4d4e28a3f22019257dd6ac785ba9e31fee39349,2,1,8a70b3be4ea2a44c7c92d073240de04549397607,,Updating instructions to build from source ros2 Eloquent,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2013 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->   - Updating instructions to build from source under ROS2 - eloquent  - Addition of a "quick test" after building from source  ---
ros-planning/navigation2,2024,2020-10-06T23:23:51Z,2020-10-06T23:40:16Z,True,2020-10-06T23:40:16Z,3fb8b292097b8c464e6e4f112b8d7d7348979773,1,3,8a70b3be4ea2a44c7c92d073240de04549397607 fc5b5ca68268746087ce838d1234a02727beefba 16e23a9328d339d2c9def4b040c395fb0151093a,,Eloquent devel,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2013  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation |    ---    ## Description of contribution in a few bullet points   - Just fixing the format of .md from the previous PR #2018 
ros-planning/navigation2,2023,2020-10-06T20:10:50Z,2020-10-07T19:59:19Z,True,2020-10-07T19:59:18Z,fd117e821b5bef012d0610bbafc9e7f8a6ba7043,1,3,7b3d95b28fcf6575eef7a7882cb09ca9389d15a0 32a92456d85e6b78b47d7210486dc315e68d13c9 8c4ff921e712a85f4922bf97034dccaf4cab2a20,,Patch codecov,Looks like the `-R` root flag is implicitly the root of the repo  and the rest of the codecov pipeline has other assumptions that the script is executed within that same directory.     Fixes: https://github.com/ros-planning/navigation2/issues/2019
ros-planning/navigation2,2022,2020-10-06T20:10:23Z,2020-10-08T00:25:49Z,True,2020-10-08T00:25:49Z,0c848d78d6f7a74a33e5fbca63d4aff5dc6353fa,5,8,d37cd8b06cd36d790e6ddfa9cd51380d809b1bbd 82eda4def241cdba0011c57e2a91475001fd54bc 4f5ca6a91de9b704e186a7df9ebfb83fcb26659b a091352cfff992bbd1e946db1eba5eb025715c07 be2f37749869b33d9e89803f1866cd3857527af0 f0f88f34d7828ccdaa5f33fb79eef90b5b4f93c3 683268c92dfd072de98cd1630b271ebd579f81f9 956c3567e462724d4e7241610ad06d5674488591,merge,Add dwb tests,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Primary OS tested on | (Ubuntu in VM) |    ---    ## Description of contribution in a few bullet points    * Added tests for nav_2d_utils in dwb_controller.    ## Future work that may be required in bullet points  The test `AdjustResolutionSimple` in `path_ops_test.cpp` should be completed. What is the expected behavior of `adjustPlanResolution`? I expected that the gaps between points would not be bigger than the resolution.
ros-planning/navigation2,2015,2020-10-06T01:36:40Z,2020-10-08T00:26:15Z,True,2020-10-08T00:26:15Z,eff208ef5aa1b26356bda8f5fa8f304c7884327c,11,6,737646139bc69007d34124322554d8477c55578f 1ba2ffa3f3e158b36094cc448e7b1592898c994e 7b2204fbf834881842bc452ef518cba7eb51281f ab104f5923d0e80d39899d4b16e2d23afc3ca47a 2367eb4a6ddc0ff898e7c879c9d559eb02104121 a4768cdc0d453c2ba94d3e6a9a2845c08032cc93,merge,Successor PR for 1993 Introduces A plugin interface to define behaviours at waypoint arrivals when using nav2_waypoint_follower,Signed-off-by: jediofgever <fetulahatas1@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->  Successor PR for https://github.com/ros-planning/navigation2/pull/1993    https://github.com/ros-planning/navigation2/pull/1993 was mistakenly targeted to distro(`foxy-devel`) branch and it became difficult to track the changes and merge the new code into `main`  This PR includes reviewed and modified changes through discussions in https://github.com/ros-planning/navigation2/pull/1993    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (https://github.com/ros-planning/navigation2/issues/1992) |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (Gazebo simulation of Turtlebot3) |    ---    ## Description of contribution in a few bullet points       * Added a plugin interface to `nav2_waypoint_follower`  with aim of executing a task on arrival of waypoints.   * Added a plugin that was inherited from introduced interface  the plugin simply lets robot to wait for a specified amount of time after arriving at waypoint.   * Users will be able to inherit from the base plugin interface and define their own specific tasks to be executed on arrival of waypoints.        ## Description of documentation updates required from your changes       * Added new plugin so updated `docs` and `nav2_params.yaml`   * Opened a new PR at [navigation.ros.org](https://github.com/ros-planning/navigation.ros.org)  in order to update website to include documentation and onformation related to the introduced plugin       ---    ## Future work that may be required in bullet points     * A  future work could be writing a tutorial on how to add a plugin inherited from the plugin interface that has been introduced by this PR   
ros-planning/navigation2,2012,2020-10-05T10:03:27Z,2020-10-05T21:09:33Z,True,2020-10-05T21:09:33Z,63aa0addb4ab0fd875b79b2bb6d05cf32a09355d,4,2,b322d441736b459ea2800e2f74c3e4c5d5f7719a e7594a2eeebcbdf7ceccd65e5af99b3860aa2571,merge,Controllers should not be influenced by time jumps or slew,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | - |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | simulation |    ---    ## Description of contribution in a few bullet points    - `rclcpp::Rate` is used for controlling the frequency in a few parts of the code.  - `rclcpp::Rate` uses [`std::chrono::system_clock`](https://en.cppreference.com/w/cpp/chrono/system_clock) which is meant to represent wall time. Due to unevitable clock drift on the local system in combination with time synchronisation mechnism's like NTP this clock can tick at a slower or faster rate to stay synchronized with the actual wall time or even jump both forwards and backwards in time in case of bigger offsets.  - `rclcpp::Rate` does not have a mechanism to deal with time jumps  so for example if the time jumps backwards 10 seconds  it will wait for 10 seconds plus the configured interval of the `Rate`.    This contribution changes the use of `rclcpp::Rate` to `rclcpp::GenericRate<std::chrono::steady_clock>` to use the monotonic [`steady_clock`](https://en.cppreference.com/w/cpp/chrono/steady_clock) instead. This clock never jumps and is better suited for measuring intervals.    A possible point of discussion would be why I did not use `rclcpp::WallRate`  which is an alias for `rclcpp::GenericRate<std::chrono::steady_clock>`. The reason is that I find the name `WallRate` very misleading  since `steady_clock` specifically does not follow wall time. In my opinion it should be renamed to `SteadyRate` or something like that  but that's a different discussion.    ## Description of documentation updates required from your changes    N/A. (?)
ros-planning/navigation2,2021,2020-10-06T19:17:47Z,2020-10-09T23:32:46Z,True,2020-10-09T23:32:46Z,d3fc28af28df764a153c85434f8b30270e963622,54,24,d9a96ab63f5cd51b486ca83ebc24117000e5a784 7e700b463855e65666e750eedb2acddfba621136 75cfbcbe0815dfdb1983f43c9daf9136dd8cdf8e 894945210976926c0973d0467ea98b36b4fca23e 0796d15d5ae4a593c1989195bdf1c3067f881920 bce9ef18ffe5b557364d25c78c2bccb0cb35cd2d e59c016eeffb00e5f31732ba8694ce1f242e899f a1f2cde0b219cf4221fb0390c8362a3df8ca0f4d 1f6ab64fde2cfa4085978822c9cf14e1813cec1d f7197a88d5395237f63d0c28823ac43550aca8a5 a04546fe06f77783591206c12d6bc48689eeef9b 9c8e88cfe83d252c54067c792616d4731b1d7dd1 b66914eeb1543950c5e3bf32e5181b4107c041ea c71e3db31fd8f6f2d53be698611f8ccd04ada1a2 867503c78836f72b3721bb0b1dc2d18aa7e30359 5810e863675c53d6003e3f6ff426f2b5204440fe d2379635c2cdbe918f664516329da52857f57cc2 bd82d922cd3b2bb9db0156047fd5e7bb7c90350c cf9c3b33c0efb4f5df588e086a552ac6cde6d690 cce3e9c1a2596625d047fa8ddf14b33d6c0aa8aa bc47d1f432dcd077862e8dd27c1db18148adcbbe 385df8d1ad18acde67990905a923c5b0ab7abde0 c648191a5face5578e051b3338ac2d34caefa9b0 47730af749a95f0d9868b91d7df6f28e3c1bb019,,Smac Hybrid A planner,WIP  the original branch is so old that there's literally 300+ merge conflicts so moving over files to a new branch to avoid that since I don't think there were many changes to non-SMAC items.     https://github.com/ros-planning/navigation.ros.org/pull/92    TODO  - [x] cherry pick analytic expansions merge commit https://github.com/SteveMacenski/navigation2/pull/43#pullrequestreview-503487411  - [x] Test non-floored motion increments https://github.com/SteveMacenski/navigation2/issues/56  - [x] tests passing after analytic expansions merge   - [x] add gifs / pictures to readme and configuration guide page  - [x] metrics for readme -- test on larger maps https://github.com/SteveMacenski/navigation2/issues/27    Additional performance optimizations described in https://github.com/ros-planning/navigation2/issues/2014
ros-planning/navigation2,2029,2020-10-09T23:00:37Z,2020-10-09T23:54:59Z,True,2020-10-09T23:54:59Z,f37ae148fe6731bbf0e4ba67358bfae9df12ffa4,2,2,8b3483536b88b06e5d808a3b4dc3e7aedecbd764 9f5fa312322c3db73dea277dd3e5f50f0cde8593,merge,Add test for tf_help ,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Primary OS tested on | (Ubuntu) |    ---    ## Description of contribution in a few bullet points    * I added a test for `tf_help.cpp` in the `nav_2d_utils` package.  
ros-planning/navigation2,2027,2020-10-08T14:54:05Z,2020-10-10T00:00:48Z,True,2020-10-10T00:00:48Z,e49cb5ad6bfcb60f9d1b5a2dc7594b0ce99e61ae,5,4,f705017b9bb096476962dc3a98c44456caa5c886 3dd5eec73bafd9232d066d6789b2eff2ac7c0af1 4505ccd6b6ef6b659c17021f4828bf0e32f435b4 70ee23fa8f0e175fafbe6190f7024fe4490e1999,merge,Remove code for DWA to DWB migration,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2026 |  | Primary OS tested on | Ubuntu |    ---    ## Description of contribution in a few bullet points  The file parameters.hpp contained the code to migrate from DWA to DWB. As this in not needed in ROS 2  the code can be removed. This also increases test coverage as the file was not fully covered.
ros-planning/navigation2,2028,2020-10-09T22:53:05Z,2020-10-10T00:11:32Z,True,2020-10-10T00:11:32Z,f6f9c28e8dbeeb7cd224137ef0e15d3f2b666b7f,10,2,1b82726400d4e5721afe9f12c530b930fe6bf350 5e6227beeafc13b546103c6ef00a903e75db8c51,,commenting out or removing AMCL dead code,
ros-planning/navigation2,2025,2020-10-06T23:54:05Z,2020-10-07T17:42:05Z,True,2020-10-07T17:42:04Z,13c878b912ef677d16f4e73801240f7b0c6000b5,1,1,5d3c7e33d2a739acd5eb4ac7e5e4253aa643c96c,,Include underlay source folder in rosdep path,As OMPL isn't yet registering properly with the ament index for ros2  and searching all of << parameters.underlay >>/install will stall rosdep  when searching entire $ROS_WS/install folder    Related: https://github.com/ros-planning/navigation2/pull/2021#issuecomment-704604732
ros-planning/navigation2,2034,2020-10-12T19:29:03Z,2020-10-12T20:46:36Z,True,2020-10-12T20:46:36Z,a71a5f23b881b34d6ddd8aeff04b9cbd06faa0fa,2,3,7485f2bc41437531209f1a0ebc7650d99b85e1af 80795a85d63214d91a7db7f03b7f604de14ebc99 7f56797057a68fc22dda6f39cf47fc20b74be36c,, WIP fixing CI changing gazebo base to my fork for testing,This temporarily resolves issues while gazebo ros plugins are being fixed.    Also fixes issues introduced by https://github.com/ros2/geometry2/pull/325
ros-planning/navigation2,2036,2020-10-12T20:47:08Z,2020-10-12T21:57:50Z,True,2020-10-12T21:57:50Z,3ec1454aed227ca82f22eb90fa1e44187787e975,8,4,b2b76234280f0b5b535f0d5f0b4df22246572a5d 1747846dfb3e68acf32cc28e3ec02bfb20850988 a2c9bdba6721681ae85e004fa84890601c37f38c ed65b45e6b242f0e1caf9bca98da376a92672b00,,Adding additional SmacPlanner tests,
ros-planning/navigation2,2038,2020-10-13T02:31:03Z,2020-10-13T04:16:51Z,True,2020-10-13T04:16:51Z,a13623922bc93ec8f12cdd40d2a817ea54998aaf,4,1,3c346a77d36877d5fe839d29b384753a35ec4c3d,,adding additional constants and smoothers tests to smac_planner,
ros-planning/navigation2,2031,2020-10-11T15:26:21Z,2020-10-12T18:58:45Z,True,2020-10-12T18:58:45Z,be38a7a91811e27742ca4be01dbef16436a461fe,2,2,666cfd8a3fffbcf2505795823c639a40fa82cc09 a660cb7249583d0ce1683b13797ce9b426245e5f,merge,Add kinematic parameters test,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Primary OS tested on | Ubuntu |    ---    ## Description of contribution in a few bullet points    * I added a test for settting the kinematic parameters in nav2_dwb_controller / dwb_plugins.
ros-planning/navigation2,2032,2020-10-11T16:18:03Z,2020-10-13T15:28:53Z,True,2020-10-13T15:28:53Z,7bed20d065c8917080bcfecbb8f695ed6771381c,15,10,aae2d2281f927bfe17e818e087fb25cee64aa385 be38a7a91811e27742ca4be01dbef16436a461fe a71a5f23b881b34d6ddd8aeff04b9cbd06faa0fa 3ec1454aed227ca82f22eb90fa1e44187787e975 a13623922bc93ec8f12cdd40d2a817ea54998aaf 53d8fd43adc10e4046deb1fffeb18e43af4aff2a 9262f7cd6645bbbfb41a9c0f3ac8a17d5f1b413d 3fe8babce41bcb7b3a0532c29ebe71af15cb53b5 f56662c26eb91d74c04c610f277218a08b7b0b64 adcd0456add38ce5ed1f0367e886e7403484d79e,,Added test for nav2_dwb_controller dwb_plugins LimitedAccelGenerator,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Primary OS tested on | Ubuntu |    ---    ## Description of contribution in a few bullet points  * I added a test with an (invalid) value of the controller_frequency parameter of 0.0    The expected behavior is that the LimitedAccelGenerator prints an error message and the frequency should be set to the default frequency of 20Hz. This should set the test coverage to 100% for the limited_accel_generator.cpp file.
ros-planning/navigation2,2033,2020-10-12T12:23:18Z,2020-10-13T16:50:18Z,False,none,52391cd88198e9e3fcb901bf455c26576550c8fa,1,1,9bf832f9cd6866cce7c7c669a7f266364ab6517c,,Awaited action server result,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | - |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | simulation |    ---    ## Description of contribution in a few bullet points    When a BT_action_node is halted it does not await the result of the goal.  This leads to a crash of the action server in case a new behaviour tree is loaded immediately after halting (for example when the BT is executed in an action server itself  and different BTs can be run).  The reason for this is that the SimpleActionServer sends a goal response even after the cancel request is accepted.  When the action client is removed before it has received the response the sending action server crashes.  This MR also awaits the goal response  preventing the action server from crashing.    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,2037,2020-10-12T23:56:48Z,2020-10-13T20:28:44Z,True,2020-10-13T20:28:44Z,e5b01c53210898903ab5683ef32614e537402110,1,1,be55051150da17bda83a0e7dc3842b9da38eb90c,merge,Reverting to ros simulation from stevemacenski after patch merged,Fixes build in CI for ros-simulation again
ros-planning/navigation2,2030,2020-10-10T11:01:45Z,2020-10-14T18:54:51Z,True,2020-10-14T18:54:51Z,e1e1be4880a703c9fba44bb0ed68f4463d31eb95,14,4,f1319e35251d8f04ab2b5d356cc575105f5e80b7 907920341ab1a5d727e3ddd244caaf5b5e2d5e48 a4ded14b857a29f471bbf7bea1541dbe89f880d8 8d12009621566b955c0bd1ec0be14fe93154c3c8,,Run time system test for keepout_filter,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1263  #1882 |  | Primary OS tested on | Ubuntu 20.04 with Foxy onboard |  | Robotic platform tested on | Gazebo simulation of TB3 |    ---    ## Description of contribution in a few bullet points    * Added run-time full stack navigation2 test for verification of keepout zones filter enabled in local and global costmaps.  * The test is simply adding one keepout zone placed on the path from point A to point B  * The test is continuously checking current robot position (`/amcl_pose`) and global path plan (`/plan`) each time when they have been updated. Both of them should never intersect / fall into keepout zone.  * The test is made as a basis of `nav2_system_tests/src/system` test. All files were initially copied from this directory into `nav2_system_tests/src/costmap_filters`. Then for readability  all Keepout-related changes in the python-code were made in a separate bcc7fd6310b04edfb91e01e839c35a578cca2339 commit.  * Removed old system test as unnecessary.
ros-planning/navigation2,2055,2020-10-26T01:44:04Z,2020-10-27T12:08:11Z,False,none,cce7627693d5ade35972e3bc4c7d5ee208c69b0b,4,3,b04c94c06797f87b1781e1ac335a3e22731f6693 472bc59b737f33e250498ba3db56e025aaaa6c5f 35e20b988519ddd639c6224d730801cd53675207,, WIP 3d static layer in costmap_2d,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->  This is a costmap_2d plugin  designed for converting pc2 information into 2d costmap.  ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1787  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | None |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,2062,2020-10-28T19:18:08Z,2020-10-28T19:26:29Z,True,2020-10-28T19:26:29Z,3ac28606f0d8f9f12d46a74b616b81a382724142,1,2,f02a169e2bb9a9d79ba9fbd34336dc273c7e116a 7d0910b3879f102a26c0c5c72991962d7d69331c,,Updated incorrect BehaviorTree CPP tag to API compatible 3 5 3,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2061  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Fixed underlying BehaviorTree.CPP tag    ## Description of documentation updates required from your changes    * None  
ros-planning/navigation2,2049,2020-10-16T22:48:36Z,2020-10-28T21:33:50Z,True,2020-10-28T21:33:50Z,cd336405d572d9ff9db791f9129fb46d9cbfcf65,5,6,780331b858a04061bead02fbdd2da2280498a0b5 3889046e6626f91dc27ec85cc0ca79c149a2baeb 17ad712581d032a1d6f31b8b2ea165803e4e9105 4282b17f183efa70ce99221677e0ed0bbd06cf72 e7d8edf7e8a81f2d661bebd8067a83f17b1797eb 8275405aab5165d0d497bc59876ac9138986b9d5,,Input at waypoint task executor plugin,Adding input at waypoint task executor. This can be used when you need to wait for external stimulus to move to the next waypoint (e.x. human hit a button when they picked a package and its on the robot)    - [x] param md  param website  migration guide  add to plugins list  - [x] test working    @jediofgever please take a look
ros-planning/navigation2,2041,2020-10-14T01:31:34Z,2020-10-30T07:10:10Z,True,2020-10-30T07:10:10Z,626ce47cbdbcd705d47a7e45221a55bd00716f28,7,8,9451abe9b016c225fa1ac6e1cb986d91a2914c0c 43c0e86aa50a388f9840e2fa5af4c984870fbf99 57da3ae64b3da9add239b8539366d5b5e1609ff4 c4c92f7a0ea73beba249e3fc601903fa5ff8a335 8992cbdb9e27deba5d80e97b8ebb8e9922ba61ed db8ccd28d40e1f4f1130355ba0c2c3f3d44e930b 4cadb904629b713dc393bd8a08dfdc057aa4fac2 511e0645bb0920bd3c2fb0433688bbfdb3c56b95,,nav2_way_point_follower introduce photo at waypoint arrivals plugin,Signed-off-by: jediofgever <fetulahatas1@gmail.com>        ---    ## Basic Info    | Ticket(s) this addresses   |(https://github.com/ros-planning/navigation.ros.org/issues/89) and/or (https://github.com/ros-planning/navigation2_tutorials/issues/12) |  | Primary OS tested on | (Ubuntu 20.04) |  | Robotic platform tested on | (Custom Gazebo Simulated diff-drive Robot) |    ---    ## Description of contribution in a few bullet points      * Addded plugin that inherits from [waypoint_task_executor](https://github.com/ros-planning/navigation2/blob/main/nav2_core/include/nav2_core/waypoint_task_executor.hpp)   which takes images at waypoint arrivals and saves the images to specified directory.   * Plugin parameters are given as ;   ```yaml      photo_at_waypoint:        plugin: "nav2_waypoint_follower::PhotoAtWaypoint"        enabled: True        camera_image_topic_name: "/camera/color/image_raw"        save_images_dir: "/home/username/"        image_format: "png"  ```  `camera_image_topic_name` should be a valid topic published by your camera  `save_images_dir` should be your local path where you would like to store the images that the plugin will take for you at waypoint arrivals.      ## Description of documentation updates required from your changes    * Added relevant parameters to [param_list.md](https://github.com/ros-planning/navigation2/blob/main/doc/parameters/param_list.md) and [nav2_params.yaml](https://github.com/ros-planning/navigation2/blob/main/nav2_bringup/bringup/params/nav2_params.yaml)    ---    ## Future work that may be required in bullet points    * write a post to https://github.com/ros-planning/navigation.ros.org/tree/master/plugin_tutorials that explains code and structure of the plugin briefly.  * https://github.com/ros-planning/navigation2/pull/2041#discussion_r504934115  
ros-planning/navigation2,2066,2020-10-30T08:01:27Z,2020-11-02T18:39:07Z,False,none,513b3456a395f5754d592efcbf237589b27a4c2d,2,10,9451abe9b016c225fa1ac6e1cb986d91a2914c0c 43c0e86aa50a388f9840e2fa5af4c984870fbf99 57da3ae64b3da9add239b8539366d5b5e1609ff4 c4c92f7a0ea73beba249e3fc601903fa5ff8a335 8992cbdb9e27deba5d80e97b8ebb8e9922ba61ed db8ccd28d40e1f4f1130355ba0c2c3f3d44e930b 4cadb904629b713dc393bd8a08dfdc057aa4fac2 511e0645bb0920bd3c2fb0433688bbfdb3c56b95 fd24f28728e75a95a0a2807ff7aca39f6f02ac6f 80b444d22f9814caafe64ef651d96b4acb7ae411,,Patch for PhotoAtWaypoint plugin ,    https://github.com/ros-planning/navigation2/pull/2041 Introduced PhotoAtWaypoint plugin.     A directory path should be given to plugin for saving the photos. If the given directory does not exist we create one with `std::experimental::filesystem ` but this may throw exceptions if the given path is an invalid one. So a try catch block should surround that part of the code where we try to create directory.   This PR has that. 
ros-planning/navigation2,2070,2020-11-04T18:45:02Z,2020-11-04T20:00:44Z,False,none,0befb8acc62446de802c405d9c275bd330352aae,0,0,,,Foxy sync smac planner,Merging smac_planner into foxy-devel.    Cherry picking:  * [`d3fc28af`](https://github.com/ros-planning/navigation2/commit/d3fc28af28df764a153c85434f8b30270e963622) Smac/Hybrid-A* planner  * [`3ec1454a`](https://github.com/ros-planning/navigation2/commit/3ec1454aed227ca82f22eb90fa1e44187787e975) Adding additional SmacPlanner tests  * [`a1362392`](https://github.com/ros-planning/navigation2/commit/a13623922bc93ec8f12cdd40d2a817ea54998aaf) adding additional constants and smoothers tests    
ros-planning/navigation2,2071,2020-11-04T20:12:24Z,2020-11-04T23:25:24Z,True,2020-11-04T23:25:24Z,603150bcf52a48847772558f30601c5b30cf0797,54,6,681ccfa73a1c33c3ec387cbd46290ed90bc2cd87 97cabfe3462221611d66c0dc288bc544541529a8 b757430004c37bc2305fb99a0c1b68aed2cd0814 3118850bffe8b275b8d7db5fbf68865cc184b01d fba668319688e169642986366ec4dbb18079e210 34c8c17fc0175c715e05444c8e8237309ad71d86,,Foxy sync smac planner,Merging smac_planner into foxy-devel.    Cherry picking:  * [`f237751`](https://github.com/ros-planning/navigation2/commit/f237751f557b2e921e08f96d4749bfe3f2b2b091) Fix memory leak  * [`d3fc28af`](https://github.com/ros-planning/navigation2/commit/d3fc28af28df764a153c85434f8b30270e963622) Smac/Hybrid-A* planner  * [`3ec1454a`](https://github.com/ros-planning/navigation2/commit/3ec1454aed227ca82f22eb90fa1e44187787e975) Adding additional SmacPlanner tests  * [`a1362392`](https://github.com/ros-planning/navigation2/commit/a13623922bc93ec8f12cdd40d2a817ea54998aaf) adding additional constants and smoothers tests  
ros-planning/navigation2,2072,2020-11-04T23:36:21Z,2020-11-04T23:54:16Z,True,2020-11-04T23:54:16Z,96b47139d3c10f3847c66fe6bf130152dfd1a038,51,9,f8ee0656c0b86f19f7950612e8bb77bc3410e7d3 bece2fab275aeaab47611ed318e839633968fe68 1ce77b807ac6ad48fda7c8d54307fb2067886fe3 e51b5b5b3423f7840a3fa4872ebc6d088028d921 db5255b31d0065a296690ea1f2f2350c23aa54dc 6f204ad0d2254b721c37b3923ded9f1b74a63a7a e3600bae2cfeb7cb988dfb00a4ad9df8d3ff6e65 6423cc12fe71c3f4e61589ebef01d7992d915e00 a0ff03c3ba337c3058022a36ca36f42befc4b2d4,,Foxy sync 4 SMAC planner amongst others,Foxy Sync 4  - Adding SMAC planner  - https://github.com/ros-planning/navigation2/pull/2012  - https://github.com/ros-planning/navigation2/commit/dcc1d4dafba6f6c7588cb5f7f6ca918b2a6c48ef  - https://github.com/ros-planning/navigation2/pull/1988  - https://github.com/ros-planning/navigation2/commit/0a2dfbe2886d6c615512fd2ff2c81caa5391263a  - https://github.com/ros-planning/navigation2/commit/a35953222f282b413261495570c1201ec40b7358  - https://github.com/ros-planning/navigation2/pull/1974    to Foxy
ros-planning/navigation2,2075,2020-11-05T18:44:55Z,2020-11-05T18:45:20Z,True,2020-11-05T18:45:19Z,3d166b748bd704eca05ef671b0b2ca99968a8c73,1,1,04e5e1d30ee96fac0945d12b307f3f1012b485b3,,adding looping fix to foxy,Analog to https://github.com/ros-planning/navigation2/pull/2068
ros-planning/navigation2,2076,2020-11-05T18:55:04Z,2020-11-05T23:17:41Z,True,2020-11-05T23:17:41Z,053d0c8cc96553f951d21be843f86099dba627d5,16,18,96e4ef76097e61cfc4f142b993bfa69246f62511 379d466b925f33f617056368502ab8c0982f3c02 94fc19078355fa7c5d2a702c60bba897410c03a5 dbb941e4940d2c01506099159465002487871c51 ac261a8fef07246330a209e65ebff02b58b6c9d7 d4183bccfd4c8159e84757ce03ed9d6929749f15 9b4528a4540cc18cca0d95cf837f3ece5296ea0d 39f6cdc800eaf6619e69b8994b7b599d05afe002 6c445af6a0c3d0ee5724aad1880fc213445da3cc d27b365fb29f393326b522c4b8bb9e5557a86dcf 8473902daf3a64e6d2a6f825d9f5ea571cdb1082 bd5c42e39bdb723247d11c8938cdf1e27e419d3d 9630a3d9ec67e81b31366dad051fb5cb0270a4b5 3bf7f16bf219e4acdacd32ee286ee04b7123459f 4cea8fc5a40aa2037e0af15c3b838a5f585d0256 f6436985de4e451fdb3c0a1767f9b8eee3282bf8 cb38ef5221f411ef08c13b265a82d2c572f39f06 12b34bed469d32217401270eecb9ceba007079ae,, WIP Fix CI build issues,Fixing deprecation warning on bondcore / gazebo ros pkgs
ros-planning/navigation2,2067,2020-11-02T18:39:26Z,2020-11-06T00:29:47Z,True,2020-11-06T00:29:47Z,a005947e5c8777591e95731611549f37195dd1ca,1,14,9451abe9b016c225fa1ac6e1cb986d91a2914c0c 43c0e86aa50a388f9840e2fa5af4c984870fbf99 57da3ae64b3da9add239b8539366d5b5e1609ff4 c4c92f7a0ea73beba249e3fc601903fa5ff8a335 8992cbdb9e27deba5d80e97b8ebb8e9922ba61ed db8ccd28d40e1f4f1130355ba0c2c3f3d44e930b 4cadb904629b713dc393bd8a08dfdc057aa4fac2 511e0645bb0920bd3c2fb0433688bbfdb3c56b95 fd24f28728e75a95a0a2807ff7aca39f6f02ac6f 80b444d22f9814caafe64ef651d96b4acb7ae411 c50618f699c3bca6a6ed17cf1802666f2f51b619 5e6f2b22a4a721b7f5d3ef04a411150e5fc7f25f c13031943b6d3d235072ba9a145a0eaa379fd7a1 d0156a15521ce780201da8cbab29bee8518022b7,merge,Patch for PhotoAtWaypoint plugin,continuance of https://github.com/ros-planning/navigation2/pull/2066#pullrequestreview-521032358
ros-planning/navigation2,2078,2020-11-06T15:06:15Z,2020-11-06T16:58:45Z,True,2020-11-06T16:58:45Z,4c4d38f5209925e87e6143c690e5a021d6ca0f9b,2,1,d1c9d2cf89964e0778387e041a7d3ef8218ad600,,Fix for double free issue in map server testcases,Proposed fix for #2077
ros-planning/navigation2,2054,2020-10-23T13:55:10Z,2020-11-06T18:16:40Z,True,2020-11-06T18:16:39Z,73afaf3f36f2cbdf4a20c5e0c1e9dfbdd512b8cc,6,3,baa3c45c1321e469f991d8c3361f44bc1a7c66a2 ffedbfd13685afb3464dc23f314ea53c554a7a30 d139238fee3fb1bf2008d34e9ddc1cfbc55a1750,merge,Support in keepout filter for mask and costmap published in different ,Support in keepout filter for mask and costmap published in different frames  ---  Proposed fix for #2053    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2053  |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | Gazebo simulation of TB3 + internal testcases |    ---    ## Description of contribution in a few bullet points    * Supported the case where mask's frame differs from current layer (`master_grid`) frame  * Added TF calculations in a `process()` routine: when mask's frame differs from current layer's  call TF-lookup for the frame transformation and apply it for all points from `(min_i..max_j)` window.  * Added new testcase into `keepout_filter_test.cpp` unit-test called `testFramesScenario`.  * Updated parameters description with one new `transform_tolerance` parameter for `KeepoutFilter`.
ros-planning/navigation2,2068,2020-11-04T04:36:07Z,2020-11-07T03:14:07Z,True,2020-11-07T03:14:07Z,4dfa91c84a47fb0f6890c04c69d42b12ee492b07,1,4,b71c8f9a4ab0969f79d48386d2de2938020aa80c 58bc4d7db166d4be0237f9581b22368ba86baf3a 5f90821b76c39c705e2d2a3a8ccbcacdf9947b77 7aaaa6dcdb27d52764e2d9226f95dd03bc6a1abf,merge,Loop fix,This PR does three things in the analytic expansion phase of Hybrid A*:    * checks to see that nodes on the analytic path haven't already been visited (this could result in a loop)  * checks that the goal node is not made a parent of itself (this will result in an infinite loop)  * marks the nodes as visited for the sake of completeness (e.g. in case further processing is done on the path in future)    This is not confirmed to fix the problems reported in #2040 but we should be doing them anyway.
ros-planning/navigation2,2080,2020-11-09T19:35:34Z,2020-11-09T20:07:55Z,True,2020-11-09T20:07:55Z,884d1448ea76b420f44da85d557758990d629ce6,1,1,5d599990e728e624eedb89340dc5e5ea948e2c45,,Swap startup and timeout check on lifecycle manager tests,#2043
ros-planning/navigation2,2084,2020-11-10T17:25:54Z,2020-11-10T18:48:12Z,True,2020-11-10T18:48:11Z,13e01d2d6bcd230bd5eb069d109eee2bf2c39fe5,3,1,d3dd7ce870a3767397443e467e5397b810f6279f,,Fix Map Saver and testing,Fix for #2077:  1. Protect Map Saver's resource by mutex  2. Remove unnecessary map republisher for `transient local` messages in `test_map_saver_node`  3. Increase map saving timeout from 1sec -> to 5sec. Sometimes it also causes rare test fails  **plus**  4. This is not related to current issue  but added forgotten reset of save_map_service_ in `MapSaver::on_cleanup()` routine.
ros-planning/navigation2,2087,2020-11-11T23:19:41Z,2020-11-11T23:20:00Z,True,2020-11-11T23:20:00Z,fc85c2600e8dbe6b441788e8ee4197efeee684fa,2,4,b1d5ced4952285902e85ecf77dfe545c46581cc6 91419e4ea8a16992e1410052e899da149b6978e5 762a92ec9a5d68c6befc7e13bfff5d512d5f8435 18755821ab8410a758c703a69f425298e5eecd72,,Rebranding New Navigation2 logo ,
ros-planning/navigation2,2083,2020-11-10T12:09:13Z,2020-11-13T19:27:36Z,True,2020-11-13T19:27:36Z,850295c0ec7b73d62efb136fc36b8a6e45a8b97c,14,2,30c7fd3b2ac76618cd8db1156d39b3c117dad14c f51779913199dc409d06ec9a564b57a5c7085908,,Fix build on macOS 10 x 11 x ,---    ## Basic Info    macOS : 11.0.1 (20B5022a)  Build tools : Apple Clang 12.0.x  ROS2 : Foxy (Patch release 3)    ---    ## Description of contribution in a few bullet points    Building navigation2 on latest macOS 11 (Big Sur) is now possible with a ros2 foxy environment. Previous macOS versions should also work but remains untested. This PR adresses the following fatal build errors (with tests set to OFF) :      #### nav2_util  ```  --- stderr: nav2_util  /Users/ewen/ros_ws/navigation2/nav2_util/src/dump_params.cpp:351:33: error: use of undeclared identifier 'basename'        std::cout << "Usage: " << basename(argv[0]) << "\n";  ```    #### nav2_amcl  ```  --- stderr: nav2_amcl  /Users/ewen/ros_ws/navigation2/nav2_amcl/src/amcl_node.cpp:404:64: error: cannot pass object of non-trivial type 'std::string' (aka 'basic_string<char  char_traits<char>  allocator<char> >') through variadic function; call will abort at runtime [-Wnon-pod-varargs]        " Verify that data is being published on the %s topic."  scan_topic_);                                                                 ^  /Users/ewen/ros_ws/navigation2/nav2_amcl/src/amcl_node.cpp:413:31: error: cannot pass object of non-trivial type 'std::string' (aka 'basic_string<char  char_traits<char>  allocator<char> >') through variadic function; call will abort at runtime [-Wnon-pod-varargs]        d.nanoseconds() * 1e-9  scan_topic_);  ```    #### nav2_behavior_tree  ```  --- stderr: nav2_behavior_tree  In file included from /Users/ewen/ros_ws/navigation2/nav2_behavior_tree/plugins/action/reinitialize_global_localization_service.cpp:16:  In file included from /Users/ewen/ros_ws/navigation2/nav2_behavior_tree/include/nav2_behavior_tree/plugins/action/reinitialize_global_localization_service.hpp:20:  /Users/ewen/ros_ws/navigation2/nav2_behavior_tree/include/nav2_behavior_tree/bt_service_node.hpp:38:34: error: use 'template' keyword to treat 'get' as a dependent template name      node_ = config().blackboard->get<rclcpp::Node::SharedPtr>("node");                                   ^                                   template  /Users/ewen/ros_ws/navigation2/nav2_behavior_tree/include/nav2_behavior_tree/bt_service_node.hpp:42:28: error: use 'template' keyword to treat 'get' as a dependent template name        config().blackboard->get<std::chrono::milliseconds>("server_timeout");                             ^                             template  /Users/ewen/ros_ws/navigation2/nav2_behavior_tree/include/nav2_behavior_tree/bt_service_node.hpp:129:26: error: use 'template' keyword to treat 'get' as a dependent template name      config().blackboard->get<int>("number_recoveries"  recovery_count);  // NOLINT                           ^                           template  /Users/ewen/ros_ws/navigation2/nav2_behavior_tree/include/nav2_behavior_tree/bt_service_node.hpp:131:26: error: use 'template' keyword to treat 'set' as a dependent template name      config().blackboard->set<int>("number_recoveries"  recovery_count);  // NOLINT                           ^                           template  ```    #### nav2_costmap_2d  ```  --- stderr: nav2_costmap_2d  In file included from /Users/ewen/ros_ws/navigation2/nav2_costmap_2d/plugins/obstacle_layer.cpp:39:  In file included from /Users/ewen/ros_ws/navigation2/nav2_costmap_2d/include/nav2_costmap_2d/obstacle_layer.hpp:58:  In file included from /Users/ewen/ros_ws/navigation2/nav2_costmap_2d/include/nav2_costmap_2d/observation_buffer.hpp:49:  /Users/ewen/ros_ws/navigation2/nav2_costmap_2d/include/nav2_costmap_2d/observation.hpp:57:11: error: definition of implicit copy assignment operator for 'Observation' is deprecated because it has a user-declared destructor [-Werror -Wdeprecated]    virtual ~Observation()            ^  ```    #### nav2_bt_navigator  ```  --- stderr: nav2_bt_navigator  /Users/ewen/ros_ws/navigation2/nav2_bt_navigator/src/ros_topic_logger.cpp:44:5: error: no matching function for call to 'toMsg'      tf2_ros::toMsg(std::chrono::time_point<std::chrono::high_resolution_clock>(timestamp));      ^~~~~~~~~~~~~~  /Users/ewen/ros2_foxy/install/tf2_ros/include/tf2_ros/buffer_interface.h:48:40: note: candidate function not viable: no known conversion from 'time_point<std::chrono::high_resolution_clock  [...]>' to 'const time_point<std::chrono::system_clock  [...]>' for 1st argument    inline builtin_interfaces::msg::Time toMsg(const tf2::TimePoint & t)                                         ^  /Users/ewen/ros2_foxy/install/tf2_ros/include/tf2_ros/buffer_interface.h:67:44: note: candidate function not viable: no known conversion from 'std::chrono::time_point<std::chrono::high_resolution_clock>' (aka 'time_point<std::__1::chrono::steady_clock>') to 'const tf2::Duration' (aka 'const duration<long long  ratio<1LL  1000000000LL> >') for 1st argument    inline builtin_interfaces::msg::Duration toMsg(const tf2::Duration & t)  ```    #### smac_planner  ```  --- stderr: smac_planner  /Users/ewen/ros_ws/navigation2/smac_planner/src/a_star.cpp:355:19: error: constexpr variable 'sqrt_2' must be initialized by a constant expression    constexpr float sqrt_2 = std::sqrt(2.);                    ^        ~~~~~~~~~~~~~  /Users/ewen/ros_ws/navigation2/smac_planner/src/a_star.cpp:355:28: note: non-constexpr function 'sqrt' cannot be used in a constant expression    constexpr float sqrt_2 = std::sqrt(2.);  ```    ## Description of documentation updates required from your changes    (Optional) Add instructions for installing dependencies and building for macOS.    ```bash  # Install dependencies with Homebrew  brew install ompl    # Create build workspace  mkdir -p ~/ros_ws/src  cd ~/ros_ws/src  git clone https://github.com/BehaviorTree/BehaviorTree.CPP.git  git clone -b ros2 https://github.com/ros/angles.git  git clone -b foxy-devel https://github.com/ros-planning/navigation2.git    # Build without tests  colcon build --symlink-install --cmake-args "-DBUILD_TESTING=OFF"  ```  ---    ## Future work that may be required in bullet points    Fix warnings in smac_planner     ```  In file included from /Users/ewen/ros_ws/navigation2/smac_planner/src/smac_planner_2d.cpp:21:  In file included from /Users/ewen/ros_ws/navigation2/smac_planner/include/smac_planner/smac_planner_2d.hpp:23:  In file included from /Users/ewen/ros_ws/navigation2/smac_planner/include/smac_planner/smoother.hpp:26:  /Users/ewen/ros_ws/navigation2/smac_planner/include/smac_planner/smoother_cost_function.hpp:139:24: warning: using the result of an assignment as a condition without        parentheses [-Wparentheses]        if (valid_coords = _costmap->worldToMap(xi[0]  xi[1]  mx  my)) {            ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  /Users/ewen/ros_ws/navigation2/smac_planner/include/smac_planner/smoother_cost_function.hpp:139:24: note: place parentheses around the assignment to silence this warning        if (valid_coords = _costmap->worldToMap(xi[0]  xi[1]  mx  my)) {                         ^            (                                                        )  /Users/ewen/ros_ws/navigation2/smac_planner/include/smac_planner/smoother_cost_function.hpp:139:24: note: use '==' to turn this assignment into an equality comparison        if (valid_coords = _costmap->worldToMap(xi[0]  xi[1]  mx  my)) {                         ^                         ==  1 warning generated.    /Users/ewen/ros_ws/navigation2/smac_planner/src/a_star.cpp:433:19: warning: unused parameter 'node' [-Wunused-parameter]    const NodePtr & node                     ^  /Users/ewen/ros_ws/navigation2/smac_planner/src/a_star.cpp:434:22: warning: unused parameter 'node_getter' [-Wunused-parameter]    const NodeGetter & node_getter)                       ^    In file included from /Users/ewen/ros_ws/navigation2/smac_planner/src/a_star.cpp:33:  In file included from /Users/ewen/ros_ws/navigation2/smac_planner/include/smac_planner/a_star.hpp:30:  /Users/ewen/ros_ws/navigation2/smac_planner/include/smac_planner/node_se2.hpp:178:3: warning: definition of implicit copy constructor for 'NodeSE2' is deprecated because it has        a user-declared destructor [-Wdeprecated]    ~NodeSE2();    ^    In file included from /Users/ewen/ros_ws/navigation2/smac_planner/src/a_star.cpp:33:  In file included from /Users/ewen/ros_ws/navigation2/smac_planner/include/smac_planner/a_star.hpp:29:  /Users/ewen/ros_ws/navigation2/smac_planner/include/smac_planner/node_2d.hpp:69:3: warning: definition of implicit copy constructor for 'Node2D' is deprecated because it has a        user-declared destructor [-Wdeprecated]    ~Node2D();    ^  
ros-planning/navigation2,2090,2020-11-13T22:21:08Z,2020-11-13T22:51:50Z,True,2020-11-13T22:51:50Z,f86e44cedee5b6851e1aa09b20b09554d205b64a,20,3,c8296e020a6eed0da682bc5c90455e277a7d92aa 01cc39f52bc13f2bcd4066ef69bf024a2cba60e0 4e1d9bd2cf7739de9d7b4a466e21ea3a0f85f4ab,,Current_ costmap2D updates fixing recovery straight path issues,Continuance of #2044  I think I hit a weird CI bug so rebased and trying a fresh PR trigger
ros-planning/navigation2,2044,2020-10-14T21:30:00Z,2020-11-13T22:21:25Z,False,none,8bb4bdc2a31a71344f660f5c706d8cdfd8e765ae,20,3,3c4cf9fd1172e5db44d6238a1786a677e473a8f6 4eea94a34e54d22a965b1df6cd666a68f5262d64 acd15a7d9630d9f91f682e9820e9dfed8eaeb753,,WIP attempt at fixing recovery straight path issues,Follow up on #1999 and @naiveHobo 's #2009     @naiveHobo can you take a look over this and see if it seems reasonable to you?  - Added clearability to layer API (need to add migration docs for this and explain what its for)  - Greatly simplified the clear costmap service code  - Updated the `current_` to be active: so having run after a clear request. If I did this correctly  it is true after initialization   processing and an update  but should be false only after resetting the layers or clearing areas for update.  -  controller / planner servers check if active and block until active after a clear    @pfedom please test and see if this fixes your issue    - [x] lint (which I'm sure there's issues with)  - [x] have users test that this fixes issues  - [x] a couple reviews to make sure I didn't miss a subtle detail  - [x] documentation on API / `current_` change  migration guides https://github.com/ros-planning/navigation.ros.org/pull/114  - [ ] ~Update other community plugins (STVL  NPVL)~ new ticket #2089   - [x] double check all the `current_` changes are set where they should be and to the correct values
ros-planning/navigation2,2093,2020-11-15T23:38:31Z,2020-11-16T23:26:14Z,True,2020-11-16T23:26:14Z,e6bc3cdafde9d3edb80bd3cfe44d73fc92e9a914,42,1,50f17e7d2d5242ef9c4fcfe1a7196e91319804b9,,Added nav2_ prefix to smac_planner,Signed-off-by: Tony Najjar <tony.najjar.1997@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/2092 |  | Primary OS tested on | Ubuntu 20.04|  | Robotic platform tested on | turtlebot simulation |    ---    ## Description of contribution in a few bullet points      * I added the prefix nav2_ to the smac_planner (I took navfn planner package as a model)      ## Description of documentation updates required from your changes      * The smac_planner [Configuration page](https://navigation.ros.org/configuration/packages/configuring-smac-planner.html)  *The foxy -> galactic  [migration page](https://navigation.ros.org/migration/Foxy.html) - smac_planner section  ---    ## Future work that may be required in bullet points    
ros-planning/navigation2,1942,2020-08-13T07:43:44Z,2020-08-13T18:58:27Z,True,2020-08-13T18:58:27Z,b40c3a6f739e2a8920cd4abcc8f320768aa576c9,13,19,b1cd60d1f30876821a18ebea72a2453260877641 481b6d96a99aea26b5f355f851a59888abc1392a f0561d49e759d3069e6045578ead2062b8291be0 4e1bbced730a36ad0e739f1f13e163f9adf945b5 3554e822deffe5424c19bdb2622fa0b86d4b7eeb 4d0ad615c9b16aefac253c041ca51aec9a6df74e 66e7c00451c7798d184b73baa94da8b8fc662424 a36b903ace734a1b566ea9d1d97c3988eaf59c27 e92fafef9e9a16e00c1272918d62e35a0f25b651 866e99bb29f091e3a6c2e39a74a953252e5a58bb 106fadfe928b5c442fdd9d8fc4d4052f0fc2644d df3db0e949253b66a2e7bbdc51e767811d663ce0 aa4c7ba2a02d3cc0c58664a5d75bedba94e9ad67 99d2534ca0ebdeb665b17f57ffdef970324e1231 ab6bcc84bdf2f78a0b65087969a6f89c4a9154c7 b6b439b5b6a1636c1e18460b373f42a039996336 86f9b66e56ff63e86f64bf7dc7f3746ae39e3fe4 a6066dbb75ce8d118c5c0d3436b800b9cb8cc2ed 085bc4a5987cd6541ee71f91a4bcfb03167e1d45,,Update Dockerfiles and CI,Spinning out non-dumenten related CI changes from https://github.com/ros-planning/navigation2/pull/1731 into own seperate PR.    * Use build kit for persistent caching across docker builds  * Clean up dummy files for better scripting  * Simple ergonomic improvements and file clarity 
ros-planning/navigation2,2097,2020-11-18T20:27:10Z,2020-11-20T20:17:50Z,True,2020-11-20T20:17:50Z,2d31a8d3346d3a9ba6ab99a94d208bdf5879b413,3,4,468d9f778f0aa06acee9025913fef4a9448a01fb 3ed12dd9de36c20f97ec60e25b5e3ada46e83116 184050eced7c7b59e1864d3a57a34ea97efe1703 203ebc6949f25e4488da825180c0abc2ef0dfd53,merge,Add prefer forward critic test,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Primary OS tested on | Ubuntu 20.04 |    ---    ## Description of contribution in a few bullet points  * Added tests for the prefer forward dwb critic.   
ros-planning/navigation2,2099,2020-11-21T22:48:39Z,2020-11-23T21:02:58Z,True,2020-11-23T21:02:58Z,f6bbc5c81e21324f66c663194e93f3f0d2109dee,3,5,d1c33e31fbb88da0928398a8c3fd78fe26f86ee7 c2d47884532e5eccde9f3c6684aa9d1676a866a2 068a1c381764265b3b78f4b55788ca6efb56d78d 7a26a96f47e0b11dbe4de49f81526d9dc1c70e30 bfba399e3c1e07c1bf47953d3c5bab180b582ee2,,Add obstacle footprint dwb critic test,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Primary OS tested on | Ubuntu |    ---    ## Description of contribution in a few bullet points    * I added unit tests for the obstacle footprint critic in the dwb_critics. 
ros-planning/navigation2,2101,2020-11-24T13:36:38Z,2020-11-24T19:29:47Z,True,2020-11-24T19:29:47Z,0285c5f0818d12a74ab553382037ad044bba9ff0,3,1,15a0c639fb6d51a92a6f9742cee020acc59ef22b,,Keepout Filter cleanup,Clean-up of Keepout Filter developed together with PR #2074.    This includes:  * Make logging messages to be more clear: explicitly point on `KeepoutFilter`  like made in `StaticLayer`  * Use `logger_` and `clock_` new paradigm  mentioned in https://github.com/ros-planning/navigation2/pull/2074/files#r528936661  * Various clean-ups and improvements (PR #2074 stuff which is related to Keepout Filter)
ros-planning/navigation2,2103,2020-11-24T19:56:30Z,2020-11-24T20:52:24Z,True,2020-11-24T20:52:24Z,d02f0dd1fcee1009d96a6ade050b201f53bea59b,4,3,9f001ecde40ba6d90c7fd5858324b3377ab9c40b 32660a418757f40ace8fb00e5cb65b353ad23cb1 c01b5d4bb07e51d77ba6f3a4d501dc52045b5756,,adding unit testing for alignment util twirling dwb critics,
ros-planning/navigation2,2107,2020-11-26T12:05:42Z,2020-11-26T23:58:32Z,True,2020-11-26T23:58:32Z,11b25a51981eb53db6a6a3601729ae85238d9241,1,1,c5bea56c0b1f91f8ec8c8839af9d4622ad83776f,,Fix README format,This is a trivial change that only fixed the markdown format of README.md.
ros-planning/navigation2,2098,2020-11-20T23:59:15Z,2020-11-27T20:05:54Z,False,none,974911110b01ea47cd5b2ffa5519a62466f1791f,3,1,f800783d13551c664feaf9a0ad5555114f4c921b,,Supporting multiple goal checkers in controller_server,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    Supporting multiple goal checkers in controller_server and switch between them dynamically.  Motivation; at the current moment there isnt (AFAIK) any mechanism to update dynamically the goal checker or the goal checker parameters at runtime.    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | no associated ticket |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (gazebo simulation turtlebot waffle) |    ---    ## Description of contribution in a few bullet points    * This is a basic functionality to support multiple goal checkers in the controller_server (in the same way it is supported multiple controllers )    * This initial proposal uses a controller_server parameter to store the "current_goal_checker" (alternatively it could be in the FollowPath action request like it is the controller_id).    * It is provided with a "nav_params.yaml configuration" with a second "goal checker" to show how it is used. But that could be removed final pull request.    ## Description of documentation updates required from your changes    No documentation change should be required at (least in the c++ code)  - "documentation chunks" were copied from "multiple controller" support  for example "findGoalCheckerId"  ---    ## Future work that may be required in bullet points    * if the "parameter approach" is not convenient it could be replaced by an additional field in the FollowAction request  
ros-planning/navigation2,2114,2020-12-03T02:15:53Z,2020-12-03T02:17:36Z,True,2020-12-03T02:17:36Z,e77560d87ac816ff72663c36055ce35c1a45c942,1,3,c2bd4d5d9065454b642db860a41bf9c70116993d 051359413ce10aeb54cd4656cd91049cb690180c 230017f372f9c30a91a784662072ce5f6654b684,,Removing eloquent from build status table since its EOL,
ros-planning/navigation2,2106,2020-11-25T16:16:31Z,2020-12-07T18:08:08Z,True,2020-12-07T18:08:07Z,116a7ca5c209974f84084f1014399e0c3c6420bc,13,2,73765b548574aac94bafbe90107be4fbf4916013 c990867fce4935cc5683e2e12e8efd8d8a356a51,,Standardize time units per REP 103,Addressing #2096.    Is "migration guide updates" referring to https://navigation.ros.org/migration/Foxy.html?
ros-planning/navigation2,2115,2020-12-07T23:40:26Z,2020-12-09T00:52:32Z,True,2020-12-09T00:52:32Z,d9971e0f6b7560acf351f1267f2551082fb33b89,1,1,d3a101cae7de56e448222e150d53b6bf08dcd21e,,Revert bond core to ros2 from my fork after merging fix,
ros-planning/navigation2,2119,2020-12-10T21:46:54Z,2020-12-10T23:04:41Z,True,2020-12-10T23:04:41Z,8bd158af79b942f4053206674a33b403e6c144e4,4,1,b9e177bff67a933762c6f482673ad04c5591d2a6,,return failure on plugin failure in on_configure,To be honest  I'm a little embarrassed that it never occurred to me until now to utilize the return codes of the lifecycle state transition to cleanly fault bringup on a fatal issue like not being able to find a plugin.      
ros-planning/navigation2,2121,2020-12-12T22:22:23Z,2020-12-13T01:20:34Z,True,2020-12-13T01:20:34Z,0f322ae3e4b80fc43373b6996cfe9252b3dd0df7,1,1,fd23881958700ade2eaf1c12187e12ebcc654c1e,,Move voxel publisher activation into conditional that its on,#2120
ros-planning/navigation2,2122,2020-12-13T18:46:31Z,2020-12-14T18:59:40Z,True,2020-12-14T18:59:40Z,89241bdf96441e2609952238d9a688cbe20c1d32,2,5,d5d6080f9cc75be780f8d6156a1d9f25cf3fa543 747fcb3aae799f565f25404dca712576552727d8 3e9bc4499afe32226cdc527464eabfba724c0251 7f6cef06c3bac5db784bbf5826cf45cc43fa34a5 ec3c45bdaacbd4b561eaaf88f1aadc26e9a8e989,,Add DWB base obstacle critic test,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Primary OS tested on | Ubuntu |    ---    ## Description of contribution in a few bullet points  * I added tests for the DWB critic: base obstacle critic.
ros-planning/navigation2,2050,2020-10-17T19:55:44Z,2020-11-09T20:33:03Z,True,2020-11-09T20:33:03Z,8ba925cb8dd7bbd60eded9bb5e58883fb4a0aec3,7,3,f52a31c12cbd8fb53b29d35e4abbaa4cea71acd1 5b4e6754e953ace39c0471f37c4b2ed8ba5153b9 b96f2193ae2c128734b6e264f5ac916c539bf675,merge,Fix SmacPlanner memory leaks and costmap downsampler test,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | - |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TurtleBot3 Gazebo Simulation |    ---    ## Description of contribution in a few bullet points    * Fix `shared_ptr` cyclic dependencies in `SmacPlanner` and `CostmapDownsampler` as per #1900  * Refactor `CostmapDownsampler` to have `on_` type functions to configure  activate  deactivate  and cleanup costmap publisher stuff  * Fix `CostmapDownsampler` test which has been failing on Cyclone DDS (#2043)
ros-planning/navigation2,2047,2020-10-16T16:44:45Z,2020-10-26T17:38:02Z,True,2020-10-26T17:38:02Z,bf22f34cc805d29361934b57b1791e9fb10a47a6,2,2,f0cf44a0da120a0c9b1a096f37c03ed753aa1647 98dc000212853f56dc7ce06db9a47ec577ade900,,Fix flaky tests,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2043 |  | Primary OS tested on | Ubuntu 18.04 |    ---    ## Description of contribution in a few bullet points    * Fixes `nav2_util/node_utils` test ([relevant CI artifact](https://circle-production-customer-artifacts.s3.amazonaws.com/picard/5b21c78bcfe8df0013110d01/5f86f8d3a0485e4ca37063f3-0-build/artifacts/opt/overlay_ws/test_results/nav2_util/test_node_utils.gtest.xml?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20201016T164024Z&X-Amz-SignedHeaders=host&X-Amz-Expires=60&X-Amz-Credential=AKIAJR3Q6CR467H7Z55A%2F20201016%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Signature=26b101aa801a8e56a2f06950cc86c1c815386fea996dd023dd928b6d412cfafc))  * Fixed `nav2_system_tests/test_waypoint_follower` which used to timeout in most cases ([relevant CI artifact](https://circle-production-customer-artifacts.s3.amazonaws.com/picard/5b21c78bcfe8df0013110d01/5f86f8d3a0485e4ca37063f3-0-build/artifacts/opt/overlay_ws/test_results/nav2_system_tests/test_waypoint_follower.xml?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20201016T164250Z&X-Amz-SignedHeaders=host&X-Amz-Expires=59&X-Amz-Credential=AKIAJR3Q6CR467H7Z55A%2F20201016%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Signature=c206fa9dc3bc20906ec372d71343269c367d68e5d7184285ee14c158628f8d46))
ros-planning/navigation2,2009,2020-10-02T13:12:33Z,2020-11-09T21:09:40Z,False,none,a9de62de5dea150713bb8d77ef94f96fd124645d,1,1,4d5616d97c0d2555c60333d2964e849c35b5a5f5,,Add update step after clearing costmap in clear costmap services,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1999 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TurtleBot3 Gazebo Simulation |    ---    ## Description of contribution in a few bullet points    * Explicitly call the update costmap step after clearing costmap regions when clear costmap service is called
ros-planning/navigation2,2004,2020-09-30T15:30:44Z,2020-10-02T01:16:41Z,True,2020-10-02T01:16:41Z,9baf4675dff475d453f684e0c0cae2da02893b43,3,5,ceeabfab46b7cc5c16d3d3579acbe6a3df25f1a8 00639cf10d1526baa21fbd4cf21b4b59f0d05af2 0606980c5f63e528de834c7deefec74392a01899 0fecb9220f21244050f935bd609accb6f30b5a72 66025411796bdf49b3d5f241b2a07b0be4768d76,,Fix reset logic in nav2_behavior_tree control nodes,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2002  #2003  |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TurtleBot3 Gazebo Simulation |    ---    ## Description of contribution in a few bullet points    * Fixes `RecoveryNode` logic which had a few errors when halting children  * Fixes halting logic in `PipelineSequenceNode`  * Updates unit tests to reflect the changes
ros-planning/navigation2,1736,2020-05-14T21:59:10Z,2020-05-15T19:57:50Z,True,2020-05-15T19:57:50Z,fc762f659d98ce4ca2ebc5d87e6fc556742ffc9a,34,7,30fb75512af27ccbdf0c91f2aeeed87476479ea0 50a86e43e9f803540a528463c083059912fc676d fd49020936131dfa9801c024b72c5feddbf29376 b2298b6aa6c3ab5d81c2e654689fbf650f007549 408c0cdd81220fceaafb297fcf7dac1b2c01b62b af13c75bc820d9f487cb6b98825db3363ca28559 965a713fd72bc8ca5a8ad584eae03b7b1fdbcd21,,Add feedback in navigation2 actions,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    Building up on  #1586     | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1339 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TurtleBot3 gazebo simulation |    ---    ## Description of contribution in a few bullet points    * Added feedback to long running actions.  * Removed random crawl as it is still in nav2 experimental with the server  * NavigateToPose; pose  time spent on task  number of recoveries executed  distance remaining  * Follow path: Instantaneous speed  distance to goal in odom  * Spin and backup: distance so far gone  * Wait: time left  * compute path: none  as either has a while loop naturally conducive to feedback.      ## Description of documentation updates required from your changes    * **TODO** add to migration guide for Foxy    ---    ## Future work that may be required in bullet points    * **TODO** test each metric is properly computed and reset between runs  
ros-planning/navigation2,1722,2020-05-11T20:39:26Z,2020-05-12T22:25:02Z,False,none,2aee129e185c181c4a900f2d49b39bdc59cdfab0,29,5,69238165c31ec29ff44250c32a384446aeadc275 2299eee5df6085860eab3dd731bf2339530c16e4 07127812a7077d4f7f9de8c9fc800953e416d301 9d41acbd2fd8ad2a76c367e01e48ea53c8ea6fd7 c31359bc889eafcd83e3a6a45f66fccdec53befb,,Move recovery plugins to nav2_default_recoveries package,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1708 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TurtleBot3 gazebo simulation |    ---    ## Description of contribution in a few bullet points    * Added ```nav2_default_recoveries``` package  * Move ```Spin```  ```BackUp```  and ```Wait``` recovery plugins to default recoveries package
ros-planning/navigation2,1738,2020-05-15T11:54:34Z,2020-06-18T17:01:17Z,False,none,2a12468088c413bcb8f3dfd534c72ee99a8e0ab0,11,4,beaeb488a27c7a4507e9e4d64337928ef96d63b1 23dfb40c4eadcc9a43a8071ca90e64ac88d69ce7 8560a0c2b6775a3b60b83e8afe381a5087380de0 10f070da36b7e2808830854f66fe041ab53bd5b9,,Un block costmap activate transition and check for initial transform at root,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Original PR   | #1195 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TurtleBot3 gazebo simulation |    ---    ## Description of contribution in a few bullet points    Quoting @bpwilcox:  > This PR moves the transform check to the map update thread in the costmap  so that the on_activate lifecycle transition is unblocked. Part of my goal here is to remove external dependencies from the lifecycle transition of the node. When the pose is eventually provided  the thread will proceed to updating the costmap.    * Add ```TransformAvailable``` condition node as the entry point for BTs to make sure navigation starts only after initial pose is provided  
ros-planning/navigation2,1886,2020-07-23T22:13:30Z,2020-07-23T23:15:34Z,True,2020-07-23T23:15:34Z,c65e3aa388f31d6469970d91ce62e6a17c313d07,5,1,9c2d869089700979c9330c55c214aa719be1620b,,Fix nav2_util dump_params unit tests,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1836 |  | Primary OS tested on | Ubuntu 18.04 |    ---    ## Description of contribution in a few bullet points    * Fix `dump_params` unit tests 
ros-planning/navigation2,2074,2020-11-05T15:53:05Z,2020-12-15T21:22:31Z,True,2020-12-15T21:22:30Z,6a0c92cad7fb8bb1e3e8500742bc293cddbedc36,35,10,a8d04c28973a7903e8d994a004d76a724a054138 f0c16f8d473a00454edbdd66019f287e7cef0f86 bb9a09a3a320f2531cf0215e7dd67feb189b311f 0de43530cf878175f0420caffb71e8d430ef79dd c4584cd1226c18ac363d69b89d0e91737ab05063 a18462c5fd0f3c608f18a6cdb204adbfb705b6bf 128b9e39f79264a80561ee09e458cc185c6ff5b4 943d052053af12f4f5cf1fdb15715b0e7b0911de 2223741f3753bc368f1e5774a8a8f0c6d66a15d6 30fbc1f11796099472bc69a3cb2db3ea8263f686,,Speed Filter,This is implementation of speed limiting filter for slow zones with maximum speed restriction  requested in #1263    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1263 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | Gazebo simulation of TB3 + internal testcases |    ---    ## Description of contribution in a few bullet points    * Implemented new `CostmapFilter`: Speed limiting filter  * New speed limiting message: `nav2_msgs/msg/SpeedLimit.msg`  * Added support of speed limiting topic in DWB kinematics (handled by two parameters: `use_speed_limit` - switch for new feature and `speed_limit_topic` - topic name)  * Covered new functionality by testcases:  1. `nav2_costmap_2d/test/unit/speed_filter_test.cpp`: Unit test for `SpeedFilter` class  2. `nav2_dwb_controller/dwb_plugins/test/speed_limit_test.cpp`: Test for new functionality in DWB plugins  3. `nav2_system_tests/src/costmap_filters/test_speed_launch.py`: Full-stack run-time test for speed filter verification in environment close to real. The test is running in two configurations: speed filter enabled for local or global costmaps.  * Small fixups and code clean-up in costmap filters  * Updated `param_list.md` with new parameters. The rest of changes in documentation will be made at https://github.com/ros-planning/navigation.ros.org    ## Description of documentation updates required from your changes  Documentation update PR for https://github.com/ros-planning/navigation.ros.org repository will be made later  after current PR design will be fixed.  
ros-planning/navigation2,1986,2020-09-14T19:30:19Z,2020-12-16T03:19:59Z,False,none,cefe3c63b7e8bcac91dac7c70f139374fdd11628,31,1,82cbd0a1efb416682382f059b7027f88cadf68ec,, main Enable System Tests on Windows ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | N/A |  | Primary OS tested on | Windows |  | Robotic platform tested on | Gazebo simulation |    ---    ## Description of contribution in a few bullet points    * Enable System Tests to be able to build and run on Windows.  * Most of the changes are related:    1. Normalize the test file path to use forward slash `/` since many of the Nav2 components are expecting this convention.    2. Add `python.exe` in front of any Python script execution. On Windows  the script is not an executable and one needs to prepend `python.exe` to run. Hope the convention is portable and won't disrupt the tests on Linux.    3. Use more portable `M_PI` macros.    4. Adding the missing dependency (angles) to  nav2_costmap_2d.    ## Description of documentation updates required from your changes    N/A    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,2131,2020-12-20T15:37:21Z,2020-12-20T20:34:52Z,True,2020-12-20T20:34:52Z,e7432f17d72210b2aed71bae084c2fcda30ed888,1,1,427bf3961f2007c0bdd15585065675e2e885fb26,,costmap_2d remove useless and buggy testing helper function 2130 ,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2130 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | None |    ---    ## Description of contribution in a few bullet points  Remove useless function      ## Description of documentation updates required from your changes  None    ---
ros-planning/navigation2,2135,2020-12-23T02:31:08Z,2020-12-23T02:32:20Z,False,none,none,247,23,016df2945cf9f9960c0e0416746ef504c8bcf8af 162f2e7250c60182b7ffe3fd7c298c7dc229ca1c 756265fea08df0323861d720ec7f8bf10e3ed986 e480753ddeb7e843405a1122a152abff5ecdef9f 05517fb13f476707709f4e838b6c7f29e97654d9 9cbda503593d91081ad255fcf2d06e09c9d9f760 ec6ae7cf4e7a804f51776d8877ad65bdfc94f2d5 bd0fe8bf238c69bc41ea29680a7a37bd3fb60022 7fb4ad59408281358428c04b66b9c0a7845f7e0f 3aab0745426f6a5a4feeee615c90bc6eeecaab66 9735adffd236a0afedd4a0ab61a8a7b0f0edfb8c 7e41f13e5ed7d40c1ab99f359714d24c5deccd4b 277582ee17d94a1b09d55981259e859710199510 2ba8f44fe485afff8a07554169e6bdf5cfc6886a 648ecaeaf128d497c778f3a4591f9a8805c64713 090ddc73676578368466ca01567812ee911e5762 2edfb83152f71e771b683c6f834ed1c69b62fbe4 1024593e61b60fc8e19e21671ad810797f01195e cc1a7f4858498d195969d1242a4eecae83ade98a a642460e107dd07a6da90caab37454dc947de466 8fe5dee535410c55b0549ab22710a22a045fb532 97652a1f2a21276598cc265025e04ad60aea5903 942ea483863e3268023cb0cd504c93632fcbf155,,Dashing devel,
ros-planning/navigation2,2136,2020-12-23T03:10:01Z,2020-12-28T18:14:34Z,True,2020-12-28T18:14:34Z,f4b9b5d89682806acf3a0960bb41b46a7403bcc3,2,2,ae52e26f3b5be03cb6f53aa44f120184334e555b 906aa11221f20de7036a8664c70281b05bc5a95b,,allow allow_unknown parameter to be configurable,set "allow_unknown" parameter in navfn_planner to be configurable    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |(#2134  |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (My own robot) |    ---    ## Description of contribution in a few bullet points    I add some code to allow the parameter "allow_unknown" to be configured  
ros-planning/navigation2,2140,2021-01-01T14:05:35Z,2021-01-01T20:23:24Z,True,2021-01-01T20:23:24Z,77c1b742e959dda02acf6830c2a814f2278bb4a4,1,1,3463969bc4cfc92a7a562954b725f718b611cba6,,Fix deprecated usage of FutureReturnCode SUCCESS,Use rclcpp::FutureReturnCode::SUCCESS replace rclcpp::executor::FutureReturnCode::SUCCESS    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | none |  | Primary OS tested on | Arch Linux |  | Robotic platform tested on | none |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    Use rclcpp::FutureReturnCode::SUCCESS replace rclcpp::executor::FutureReturnCode::SUCCESS to fix the deprecated error in building navigation2 foxy-devel. I found that it's fixed in main branch  but not in this branch.    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    none    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  none
ros-planning/navigation2,2139,2020-12-28T18:47:04Z,2021-01-01T20:24:50Z,True,2021-01-01T20:24:50Z,2efdad8eb838d28ab9f3c24fc4aa5136b0ae9bdc,9,1,0fb0962424d06e43bb712697687b9d52cb93d9ff,,Fix format strings in calls to RCLCPP macros,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | none |  | Primary OS tested on | (Ubuntu 20.04) |  | Robotic platform tested on | (none) |    ---    ## Description of contribution in a few bullet points    * Fixed incorrect format (printf) options in multiple locations. I found these formatting mistakes by building against the latest main branch of the core ros2 libraries.    ## Description of documentation updates required from your changes  none    ---    ## Future work that may be required in bullet points    none  
ros-planning/navigation2,2142,2021-01-04T09:08:43Z,2021-01-04T17:14:49Z,True,2021-01-04T17:14:49Z,08f869f722f78b74bab9fa3f1905c78d3d3aa430,3,1,0e7f343294fa20fee5305dea4833d5fb4a93ed69,,Replace dashing tags to eloquent for building scripts,Build scripts for Eloquent branch has 'dashing' as ROS2_DISTRO  instead of 'eloquent'.     
ros-planning/navigation2,2144,2021-01-05T01:57:59Z,2021-01-05T01:58:16Z,False,none,none,231,9,342816556b89294ccc3266e0b08c57dc603e3570 aa9394a6b57a23ede7add9cbba901ba1a21a26da 671dde625ade1092130cea68a64eca7e97435033 db2f917bd5a1bdacf7acc5436f49434be0d02ad5 fa1a64ad4d47a3793d22ce7da3f7238c92294af7 603150bcf52a48847772558f30601c5b30cf0797 96b47139d3c10f3847c66fe6bf130152dfd1a038 0ed83f084d105f3eae667e0b7a28431939a07c96 0e6c44a3e8780fb22183613e25b25973b5806e86,,Foxy devel cloi,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1) |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,1688,2020-05-05T11:53:38Z,2021-01-06T19:54:19Z,True,2021-01-06T19:54:19Z,8d6cd2878bae389d932982e759acb760f3291f63,8,5,54b1043c8f15d21cdc6e77d947e797ea5b5f576c 61f8638894c5dabda883f22314e313f984955eb7 fdfaec9b093e1ac0cd5d30286c95dc861c91717a 3a9d5c3dfdbe62c35601bf296eb18dc1e93f586f 528107d5d074c45d8a67b4553c9278752599047f,,Add particle cloud display plugin for RViz,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1678 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TurtleBot3 gazebo simulation |    ---    ## Description of contribution in a few bullet points    * Added Particle Cloud Display plugin for RViz to display AMCL particle clouds  * Particles scale according to weight  * Update bringup rviz files    ---    ## Future work that may be required in bullet points    * Move to the default rviz display plugin for nav2_msgs/ParticleCloud after support is available (ros2/rviz#538)
ros-planning/navigation2,2146,2021-01-07T19:09:29Z,2021-01-07T20:02:38Z,False,none,e6e3ae72a18305cb687cd8b60d1d95b3e377bef9,1,1,1618eb7dcaade6bc3444759d868ed2047108a919,,Bug in clearArea function from costmap_layer,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu 20.04 Foxy |  | Robotic platform tested on | tb3 Gazebo |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  I am working in a nav2 layer. Trying to clear an area between iterations I used clearArea method from costmap_layer  and it was not work correctly. Here you have the default behavior.  ![clearArea_default](https://user-images.githubusercontent.com/10533506/103933267-5feced00-5123-11eb-9b77-ff1cca20b7cf.gif)  And here you have the behavior after the fix.    ![clearArea_fixed](https://user-images.githubusercontent.com/10533506/103933388-97f43000-5123-11eb-8f0b-cc7765db80f5.gif)      ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    None    ---
ros-planning/navigation2,2104,2020-11-24T23:36:49Z,2021-01-07T09:36:44Z,False,none,none,41,8,594d2117fa0c5f25b3efd9302e21819c3eb5f565 8e8c3d6debc069434a23677e89941e6f593cc40e 9618cb98acc91cacf2cbd977e7282c7fc7b00115 caebe07c02b7dfec7e604bd65d6133903abe0c7d e192a2ccdac4bbcfd8c1b530e27cc4fcad3455db c72bfee1c8ef601967454eb14ed8d124cf65b1cf a9ceab33250ea97ae8da01cd44172c5f57df17b7 c2c6b230e2f1897eb16535e1a02f6952800904c0,,Smac Planner ROS1 compatibility port ,---    ## Basic Info    | Info | Please fill out this column |  | ------ | -----------  | Ticket(s) this addresses   | #2014 |  | Primary OS tested on | Ubuntu 20.04 Focal |  | Robotic platform tested on | Noetic/Focal dedicated hardware and custom simulation  Foxy/Focal ongoing |    ---    ## Description of contribution in a few bullet points    Add compatibility of the `smac_planner` between ROS1 and ROS2 to enable additional contributions  simplify transition  maintenance and update paths.    * Add templates for NodeT  GridCollisionCheckerT  Costmap2DT  FootprintT to AStar  NodeSE2  Node2D and GridCollisionChecker to remove ROS dependencies (to use them with a different Costmap2D  such as ROS1 costmap  ...).  * Rename existing ROS wrappers for ROS2 to nav2_smac_planner*  * Add new ROS wrappers for ROS1 called  nav_smac_planner* for retrieving parameters  publishing the path  ... . Use the nav_core::BaseGlobalPlanner interface to export the `smac_planner` as a global planner plugin which can be used in move base.  * Add ROS1/2 compatibility in package and CMakeLists  to build it with catkin or colcon.      * Add missing base class: FootprintCollisionChecker  Footprint in ROS 1 to costmap_2d namespace. [feature/footprint-collision-checker](https://github.com/STTech-Hub/navigation/tree/feature/footprint-collision-checker)    Tested in ROS1.    ## Description of documentation updates required from your changes    ---    ## Future work that may be required in bullet points    * For ROS1 we need to add the FootprintChecker to costmap_2d [feature/footprint-collision-checker](https://github.com/STTech-Hub/navigation/tree/feature/footprint-collision-checker) to successfully build it  * Test in ROS2 is still ongoing  * Publishing the costmap in `_costmap_downsampler->on_configure`  * Merge it with the `nav2_` prefix commit e6bc3cd   * Add explicit instantiation   ```  // Instantiate algorithm for the supported template types  template class AStarAlgorithm<Node2D>;  template class AStarAlgorithm<NodeSE2>;  ```  * Publish `smac_planner` package in ROS1 noetic (maybe also melodic)  add it to rosdistro  * Fix remaining warnings in clang  * ROS1: Missing `costmap_ros->getUseRadius()`    
ros-planning/navigation2,2010,2020-10-03T12:40:44Z,2021-01-13T17:56:36Z,True,2021-01-13T17:56:35Z,61710875ed1d73e807b7cd1a9e577d995f2e4ead,8,14,fb351fc4c18e6821a50a8435aa14c52ba4500235 239112964593d91fb40eae157cace5934b4aad02 bfcd68158ba5ce840ed62a8cbafb8a04fa8e2539 33312ec2bdab9e3913a126b4f9e122dc5eb485c3 046c78d44d625e1199ec0cdc7a59676fa52caa32 ef181699df4443802e7a8386ad0d78cbbacde520 a478cfac326fe825a077431c06d82302f6a8e648 e68a45cc9fb6e8859d47289c80c1d3168bc1a8f4 3a600c5f6be44a378962ffabde926eda56b63bdb 68091763be9fc53396ac8ed3e473bddcfd3fbeae 8cab84c2bb44cc232ac1dc030085707b4e70bf4a e9b684c7b7e3fd04efec213c2638c20fee357a28 2c45ab3df4cae1c956d5acf5f2238356b8f17e05 41a201b0a28861eab4e53d3bf3ded53b0711a8e2,,Add nav2_behavior_tree BtActionServer,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1979 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TurtleBot3 Gazebo Simulation |    ---    ## Description of contribution in a few bullet points    * Adds `nav2_behavior_tree::BtActionServer` as a generic application server that people can use to build their specific autonomy applications  * `nav2_bt_navigator::BtNavigator` implements `nav2_behavior_tree::BtActionServer`    ## Description of documentation updates required from your changes    * Add `nav2_behavior_tree::BtActionServer` to foxy -> galactic migration guide    ---    ## Future work that may be required in bullet points    * As per #1928  waypoint follower can implement `nav2_behavior_tree::BtActionServer` to be behavior tree based with minimal code-repetition
ros-planning/navigation2,2151,2021-01-18T10:48:36Z,2021-01-22T18:51:42Z,True,2021-01-22T18:51:42Z,567f8c85b77e4b569c1b76b36c4275a57847a86c,5,8,4ad985ef9962aa80cfb174f5197dd8ef6f788367 0629b51d80ce1505bda6fb3e5a9e0022e9af32c4 4cb83fb6867b2cd224a9614cce822ad4ca7b96ab db62093e073475b207820e2f9eab8d873e9d6794 9edf19207ca6bd73ab385b4e10dbe609d97cdb1b a0084e626de524c56ff8064fc6702932ce822484 bccba4d976c04a1cffd40dda86baec46a8b38c5d 304023f5b7fdd4da73361b8c1d036c1977a945ad,,Changed FollowWaypoints to follow_waypoints,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2150 |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    <!--  * Changed FollowWaypoints into follow_waypoints wherever indicated in the search results  -->    ## Description of documentation updates required from your changes    <!--  * None  -->    ---    ## Future work that may be required in bullet points    <!--None  -->  
ros-planning/navigation2,1928,2020-08-08T07:58:40Z,2021-01-22T19:00:08Z,False,none,ec5cffa4fda1fd1f8019599b57694a5e834b6422,35,8,a3e95fc159b1e2fd66b413b5f5c7ff3691ce7819 35557b431b4c6623c95cc3db14574ce4a47eaf02 a5d2f772d488ac3ba81b39a5afbf1c323521fb55 6e1251b7ef0ae6bd16388b79c10f8d0e0c82797a ef7736093a0e8f61650d1153e2f50e241ea40a76 ad017ca7a482753c37a5fddf8a39fc25ad8f3ee8 7cb909cf65dc413f464fd01a43368253e760e6e1 c6add8e72d26076f2acaf7028f85470a86aaffa7,,Add BT based implementation of waypoint_follower,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | related to https://github.com/ros-planning/navigation2/issues/1651 (another implementation of #803) |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | None |    ---    ## Description of contribution in a few bullet points    * Add BT based implementation of waypoint_follower (Action server of FollowWaypoints)    * Customizable recovery behavior will be available for FollowWaypoints (As in the case of NavigateToPose)    * This is also an example of NavigateToPose BT-node    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    * Update README.md (Build Status)  * Update navigation.ros.org    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    - Decide how to deal with the existing waypoint_follower    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    ## the goals of this contribution and the scope of it    * Provide customizable version of waypoint_follower (Action server of FollowWaypoints) named nav2_bt_waypoint_follower  and replace nav2_waypoint_follower with nav2_bt_waypoint_follower.  * Provide an example of NavigateToPose BT-node
ros-planning/navigation2,2126,2020-12-16T00:02:36Z,2021-01-22T18:56:35Z,True,2021-01-22T18:56:35Z,13f518ac0a021f65d2dc6c0dfac95f3a13467b46,27,21,096ee33b0c82d73ce81a70ceb0fda7cf8addb20a 2aa9f81838f24ae8067772080688d42bdcb726cf c8f31b92ac7ad59d658de522af81ba55671e42ff 0e697b26baa55c400a8ff4fb6605e4dab6d429bf 4011e15af5f3da5c7cc1a61cec8c51fad1581459 bbf332fa85654eab4424f50a6878e8e9769fea69 703f9304842b7121f892397445bab2851c239d69 a9f465a50f7ca66219940c051b719f497031e6c1 584502429e97a5ba39bb1de0a60c46c46c2d96b0 42b9fb2bf97f82673104a45d98c57f3b35dbf1b8 34ad359b5934f294fe7b610533dec0ea5f883178 a735fca265799ce7f4c9e3587eeb0cdf42d0586f e8e358306cce90aa93eb14d2ae7a8cdbeb34d6b9 aa5d92c4cc9aeeda7cf686c8cad681a09d01ec3f 27627167c91d0097e7eb9b245d8b129f71592873 c034f9b668aa0d1e5fe391f41dd6b8c41184e8b2 7464cb02a0659d8d92b0c9d0e73dd96c4fbfc89a 867600f9d0c4c5c13b5d1a1aa77c727d989fe4f5 3cfa8193555bb7708d789091b8c4515250075466 eb0fdc2e98e49b3bf6167443f73b36d8048e73be c24f12838a4a21a41fbb2c8fe17a44402054516c,,Adding parameter for minimum range for raycasting to clear obstacles,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  #1809  |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | Gazebo simulation of waffle (tb3_simulation_launch file in nav2_bringup package) |    ---    ## Description of contribution in a few bullet points  * Added minimum range parameter from which raycasting begins to clear obstacles (raytrace_min_range)  * Renamed the raytrace_range parameter to raytrace_max_range as it specifies the maximum range for raycasting.    ## Description of documentation updates required from your changes  * Added new parameter and modified one  so need to add them to the default configs and documentation pages  * Raycasting to clear obstacles can now start from a minimum range  so will have to change documentation to reflect this    ---    ## Future work that may be required in bullet points    
ros-planning/navigation2,2153,2021-01-22T10:06:15Z,2021-01-25T18:44:18Z,False,none,d0cb73706c80f98daadb96653e82593696160e22,4,1,d0601bd3a316669d4288e17619abe41857c5748e,,Feat Dashing add map and frame topic,Signed-off-by: Spinnler Christian <christian.spinnler@siemens.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | - |  | Primary OS tested on | (Debian) |  | Robotic platform tested on | - |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    In the dashing version of map_server it is not possible to use custom map and frame_id topics. I added support for this.     ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    New parameters are `topic_name` and `frame_id` which both default to "map".    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,2156,2021-01-22T23:37:56Z,2021-01-25T18:50:06Z,True,2021-01-25T18:50:06Z,9387332078e010abd98cc8977424179bd55d721d,3,3,72c13700c6ab64d1c7903e8b23eae8a8b78f8c83 137d8182631c9b75940c00b2121964bec3be56e0 3d5f462f46275038e6e69ad441456067c23a6acd,,adding tests for wp follower task executors,
ros-planning/navigation2,2161,2021-01-31T06:16:27Z,2021-02-02T17:26:37Z,True,2021-02-02T17:26:37Z,cfa284334f4e76760354aae485b4b7d2c57a5c97,1,1,f44cc8ba45a419e0d3b0cfe75dce3806442a2614,,fix boundary point exclusion in convexFillCells,## Description of contribution in a few bullet points    equivalent of [this ros-navigation pull request](https://github.com/ros-planning/navigation/pull/1095):    > A bug in the function that returns all the cells contained in a (convex) polygon:  >   > - sorts all the points along the polygon outline by x coordinate  > - for all points with same x coordinate  find min and max y coordinate  > - for that x coordinate  considers all points between min and max y coordinate to be within the polygon  >   > The bug is that the maximum y coordinate also needs to be included.
ros-planning/navigation2,2165,2021-02-02T18:57:51Z,2021-02-02T22:15:05Z,True,2021-02-02T22:15:05Z,98d1c8c537f55bbc5175babc0a7f6f312521e73a,1,1,692f91c8ca920073679fe744791f416b5d193387,,Update angular velocity after constraining linear velocity,  ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2152  |  | Primary OS tested on | Ubuntu 18.04  | Robotic platform tested on | Turtlebot simulation    ---    ![Screen Recording 2021-02-02 at 6 48 48 AM](https://user-images.githubusercontent.com/10333131/106648248-065acf80-65b6-11eb-80ed-4621f133afa6.gif)  The green trajectory is the old behavior and the yellow trajectory is the new behavior in which angular velocity is updated.    The new behavior ensures the robot moves towards the lookahead point more closely. In the case of the old behavior  as seen in the GIF  it generates a trajectory that makes the robot take a cut (i.e. move with a higher angular speed) while turning which leads it much closer to the obstacle and could potentially lead to a collision.        Signed-off-by: Shrijit Singh <shrijitsingh99@gmail.com>
ros-planning/navigation2,2166,2021-02-03T22:36:13Z,2021-02-03T22:36:31Z,True,2021-02-03T22:36:31Z,b3b7d00547b3b1f4a59050797656374f1257e1e3,1,1,376e4cd2eb4d3708502d342f91a8b282abc6e7fc,,Remove eloquent jobs from readme,
ros-planning/navigation2,2167,2021-02-03T22:38:33Z,2021-02-03T22:38:50Z,True,2021-02-03T22:38:50Z,c50b8b9e29b49175ec4c0f038bf9d3dbddfa05de,1,1,b564aeb1a57d4de96a18a94023b6de8f91a680fc,,Update slack community link,
ros-planning/navigation2,2168,2021-02-03T22:41:30Z,2021-02-03T22:41:48Z,True,2021-02-03T22:41:48Z,378d53435856f4b3377fc5031b7118e4554410e5,1,1,ccb49b204885fc458ddf52b3f5df349859406179,,Update doc links in readme,
ros-planning/navigation2,2169,2021-02-03T23:14:14Z,2021-02-04T17:20:51Z,True,2021-02-04T17:20:51Z,6d5e65a98b6034538021ee7f348dec0372308040,26,1,a34544f54466b7b81e9fa14ef16ad03af0b104f2,,changing all non changing references from navigation2 to Nav2,https://github.com/ros-planning/navigation2/issues/2088
ros-planning/navigation2,2170,2021-02-04T20:06:18Z,2021-02-05T19:44:51Z,True,2021-02-05T19:44:51Z,d5b3032ba072bba147465b2b1dd7a28e288a4f40,18,4,b3eb135f16afe766a864fe8fc36ef41452690fa6 3f871e44c024ec4e22f1eee47e5692d702a0b116 44e726c4fbedbaf574316fc3ec8dcb3c0a50440a a61b24cd1e2cf6481698ac5238a9f56db261923a,,attempt at bringing up CI 2158 ,Performing context updates on parameters  probably (?) causing `Original error: parameter 'GridBased.use_astar' has invalid type: expected [bool] got [string]`.     Updating warning that occasionally crashes test on rclpy QoS updates    Adding some context in service publisher timeouts    Future:  - Switch to cyclone in CI?  - debug gazebo crashes  - rcl lifecycle / rcl rmw crash debugging with eprosima  - gazebo gzserver rather than the .so file call  
ros-planning/navigation2,1898,2020-07-30T22:05:35Z,2020-12-16T03:20:51Z,False,none,71561c4f056cd7eab83f9f736fa1060458e13e69,67,25,35258e6f82b7d92de0f829b292921196e002737a 3af1a34426feb5f9cac3fb8f056fbbef85f46e16 695bcb52d0c8988a1792eda535c3f24d95fccdf1 dbc0425dc62ebdf5d3f44a2a4b73de1a273a7a67 dcc2e6e9c2217ce52f7496dcbe74c633549bda67 600a825d328ef756a4ad3da34e50eff0d88b0a1c 6d9cc949d1f68d47e11b43598ed775d2880bb601 815b89bc563397ff67edd592e9d7729f4a4bb2c3 65216c5048483079a578d1d34cb6708e6aaec3fb 7d1b5f50ebdd847f9475cf4e172de2b3307724e6 82a53435a72efc5a33dd16bbb9d0fa475235491f d7c5ced90268acd8c3cd8b35876ac3081412c03e eed3a2ccdf1595be36e88890c33582c2b5c33b35 816d26d25ef828d70bd78683c6aa59aa61c5a860 8719439a88bccc05ac9380579e8508500d03520f bf1465cb4a55540ca7442a25b5b4d20a09d32ba2 864c2e0dd3210da179a7cb92335616857b63423b ca5d2cdc3ce9a5bf06f958602072bf543ec66fd8 1b9a97cbdf484485a4673c1a89d86c6fba35c269 4314cf359b6ceb01616d22e619a5bb1551af80e9 4cfb6c0528e4fb6fb50caf3bb2d3c0cb21339451 37b1de7f9e69c71d66646dda1dd7829769d22efe a55f4749edf6076bc29ddf9173f6c40962df1fd6 34e3f67f98eafb17915fdff215aa9c40f73f2cd4 775b8e11208e14298e058e5a54f1c37cfd098d8d,, WIP Nav2 3D Map server support,nav2 map server for 3D #1787    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1787 |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | N/A |
ros-planning/navigation2,2164,2021-02-02T18:43:51Z,2021-02-09T02:03:04Z,True,2021-02-09T02:03:03Z,621d516245aedb573fc29ac0e500ae568c95da78,4,5,61bd289824ef83ac064bacb06d5508df8e312395 a287093c269d0cb5c868e39a84af6dc09e66a4a0 914d37bc08ac81e48f360cc71500bf07d6899042 80481c318d21f6e85cfe0127557a7b71fbfaae05 92623a06f66bc4e0a550757cea6eaf918b56ba45,,Update cost scaling heuristic to vary speed linearly with distance,  ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2152  |  | Primary OS tested on | Ubuntu 18.04  | Robotic platform tested on | Turtlebot simulation    ---    The new cost scaling heuristic will scale the speed linearly based on distance from a lethal obstacle.  Updated heuristic:   ![CodeCogsEqn](https://user-images.githubusercontent.com/10333131/106646287-921f2c80-65b3-11eb-9d24-078fe0a6a99f.gif)    Earlier velocity decreased exponentially since it was based on inflation cost which is computed using an exponential function. This called the velocity to drop significantly in highly inflated areas even though the robot could safely traverse at a higher speed.    This updated heuristic will allow the robot to move at a higher speed in inflated areas will ensuring it slows down if it comes near an obstacle.    **TODO:**    - [ ] Documentation needs to be updated to reflect the new parameters    Signed-off-by: Shrijit Singh <shrijitsingh99@gmail.com>
ros-planning/navigation2,2172,2021-02-06T00:43:49Z,2021-02-09T22:19:12Z,True,2021-02-09T22:19:12Z,d3bf4ff895e47d79be2cab12bac0c1a45027c93f,1,1,84b88fe7ea658098542a9c53822216b33b8197ac,,CI resolution Part 3,#2158     Trying to see if changing the default RMW will fix the issue. I'm seeing failures in the action server now with goals failing which makes me think now this is just a performance regression that is overloading our CI container limits
ros-planning/navigation2,2152,2021-01-19T23:48:45Z,2021-02-11T01:29:02Z,True,2021-02-11T01:29:02Z,6093b4f059d90df561e15b0062650ce60cc298cc,17,17,b92561bd8deba1589f5739ffffd71594adadc2f4 577c48d435572815732d149cc53d42a38f4abb7f 95c263199da45363bb9083853b46ebcd4be63815 971a7b42b4235ca5898f71c519a90d5ebb75a1eb 686bb60bcc235ef7ff669252204459c0af92359b aa1fb9cb55266044bb212f832dc6c2b3bba3d670 8d1df6914dbe192fa7a88520d724a3afa938bf74 4d9c0c7b9fca96adaf840b1cdc3ae217715b2c0d 2e75ebd86e527005c2ffecb7f8074fd9d1ae60e1 0dd948cede73b48fc392a2a9d3e013eef1e9a32b a674bd1a00a0dc80715f33089c47339cb55d465a 28ce9b5b615e7b850f6517e67271af500a2ffc8f 0bfedd050d56145d4c06c48a3722c6e96420a6c5 14035c0397084b8756d88b2f607606683a7bf811 fd3f93b61e774cc4ecfbdd26c414e6d1b3fce4c7 98d1c8c537f55bbc5175babc0a7f6f312521e73a 621d516245aedb573fc29ac0e500ae568c95da78,,Regulated pure pursuit controller,Introducing my new variation on the Pure Pursuit algorithm: Regulated Pure Pursuit. The tl;dr on it is  - Introduces new heuristics to adjust translational velocities proportional to dangerous situations like close proximity obstacles or high curvature path changes -- also drastically reduces overshoot and on average does a better job at path tracking  - Collision detection proportional to a forward projection time on the pure pursuit arc  - Configurable for Pure Pursuit  Adaptive Pure Pursuit  and Regulated Pure Pursuit  - Additional settings for slowing on approach to smooth out goal state transitions  - Visualizations of the carrot marker and collision arc  - Runs at > 1 kHz    An _extremely_ early partial draft of the paper can be seen here for general motivation and description  [here](https://github.com/ros-planning/navigation2/files/5839285/IROS__CASE__ICRA__ISRR_2021__Regulated_Pure_Pursuit.pdf).    Also added a new parser to the rewritten YAML functions so that you can remap full-path parameters when you need to change specific values that have multiple uses (like `plugin`)    TODO  - [x] rotate to goal if param on  - [x] unit and integration tests (>=85%) https://codecov.io/gh/ros-planning/navigation2/tree/fd3f93b61e774cc4ecfbdd26c414e6d1b3fce4c7/nav2_regulated_pure_pursuit_controller  - [x] ~interpolated distances (optional)~    Needs   - [ ] testing on real robots (@fmrico)   - [x] review (@shrijitsingh99)  - [x] Configuration guide  migration guide  video  plugin list (@SteveMacenski)  https://github.com/ros-planning/navigation.ros.org/pull/132  - [x] Update tutorial on PP (@SteveMacenski)  https://github.com/ros-planning/navigation.ros.org/pull/132  - [x] what to do with PP in the tutorials? Remove: tutorial updated with git hash of last simplified version   https://github.com/ros-planning/navigation2_tutorials/pull/22
ros-planning/navigation2,2183,2021-02-12T03:20:07Z,2021-02-12T03:20:16Z,True,2021-02-12T03:20:16Z,0dc24782b0804ea766300784fb76528ed5b9c6b6,1,1,2ed6d25514e50a7118cfb137aad39cf83c87cb80,,Updating example yaml to include extra params in RPP controller,
ros-planning/navigation2,2182,2021-02-12T03:09:51Z,2021-02-12T03:21:39Z,True,2021-02-12T03:21:39Z,8dcfe04845cac04a58dd8199411189ebc164427f,1,1,abffcc01faa08300f0300bdb9f54ad6e1fdd59b1,,Fixing control_frequency to controller_frequency typo in RPP controller,Thanks @shrijitsingh99 @fmrico for finding this so quickly. Always 1 bug after release :-) 
ros-planning/navigation2,2184,2021-02-12T10:10:58Z,2021-02-12T20:17:36Z,True,2021-02-12T20:17:36Z,4e52bad8d7b8add98291472c114ea0ec054bcd1b,2,3,ef79f3972fc12d62c12878534d2e0315c82b3724 131a2a10505c069d52cddc964775c025996a5673 a702ee23e6dd031168ed1f9a81d1631a99ad91af,,Write doxygen for navfn,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (#2155 ) |  | Primary OS tested on | - |  | Robotic platform tested on | - |    ---    ## Description of contribution    * I added doxygen for navfn  
ros-planning/navigation2,2059,2020-10-27T17:31:56Z,2021-02-16T20:33:07Z,False,none,c35d1c5819470012715786cab61235157d3352a4,6,8,b04c94c06797f87b1781e1ac335a3e22731f6693 472bc59b737f33e250498ba3db56e025aaaa6c5f 35e20b988519ddd639c6224d730801cd53675207 912fb25faf7665dbd0301c456d1db9ade90d5c23 6f145ab5509ee563c15b4679c788bf8dc5f24cad 6fed84c0434ef4dfef46c2e7928f71137733d633 bcb569773449e8058550badaa57964bce541a775 40cd0506a74bd6eb7cb836b9002f93a0e67445e1,, WIP 3d static layer in costmap_2d,nav2_3d_static_layer is a costmap_2d plugin  which is designed for add the information of pointcloud2 messages to costmap.    The plugin will receive pointcloud2 messages from map server  and convert it into 2D costmap  the convertion process is realized in octmap  and the pc2 information is filtered through voxelgrid in PCL.    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1787  |  | Primary OS tested on | Ubuntu 20.04 with Foxy|  | Robotic platform tested on | None |    ---      
ros-planning/navigation2,2188,2021-02-17T19:18:32Z,2021-02-18T16:56:03Z,True,2021-02-18T16:56:03Z,08f52cfd48f636443d337af486759a61bb3f5f4f,3,1,c0e1f01e383b56236ce7df4d58fbf0b9ae9b62f5,,expose dwb s shorten_transformed_plan param,#2185 
ros-planning/navigation2,1871,2020-07-14T07:00:36Z,2020-07-16T22:00:50Z,True,2020-07-16T22:00:50Z,9f1d8a123dac4cc7407650fbf0b906560b7b2ed2,3,4,b49d40b01664e2634e376c7e3e5c59e795935c32 831f884dda1aa87dc79375caf1ee8c4fba6475b1 04272fb987e7cf0bee222c4838b1239f2b29bc53 f2a8165c50e8c5c88c7cdaf46015da560c96a9b9,merge,Added transient local subscription qos profile parameter to map saver,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1864 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 simulation |    ---    ## Description of contribution in a few bullet points    Added parameter to map saver that configures it to subscribe to the /map topic as transient local.
ros-planning/navigation2,2199,2021-02-22T03:57:54Z,2021-02-23T03:57:38Z,True,2021-02-23T03:57:38Z,565c294ae6529dd8f21c1a690813f304fbd1759b,1,1,7ec8b32e08a7f779720b10d07811f54b87f765fd,,fix broken links in README,## Description of contribution in a few bullet points  minor readme fixes. Update 1 broken link and delete reference to unknown README.md markdown section.
ros-planning/navigation2,2159,2021-01-28T09:24:34Z,2021-02-24T06:51:52Z,False,none,5e3dfe33ea3f7b0d4c9ffa94926aeb50bb82e5f7,1,1,497758fbb94b2a193a5383d08eb3091c0f7c9f1e,,smac_planner fix goal checking in getAnalyticPath ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2040 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | my own simulation stack |    ---    ## Description of contribution in a few bullet points    * Added condition to exclude goal from poses added through analytic path expansion  because the goal is added always at the end and adding it twice causes infinite loops in the path      
ros-planning/navigation2,2201,2021-02-24T06:51:32Z,2021-02-25T00:22:48Z,True,2021-02-25T00:22:48Z,4ffc701b6333af41bea20ba39b0ac2fde7ba3257,1,1,e7f67759d1f00ee703b18c458afcd14071fd27a0,, SMAC ensure the index also isn t the goal s continuing 2159 ,See #2159
ros-planning/navigation2,2202,2021-02-24T06:52:49Z,2021-02-25T00:22:56Z,True,2021-02-25T00:22:56Z,63b9510ddf16abe2b6cc0f21c4d4824ed4e99331,1,1,17107bdfae222e04593723be4b642f0265f5848d,, Smac Backported for foxy 2201,
ros-planning/navigation2,2198,2021-02-19T20:29:25Z,2021-02-25T00:23:38Z,True,2021-02-25T00:23:38Z,740afd5a7ab004f5922e7822db41fa1c61e155ed,2,2,d35289163a7e53063d9676b2c7ea21800dbca20c 0484c79694f240a4a1a2209f859670033b124118,,Adding RPP to metapackage xml,
ros-planning/navigation2,2203,2021-02-25T00:12:42Z,2021-02-25T19:25:01Z,True,2021-02-25T19:25:01Z,51ad0f19d09333416c63e1f624294cded7f872d3,2,2,d3d5a095d4c221189c3a3002e77bf648fddc34c1 3a53c485545a20e33b4c7bc7ab8b1c61a8064e80,,Fix recovery action collision check ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2189  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Turtlebot simulation|    ---    ## Description of contribution in a few bullet points    Fix collision check in back_up.cpp and also spin.cpp.    ## Description of documentation updates required from your changes    None  ---  
ros-planning/navigation2,2193,2021-02-18T20:21:42Z,2021-02-25T19:25:14Z,True,2021-02-25T19:25:14Z,af8a857699c6f9f64cfccb7d98b60230ddc3ee94,2,2,2d96e4c4dcb3026e3d9f343bbeb1026dfc524e19 fa521f63bd1835484e0a4026c84469620e7259f9,,Fix recovery action collision check ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2189 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Turtlebot simulation |    ---    ## Description of contribution in a few bullet points    Fix collision check in `back_up.cpp` and also `spin.cpp`.    ## Description of documentation updates required from your changes  None
ros-planning/navigation2,2205,2021-02-25T23:34:16Z,2021-02-25T23:44:47Z,False,none,dbc6e46402f8b3e4cde8aaffbabd5cc23e897033,1,4,2d96e4c4dcb3026e3d9f343bbeb1026dfc524e19 fa521f63bd1835484e0a4026c84469620e7259f9 846798beabc46633c05a6966c14c6c6fb3bcd384 ae672fe748136213fccfc20e241cef7cc0cfdad6,,Fix back_up action name mismatch between BT node and BT action ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |Turtlebot simulation |    ---    ## Description of contribution in a few bullet points  This fixes an issue in Foxy where if the "back up" action is used in a behavior tree  the BT node will fail to initialize.    ## Description of documentation updates required from your changes    None  ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,2206,2021-02-26T01:30:51Z,2021-02-26T01:33:20Z,True,2021-02-26T01:33:20Z,52abee596117441311ce8fcb625fc2504e345ea2,1,1,622d6e9962ed9a5f41f23eaa7883f85d757bf1f6,,Fix back up action behavior tree node name issue,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Turtlebot3 simulation |    ---    ## Description of contribution in a few bullet points    Fix an issue where using the "back up" action in the behavior tree caused the bt_navigator node to not initialize.    ## Description of documentation updates required from your changes    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  
ros-planning/navigation2,2208,2021-02-26T16:49:12Z,2021-02-26T20:03:36Z,True,2021-02-26T20:03:36Z,7e0c83b4a5985b20189baa3f84d20f47fc40cc6e,1,1,32d4d04eaf8d7ee3fbeb1a4e176ac0d6ddacf943,,Install test_updown to lib ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |https://github.com/ros-planning/navigation2/issues/2200|  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Default test launch |    ---    ## Description of contribution in a few bullet points    * Fixed installation to `\lib`  
ros-planning/navigation2,2209,2021-02-26T19:28:49Z,2021-02-26T20:07:22Z,True,2021-02-26T20:07:22Z,8899b66ea1bdc306c36b4488c29f8fa849dfe67a,1,1,e1432fa76c9dfcc2803ffe0058534f52797ab3db,, RPP Remove optimization check on carrot incorrect optimization,If the carrot is 10 meters away at 1m/s travel  then checking this is bogus. Stopping should be based on the max time to collision parameter. While the carrot _should_ be always open in a path  the stoppages might be really preemptive before a replan if we do this. 
ros-planning/navigation2,2149,2021-01-13T16:50:49Z,2021-03-01T19:02:11Z,True,2021-03-01T19:02:11Z,992deb0ff740e60189234455ac8c372fcaf2759c,16,4,18a76505534a57927f21f3e257d898c0ea2393bf 497ec06f24511ec0e11a7d0cb90a93a8f3945dd3 164be2e84b908f6c3808b83e13a39c5dad6ce517 1b81735f7d14a0a4b18ac95a631b0d069d79f009,,Add support of absolute limits to Speed Filter,According to public [discussions](https://discourse.ros.org/t/nav2-speed-restriction-support-now-available/18068/2)  we are choosing the following solution to support speed limits expressed in absolute values:    > _Solution #1:_  >   > Encode maximum linear velocity in a filter mask. Then restrict maximum angular velocity in the same proportion as it was changed for maximum linear velocity.  >   > For example  a robot has 100 m/s max linear velocity and 20 rad/s max angular velocity allowed by its construction. Robot enters in a speed restriction area having 15 m/s speed restriction. This means  that maximum linear velocity will be restricted by this value  and maximum angular velocity by ( 15m/s / 100m/s ) * 20rad/s = 3rad/s. This will be a restriction of maximum angular velocity for this robot.  >   > This solution is similar to restricting the speed in a percent value approach  but it is suitable for heterogeneous systems  where we have different kinds of robots.    This following PR implements this solution.    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1263 |  | Primary OS tested on | Ubuntu 20.04 with ROS2 Foxy (rolling build) onboard |  | Robotic platform tested on | Gazebo simulation of TB3 |
ros-planning/navigation2,2211,2021-02-27T01:38:27Z,2021-03-03T00:57:21Z,True,2021-03-03T00:57:20Z,2d88d14b1dd9f678e9b95dd50c5db774667cd62e,2,3,f59d8d5b8cc80c38b2040f57a52d668cab82c86d e911b731357a8e3862e8713a6e8967e9f8abb695 8dbec958ec00edea48dce38b68c6349df4f855ea,, RPP Remove dependency on collision checking to carrot location,CC @fmrico something to test on Monday    https://github.com/ros-planning/navigation2/issues/2210
ros-planning/navigation2,2212,2021-03-01T12:01:53Z,2021-03-03T18:22:49Z,True,2021-03-03T18:22:49Z,64bf1463fe9fc92f99f8722624a4920d578b661f,1,1,05f0017dd97c780142f768e74ada3e56cad8b4af,,Export nav2_bt_navigator library and dependencies,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | |    ---    ## Description of contribution in a few bullet points  * Export the nav2_bt_navigator library to allow inheritance from it    ## Description of documentation updates required from your changes    ---    ## Future work that may be required in bullet points    
ros-planning/navigation2,2213,2021-03-03T08:57:38Z,2021-03-03T18:23:02Z,True,2021-03-03T18:23:02Z,4dbb29245db181df12e562832d3bccb151402545,1,1,93e0726316b016fd7c0ae098726ffd206cc2e7c3,,Export nav2_bt_navigator library and dependencies,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | |  | Primary OS tested on | Ubunto 20.04 |  | Robotic platform tested on | |    ---    ## Description of contribution in a few bullet points    This has the same commit as https://github.com/ros-planning/navigation2/pull/2212  but targets the main branch    Contribution:  * Export the nav2_bt_navigator library to allow inheritance from it    ## Description of documentation updates required from your changes    ---    ## Future work that may be required in bullet points  
ros-planning/navigation2,2215,2021-03-03T16:23:44Z,2021-03-03T18:27:51Z,True,2021-03-03T18:27:51Z,41996f409fcd7b005cf779e0376273cee3de6d76,3,2,0d4cda60a64c27b284fb1b9f1858554bf1f2ad2c da8ae4de13480fddff659fa31df19f6d9027bb39,,Optional transient map saver,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/pull/1871|  | Primary OS tested on | Ubuntu 20.04 |    ---    ## Description of contribution in a few bullet points    * Same changes as https://github.com/ros-planning/navigation2/pull/1871 but keeping default foxy behavior unless `map_subscribe_transient_local` is set to `true`  * To save the map you have to set the parameter to True via `ros2 run nav2_map_server map_saver_cli -f ~/map --ros-args -p map_subscribe_transient_local:=True`
ros-planning/navigation2,2217,2021-03-04T17:46:15Z,2021-03-04T17:47:59Z,True,2021-03-04T17:47:59Z,a5a77722bc9a926cc27c386f192f1256a9c697eb,1,1,bcc5b1e90b7c1588df793f251812537195051b12,,Updating launch SLAM file for new Node fields,
ros-planning/navigation2,2219,2021-03-05T00:38:04Z,2021-03-05T02:43:52Z,True,2021-03-05T02:43:52Z,936b163bcd25377012ba123082b78afd0b82f4ee,14,3,bcc5b1e90b7c1588df793f251812537195051b12 7e42c9fba62bc85d6cbac72da17b824d8e1de57b ec0ebe4e2d139a1eebdaaf6251e12611497bc8d3,,CI Fixes Part 4,Working on CI flakiness  in particular around the costmap filter tests right now #2158 
ros-planning/navigation2,2214,2021-03-03T15:11:09Z,2021-03-05T18:12:24Z,True,2021-03-05T18:12:24Z,f522f631a9b8939fd07a0de58ebc76d2371e9c1e,3,4,02ca5a6877b9b5af25c0e95cd870306db816155d a9142a4275b7063bd2756a0f5ddf46d4128155c8 7fe1248f6c4c5cec1635604316153ed3aa099d13 437482615e96d2e917cdd19ca3508f0d6ab417b0,,If provided param file has no slam_toolbox params don t forward it,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/2196|  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | simulated turtlebot |    ---    ## Description of contribution in a few bullet points    * After https://github.com/SteveMacenski/slam_toolbox/pull/347 params-file is automatically passed to slam_toolbox  these changes make sure that only happens if the params_file has `slam_toolbox` parameters.  
ros-planning/navigation2,2228,2021-03-09T12:49:50Z,2021-03-09T17:55:18Z,True,2021-03-09T17:55:18Z,c054cddd1b134cbf97892cbecc624153ceaa503b,1,1,0508798ed368dc6bda85a13a6723b9caa2f3fcf8,,Fix typo in nav2_regulated_pure_pursuit_controller README md,I figured I wouldn't use the fancy feature/bug fix template as it's really just a documentation fix...  Hope it's alright and I didn't need to create an issue for it :)     Thanks!
ros-planning/navigation2,2227,2021-03-09T02:51:55Z,2021-03-09T19:09:26Z,True,2021-03-09T19:09:26Z,ac66de27a3da9d19deefa3af0b7d8c3cf00eaaf8,1,3,1ba3770a6bdb2012a97570886d9dd9ab56ca82c3 13d03eda2a97279fd8ee200bb6167d8fbab1a553 fb894a54a840a4f1da6636bb51c2391852de5eb1,,Rviz state machine waypoint follower updates,#2225     Enables cancellation in waypoint following mode and removes lifecycle state transition options in the other active navigation state (shouldn't have been there)
ros-planning/navigation2,2231,2021-03-10T23:47:45Z,2021-03-11T01:20:00Z,True,2021-03-11T01:20:00Z,24f0bc6e47d4a0e76d46bc99bc9fb3371707c18b,2,1,0e2898025af5620a37da486b98ae7eb26fa82435,,adding precomputations of trig and offsets for SMAC planner,Speeds up planning by 10%!!!    https://github.com/ros-planning/navigation2/issues/2014
ros-planning/navigation2,2232,2021-03-11T01:16:57Z,2021-03-11T18:54:32Z,True,2021-03-11T18:54:32Z,a9aa44923b901b4ce736c34f1e2a4092b816fea4,1,1,0dc328ee563bd34da0e3ae710c3dd32112945f4a,,fixing smac collision on footprints,https://github.com/ros-planning/navigation2/issues/2207
ros-planning/navigation2,2235,2021-03-11T21:52:58Z,2021-03-11T22:43:42Z,True,2021-03-11T22:43:42Z,a31fcf224f58f45321d6105cf834632717d401ea,3,1,1d0d484746a578be7bede16ffca824ad1afb80be,,goal blackboard ID variable,https://github.com/ros-planning/navigation2/issues/2234    Also removes the parameters files in `docs/`  at this point  the website configuration guides at navigation.ros.org are far more comprehensive and we have not regularly been updating this one.
ros-planning/navigation2,2237,2021-03-11T23:58:51Z,2021-03-12T00:52:54Z,True,2021-03-12T00:52:54Z,afd0d8421e3d902169d2920873c91ebdd7305e26,11,1,5f33350579a956ed8af1b5f807a7730d2809f44d,,adding doxygen for nav2 utils,https://github.com/ros-planning/navigation2/issues/2155
ros-planning/navigation2,2241,2021-03-12T23:30:26Z,2021-03-13T01:09:33Z,True,2021-03-13T01:09:33Z,b654b0966d2d7646120590d137a9c11c9b9d8241,5,1,8ba47fec5e2ab6ca7d69d7ee9d0758c6d3846813,,adding doxygen to recoveries,https://github.com/ros-planning/navigation2/issues/2155
ros-planning/navigation2,2244,2021-03-13T01:15:39Z,2021-03-13T01:15:56Z,True,2021-03-13T01:15:56Z,b91f1ccc3188a9192b0783cdd816bb44badb5ff6,1,1,bc6542d3c1400f63b33616aabbd5544e0634115b,,Adding maintainer checklist to Pr template,
ros-planning/navigation2,2236,2021-03-11T22:34:43Z,2021-03-11T23:28:59Z,True,2021-03-11T23:28:59Z,27db9a49019907cb5e0d75b2fc5ebfe04071159e,10,1,de9ac209dbf7bf95a02f0e6a2d643f82959bcbdd,,new behavior tree node for triggering just once,Per https://github.com/ros-planning/navigation2/issues/2197    Requires  - testing DONE  - migration guide  nav2 plugins list  and param guide updates DONE
ros-planning/navigation2,2194,2021-02-19T00:40:48Z,2021-03-14T20:41:51Z,False,none,fb5543932b21af6e92b509dd25279cff1c27adeb,5,10,ff271799fb3ac3ab62b087572cb54126a2d0d527 03847c2d2571d77dd55b8112c82d5908b53e68e5 dac19bf2451efd097036911333b364bbcc8c82bd c7f71ff5b04d3ca2cc03d02e3e92546fefd2b00c 01fcbb655fee6962073c2bd363cdf4abf8684bdc f032440b17fa1cbeef25e26489092f2a11106141 6208937b110e08ea431ba1b96eb250e0b17253ae a9707cb8c93050c60500222dda75c24fb1bb0b38 db2cbc53c91faa84da3024de2367c79ecb2e212a ec76858f22e07bba04b49854a4313edbefb16dcd,,Improve NavigationToPose action feedback,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |#2154 |  | Primary OS tested on |Ubuntu 20.04 |  | Robotic platform tested on | Gazebo Simulation of Turtlebot3 |    ---    ## Description of contribution in a few bullet points    * Improves feedback of the `NavigateToPose` action server by adding:      - Better distance to goal estimate: by integrating distance between planned path poses.      - Estimated time remaining: by dividing the distance remaining by current robot linear speed (using smoothed odometry).  * Updates the feedback in `.action` file for `NavigateToPose` action server.   * Adds a utility to the `nav2_util::geometry_utils` to calculate path length.  * Adds simple unit testing for this function.    ## Description of documentation updates required from your changes  * Documentation for `.action` needs to be updated.    ---    ## Future work that may be required in bullet points  * Currently the time remaining largely ignores the target yaw of the robot. It may be the case that the robot needs more time to rotate to the correct heading.    
ros-planning/navigation2,2243,2021-03-13T00:00:32Z,2021-03-16T16:41:09Z,False,none,24cc5f2aca232c995c75e45e62ea13bf1a21969c,3,2,a66ab43564ef83023597a974c1f7bf4d53700903 8be06372e6eeee8e6699c4a4431a0a213d9fc891,,Use different param name for slam_toolbox param_file,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/2240|  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | simulated turtlebot |    ---    ## Description of contribution in a few bullet points    * Use renamed slam_toolbox param-file
ros-planning/navigation2,2239,2021-03-12T12:11:27Z,2021-03-16T18:46:57Z,True,2021-03-16T18:46:57Z,e25da923d2a878e05f610931fa8b0ac5d591fb1b,16,3,0968c991a90ea8afaefa754a930e346b069c3cab 94ce3f4698770367a4c0b566823529b50281c750 39bbc0956be6456631d0451624cee2cec0751efc,,Forse ROS2 parameters to be static to meet RCLCPP API changes,This commit fixes build failures with latest ROS2 releases appeared due to changed and deprecated RCLCPP API.  In RCLCPP API [update](https://discourse.ros.org/t/feedback-required-should-parameters-be-able-to-change-of-type/18319/2) all ROS2 parameters are treated to be a static by-default. This leaded an impossibility of using the `declare_parameters("with_one_argument")` method without knowing a type of parameter. Additionally  these changes forced all static parameters by their design intentionally to be initialized with some value.    This commit adopts Nav2 stack parameters for the changes from above and fixes related tests.    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2220 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | TB3 simulation in Gazebo |    ---    ## Description of contribution in a few bullet points    * Adopted `declare_parameter()` direct calls for static parameters.  * Splitted `declare_parameter_if_not_declared()` routine into two implementations: first will be working with definite input parameter values  second - with defined type of parameters.  * Adopted dependent `declareParameter()` and `get_plugin_type_param()` routines.  * Switched to exception handling in some places which have a logic of processing not-defined parameter values.  * Added routines description in `nav2_util/include/nav2_util/node_utils.hpp`.  * Fixes testcases.
ros-planning/navigation2,2250,2021-03-16T18:50:15Z,2021-03-16T18:50:31Z,True,2021-03-16T18:50:31Z,cfb07ce54c56b69b385d8d51259926e527082c84,1,1,5b125bf7ded4573d39b2afbb6cc93a192c0a3218,,Update BT XML README md,
ros-planning/navigation2,2245,2021-03-13T13:01:13Z,2021-03-16T21:14:18Z,True,2021-03-16T21:14:18Z,e2a7fde616540151481b850ed511a2307357e0b3,2,4,dfb4d36905de93c6d2390afd4d6ed00d25a791fe 1be639d54e694264851cd128f173cde2a8cbdf2d 9a5f825354a221d7001459a77df9a7e32e265fd5 7a3dd3cd5f9fbe0ca68d4736c787c3bc996361bb,,Fix SingleTrigger BT node,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | - |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | Gazebo TurtleBot3 simulation |    ---    ## Description of contribution in a few bullet points    * Fixed SingleTrigger BT node tick function  earlier is failed to execute its child node.       #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page     
ros-planning/navigation2,2252,2021-03-16T21:48:12Z,2021-03-16T22:37:08Z,True,2021-03-16T22:37:08Z,d8bd3c5ea8d196ad7f0bace1edaeaa8e55f06944,13,8,1929b07ef45bafabbbfc6b3e6121c2bceeaa4757 ad933980edbe6c0b5d6acd7f5db44f041def8feb 338854cfb22c52a41e33fadc05a57537ba1fa593 590b50ad5b768e7344e6c830685ba78c09536e46 96ef092e379c9a1373c960142bcfbdf353e7378c f3d3a52bf5b44c96cde9be33de9a8b451419eec7 68fc5f006ca36fabc2d421993047f091b8b1db0d 4b186a7c502a8f582b6e04076cce3b04f7e9e970,, Controller plugins include goal checker when computing commands,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2223 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Sim TB3 |    ---    ## Description of contribution in a few bullet points    * Added a goal checker pointer to the controllers so that they may access its information while computing commands  * If it returns true  the controller could use that information to halt   * Add function to goal checkers so that a plugin can access more particular information  like the XY vs yaw tolerance met to rotate in place  or robot "done" speed requirements so that it can dissect more information.   * Use these getTolerance parameters in RPP rather than any parameters duplicated across it  * Second Pr  something weird got tripped up with Circle causing it to stop triggering.     ## Description of documentation updates required from your changes    * Add to documentation migration guide this API changed  * Remove parameters duplicated now removed from RPP in config page    ---    ## Future work that may be required in bullet points    ? N/A ?      #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page     
ros-planning/navigation2,2247,2021-03-16T00:04:01Z,2021-03-16T21:47:29Z,False,none,6f564040933d6a57cb2acab0850abc65853cc9bb,13,8,1929b07ef45bafabbbfc6b3e6121c2bceeaa4757 ad933980edbe6c0b5d6acd7f5db44f041def8feb 338854cfb22c52a41e33fadc05a57537ba1fa593 590b50ad5b768e7344e6c830685ba78c09536e46 96ef092e379c9a1373c960142bcfbdf353e7378c f3d3a52bf5b44c96cde9be33de9a8b451419eec7 68fc5f006ca36fabc2d421993047f091b8b1db0d 4b186a7c502a8f582b6e04076cce3b04f7e9e970,,Controller plugins include goal checker when computing commands,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2223 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Sim TB3 |    ---    ## Description of contribution in a few bullet points    * Added a goal checker pointer to the controllers so that they may access its information while computing commands  * If it returns true  the controller could use that information to halt   * Add function to goal checkers so that a plugin can access more particular information  like the XY vs yaw tolerance met to rotate in place  or robot "done" speed requirements so that it can dissect more information.   * Use these getTolerance parameters in RPP rather than any parameters duplicated across it    ## Description of documentation updates required from your changes    * Add to documentation migration guide this API changed  * Remove parameters duplicated now removed from RPP in config page    ---    ## Future work that may be required in bullet points    ? N/A ?      #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page     
ros-planning/navigation2,2253,2021-03-17T00:16:02Z,2021-03-17T01:59:54Z,True,2021-03-17T01:59:54Z,6c46c2e69af096e59b65c61b139b0da3bb7d8088,2,1,32695e8c5a4cbebb0340d286b6172d28a9fc1063,,adding partial doxygen coverage for AMCL,
ros-planning/navigation2,2254,2021-03-17T13:40:53Z,2021-03-17T18:12:38Z,True,2021-03-17T18:12:38Z,3bf1f7a93d740c54b4c7ef7fc6dd914175bf46be,31,1,262775048d7a774d8946e1b20d06d76c85b48d05,,Add doxygen coverage to nav2_behavior_tree,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  #2155 |  | Primary OS tested on | Ubuntu 20.04 |    ---    ## Description of contribution in a few bullet points    * Added doxygen coverage to `nav2_behavior_tree` package    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page     
ros-planning/navigation2,2257,2021-03-17T23:14:14Z,2021-03-18T00:07:40Z,True,2021-03-18T00:07:40Z,3befe9aa1c2546f2178c7ced6fe55fc3ba56642a,2,1,81f7351b53a45612bf61410b28fb9405922228ae,,Add has_node_params launch utility,## Basic Info  | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | Addressing comment on https://github.com/SteveMacenski/slam_toolbox/pull/368|  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | simulated turtlebot  simulated TIAGo Base |    ---    Add has_node_params launch utility
ros-planning/navigation2,2242,2021-03-13T00:00:30Z,2021-03-13T01:08:55Z,True,2021-03-13T01:08:55Z,ed8f78ea65625e7a5035a85a8e92a18720abc483,1,1,0aca60fc857aeaeaaf2ebf8ead20c54fd9ccc163,,Use different param name for slam_toolbox param_file,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/2240|  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | simulated turtlebot |    ---    ## Description of contribution in a few bullet points    * Use renamed slam_toolbox param-file
ros-planning/navigation2,2259,2021-03-19T12:56:40Z,2021-03-23T18:38:43Z,True,2021-03-23T18:38:42Z,c337ac22e6af2b81f7b515a201a0e553084887e3,2,2,e4eb83b7d3e47087d5388112a50b910ffc8a1ddb 8ed97de8316e75128f2a6414e0c222cf8af4d11f,,Fix for inflation artifacts behind update bounds,This appearing when some layer is going after `inflation_layer`. More details are in #2051 ticket.  
ros-planning/navigation2,2249,2021-03-16T16:55:39Z,2021-03-23T20:44:23Z,True,2021-03-23T20:44:23Z,ae09b37e09efce9d674bd515b5d9db771e51ca51,12,8,7eee852cda12a883fb58e88a5cd8ec640712b941 ff28145581aff2063b50e8520ca7f1386afc7f1d 8374ed1ea6f31f8ecba3693eb63a0816dd09fd6d f27d6dd227b5e4e35e9079c5fd2f71e35d5d403b ef318500b1b9ec596b0abe7fc54ebb09b008a4a8 b170e25ca15410e8936b3beddfc335f4216c71fd 3f8abebf21fca0eba75e5a3f2d5656c56ccc0f46 059a939d3904f08cfb99e06123ec674f4a12eab7,,Planner selector,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    PR of the planner selector to be integrated in navigation2 main branch. With this BTNode we use a subscriber to enable the ability of selecting the current planner for the navigation.      | Info |  |  | ------ | ----------- |  | Ticket(s) this addresses   | [147](https://github.com/ros-planning/navigation.ros.org/issues/147)|  | Primary OS tested on | (Ubuntu 20.04) |  | Robotic platform tested on | (ROS Rolling and Gazebo simulation turtlebot waffle) |    ---    ## Description of contribution in a few bullet points    Deeper discussion in issue 147  but the main features are:  * reading from topics to select the planner  * support for default planner (as static input port)  * support to setting the name of the topic to support multiple planner selectors.    ## Description of documentation updates required from your changes    Documentation is planned to be added after the first revision of the PR.    ---    ## Future work that may be required in bullet points    * rclcpp::spin_some vs callback_groups    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  
ros-planning/navigation2,2266,2021-03-23T23:06:51Z,2021-03-23T23:51:04Z,True,2021-03-23T23:51:04Z,ed43bed86253961f2723bb38389e51cabf6e7ebf,12,1,834416819f880412cb062f0ef30ff8d30fcc20d7,,Controller selector,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    PR of the controller selector to be integrated in navigation2 main branch. With this BTNode we use a subscriber to enable the ability of selecting the current controller for the navigation.      | Info |  |  | ------ | ----------- |  | Ticket(s) this addresses   | [147](https://github.com/ros-planning/navigation.ros.org/issues/147)|  | Primary OS tested on | (Ubuntu 20.04) |  | Robotic platform tested on | (ROS Rolling and Gazebo simulation turtlebot waffle) |    ---    ## Description of contribution in a few bullet points    Deeper discussion in issue 147  but the main features are:  * reading from topics to select the controller  * support for default controller (as static input port)  * support to setting the name of the topic to support multiple controller selectors.    ## Description of documentation updates required from your changes    Documentation is planned to be added after the first revision of the PR.    ---    ## Future work that may be required in bullet points    * rclcpp::spin_some vs callback_groups    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  
ros-planning/navigation2,2108,2020-11-27T20:28:19Z,2021-03-25T19:16:10Z,False,none,fc43193bbc45063c0a01c40f6bf97bc055037ba0,3,1,7f74e12361b04674d9ffe4ce84eb24edacf1d6bd,,supporting multiple goal checkers,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    Supporting multiple goal checkers in controller_server and switch between them dynamically.  Motivation; at the current moment there isnt (AFAIK) any mechanism to update dynamically the goal checker or the goal checker parameters at runtime.    This pull request for main is a correction of the same pull request made for foxy previously (https://github.com/ros-planning/navigation2/pull/2098)    | Info |  |  | ------ | ----------- |  | Ticket(s) this addresses   | no associated ticket |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (gazebo simulation turtlebot waffle) |    ---    ## Description of contribution in a few bullet points    * This is a basic functionality to support multiple goal checkers in the controller_server (in the same way it is supported multiple controllers )    * This initial proposal uses a controller_server parameter to store the "current_goal_checker" (alternatively it could be in the FollowPath action request like it is the controller_id).    * It is provided with a "nav_params.yaml configuration" with a second "goal checker" to show how it is used. But that could be removed final pull request.    ## Description of documentation updates required from your changes    No documentation change should be required at (least in the c++ code)  - "documentation chunks" were copied from "multiple controller" support  for example "findGoalCheckerId"  ---    ## Future work that may be required in bullet points    * if the "parameter approach" is not convenient it could be replaced by an additional field in the FollowAction request  
ros-planning/navigation2,2258,2021-03-19T03:21:50Z,2021-03-26T00:09:56Z,True,2021-03-26T00:09:56Z,e13459441dd4895450b2f2073f73bf340823fcfe,4,24,30d3f95516ec167a4e9e2e45383bb8eada2cbe1f 59f525b0a59e6214a2a67015f000797386333cee 60e568cdb839747b54ede7f72df0441bbc9d305f 5c3ad37e43c05a0b6d3fd8a146b3696d4d13f800 3988d793dfb959e2fcd5f1cc0026eb960f5c8d2a 14f78079a70a1b5063baaf7c0a53564a9840fc1c afdff6143a83377720190cfbc38ada40b4a3e78f 23c6ebdc52893f9540d5c53b90de4d4b54ee372e 8d3f5431bbdb96550288fef5c3ecdd0b3ca9920c d6e1031c1876895aec9c08043e5e799fd905580d 6817c38899a8ad44427dbe03ffd9cfe91ca10eae 1b87504e234c9507b4b53be7bd8f3590e9532b16 458fb40a33c91d4ca9d47a73cff84d7e36a0a0d9 0dd0294c38b595d856a4c63e7ef5a5018f9d935b eac01a4dc465e032de77fcd0a6b44bdfb5d5303e 317e77ebc81c97214d64d27ec9c65a0d3b64c73d 610f3e7099a44c224a47a39ded8a3692351ba60b ab6917d3eadf541fbaed5c0dffee7d1d1641154e df7ffcbcbf7c2046b528674635ef19439c79a661 4c904d5173512cb48f103302e2e57cbcae0acaaa 333d5ad5fd9035907d422827df87c9e91843374c 55ca677096e3bafda1c16f3ed4da9b5cb2c72298 f504522a86590dfdf3410dfe6d4c570e0495d80c d177919bbfb9b416604a002271da7399e51ed5d4,,Reduce RAM usage in CI,Looks like CI debug builds are failing due to memory resource exhaustion.      ```  --- stderr: nav2_navfn_planner  c++: fatal error: Killed signal terminated program cc1plus  compilation terminated.  make[2]: *** [CMakeFiles/nav2_navfn_planner.dir/build.make:63: CMakeFiles/nav2_navfn_planner.dir/src/navfn_planner.cpp.o] Error 1  make[1]: *** [CMakeFiles/Makefile2:78: CMakeFiles/nav2_navfn_planner.dir/all] Error 2  make: *** [Makefile:141: all] Error 2  ---  Failed   <<< nav2_navfn_planner [2min 34s  exited with code 2]  ```  > https://app.circleci.com/pipelines/github/ros-planning/navigation2/4915/workflows/83d36fb8-002d-4b0b-b945-5b1e85258ff1/jobs/18184/parallel-runs/0/steps/0-117    Perhaps the increased doxygen coverage is pushing things over the the edge?    This PR includes these mitigations:  - switch ccache from the ramdisk to tmp directory 
ros-planning/navigation2,1855,2020-07-07T00:30:14Z,2021-02-12T19:37:08Z,True,2021-02-12T19:37:07Z,79fcb779090791cc92ca770574bc91bb261d4091,26,67,a9a6cafcee397d5ea415b62b45009db62502c5cb 6aaf8f4322e2ccffdb857cfa66bf6fb64410b662 cc27817666ae54f5836b6206a6749bc75d8a9199 57ef361309161ee3ee3ba99b16e8d03584472bb3 dc351d6cd5caba0117d9bdfab194b24841d3f9fc 714c7ad850f41c3954187ec92f0c12d70ac5b709 fb950b2a7ce3641c35ef70019e5bc856d2cbccba d48915f491ba0e08fec928ba3eedd8618bff3f55 d257edd0bfc43a0b4c53ab91ad4c63a661051ce8 d7a65725f35ec2476b445454ba8df4628f3850dc 7af1f8231fe3d99d411e4e93d7ebf7ab9d96a9e9 bd4929b450696d7fc6c674d1a7a95271139c71e1 b37f357e8675aa5903dbc0ca5852e751c812f6fb 12edd2cb48967444d898a3d952c4d107da4931f1 e7ad19fcbe38734d8fd5bc842b75895141c50c3d ed25c936533bdfd3ae577ab7f763fdb43ac89071 0b550414a38806f9ef4c7192df10f962a92dd709 0151db2fee302a8ae6533b57e3b7f26052c71eff 1aba9802a222413975d101009c70f084e6d4a904 89ea257dd31b8485c555ec73c7464c09b3d84083 bd746a80613ea332d15b251ad35c4573c410d823 0b31314b53099953d73e268a445a4ca61c9e51e7 538d13a597fe147916beef070249370e3f42a29b 3bd1e3d4b81dcf7464b8ec357d69417a2bcb2fe0 d571bd2f904e739d6c61a80f7293e64887bcd6b2 458bd059a3448b6907c31fa8923f8781afac9081 fd7b2e203435e67dfcf5a747c888dc9948b72266 dab14f0d97def606d6508ec6efd94413d537d32f 68438aa820b36857e857dbe653508254f3f7acf5 e61a4c6718e9ba664e71c12d867a0e716b4a145b ab48111767a36ed7dfd314bfc20cef00539363d7 f5ea38370c8109718f8a945ae557bbbb3da62666 18d6137ad5572540954466afd592d989b0de587d ca34f0061fbb8cc7aa41ec8fea5c224e98c21396 5736ce6a3923a48c87f0a42d42ff5d733edd67ac b866701788d34d742b2ddfd70b8fa72659b396b1 01926c921a4ead9278a8b3d878c4e8a70d56cc46 8222bf2f70857a86e9ff641f7e482ed213371a94 164f55b2781ce876ad01cd86ce4007f0d88cf01e 0fce77d096a44d308c7d79074d45a0fa99f4d663 e0b42daf11d59ee216e569b7cdf93c1e4f2f51d8 87ff83f3a3294611835d5ddd4bf20f22b4500497 360ba8fbe8dfa41d3817e613f13bdbe0c505fd94 21fe80a71e87b25092970d806077f1ac69a7a518 b8c3c8ed80bb91684bf0f943d5493e30a3d502d9 c38ae2328b277b88eb6c6f63334c972f6fc45551 eb0ce17f17742dc8c515d3894c744b8e7113ef32 767fbb41a9e324f42a930c5f1d6f4ee9fbeff681 46b63919f3ce66fbf49dc7cc0398027c62bc177e d12addd67f3be07ac0f93716821fb623c933dde1 049f5f3fe4cb23c7eb42be5092d8ca0be468b089 6f902834fea1bd4e26f073b1a184d843917ca8c6 09a93110ec83b77f65551723d3b32abd3caa7282 0119136f9fe9aef58fa0d26799f2b040826414cc 112955efb08d865504860338b81faac423e1db10 7f2a1c05f8d6ac9d2c19a43c11604dcd1469a415 4b057eb959db49495f7d2cf833f4739263960223 bb99b20fdb4a6005bcb2a8c6d226c17208c607b0 931f1c3f34433bdec318737cf9e602762abfb2b8 045f5cd062c05bb2f5dc9c3e48c7b1357b769b64 fae44290a2d1da3b3f573da46895d89d3644ad36 269e078be4ad1d7ce858a6d4227a4465b04a3137 85e1c81eb46020b0b6a3785ec04152308d16957d dd34c895f784a9ac832111caef9a2861b7d9d2a2 0929255a2c6fe2171fcca55e42a99cc929e0831d 00286f36bd19b406b21606b364e1251ebee443c6 e1fe0c39946fcb4f37d407b9e76bb92dd2b42233,, WIP Recoveries always return success regardless if they re able to complete their required tasks or not,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1779   #1981|  | Primary OS tested on | Ubuntu 20.04|  | Robotic platform tested on | colcon test and turtlebot3 gazebo|    ---    ## Description of contribution in a few bullet points  * Updated BackUp and Spin recovery behavior to return failure when resulting in a true failure (For example  when the recovery behavior is aborted due to potential collision).  * Updated the System wide behavior tree ‘navigate_w_replanning_and_recovery’ to use RoundRobin instead of SequenceStar (This effectively masks any failure the recovery action might return in the context of the whole BT).     ## Description of documentation updates required from your changes  * Change in description of the ‘navigate_w_replanning_and_recovery ’ BT  as well as associated imagery.   * Change in migration guide to warn users of changes to recovery server  default BT.   ---    ## Future work that may be required in bullet points  * Is there some way we can identify / distinguish failures in the Recovery Action. By making this change  we are losing the ability to distinguish between true failures to call the action and failures due to potential collisions   * BT Tutorial that incorporates the writeups written [here](https://github.com/ros-planning/navigation2/pull/1855#issuecomment-720172406)  <!--  -->      https://github.com/ros-planning/navigation.ros.org/pull/136  
ros-planning/navigation2,2274,2021-03-29T03:45:57Z,2021-03-31T06:49:04Z,True,2021-03-31T06:49:04Z,6096221d513a2d66ffdf96adcb87b39ca20c2ddd,1,1,11a9438ffc0ae8d1f6803a9dc1281a05fdfa6ca0,,Enable rmw_connextdds for nightly CI,To again have a third RMW to triage CI failures    https://github.com/ros2/rmw_connextdds
ros-planning/navigation2,2263,2021-03-22T16:10:52Z,2021-03-31T20:40:26Z,True,2021-03-31T20:40:26Z,aeccbe7a931b2820930eeb7cbd6f62af2c6f5c9f,16,11,1655a5488bd44f016953bb39a16991592bf297dd e50a00697502557214cca58338f3dc938bf626a0 a3cca1ef2d91dd44b242b4324f8e528b2c033496 0e99ecc4d4a8b8265e482c26509f3ab84281736d ccb27e17c8afeb3ddd3887a9c765a180376f98ab bd3759ace52d07e81cf01e86f17077d657e7624c da008d112900cb12b22b5357d565ff4cf9658153 afac49ae63c39998dbe99a8e2f3a949c08a23ed6 dd2ac1603100e97c49b43082822200cb50aae1eb bf02d598312a4d09ec52547b143cad3eb7b67b85 9b4e8e2ca24ad4affe2e62c3b044f3e1724f35cf,,Replaced sensor_msgs PointCloud to sensor_msgs PointCloud2 ,  ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1967 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  gazebo simulation of Turtlebot3 Waffle |    ---    ## Description of contribution in a few bullet points    * Replaced PointCloud Msg and publishers with PointCloud2  * Changed a rclcpp publisher created from lifecycle node to lifecycle publisher  * Modified the `base_obstacle_test.cpp` to remove PointCloud as arg to `addCriticVisualization    ## Description of documentation updates required from your changes    * Change the documentation of `addCriticVisualization(...)` under `TrajectoryCritic`  `BaseObstacleCritic` and `MapGridCritic`    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page     
ros-planning/navigation2,2286,2021-04-01T20:12:20Z,2021-04-02T00:01:27Z,True,2021-04-02T00:01:27Z,44081fea0332148807c2c948962e7fe43532ba6b,3,4,51d74e00bf51e0de3b37f878828bab5ef13d3a48 a953fa3c89cccfc8eecd5056ca60823fd179e5f9 1759f1f967ee4044e62493b19d28af044d7262d1 4587a1fc9ecd6005fc55a96fa0e006ad4a64816e,,smac checking collision footprint only when in possibly inscribed situation,CC @maxlein you should test this out  it should speed you up quite a bit    With change:  ```  [planner_server-8] It took 141.18 milliseconds with 15296 iterations.  [planner_server-8] It took 518.114 milliseconds with 111194 iterations.  ```    Without change:  ```  [planner_server-8] It took 554.892 milliseconds with 76187 iterations.  [planner_server-8] It took 745.096 milliseconds with 112351 iterations.  ```    ~15% speed up    Baseline radius footprint:  ```  [planner_server-8] It took 230.307 milliseconds with 43561 iterations.  [planner_server-8] It took 389.351 milliseconds with 83213 iterations.  ```    Only ~25% slower than just a radius footprint check -- an improvement from ~45%  
ros-planning/navigation2,2261,2021-03-21T08:07:18Z,2021-04-02T00:03:22Z,True,2021-04-02T00:03:22Z,daf1161eb80ea71d546a83143ca3c4167f8e9fa9,5,4,412eb791e38f1adc9c0f12f78264307c3cdfd68a 06702cdcfd1bf639f9af6663aeca6c3f45e8e5ee 012fc19b059bf54a351809deb6709d523d3bfedd 6581d5f28b20b78a44a83417f41cf9a35d690153,merge,Handle navigate_to_pose preemptions with new BT,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | closes #1971 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | TurtleBot3 Gazebo simulation |    ---    ## Description of contribution in a few bullet points    * `bt_navigator` is configured to handle navigation preemption requests with a different BT than the one that the current running action is executing  * If a preemption request uses the same BT as the current action  current BT is not halted. The new goal is accepted without explicitly cancelling the old goal and the new navigation goal pose is directly updated on the blackboard.  * If a preemption request asks for a BT change  the previous goal is cancelled and the new goal is processed by creating a new BT from the requested XML file. * `BtActionServer` accepts an additional function `ShouldCancelGoalCallback` that is called during the `is_cancelling` check. This function can define cases when the current running action executing a BT should be cancelled other than when an explicit cancel is requested on the current action. `is_cancelling` first checks if cancel is requested for the current action  and only when there's no explicit cancel requested  the user defined `ShouldCancelGoalCallback` is executed to check if the current goal should be cancelled. Using this callback  `bt_navigator` checks if a preempt was requested with a different BT and cancels the current goal when that's the case.    ## Description of documentation updates required from your changes    * Explicitly explain how preemption is handled in the documentation?    ---    ## Future work that may be required in bullet points    * Still need to decouple the preemption logic from `ComputePathToPose` BT node when preemption request uses the same BT as the previous goal (refer https://github.com/ros-planning/navigation2/issues/1971#issuecomment-705826289)    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page     
ros-planning/navigation2,2123,2020-12-14T20:28:39Z,2021-04-02T00:09:20Z,False,none,257b3600940ff53600f4b84d92ebb09c19c3941d,2,6,577439d0f3a60f4bdc0785b26ebc2d823f7daf4b a5e75d498d5a1a9d6f141f2ae1dfdfb1259c5d2c 69a5feb8b0734ebae339a4c2f76781865935001e 56e7b8c0ede9f6d554d2e3f01efad77422078307 bfa2a55bbf36f7dc575c4afe87e8f4c0483632a3 89d9ee19543ddc6bb28e6b4a0261f792a74f0e00,,Add MapGridCritic dwb critic test base class ,| Info | Please fill out this column |  | ------ | ----------- |  | Primary OS tested on | Ubuntu |    ---    ## Description of contribution in a few bullet points    * I added some tests for the MapGridCritic DWB critic.    
ros-planning/navigation2,2284,2021-04-01T00:02:17Z,2021-04-02T02:50:21Z,True,2021-04-02T02:50:21Z,4615bc06f1a191d2de9fdc0d02eb61720ae115ae,4,3,5f643a5120d29ff5407e21111ff0b44acd283dfc 1986080ea33b4bf43e499efd109389667d359610 8106eff65060558d814247d30db759a353e289d4,,adding amcl doxygen,
ros-planning/navigation2,2281,2021-03-30T23:35:18Z,2021-04-02T14:43:24Z,True,2021-04-02T14:43:23Z,1821ac3bd6fc1ce3bbf3cb3935bb432fde9fec71,2,5,6648841e633ebca1886f10721f76f333984a9a5d 6250969f98784add606326228948d0c394eb65ae b8a5d265a1f504aa5b568b250291c782a35b4601 bdc17078d5c7dc18454a7433075f0eee2bcbf674 42b0d66fde593d5195ec1bea53b1afeb41cc5f16,merge,Deprecates use of geometry_msgs PoseArray for particle cloud in AMCL,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1679 |  | Primary OS tested on | Ubuntu 20.04.2 LTS |  | Robotic platform tested on | simulated Turtlebot3 in the Gazebo simulator |    ---    ## Description of contribution in a few bullet points  * Removed publisher `particlecloud_pub_` of type `geometry_msgs/PoseArray`  * Removed `particlecloud_pub_->on_activate()` and `particlecloud_pub_->on_deactivate()`  * Removed a warning message    ## Description of documentation updates required from your changes  * [New Particle Filter Messages](https://navigation.ros.org/migration/Eloquent.html?highlight=amcl#new-particle-filter-messages) could be updated to remove mention of `PoseArray`    ---    ## Future work that may be required in bullet points    <!--  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2118,2020-12-09T04:01:46Z,2021-04-02T19:31:31Z,False,none,7bc8d6fe25603d228d5b3709d8eef984f86adad8,6,2,166585019758a13d4fae2a61b084d330f96e226a 7bc04a6c5f0f081292d04339ec1fcbd6d61bf669,,Action goal checker callback wip ,Adding a new callback function into SimpleActionServer.  This callback is optional  so no ABI breaking changes here.  BT_Navigator for instance uses this to check if a BT.XML is accessible and therefor can REJECT the goal even before it further processes it.    This callback can be used by any other Action server and is template based (Action independent).  Could also come in handy for #1971 -> check if there is currently another goal happening that is using another current_bt_ than the one from the new goal. Therefor REJECTING the request and not PREEMTING the current BT (or some other behavior that has yet to be decided from/in #1971 )    This callback is called during the initial `goal request` (also see the action design docs):    ![design-action-call](https://design.ros2.org/img/actions/interaction_example_0.png)    So instead of the ACCEPT here  the goal checker could initiate a REJECT inside this Service-Request. This could save some time. But bigger checks like (Can I get a path to this goal) probably would exceed the acceptable lifespan of a service request?     ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1971 #2010 ) |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | headless gazebo simulation in docker with system_tests |  | DDS | probably Fast-RTPS (what lives in the main.release-Docker?) |    ---    ## Description of contribution in a few bullet points      * I tried to add this feature according to the coding-style used in this scope (taking into account different typedefs and namespaces)      ## Description of documentation updates required from your changes      * Added inline code description   * Add tutorial on how to use it (based on this PR example of usage)      ---    ## Future work that may be required in bullet points      * Add proper Tests for this  so it does not compromise the system integrity     
ros-planning/navigation2,2287,2021-04-02T23:54:43Z,2021-04-03T02:59:38Z,True,2021-04-03T02:59:38Z,b097667f416a4b69c9e7e7987baaf88583e738f1,2,1,51b3f5aa4f098d5f24654eb12b9b46007219c3b9,merge,corrected backup plugin name for multirobot params,Fairly trivial change - the multi-robot param files included in nav2_bringup used an invalid plugin name for nav2_recoveries/BackUp.     The .yaml file used "back_up" where "backup" should have been used. This resulted in a Fatal Error when a multi-robot simulation is run with the recoveries_server. Removing the underscore fixes the issue. 
ros-planning/navigation2,2288,2021-04-02T23:57:35Z,2021-04-03T00:01:59Z,True,2021-04-03T00:01:59Z,9831d83f5dfce01d5842c867a0540dede4dcabf9,2,1,d849bda128600b4aa811f7c29f632cb65dc04aef,,corrected backup plugin name for multirobot params,Same as ros-planning/navigation2#2287  but for foxy branch.     Fairly trivial change - the multi-robot param files included in nav2_bringup used an invalid plugin name for nav2_recoveries/BackUp.     The .yaml file used "back_up" where "backup" should have been used. This resulted in a Fatal Error when a multi-robot simulation is run with the recoveries_server. Removing the underscore fixes the issue. 
ros-planning/navigation2,2246,2021-03-14T20:41:12Z,2021-04-05T21:37:07Z,True,2021-04-05T21:37:07Z,81e1c7d0722af03e9aa4f82eeac5b0f0bcd6fbf7,9,28,b12b548b64258d869a1162867da408c89dcc6189 330e21db045008bb58c2e1b98b3a81f49891d4af bc0ec063903887b3cfa516e19aadf7178e913a99 67769434ef800768d7370d89dfc08c9fb9e2ca55 f7376683c84bb6ffce1cbc894e9d3db443832b87 d66bf4d69ee8f4aa779cbc5f8cf17666257184f9 d506339f0f91b5e6440ded5bc337cf57d26ebd01 164768491fc268e90a3269bfdb4682c86b51c97a 29243e281f55e3d381d749db4076d9d1c3a3758b c1ec90ab82fc5c7a8ec6aec980ec2b57cec5ca4e 0e6ad249babd1ea3d99bb47c4623c24c0f217980 f2086cad58eafbc511832f12e1005f84a4d0abb0 67c3c68652e8ca1e6b180cc1ae0a2caab4cc71b3 76ad91145e3ce11dc5553241e6224817e03b63e7 f93601e02efa31adbc17b7f4a6111baa467b90b6 2cd4f60385458ff8561ec746696b75ed0f452875 3b36c29989b429a60c5e8161aa4cd57637b81707 8c03c4cad29e843a4ce3f3e546dfac32405a2036 813a373d75c21ff9cb1aec9bc9a28e7f49d89206 d20825555905ec2e7745e8eb2650a4bf11319c86 09d6c9ae1b2875282dda3be8b86c17ac34319ce1 27e4d4475e9981b35f4da1a61d387f3a7aa482e4 9fbec15dd6aa50642288a83cad3304ad22cc2ab6 b364894b40215215e57406ea6d5ba87eb623a998 cf18f1100a26d14062dd1a356b7e849a0c6d547a 83ac9cbd9604c3279e5d3ab1f733029d875babd6 da39fc8dc0d92f9f02ea4fc9df7c5560923cecd7 27d70b3e940376ad5411a1a9e282c43b7c065ea7,merge,Improve NavigationToPose action feedback,For complete discussion please see PR https://github.com/ros-planning/navigation2/pull/2194    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |#2154 |  | Primary OS tested on |Ubuntu 20.04 |  | Robotic platform tested on | Gazebo Simulation of Turtlebot3 |    ---    ## Description of contribution in a few bullet points    * Improves feedback of the `NavigateToPose` action server by adding:      - Better distance to goal estimate: by integrating distance between planned path poses.      - Estimated time remaining: by dividing the distance remaining by current robot linear speed (using smoothed odometry).  * Updates the feedback in `.action` file for `NavigateToPose` action server.   * Adds a utility to the `nav2_util::geometry_utils` to calculate path length.  * Adds simple unit testing for this function.    ## Description of documentation updates required from your changes  * Documentation for `.action` needs to be updated.    ---    ## Future work that may be required in bullet points  * Currently the time remaining largely ignores the target yaw of the robot. It may be the case that the robot needs more time to rotate to the correct heading.    
ros-planning/navigation2,2290,2021-04-05T22:35:16Z,2021-04-05T22:42:51Z,False,none,none,248,34,342816556b89294ccc3266e0b08c57dc603e3570 aa9394a6b57a23ede7add9cbba901ba1a21a26da 671dde625ade1092130cea68a64eca7e97435033 db2f917bd5a1bdacf7acc5436f49434be0d02ad5 fa1a64ad4d47a3793d22ce7da3f7238c92294af7 603150bcf52a48847772558f30601c5b30cf0797 96b47139d3c10f3847c66fe6bf130152dfd1a038 0ed83f084d105f3eae667e0b7a28431939a07c96 3d166b748bd704eca05ef671b0b2ca99968a8c73 77c1b742e959dda02acf6830c2a814f2278bb4a4 63b9510ddf16abe2b6cc0f21c4d4824ed4e99331 af8a857699c6f9f64cfccb7d98b60230ddc3ee94 52abee596117441311ce8fcb625fc2504e345ea2 64bf1463fe9fc92f99f8722624a4920d578b661f 41996f409fcd7b005cf779e0376273cee3de6d76 3befe9aa1c2546f2178c7ced6fe55fc3ba56642a 9831d83f5dfce01d5842c867a0540dede4dcabf9 8f2046f6768181aea89ef535b63f2f1a646e8a45 2fb8d865bc08bc32dd1113bfbe72a5a841bf632a d0d68f6dbfe8bb67baa91adf800371e762bcaff3 b6fc2bf166be746d298a0fdfb809aaf3321f95c9 f78f660a03ee21ce684e5f9fda897521b5c3a21a 21ceb6905caf9effe01ee8fc8be627b20b0ffd72 9aec3b2f875c291d0acdde315b9ba2dbb90fc1c5 52166186299dd92e97e6b4a5e5d2c0d64004873e cef8b3628696c27232d589afd76d6bc7c453c806 92214b34632a7396fb9c4b0271549e109b17f50c a110f602049ae0d0073aa2c0ea45ed5c25655835 1432d448d5c23a4635e783f543ab899cbb2c1045 b3777138f510232c9305f86fabda27c1094a6c8d 7ab0f496aa32111026fc2ea1f90942c1cd4fdfe7 2504e03b7e48f39f74c00e2390d51a599c99be89 e0e5508e058fe8ae89f8bc10814cd0f40e3abda3 ff15e23da0e7d39e7380ebc68aef1f783d050908,,Foxy Sync 5,New sync to foxy:  - Groot monitoring  - New Regulated pure pursuit controller  - various bug fixes and small features like parameterizations
ros-planning/navigation2,2292,2021-04-06T00:32:53Z,2021-04-06T01:00:32Z,True,2021-04-06T01:00:32Z,50de7dba36d6cdb95bdc69d05c43a8bdd14ea527,22,3,7ff1dbca77feb6aa39ba3b53e28e596fc5065bf4 716420681800d0d777a0f16defe644f919e7e0ae 54b38dede55335425d28ebcb40982fdb2e7eeec0,,adding doxygen to costmap_2d,https://github.com/ros-planning/navigation2/issues/2155
ros-planning/navigation2,2271,2021-03-26T19:15:48Z,2021-04-06T01:04:19Z,True,2021-04-06T01:04:19Z,c6294d534b2f5e4179237aa8ac88e1339c3c62d4,78,37,cbc62d5920c31e55145cd9633d5ff9df8790659a 0ac09e03b0a39e8f47034e3bada26d8cb1e28e34 37b6f47db9ce629d5b411ac833baec0dcc5da309 64389c5588147ff9742717beed6ff9c2344288cc 3638ebe9cde2dbd48980d03d6d60aa961e2e19db 1be643983f3e7b14b662f7cdac710421704d50ac 8b4311c412ec20bd819f2c6f1f3a308a0532291c 32285232f2989b1eb2b8b126cfffa350cffbf479 5036c592be4e07e84cb6dcc789bb7e04abeb08cb 6c99c375bbafa5a99ee71edab6c4744601e4d0f6 55c67ada0a7a15f3354ff13edbf0636df17a4d29 1f9c27292d08211edc3ec57a69f9b348c787cd56 8af72bf09b27b709a9ea74ac8fb3c02401284202 46d2d3a6d175067bc71e659a02765f7b05b2b5bd 805510c33ec4c60a378a92f73c8606a3f70346de 8f92be3918e03d645aaa60745234fb41ab7a4c47 2ce4229f3be1927b5bf8d749f375ff096479b8c9 9b30aea875ab876c598076d9ff74e9df4bef7f72 ef4ecddb5949029c53cb46cd2b86223c534681a2 f3f2caf4feb3bf230718ff9308c184730df0ed5e ed675440775f9df4d5580cbf97d25e97eed54913 c31f3791404c205464d5f0c12ae620e9a384096d 0cdf6c08f55c0fbd6c3258e2320774aa458ba335 b327ac84c20451b191ccec9612e9b351ec74caae 39ccd457653406bf31f0d59e8084f125ed72f04b 9fa45add0bc4c509569acbc20cb7bee43d9c43e9 b1f13177ebe96d62f49456b3f5cb1955339d5047 4907d04d6101312df610c48e96fa325b6bdea8ee c474f695076e8e0a79fd70de645b3f5ce156e4a6 85f8ecbe8a7ea1e9e911c78a123df1a384708924 9f64df15181782504dae5c039e2b0a5910e8177a ffb218f2ef1db000152c89f87881626a32009325 9ec67b7416f7d4f2a147e85f1edb8a0ec615fa50 2e7cf04c4173ff07c2593e145bb7921fadf86cff fce76d16821b53c52917da3b34e725b5327d048f be77d113ffd8c6ece0204e13ab7168f7c6e3cb5b 61bddbbaa273c98787efeaee640c49c6f84a96f3,,Navigate through poses action ability,Creates:  - new navigate through poses navigator  - abstract out this logic to allow for expansion (but not plugins)  - create a new onComplete callback in the bt action server to populate results meaningfully or indicate completion  - make sure only 1 navigator at a time can be processed with a muxer handled for plugins automatically  - nav through poses cull pts passed so don't replan through old areas via the `RemovePassedGoals` BT node when met a tolerance metric  - fixed an issue allowing a failure in processing the simple action server from making the BT navigator lock up and think its still processing indefinitely.  - added completion callback option to the simple action server in case it terminates on its own from un-handled exceptions thrown  - Inserted all BT nodes into the plugins libs list and in the groot xml  - Set defaults individually for both navigators + updated parameter / launch files accordingly   - Rename behavior trees to be more descriptive    Questions:  - Seperate into 2 servers or keep in 1 server?    TODO  - [x] Testing: system tests  - [x] config page for new bt navigator params (or moved ones for specific navigators: path_blackboard_id  goals_blackboard_id  goal_blackboard_id  default_nav_through_poses_bt_xml  default_nav_to_pose_bt_xml)  - [x] Testing: unit tests for new BT nodes: compute path through poses  navigate through poses  remove passed goals  - [x] Website: plugins list  migration guide  config guide https://github.com/ros-planning/navigation.ros.org/pull/155  - [x] Website: Create nav BT XML list on website with explanations of the basics of what they are https://github.com/ros-planning/navigation.ros.org/pull/155    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists    Related PRs to resolve against as merging  - [x] https://github.com/ros-planning/navigation2/pull/2261  - [x] https://github.com/ros-planning/navigation2/pull/2246  - [x] https://github.com/ros-planning/navigation2/pull/2269 ComputePathThroughPoses different update port / goal checkers  
ros-planning/navigation2,2293,2021-04-06T01:17:31Z,2021-04-06T01:17:46Z,True,2021-04-06T01:17:46Z,9ace8ae12bb3f91cb49db1f0b90ce1e29a0769ae,1,1,aa00a5da6228e9f00a9da44b5a90a8fc6606285e,,adding missing test dependencies to regulated pure pursuit ,Found in foxy release binary run
ros-planning/navigation2,2294,2021-04-06T01:40:12Z,2021-04-06T01:40:37Z,True,2021-04-06T01:40:37Z,8a7a4f261ccfa5db68d5add2fa493b32bacc6f33,1,1,40a1134d9ba6698d36f35f6a93e883f7560e7cf2,,Including new algorithms in build table badges,
ros-planning/navigation2,2296,2021-04-06T05:08:23Z,2021-04-06T17:33:10Z,True,2021-04-06T17:33:10Z,2590238de036513c96c6fd2c76884c7599b72a01,1,1,5d2791364fdcfb8e9992028acf0f4f74529f1fa2,, nav2_bringup Update waffle model,Changed to the latest tire mesh file names for waffle as per the latest `turtlebot3_gazebo` package.    This results in faster loading and resolves the errors that come in `gazebo --verbose`    
ros-planning/navigation2,2298,2021-04-06T17:50:08Z,2021-04-06T20:30:12Z,True,2021-04-06T20:30:12Z,aaf25612a9238e62db12b1ae3951993c2585da83,1,1,269fb9ce98645f4ded9766443e8617e49637a240,,adjusting new files for tb3 model ros2 of 2296 ,See https://github.com/ros-planning/navigation2/pull/2296 for details    TB3 model has changed the file paths for the tires  requiring people to pull in the new changes `turtlebot3_simulation` repository if building locally.     @ruffsl for CI  I don't see where it pulls `turtlebot3_simulation` to get these files  can you clarify for me? The underlay workspace doesn't include it and nor does `ros2 master`. We don't base on foxy so it can't be getting those binaries.     Foxy users we tell to get the binaries in the build instructions. ROS2 main developers have a local copy. Its not clear to me where its coming from for CI. **Should we be including turtlebot3_simulation in the underlay?** 
ros-planning/navigation2,2295,2021-04-06T01:51:29Z,2021-04-07T21:47:51Z,True,2021-04-07T21:47:51Z,0ade9225278b89e9bf1fe5b56b970518b670fd8d,7,1,f17e3fab6eca64eaf5816a344ca489dcf6b1e3fd,,audited and removed unnecessarily complex launch configurations,https://github.com/ros-planning/navigation2/issues/2270
ros-planning/navigation2,2264,2021-03-23T15:56:59Z,2021-04-02T18:50:26Z,True,2021-04-02T18:50:26Z,30b405c58e6d53ba8c96381416bc4679d35a1483,3,6,3a07e307cbd77e8d9b27bfa7eec50eed599c9b2f 8e53a2a3e26324b92b6744cd3f540a6d7907c86d 28cfe5e5df986cb49aa66bbe9be9df2020a73abe 2eb7288f2a5dff248f2c6e8901228b75b53fd8c1 9a65af88992753e9ded7f14d954ac050ebf7e6d8 219a7b4c8d0cabe9cca9251ad2fcfd81f04b0f19,, Draft nav2_controller Add controller_patience param,| Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/2262 |  | Primary OS tested on | Ubuntu|  | Robotic platform tested on | Wyca Elodie Sim |    ---    ## Description of contribution in a few bullet points    This is a draft PR to support the discussion from here https://github.com/ros-planning/navigation2/issues/2262  Adds a `controller_patience` which makes the controller retry when for `computeVelocityCommands` throws an exception for the desired amount of second before failing. When equals to 0.0 the functionality is disabled. When equals to -1.0 the patience is infinite (the nav2_controller "FollowPath" action will likely fails thanks to the ProgressChecker though).    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists    Edit: I meant ProgressChecker instead of GoalChecker  
ros-planning/navigation2,2310,2021-04-13T15:22:58Z,2021-04-13T16:57:18Z,True,2021-04-13T16:57:18Z,d537cb186dd61a9491c0b1c7865f1e4e6891ca45,1,1,d02c09d17cb178edc0b16a9ea3d8da3af319a6fb,, nav2_utils Fix calculate_path_length SEG fault if size is 0,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1) |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Wyca Elodie Sim |    ---    ## Description of contribution in a few bullet points     This fix a SEG fault arising in `calculate_path_length` in case the path length is 0. It is due to negative unsigned integer comparison: https://stackoverflow.com/questions/7221409/is-unsigned-integer-subtraction-defined-behavior  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2311,2021-04-14T10:18:12Z,2021-04-14T18:09:32Z,True,2021-04-14T18:09:32Z,f28951048dc67f1e8a7b1b7cf450195e53a80ee6,1,1,1b555ef7477a492cbf10a3a55a2dcc009e3088cf,, nav2_lifecycle_manager Reduce lifecycle manager client verbose,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points  Switched RCLCPP_INFO to RCLCPP_DEBUG in `lifecycle_manager_client`. They are only messages about waiting and sending services to the lifecycle manager.  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2313,2021-04-15T04:52:45Z,2021-04-15T15:27:20Z,True,2021-04-15T15:27:20Z,4066ab943f397e2db68cc6851680d4748c771ffe,1,1,52a3c3a841894aeea81277e68d8bc1635f1ebd96,, nav2_behavior_tree fix RemovePassedGoals Tree Node,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/2312 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | None |    ---    ## Description of contribution in a few bullet points  expected behavior:   ![image](https://user-images.githubusercontent.com/5349043/114815763-79ce4980-9d7c-11eb-877f-ba113517993b.png)      #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,1066,2019-08-24T01:37:49Z,2019-08-25T06:44:56Z,True,2019-08-25T06:44:56Z,baa0f83e7433e3565d0e0e8f90fb04bc3d16a8d5,3,1,baa0f83e7433e3565d0e0e8f90fb04bc3d16a8d5,,Export envs for arg in build hook,Default build args for the dockerfile where not being overridden as the environment variables in the build hook where not exported. Thus the master.release tag was not being built with the intended rmw tag.    https://docs.docker.com/engine/reference/commandline/build/#set-build-time-variables---build-arg
ros-planning/navigation2,1069,2019-08-27T03:27:55Z,2019-08-27T05:03:58Z,True,2019-08-27T05:03:58Z,ef90f8af53364944deb4ad82d2ceb292e38893d0,3,1,baa0f83e7433e3565d0e0e8f90fb04bc3d16a8d5,,Export envs for arg in build hook,Default build args for the dockerfile where not being overridden as the environment variables in the build hook where not exported. Thus the master.release tag was not being built with the intended rmw tag.    https://docs.docker.com/engine/reference/commandline/build/#set-build-time-variables---build-arg
ros-planning/navigation2,2308,2021-04-13T12:32:46Z,2021-04-21T22:53:33Z,True,2021-04-21T22:53:33Z,b41491a5adf81cfa9839a741f8a01de556978984,12,5,2115e26849105fde9322879bb4a25790234f95d1 7a099449a7a4f3930ace3d3bc64b3bfa5c16b9d7 a9f92d8711e0bd50fe1bd3b54f2c9304c3f87b01 9dcb09dc3bfb0be090cf996fd7297f0b32f24836 9c1c7d319f8940e1953990e7606cbf66463651d6,, WIP Fix for wings artifacts adding new filters entity to separately update costmaps,This fixes remaining "wings" artifacts from #2051 issue.  Wings artifacts appeared on the boundary window edges when costmap filters (e.g. `keepout_filter`) are being applied _after_ `inflation_layer`. The result of filter work at the `LayeredCostmap::updateMap()` stage is being merged into resulting costmap and on next `updateMap()` iterations treated as normal obstacles and finally being inflated inside boundary window which is causing "wings".  This can lead to such effects as shown in the picture below:  ![no_fix_2d](https://user-images.githubusercontent.com/60094858/114550652-1b657600-9c6b-11eb-94a4-4b68e7011a12.png)    The proposed fix separates plugins and filters  applying plugins on `plugins_costmap_` and filters over the plugins  to usual `costmap_`. After fix applied  the resulting costmap looks like expected:  ![fixd](https://user-images.githubusercontent.com/60094858/114550888-6089a800-9c6b-11eb-9fbd-ce31acd8c32f.png)      ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2051 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | Gazebo simulation of TB3 in a [AWS](https://github.com/aws-robotics/aws-robomaker-small-warehouse-world) world |    ---    ## Description of contribution in a few bullet points    * Added new `filters` entity  the same as `plugins` but separated from them.  * Separeted costmaps updating mechanism for plugins and filters in order to allow filters to be applied over the plugins.  * Remain costmaps updating mechanism to be untouched when there are no filters enabled.  * Added auxilary `Costmap2D::copyWindow()` method.    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2309,2021-04-13T13:35:50Z,2021-04-22T17:27:53Z,True,2021-04-22T17:27:53Z,1f723818269e8efda6ee1c51ffd70b585a76fb6b,4,7,bd7747800677469f90e30b1df9a3039a09b8b534 445816444fa0efda2f3033e8653c0a7e59d584cf 438e4d4df147db8dfce3ce08ef261c996cd2cc3c c40da684ee612c743d00af9f9b97b50f81cc2e7d ec03ccaba2fe628d66e47d6afb9848f8f4e4cfc2 63bd7b6cd7720b86a82b8107182f3dcdb5879f3d 36faec4e380de4a13c00d00d42399c2fc815e277,merge, nav2_lifecycle_manager Support namespaced LifecycleManagers,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Wyca Elodie Sim |    ---    ## Description of contribution in a few bullet points  When using a **LifecycleManagerClient** it is currently impossible to connect to a **LifecycleManager** that is on a namespace due to the use of the **LifecycleManager** node address for the **LifecycleManagerClient** service client node naming. For instance `my_namespace/my_lifecycle_manager` will result in the incorrect creation of an **LifecycleManagerClient** service client node with the name `my_namespace/my_lifecycle_manager_service_client` (a node name cannot have '/' characters).  This PR replaces `/` characters with `_`    This could have been solved also by putting the **LifecycleManagerClient** service client name under the namespace of the **LifecycleManager** it connects to by using the Node constructor namespace argument. But I am not so sure about changing the namespace of the **LifecycleManagerClient** service client node without the user having control on it.    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2322,2021-04-23T00:36:08Z,2021-04-23T01:59:01Z,True,2021-04-23T01:59:01Z,dc77d1fc05dd16fa9f3d3f20dbeb40beabf9cb6a,1,1,ed6be1cdfb08b6e30fb6801e6a05eaad83ce9006,,fix AttributeError in nav2_gazebo_spawner,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on |  Ubuntu 20.04 LTS |  | Robotic platform tested on | gazebo simulation |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    fix a launch error in nav2_gazebo_spawner    Traceback :  ```  [nav2_gazebo_spawner-2] Traceback (most recent call last):  [nav2_gazebo_spawner-2]   File "/home/kaven/code/ros2_master/ros2_rolling/install/rclpy/lib/python3.8/site-packages/rclpy/__init__.py"  line 221  in spin_until_future_complete  [nav2_gazebo_spawner-2]     executor.add_node(node)  [nav2_gazebo_spawner-2] AttributeError: 'float' object has no attribute 'add_node'  [nav2_gazebo_spawner-2]  [nav2_gazebo_spawner-2] During handling of the above exception  another exception occurred:  [nav2_gazebo_spawner-2]  [nav2_gazebo_spawner-2] Traceback (most recent call last):  [nav2_gazebo_spawner-2]   File "/home/kaven/code/ros2_master/nav2_ws/install/nav2_gazebo_spawner/lib/nav2_gazebo_spawner/nav2_gazebo_spawner"  line 33  in <module>  [nav2_gazebo_spawner-2]     sys.exit(load_entry_point('nav2-gazebo-spawner'  'console_scripts'  'nav2_gazebo_spawner')())  [nav2_gazebo_spawner-2]   File "/home/kaven/code/ros2_master/nav2_ws/build/nav2_gazebo_spawner/nav2_gazebo_spawner/nav2_gazebo_spawner.py"  line 102  in main  [nav2_gazebo_spawner-2]     rclpy.spin_until_future_complete(node  future  args.timeout)  [nav2_gazebo_spawner-2]   File "/home/kaven/code/ros2_master/ros2_rolling/install/rclpy/lib/python3.8/site-packages/rclpy/__init__.py"  line 224  in spin_until_future_complete  [nav2_gazebo_spawner-2]     executor.remove_node(node)  [nav2_gazebo_spawner-2] AttributeError: 'float' object has no attribute 'remove_node'    ```    https://github.com/ros2/rclpy/blob/2bb0a8065d437668b145a71c165193365b116312/rclpy/rclpy/__init__.py#L201  I don't know whether `spin_until_future_complete` method was changed or this was an old issue.    ---    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,1215,2019-10-10T19:07:57Z,2019-10-15T17:04:43Z,True,2019-10-15T17:04:43Z,fba514acdfb8b0b03481d87f7715b5ee5f2f9487,3,3,9baae7f5e69e07c5fcec74617c0c4bfc417186d2 bae74a635b18f8acb6d5044b2ef9782c08bceb66 de86312bbc7c5c468c3c75eada0a5455e4f963c1,1 - High,Fix rviz panel initialization race,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1200  |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | gazebo simulation of turtlebot3 |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  This fixes the bug (#1200) where the nav2 rviz panel wasn't working with cyclonedds.    There was a race condition during initialization between:    1. the start of the state machine in the panel which tracks the state of the system and updates the buttons  2. the thread which retrieves the system status via the lifecycle_manager/is_active service.     If the thread received a response too fast and it emitted the signal back to the state machine before the state machine had asynchronously started  the state machine didn't receive the signal at all.     This fixes that by using the state machine's `started()` signal to then start the thread  so that the sequence is guaranteed not to race.    Also  I added a slight change to the messages that are displayed when the "is_active" is being called. It was previously redundant and confusing    ---    ## Future work that may be required in bullet points  NA
ros-planning/navigation2,2321,2021-04-22T21:24:35Z,2021-04-26T18:43:54Z,True,2021-04-26T18:43:54Z,1a207fc26be9b6696afcad174b57549744f2dafe,1,1,5768b9793dddc44c9c9eac8c0110a0f1d667f365,,removed name parameter from rviz_launch py,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info  This should be a pretty trivial change to avoid warnings when launching `rviz_launch.py` included in the bringup directory (discussed a bit over in ros2/rviz#671). Setting the Node name parameter remaps the name of all 4 nodes launched by `rviz_launch.py` to be the same name. This results in warnings on launch and when listing ros2 nodes. As far as I can tell  removing the name parameter does not affect behavior of the launch script and avoids the node name clash.       | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | () |    ---    ## Description of contribution in a few bullet points  - removed `name='rviz2'` from rviz_launch.py to eliminate duplicate node name warning    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points  - This could be extended to other branches that include `rviz_launch.py` (e.g. `foxy-devel`)  but I figured I'd raise it for main first to make sure I  didn't overlook anything silly  <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2304,2021-04-08T12:47:44Z,2021-04-30T05:48:17Z,True,2021-04-30T05:48:16Z,fcbf60f8535501884b056631ca865f954c57fc84,1,1,6da3e721b0b4e3cd6f2ec17d9802cc6a9ac485a2,,checking if handle is active in handle_cancel,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |#2273 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on |Turtlebot3 Simulation |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  I added `is_publishing_succeeded_state_` and `is_handling_cancel_request_` to mark down current handling state. Make sure that `succeeded_current` and` cancel_handle` can not be handled simultaneously. And I also added `handle_state_mutex_` to protect the two variables.    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->  1. I think all invailed state transformations should be avoided  such as `SUCCEEDED` to `CANCELING`  `ABORTED` to `CANCELING`  and so on. But It seems to be a little complicated to SimpleActionServer.     2. I'm not sure if action server only run in one thread could be better. It seems that these problems are all caused by multithreading.      #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2329,2021-05-02T21:01:53Z,2021-05-03T17:24:31Z,True,2021-05-03T17:24:31Z,2e18dd1cae31807f68746eb1a2c702526a34f4cc,2,2,8be7f2d5db607c0d3e64f0fb0b15eb96427201e1 057a612a295d7f5056ad72772fdfe7240e9c2e81,,Update list of behavioural tree nodes,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | [2143](https://github.com/ros-planning/navigation2/issues/2143) |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Custom platform |    ---    ## Description of contribution in a few bullet points    * BT Node [nav2_change_goal_node_bt_node](https://github.com/ros-planning/navigation2/blob/foxy-devel/nav2_bt_navigator/src/bt_navigator.cpp#L56) dynamically loaded by [BtNavigator](https://github.com/ros-planning/navigation2/blob/foxy-devel/nav2_bt_navigator/src/bt_navigator.cpp) is not avaiable and thus removed to prevent runtime exceptions  * [Added available BT Nodes not listed in BtNavigator](https://github.com/cmrobotics/navigation2/blob/bug_modules/nav2_bt_navigator/src/bt_navigator.cpp#L62)     ## Description of documentation updates required from your changes    * Updated [param_list.md](https://github.com/cmrobotics/navigation2/blob/bug_modules/doc/parameters/param_list.md) with updated list of nodes (see *plugin_lib_names* row)     ---    ## Future work that may be required in bullet points    * There should be a test to load BtNavigator to make sure it doesn't crash  * There should be a test to load BtNavigator to make sure there are no nodes left from loading    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2291,2021-04-05T22:42:37Z,2021-04-05T23:11:11Z,True,2021-04-05T23:11:11Z,5c9cb96e0c887a6a51506342b8fc50d2ab34643c,41,18,c475e9e935cfe79510e3ebd38ab5a9c784261cd6 bc7df6e9b99eda6a9cdea331b2e543ba6a480ede 8ad16c2068fd9233206594ad0e6d3419a3cf871f 698617684469a6bd7a9d71b5c135e895463ee227 e79f9bc406b0511ed04542ff4fc15a6c0601e8b2 cb75bcd57f55d9e2c3c5da35db177e75935bc4cd a79e30a665cabaee03a19e74eeda4004454a5a5b 2fd9e31168858d74368df9f04d0849a4a15c80e6 2992bda6f43228d02ed4e5fc6ad3f069e9d82c21 c7df021da09471e3d43c25afa50be74af72468a5 0745f390ecf13e7c378c2907ebd8c9b36424c4d1 162424e4f3855733e6a9bddd9481a41cb781ebad 27551cc1faea9665f7f5d2b373b8ebdb18ec07fe 07b1641f5c0c968b56fc5402f211dfdc12dd6f6a af15c31c39412015f3777f3a64fac3e81f06cdf4 ca0b0ed6d0ac4fd4b51cd6e7b113886bfb7302fa 1850365af27d2c7945355e97fefcbe78fcac1eda ff1cd498c458b665b4ea53a1877aefa717b66ab8,,foxy Sync 5 1,New sync to foxy:        Groot monitoring      New Regulated pure pursuit controller      various bug fixes and small features like parameterizations  
ros-planning/navigation2,2328,2021-04-29T10:01:42Z,2021-05-03T17:22:36Z,True,2021-05-03T17:22:36Z,a6974ad24c45f4a62655fc273340a7c47ab22e4e,2,2,ac757ddbf74e3c73f9eb9262b22bb34df30566c9 9ddf72a5e132d5353a5410220c3e9b4d0b25c171,,Open option to use parent node in lifecycle Manger Client,In the process of removing all service nodes (#816).  After removing the service_node from lifecycle Manager (#2267)  I propose an option to remove it from lifecycle Manager Clients.    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #816 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Wyca robotics simulation and robot|    ---    ## Description of contribution in a few bullet points    * I added the option to give a parent_node in the `LifecycleMangerClient` constructor to be used instead of creating a "_service_client" node.  * I used the `nav2_util::ServiceClient` for the implementation.    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2278,2021-03-30T08:17:46Z,2021-03-31T23:34:05Z,True,2021-03-31T23:34:05Z,53c2d6003db1fba52ba08af3ad730f588a599308,2,2,a7afbe787b6f482113e7c9a231ce574dc8c24b3a c365081b025dbebf9ef33d034bc0dc97f10d9178,,ServiceClient wait_for_service not infinite,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | [comment](https://github.com/ros-planning/navigation2/pull/2267#issuecomment-809671090) |  | Primary OS tested on | Ubuntu|  | Robotic platform tested on | Wyca (simulation)|    ---    ## Description of contribution in a few bullet points    * I changed the behavior of wait_for_service to be not blocked forever if the service doesn't exist  * The method returns the result of `client.wait_for_service()`  * I added a unit test to check this behavior    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2216,2021-03-04T16:24:05Z,2021-03-09T19:21:35Z,True,2021-03-09T19:21:34Z,febb5fe838bfa3633246a17fa0ce2d8a8d330084,3,8,729c63701bfaf46a0bd93fc75abedfd38931a296 b8598456de9e6bab81b0757220c565284efaa2e1 41412a13b7cc5313123c13d76bc8c50f2d7a562b c9cda8929ed70155ea974cae8f8c46928a557d36 d56aa18a54d0fc06d7c36a5b37b3dfee62511beb 4c29ac9d70993ca1be9dee47900cfda978e3a971 edde26f009ad3b1d12394e2b9c4b5b52aefd9312 9b1b2dd9ca2b9801030daae8f20779901e3d74e1,,ServiceClient use callback group,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Wyca Elodie simulation |    ---    ## Description of contribution in a few bullet points    * I change the timeout default value to fix the runtime error that appears when using `service_client->invoke(req)`.  * I create a `callback_group` and a `SingleThreadedExecutor` to spin_until_future_complete.    This allows the use of the `ServiceClient` the `invoke` method in a callback (topic  timer  service) handle by the node.  ```  static std::shared_ptr<nav2_util::ServiceClient<std_srvs::srv::Trigger>> service_client;    void sendRequest(){    // Send request    res_received = false;    auto service_req = std::make_shared<std_srvs::srv::Trigger::Request>();    auto service_res = service_client->invoke(service_req); // std::chrono::seconds(1) default value       if (!service_res->success){      RCLCPP_WARN_STREAM(node->get_logger()  "Someting went wrong");    } else {      RCLCPP_INFO_STREAM(node->get_logger()  "Everything is fine");    }    timer->reset();    return;  }    int main(int argc  char ** argv){    rclcpp::init(argc  argv);      node = std::make_shared<rclcpp::Node>("main_node");      // Creates service client    service_client = std::make_shared<nav2_util::ServiceClient<std_srvs::srv::Trigger>>("my_service"  node);      // Wait for service server    service_client->wait_for_service();      // Creates timer to call service server every second    timer = node->create_wall_timer(std::chrono::seconds(1)  &sendRequest);      rclcpp::spin(node);    rclcpp::shutdown();    return 0;  }  ```    ## Discution    This will create a callback group for every instance of `ServiceClient`.  This allows you to not create a "subnode" like `_rclccp_node` just for a service call  it doesn't break the API if you really want to create one.    
ros-planning/navigation2,2267,2021-03-24T09:13:59Z,2021-03-29T19:58:12Z,True,2021-03-29T19:58:12Z,332304bc1614623592c027a292998cdca1bca0fb,2,8,3f6ded43ac2ff834f450212a6ae601e8cdfebc2f 921ec0c2f8fa39a3aa7ecd0407d01bcdd0ab31ec cbed614ecefa83ea64007621d197f24095417b14 a37a6acc2d8ca99d2612a6a26bc1f5b65138050e 597df82bd298828a5ff5811fd0145ad47ef1fae2 366c2cb761c62769caa5a4ee8cfa47d25939cc79 1f9706e4b88bffaad97868cc63797a083118636b ddf48e15b5d596f3d5a2d8c763ecf496eb056775,,Remove service nodes in lifecycle_manager,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #816 based on #2216 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Wyca (simulation) |    ---    ## Description of contribution in a few bullet points    * As LifecycleServiceClient use the `nav2_util::ServiceClient` I replaced the service node in the lifecycle manager with a `shared_from_this()`.  * I also made ServiceClient.wait_for_service() return if the service is ready.    This change should reduce by 1 the number of participants in the DDS (per LifecycleManager) as discussed in this [comment](https://github.com/ros-planning/navigation2/issues/816#issuecomment-800670674).    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2330,2021-05-03T22:54:32Z,2021-05-06T01:42:37Z,True,2021-05-06T01:42:36Z,25fe2448f5d8badf7f021165cc85caf231dc20d7,2,1,7e19eb29cca336c1d5aa024cde111c6fd43b5e1c,merge,Validate codecov script against checksums ,After the recent Codecov security incident[1] I've been reviewing  codecov usage across ROS repositories.    This repository is fetching the codecov bash uploader without performing  the recommended validation step.    The validation step does not appear to have been widely explained or  publicised and even the official codecov GitHub action was not  validating the script until the recent security incident.    I have made an attempt to validate the bash uploader here.    [1]: https://about.codecov.io/security-update/  
ros-planning/navigation2,2335,2021-05-10T19:52:34Z,2021-05-10T22:48:53Z,True,2021-05-10T22:48:53Z,d51c1fd15e6f0a5e9cb2f437fcc0e0e5612d2363,2,1,8afc0eedfd864324017f3ce20d403244ebe8132c,,Fix script error in codecov validation ,`local` in bash can only be used within a function context.    Fixes the regression reported in https://github.com/ros-planning/navigation2/pull/2330#issuecomment-837032101
ros-planning/navigation2,2269,2021-03-24T20:15:25Z,2021-05-12T23:41:43Z,True,2021-05-12T23:41:43Z,a5ee54a33ec6988521f370e61799632a2021b3d1,23,18,2cd9a90014cea10f1e35fc0e42ca32cc9bebe5cd 04266b7a6745010c34f440807a309bf9dce422fa 5fa446ba8ba45c70ba7dbbec00aa843fa6f97a96 98ce38a61b606fe62b115e2bb33eaa2009c3034d b232fe47bf6ee75d5fbe89a596d6f6e72ff697a0 efe310eb314b9add32c94b24189bc093aef5fc74 b2f1d330392c9ca6fa087523bd0e957615ac9d19 2c2de48410f17fef7f60aa1c4015ed285cbef02b e4df153abbd20f91a90ca82ad75c1825a817ad86 2d0c7f265f07a7ae62c4915aecd8f51808407d08 267dfb0bbb8f5725b950af07004e7519fd3cb6fc 89333dfa7095bf2243648663a7c06ac8cb03d17f d6392923d1ad6243cf0fdd446ea6f18988cd6f5c 2da096a17cb5ffbabe25c8cfe012688d2ec7ff7a 48ec59a8b34e515cec17ad6fa251544186b0dedf 6814f7512dcea23c1ed8816c644106f7a48b1662 16cc1432779007ebcbdc4458c3f2d2eda5281ff9 d54a6b4a8ec639ce475f8037f40d266a2cce3a04,merge,Goal Checker selector,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    Support for multiple Goal Checkers in the nav2_controller node. The goal checkers can be selected from the nav-BT based on a topic subscription. This PR follow the same approach that two previous PRs (planner_selector and controller_selector).   However  the changes in this PR are deeper because several core components are affected:   - nav2_controller::Controller    - FollowPathAction  - FollowPath.action.     The most of this code was already tested in some old (incomplete) PR last November: https://github.com/ros-planning/navigation2/pull/2108. The main difference with that attempt lie in "the input" for the controller server was the parameter server (as in ros1 - dynamic_reconfigure). The presented solution  instead  uses the FollowPath.action message (goal_checker_id field) to select the current goal_checker and there is a GoalSelector BTAction node that interacts with the "external ROS network"  keeping the "communication" with the controller_server  action server "private" in the context of navigation.    | Info |  |  | ------ | ----------- |  | Ticket(s) this addresses   | [147](https://github.com/ros-planning/navigation.ros.org/issues/147)|  | Primary OS tested on | (Ubuntu 20.04) |  | Robotic platform tested on | (ROS2 nightly and Gazebo simulation turtlebot waffle) |    ---    ## Description of contribution in a few bullet points    Deeper discussion in issue 147  but the main features are:  * reading from topics to select the goal checker  * support for default controller (as static input port)  * support to setting the name of the topic to support multiple controller selectors.    **Requirements**    - goal checker selector node  - the follow path should have an input port for goal checker to use  - follow path action server should have a goal checker ID field  - controller server should use that field to use a specific goal checker on a specific request  the same way we do for controller plugins  - controller server should have a map of goal checker plugins    ## Description of documentation updates required from your changes    Documentation is planned to be added after the first revision of the PR.    ---    ## Future work that may be required in bullet points    * rclcpp::spin_some vs callback_groups    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  
ros-planning/navigation2,2320,2021-04-22T18:53:25Z,2021-05-13T19:46:46Z,True,2021-05-13T19:46:45Z,8947c9fdca621624fddc49ff40af9d3f29693e81,24,13,8c048b0b66bac7c2c30de15940f1366d73258d92 497be42fc6bc2b6a277a77e790b9d6390cc44445 e711c65789f3f62e358d22a64a655177e78a4701 5084f5617ae65c4973ced077f536263124d78d4e e3701f60f7fafdc113e039c78a13d0cf24bb22a8 142fa676a04ff68055749330557a121ccb8fcd25 d09074a7ce4a09057a455a857e517ec3b8f67278 6ec19b65777df45e71c2b9ae9253173c1b6f8fed f83612d28ce0db76436cf711071129eb17099c8f 07054d088acbd1e65fe45b5c5eefd9f668a11141 9f0e85f312770a63eeac5b37fc4b8745c38187d3 ade30aa6321a925bbf4e0782bbc7c592499ed431 ec80f363967f8bbb1c60645cd4b031c18f54d468,merge,Use incremental timeouts in spin_until_future_calls during BT execution to handle large server timeouts,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2280 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | TurtleBot3 Gazebo simulation |    ---    ## Description of contribution in a few bullet points    * `BtServiceNode` and `BtActionNode` use incremental timeout values in all `rclcpp::spin_until_future_complete` calls while waiting for the server to response to a request when the specified server timeout exceeds the BT execution loop rate. This ensures that `rclcpp::spin_until_future_complete` don't slow down BT execution if the server timeout has to be increased for whatever reason.  * Expose `bt_loop_timeout` and `default_server_timeout` as node parameters.    ## Description of documentation updates required from your changes    * Add `bt_loop_timeout` and `default_server_timeout` to navigation.ros.org    ---    ## Future work that may be required in bullet points      #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2338,2021-05-14T17:28:54Z,2021-05-17T18:07:27Z,True,2021-05-17T18:07:27Z,a2e0f553bb25723fa747847f09ce5d1e94cec1d7,2,3,cc9d7487024d6874531d21afa2042782546094ea b66c852a53f7d0560374507965108fd0bb8a314d 2bd7c8cf6c788653442b6c621a04cc54056c65dc,,Add action feedback information to nav2 rviz panel,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2255 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | Turtlebot3 gazebo simulation |    ---    ## Description of contribution in a few bullet points    * Added labels to display feedback information for `NavigateToPose` an `NavigateThroughPoses` actions to Nav2 Rviz panel.    ![ezgif-2-eaf796b99a4b](https://user-images.githubusercontent.com/22402940/118307010-c0dc6580-b507-11eb-96dd-b84c333a5177.gif)    ![ezgif-7-8beba71b678f](https://user-images.githubusercontent.com/22402940/118307698-ac4c9d00-b508-11eb-89ed-75cc42f82bc3.gif)      #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2339,2021-05-14T20:32:20Z,2021-05-17T21:47:06Z,True,2021-05-17T21:47:06Z,1ab08ce555bea9304e291682ce6b6d141dc2fb14,5,3,e2ece21b183aaeffc8d76129ee72f661ca8a8f80 d92e818f925b0ac7ca4879fd917c33cd631fb671 7061539e939647f4368830e0a7fc6ab4710ee05a,,Move CI from ROS2 master to Rolling,Related: #2337
ros-planning/navigation2,2344,2021-05-17T22:24:37Z,2021-05-17T22:36:23Z,True,2021-05-17T22:36:23Z,2ee5ca2970adb77110dcd8a677e151d77d7bd0fe,2,2,74c8ae95bd5f2664709ee86f13fd980d37768765 3124ed990ae3b336bb0254eb374ec6f34145a859,,Rebuild CI images when there are dependency updates,Change daily job for CI so it only triggers Docker Hub to rebuild CI image tags when there are dependencies to upgrade  specifically apt upgrades for installed ros2 packages. This helps preserve CI caches for longer  while ensuring the CI image remains up-to-date.    This is because an image timestamp is used in computing the cache key    https://github.com/ros-planning/navigation2/blob/1ab08ce555bea9304e291682ce6b6d141dc2fb14/.circleci/config.yml#L204-L206    The timestamp of this file is modified when building the image here:    https://github.com/ros-planning/navigation2/blob/1ab08ce555bea9304e291682ce6b6d141dc2fb14/Dockerfile#L101-L103    The above is done so CI caches are invalidated when CI images are updated  as new images could include API/ABI breaks from updated dependencies.
ros-planning/navigation2,2343,2021-05-17T20:48:57Z,2021-05-18T02:49:10Z,True,2021-05-18T02:49:10Z,2fcc2c2178ae3f269d87eb83de6acbb3a381d7cd,4,35,f8757d19097186abbf48acc81df616ae424ee179 ed9c5eacf23687a98bce3f94972a1ad8255435fa b09e826df90feda646c3f243fab4a71f4326da08 747b368c6f4f3f221c553a8eb0cd1d7222c4953e 82d3fce6f9fae8d4d929b6128da30692970f82b6 80b82b3563a25e2e9e166d9a6bcad56faddafe3a cb2cf49f94e2dcfcd2fc143e217357d26878dc66 b63213380929adb3cd7ab267460a7bb842094a1d 8feff77195faee462420c9ba04f9e59c8f6f425f 752be82b5df377e100a689d717bc3c671b59b42d d02117a00cbc26fb2fe05e15a2a1ff4524f339ea 6c04150b0575e086f99eac3e6543ca7f0ba67683 f586b169abd75122bafaf47cf7ea401c8d27be21 ad82deef1f2187c8e12a66d9eb75585f1350100c 81ff2fcacff5356c30242b195f149c4d5f4b5647 344dfc7c0d70356231194abe2b701af139b35c33 7fb5551420375ab48dc9336d17a1df8cd3da3c6e 5fa6964c45cbe5aceec9b476b45074906b4402e1 69cd6e58326881bdb9d36582b0e2dd203b1d17db 86490e10ab37e70cdb5f8b2a44ce097cd9ee16ad 3edb258478f3eae2cbbdc26655f8902eef5e7530 40177f46cdf802169b28c33a5b4ae912030d4a26 455c2894760278bbaefb5e8d8acc14bbfba66cb9 e6aa1560d01fab2a81f3359b1c09dee08b7fbefb c97433de632323aac961b2badceaf45f03b79000 b06e379946be327cf978865c5e40730320fb5f99 44f043ed678aea266da7d4b41fe0ac2be8c64c08 3189be8e2e328fcfc5f85bc0a5d31679376a4c74 34c1136f2ea27eb5e8422a25edc90e52d57ab175 10ef1c5631b7d4b0a157c133dba26f0da8cae718 a1e225ff99d3f1925aca46f6131828b880618d17 9456412bb42802af9bb3facb230794540abfbbb4 8594ea352e120b363e4a6522b86743382a65643a 54fb36daa8efa238d0dbe295c80493659d245a1f 03ef465df19ca154b04c62bcd6eca913e7f61b95,,Update CI to use colcon cache,This updates the CI to make use of colcon cache  a colcon extension that enables the caching of an entire workspace by tracking the state of package source files. This essentially allows the CI to focus on building and testing only packages that have been modified. For more info on colcon cache: https://github.com/ruffsl/colcon-cache/pull/12 .     Changes in this PR to incorporate colcon cache include:    * Add cache key from main branch as a fallback cache to restore from    * now that invalid packages can be detected and rebuilt on demand with colcon cache   * Cache only the build  install  log folders  not the entire workspace directory    * as not to include or restore the deterministic checksum files  * Hash underlay repos into checksum  rather than active workspace    * so that source file changes don't result in missed active workspace cache restore    * so that source file changes can still bust overlay workspace cache restore  * clean up built and test logic in bash using env    * to clarify which and how packages are being selected  * Add `cache_test` parameter    * to bypass caching of tests for nightly jobs    * so nighy jobs always retest every package  * Don't clean or ignore .git folders from cloned or copied source repos    * so colcon cache can use revision control in package to track source changes        Pending on: https://github.com/ros-planning/navigation2/pull/2339
ros-planning/navigation2,2342,2021-05-17T09:59:00Z,2021-05-17T21:50:41Z,False,none,24c18695823da8b32cdd1b0b1d393e13bff88913,5,3,bf0f115b8402354340a3cfb5ece5f5fe7d6d3eb7 0db21f31beb893767413294656b396c417a27dc6 7d8afb26be3fc460f8c04a80805547d1d96b5db1,,Rolling ci with repos,https://github.com/ros-planning/navigation2/pull/2339 without removing unreleased packages from repos.  
ros-planning/navigation2,2346,2021-05-18T04:12:19Z,2021-05-19T18:40:10Z,False,none,52cc46ca7945ad480e5eb77a291e54537db6db77,1,1,a573ecb41e9b188478077664de885302c625db26,merge,Repalce deprecated headers of tf2_sensor_msgs,### Related PR  https://github.com/ros-planning/navigation2/pull/2342  
ros-planning/navigation2,2349,2021-05-18T23:00:09Z,2021-05-19T19:24:59Z,True,2021-05-19T19:24:59Z,5e5d8be5dd962ee2729b7601eab19351b4957ca6,1,1,13c013a93bd7f924526bf9e6f82a3e5646311d51,,Uncrustify code,
ros-planning/navigation2,2314,2021-04-16T22:35:45Z,2021-04-28T20:48:28Z,False,none,5f2d8dffc07256ebc97b283d0b0f885b2552a0c2,2,3,defa0bd110faa2b931d70f50107c26ef0440155b 13d5181626e237f6e014833b1abb6cbfe331454a 9091588cd983c682cd144648a775e4e0bba74091,,Update ompl in underlay,And revert old workaround in CI now that ompl/ompl#753 is fixed.
ros-planning/navigation2,2350,2021-05-19T03:58:00Z,2021-05-20T17:14:02Z,True,2021-05-20T17:14:02Z,ac531a251610ca4e9b080da939e252a556425b64,16,1,46ce597971a476322a9f8c98cda78404df2c2430,,Replace deprecated headers,tf2_geometry_msgs.h was replaced by tf2_geometry_msgs.hpp in https://github.com/ros2/geometry2/pull/418.  tf2_sensor_msgs.h was replaced by tf2_sensor_msgs.hpp in https://github.com/ros2/geometry2/pull/416.    This PR overlaps with #2346  which replaces only `tf2_sensor_msgs.h`.    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2347,2021-05-18T19:17:33Z,2021-05-20T17:09:55Z,True,2021-05-20T17:09:55Z,cb90912074bacb250c2554b7897517ea776e3231,2,4,b520b5bb1906748e443bcaf6ccaaefb8ccc01ca4 8c4496773eadd4241831495f3e604fb47f152137 8a33fc2f33738751463b2c4615e33e7f5d9ea158 8f05adaa82a46f0b3fba3c5b3f337b388e62db3f,,Update invalid parameter exception handling,Since https://github.com/ros2/rclcpp/pull/1673  uninitialized parameters are allowed (ie. an exception is not thrown). Instead  if the parameter is not set by the time it is accessed  then an exception is thrown.    Note  this is a decision upstream to change this particular API for the upcoming Galactic release. Ultimately  we're hoping to avoid a deprecation cycle by landing this prior to the release date.    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2354,2021-05-20T20:58:35Z,2021-05-20T22:51:21Z,True,2021-05-20T22:51:20Z,b008d916474713167efb7bf7ad18f1baf43f912d,1,1,086159338a615977bc409f0e1a90b1f9a5b0bcd3,,reset all goal checkers on cleanup state,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/2351 |  | Primary OS tested on | CI |  | Robotic platform tested on | N/A |    ---    ## Description of contribution in a few bullet points    * Cleanup state resets map of goal checkers  not just resetting the current one    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2355,2021-05-21T02:26:30Z,2021-05-21T02:26:37Z,True,2021-05-21T02:26:37Z,4277d00d52e391de7c0e7c52658bba7b00447563,1,1,ce7413616b152532b3d12e151a86f250aa8ca43c,,adding pytest depend for nav2 util,
ros-planning/navigation2,2357,2021-05-21T07:25:34Z,2021-05-21T16:51:21Z,True,2021-05-21T16:51:21Z,d65cef7c5ed00f6444a05097e84a3520223c8369,1,1,7fdd3107e542eb4ce7d05326ed3e59680c85e1b5,,Fix nav2_gazebo_spawner not working while namespace is empty,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation |    ---    ## Description of contribution in a few bullet points    If namespace is empty  `ros_tf_remap.text` would be `/tf:=//tf`.    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2353,2021-05-20T05:30:35Z,2021-05-22T02:50:12Z,True,2021-05-22T02:50:12Z,577b401788272c3d19019adfd732370e8feac1ed,2,4,63ee28fee778f848b4a4ed04a91cf406d33e09bf 71e2fae48b0f73ce3488a212ad9145ce771f0b35 f2fc2369078cb1b80eef9b499c164ec4dfbac5d4 8a4cdafccb038634a4410a64affe8d5210ce02ab,,Adjust CI to enable cache sharing with forked PRs,So for a recent PR https://github.com/ros-planning/navigation2/pull/2349 after merging https://github.com/ros-planning/navigation2/pull/2343   I noticed that it's cache restore step was not finding the matching cache key provide by the main branch:    ## Prior existing cache stored by main branch CI job    ```  Creating cache archive...  Uploading cache archive...  Stored Cache to overlay_ws-v1-arch1-linux-amd64-6_85-main-<no value>-C8DP7DcUx71NZcYchPyQBH0ElDOZYfM4Uez8CyHmtNE=-1621429706    * /opt/overlay_ws/build    * /opt/overlay_ws/install    * /opt/overlay_ws/log  https://app.circleci.com/pipelines/github/ros-planning/navigation2/5359/workflows/9c999dde-f6c0-4007-b8a3-87d6e091638f/jobs/19741/parallel-runs/0/steps/0-118  ```    ## Later failed cache restore from forked PR CI job  ```  No cache is found for key: overlay_ws-v1-arch1-linux-amd64-6_85-pull/2349-2349-C8DP7DcUx71NZcYchPyQBH0ElDOZYfM4Uez8CyHmtNE=  No cache is found for key: overlay_ws-v1-arch1-linux-amd64-6_85-main-<no value>-C8DP7DcUx71NZcYchPyQBH0ElDOZYfM4Uez8CyHmtNE=  https://app.circleci.com/pipelines/github/ros-planning/navigation2/5354/workflows/97ef33a5-4b3d-4cce-bbf8-2598807fbf27/jobs/19728/parallel-runs/0/steps/0-116  ```    This was because CircleCI does not share caches with forked repos  unless sharing of environment variables is enabled:    > enabling the sharing of environment variables will enable cache sharing between the original repo and all forked builds.  > https://circleci.com/docs/2.0/oss/#caching    We can simply enable sharing of environment variables in the repo's circleci settings  but we currently have two secret tokens stored in the repo's circleci environment. The codecov token and the DockerHub build trigger token. Turns out codecov token should be unnecessary for public repos when using major CI's like CircleCI or GH actions  so we could delete that variable from the current CircleCI environment.    > note that this is a public repo  so a token shouldn't be necessary  > https://github.com/codecov/codecov-circleci-orb/issues/12  > https://about.codecov.io/blog/tokenless-uploads-for-github-actions/    As for the DockerHub build trigger token  given GH actions has a slightly more nuance control for protecting repo secrets:    > Note: With the exception of GITHUB_TOKEN  secrets are not passed to the runner when a workflow is triggered from a forked repository.  > https://docs.github.com/en/actions/reference/encrypted-secrets#using-encrypted-secrets-in-a-workflow    I've ported the cron job config from https://github.com/ros-planning/navigation2/pull/2344 into a GH action workflow so we can move the DockerHub secret into GH actions. This also has the added benefit of allowing the use of GH action event triggers to rebuild the CI image if any of the `package.xml` or `.repos` files are changed  given they're subsequently used to pre-install depencies in the CI image.
ros-planning/navigation2,2360,2021-05-23T04:12:05Z,2021-05-23T04:20:10Z,True,2021-05-23T04:20:10Z,3c35bb2c29f74cf61765b00bb4d6b7330e71946f,1,2,0e667565f594a2fa699cc40910c33f8253b6ba64 f14cc5c119bebd0d5fdd75f7820175b1731ebe16,,Fix dockerhub action,Fixes dockerhub action from https://github.com/ros-planning/navigation2/pull/2353
ros-planning/navigation2,2334,2021-05-10T14:10:05Z,2021-05-18T18:43:36Z,True,2021-05-18T18:43:36Z,c88f45ac60a56bfed2c8e170fa89d42d43352c2a,12,6,9a6580a320c93c59985cb7f6dff5a4ff4f8106f6 aae426b7e187cd6aa15a487fc8bea5a48d09542f a43e4a89ee5b0e0d83950da67fa5482c235a89cf 88e5d9edf0ee402a4b9cf16a7c9c0fd9f5543078 cfa7d7047b50139e85e39180a20a548fa8588cb4 6b50aad554dbf2cec1d4bbb3a0044277176e8430,,Update BT nodes to use callback groups executors to process,Instead of spinning the parent node given from the BT blackboard  the BT nodes create callback groups and executor to be pinned. This will allow removing the `_rclcpp_node` in BT manager nodes.    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2251  |  | Primary OS tested on | Ubuntu|  | Robotic platform tested on | Wyca simulation and robots |    ---    ## Description of contribution in a few bullet points    I added 1 callback and 1 executor and replaced the `rclcpp::spin` by `executor.spin` in all BT nodes.    * bt_actino_node  * bt_service_node  * planner_selector  * controller_selector    ## Future work that may be required in bullet points    * Once this PR is merged someone (maybe me) will be able to remove `_rclcpp_node` BT parent node from BT manager (#816)    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,1958,2020-08-19T01:43:04Z,2020-12-09T02:53:18Z,True,2020-12-09T02:53:18Z,199ef58f04bce9da4fcf8800630d171665349015,11,47,4e02d25c83606d38d3bef71122d59a04a8453d8d 1d64cd35e7bec6fc9ce590716833e57d99181304 8ac97cbf2291665dbaff3baa09c513768a758bac bbdcc72011d60a769cdfac6c72dd47393eea0621 837c257ec62e746643a05d5aa30388eb3b779755 b297828f3012369aa9431dfb6f7ecdc3a5591159 a941a33496f2d8fdda9a9f60d1dfc5c27f7b30cf 822d0c8040141d9451bdfd19af53228ef926e14b 1f7cb77507e1c39b0954c70a31216e49caf82388 f17810df57471b461057f8be5d3c383fd16665bb 79e475091771d6b2ae8ae39dc58f4425a8391afc 20e79fae3045233c8d534a0d51c9be0bd978464c c9e75082161cf0fce25f7512fe50b9a4a1d80e2b 7d86c3f26781faca78933f83cf29dffbe034d26a b5fcbf6adceda80b2e9909e8e26015e3e1b4deb3 c408caf5cc1192b32a4166206d016f8ec04681ba 86946b9213c23f215a978719adaa4e39a4cf1767 b18d2446e951809855fb95e22bba495b19be3173 ba11e364d27aea3d2de0819920fdac7fbce9cfa9 85791c74195209c48a5fc1ea1b350b28237cd6b5 68c273f72c95e1b114cce8454743b1670f0b5d5c b6666eb2eadfab5183bfdd900eaf4ee2e09d3abf 570a98f6553b7f5be20d99e3eef8719ef65d1f91 6e17e5b4e2579c64c2a966b4096e155b027ff966 5c8ca631829a8a456f98a8c2f608f3762fb50c7d 7b2b071a5a929d1d72fff8ae7356c72c954ad32a 7ea5163dd94c0beffe44d4e516b3763164dd5d78 06c4858f71fe4c2701949616a82e3f881590a400 851aa01e15b7e3418b8b477e43e89e249006f9c4 3fb4b7a9b7dd913230691543552c98115d81433f dd5effdd5f3f7023cf2f9093d1f638ef6764e246 40876b2906548d2709d217e2e12d3258ee79fff1 af3569ee97b0c0fb3ba79e0c9ca994d1a3f2fc66 d5b9918ec154d17722a116535690e3e48baa4542 261cb03e75a92712390a2a874cca8524bef40533 21b8537cc1af75602d6b0e54502e2d9726d4b2e6 266208f631d19ec1edf5724bc70917ab60c272c0 eaf2244f81080f027d1d8fadefc16a3edc137c32 556b5480bb3c9eac1b6543d89cc0cbbd4b3e1ffb d47643231a6793bc12bf1f91e6434c60d6615029 9df325840cb1b867c3c975f39d9f7e0b94cd884e 8ffcde26aaf2e4fee904a90cc349a0537ad33115 ca70acad2bf1a69d40f83f44462aef11bd0b8d0c 201bd0fa50ce2cc04bdceb0309caf0c17a54de76 00ff00435f7740b3462829fdd290f47da453c7e8 1901dd8503b05af017f0a223831a20fd2ed3d836 8318930682f9280b0d1a740537d805228ed688b2,,Add groot monitoring behavior tree visualization,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ![Gif is loading..](https://media.giphy.com/media/W1l8gAwrq56WArgPQN/giphy.gif)  [click for bigger gif](https://gifyu.com/image/cFdR)  ---    ## Basic Info    | Info |   |  | ------ | ----------- |  | Ticket(s) this addresses   | #1700 #1725 ...? |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | gazebo simulation of turtlebot |    ---    ## Description of contribution in a few bullet points      * Groot monitor support for behavior trees with custom nodes  * Reorganizing behavior_tree_engine    ## Detailed Steps    - [x] Added ZMQ Publisher for BT::Tree in run (moved later)  but worked (video in Slack)  - [x] Found bug (in nav2) why Groot crashes with current BT::Tree (manifest from BT::factory was not attached - see first commit)  -- This was already "fixed" / available in BT.CPP V3  but not used in nav2/behavior_tree_engine  - [x] switching / adding / using BT.CPP V3 implementation directly of creatingTreefrom[Text|File]  - [x] Added new parameter `bt_activate_groot_monitoring`  - [x] Added ZMQ_Publisher as unique_ptr protected member variable of `behavior_tree_engine`  - [x] Using parameter and resetting ZMQ_publisher  - [x] Moving ZMQ Publisher: Tree is already monitorable before it is running - after Pose estimation in RVIZ  -- Fixes only partial displaying Status of current Tree  - [x] ZMQ Publisher gets deconstructed when new tree is loaded from XML or lifecycle: on_cleanup()  - [x] Add CI Testing    ## Description of documentation updates required from your changes    - [x] Add new parameter to documentation / YAML  - [ ] Add Groot monitoring tutorial (incl. gifs)  - [x] Add Gif to PR... Way too much time wasted here compressing..  - [x] Add all corresponding tickets    ---    ## Future work that may be required in bullet points    - [x] Test Groot working with switching XMLs  -- searching an easy way to test this (is their a small tool for crafting action calls like in ROS1 availible?)  - [x] Fixing Groot crashing when lifecycle is resetted  -- currently my way to test behavior of a new ZMQ Publisher  -- Pose reached -> Cancel -> Reset -> Groot disconnecting -> StartUp -> NavigateToPose -> Groot Connecting = works  -- Pose reached -> Cancel -> Reset -> Groot disconnecting -> StartUp -> Groot Connecting = crashes  - [x] Adding Parameter ZMQ Publisher Ports  - [x] Adding Parameter ZMQ Max Msg per Second  - [x] Add loading BT directly from XML via BT::Factory functions - catch corresponding Errors    ---  ## Disclaimer    I believe that all open check boxes should be full filled before closing this PR. Maybe merging some parts of it in between as Groot already works nicely with only one BT  
ros-planning/navigation2,2362,2021-05-24T14:50:41Z,2021-05-24T16:43:12Z,True,2021-05-24T16:43:11Z,3d66437b63bed81f2de78cc0c711091a10a35815,1,1,22e74c6f1fdc9d5b1b48a4f9e4d5de0f3ee58e3e,,Fix map_saver_cli arguments not parsed well,Fixes #2358    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2358  |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Fixes `map_saver_cli` when parsing `--free` and `--occ` arguments.      #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2363,2021-05-24T21:14:03Z,2021-05-24T21:14:16Z,True,2021-05-24T21:14:16Z,4b3391ee01993e97cc8a566363581108d1f291da,33,3,395e814fde5d74851618f4dbe88e76007e4eeff7 4165fa42ef425d1110c08af91d33915a0f29f7e4 1a9f7c028d7ecaf375b3d1a5223073ee65a7867f,,Galactic sync 1 All commits before May 24,
ros-planning/navigation2,2364,2021-05-24T22:10:32Z,2021-05-24T22:17:53Z,True,2021-05-24T22:17:53Z,2a5fdcb42cfbde0a125e996e4d8e0fc8305961a1,1,7,e1b1864b19b9b200e7802502b476d0c68294ae61 4fdbe67379f05ba1151c2837b67451e638c70e46 05e04cf8d704546230707a46439c35b04cde2ee1 73a33eb4f889f38e30735c7d4c02266436b38e47 d8ae7fbaef5e65e98976435a265adfd3c8db70cb e7f3647994ad397e32e958c9acf0b7e5543d0fd4 941ac42c8954b7bbc333094b70d08415b045e12d,,adding galactic build status to readme table,
ros-planning/navigation2,2365,2021-05-24T22:21:40Z,2021-05-24T22:22:39Z,True,2021-05-24T22:22:39Z,22407b7522b4b07cc65a0c3ab865aa4dc7c34282,1,9,e1b1864b19b9b200e7802502b476d0c68294ae61 4fdbe67379f05ba1151c2837b67451e638c70e46 05e04cf8d704546230707a46439c35b04cde2ee1 73a33eb4f889f38e30735c7d4c02266436b38e47 d8ae7fbaef5e65e98976435a265adfd3c8db70cb e7f3647994ad397e32e958c9acf0b7e5543d0fd4 941ac42c8954b7bbc333094b70d08415b045e12d fe9dc53c999f423c015d9092b5b52ec0530e943e 1f49f217159e123784c5d7e4dce271d673772990,,removing dashing from CI table as EOL,
ros-planning/navigation2,2369,2021-05-26T20:54:12Z,2021-05-26T20:54:19Z,True,2021-05-26T20:54:19Z,fa39500bbc1815d9110ca3c82fb6e2a149931c5a,1,1,401378b372dcec96f2ef74c928fd365f8316aff3,,adding pytest dependency for lifecycle,
ros-planning/navigation2,2370,2021-05-26T21:18:10Z,2021-05-26T22:28:19Z,True,2021-05-26T22:28:19Z,782991eb9e245af9c1a26b83955bf4dc3aecf4c6,1,1,2a7603182e3632032a7380cfd5a5bbc3c73e509a,,Trigger via env rather than on failure,To avoid notification noise from failed CI status when apt and ros packages change.
ros-planning/navigation2,2305,2021-04-08T22:57:43Z,2021-05-27T20:36:36Z,False,none,d66864ff569b07bf0d02ca4369d2e0680573f3dc,1,6,e95a2299be32862cd37a25ff5571e3ceed2aaca8 d77e5b981a13a367da8d62d25cc7a8c9e75d4d2d 09d2ea9f2b5a645045dd5441564d5be32f77a5cf cdcebf93e3db950a73ae64b141f216c737638c0a 7877a1225c549aa0ced78a0f263cbff31829761c d7beb7104b952f89399fac7b78b80074a7d55ddc,,Check if goal_status_ is valid ,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2303 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation |    ---    ## Description of contribution in a few bullet points    * I added checking snippet of `goal_handle_` for avoiding race conditions.    ---    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2371,2021-05-28T02:08:35Z,2021-05-28T02:09:43Z,True,2021-05-28T02:09:43Z,ccbf662ea15c5bd06c4293defb58249633fd6e1e,1,1,49114df9478309f9cbc6692a5ad6fc9f57dbe17d,,Initialize environment for when no trigger is tripped,To avoid this:  https://github.com/ros-planning/navigation2/runs/2682686099
ros-planning/navigation2,2356,2021-05-21T05:57:34Z,2021-05-29T19:01:31Z,True,2021-05-29T19:01:31Z,c009b040cb1d24bfcfd05df92876fe9553f435d5,1,2,2d8de77005f68a60be1c78a81af2040be43de27b 7ad5d2d0f0e60ff4cb3e0d92f4320afae5cd2617,,Fix SEGV caused by goal_handle_ which is nullptr while result_callback called,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2303  #2305 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation|    ---    ## Description of contribution in a few bullet points    - Checking `goal_handle_` if it is `nullptr`.  - If the `future_goal_handle_` is not `nullptr`  try to get `goal_handle_` in `result_callback`.    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2380,2021-06-01T21:33:03Z,2021-06-01T21:57:28Z,True,2021-06-01T21:57:28Z,237c08d6106e4b268e64262890aad00c1e2e5577,1,1,b0bfb4bc985e20337fcf2a4e5fbfb30ba500c1af,,Make sure to add in necessary includes for conversions ,This was being done accidentally by tf2 before  but we should  make sure to include what we use.    Signed-off-by: Chris Lalancette <clalancette@openrobotics.org>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros2/geometry2/pull/420 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | N/A |    ---    ## Description of contribution in a few bullet points    * Fixed navigation2 build against nightly/Rolling    ## Description of documentation updates required from your changes    None.    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2348,2021-05-18T22:29:44Z,2021-06-02T01:44:25Z,True,2021-06-02T01:44:25Z,b63b11f8a638faf389d6b99911d95899abe1580b,7,9,0fd566826a4c5751eb0053e7019296705520e163 7d5d16d7de298da1f1ed6cb32d12b58c73eab41d cf6bcf8ca3498d051303a2e99f460057128cbbef 6e3d066fd135453f7459131cad0f5b69386d9a17 fdcb03356fa8b17aafbd0f6eae711b242bdcbc0c 87ca23b6f271f48a756d1d07f1afe204e4d75e86 8d6a5e250561f653d58bbe3ae921cdbfa7bf5544 c024e8fae5765d45760c922cda358b21e203908a a605fe2658e4ad2f7cbb2a5e4bbf3ee284136749,,Reduce CI Docker images and revert to nightly build,With improved CI caching with colcon cache  like PRs using the main branch to seed workspace changes instead of only the docker image  we could reduce the size and number of docker images used for CI. This abbreviated the CI image by deferring the overlay build to CI  and instead just building and installing overlay dependencies within the builder stage in the Dockerfile. This reduces the CI image sizes considerably:    ```  REPOSITORY                  TAG             IMAGE ID       CREATED          SIZE  rosplanning/navigation2     main.builder    b596d3403956   19 seconds ago   3.91GB    rosplanning/navigation2     main.release    71903333d838   16 hours ago     4.71GB  rosplanning/navigation2     main.debug      80b43ad2f88b   17 hours ago     11.1GB  ```    We'll wait to see how https://github.com/ros-planning/navigation2/pull/2343 holds up before merging this to switch to using a single CI image for both debug and release jobs.
ros-planning/navigation2,2385,2021-06-02T17:27:18Z,2021-06-02T17:27:41Z,False,none,996a22d17f8d87f3e762a5ba53324cea161b13b4,1,1,f81ea04a0e2bb35adca99b356ad406828b9d6756,,Foxy syncing recent master PRs,#2379
ros-planning/navigation2,2384,2021-06-02T17:26:38Z,2021-06-02T17:28:18Z,True,2021-06-02T17:28:18Z,a25cd438aa4cb08735ba9a6e9213c78b8ad7f528,2,2,62bbb2be26f7aa828db05bfcff4ac4ca0d947a73 836185cd55194f42766fec948ddab5a1783d62ce,,Galactic syncing recent master PRs,https://github.com/ros-planning/navigation2/issues/2379
ros-planning/navigation2,2394,2021-06-07T21:59:03Z,2021-06-07T21:59:39Z,True,2021-06-07T21:59:39Z,f23d915608a94039ff91008014730971a8795c15,1,1,b4bfa2fca4b1ac5f65d1b11e3680f6da93f2f7fe,,Update image tag name for CI action,Missing from https://github.com/ros-planning/navigation2/pull/2348
ros-planning/navigation2,2390,2021-06-05T13:35:56Z,2021-06-08T00:36:11Z,False,none,b7d45856294997d49eb3657015fa0358623e2f05,1,1,e470f30444e377c4c4a09a8086819fadcda419c5,,Update trigger_dockerhub yaml,Use correct docker images tag.
ros-planning/navigation2,2387,2021-06-03T21:32:12Z,2021-06-08T17:01:43Z,True,2021-06-08T17:01:43Z,980f8ecf1805f272cab9bd156e593e59c3690d07,1,1,9294f1b2cac2ec6cd9fae25fb7026a0db274e3ed,,Increasing nav through poses remove point tolerance to 0 7,Deal with issue with default params of TB3 sometimes not getting close enough and causing issues. 
ros-planning/navigation2,2391,2021-06-06T23:45:50Z,2021-06-08T17:19:23Z,True,2021-06-08T17:19:23Z,2c9b2c915962980f8a612d4a83d630da11e35875,3,2,101fe9caddf0e81032cd63c966eeece9382b2be1 dbc8153498f562961106f8876f5e88756b1e4ba7,,Use fastcov to speed up coverage for CI,Make use of `fastcov` to speed up CI:  https://github.com/RPGillespie6/fastcov
ros-planning/navigation2,2395,2021-06-08T16:49:16Z,2021-06-08T17:37:07Z,True,2021-06-08T17:37:07Z,44004638244da7833956fa0becff91452403e39c,1,1,b79514b6fba3cb1ac7aacb92d99b6494a40318ad,merge,Move unmerged changes from 2375 into main,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | Requested change from PR #2375  |  | Primary OS tested on | macOS |  | Robotic platform tested on | N/A |    ---    ## Description of contribution in a few bullet points    Moves changes from PR #2375 that haven't been fixed in the past into main.    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2396,2021-06-08T16:52:24Z,2021-06-08T17:37:17Z,True,2021-06-08T17:37:17Z,37b519715bc77f276f2979ce7632602c507fde29,1,1,c264c96676667d1de8a52d5114278049bf09282c,merge,Move unmerged changes from 2375 into galactic,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | Requested change from PR #2375  |  | Primary OS tested on | macOS |  | Robotic platform tested on | N/A |    ---    ## Description of contribution in a few bullet points    Moves changes from PR #2375 that haven't been fixed in the past into galactic.    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2375,2021-05-29T02:49:06Z,2021-06-08T17:37:20Z,True,2021-06-08T17:37:20Z,1160100d9689bea4c149031bb82bf7d182ec0645,10,4,7a165c51f491eb21dd48c3a2e82d30a3b7905707 2be1d2818155342745adc8d3608b029b0389a793 3b0193be7968c117d27f14111f91f7e264f8e5c0 15011d5c22749e648587874fba91fcbc92db515d,merge,Moves changes from PR 2083 to foxy,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | Closes #2368 |  | Primary OS tested on | macOS |  | Robotic platform tested on | N/A |    ---    ## Description of contribution in a few bullet points    - Foxy branch now builds on macOS  based on fixes from PR #2083! Proof of build on CI: https://github.com/nkalupahana/ros2-foxy-macos/runs/2698988683?check_suite_focus=true    ---    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2399,2021-06-09T07:27:45Z,2021-06-09T15:53:17Z,True,2021-06-09T15:53:17Z,8372aa644a2c3a79d3a9f382db3aaa8b0a9e101d,3,10,9e1cecc564dd55952b4980457519024c1ee3256f 89c03cdea6c3073ff2b8cc104137cabc6389f014 d250152a5b4308c388c09e0a536894ef3dfd6c9c 0ffd8e8e7c1176d6701d1c1869be2ec1b27172ec 620eb22e4c783bacf1f5439fb855ec40fb928735 fec50aaf41668690f1caef84bef6aa347110853d d508c715c23a54799511d1c52a8e723f7ff330cb bc09cdae98fc3c1972c1921b44eabed9faa84922 ec0957eff7cdbed71e2a09a9165f26c06c42be19 cf1632fc0af61b163e5a84226c68f123d566d34e,,Clean install and test result bases for stale packages,Use the colcon clean extension to clean out stale build artifacts or test results for packages that are to be rebuilt or retested  preventing them from persisting in the cache cycle and accounting for when source files or tests are deleted or renamed.
ros-planning/navigation2,2400,2021-06-09T17:41:33Z,2021-06-09T17:42:07Z,True,2021-06-09T17:42:07Z,846cdb1de99f96a57723c47110371aaa6b6d50fa,32,2,6f6bfc3c5f3421eec46b66d7c0f4e70d58017548 39e1758f8de693188741be31b17aee7a075e1aae,,Galactic sync 2 June 9 ,Syncing all PRs to Galactic on and prior to June 9
ros-planning/navigation2,2401,2021-06-09T18:57:19Z,2021-06-09T19:03:38Z,True,2021-06-09T19:03:38Z,d2cf200bc0b7c32aeddbdcd110e7a153b1f476ac,2,3,bd2cad4070e61c1103a1e68f83cc3e0913c8f0b4 00830c1116bd10f9fbb9603f51021f1f179aa93e 6289e764ef12b604fb59e237af47acf68988a2ab,,Cache ccache folder in CI workspace,Fixes issue with restoring ccache  introduced in https://github.com/ros-planning/navigation2/pull/2343 . This does so by setting the `CCACHE_DIR` to be inside the workspace (i.e. current working directory). This also has the benefit that each workspace now caches it's own ccache directory  and simplifies the number of specific steps.
ros-planning/navigation2,2402,2021-06-09T22:43:46Z,2021-06-09T22:44:58Z,True,2021-06-09T22:44:57Z,4486a5cfed62f325185e34420094f447d7e5d6a7,1,7,e48bf1a8f9ab6921120a123e94d3de88d921ae62 1c72a341dd278a18d74270ece4b8f219cb3515ab fa51d97608fdecfc1a33ff1e3a6d533012d044d5 1bd83cc9ab3e72fff0b2d75c161205a8e671dbc1 a5f23e5ca8e84790159fa9481c6ae8ba0ec72e65 a00fc6e43046fe73a1147733104bbec6f48f58cd 8593459bb531325711bbc534413ed63d6690e9bc,,Update lockfile formating,Update lockfile format to cleanly list versioned package dependencies for each workspace in a readable table format  and fix up environment so that rosdep correctly resolves apt installed dependencies.
ros-planning/navigation2,2397,2021-06-08T17:17:59Z,2021-06-09T22:56:30Z,False,none,a2478f0a741fde833ebea702e0c170078b027298,1,3,c393dcded2a97ad85edcfc29349aa4a249169437 af593f5254cc39cbfa7c4da5593657ab8c38abce 63a95cc35f0bddbe246b53792bfe80404691e6be,,Reordering headers for linter happiness,
ros-planning/navigation2,2403,2021-06-10T01:11:16Z,2021-06-10T01:11:41Z,True,2021-06-10T01:11:40Z,40f4c38103f4329694c53d9b4864cb6580c380d4,1,1,3c46d0bba31259744e21f87cecc3494c826714b6,,Set ccache envs to use absolute paths,as ccache doesn't seem to work otherwise with relative paths.  Related: https://github.com/ros-planning/navigation2/pull/2401
ros-planning/navigation2,2392,2021-06-07T02:22:28Z,2021-06-08T20:51:47Z,True,2021-06-08T20:51:47Z,083f3214c5f62010aa4a83496263561459ceef65,4,5,ddeb668e5b1b401ce618668a320f9daa54fdc5a7 c22e087a077567e325ed3a8bc08fbf46f0cab089 968d23c1dcbe8caea8851be5acbc7d58ac276e53 7a2188f570897181526739f9a447cc65404205d7 0dae26f5963ef0b9e67aa725bb0f04a0a5a787ae,,Revert CI image to build from osrf ros2 testing,Reverts parts of: https://github.com/ros-planning/navigation2/pull/2348  Depends on: https://github.com/osrf/docker_images/pull/542
ros-planning/navigation2,2411,2021-06-16T21:00:10Z,2021-06-18T00:08:37Z,True,2021-06-18T00:08:37Z,fa1d0917475b5f0810b7e83585c05a6908a73d9a,24,7,785674ca2e94b8cf5b25ca73e66b76d1c9f5a8f0 a0d5b9486e579e2a98e8e8660323c6cf50176007 7a23c23421b405262b67fc86942c690e6c92973e 721d862bf158a340f2bdd705bee6069697bec147 12299c796bcf5a3b7cfdf6e5e0574137455a4b69 3dbfcba9dfb5df3b7b3249e2c785631330361b06 3626ee1d11a2ea698ca8e6c04b8787d3bb54662c,,Nav2 Simple Python3 Commander Library,Adding in a python3 library that can be used to create autonomy applications with Nav2 abstracting away the ROS2 and Action specifics.     TODO  - [x] external review  - [x] Navigation.ros.org migration guide and configuration guides  https://github.com/ros-planning/navigation.ros.org/pull/179  - [x] announce to community  https://discourse.ros.org/t/nav2-new-python3-nav2-api-to-build-applications/20954/2  - [x] Handle aws warehouse world release so this can be deployed to binaries https://github.com/ros-planning/navigation2/issues/2414
ros-planning/navigation2,2378,2021-06-01T13:41:43Z,2021-06-01T17:36:41Z,False,none,f1a8123442e7b341c66554a5e78d6102661c3eb8,1,1,9bfb41efb167945f9d3a5c76d0e4c99792afb091,,Adding the capability for the RRP to drive the robot backwards,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2327 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | gazebo simulation of [Neobotix MPO-700](https://github.com/neobotix/neo_simulation2) |    ---    ## Description of contribution in a few bullet points    <!--  * Depending upon the global plan generated  the RPP will enable the robot to drive backwards as well.   -->    ## Description of documentation updates required from your changes    <!--  NA  -->    ---    ## Future work that may be required in bullet points    <!--  * Maybe someone wants the robot to strictly drive forward and not backwards  this can be done by just adding a heading param.   -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2404,2021-06-11T23:26:39Z,2021-06-18T22:18:59Z,True,2021-06-18T22:18:59Z,8a6607b7891c5a9ae216e9126e996de194c603eb,43,28,127acb15b07032a3c11734397d916f5ea7e5b30e acd9cc0e2ed29250b1fc63eaef53015cccd5954c 6fb439c0edaf5ac31c66ba04103c92d0f9627295 34bfec12474d7fccef16c973692c0894e92cf605 75f1d2e8e68dc01fd383fdbe38f5409b3d70508c 951c3aad75a0cf611985550c44a43ca2a72cc5fd 16f5f603a6831aa36d2aa8d9a7276bd266c6e8ec 3ea14d9db853c344d76dafd735a85074649f35cb de3aaf1b02b20271e9368d52cf76c7f850d3e252 9c82a70c36d7a72024153737a693f7ff9fdeb494 9ca75ee7d1dfd85d922d34211d622173701b81d1 0aa54cc6c1c5fa612b2acf15e140c19ab1251f79 64e0c1ae48d5d618ed6083774d4861d25bf48540 0452e77e999e06d3d90a135125cab32d18b0774f dfac215f55bf991b0a3519e04ede8f2fef33b128 6d4be2d6645fb05f22078f616d45b7c7d8bf8f67 4539a08e21a76ef6a0744388c3ed52ad549f9707 e01aab2d680fe22b33ef6d5773e740ed4e3b69a4 8e5ee4f362792927c13b9837cef297b75653f3f0 ecd84c95dc89858954687cef7d895fd0e9a7b07c d441be729b34c993d6b8c7621e170d0257e2ba34 0f1399e012d3ddebf64ad5904a45dfd978b7a81d c6d16c06047f1b6d5da46ae765be85f26626028e c07813e8ea23dbf4e875ebd53621296219193fba cfd8573819f611c05161de6de81f7a5c9ffe46da 28336b314ae1fe9538ba6724c7a9ec530a1ed99f cb57ae720c17c88320286285a66628284c8be9c0 cd763c78cbfafa3d5f8574dc4f1c20958e52c4bb,,Hybrid A optimizations and completion without on going State Lattice work,See https://github.com/ros-planning/navigation2/pull/2352    This implements a number of improvements to the smac planner's 2D and Hybrid-A* implementations making the paths better  faster  and of higher quality.   - Collision checker rejects collisions faster and queries the costmap for coordinates less often  - Zero-copy collision checking object  - precompute collision checking footprint orientations so no need for trig at runtime  - Only checking full SE2 footprint when the robot is in the possibly inscribed zones  - Computing the possibly inscribed zones  or the cost over which some part of the footprint _may_ be in collision with a boundary to check the full footprint. Else  check center cost since promised to not be in a potential collision state  - Renaming Hybrid-A* planner to `SmacPlannerHybrid`  - Precomputing the Reedshepp and Dubin paths offline so at runtime its just a lookup table  - Replacing the wavefront heuristic with a new  and novel  heuristic dubbed the obstacle heuristic. This computes a Dijkstra's path taking into account the 8 connected space  as well as weights for the cost at the positions to guide the heuristic into the center of aisle ways. It also downsamples the costmap such that it can reduce the number of expansions by 75% and have a very small error introduced into the heuristic by being off by at most a partial fraction of a single cell distance  - Improvements to the analytic expansion algorithm to remove the possibility of loops at the end of paths  whenever possible to remove  - 2D A* travel cost and heuristic improvements to speed up planning times and also increase the path quality significantly  - Replaced smoother with a bespoke gradient descent implementation  - Abstract out common utilities of planners into a utils file  - tuned cost functions  - precomputed obstacle heuristic using dynamic programming to expand only the minimum number of nodes  - A caching heuristic setting to enable 25hz planning rates using cached obstacle heuristic values when the goal remains the same  - Leveraging the symmetry in the dubin and reeds-sheep space to reduce cache size by 50% to increase the window size available for heuristic lookup.   - Precompute primitives at all orientation bins    End result:  - Plans are 2-3x faster than before  well under 200ms in nearly all situations with default parameters. Usual paths across a warehouse-sized open space is about 100ms. Usual paths across a walmart-sized aisle space is 30ms.   - Path quality significantly improved by smoothing and new obstacle heuristics pushing search expansions in the center of aisles -- also resulting in less full SE2 collision checking requests since far away from potential obstacles  - Using caching or downsampler parameterizations  can easily achieve path planning with sub-50ms in nearly any sized space.     Needs:  - [x] parameter updates in navigation.ros.org (and updated images of maps  paths  and speeds)  - [x] Migration guide that the name has changed and other changes in speed / quality (also plugins list)  - [ ] external review / testing
ros-planning/navigation2,2416,2021-06-18T20:23:05Z,2021-06-18T22:19:46Z,True,2021-06-18T22:19:46Z,30c97c831fda772228f6e0ba26f12a471d1cba84,1,1,d187c58e32569f855120339803aa17689a3a0b63,merge,Increase timeout for nav2 rviz panel clients to 100ms,Resolves https://github.com/ros-planning/navigation2/issues/2383 to increase the base timeout for nav2 panel. If it reoccurs as an issue  we can add a parameterization. Ideally the nav2 panel is just a demo panel for people getting started or during basic testing. If we find that people want to use in a more real use-case  many more things should be parameterized. 
ros-planning/navigation2,2302,2021-04-07T21:43:33Z,2021-05-19T19:25:21Z,False,none,85aba9c758208907ed755b62a7dd7efb40e0014d,12,3,127acb15b07032a3c11734397d916f5ea7e5b30e acd9cc0e2ed29250b1fc63eaef53015cccd5954c 5809454a15a7b0713a21f52fe6aba813bcbcf358,,major smac planner collision checking speedups and improvements,@maxlein in my testing  this makes the full-footprint collision checking nearly immeasurably slower than the radius checking. I tested using the map and footprint you provided and found only a **2% slower** total planning this way. The radius-only planning does so at ~228 search iterations per milliscond and the full footprint checking is 222 search iterations per millisecond (up from ~140) improving performance by **around 40%**.     Improvements include:  - Precomputing footprint orientations for collision checking  - Stopping collision checking early if already known to be in collision  - Optimizing collision checking code to minimize computations  - Inlining a simplified function from prior optimizations  - Only doing full collision checking if the robot is possibly inscribed (if we know its in free space for instance  there' no point in going through that trouble)      @maxlein @naiveHobo  can you review?
ros-planning/navigation2,2417,2021-06-18T22:50:12Z,2021-06-19T00:48:57Z,True,2021-06-19T00:48:57Z,eab8b4903e065561e9069163496c2962471210b1,1,1,204ab8301c29c488fbe22ec466dc348526c92d44,merge,Setting default groot monitoring to false,To resolve https://github.com/ros-planning/navigation2/issues/2386    
ros-planning/navigation2,2419,2021-06-20T21:08:45Z,2021-06-23T06:23:34Z,True,2021-06-23T06:23:34Z,f201b4f8d07bdbbf14d49dd05025d9c6632039a5,2,10,9764008af2bbc4c9622b0f78c20029972779a0e0 5265b2c11925f948b9e407564edad070edeae7e3 26a29383d1e36189d7f72ff6fdda3e31452d8781 08c60ad30e38f5d33f902e6fbce0fec5057a1bf9 81d002b12097a32fb401a6ea6ee4a42718c99b95 20f28949904ef965c8b5b011f3e387037adc93ce 46ef47b9e40e48320436d0a16b91cf94b76f8bb3 d9cce81650000e09429d22a1d4ff845421cc23d2 ca20f90889d22a1d1bc3d87b45d53e88c9a068e5 5543fd5032fc7966e04518073774d1f7b5cf2480,,Fix code coverage,This mainly fixes the include filter to only look for the package name in the paths reported  as using package source paths can exclude coverage for files from other packages  such as header files reported using under workspace's install path.
ros-planning/navigation2,2425,2021-06-23T22:23:42Z,2021-06-28T16:45:58Z,True,2021-06-28T16:45:58Z,c616cf0e81f21d762fd0816a1af3f3b6e39d45d9,1,2,b41d651bf8f938bf70f09a2c9eb37bbf9020cfb0 8ab0206f3897f0ba31a1b6e41c50cd15131389c7,,Followup to PR 2413 for main branch fix for operator in observation hpp ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    This is a followup to PR #2413 for a `main` branch.
ros-planning/navigation2,2424,2021-06-23T22:21:02Z,2021-06-28T16:46:13Z,True,2021-06-28T16:46:13Z,bdc600ffb17a1f1428845a5ea8a5b1baa4501a92,1,2,f52940391977c718c4dbad887220a57f4616d046 46959d3ec2d1054d4fbc196d54b9388a2a9fca27,,Followup to PR 2413 for galactic branch fix for operator in observation hpp ,## Basic Info    This is a followup to PR #2413 for a `galactic` branch.
ros-planning/navigation2,2413,2021-06-17T18:41:45Z,2021-06-28T16:46:42Z,True,2021-06-28T16:46:42Z,57d49e119964df93d07d9ed7b99ad361e5736975,1,3,ac1516df4bc05598bb7ed4040e3dc24f2e915978 ca4182817ceb2221c01865eb02c116e7830fd5f1 8cf13922171b4012c5c0096e55662c016ae75a84,,Explicit assignment operators for Observation default assignment is a bug here,Also move constructor. Default copy assignment is not just a shortcut to copy constructor  sadly    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket this addresses   | #2412) |  | Primary OS tested on | Ubuntu under WSL1 |  | Robotic platform tested on | N/A |    ---    ## Description of contribution in a few bullet points    * Fixed bug with copy assignment being just a copy of all class fields  without proper `new` call for `sensor_msgs::msg::PointCloud2 * cloud_`  * Added move assignment and move constructor  because it's they are called inside `std::vector` with less (de)allocations    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes  Teeeny changes:  * Changed description for copy assignment  * Added description for move assignment and move constructor  <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points  * I guess similar pulls for `crystal` and `main` braches should be done  * Maybe check if any other default defined functions really shouldn't be  <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2426,2021-06-29T00:44:12Z,2021-06-29T00:44:32Z,False,none,none,1,4,ca181d2b15525be47e6b6d42e6e0a86b595ce0bf 5f38b89eacdd9032e4854d69b5f51ad39011a033 25864aa05d9386306bf09d370ff0db8ca108589e 7c7f41b0c392e4eb15c159af67446afb0331e49e,,Pull latest commit,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1) |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2430,2021-07-01T17:21:24Z,2021-07-02T09:18:42Z,False,none,d9a2aaa25767110d58364aafaec9b3c321df1dad,14,1,f9f5a12db7ba4925e05b3eea3d3d987034fca050,,Add modern cmake export for missing definitions,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2429 |  | Primary OS tested on | Ubuntu|  | Robotic platform tested on | none|    ---    ## Description of contribution in a few bullet points  * Switch to modern cmake export for packages using the `PLUGINLIB__DISABLE_BOOST_FUNCTIONS`  * Used export_${PROJECT_NAME} or export_${library_name} as by [foxy documentation/convention](https://docs.ros.org/en/foxy/Guides/Ament-CMake-Documentation.html#building-a-library)  * Updated rviz plugin to this convention  * Removed include_directories for directory `include`  * Instead use `target_include_directories pubic build/install_interface` as this is the only way the dir will get exported    ## Description of documentation updates required from your changes    Nothing should be required to change    ---    ## Future work that may be required in bullet points    * Thorough porting of all packages to modern cmake  * Consistently using cmake vars or names  * Consistently using public and private in all cmake functions for targets    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,1839,2020-07-01T20:51:19Z,2021-07-02T17:58:45Z,True,2021-07-02T17:58:45Z,7fa550911986181c52bb9b715f67879d705e8bbb,10,84,14c33e92bd6de9d9abf623efe7cec875b4833e0b cc9505832461b9d308cece3c94863506c7a62909 74946f297581f5a8dbe17e91d56325846420406c ae6ecc44968398eafd06b1cfa50d8985b3729bdf 24ab8232e63516e0fa516e95da141245324e412d d4dd2631e99e4754aa07242e0bc61e89dcb1c50f d6f8b8fc85f7973f9226a6c0a199aee93300fb85 a11fbd9965c1d1d5974833a23fde7ce1c2e99b9d d6f9584b70f40221bc152d8e4cedc23823138f6b ca4ac17f7161a6472e5c364bdc78c035746a850c dd1563c68051b73eeba201cb83b5ec41e42ab4d4 e099e083392da53f4f474e65e43e76a3e24d898c efca9625efc55e27023edfb1f544b30e21b1a686 28925f86ac468bc2ddf989576964483f639f9f79 c35ea2bfc0359bd78c39d364e1e5e0f566588789 d7f50d081641fa0a545d7fdb5184c57ee0e6c026 99efed3524ecf493c7b58e0e8d416cc5efc3d28d f4a622b64a9861b55aac9737bae80e258d87ae8b 6ad8bbdba5de15875f687df9b27bbdb95cd3e85c 6376718827d032d4680c8ee8dd472f5767c29f03 61ceb55e3bb7b83978480ed7182623c9d1191ad4 27c4d3d24b16c0140a19d66697c94a6892ea5934 72eac931b877e57544bf2fbf75c7558141fdbaaa b5b705b95d819be49908c3e81ced943f97708772 3349e206ee1f74690e19932bee298b669d5e578a 2d549e1a981e9545c446cb3faacc33bcb1c43556 61d905e624ea0cf8ba8611fd2c65ff238baf419f c70970a8411061b74d7b6167c6b267bb00108a46 ded0dc9616bfa8d8db88aaeb5e158a152b056af7 6cf939154cf911abc2e6648d5a69866e2f60e1c3 81367d13cefc8744799ad4c217c0708ed48d5685 d2326b74d4c009fcc229ea22af551043105e03ef 04cf677ed9eaa22ed1168a3ce162318c12114e56 62127dbd70a0cecfa321f410010947c5dc65572c 19a8a0141efe98e732353cdd8c99fad4023f2c95 3c4ef8730da51a36a1b1df5867abfedf2fb364a3 8febae28b956ca8c7c542db63a387de0e43083c1 c2baaa086ffa33f53d72638b2858cd396deb708d 653f9201cbed4f14e7ee351a879be37e223a4a82 0a34ff3722084bc1253db8dfb86c3a85f8a0c21d 6f07371f827fdac83957273084f02ef72f58e02d c32a338eb8733676667d4b7cf6ff0d29b2f65ac0 d4ca17c8750cf4f5498b67bd6828509ca37e9a59 fbbb8c147aabb741f040aeee7c04af76e81bc3d4 5c42a87bf70e18dc7f5cf834319759739775df5b 2137bd57099ebaf40da93a80d6ce0d6aff736d2b 6586a8219f32ddb434dcbb6144796ff77377ec48 3c1bb0d32653a20bee356d119beffced5386bbfd e15ce175c021cebc485fb26b1db59fa9da47e84c 2f9d63fa86f20de6d5a1c1027d88b392444d6100 81bd2abc704de928a7481ddf0de5c6040e98ddb6 727e60eee3a78a94a8b4736c15e7732390a9147e 2830e544ce6556ca2a7b5870b960642e6e11e0d1 e72f401219fc52d362e1c9dc5a2439b714a454d4 d6eb872b0008c88e6fbd6acd9016b44d35a2bec8 ae430d6c37156d60df239a1547e229625fa01376 4ea8976fe2aafa68ba72a720dca0c494ac1f806b 478a84341b67e754db8ddb9e87a0e0186770a062 81e81a6f63b895bc4fa05b94ac49981ff1a8ba9a 3e0bc169c596f7d847e9dec6c8d877130b5fdead 3a9983b6a85542487ce3ed8d1503b475dcc0113a e24baa66a6d81b99e7e1f5c90715be29c6b767bb dec0dddf02a2b758be05cb154f4016604260f715 6c33e50f606d395216cdbfc1b05d9fe42de3d9e8 cbad8ffa5af23f59d127c8a8910a0432649971ed da2496e0ee94637c183e32b2da5bfc8c926ac9b4 e8da09e420547032b0302055099424d03b24022b 4210dc9891d0b5b991c8826ced07342001dd15f1 f45980a753b0d9e8c5b5e2eb16bb0c7592e7a9dd 8ed836464122a8a5bd70258346de9b0143e7e6b7 cffb03480e51e3d7cea90408766cc54e23ed81bb a7e1da0cd62b4e99c62c57a7fef3a780b45a9390 4c04a66c305d41373eadd4f78f5f793d0c9adb0f 935fd5ec1db9ae584f8b4cefd5eedfadf3a3fc7d e9f3177fd4d13f05a2c38d808c970d79da92e8e6 34e5b31e92d2346f8cd429106290eb1a8050334c 9b046bf325dc2d7377ff0478e726874fe92e735e ad184e0c4c9ff4898bd933c62b4cb16efb1bd75d 94c6f6abd8deeddc42c75422638b0acaaa64d1ae 87f7842fb25c3a2ee42e06faf549ee8e36006c36 5d81029a1943c0c6d2dc2bda308a2e355957c8ce 13b8cded246d7d5c8f394a10e8b0b29b5e8d7be0 bad3d94ddb507a4217c99125eafa874be97eeb77 984a7a052105cdcf151853e06af9756194591700,,Add lazy_theta_star,Signed-off by Anshumaan Singh : anshumaan567@gmail.com  <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->  Add a 2D Theta\* Planner Plugin  ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |#1710|  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Turtlebot3 Simulation |    ---    ## Description of contribution in a few bullet points  * The planner is supposed to give the users the flexibility of tuning the path's behavior using its parameter while performing a graph search algorithm to attain the path.  * It adds the feature of any-angle planning using A\* to the navigation2 stack   ---     ## Description of documentation updates required from your changes  * Would be provided later    ---
ros-planning/navigation2,2432,2021-07-02T10:48:49Z,2021-07-02T18:01:55Z,True,2021-07-02T18:01:55Z,10650836e639f6c6cdb529f78a049dd0623ee46a,10,1,52a49d82f8fd4f78db0029b3e0a5147ced758cde,,Add missing export of pluginlib boost disable flag,  ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2429  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | none |    ---    ## Description of contribution in a few bullet points    * Used `ament_export_definitions`  * Veridied flag being applied by `nav2_costmap_2d` to `gridmap_costmap_2d` in foxy    ## Description of documentation updates required from your changes    None required. Should be transparent to the user.    ---  ## Future work that may be required in bullet points    None. Rolling and galactic can just remove the flags (see #2431).    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2431,2021-07-02T10:43:41Z,2021-07-02T18:02:32Z,True,2021-07-02T18:02:32Z,29c1af087afffb80ddc4ec172015fee2c8a37166,12,1,92942bfc7795d4851ff7424ce05acb39c9ad8d43,,Remove deprecated pluginlib boost feature disable,Boost features have been deprecated and removed  in pluginlib for rolling    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |#2429|  | Primary OS tested on | Ubuntu|  | Robotic platform tested on | none |    ---    ## Description of contribution in a few bullet points    * Removed compile definition `PLUGINLIB__DISABLE_BOOST_FUNCTIONS` as it has been deprecated for rolling (and galactic)    ## Description of documentation updates required from your changes    None required. Should be transparent to users.    ---    ## Future work that may be required in bullet points    None required.    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2445,2021-07-12T00:51:17Z,2021-07-12T00:51:41Z,False,none,35c5d5644dbc9706810648dc2b79e0a51c3f7071,1,1,be6c316621339702204d7c17fb22c73be8f232f4,,test,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1) |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2427,2021-06-29T12:41:58Z,2021-07-12T17:50:02Z,False,none,c6989f0d83b15db3b5f3b16f169c8e0d23f6e9c4,3,7,c742f1a140e70a7c7164ad736618dbbd29c4a1ac faeafe860eb3508cdb28523e14f306cac2850ac8 e1ead123df1e85623c15e8141a26a06afb657109 66284053aa8f4652fc3e6fd29f5e1e381956ac70 3c39b58b14e65642d2dd8040ec812d752e367dc5 23f8d134fc621ec82b8ce4ba0879426b8df3ba04 8c1137dd1fb2cf56f5fa8f6ee3ab7a7764746b49,,Feature addition capability for the RRP to drive the robot backwards,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2327  |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | gazebo simulation of neobotix mp-400 |    ---    ## Description of contribution in a few bullet points      * I added this neat new feature for driving the robot using the RRP planner backwards. This enables car-like robots to efficiently perform the maneuvers using the SMAC planner.         ## Description of documentation updates required from your changes      * Added new parameter "reverse_driving"  so need to add that to default configs and documentation page      ---    ## Future work that may be required in bullet points      * I tested on a differential drive robot  but it will be great if someone can test it on an Ackermann drive!       #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2447,2021-07-13T12:30:16Z,2021-07-13T16:11:29Z,True,2021-07-13T16:11:29Z,502b103be33a12942a79238f2f5250772e38dfd2,1,1,cd84e511c71802501bc8034ef539d856a12f6ff7,,Add missing comma in bt_navigator plugin list,Missing comma after bt node plugin name https://github.com/ros-planning/navigation2/blob/54911a701933f4613aef3f8f9cb62ac18975d907/nav2_bt_navigator/src/bt_navigator.cpp#L64
ros-planning/navigation2,2449,2021-07-13T16:35:24Z,2021-07-13T17:29:31Z,True,2021-07-13T17:29:31Z,3ead7d15b371729ab29091b7b1e96b25430286c4,57,5,f4b097ec841b69b02c11aa18c4f2e349ee8c0e09 eaeb3e034e69c47d8bbb5da1ed13df34eae75893 fdf2ce44d0ca985e3feb8ec0c42c58e1359fa89a 9f5343130f26cccb743b34ad68e066f3a5a51138 12c5e3cc74cba4c6b28900b7ec6be35e638044fd,,Galactic sync 3 July 13 ,- RPP reversing   - Hybrid A* optimizations  - Allow renaming of navigator nodes  - lazy theta* planner  - Reduce waypoint follower nodes  - adding missing comma in a list
ros-planning/navigation2,2450,2021-07-13T18:02:32Z,2021-07-14T22:14:27Z,True,2021-07-14T22:14:27Z,5a7027536068183602f10b419bd711fafdad6784,1,1,1ec5fb0007afba10d865547a9b2d5d6de751e294,,Adding launch_testing_ros dep on nav2 utils to install to fix dump tests,https://github.com/ros-planning/navigation2/issues/2433
ros-planning/navigation2,2441,2021-07-08T02:38:20Z,2021-07-12T19:15:02Z,True,2021-07-12T19:15:02Z,54911a701933f4613aef3f8f9cb62ac18975d907,2,2,05930e1dca24fd71479cf6e21d828ca626963570 8ab7676714cfd255e3f2338cd54cf703d6f68ee6,,Reduce nodes for nav2_waypoint_follower ,Signed-off-by: zhenpeng ge <zhenpeng.ge@qq.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #816) |  | Primary OS tested on |  (Ubuntu20.04  ROS 2 Galactic from binaries) |  | Robotic platform tested on | (gazebo simulation of  turtlebot3) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  This work is under project `Reduce ROS2 Nodes and Determinism` of OSPP2021.  As described in #816   `client_node_` in `class WaypointFollower` need be removed  you can find more details(other nodes which need be removed) in https://github.com/ros-planning/navigation2/issues/816#issuecomment-876061677     refer to https://github.com/ros-planning/navigation2/pull/2334  i remove `client_node_` by using callback groups / executors  * create new callback groups and executor   * `nav_to_pose_client_` use  `callback_group_` install of `clinet_node_`  * replaced the `rclcpp::spin` of  `clinet_node_` by `executor.spin`         ---        #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2448,2021-07-13T16:34:41Z,2021-07-15T23:39:36Z,False,none,d1f7f00c9c9ea3e5af6f39644f1d01ca63f54f3d,2,2,881dbb01befde874de1e1163cdc4e53a3a0d156d e57a3c823ab457636a4257a9fff1e470a7cc5463,,add bool arg use_default_callback_group for ServiceClient,Signed-off-by: zhenpeng ge <zhenpeng.ge@qq.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info                       | Please fill out this column               |  | -------------------------- | ----------------------------------------- |  | Ticket(s) this addresses   | #816 based on #2216                       |  | Primary OS tested on       | Ubuntu20.04  ROS 2 Galactic from binaries |  | Robotic platform tested on | None                                      |    ---    ## Description of contribution in a few bullet points    In PR #2216，`callback_group` and `SingleThreadedExecutor` are created to spin_until_future_complete. they are necessary when we use the method `invoke` of `ServiceClient` in a callback (topic  timer  service) handle by the node  because we can't spin a node already spinning ([rclcpp/test/rclcpp/test_executor.cpp#L261-L266](https://github.com/ros2/rclcpp/blob/1037822a63330495dcf0de5e8f20544375a5f116/rclcpp/test/rclcpp/test_executor.cpp#L261-L266)).     But in some cases  we don't use the method `invoke` of `ServiceClient` in callback  so we could avoid creating new `callback_group` and `SingleThreadedExecutor` in this cases.    * add a bool arg `use_default_callback_group`.  * when `use_default_callback_group` is true  create client by using default callback group  and use `wait_for()` to block `invoke()`.  * when `use_default_callback_group` is false  create new `callback_group` and `SingleThreadedExecutor`  just as before.    ---    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2461,2021-07-19T18:41:06Z,2021-07-19T18:41:32Z,True,2021-07-19T18:41:32Z,3913e878b0595e6cb49e449af6d9faa79fe2c9f5,1,1,cb148a634659ea98d997bb891fb5db9994f69dc9,,Update README md,
ros-planning/navigation2,2405,2021-06-14T00:54:47Z,2021-07-19T22:49:37Z,True,2021-07-19T22:49:37Z,21a44bcb559682f67289ac72571206597c00855b,11,31,962627f5643b647db394d77c8a920013a02a3019 d747b979890bf8a56843e2acb496db8bb07b1151 b9f2d76312a85bd5c8a2bb886b291b0535d0934b 32891afc276338ebacf6ecf9ab2a550acba10b86 841e67b9322980719c6e882f216c8fd1da9088d0 d64a44052a8c1311f381a5d7031ee02e227e31ae 63e20cb8a28c37c878780c080933e7897c5805ef 82b4a8466c120905e38b11a62bdf88e49f88c11e a826eb267490068d5a0303d4e3596cdf5127119e 5d89cd671d0b552adc101563940cac0f62a7587b 51ba2151953de82f8f612b8c7273b8c2483ab232 38f746b643ff0420d2384a0970e16773fecff768 6b97653e160a50ad6a47604338c8faecdf348224 36b40ccc45031d8b49e72a4cf666468cff8e2d14 6ffb2a205fa08619ab400c0dd2d113e1c3e5ce64 7fbe1455481b889f066d1b08e13bc7da9dc97983 7a19b540e2662a267e4ec4dd318b2069867619fa c67d947b6173e2cbe88b87eab2c352c3a71efae9 ba3edf7a1787f2836b8dd5ad6c2c14d82eaf9104 bea733054a4370d25a930f752ffd64c3c65f6acb 85ba4506fd628914dc3dacedd40ae86699a962b5 01b6373a5f848268872dd6d4979ebbf3479a4681 d8c51f1f7773f4372af4f4847425da9010149b1d 6581fa96224bcd2b27a337a3d78c716bbcc6a186 e803a90995d0525b1af8144072f3c55f90ec1791 039ca7f0cf4a29e4be026ca3306dfb8480aae2c7 fbddd72e30de000be229179d5a96b9538372df23 4ec61bf340bf8136e32f0d10a4aa5adc3ce2c280 d96b21f597aab5ed1b95dc59d3417bb4b536cd18 bfaa6b164a9fd13f807fc19af9c18756b9352bd5 da42e3edf57864263ffb0b376ef22fb95faa35fa,, Refactor actions to rebuild CI image from CI,With the recent announcement of Docker Hub deprecating free access to autobuild  we can migrate our builds to GitHub.    * https://www.docker.com/blog/changes-to-docker-hub-autobuilds/  * https://news.ycombinator.com/item?id=27434009    This PR refactors the github action we used to trigger rebuilds of the CI image using Docker Hub's autobuild service  and instead builds the CI image directly from the github action and then pushes it to the public registry. This has the added benefit of allowing us to build our CI image using buildkit  giving access to more advanced build options and better caching strategies.    Used actions:    * https://github.com/marketplace/actions/docker-setup-buildx  * https://github.com/marketplace/actions/docker-login  * https://github.com/marketplace/actions/build-and-push-docker-images    This also tags built images with an additional timestamp  allowing more reproducible builds and version tracking. This same tagging approach will be applied to the upstream testing image  allowing us to use dependabot to track when our CI's parent image updates and automatically open PRs to bump the version tag we build `FROM`.    https://github.com/osrf/docker_images/pull/546    Example run:    https://github.com/ruffsl/navigation2/actions/runs/934144502  
ros-planning/navigation2,2464,2021-07-20T07:51:35Z,2021-07-20T20:51:09Z,True,2021-07-20T20:51:09Z,5ec3ab4e43b7e345fbc62d36e780b27cbf740aa1,2,1,6f3437d1772d87ca231088f3f0eae1ff52303af1,,SMAC Planner Treating inscribed costs not as collision anymore,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2457 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Physical & Simulated DiffDrive Robot |    ---    ## Description of contribution in a few bullet points    * The collision checker of the Smac planner does not count INSCRIBED as a collision (infeasible path) anymore  allowing the robot footprint edges to touch inscribed grid cells.   * Some early stopping on the `nav2_costmap_2d::FootprintCollisionChecker::footprintCost` and `::lineCost` were reduced to OCCUPIED cells.    ## Description of documentation updates required from your changes    * I would say none  as this is the expected behavior of the collision checker    ---    ## Future work that may be required in bullet points    None.    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2454,2021-07-16T12:29:53Z,2021-07-21T00:41:52Z,True,2021-07-21T00:41:52Z,0764e5af5b23ea7a08629876792a8da1465ef261,1,3,29212703a5821f20e4754e0907883c23229d0f15 972f6eaeda0b98ef7008fd4060dcee73c557b499 08cbde003bda50eb43012ba4acb89a5c4df0e5f2,,Reduce map saver nodes,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info                       | Please fill out this column                                  |  | -------------------------- | ------------------------------------------------------------ |  | Ticket(s) this addresses   | (tickets:  [#816](https://github.com/ros-planning/navigation2/issues/816)) |  | Primary OS tested on       | (Ubuntu20.04  ROS 2 Galactic from binaries)                  |  | Robotic platform tested on | (gazebo simulation of turtlebot3)                            |    -------    ## Description of contribution in a few bullet points    As described in [#816](https://github.com/ros-planning/navigation2/issues/816)  `rclcpp_node_` in `class MapSaver` need be removed  you can find more details(other nodes which need be removed) in [#816 (comment)](https://github.com/ros-planning/navigation2/issues/816#issuecomment-876061677)    refer to [#2334](https://github.com/ros-planning/navigation2/pull/2334) I use callback group/ executor combo instead of `rclcpp_node_` in `saveMapTopicToFile()`.    - create new `CallbackGroup` for `map_sub`  - create new `SingleThreadedExecutor` for new `CallbackGroup`   - wait map subscription by using `executor.spin_some()` in `while()`    ## Test    colcon test    ```  colcon test --packages-select nav2_map_server    # Result: 0 errors  0 failures  0 skipped  ```    turtlebot3 demo test    ```  # Server node mode test  ros2 launch nav2_map_server map_saver_server.launch.py  ros2 service call /map_saver/save_map nav2_msgs/srv/SaveMap "{map_topic: map  map_url: my_map  image_format: pgm  map_mode: trinary  free_thresh: 0.25  occupied_thresh: 0.65}"  # CLI mode test  ros2 run nav2_map_server map_saver_cli -t map -f my_map2    # Result: my_map and my_map2(.yaml and .pgm) will be generated correctly.  ```          #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2436,2021-07-06T13:24:14Z,2021-07-09T13:18:24Z,False,none,6bf0920ac8fb3428bcb0fd3f67d40505f4aa3dc8,1,1,04261fb7633c69baf709bae739310e37a3322812,,Wait for goal result after cancelling BT action node Galactic branch ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses | I didn't find any issue that is currently open  and that would be related to this PR. But I sure can open one if you want me to. The PR #2384 is related  as described below (see **Related PR** section). |  | Primary OS tested on | Ubuntu 20.04  ROS 2 Galactic from binaries |  | Robotic platform tested on | Gazebo simulation of Wyca's robot  and real Wyca's robot |    ## Description of the problem fixed by this PR    Hello    I fixed a problematic behavior that happens quite often after cancelling a `bt_action_node` (approximately once every 5 cancel requests in our case).     *What we do*:  - We start a nav2 `BtNavigator`  which controls the action "GoToPose" for instance.  - The BT has several `bt_action_node`s  in order to call sub-actions like `"/follow_path"` for instance.  - When cancelling the "GoToPose" action  all the `bt_action_node`s execute [`halt()` function](https://github.com/ros-planning/navigation2/blob/29c1af087afffb80ddc4ec172015fee2c8a37166/nav2_behavior_tree/include/nav2_behavior_tree/bt_action_node.hpp#L265-L279)  hence they send a cancel request to their respective sub-actions.    *What should happen*:  - The `bt_action_node` should wait for the sub-action to properly end  before returning from the `halt()` function.    *What actually happen*:  - The `bt_action_node` only [waits for the cancel request to return](https://github.com/ros-planning/navigation2/blob/29c1af087afffb80ddc4ec172015fee2c8a37166/nav2_behavior_tree/include/nav2_behavior_tree/bt_action_node.hpp#L269-L275).  - Hence  when cancelling the `BtNavigator`'s action  the sub-actions' `result_callback`s are not always executed.    ## Related PR    * Before #2384 was merged  the next action call after a cancel often results in an instant end of the BT  because the goal result of the previously canceled sub-action is received. Indeed  cancelling the `BtNavigator`'s action halts the `bt_action_node` without waiting for the sub-action goal result.     * After #2384  if the goal result of the previously cancelled sub-action is received  it is [filtered out](https://github.com/ros-planning/navigation2/blob/29c1af087afffb80ddc4ec172015fee2c8a37166/nav2_behavior_tree/include/nav2_behavior_tree/bt_action_node.hpp#L315-L321) using the `future_goal_handle_`. So  the next action call does not return instantaneously. But this might not be the cleaner way to solve the problem  since the sub-actions' `result_callback`s are still not always executed.     ## This PR's description    * This PR allows to wait for the sub-actions results  by making the [`bt_action_node` spin](https://github.com/wyca-robotics/navigation2/blob/04261fb7633c69baf709bae739310e37a3322812/nav2_behavior_tree/include/nav2_behavior_tree/bt_action_node.hpp#L285) until the sub-action goal result is available  after the cancel request is sent in the `halt()` function. This will force the `result_callback` to be executed after the sub-action is cancelled  allowing to get a clean `BtNavigator`'s action goal result.    * A [timeout](https://github.com/wyca-robotics/navigation2/blob/04261fb7633c69baf709bae739310e37a3322812/nav2_behavior_tree/include/nav2_behavior_tree/bt_action_node.hpp#L281) is implemented to prevent from infinitely looping while halting the `bt_action_node`.    * If the sub-action goal result is not available within the timeout  there is an [error output in logs](https://github.com/wyca-robotics/navigation2/blob/04261fb7633c69baf709bae739310e37a3322812/nav2_behavior_tree/include/nav2_behavior_tree/bt_action_node.hpp#L288-L292).    ## Future work that may be required in bullet points    * Maybe the timeout can be handled differently  * The case "the goal result is not received after the timeout" may be handled (in a better way than just outputting an error in logs)      Thank you for reviewing this PR.      ----      #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2410,2021-06-16T10:33:53Z,2021-06-21T17:53:21Z,True,2021-06-21T17:53:21Z,cb5f90fd3fa21cf1b881822d9d31901e72808e7a,1,1,a5549f29c031ae63f6cc3033855a977b0840de26,,Allow separate naming of client action server nodes in bt navigator,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2408  |  | Primary OS tested on | Ubuntu 20.04 (docker) |  | Robotic platform tested on | gazebo simulation |    ---    ## Description of contribution in a few bullet points   * New ability to override the default name of action node name   * Fixes #2408     ## Description of documentation updates required from your changes    ---    ## Future work that may be required in bullet points    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2456,2021-07-17T08:10:31Z,2021-07-22T17:08:06Z,True,2021-07-22T17:08:06Z,60626171172eeea317ba800c82618755c61c20f3,5,8,b1fb5c721aca8ef70ebee2de59a40d58ad688746 dac92d98c674589e77626255f3ec932b6dce06f5 e2e3849033d598ed71afdd6aae8fe6f1c3bc0ced a775c3e796a1bd4392ed23a63cf2a213ae297988 ce9ec3f398d50b8deed94836e24e074b6f6bec84 25f3edad1fa9ff386ff98b3cb9d32cb6fc22c721 6d529b41738b79adf69d4c4558068cab5181b9d4 dd4ba953d1a77497c2f5f295cb9f2d7f032cb3e2,,Reduce lifecycle manager nodes,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info                       | Please fill out this column                                  |  | -------------------------- | ------------------------------------------------------------ |  | Ticket(s) this addresses   | (tickets:  [#816](https://github.com/ros-planning/navigation2/issues/816)) |  | Primary OS tested on       | (Ubuntu20.04  ROS 2 Galactic)                  |  | Robotic platform tested on | (gazebo simulation of turtlebot3)                            |    -------    ## Description of contribution in a few bullet points    As described in [#816](https://github.com/ros-planning/navigation2/issues/816)  `bond_client_node_` in `class LifecycleManager` need be removed  you can find more details(other nodes which need be removed) in [#816 (comment)](https://github.com/ros-planning/navigation2/issues/816#issuecomment-876061677)    I use `CallbackGroup` + `MultiThreadedExecutor` instead of `bond_client_node_`.  - because `Bond` doesn't support new callback group  so let `Bond` use `default_callback_group`  and create new callback group for services and timers in `LifecycleManager`.  - then use `MultiThreadedExecutor` with 2 threads to spin 2  `CallbackGroup` in `main()`    ## Test  ```  #colcon test  colcon test --packages-select nav2_lifecycle_manager    #result:0 errors  0 failures  0 skipped  ```    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2469,2021-07-22T04:34:45Z,2021-07-23T04:02:57Z,True,2021-07-23T04:02:57Z,a800b89bd55f20784c013a5f160ba56271be7e84,7,2,f1559900bb23fcde99573f401962fae78adf1ac7 451cca817dc28004c3eecb4a1e17e53afb08fd22,,Reduce lifecycle service client nodes,Signed-off-by: zhenpeng ge <zhenpeng.ge@qq.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info                       | Please fill out this column                                  |  | -------------------------- | ------------------------------------------------------------ |  | Ticket(s) this addresses   | (tickets:  [#816](https://github.com/ros-planning/navigation2/issues/816)) |  | Primary OS tested on       | (Ubuntu20.04  ROS 2 Galactic from binaries)                  |  | Robotic platform tested on | (gazebo simulation of turtlebot3)                            |    -------    ## Description of contribution in a few bullet points    As described in [#816](https://github.com/ros-planning/navigation2/issues/816)  `node_ ` in `class LifecycleManagerClient` need be removed  you can find more details(other nodes which need be removed) in [#816 (comment)](https://github.com/ros-planning/navigation2/issues/816#issuecomment-876061677)    `LifecycleManagerClient` has 2 constructors  simply remove the constructor which create internal node.     * update instantiation of `LifecycleManagerClient` used in test files  * update `Nav2Panel`   use `client_node_` to create `client_nav_` and `client_loc_`.    ## Test  colcon test  ```  colcon test --packages-select nav2_lifecycle_manager nav2_rviz_plugins     #result:0 errors  0 failures  0 skipped  ```    turtlebot3 navigation demo     * success    ---    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2472,2021-07-23T00:32:08Z,2021-07-23T04:02:25Z,True,2021-07-23T04:02:24Z,fd6fd613485da2dbe0e9086cddf644729474d713,1,1,42fc07ce90194807260e547323f72ff729f3d86a,,allow spawn non turtlebot urdf,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | no ticket |  | Primary OS tested on | (Ubuntu 20.04) |  | Robotic platform tested on | Gazebo simulation   turtlebot multi-robot simulation |    ---    ## Description of contribution in a few bullet points  Use gazebo diff_drive plugin filename instead of the customized plugin name to allow correct spawn of any type of robot.  I used the comparison with filename "libgazebo_ros_diff_drive.so" because AFAIK there is no other gazebo diff_drive plugin than this one.  Can be merged with both foxy and galactic  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2466,2021-07-20T19:28:49Z,2021-07-23T17:09:45Z,True,2021-07-23T17:09:44Z,5c61644651c4eab882b042e073d0f5964f03a501,12,5,6e22013812c0dbeb21f34e910ce6a7ab864d8fe4 0a8c5a7b1ec7fc6ad0b1adb5be78578659499898 7621941ae6bce4cb591345de22853f4c7b0649ec 420b4562f0173b171a767948ebc3e3b3fb8bcacc bc52118d15181993fd6f65d19b5aa701b46fd859,,Python string format,  ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/pull/2411#issuecomment-863561181 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | None |    ---    ## Description of contribution in a few bullet points  As per @SteveMacenski's request: https://github.com/ros-planning/navigation2/pull/2411#issuecomment-863561181    ---    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2459,2021-07-19T05:46:38Z,2021-07-26T18:38:26Z,True,2021-07-26T18:38:26Z,084f1475499804a105020bbd33cc306ced1056d1,2,3,c171a5e2ea645ed07be41ada20b298e5d6ec4a29 36c6c8b14acc8895ccdf1f9c7ed26fd72313500b df7a4ace269ab286f3c19b9b85e7b09c75da18dd,,improve SimpleActionServer,Signed-off-by: zhenpeng ge <zhenpeng.ge@qq.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info                       | Please fill out this column                                  |  | -------------------------- | ------------------------------------------------------------ |  | Ticket(s) this addresses   | - |  | Primary OS tested on       | (Ubuntu20.04  ROS 2 Galactic from binaries)                  |  | Robotic platform tested on | (gazebo simulation of turtlebot3)                            |    -------    ## Description of contribution in a few bullet points    improve `SimpleActionServer`   * support two args  `options` and `group`  for action server ([rclcpp_action/create_server.hpp](https://github.com/ros2/rclcpp/blob/master/rclcpp_action/include/rclcpp_action/create_server.hpp#L57-L68))  * remove template `<typename nodeT = rclcpp::Node>` for `class SimpleActionServer`  and template the constructor. (like [NodeThread](https://github.com/ros-planning/navigation2/blob/main/nav2_util/include/nav2_util/node_thread.hpp))      #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2471,2021-07-23T00:10:35Z,2021-07-26T20:57:30Z,True,2021-07-26T20:57:30Z,35469b670119caab86765deeffd96b808760b37e,5,4,20f8277096042563b729f45a30c643437b21de44 809540ef32580401e95655b09b13a9533615de2c dc6bb761fa99dba86b7628f8e5a9c244d5fb6bc0 fb838f09a202827f99b0ea7accb4b1054f0bd90e,,fix nav2 params and launch file to publish Local and global costmaps in multi robots example,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2446 |  | Primary OS tested on | (Ubuntu 20.04) |  | Robotic platform tested on | Foxy Gazebo multi-robot simulation) |    ---    ## Description of contribution in a few bullet points  add libgazebo_ros_init.so in launch file and change groot ports in nav2_params so the costmaps are published and navigation starts for both robots.  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,771,2019-05-29T20:40:47Z,2019-05-30T20:39:11Z,True,2019-05-30T20:39:11Z,2e05bab450980017221c4a453c2a767d13c0298e,6,5,674c3a27023843bb56f3fc56dc5e592f00fb291a 4d819e290ae3a25dd63a1642ac81728f11a1e56f 0beea0c555e270f4627ae196312b048fba11a857 67579eb42a796a9fc3644aed748fc5ff67042687 7086b15b7e9b9e27163c6693e4c7b7142ee01c44,nav2_lifecycle,Added a custom launch substitution to modify YAML parameters based on launch params lifecycle version,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 in Gazebo |    ---    ## Description of contribution in a few bullet points    * This is the lifecycle targeted version of PR #697. To facilitate integration  @mjeronimo requested these changes without the changes to the launch file. You can see how this should be used by looking at e2c8218 in the old PR  * The existing launch mechanism in ROS2 does not let you pass parameters from the launch file to the node without renaming all the nodes in the executable. This causes us problems because we use many composed nodes.  * This change adds a custom launch substitution to modify YAML files with launch parameters. The idea is you have a default params file for the project (nav2_params.yaml in our case). You then have options passed to the launch file that should modify the parameters. This substitution will find all keys by the specified name in the YAML file and change their value. eg. You specify substitute `use_sim_time` with True  it will find all instances of `use_sim_time` in the default params file and change them to true. It changes a copy  not the actual file  by the way.  * This doesn't currently support scoping the name. Eg. if you want to change the `enabled` parameter on one plugin to `true` but leave the others as `false`  you cannot do that currently.  * The name RewrittenYaml is kind of lame  but I haven't come up with a better one yet.    **NOTE**  You can review this commit by commit to make the review a bit easier.
ros-planning/navigation2,2462,2021-07-20T02:02:20Z,2021-07-21T17:53:48Z,True,2021-07-21T17:53:48Z,c417e2fd267e1dfa880b7ff9d37aaaa7b5eab9ca,1,1,417aee875898aa066483085d3c7f8203fd416622,,Add costmap_thread_ reset on the destructor of ControllerServer class,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points      Add `costmap_thread_.reset()` on the destructor of ControllerServer class  I referred [this line](https://github.com/ros-planning/navigation2/blob/21a44bcb559682f67289ac72571206597c00855b/nav2_planner/src/planner_server.cpp#L70) of `nav2_planner` package.      #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2480,2021-07-27T12:13:00Z,2021-07-27T15:58:37Z,True,2021-07-27T15:58:37Z,92151ad6c307542903f11c854bdef0b173b6f3df,1,1,be5d67bbc7dea027f4f63f90bc67e052e8996edb,,Reduce planner server nodes,Signed-off-by: zhenpeng ge <zhenpeng.ge@qq.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info                       | Please fill out this column                                  |  | -------------------------- | ------------------------------------------------------------ |  | Ticket(s) this addresses   | (tickets:  [#816](https://github.com/ros-planning/navigation2/issues/816)) |  | Primary OS tested on       | (Ubuntu20.04  ROS 2 Galactic from binaries)                  |  | Robotic platform tested on | (gazebo simulation of turtlebot3)                            |    -------    ## Description of contribution in a few bullet points    As described in [#816](https://github.com/ros-planning/navigation2/issues/816)  `rclcpp_node_` in `class PlannerServer` need be removed  you can find more details(other nodes which need be removed) in [#816 (comment)](https://github.com/ros-planning/navigation2/issues/816#issuecomment-876061677)    after [PR#2459](https://github.com/ros-planning/navigation2/pull/2459) merged  we can create `SimpleActionServer` with argument `spin_thread` which could spin server with dedicated thread.    - set `spin_thread` true when create `action_server_pose_`  and `action_server_poses_`.    ## Test  colcon test  ```bash  colcon test --packages-select nav2_planner  #result:0 errors  0 failures  0 skipped  ```  navigation demo test (turtlebot3 in gazebo)  * success  ---    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2479,2021-07-27T11:27:31Z,2021-07-27T16:50:30Z,True,2021-07-27T16:50:30Z,2035819e0d69fb2e5aea80dd06f668911dca9048,1,2,212f9b8e2a80ab626e877d7b7473db9e1c8a9354 bd9a8c8d9af3171d165fd3c71c8f52de2ad9710e,,Reduce controller server nodes,Signed-off-by: zhenpeng ge <zhenpeng.ge@qq.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info                       | Please fill out this column                                  |  | -------------------------- | ------------------------------------------------------------ |  | Ticket(s) this addresses   | (tickets:  [#816](https://github.com/ros-planning/navigation2/issues/816)) |  | Primary OS tested on       | (Ubuntu20.04  ROS 2 Galactic from binaries)                  |  | Robotic platform tested on | (gazebo simulation of turtlebot3)                            |    -------    ## Description of contribution in a few bullet points    As described in [#816](https://github.com/ros-planning/navigation2/issues/816)  `rclcpp_node_` in `class ControllerServer ` need be removed  you can find more details(other nodes which need be removed) in [#816 (comment)](https://github.com/ros-planning/navigation2/issues/816#issuecomment-876061677)    after [PR#2459](https://github.com/ros-planning/navigation2/pull/2459) merged  we can create `SimpleActionServer` with argument `spin_thread` which could spin server with dedicated thread.    - set `spin_thread` true when create `action_server_` .    ## Test  colcon test  ```bash  colcon test --packages-select nav2_controller  #result:0 errors  0 failures  0 skipped  ```  navigation demo test (turtlebot3 in gazebo)  * success  ---    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2484,2021-07-28T18:07:45Z,2021-07-29T21:26:13Z,True,2021-07-29T21:26:13Z,e96450db3a425d8eb54737dffc09eef0bb1e1391,1,1,49dff237cad2d7c1eaa2d00feb24fe45a42310af,,Update regulated_pure_pursuit_controller cpp,https://answers.ros.org/question/380584/regulatedpurepursuitcontroller-detected-a-collision-ahead-but-robot-doesnt-stop/?comment=383417#post-id-38341    Backport to all distributions.
ros-planning/navigation2,2486,2021-07-29T21:28:42Z,2021-07-29T21:29:08Z,True,2021-07-29T21:29:08Z,45fbe46656cddd985f1977b4c762e1a23fc34c12,1,1,d671949cb13b1d366248c530d596b6b1a2bc3632,,Update regulated_pure_pursuit_controller cpp 2484 ,Backporting #2484 to foxy  
ros-planning/navigation2,2470,2021-07-22T15:12:13Z,2021-07-26T18:04:48Z,True,2021-07-26T18:04:48Z,035641300b3cd61c4041a6969b0221b5529b4eb5,1,5,0e93997ed75644d25bf2b485685ef36d4468f4b0 3c638e3aeacc433874922fa7d29bec7635b61f71 8c52f8337c886da8cc0c9495891fd76285bf286d 27c20999466f3d6ae4917ce56bbb06d5d89f8d46 af2922b35541c4117ef463c1a04016b65c252600,,Naming BT client node after action name,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | Related to PR #2410  addresses the issue explained in [this comment](https://github.com/ros-planning/navigation2/pull/2410#issuecomment-884317758) |  | Primary OS tested on | Ubuntu 20.04 ROS2 Galactic |  | Robotic platform tested on | Wyca Elodie robot (simulation) |    ---    ## Description of contribution in a few bullet points    #### Issue description    The PR #2410 aimed at getting an unique name for each BT client nodes  by adding the action name into the BT client node name.    Action names often come with namespaces  and so with "/" characters.  Let's say my action is named "/my_api/navigation/go_to_pose". With the PR #2410  the BT client node's name will be remapped to "bt_navigator/my_api/navigation/go_to_pose_rclcpp_node".   Nodes can be namespaced  but a node has a name and a namespace  that are two distinct entities.  Remapping the node name to "bt_navigator/my_api/navigation/go_to_pose_rclcpp_node" results into this error:  ```c  [bt_navigator-57] [ERROR] []: Caught exception in callback for transition 10  [bt_navigator-57] [ERROR] []: Original error: failed to parse arguments: Couldn't parse remap rule: '-r __node:=bt_navigator/my_api/navigation/go_to_pose_rclcpp_node'. Error: Expected lexeme type 1  got 19 at index 20  at /tmp/binarydeb/ros-galactic-rcl-3.1.2/src/rcl/lexer_lookahead.c:238  at /tmp/binarydeb/ros-galactic-rcl-3.1.2/src/rcl/arguments.c:371  [bt_navigator-57] [FATAL] [bt_navigator]: Lifecycle node bt_navigator does not have error state implemented  [lifecycle_manager-54] [ERROR] [lifecycle_manager_navigation]: Failed to change state for node: bt_navigator  [lifecycle_manager-54] [ERROR]  [lifecycle_manager_navigation]: Failed to bring up all requested nodes. Aborting bringup.  ```    #### Possible solutions    This PR aims at preventing the above error to happen  but still trying to keep the BT client node's name unique. So I see two easy solutions here:    1. Replacing all "/" within the action name by "_" before using for remapping the node name  In this case  the node name be named like "bt_navigator_my_api_navigation_go_to_pose_rclcpp_node"    2. Remapping only the node namespace after the action name  In this case  the node will be named like "/my_api/navigation/go_to_pose/bt_navigator_rclcpp_node" ("/my_api/navigation/go_to_pose/" being the namespace  "bt_navigator_rclcpp_node" being the name)    I rather go with solution 2  but we can discuss this. Plus  you may have better ideas that those two.    #### Contribution so far    - I removed the action name from the [node name remapping in `NodeOptions`](https://github.com/ros-planning/navigation2/blob/c417e2fd267e1dfa880b7ff9d37aaaa7b5eab9ca/nav2_behavior_tree/include/nav2_behavior_tree/bt_action_server_impl.hpp#L88). This prevent the error given above to happen.    - I added a [remapping of the node namespace in `NodeOptions`](https://github.com/wyca-robotics/navigation2/blob/b3fbbd9c6ff24aad7658bf54d9b474aab0da8543/nav2_behavior_tree/include/nav2_behavior_tree/bt_action_server_impl.hpp#L89). The namespace is the action name. This keeps the spirit of the PR #2410 by giving an unique namespace for each `bt_navigator_rclcpp_node` BT client node.      Thanks for considering this PR!     ---    ## Future work that may be required in bullet points      #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2481,2021-07-27T14:04:57Z,2021-08-04T00:14:26Z,True,2021-08-04T00:14:26Z,792893a5b56256cff8e9d4fb581e71d23892b5d6,1,3,7c4a00a52c2695399e8ba384a96e02028a6bbb9c 2bf17047c08a99dbe9bd412227c05b356035b75e f9d60039d452089611496e5fca09783fbd6a4e95,,Modify the BtServiceNode to include an on_success call ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2467 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | custom differential drive robot |    ---    ## Description of contribution in a few bullet points    * Modified the `bt_service_node` to include an `on_success()` function  to process the service answer.   * The additional `on_success()` function can be used to process the results send from the service server  to  for example  set the BT::NodeStatus of the behavior tree leave node    ## Description of documentation updates required from your changes    * The `on_success()` function was added. However  I am not sure if this needs to be documented somewhere.     ---    ## Future work that may be required in bullet points    * So far I can't think of an additional on-function  which could be useful and which is not yet implemented.    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2490,2021-08-04T11:52:23Z,2021-08-04T17:30:54Z,True,2021-08-04T17:30:54Z,a7955d891bcee5ad3f8acecc6ea3bdb1ddc73ce9,1,1,356a9dec3c7d2cdca2816cbf48be2eaa5909263c,,fix bug of passing string to printf,A trivial fix. It is a bug passing a string object to sprintf like variadic function.  I found it by building from source code with the tag (-Wnon-pod-varargs). 
ros-planning/navigation2,2496,2021-08-10T10:37:43Z,2021-08-10T10:52:09Z,False,none,fba15bb4219f8b70a93e7e7f08cf9eb2979557de,625,303,7be62713bd897e19d7ff3ce58fba5280348d7aba 4c9b43f9922f42afdbca8d8fc982f3488d0e948f 045224beff7e89101ae9b7d286f36006ebf0ba1e 53a8771097056cf72e7772eb30457b404e072043 b0408001420b26b03b288d33e5ffb9d5783b7bbf 0cdf4f44c7a4171bfa4c6eb885d46c3c19f26a87 606ca7abb40f04eae924a07fd27fa2caf1f94f5c b40c3a6f739e2a8920cd4abcc8f320768aa576c9 c9441b14a9b8272cb970af80d9224f4c7309724a d616e496bbcc4318338cfc2d9bf4630632983b50 ed8ddafb3b30557767b7eafce5fae76e99c2795f f07c1eed7bcab8927a693c46a88d54311e7a2307 a1e07200dbb5ced654e71d1cf40bf8461ae66968 69bed34f922e9972fbc80833d67770eb7f7cc9ae 2e0697c64c265f31bd4ef6c5ed43374841242077 b6b17e2979c5478c4050adc36bd1c85d161b61cb d191e0a41148ef87597711d5bab18dda98fa7c0c 10598d562958432f5767b5bb624079e3b9b719fe f237751f557b2e921e08f96d4749bfe3f2b2b091 98e994fa6912e87cf547a15cbe0f26fd67a3f01a ef8cfad646fc2d52a06152cbbb1b88b70765af5b 0a2dfbe2886d6c615512fd2ff2c81caa5391263a 26b975b78af4ac0b839a8b825f621a2a2e611ee1 a35953222f282b413261495570c1201ec40b7358 91d0a831c074a5df147c71ed02215e9c6c0c9762 d2c53de8b1f4aa223d25568f5c25b993ed620faf 79963a4267060e7b5b4730f3d96b757fe1aa4646 b8e9fba422d6e024767d1a5b668703625454fdcb b181a398e185d3047b1d78abaea7cf537bba8e0d 182d3b3ea433cbed68b4e19ac91acc33d4e331c6 369e62df464f6863f213180877c8e808257d0677 970f5b529d43d9940f75599f5f3c4fd90f7751de 4c8334f93bdebab775cf56c0d7df8eb71bc1b91e 506384f2bcf32978428278f65567bfaf429d6d63 a30816f2939e441f2054df0f40775adb76b57997 9baf4675dff475d453f684e0c0cae2da02893b43 64871a7283a08eb08d7365c6279d0b330155f7f6 63aa0addb4ab0fd875b79b2bb6d05cf32a09355d dcc1d4dafba6f6c7588cb5f7f6ca918b2a6c48ef 8f971aac77e7c0da0b7fdccc10f77ce150e02f08 13c878b912ef677d16f4e73801240f7b0c6000b5 fd117e821b5bef012d0610bbafc9e7f8a6ba7043 0c848d78d6f7a74a33e5fbca63d4aff5dc6353fa eff208ef5aa1b26356bda8f5fa8f304c7884327c d3fc28af28df764a153c85434f8b30270e963622 f37ae148fe6731bbf0e4ba67358bfae9df12ffa4 e49cb5ad6bfcb60f9d1b5a2dc7594b0ce99e61ae f6f9c28e8dbeeb7cd224137ef0e15d3f2b666b7f be38a7a91811e27742ca4be01dbef16436a461fe a71a5f23b881b34d6ddd8aeff04b9cbd06faa0fa 3ec1454aed227ca82f22eb90fa1e44187787e975 a13623922bc93ec8f12cdd40d2a817ea54998aaf 7bed20d065c8917080bcfecbb8f695ed6771381c e5b01c53210898903ab5683ef32614e537402110 3393c0adb19e66e2bf2d655fd3dba5f698e1193c e1e1be4880a703c9fba44bb0ed68f4463d31eb95 bf22f34cc805d29361934b57b1791e9fb10a47a6 cd336405d572d9ff9db791f9129fb46d9cbfcf65 626ce47cbdbcd705d47a7e45221a55bd00716f28 053d0c8cc96553f951d21be843f86099dba627d5 a005947e5c8777591e95731611549f37195dd1ca 4c4d38f5209925e87e6143c690e5a021d6ca0f9b 73afaf3f36f2cbdf4a20c5e0c1e9dfbdd512b8cc 4dfa91c84a47fb0f6890c04c69d42b12ee492b07 884d1448ea76b420f44da85d557758990d629ce6 8ba925cb8dd7bbd60eded9bb5e58883fb4a0aec3 13e01d2d6bcd230bd5eb069d109eee2bf2c39fe5 fc85c2600e8dbe6b441788e8ee4197efeee684fa 850295c0ec7b73d62efb136fc36b8a6e45a8b97c f86e44cedee5b6851e1aa09b20b09554d205b64a e6bc3cdafde9d3edb80bd3cfe44d73fc92e9a914 2d31a8d3346d3a9ba6ab99a94d208bdf5879b413 f6bbc5c81e21324f66c663194e93f3f0d2109dee 0285c5f0818d12a74ab553382037ad044bba9ff0 d02f0dd1fcee1009d96a6ade050b201f53bea59b 11b25a51981eb53db6a6a3601729ae85238d9241 e77560d87ac816ff72663c36055ce35c1a45c942 116a7ca5c209974f84084f1014399e0c3c6420bc d9971e0f6b7560acf351f1267f2551082fb33b89 199ef58f04bce9da4fcf8800630d171665349015 8bd158af79b942f4053206674a33b403e6c144e4 0f322ae3e4b80fc43373b6996cfe9252b3dd0df7 89241bdf96441e2609952238d9a688cbe20c1d32 6a0c92cad7fb8bb1e3e8500742bc293cddbedc36 e7432f17d72210b2aed71bae084c2fcda30ed888 2efdad8eb838d28ab9f3c24fc4aa5136b0ae9bdc 8d6cd2878bae389d932982e759acb760f3291f63 61710875ed1d73e807b7cd1a9e577d995f2e4ead 567f8c85b77e4b569c1b76b36c4275a57847a86c 13f518ac0a021f65d2dc6c0dfac95f3a13467b46 9387332078e010abd98cc8977424179bd55d721d cfa284334f4e76760354aae485b4b7d2c57a5c97 b3b7d00547b3b1f4a59050797656374f1257e1e3 c50b8b9e29b49175ec4c0f038bf9d3dbddfa05de 378d53435856f4b3377fc5031b7118e4554410e5 6d5e65a98b6034538021ee7f348dec0372308040 d5b3032ba072bba147465b2b1dd7a28e288a4f40 d3bf4ff895e47d79be2cab12bac0c1a45027c93f 6093b4f059d90df561e15b0062650ce60cc298cc 0dc24782b0804ea766300784fb76528ed5b9c6b6 8dcfe04845cac04a58dd8199411189ebc164427f 79fcb779090791cc92ca770574bc91bb261d4091 4e52bad8d7b8add98291472c114ea0ec054bcd1b 08f52cfd48f636443d337af486759a61bb3f5f4f 565c294ae6529dd8f21c1a690813f304fbd1759b 4ffc701b6333af41bea20ba39b0ac2fde7ba3257 740afd5a7ab004f5922e7822db41fa1c61e155ed 51ad0f19d09333416c63e1f624294cded7f872d3 ff81dafaa23f4dbf89f4f2cdc44eb8ecb9b651a1 7e0c83b4a5985b20189baa3f84d20f47fc40cc6e 8899b66ea1bdc306c36b4488c29f8fa849dfe67a 992deb0ff740e60189234455ac8c372fcaf2759c 2d88d14b1dd9f678e9b95dd50c5db774667cd62e 4dbb29245db181df12e562832d3bccb151402545 a5a77722bc9a926cc27c386f192f1256a9c697eb 936b163bcd25377012ba123082b78afd0b82f4ee f522f631a9b8939fd07a0de58ebc76d2371e9c1e 087d1374acf0ac216e8f5924e1f4f3d48941264d 50c2ecc151eba8d25c3af06bac7308898845b37a c112ffd95380b64db26af7c996a7ac953bb3f8af c054cddd1b134cbf97892cbecc624153ceaa503b ac66de27a3da9d19deefa3af0b7d8c3cf00eaaf8 febb5fe838bfa3633246a17fa0ce2d8a8d330084 24f0bc6e47d4a0e76d46bc99bc9fb3371707c18b a9aa44923b901b4ce736c34f1e2a4092b816fea4 47d7d7d366574430644656b2fadb791b29402f4f 0382175dba1ccddd02f7cb336cff5092dbfff4b6 a31fcf224f58f45321d6105cf834632717d401ea 27db9a49019907cb5e0d75b2fc5ebfe04071159e afd0d8421e3d902169d2920873c91ebdd7305e26 ed8f78ea65625e7a5035a85a8e92a18720abc483 b654b0966d2d7646120590d137a9c11c9b9d8241 b91f1ccc3188a9192b0783cdd816bb44badb5ff6 e25da923d2a878e05f610931fa8b0ac5d591fb1b cfb07ce54c56b69b385d8d51259926e527082c84 e2a7fde616540151481b850ed511a2307357e0b3 3cfe6760060e2c47c0bd1080b544f4abcee96e24 d8bd3c5ea8d196ad7f0bace1edaeaa8e55f06944 6c46c2e69af096e59b65c61b139b0da3bb7d8088 3bf1f7a93d740c54b4c7ef7fc6dd914175bf46be 8c087f3c44721c871a0f4267e904e2376f243e07 c7a1df2e26c02b076029c62d76d010c0bf59ee26 c337ac22e6af2b81f7b515a201a0e553084887e3 ae09b37e09efce9d674bd515b5d9db771e51ca51 ed43bed86253961f2723bb38389e51cabf6e7ebf e13459441dd4895450b2f2073f73bf340823fcfe 332304bc1614623592c027a292998cdca1bca0fb 6096221d513a2d66ffdf96adcb87b39ca20c2ddd ed6a8de7a4eacab053bb5bba9c7ef6f05db443d7 aeccbe7a931b2820930eeb7cbd6f62af2c6f5c9f 53c2d6003db1fba52ba08af3ad730f588a599308 44081fea0332148807c2c948962e7fe43532ba6b daf1161eb80ea71d546a83143ca3c4167f8e9fa9 4615bc06f1a191d2de9fdc0d02eb61720ae115ae 1821ac3bd6fc1ce3bbf3cb3935bb432fde9fec71 30b405c58e6d53ba8c96381416bc4679d35a1483 b097667f416a4b69c9e7e7987baaf88583e738f1 81e1c7d0722af03e9aa4f82eeac5b0f0bcd6fbf7 50de7dba36d6cdb95bdc69d05c43a8bdd14ea527 c6294d534b2f5e4179237aa8ac88e1339c3c62d4 9ace8ae12bb3f91cb49db1f0b90ce1e29a0769ae 8a7a4f261ccfa5db68d5add2fa493b32bacc6f33 f929dbda930b32dd36e30de57d5167d97515817d aaf25612a9238e62db12b1ae3951993c2585da83 0ade9225278b89e9bf1fe5b56b970518b670fd8d d537cb186dd61a9491c0b1c7865f1e4e6891ca45 f28951048dc67f1e8a7b1b7cf450195e53a80ee6 4066ab943f397e2db68cc6851680d4748c771ffe b41491a5adf81cfa9839a741f8a01de556978984 1f723818269e8efda6ee1c51ffd70b585a76fb6b dc77d1fc05dd16fa9f3d3f20dbeb40beabf9cb6a 1a207fc26be9b6696afcad174b57549744f2dafe fcbf60f8535501884b056631ca865f954c57fc84 a6974ad24c45f4a62655fc273340a7c47ab22e4e 25fe2448f5d8badf7f021165cc85caf231dc20d7 d51c1fd15e6f0a5e9cb2f437fcc0e0e5612d2363 a5ee54a33ec6988521f370e61799632a2021b3d1 8947c9fdca621624fddc49ff40af9d3f29693e81 a2e0f553bb25723fa747847f09ce5d1e94cec1d7 1ab08ce555bea9304e291682ce6b6d141dc2fb14 2ee5ca2970adb77110dcd8a677e151d77d7bd0fe 2fcc2c2178ae3f269d87eb83de6acbb3a381d7cd c88f45ac60a56bfed2c8e170fa89d42d43352c2a 5e5d8be5dd962ee2729b7601eab19351b4957ca6 cb90912074bacb250c2554b7897517ea776e3231 ac531a251610ca4e9b080da939e252a556425b64 d92edebd11a5d4d85115d952f9dad77bd9df455b e7f58bcaed79f09144c5481325b2a064322e2825 b008d916474713167efb7bf7ad18f1baf43f912d 4277d00d52e391de7c0e7c52658bba7b00447563 d65cef7c5ed00f6444a05097e84a3520223c8369 577b401788272c3d19019adfd732370e8feac1ed 3c35bb2c29f74cf61765b00bb4d6b7330e71946f 3d66437b63bed81f2de78cc0c711091a10a35815 2a5fdcb42cfbde0a125e996e4d8e0fc8305961a1 22407b7522b4b07cc65a0c3ab865aa4dc7c34282 713e47ff1aa3a7509ada1eb50b97267141484541 fa39500bbc1815d9110ca3c82fb6e2a149931c5a 782991eb9e245af9c1a26b83955bf4dc3aecf4c6 26953c3a551685ccfd795796d645dc86a6def41a ccbf662ea15c5bd06c4293defb58249633fd6e1e c2bc55021e1907483e62ffbb981323feff44b05a c009b040cb1d24bfcfd05df92876fe9553f435d5 237c08d6106e4b268e64262890aad00c1e2e5577 b63b11f8a638faf389d6b99911d95899abe1580b f23d915608a94039ff91008014730971a8795c15 980f8ecf1805f272cab9bd156e593e59c3690d07 2c9b2c915962980f8a612d4a83d630da11e35875 44004638244da7833956fa0becff91452403e39c 083f3214c5f62010aa4a83496263561459ceef65 8372aa644a2c3a79d3a9f382db3aaa8b0a9e101d d2cf200bc0b7c32aeddbdcd110e7a153b1f476ac 4486a5cfed62f325185e34420094f447d7e5d6a7 40f4c38103f4329694c53d9b4864cb6580c380d4 fa1d0917475b5f0810b7e83585c05a6908a73d9a 12fa59199291b27fa009da8214025d1ea862b091 8a6607b7891c5a9ae216e9126e996de194c603eb 30c97c831fda772228f6e0ba26f12a471d1cba84 eab8b4903e065561e9069163496c2962471210b1 cb5f90fd3fa21cf1b881822d9d31901e72808e7a f201b4f8d07bdbbf14d49dd05025d9c6632039a5 c616cf0e81f21d762fd0816a1af3f3b6e39d45d9 ddfed98937e1c41cb55b380272cb5d76a6871b6c 7fa550911986181c52bb9b715f67879d705e8bbb 29c1af087afffb80ddc4ec172015fee2c8a37166 80f4ef8301cdae798c08ea911d7452ce4f44cb4c 54911a701933f4613aef3f8f9cb62ac18975d907 502b103be33a12942a79238f2f5250772e38dfd2 2af052cf716f6caf0eb55cbaa540e3848040318d 5a7027536068183602f10b419bd711fafdad6784 3913e878b0595e6cb49e449af6d9faa79fe2c9f5 21a44bcb559682f67289ac72571206597c00855b 5ec3ab4e43b7e345fbc62d36e780b27cbf740aa1 0764e5af5b23ea7a08629876792a8da1465ef261 c417e2fd267e1dfa880b7ff9d37aaaa7b5eab9ca 60626171172eeea317ba800c82618755c61c20f3 fd6fd613485da2dbe0e9086cddf644729474d713 a800b89bd55f20784c013a5f160ba56271be7e84 5c61644651c4eab882b042e073d0f5964f03a501 61670a121d1a2d3343ad1a8ba3580fd9efd5563b 035641300b3cd61c4041a6969b0221b5529b4eb5 084f1475499804a105020bbd33cc306ced1056d1 35469b670119caab86765deeffd96b808760b37e 92151ad6c307542903f11c854bdef0b173b6f3df 2035819e0d69fb2e5aea80dd06f668911dca9048 e96450db3a425d8eb54737dffc09eef0bb1e1391 3bba684a9ab14d2db19e869e2ce48c717310de6f 792893a5b56256cff8e9d4fb581e71d23892b5d6 7adf691d54d248418f19318abbfd50bcbf637494 5481f67c12dc8738d18f03cb2839facea99626b0,,Fix 2493 by removing the unused joint to camera_rgb_frame ,It looks like `camera_rgb_link` is now `camera_link` e3ee2da2d5a274b52d32fcdf7e270567ca1093d0    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2493 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | none  Gazebo 11.5 |    ## Description of contribution in a few bullet points  Fix the `waffle.model` file    ## Description of documentation updates required from your changes  None    ## Future work that may be required in bullet points  None    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2497,2021-08-10T10:53:31Z,2021-08-10T17:16:02Z,True,2021-08-10T17:16:02Z,d2628a957d95123f03ae94675aeb1488b38c1184,1,2,274940e5b003dfca8dd75b6b75cdbb5f5ba2e619 6f1ed6d64d0efafa791f926769af19fdf77d86d2,,Fix 2493 by removing the unused joint to camera_rgb_frame,It looks like `camera_rgb_link` is now `camera_link` e3ee2da2d5a274b52d32fcdf7e270567ca1093d0    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2493 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | none  Gazebo 11.5 |    ## Description of contribution in a few bullet points  Fix the `waffle.model` file    ## Description of documentation updates required from your changes  None    ## Future work that may be required in bullet points  None    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2500,2021-08-11T03:21:30Z,2021-08-11T03:21:49Z,True,2021-08-11T03:21:49Z,821e035849470b1bb593c9780ce491572a190e6c,1,1,a5c17562967f34fb502807fd51a7a3ade9f7566e,,Use regex anchors when checking for updates,to fix conner cases like this:    https://github.com/ros-planning/navigation2/runs/3277796714?check_suite_focus=true    https://stackoverflow.com/a/4709921
ros-planning/navigation2,2501,2021-08-11T17:14:14Z,2021-08-11T17:48:03Z,True,2021-08-11T17:48:03Z,9759fd15057afff3dcd332c92270c133c0755f9d,1,1,93188efb03733b975a364fb3bd10982a89229dd9,,adding default template constructor for obstacle layer,none
ros-planning/navigation2,2503,2021-08-12T04:08:56Z,2021-08-12T17:27:33Z,True,2021-08-12T17:27:33Z,e8d0005d002e4b3f5fb00737e8ff17b2f05bac83,1,1,f6dd8af4f6d9c329bcfd47c6aeb3d0a8fe323990,,Fix null pointer in amcl on_cleanup,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | (gazebo simulation of turtlebot) |    ---    ## Description of contribution in a few bullet points  Fix null pointer in amcl on_cleanup  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2512,2021-08-16T12:22:42Z,2021-08-16T18:01:28Z,True,2021-08-16T18:01:28Z,21d8df6716807bd90a80f244abd04df50e717977,2,1,211add4fd3b3fb846aeee975dbc6a3158996d839,,fix data race addPlugin and resizeMap can be executed concurrently,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2508|  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of turtlebot3 |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  addPlugin() and resizeMap() can be executed concurrently.  std::vector is unsafe in multithreading.    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2513,2021-08-16T12:34:35Z,2021-08-16T18:06:41Z,True,2021-08-16T18:06:41Z,bf4b3148828918d9dcf8347dd2021505000714c9,1,1,e9fb286e273c649ca77088cb2484e2e539271503,,fix data race VoxelLayer matchSize may be executed concurrently,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2508 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of turtlebot3 |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  VoxelLayer::matchSize may be executed concurrently.  One path is from VoxelLayer::onInitialize();  the other path is from layered_costmap_->resizeMap() in static_layer.cpp.    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2511,2021-08-16T07:43:28Z,2021-08-17T04:40:50Z,True,2021-08-17T04:40:50Z,1261768dd97253ba7a4bf58b7022be2dbeec7e38,1,2,dd895d2afb6f1a56d7485182322ba6e25d6f89ed c92cd3da2207424df4c4bc62653051235f510d6c,,catch runtime_error if the message from laser is malformed,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2506 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  gazebo simulation turtlebot3) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  catch runtime_error from rclcpp if the message from laser is malformed.    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2451,2021-07-15T17:31:43Z,2021-08-17T15:40:22Z,False,none,0e054b05e3f28da93c54021b689b646037bb0e56,2,3,fc76453cdbfa2a3affbdeb263b54f0d4894d0327 423b437788835ee339d62f10a240cd823f86398f 1882d9195ef2207d770153742fa35e90c36394c8,,Fix unit tests,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2516,2021-08-17T15:13:28Z,2021-08-17T15:56:51Z,True,2021-08-17T15:56:51Z,e6a646bcd42242e747d8b25a61da816606efba03,2,2,6c6b0d638392e903859e5642731b45e8930f95c0 d2aa0418b8b6aece8458eafaccf452f6fabe4b77,merge,Smac planner bad alloc,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2515 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | None |    ---    ## Description of contribution in a few bullet points  Fixed bug that allowed a `std::bad_alloc` to be thrown by providing a `-1`  cast to `INT_MAX`  to `std::vector::reserve`    ## Description of documentation updates required from your changes  None    ---    ## Future work that may be required in bullet points  Single pose paths and zero length paths are still nonfunctional  but that is for another ticket.    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2519,2021-08-18T11:48:16Z,2021-08-18T17:55:50Z,True,2021-08-18T17:55:50Z,2c7cb0ab01d6ca6cd4a8d73c681e86598cea7e52,1,1,7f59914286e48bc4d9e6b366ed9585afdce5b178,,Remove second collision node from camera_link,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | None |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation |    ---    ## Description of contribution in a few bullet points  Remove the second `collision` node from `camera_link` in the `waffle.model`.    Fixes this Error:  ```  [gzserver-1] [Msg] Loading world file [/opt/ros/foxy/share/nav2_bringup/worlds/waffle.model]  [gzserver-1] Error: Non-unique names detected in type collision in  [gzserver-1] <link name='camera_link'>  [gzserver-1]   <inertial>  [gzserver-1]     <pose>0.069 -0.047 0.107 0 -0 0</pose>  [gzserver-1]     <inertia>  [gzserver-1]       <ixx>0.001</ixx>  [gzserver-1]       <ixy>0</ixy>  [gzserver-1]       <ixz>0</ixz>  [gzserver-1]       <iyy>0.001</iyy>  [gzserver-1]       <iyz>0</iyz>  [gzserver-1]       <izz>0.001</izz>  [gzserver-1]     </inertia>  [gzserver-1]     <mass>0.035</mass>  [gzserver-1]   </inertial>  [gzserver-1]   <collision name='collision'>  [gzserver-1]     <pose>0 0.047 -0.005 0 -0 0</pose>  [gzserver-1]     <geometry>  [gzserver-1]       <box>  [gzserver-1]         <size>0.008 0.13 0.022</size>  [gzserver-1]       </box>  [gzserver-1]     </geometry>  [gzserver-1]   </collision>  [gzserver-1]   <pose>0.069 -0.047 0.107 0 -0 0</pose>  [gzserver-1]   <sensor name='intel_realsense_r200_depth' type='depth'>  [gzserver-1]     <always_on>1</always_on>  [gzserver-1]     <update_rate>5</update_rate>  [gzserver-1]     <pose>0.064 -0.047 0.107 0 -0 0</pose>  [gzserver-1]     <camera name='realsense_depth_camera'>  [gzserver-1]       <horizontal_fov>1.047</horizontal_fov>  [gzserver-1]       <image>  [gzserver-1]         <width>320</width>  [gzserver-1]         <height>240</height>  [gzserver-1]       </image>  [gzserver-1]       <clip>  [gzserver-1]         <near>0.1</near>  [gzserver-1]         <far>100</far>  [gzserver-1]       </clip>  [gzserver-1]     </camera>  [gzserver-1]     <plugin name='intel_realsense_r200_depth_driver' filename='libgazebo_ros_camera.so'>  [gzserver-1]       <ros/>  [gzserver-1]       <camera_name>intel_realsense_r200_depth</camera_name>  [gzserver-1]       <frame_name>camera_depth_frame</frame_name>  [gzserver-1]       <hack_baseline>0.07</hack_baseline>  [gzserver-1]       <min_depth>0.001</min_depth>  [gzserver-1]       <max_depth>5.0</max_depth>  [gzserver-1]     </plugin>  [gzserver-1]   </sensor>  [gzserver-1]   <collision name='collision'>  [gzserver-1]     <pose>0 0.047 -0.005 0 -0 0</pose>  [gzserver-1]     <geometry>  [gzserver-1]       <box>  [gzserver-1]         <size>0.008 0.13 0.022</size>  [gzserver-1]       </box>  [gzserver-1]     </geometry>  [gzserver-1]   </collision>  [gzserver-1]   <pose>0.069 -0.047 0.107 0 -0 0</pose>  [gzserver-1] </link>  [gzserver-1]   [gzserver-1] [Err] [Server.cc:98] SDF is not valid  see errors above. This can lead to an unexpected behaviour.  ```    ---    ## Description of documentation updates required from your changes  None    ---    ## Future work that may be required in bullet points  None    ---    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2485,2021-07-29T04:09:16Z,2021-08-17T18:26:07Z,False,none,8a0fb4565c7ac07f11e6527b47a3fdd2abc2026e,1,1,8c2c4797e6b63739a8629d6cd3f495f6ad980f82,,update tb3 mesh uri,Signed-off-by: Will Son <willson@robotis.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ROBOTIS-GIT/turtlebot3_simulations/issues/159 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | TurtleBot3 Simulation |    ---    ## Description of contribution in a few bullet points    * apply updated mesh uri revision in [turtlebot3_simulations](https://github.com/ROBOTIS-GIT/turtlebot3_simulations) package  * each TurtleBot3 model used to have its own directory with redundant mesh files  and this has been updated to share common mesh files in a single directory(e.g. turtlebot3_common/meshes/)    ## Description of documentation updates required from your changes    * no change is necessary once turtlebot3_simulation binary is released.      ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2510,2021-08-16T06:52:17Z,2021-08-19T03:27:15Z,True,2021-08-19T03:27:15Z,65e46b5c8903d793afe0033e3ef96571bc0058ef,1,2,0f31170283db1a70c7d45802b3c92e5cee488326 0821f1d0cb3467af5e89167f927a25d867ed69c2,merge,fix possible use after free unsafe shared_ptr in multithread,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2507  |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | gazebo simulation of turtlebot3 |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  fix potential use-after-free bug.  About std::shared_ptr thread safety discussion can be see here. https://stackoverflow.com/questions/14482830/stdshared-ptr-thread-safety    ## Description of documentation updates required from your changes    std::atomic_load() and std::atomic_store() require C++11.  <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2521,2021-08-19T05:55:58Z,2021-08-19T14:54:04Z,True,2021-08-19T14:54:04Z,cc8d276b7ea1708fcacbe5f7efd97309ee38b335,4,1,5242adf79bb3ba6386329e894d85178e5266647e,,Fix export dependency and library,Signed-off-by: zhenpeng ge <zhenpeng.ge@qq.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2147 |  | Primary OS tested on | - |  | Robotic platform tested on | - |    ---    ## Description of contribution in a few bullet points    fix export dependency and library so that we can use nav2 packages correctly (for exmaple  used in `nav2_composition`).      ---    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2522,2021-08-19T08:25:36Z,2021-08-19T14:55:53Z,True,2021-08-19T14:55:53Z,4e45ad3675efb1c8f64419d6129f6af1d41529ce,18,3,6e05f7ea82e1dabd0249cee50a7cc08d8a571e29 63faf42fe574cd6f760c8e62a9585878f643dede efb37303a48766966103915a3aec11bd605cdf48,,Add argument node options,Signed-off-by: zhenpeng ge <zhenpeng.ge@qq.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2147 |  | Primary OS tested on | - |  | Robotic platform tested on | - |    ---    ## Description of contribution in a few bullet points    add argument `rclcpp::NodeOptions` for Nav2 Nodes  so that we can configure Node in `main()`.  * for example  use `rclcpp::NodeOptions().use_intra_process_comms(true)` for intra-process communication in `nav2_composition`    ---      #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2474,2021-07-23T13:26:44Z,2021-08-20T20:16:09Z,False,none,b868a9c053e183768633665c1f43b8c5c69fe7cf,2,5,8595b870dd66ef709101786a13eb86a5fc889e76 fb21fc377fa80a7e14659d7a412c53c510991c66 d836e48c9660f04ada4e140af8acdb64ef25224b a72b840120c262b28313d0b77f83709de52f2de3 9dc6641552874c0919f074e5add2a171d9ccc155,,Fix for the seg fault that occurred when RPP was tested at high speed,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2332  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | mp-400 from Neobotix |    ---    ## Description of contribution in a few bullet points    * Fixed the segfault issue that occurred when the robot was set to drive at high speed using RPP.     ## Description of documentation updates required from your changes    NA    ---    ## Future work that may be required in bullet points    NA    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2528,2021-08-24T09:35:16Z,2021-08-24T18:49:03Z,True,2021-08-24T18:49:03Z,7c5e6b74a1effd3b0e214f57b1cb04422695c8f8,1,3,f6dd8af4f6d9c329bcfd47c6aeb3d0a8fe323990 f92469706918c690fc61f3b99458267933c7c4c1 d82df59abef067f80770d9c1cef705f7745b66d9,,Add more semantic checks for amcl parameters,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation turtlebot |    ---    ## Description of contribution in a few bullet points    * Add more semantic checks for amcl parameters
ros-planning/navigation2,2530,2021-08-24T12:08:57Z,2021-08-24T18:50:19Z,True,2021-08-24T18:50:19Z,1403176b85e7b9e3c93850560fa27519fb714ba5,1,1,db803dd88b248cc4ca3dd1cd65784c55e6a1b03d,,fix possible use after free unsafe shared_ptr in multithread,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2529   #2510   |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | gazebo simulation of turtlebot3 |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  fix potential use-after-free bug. The cause is much the same as #2510.    ## Description of documentation updates required from your changes    std::atomic_load() and std::atomic_store() require C++11.  <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2526,2021-08-20T20:15:36Z,2021-08-24T18:50:54Z,True,2021-08-24T18:50:54Z,2f16369db89ca8f5506bb065f9385ccb6f54be69,2,3,a9fe8ebf1e7687f1513eb9f8c5409e5b44bc25dc 87b890080df4bb4ac657ecf62e951649e8aef747 4d48521894e8bdec327cddf01f41acc2fb1a5063,,Hot fix rrp slow,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2332  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | mp-400 from Neobotix |    ---    ## Description of contribution in a few bullet points    * Fixed the segfault issue that occurred when the robot was set to drive at high speed using RPP.     ## Description of documentation updates required from your changes    NA    ---    ## Future work that may be required in bullet points    NA    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2532,2021-08-24T23:45:00Z,2021-08-24T23:49:11Z,True,2021-08-24T23:49:11Z,ced2479e97445249c9383afe11486e96eb26fa60,2,1,687ccfea5d539002cf0d7f0c215887ef8b5f1e66,,remove old build tools,none
ros-planning/navigation2,2377,2021-05-29T08:20:26Z,2021-08-25T00:10:48Z,False,none,7974aa0316833145be8d5693cf3ce84c3580d7e4,3,6,f8f42be619744b4e75d13b6c492b908083ef461b bccdd26a1e5afef7ad63e42e4706f13587d73cbc 7bc07141bf127754cc79c5211813de8d4cca7602 c62af8ae4fb6b209d2923f352431f5b7acaf1d51 52720869908226a0a204251ad10d76bf09c5306d 1df154bdbaaa4cc9d399579a7fc1fa7a10760e37,,BtActionNode does not crash bt_navigator upon timing out when calling action server,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2376 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | Internal mobile robot ( actual physical robot ) |    ---    ## Description of contribution in a few bullet points    * `BtActionNode`s do not crash `BT engine` nor `ros2 nodes` holding them  as when there is a problem when calling an `action server` a `BT::NodeStatus::FAILURE` is returned instead of throwing an exception.  * When a `BtActionNode` fails  it is able to run a recovery mechanism  integral in `BT` framework.  * `ros2 daemon` is no longer corrupted being unable to discover `bt_navigator` `ros2 node` after relaunch  * Logs are more clear and the logging system is able to display logs from `action servers`     ## Description of documentation updates required from your changes    * No documentation necessary    ---    ## Future work that may be required in bullet points     * Use `return BT::NodeStatus::FAILURE` + `log error` instead of throwing an exception for `BT nodes`       `BT Nodes` can fail  and are meant to allow this  using recovery actions as mechanism resolve these situations. For that  the `BT Engine` does need the `BT Node` to return a `BT::NodeStatus::FAILURE`. Throwing exceptions  will break all the recovery mechanisms the BT provide as the `ros2 node` and `bt engine` will be compromised. See also next point below for details.      * Initialize BT Nodes inputs on `tick()`    I have seen BT Nodes that when compulsory inputs are not provided  the node [crashes in the constructor at runtime](https://github.com/ros-planning/navigation2/blob/main/nav2_behavior_tree/plugins/condition/transform_available_condition.cpp#L42). This will not only crash the whole `BT engine` and `ros2 node`  but **there is actually nothing wrong at all by a `BT Node` not having values for compulsory inputs during class constructor**. These inputs can be published on the `blackboard` by other `bt nodes` ( for instance the `SetBlackboard` node). This will take place **after** the node construction.    It is therefore not meaningful to get values of inputs in the constructor as it's in the `tick()` method when they shall be loaded. `BT Nodes` do not necessarily have static inputs  they are dynamic by design by means of using the `blackboard`.    Whether a `BT Node` has compulsory inputs is a check that needs to be done in the `tick()` method. And then there is the question as to what to do when these are not provided. From my POV a nice error log together with returning a `BT::NodeStatus::FAILURE` is the right way to do it (not crashing the whole `bt_navigator` using exceptions).    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2460,2021-07-19T16:16:36Z,2021-08-25T00:18:52Z,True,2021-08-25T00:18:52Z,0d65b8dc0eb915abad557ba10e384cee32476e65,3,1,332e9c48454ffa998dd3bf8e2345cd3473783adf,,Fix for voxel grid out of range issues due to loss of precision during floating point calculations,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2373 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | TB3 simulation at shared in ticket pre-recorded dataset |    ---    ## Description of contribution in a few bullet points    * Fix for floating point precision loss due to double->int->double conversions which are leading to incorrectly calculated data array ranges leading to out-of-array addressing causing segfaults on some configurations.  * (Additionally) Correct shift length reduction by min range components instead of absolute min range value.
ros-planning/navigation2,2524,2021-08-19T10:07:27Z,2021-08-24T18:51:52Z,True,2021-08-24T18:51:52Z,e9c4f7827a7a36763150cf7b8ca892e65cdea1c8,2,1,a575b216b3ec0ce8f34faf22821552e3197cb26d,,fix multi robot system test,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->      ## Basic Info      | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | |    ---    ## Description of contribution in a few bullet points  fixes multi_robot test  in nav2_system_tests.     <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2533,2021-08-25T05:25:26Z,2021-08-25T06:35:58Z,True,2021-08-25T06:35:58Z,3c7afed4fe9a51cfe92dd2e61928cfb5b8f6eeb7,1,1,03be0b557eee9315ca90f9860c9ab9323ce1b293,,Update dwb_local_planner hpp,  ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | None |  | Primary OS tested on | None |  | Robotic platform tested on | None |    ---    ## Description of contribution in a few bullet points    Add remarks on `dwb_local_planner.hpp` header file.      ## Description of documentation updates required from your changes  with reference to [navfn_planner](https://github.com/ros-planning/navigation2/blob/0d65b8dc0eb915abad557ba10e384cee32476e65/nav2_navfn_planner/include/nav2_navfn_planner/navfn_planner.hpp#L62)     ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2534,2021-08-25T15:25:40Z,2021-08-25T20:58:04Z,False,none,74e29adad5d70296dc2adcd1b18e544d4957a9fd,1,1,00dbd23d913697b1fb87de29033724285159040c,,Change default timeout of BT navigator,Changed the default timeout of BT navigator. The previous timeout of 10ms caused ROS to crash if there was some latency in the network - for example when setting a new goal  as seen in https://github.com/ros2/ros2/issues/1074.  ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (https://github.com/ros2/ros2/issues/1074) |  | Primary OS tested on | (Ubuntu 20.04 Foxy) |  | Robotic platform tested on | (Custom robot) |    ---    ## Description of contribution in a few bullet points  Change default timeout of BT navigator  Timeout was 10ms. This was causing a crash if there was a tiny bit of latency in the network  or the CPU was overloaded by other tasks. Changed to 500ms to prevent crashing the whole robot.    ## Description of documentation updates required from your changes    Might want to update the documentation to describe the parameter  and it's effect on the navigator.    ---    ## Future work that may be required in bullet points    None  as far as I can see    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2531,2021-08-24T19:33:25Z,2021-08-25T22:18:26Z,True,2021-08-25T22:18:26Z,5a6d4da4d2effe4572132cdb65fb68989d2149f2,1,5,98c877099d5b722012ea8a56bc92edc33ff892fb 61988d0c648397249cc946efcf0e9021ff9370e6 f0cc5b03cf8bd1c1744c454bb286cecbdafd7b73 3d884c3ac0b575255fad638db60c118e5d08eaed 17ebe4d33c9f21050d0b4dea1aa4d08777f58b6a,,Add new test for smac_planner_2d,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | Personal laptop |    ---    * Added new test to check smac_planner_2d dynamic reconfigure capability    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2539,2021-08-27T18:01:17Z,2021-08-27T18:51:06Z,True,2021-08-27T18:51:06Z,28b3418384f013cbeb58fc7e228849ca9e0c85cd,1,1,f97d930f08756dfa7e30d42c7911d9da5b0c0d40,,Fix linting issue introduced in https github com ros planning navigation2 pull 2533,none
ros-planning/navigation2,2544,2021-09-01T12:20:06Z,2021-09-01T22:01:26Z,True,2021-09-01T22:01:26Z,a3ddde071cc618757143d8d9cd1a5882f59996bb,1,1,5fa2281089e52cf002d5bbb38b363129e6952d3d,,Use worldToMapEnforceBounds in clear_costmap_service,Use `worldToMapEnforceBounds` in `clear_costmap_service` to avoid buffer overflow    Signed-off-by: zouyonghao <yonghaoz1994@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation turtlebot |    ---    ## Description of contribution in a few bullet points    I got buffer overflow when I call the clear_except_* service  ```  =================================================================  ==27609==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x620000005e90 at pc 0x0000005aaa2f bp 0x7f4eed79d2b0 sp 0x7f4eed79ca78  WRITE of size 60 at 0x620000005e90 thread T13      #0 0x5aaa2e in __asan_memset (/home/r1/ros2_clang_navigation/build/nav2_controller/controller_server+0x5aaa2e)      #1 0x7f4ef996d176 in nav2_costmap_2d::Costmap2D::resetMapToValue(unsigned int  unsigned int  unsigned int  unsigned int  unsigned char) /home/r1/ros2_clang_navigation/src/navigation2/nav2_costmap_2d/src/costmap_2d.cpp:108:5      #2 0x7f4ef9c4a53a in nav2_costmap_2d::ClearCostmapService::clearLayerExceptRegion(std::shared_ptr<nav2_costmap_2d::CostmapLayer>&  double  double  double) /home/r1/ros2_clang_navigation/src/navigation2/nav2_costmap_2d/src/clear_costmap_service.cpp:181:12      #3 0x7f4ef9c4829d in nav2_costmap_2d::ClearCostmapService::clearExceptRegion(double) /home/r1/ros2_clang_navigation/src/navigation2/nav2_costmap_2d/src/clear_costmap_service.cpp:115:7      #4 0x7f4ef9c46307 in nav2_costmap_2d::ClearCostmapService::clearExceptRegionCallback(std::shared_ptr<rmw_request_id_t>  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Request_<std::allocator<void> > >  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Response_<std::allocator<void> > >) /home/r1/ros2_clang_navigation/src/navigation2/nav2_costmap_2d/src/clear_costmap_service.cpp:71:3      #5 0x7f4ef9c4f231 in void std::__invoke_impl<void  void (nav2_costmap_2d::ClearCostmapService::*&)(std::shared_ptr<rmw_request_id_t>  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Request_<std::allocator<void> > >  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Response_<std::allocator<void> > >)  nav2_costmap_2d::ClearCostmapService*&  std::shared_ptr<rmw_request_id_t>  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Request_<std::allocator<void> > >  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Response_<std::allocator<void> > > >(std::__invoke_memfun_deref  void (nav2_costmap_2d::ClearCostmapService::*&)(std::shared_ptr<rmw_request_id_t>  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Request_<std::allocator<void> > >  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Response_<std::allocator<void> > >)  nav2_costmap_2d::ClearCostmapService*&  std::shared_ptr<rmw_request_id_t>&&  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Request_<std::allocator<void> > >&&  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Response_<std::allocator<void> > >&&) /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/invoke.h:73:14      #6 0x7f4ef9c4ecf7 in std::__invoke_result<void (nav2_costmap_2d::ClearCostmapService::*&)(std::shared_ptr<rmw_request_id_t>  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Request_<std::allocator<void> > >  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Response_<std::allocator<void> > >)  nav2_costmap_2d::ClearCostmapService*&  std::shared_ptr<rmw_request_id_t>  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Request_<std::allocator<void> > >  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Response_<std::allocator<void> > > >::type std::__invoke<void (nav2_costmap_2d::ClearCostmapService::*&)(std::shared_ptr<rmw_request_id_t>  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Request_<std::allocator<void> > >  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Response_<std::allocator<void> > >)  nav2_costmap_2d::ClearCostmapService*&  std::shared_ptr<rmw_request_id_t>  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Request_<std::allocator<void> > >  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Response_<std::allocator<void> > > >(void (nav2_costmap_2d::ClearCostmapService::*&)(std::shared_ptr<rmw_request_id_t>  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Request_<std::allocator<void> > >  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Response_<std::allocator<void> > >)  nav2_costmap_2d::ClearCostmapService*&  std::shared_ptr<rmw_request_id_t>&&  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Request_<std::allocator<void> > >&&  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Response_<std::allocator<void> > >&&) /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/invoke.h:95:14      #7 0x7f4ef9c4eb05 in void std::_Bind<void (nav2_costmap_2d::ClearCostmapService::* (nav2_costmap_2d::ClearCostmapService*  std::_Placeholder<1>  std::_Placeholder<2>  std::_Placeholder<3>))(std::shared_ptr<rmw_request_id_t>  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Request_<std::allocator<void> > >  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Response_<std::allocator<void> > >)>::__call<void  std::shared_ptr<rmw_request_id_t>&&  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Request_<std::allocator<void> > >&&  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Response_<std::allocator<void> > >&&  0ul  1ul  2ul  3ul>(std::tuple<std::shared_ptr<rmw_request_id_t>&&  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Request_<std::allocator<void> > >&&  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Response_<std::allocator<void> > >&&>&&  std::_Index_tuple<0ul  1ul  2ul  3ul>) /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/functional:400:11      #8 0x7f4ef9c4e7f4 in void std::_Bind<void (nav2_costmap_2d::ClearCostmapService::* (nav2_costmap_2d::ClearCostmapService*  std::_Placeholder<1>  std::_Placeholder<2>  std::_Placeholder<3>))(std::shared_ptr<rmw_request_id_t>  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Request_<std::allocator<void> > >  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Response_<std::allocator<void> > >)>::operator()<std::shared_ptr<rmw_request_id_t>  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Request_<std::allocator<void> > >  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Response_<std::allocator<void> > >  void>(std::shared_ptr<rmw_request_id_t>&&  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Request_<std::allocator<void> > >&&  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Response_<std::allocator<void> > >&&) /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/functional:482:17      #9 0x7f4ef9c4e3a7 in std::_Function_handler<void (std::shared_ptr<rmw_request_id_t>  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Request_<std::allocator<void> > >  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Response_<std::allocator<void> > >)  std::_Bind<void (nav2_costmap_2d::ClearCostmapService::* (nav2_costmap_2d::ClearCostmapService*  std::_Placeholder<1>  std::_Placeholder<2>  std::_Placeholder<3>))(std::shared_ptr<rmw_request_id_t>  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Request_<std::allocator<void> > >  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Response_<std::allocator<void> > >)> >::_M_invoke(std::_Any_data const&  std::shared_ptr<rmw_request_id_t>&&  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Request_<std::allocator<void> > >&&  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Response_<std::allocator<void> > >&&) /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_function.h:300:2      #10 0x7f4ef9c5d88f in std::function<void (std::shared_ptr<rmw_request_id_t>  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Request_<std::allocator<void> > >  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Response_<std::allocator<void> > >)>::operator()(std::shared_ptr<rmw_request_id_t>  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Request_<std::allocator<void> > >  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Response_<std::allocator<void> > >) const /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_function.h:688:14      #11 0x7f4ef9c5b114 in rclcpp::AnyServiceCallback<nav2_msgs::srv::ClearCostmapExceptRegion>::dispatch(std::shared_ptr<rmw_request_id_t>  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Request_<std::allocator<void> > >  std::shared_ptr<nav2_msgs::srv::ClearCostmapExceptRegion_Response_<std::allocator<void> > >) /opt/ros/foxy/include/rclcpp/any_service_callback.hpp:96:7      #12 0x7f4ef9c547f8 in rclcpp::Service<nav2_msgs::srv::ClearCostmapExceptRegion>::handle_request(std::shared_ptr<rmw_request_id_t>  std::shared_ptr<void>) /opt/ros/foxy/include/rclcpp/service.hpp:348:19      #13 0x7f4ef8c135dc  (/opt/ros/foxy/lib/librclcpp.so+0xd65dc)      #14 0x7f4ef8c1402b  (/opt/ros/foxy/lib/librclcpp.so+0xd702b)      #15 0x7f4ef8c1429b in rclcpp::Executor::execute_service(std::shared_ptr<rclcpp::ServiceBase>) (/opt/ros/foxy/lib/librclcpp.so+0xd729b)      #16 0x7f4ef8c1513c in rclcpp::Executor::execute_any_executable(rclcpp::AnyExecutable&) (/opt/ros/foxy/lib/librclcpp.so+0xd813c)      #17 0x7f4ef8c19a4b in rclcpp::executors::SingleThreadedExecutor::spin() (/opt/ros/foxy/lib/librclcpp.so+0xdca4b)      #18 0x7f4ef925e679 in nav2_util::NodeThread::NodeThread(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>)::$_0::operator()() const /home/r1/ros2_clang_navigation/src/navigation2/nav2_util/src/node_thread.cpp:29:17      #19 0x7f4ef925e4d0 in void std::__invoke_impl<void  nav2_util::NodeThread::NodeThread(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>)::$_0>(std::__invoke_other  nav2_util::NodeThread::NodeThread(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>)::$_0&&) /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/invoke.h:60:14      #20 0x7f4ef925e420 in std::__invoke_result<nav2_util::NodeThread::NodeThread(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>)::$_0>::type std::__invoke<nav2_util::NodeThread::NodeThread(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>)::$_0>(nav2_util::NodeThread::NodeThread(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>)::$_0&&) /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/invoke.h:95:14      #21 0x7f4ef925e3e8 in void std::thread::_Invoker<std::tuple<nav2_util::NodeThread::NodeThread(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>)::$_0> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/thread:244:13      #22 0x7f4ef925e3a8 in std::thread::_Invoker<std::tuple<nav2_util::NodeThread::NodeThread(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>)::$_0> >::operator()() /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/thread:251:11      #23 0x7f4ef925e1c2 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<nav2_util::NodeThread::NodeThread(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>)::$_0> > >::_M_run() /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/thread:195:13      #24 0x7f4ef8577de3  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xd6de3)      #25 0x7f4ef8ae2608 in start_thread /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:477:8      #26 0x7f4ef825c292 in clone /build/glibc-eX1tMB/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95  ```    So maybe use `worldToMapEnforceBounds` can avoid that.
ros-planning/navigation2,2540,2021-08-29T14:35:49Z,2021-09-04T23:36:54Z,True,2021-09-04T23:36:54Z,edffb4dca095fe41102c4a8ba593ac2f714e5ad7,4,3,0c5e7929402c5ae33368f6ac9067273e17b18764 2b1db70bf66774a54ff32f04cee3bb3a3f5cd2e9 3d69cc4c058b67c88251ccc6ad9efccbaf642001,,Enabled runtime configuration of parameters for Hybrid A ,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #956  |  | Primary OS tested on | Ubuntu 20.04|  | Robotic platform tested on | Personal Laptop |    ---    ## Description of contribution in a few bullet points  * Added runtime configuration for Hybrid A* planner parameters  ---      #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2420,2021-06-22T21:09:38Z,2021-07-12T19:13:25Z,True,2021-07-12T19:13:25Z,80f4ef8301cdae798c08ea911d7452ce4f44cb4c,4,3,6e0db7a37c196cc088428e7b42025351e64882f7 467dca30024abdf0982e535cb8985c3d286dd1c7 1f9e6237c47f9bc4e9e5f3f0cfc4e084812e10a5,,Improve coverage for NavFn package,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | None |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | None |    ---    ## Description of contribution in a few bullet points    * Added invalid start position test to check NavFn planner behaviour      #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2407,2021-06-14T19:00:41Z,2021-06-18T21:55:40Z,True,2021-06-18T21:55:40Z,12fa59199291b27fa009da8214025d1ea862b091,3,6,f64378746f990544a0f441c7201580804b7d44ee 137c68083c7892bf211ed86b3d2348cafec2d19b ab4f95b6d43e82ba633015bcafac61b21ddba622 94afab16b608f1b385199e4d6af2f4e7f97a4d11 715ea382d1eef165977576ee526ac3972149ddff ceb3bc4ff61c8567a74c3a0031b21b20cf60dc80,,Improve coverage for waypoint_follower package,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | None|  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | None|    ---    ## Description of contribution in a few bullet points    - Added filled image message data to _PhotoAtWaypoint_ test in order to test uncovered lines of **photo_at_waypoint.cpp** plugin    ## Future work that may be required in bullet points    - Other tests might be necessary to get 100% coverage    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2550,2021-09-07T04:00:46Z,2021-09-07T15:47:39Z,True,2021-09-07T15:47:39Z,2e6594ca9d7f6652c914f5b5961324bfc15b9e82,1,1,15349b962f7c2c826820e6ea9179e3b9e8078483,,fix pf_ use before initialized in laserReceived callback,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (-) |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (gazebo simulation of turtlebot3) |    ---    ## Description of contribution in a few bullet points  ```cpp  nav2_util::CallbackReturn  AmclNode::on_configure(const rclcpp_lifecycle::State & /*state*/)  {    // initMessageFilters is before initParticleFilter    initMessageFilters();    ...    initParticleFilter();      return nav2_util::CallbackReturn::SUCCESS;  }  ```  ```cpp  void  AmclNode::initParticleFilter()  {    // pf_ is initialzed here  otherwise it is nullptr    pf_ = pf_alloc(      min_particles_  max_particles_  alpha_slow_  alpha_fast_       (pf_init_model_fn_t)AmclNode::uniformPoseGenerator       reinterpret_cast<void *>(map_));  }  ```    ```cpp  void  AmclNode::initMessageFilters()  {    ...    laser_scan_connection_ = laser_scan_filter_->registerCallback(      std::bind(&AmclNode::laserReceived  this  std::placeholders::_1));  }  void  AmclNode::laserReceived(sensor_msgs::msg::LaserScan::ConstSharedPtr laser_scan)  {    ...      if (!(++resample_count_ % resample_interval_)) {        // pf_  nullptr deference here        pf_update_resample(pf_);        resampled = true;    ..  }  ```        <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Additional Information  ```  ==788420==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f05ea2d9669 bp 0x7f05dac2cbb0 sp 0x7f05dac2ca20 T12)  ==788420==The signal is caused by a READ memory access.  ==788420==Hint: address points to the zero page.      #0 0x7f05ea2d9669 in nav2_amcl::AmclNode::uniformPoseGenerator(void*) /home/r1/ros2_nav_fuzz/src/navigation2/nav2_amcl/src/amcl_node.cpp:474:12      #1 0x7f05e9bd32ff in pf_update_resample /home/r1/ros2_nav_fuzz/src/navigation2/nav2_amcl/src/pf/pf.c:347:24      #2 0x7f05ea2dd78d in nav2_amcl::AmclNode::laserReceived(std::shared_ptr<sensor_msgs::msg::LaserScan_<std::allocator<void> > const>) /home/r1/ros2_nav_fuzz/src/navigation2/nav2_amcl/src/amcl_node.cpp:701:7    ```    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2546,2021-09-06T09:49:57Z,2021-09-08T03:36:04Z,False,none,e06050bfa6c415101b6c71df140fdc29acbbcd56,7,1,49bfd34c985a2a0928a87d91cd01cc28fba44038,,create new package nav2_composition,Signed-off-by: zhenpeng ge <zhenpeng.ge@qq.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |(tickets:  [#2147](https://github.com/ros-planning/navigation2/issues/2147)) |  | Primary OS tested on | (Ubuntu20.04  ROS 2 Galactic from binaries)  |  | Robotic platform tested on |  (gazebo simulation of turtlebot3)   |  ---    ## Description of contribution in a few bullet points    create a composition-based bringup package for Nav2  in other word  compose all Nav2 nodes in a single process instead of launching these nodes separately  which is useful for embedded systems users that need to make optimizations due to harsh resource constraints.    * create multiple nodes in a single `main()` (manual composition).  * create a bunch of single threaded executors to spin these nodes.    you can find some details about performance test(cpu and memory usage) here  * https://discourse.ros.org/t/nav2-composition/22175    ---    ## Future work that may be required in bullet points    try to enable intra-process comms until it's stable in ROS2  which are still kind of under development currently  you can find more detials:  * https://github.com/ros2/rclcpp/issues/1753  * https://github.com/ros2/rclcpp/issues/1750    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2557,2021-09-10T13:18:11Z,2021-09-11T02:51:10Z,True,2021-09-11T02:51:10Z,d47aba651ffa89225aaa006f05a59f87478aecf2,1,1,354025923f96f9152ac3ab311773b5298ade0335,,add semantic checks,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (-) |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (gazebo simulation of turtlebot3) |    ---    ## Description of contribution in a few bullet points    A trivial fix. If resample_interval_ is set to zero   `Floating point exception (core dumped)` would occur in the below code.  ```cpp  void  AmclNode::laserReceived(sensor_msgs::msg::LaserScan::ConstSharedPtr laser_scan)  {  ...      if (!(++resample_count_ % resample_interval_))  ...  }  ```    
ros-planning/navigation2,2543,2021-08-31T18:15:28Z,2021-09-13T19:04:42Z,True,2021-09-13T19:04:42Z,806029d0652c2618400f13fe5822f8ad671e1371,1,1,a60692230750ea0703627c9b3565b0f1540c744b,blocked,Fix deprecated type conversion 2538 ,---  ## Basic Info    | Info | Please fill out this column  | ----------- | ----------- |  | Ticket(s) this addresses   | #2538 |  | Primary OS tested on | Ubuntu 20.04 |    ---    ## Description of contribution in a few bullet points    Fix build failure (#2538) by replacing implicit deprecated type conversion from `rclcpp::Client::FutureAndRequestId` to `std::shared_future` with call to convenience method `FutureAndRequestId::share()`    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2558,2021-09-11T14:32:21Z,2021-09-13T19:40:33Z,False,none,6f374a98ae866c12dc4fb25dddfcf219ff442860,4,87,14c33e92bd6de9d9abf623efe7cec875b4833e0b cc9505832461b9d308cece3c94863506c7a62909 74946f297581f5a8dbe17e91d56325846420406c ae6ecc44968398eafd06b1cfa50d8985b3729bdf 24ab8232e63516e0fa516e95da141245324e412d d4dd2631e99e4754aa07242e0bc61e89dcb1c50f d6f8b8fc85f7973f9226a6c0a199aee93300fb85 a11fbd9965c1d1d5974833a23fde7ce1c2e99b9d d6f9584b70f40221bc152d8e4cedc23823138f6b ca4ac17f7161a6472e5c364bdc78c035746a850c dd1563c68051b73eeba201cb83b5ec41e42ab4d4 e099e083392da53f4f474e65e43e76a3e24d898c efca9625efc55e27023edfb1f544b30e21b1a686 28925f86ac468bc2ddf989576964483f639f9f79 c35ea2bfc0359bd78c39d364e1e5e0f566588789 d7f50d081641fa0a545d7fdb5184c57ee0e6c026 99efed3524ecf493c7b58e0e8d416cc5efc3d28d f4a622b64a9861b55aac9737bae80e258d87ae8b 6ad8bbdba5de15875f687df9b27bbdb95cd3e85c 6376718827d032d4680c8ee8dd472f5767c29f03 61ceb55e3bb7b83978480ed7182623c9d1191ad4 27c4d3d24b16c0140a19d66697c94a6892ea5934 72eac931b877e57544bf2fbf75c7558141fdbaaa b5b705b95d819be49908c3e81ced943f97708772 3349e206ee1f74690e19932bee298b669d5e578a 2d549e1a981e9545c446cb3faacc33bcb1c43556 61d905e624ea0cf8ba8611fd2c65ff238baf419f c70970a8411061b74d7b6167c6b267bb00108a46 ded0dc9616bfa8d8db88aaeb5e158a152b056af7 6cf939154cf911abc2e6648d5a69866e2f60e1c3 81367d13cefc8744799ad4c217c0708ed48d5685 d2326b74d4c009fcc229ea22af551043105e03ef 04cf677ed9eaa22ed1168a3ce162318c12114e56 62127dbd70a0cecfa321f410010947c5dc65572c 19a8a0141efe98e732353cdd8c99fad4023f2c95 3c4ef8730da51a36a1b1df5867abfedf2fb364a3 8febae28b956ca8c7c542db63a387de0e43083c1 c2baaa086ffa33f53d72638b2858cd396deb708d 653f9201cbed4f14e7ee351a879be37e223a4a82 0a34ff3722084bc1253db8dfb86c3a85f8a0c21d 6f07371f827fdac83957273084f02ef72f58e02d c32a338eb8733676667d4b7cf6ff0d29b2f65ac0 d4ca17c8750cf4f5498b67bd6828509ca37e9a59 fbbb8c147aabb741f040aeee7c04af76e81bc3d4 5c42a87bf70e18dc7f5cf834319759739775df5b 2137bd57099ebaf40da93a80d6ce0d6aff736d2b 6586a8219f32ddb434dcbb6144796ff77377ec48 3c1bb0d32653a20bee356d119beffced5386bbfd e15ce175c021cebc485fb26b1db59fa9da47e84c 2f9d63fa86f20de6d5a1c1027d88b392444d6100 81bd2abc704de928a7481ddf0de5c6040e98ddb6 727e60eee3a78a94a8b4736c15e7732390a9147e 2830e544ce6556ca2a7b5870b960642e6e11e0d1 e72f401219fc52d362e1c9dc5a2439b714a454d4 d6eb872b0008c88e6fbd6acd9016b44d35a2bec8 ae430d6c37156d60df239a1547e229625fa01376 4ea8976fe2aafa68ba72a720dca0c494ac1f806b 478a84341b67e754db8ddb9e87a0e0186770a062 81e81a6f63b895bc4fa05b94ac49981ff1a8ba9a 3e0bc169c596f7d847e9dec6c8d877130b5fdead 3a9983b6a85542487ce3ed8d1503b475dcc0113a e24baa66a6d81b99e7e1f5c90715be29c6b767bb dec0dddf02a2b758be05cb154f4016604260f715 6c33e50f606d395216cdbfc1b05d9fe42de3d9e8 cbad8ffa5af23f59d127c8a8910a0432649971ed da2496e0ee94637c183e32b2da5bfc8c926ac9b4 e8da09e420547032b0302055099424d03b24022b 4210dc9891d0b5b991c8826ced07342001dd15f1 f45980a753b0d9e8c5b5e2eb16bb0c7592e7a9dd 8ed836464122a8a5bd70258346de9b0143e7e6b7 cffb03480e51e3d7cea90408766cc54e23ed81bb a7e1da0cd62b4e99c62c57a7fef3a780b45a9390 4c04a66c305d41373eadd4f78f5f793d0c9adb0f 935fd5ec1db9ae584f8b4cefd5eedfadf3a3fc7d e9f3177fd4d13f05a2c38d808c970d79da92e8e6 34e5b31e92d2346f8cd429106290eb1a8050334c 9b046bf325dc2d7377ff0478e726874fe92e735e ad184e0c4c9ff4898bd933c62b4cb16efb1bd75d 94c6f6abd8deeddc42c75422638b0acaaa64d1ae 87f7842fb25c3a2ee42e06faf549ee8e36006c36 5d81029a1943c0c6d2dc2bda308a2e355957c8ce 13b8cded246d7d5c8f394a10e8b0b29b5e8d7be0 bad3d94ddb507a4217c99125eafa874be97eeb77 984a7a052105cdcf151853e06af9756194591700 cc38f3e9e31194eb693e10d78fe042c250c15deb 9047f74111e7c07dfe33e87de7a8fd5146a634b8 a760f9f6a3df3b80512804a2ee0c151abbaa84a7,,Make updates to Nav2 Theta Star Planner,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info  | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | none |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points  This PR basically does the following:   -  fixed errors arising due to an empty "<>" in `nav2_costmap_2d/include/nav2_costmap_2d/obstacle_layer.hpp` at line 227  - removing 'w_heuristic_cost_' from Nav2 Theta Star Planner as a user configurable parameter   - updates to `nav2_theta_star_planner/README.md` to remove its reference wherever applicable   - updates to `nav2_theta_star_planner/src/theta_star_planner.cpp` to set `w_heuristic_cost` as `std::min(1.0  w_euc_cost_)`  - fixed an incorrect check of whether the start and goal pose are the same in `nav2_theta_star_planner/src/theta_star_planner.cpp`  this was leading to runtime errors    ## Description of documentation updates required from your changes  - removing the mention of `w_heuristic_cost` from Nav2 Theta Star Planner's docs  as it no longer user configurable  ---    ## Future work that may be required in bullet points  - update the docs available on the website for the Nav2 Theta Star Planner    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2553,2021-09-07T16:16:10Z,2021-09-14T19:25:44Z,False,none,d56ea6711cfa5a9d1bb0d596d20b8df9d465fafa,17,6,d0fe5a5ee2b9e032f7c54381a61696cebe8e683f 102216fb29c9dc06b32f530098571bd2e7ffabf0 efb70d1a533d6e3b499bd252844ee40c37c53bd8 73f9c859922641e339b6996013839a6046c90fc4 fafdf3acbc9c4546c6350dcc76f697ad8b78ad34 75122230c3176af00e8416bed51cdce6f86227f8,,Refactor amcl code for motion model modularization,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | add tickets here #2552 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | turtlebot3 |    ---    ## Description of contribution in a few bullet points  The amcl source code has been slightly modified and a plugin package for motion model has been created.  Used pluginlib and created a amcl_plugins package consisting of different motion models.  Added this as a plugin in amcl_code.cpp and changed Cmakelists.txt and motion_model.hpp to make it more flexible to add new models.  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes  The parameter robot_model_type is to be now taken according to the motion_model_type as changed in nav2_params.yaml file.  Extra parameters related to kinematics of the bot is taken  so that wider variety of models can be added as a function in the plugin and tested with the amcl code.  <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2562,2021-09-15T02:12:56Z,2021-09-15T03:18:37Z,True,2021-09-15T03:18:37Z,420a6ffd3c6b154c4aec2c5f2a24e4af4bd971a9,17,1,86f9b4a6207d8e33bd46634f4e41550a29b355a2,,Register nodes as components,Signed-off-by: zhenpeng ge <zhenpeng.ge@qq.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |(tickets:  [#1013](https://github.com/ros-planning/navigation2/issues/1013)) |  | Primary OS tested on | -  |  | Robotic platform tested on |  -  |  ---    ## Description of contribution in a few bullet points    Register Nav2 nodes as rclcpp components so that they could be launched in a same container (i.e. a single process).    ---    ## Future work that may be required in bullet points    add launch files to use component container （blocked by some problems）    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2563,2021-09-15T08:11:52Z,2021-09-15T18:58:33Z,True,2021-09-15T18:58:33Z,7be0af97168ea066fc9af4882af61c96c8707b56,3,1,93d310bdd8099faef0c48750f028e8c6e674b9d7,,Fixed vector reserve exception in smac planner due to precision error,- Related issue: https://github.com/ros-planning/navigation2/issues/2547
ros-planning/navigation2,2561,2021-09-14T23:01:38Z,2021-09-15T18:59:25Z,True,2021-09-15T18:59:25Z,3ac88193c0b52c7e6e71bbf9de8818979f5996c9,113,37,053448773a51e131372894176bf8012150615113 c1b506eb7f98a943b490beca673b3123d030c38f 6151f13287577751cd889a7e2b00b7e5e32e060e 5618b02d697c311a3dc77e8e065dfbf2aa9cbb7f c9af5573fdb824c87789b7de921e9528b157a0f0 5ab93869efe390b187d4d32913588214c5d8bd24 65f8d74aeb50d8af94ec3058ea69738811be5e90 f1163165dca53b40e88f99e2dc5e0f0b19ac0ef3 d028caa20474f9215f0d080d4b46cc16a493730d 27c285b5364d30728710c5bd7849ec7233e7c170 da4f972fc07230bcdc534c6611d6c25f2720b6c2 07489130831bf4b99f6136a308515d04cf45cece 826b0d0e8bb56f64d92900e26b7f513c8de5c28b ea90f46fe44595e58614a078718b2ab898632b77 b33e382ed75598546466124a9fc857263f29b083 e326d3f6d01a77ae299955e36e091c0e60bb975c 8316fa2abf0a390f5e516c61598a823fa15682fd 2acd470e139e2dbd3466c3957892531defcf56bb 5c5fc7749d24c756417ad5fd4fd4bef6df95fc16 05e60294cf55a457b528b991b897ef5ac2280680 cbfe97ec1c095a7d986504d055e324f09571c28d 9dab8beb519e9e84601218321c2e95b3e92debde 58f59bfd5ba137109617a7d7e2b18171a3b629bc 9e342e4f0579a1c3c7fcffe1958f6a3a4a8a5ba5 168a92df09e8518a4abae23876a8a9726f0625a1 88b98e79ae720c82966d52d7ebf6f9b3d30b426c bb3789b8c584b893a0c71b1eb1d02a054137c325 ec95d2d066f28087b35b8ca8b35f1a6314d953a9 b6194b23a5937993be948cb6239445ef25268db4 d9983a5443ed70139c695c3a6e173e5e6ce1798b 8088162e7da4d87998206c8c56a511e89a1c65da 6ce94628d05a75bd747400dd32015690a5422a72 f4b65b0e84242606bc75cb0dce861ceba219c8ff 87dfb3c0418e47caec3b3ef37a22c7fc764d6969 b3331a89c3e87f48204e99d41ba46950e24e5685 0e595801c62db92e215d216e8a57c5b54760628e 2eb6e0fd3bcca87da7d49351623ab125e682a192,,Galactic sync 4 Sept 15 ,Among others:  - Semantic checks of various package's parameters  - Dynamic parameters for many algorithms  - New nav2 simple commander package  - Fix voxel grid regression introduced from min range parameters  - RPP fix on out of bounds costmap checks  - Update on message filters timeout to prevent high CPU useage in task servers    
ros-planning/navigation2,2564,2021-09-15T20:52:31Z,2021-09-16T01:17:34Z,True,2021-09-16T01:17:34Z,e5a4c844c748233dc4d3039b1ea5809c81dac45f,1,1,c2c597bae76bbfc3be4093f6742019ea0643d55d,,Fixing minor build warnings in setup cfg for simple commander,none
ros-planning/navigation2,2559,2021-09-13T20:13:37Z,2021-09-15T18:55:47Z,True,2021-09-15T18:55:46Z,62ef71998dbb0065e55a068b214d70fc35a506a4,2,7,36d2d4b387da0af431c3fcd1718ab8382611e320 4ff1a966cafbf679af5831b69c3024e0ee9ded9a 5c3b2d71a0ed11e549a4fd72eeb5cd2b5cc9fd02 c8fba9a03938cf68e26255344ac099caa5caa1da aa5578808fd8b7efca4c6353be505b6f51763abb 9ecbd4b5820efd7d94e4e9b55ae785702ad0b164 547ce52126ec2e78f54a46163061230fefdd4ca3,,Updates to Nav2 Theta Star Planner docs,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points  This PR basically does the following:  - removing 'w_heuristic_cost_' from Nav2 Theta Star Planner as a user configurable parameter    - updates to nav2_theta_star_planner/README.md to remove its reference wherever applicable    - updates to nav2_theta_star_planner/src/theta_star_planner.cpp to set w_heuristic_cost as std::min(1.0  w_euc_cost_)  - fixed an incorrect check of whether the start and goal pose are the same in nav2_theta_star_planner/src/theta_star_planner.cpp  this was leading to runtime errors    ## Description of documentation updates required from your changes  removing the mention of w_heuristic_cost from Nav2 Theta Star Planner's docs  as it no longer user configurable    ---    ## Future work that may be required in bullet points    update the docs available on the website for the Nav2 Theta Star Planner    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2443,2021-07-09T11:45:13Z,2021-07-13T16:22:33Z,True,2021-07-13T16:22:33Z,2af052cf716f6caf0eb55cbaa540e3848040318d,3,5,3a7c439b51031bd7fc5b967eca7294429108abfb 238a53b46b3a0407eb26729f0318102367f9d56e 6970f6ed5160b627e360b2791591a6b935ca6ced 273391929e91d9fb696c2b3b391399c1eccc46a0 4cd612e4e0776324b9212e786be2f9ee3c859fe2,merge, Feature addition capability for the RRP to drive the robot backwards ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2327 #2427 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | gazebo simulation of [Neobotix mp-400](https://github.com/neobotix/neo_simulation2.git) |    ---    ## Description of contribution in a few bullet points      * I added this neat new feature for driving the robot using the RRP planner backwards. This enables car-like robots to efficiently perform the maneuvers using the SMAC planner.         ## Description of documentation updates required from your changes      * Added new parameter "allow_reversing"  so need to add that to default configs and documentation page      ---    ## Future work that may be required in bullet points      * I tested on a differential drive robot  but it will be great if someone can test it on an Ackermann drive!       #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2568,2021-09-20T06:17:12Z,2021-09-27T19:27:32Z,True,2021-09-27T19:27:32Z,d837c28850080f0c986b2c27be0192edc3512334,1,1,ed363c38242e5df5071c8114dd352e32352ed7c0,,Fixed test_bt_navigator_with_groot_monitoring,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | Personal laptop |    ---    * Fixed test_bt_navigator_with_groot_monitoring    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2204,2021-02-25T16:24:28Z,2021-03-05T18:26:24Z,True,2021-03-05T18:26:24Z,087d1374acf0ac216e8f5924e1f4f3d48941264d,4,7,80bea85151abe264a3f9297694f0f863f7f7dc05 dd050e147c76bbf87553ea62a2d918eb078f13d4 1ba826f11bd4761e3655ba94a22eb59adb38610f 3396019e0ca9417045ad71f5712a27afef4657a2 8037ef2f73bbacddc38e5aea87d6f5c5e30a7b82 38c43a02c96ede7cbb06d0e3e1c5d0d61577cbf6 ec2007dc2dae76e1c9902bb477d6b0ab7ec03d56,,Add ClearAroundRobot and ClearExceptRegion action bt,ClearEntireCostmap action bt was implemented but the 2 others (ClearAroundRobot and ClearExceptRegion) were missing
ros-planning/navigation2,2248,2021-03-16T08:47:22Z,2021-03-16T21:16:29Z,True,2021-03-16T21:16:28Z,3cfe6760060e2c47c0bd1080b544f4abcee96e24,2,3,48ae109b2dc8a1b93033eb5d10ba12f8d8dcbc0b 52c169494dcde830003c83481148ae82a2d56b73 c8e9e8819dd588966a32e16f695e2a447e214628,, SimpleGoalChecker Make parameters changeable at runtime,I need to change the **SimpleGoalChecker** params at runtime  so here is a PR activating this feature in a similar fashion as https://github.com/ros-planning/navigation2/pull/2181  Working and tested on my simulation.  If there is an interest I can add to this PR changeable parameters for the 2 others `nav2_controller` plugins: **SimpleProgressChecker** and **StoppedGoalChecker**
ros-planning/navigation2,2179,2021-02-11T13:55:47Z,2021-03-05T18:29:23Z,True,2021-03-05T18:29:22Z,50c2ecc151eba8d25c3af06bac7308898845b37a,6,10,410cfc5a52e5afdfef2a615e99822421af4b9095 6ac2b5e6ad950bd4ac3d46db39861f4b1f2e294e e866db6a8aef8bcdefe27dd3d0801dc0c4124e6e 8a770b1c9cb3f8d2f671780fe1b83e28397e806c ef1774f4aa9c8c83e0795e3b27365f5c87fb219c dd22a1764de379b2497b1d3279c4fb16a2bf84b3 0a10ae03d9ee327b619b25cb4e548a37e43a7786 4ed8eb0aca6840d57768823a20406b7287dad837 ad278064cff16140300763040d89c2efa7ef94a5 658f80de6aeda2e6f2b94427d5aa07262c9d10cb,,Ability to get a path from the planner from any 2 poses start_pose and goal add use_start_pose and start_pose to ComputePathToPose action,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/2178 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Wyca Elodie simulation |    ---    ## Description of contribution in a few bullet points    * Proposal implementation of the following feature request https://github.com/ros-planning/navigation2/issues/2178. This is a draft. Will test properly if we agree on the relevance and the implementation.      
ros-planning/navigation2,2276,2021-03-29T10:22:28Z,2021-03-30T17:59:00Z,False,none,f621394e104b46b84e85e0af5fa3472dc739d872,2,1,73ebeb5da327a51248fdd52b3dd5176805fc5dab,, nav2_behavior_tree Add OnBtExitedCallback ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Wyca Elodie Sim |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    Added an optional `OnBtExitedCallback` to `nav2_behavior_tree::BtActionServer`. This allows getting data from the blackboard and filling the result of the action before it returns (and just after the BT is done).  This would be a prerequisite to use and extent the result fields of the `NavigateToPose` action for instance.    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2181,2021-02-11T23:13:32Z,2021-02-25T19:58:50Z,True,2021-02-25T19:58:50Z,ff81dafaa23f4dbf89f4f2cdc44eb8ecb9b651a1,2,5,9f8e6650a41f9c753598816b03624d7bedd347ce 661a186a3ece66beede22bcb3a34a231051ce9e6 cfb3079f3b4d754b96b57e26b826dd65751d369a 3851b21e83075255ddf632716f3230762885422d 5fd20ed9fb5c410add4fdf2a35d463165dafc96d,, NavFn Make the 3 parameters changeable at runtime,## Description of contribution    * Get parameters  `tolerance`  `use_astar` and `allow_unknown` before calling `makePlan`  * Had to add `rclcpp_lifecycle::LifecycleNode::WeakPtr node_` as a class member and use `auto node = node_.lock()` in order to access `get_parameter` outside the `configure` function    ---    ## Future work that may be required    * Conforming to a dynamic parameter refresh pattern once it will be decided what the best practice. It seems parameters feature are still a wip  for instance https://github.com/ros2/rclcpp/pull/829  
ros-planning/navigation2,2260,2021-03-19T20:13:37Z,2021-03-23T05:32:16Z,True,2021-03-23T05:32:16Z,c7a1df2e26c02b076029c62d76d010c0bf59ee26,4,2,2b401df7cdb0def97c93059cfa76052be43a6143 14aabe7f1b64b97382ac954acf1097a644e270c5,, nav2_controller Dynamic parameters for the reminding plugins,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/956 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Wyca Elodie Sim |    ---    ## Description of contribution in a few bullet points  Similar to https://github.com/ros-planning/navigation2/pull/2248  turns out I also need **SimpleProgressChecker** to have dynamic parameters and took care of **StoppedGoalChecker** along the way.  This is SO nice these are plugins and there are very convenient. It makes me very happy architecturally.   
ros-planning/navigation2,2224,2021-03-08T20:33:21Z,2021-03-08T21:21:59Z,True,2021-03-08T21:21:58Z,c112ffd95380b64db26af7c996a7ac953bb3f8af,1,1,e7340a80427ff6891b23660e4969134ea8c0e9f9,,Fix nav2_behavior_tree action plugin test,Fix https://github.com/ros-planning/navigation2/pull/2204#issuecomment-793035051
ros-planning/navigation2,2477,2021-07-26T13:20:08Z,2021-07-26T17:24:02Z,True,2021-07-26T17:24:02Z,61670a121d1a2d3343ad1a8ba3580fd9efd5563b,2,2,20f13f8e1f80660bca978784436bc5c1dc2248cf 5c7fe4e66039e12b4d6152f8d1c8704a65ce6963,,Fix Smac cleanup,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/2476 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Wyca sim|    ---    ## Description of contribution in a few bullet points  Fix https://github.com/ros-planning/navigation2/issues/2476      #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2233,2021-03-11T13:05:33Z,2021-03-11T19:16:48Z,True,2021-03-11T19:16:48Z,47d7d7d366574430644656b2fadb791b29402f4f,1,1,252a951c5185dd441b251041b664ad596088b832,,Add getTree and haltTree to bt_action_server,As discussed here: https://github.com/ros-planning/navigation2/issues/1971#issuecomment-795862059
ros-planning/navigation2,2440,2021-07-07T15:44:35Z,2021-09-03T15:59:35Z,False,none,6cc55320753583254027ecb65c2c711fa17a23e7,1,1,13e488392560cd746b94256822f9fe6afe261b25,,Wait for goal result after cancelling BT action node,## Basic Info    The PR #2436 was previously opened.  This previous PR #2436 does not target the `main` branch (as it should have)  but the `galactic` branch.   This PR here is exactly the same than #2436  but for the `main` branch    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses | I didn't find any issue that is currently open  and that would be related to this PR. But I sure can open one if you want me to. The PR #2384 is related  as described below (see **Related PR** section). |  | Primary OS tested on | Ubuntu 20.04  ROS 2 Galactic from binaries |  | Robotic platform tested on | Gazebo simulation of Wyca's robot  and real Wyca's robot |    ## Description of the problem fixed by this PR    Hello    I fixed a problematic behavior that happens quite often after cancelling a `bt_action_node` (approximately once every 5 cancel requests in our case).     *What we do*:  - We start a nav2 `BtNavigator`  which controls the action "GoToPose" for instance.  - The BT has several `bt_action_node`s  in order to call sub-actions like `"/follow_path"` for instance.  - When cancelling the "GoToPose" action  all the `bt_action_node`s execute [`halt()` function](https://github.com/ros-planning/navigation2/blob/29c1af087afffb80ddc4ec172015fee2c8a37166/nav2_behavior_tree/include/nav2_behavior_tree/bt_action_node.hpp#L265-L279)  hence they send a cancel request to their respective sub-actions.    *What should happen*:  - The `bt_action_node` should wait for the sub-action to properly end  before returning from the `halt()` function.    *What actually happen*:  - The `bt_action_node` only [waits for the cancel request to return](https://github.com/ros-planning/navigation2/blob/29c1af087afffb80ddc4ec172015fee2c8a37166/nav2_behavior_tree/include/nav2_behavior_tree/bt_action_node.hpp#L269-L275).  - Hence  when cancelling the `BtNavigator`'s action  the sub-actions' `result_callback`s are not always executed.    ## Related PR    * Before #2384 was merged  the next action call after a cancel often results in an instant end of the BT  because the goal result of the previously canceled sub-action is received. Indeed  cancelling the `BtNavigator`'s action halts the `bt_action_node` without waiting for the sub-action goal result.     * After #2384  if the goal result of the previously cancelled sub-action is received  it is [filtered out](https://github.com/ros-planning/navigation2/blob/29c1af087afffb80ddc4ec172015fee2c8a37166/nav2_behavior_tree/include/nav2_behavior_tree/bt_action_node.hpp#L315-L321) using the `future_goal_handle_`. So  the next action call does not return instantaneously. But this might not be the cleaner way to solve the problem  since the sub-actions' `result_callback`s are still not always executed.     ## This PR's description    * This PR allows to wait for the sub-actions results  by making the [`bt_action_node` spin](https://github.com/ros-planning/navigation2/blob/13e488392560cd746b94256822f9fe6afe261b25/nav2_behavior_tree/include/nav2_behavior_tree/bt_action_node.hpp#L285) until the sub-action goal result is available  after the cancel request is sent in the `halt()` function. This will force the `result_callback` to be executed after the sub-action is cancelled  allowing to get a clean `BtNavigator`'s action goal result.    * A [timeout](https://github.com/ros-planning/navigation2/blob/13e488392560cd746b94256822f9fe6afe261b25/nav2_behavior_tree/include/nav2_behavior_tree/bt_action_node.hpp#L281) is implemented to prevent from infinitely looping while halting the `bt_action_node`.    * If the sub-action goal result is not available within the timeout  there is an [error output in logs](https://github.com/ros-planning/navigation2/blob/13e488392560cd746b94256822f9fe6afe261b25/nav2_behavior_tree/include/nav2_behavior_tree/bt_action_node.hpp#L288-L292).    ## Future work that may be required in bullet points    * Maybe the timeout can be handled differently  * The case "the goal result is not received after the timeout" may be handled (in a better way than just outputting an error in logs)      Thank you for reviewing this PR.      ----      #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2518,2021-08-17T16:52:29Z,2021-08-17T18:12:17Z,True,2021-08-17T18:12:17Z,7b29e471098fa291e7bcf3223a4b5f42643b4296,2,3,a02169c03ab52ba17a3b2c27a5f83c9506ab2b79 4a1dcced40df7ea171ca63d8bc74a1bc9a532614 16af26a48c11bca9bc736a2c58a1b43d023d6824,merge, ObstacleLayer Use message_filter timeout,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/2333 |  | Primary OS tested on | Ubuntu|  | Robotic platform tested on | Elodie Wyca|    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes  Use a timeout on the obstacle_layer message_filter. And use `transform_tolerance` to set its value since buffered message from the message_filter older than `transform_tolerance` would have been discarded later.  This effectively solves the controller_server being stuck with a very high CPU usage after few tf extrapolation errors    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2570,2021-09-23T11:06:45Z,2021-09-27T20:02:21Z,True,2021-09-27T20:02:21Z,406bbbe112fd74e01953640ce6a0f87cfe66c288,1,1,8287f3ae795bf7399c2ed38b1cdf27f44ac3db62,,removed redundant params in smac example,Tiny documentation change in the smac planner README. Looks like those two parameters were overlooked when adding the Lattice Node example. The [docu example](https://navigation.ros.org/configuration/packages/configuring-smac-planner.html) does not hold the redundant params.     
ros-planning/navigation2,2279,2021-03-30T12:50:21Z,2021-03-31T17:17:08Z,True,2021-03-31T17:17:08Z,ed6a8de7a4eacab053bb5bba9c7ef6f05db443d7,2,2,2c1587e4689fe31b4680f3d685512bfdf00135a8 fb063edf314d5556d679df3dbdad99eda7461570,merge, nav2_behavior_tree Reduce bt_action_node verbose,For my console sanity  switched RCLCPP_INFO to RCLCPP_DEBUG
ros-planning/navigation2,2495,2021-08-09T09:09:41Z,2021-08-09T17:17:26Z,True,2021-08-09T17:17:26Z,7adf691d54d248418f19318abbfd50bcbf637494,1,1,8f53e69fd4772404347881a5b045bd8ac20358e4,, Smac2d Accept path of length 1,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/2494 |  | Primary OS tested on | Ubuntu|  | Robotic platform tested on | Wyca Elodie |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  Solves https://github.com/ros-planning/navigation2/issues/2494 .   Fully tested with smac2d planner. However as a_star is used for the hybrid version  it may have implications that I don't foresee (I did a basic sanity check with the hybrid though)    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2222,2021-03-08T11:21:06Z,2021-03-11T20:21:04Z,True,2021-03-11T20:21:04Z,0382175dba1ccddd02f7cb336cff5092dbfff4b6,6,5,09ffe954c87f41cc438d5c9736db687098df794a 01b28ba21c470b30b83bed3959c9727e31e7a5cd 456b6fd4af5c8697d7b37faf47f8535537149a8c 04b4ac3f5888a86231f2bff31b61cf5c97ea0ca6 7be1f16cbb071d58cf5d23469bc2aa58c8b39d12,,Fix 2186,Fix https://github.com/ros-planning/navigation2/issues/2186  Proper PR for a commit that was proposed as part of https://github.com/ros-planning/navigation2/pull/2179  Implementation can be discussed  but I PRed it as the work as been done and for it not to be forgotten and lost.    There is already a `getCurrentPose` fonction in `nav2_utils` that is using tf to transform the `robot_frame` to a target frame (`global_frame`) and convert this transform into a PoseStamped (`global_pose`) with the proper try/catch of `tf2::*Exception`. This function is used for the `getRobotPose` of `costamp_2d_ros` (which provides the tf_buffer). And this `getRobotPose` of `costamp_2d_ros` is already called in the `planner_server` (which owns a `nav2_costmap_2d::Costmap2DROS`).    All I did was to mimick this architecture. I added a `getPoseInTargetFrame` fonction in `nav2_utils` that is using tf to transform the passed PoseStamped `pose` to the `target_frame` in the same way as the `getCurrentPose` fonction. Then I added `getPoseInGlobalFrame` in `costamp_2d_ros` which is using it (and provides the tf_buffer and the target_frame). And finally `getPoseInGlobalFrame` can be called in the `planner_server` to ensure that the pose received from the goal is transformed in the global_frame (aka  most of the time  `map`).     No unnecessary transform is done if the pose is already in the correct frame.  Tested on a real robot. TBD: proper unit tests (I believe the ones for robot_utils needs to be augmented  none are fully testing `nav2_util::getCurrentPose`)
ros-planning/navigation2,2475,2021-07-23T15:27:16Z,2021-08-02T21:08:05Z,True,2021-08-02T21:08:05Z,3bba684a9ab14d2db19e869e2ce48c717310de6f,2,5,b519dece8b5f1268e8bb16ca9b1b04fa06c75e34 eb7ca94356f10f2f6ecbf653bfa3b14a7bab4ca9 d811e64d03e7e2e7d21bff9da1bf800122de3ec1 17ad72e04741e5ced1660e5c443ddd94abb59ad3 7c8eaf6358cb5605638c4acc9e310dfff2821d2c,, SmacPlanner2D make tolerance parameter dynamic,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/956|  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Wyca sim) |    ---    ## Description of contribution in a few bullet points  I am starting to experiment with **SmacPlanner2D** and in order to work in our workflow  I need the tolerance parameter to be dynamic  which is what this PR is about.    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    Should we make other paremeters dynamic in **SmacPlanner2D** ? Though most of them would require re-initialization of several objects    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2488,2021-08-02T22:29:29Z,2021-09-01T21:59:57Z,True,2021-09-01T21:59:57Z,0b92a11ded3fd27183d5bae815e0d717d1f1da98,8,26,c63bca598a8cecaa45d465af1702c7b1f5078925 5e1b46979cb33afe750ea5e8e0af693cc8436c55 371649931434ae1739d4235be10ba17c896bf048 5997d94b2bb9fefc8e0c41a442fcd4cce5a0f04e 8197952f222510bbd5c3150b34ef68bd7da46988 4fd130353409c258910c7a5a9e9df668e9db7cbf 0c36c495e33c7461ad3e5230af108add9fe53d02 4473ce00a5a4362138eed7069bc3bfb7ccac92c6 f2b8e53e2286d76e6c10313ab3c78ff083048941 ec01cb978eadf87c499260e84f081e1eb307acd0 c92eee7cf34e58540d906ffd20911804c78cef7e 2fb2dcf77d9f37dae0e8c2a20a7239b1dc8e231b 614f2d079286afc6e19a1912fb380a7f3d9e26f2 a93ae7396447a5fc3c8c2ea86d9820c2de6b5f1d 47d188d8346caa6a16698c3f08118b02d41bab95 ee88dc26a336e512091bced53267198395ed6512 13544487bd5ab901626678cf8f21b0102200a6b1 2e364dd02cd46978046d7f508e83faa5067d0f67 e2537bad727ec4273ff41d3aa51c28c363195447 15567b154edc7a29a1cd9efea7a9492515add842 45085ed3eb01b594f3fcf7e6af7402ccd7e72f03 39a165336d7c0c965daf69bce2a2621a41820c22 0c91fe266dfae7ebd37299de66c1a63c5c7d410f 4f64df7ffda8e223d4346b09d26be792d808a3f7 4b4aa24950727670346834861da0dbd78bebbabf adef9eac653baa90465f14ee198ea7104e06074d,, All 2D planners Fix last pose orientation fix small path and add ignore_goal_orientation parameter,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/2482  https://github.com/ros-planning/navigation2/issues/2478 and https://github.com/ros-planning/navigation2/issues/2517|  | Primary OS tested on | Ubuntu|  | Robotic platform tested on | Wyca Elodie |    ---    ## Description of contribution in a few bullet points    1. Fix goal orientation being ignored and always set to 0 (https://github.com/ros-planning/navigation2/issues/2482) by copying the goal orientation to the last pose of the path  2. Thanks to 2.  new `ignore_goal_orientation` parameter (defaults to **false**) to enable the behavior discussed here https://github.com/ros-planning/navigation2/issues/2478  i.e. no orientation discontinuities between path last pose and path (last - 1) pose  3. Fix small path corner cases    ## Description of documentation updates required from your changes    * Added new parameter  so need to add that to default configs and documentation page  * Description of the fixed default behavior in the migration guide ?    ---    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2555,2021-09-08T03:30:35Z,2021-09-30T16:39:40Z,True,2021-09-30T16:39:40Z,232612fa8e05eb4a5894be62dd01c9491f757b11,5,16,e4d9c4a7d6f72e2feae5caedfa9df0134f1c600e 50ab2b343d83aa1af6f1d43ac05b252141aad10f 88cda3b17a022daad822b52ec1c4d1ac233930fe 36641f262c0d649ccffc9305eb0910e6154ed9f5 04c6d1853e82bb6f4fb1ab1f64726e8d4d24c8b2 3a0491df3975a5b1267a188ddf9f3ad2a88c1b4d fdc73349148ad02cdac4d03841e952a14b3fb969 fde1f0ebc8a31f4252243a2f7210b3c84f5e5f61 2ce2f43630b1abdda6bd880c7dcb775673e8eb57 9424bc415aeea50f5442f79e274ffdaf57b7cf13 03bf6ac4449d575d96937991ade91dc52801eb4b 8f8069b02ab073c05332856b0016e8fbfddf54de 894fd9fdd7e229b447f1d7a4122e1384ac9b107b 1adac5ee019c6a5b7c60f589081fe4db247ba90e b57b17ae5576640cde50be877bcb38639b3e6e94 7e6993b586918077321283ef0f34f49c49fff4a7,,Support manual composed bringup for Nav2 applications,Signed-off-by: zhenpeng ge <zhenpeng.ge@qq.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |(tickets:  [#2147](https://github.com/ros-planning/navigation2/issues/2147)) |  | Primary OS tested on | (Ubuntu20.04  ROS 2 Galactic from binaries)  |  | Robotic platform tested on |  (gazebo simulation of turtlebot3)   |  ---    ## Description of contribution in a few bullet points    provide a composition-based bringup methods for Nav2  in other word  compose all Nav2 nodes in a single process instead of launching these nodes separately  which is useful for embedded systems users that need to make optimizations due to harsh resource constraints.    * create multiple nodes in a single `main()` (manual composition).  * create a bunch of single threaded executors to spin these nodes.    you can find some details about performance test(cpu and memory usage) here  * https://discourse.ros.org/t/nav2-composition/22175    ---    ## Future work that may be required in bullet points    try to enable rclcpp intra-process comms until it's stable in ROS2  which is still kind of under development currently.     #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2577,2021-10-01T05:43:49Z,2021-10-01T19:31:02Z,True,2021-10-01T19:31:02Z,0d350051fe649b7ee8829c039ee2cb4d965f4ae4,2,1,3662dd54bf3fad89348596b06905a5a2f6337694,,Fixed model loading issue with Gazebo and Rviz2,1. Update uri(model://) of dae files for waffle model in waffle.model(Gazebo uses)  2. Update uri(package://) of dae files for turtlebot3_waffle.urdf(Rviz2     uses)    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #2571 ) |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2572,2021-09-23T14:40:22Z,2021-10-01T19:31:07Z,True,2021-10-01T19:31:07Z,ba9851280f747434f143762c6211d5eb8a34e9b3,2,1,34818390a0c4df68c5d81a307d7c218a177e60f1,,Fixed model loading issue with Gazebo and Rviz2,1. Update uri(model://) of dae files for waffle model in waffle.model(Gazebo uses)  2. Update uri(package://) of dae files for turtlebot3_waffle.urdf(Rviz2     uses)    The details of issue described at #2571 .  <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #2571) |  | Primary OS tested on | Ubuntu20.04|  | Robotic platform tested on | Gazebo|    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2576,2021-09-30T15:22:48Z,2021-10-05T00:58:54Z,True,2021-10-05T00:58:54Z,56360c3c45687d09f425aa214d9fe4391e11bfe7,2,4,b0d44d3b8ddc486ac30a0160d8cf329e4df9ee8c ff977e94924590c21ff5bc31bde42a00ce94413f d25d14df19a8bf79dd1f8d939ce4773ae70368da 3df6b1d05663ab867495c7b664769e55edd6c8f8,, Draft Set parameters result example,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/956 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Wyca's Elodie|    ---    ## Description of contribution in a few bullet points    As discussed here https://github.com/ros-planning/navigation2/issues/956  
ros-planning/navigation2,2393,2021-06-07T18:04:27Z,2021-10-05T19:44:23Z,False,none,d4528aedbb11d668ae070449bb7cb3c12bda0331,2,3,892ead2d0cb9cc596f253d69b9e5b9431dbea47b c2bf850c8e2e9dd018d88e31549fc47a9e22c1e3 e7323cb2ffadea47035b67da05bbe0a929e1c5f2,,parallelize costmap bound updates,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2042 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Gazebo simulation of turtlebot |    ---    ## Description of contribution    - fun little parallel optimization of costmap bounds update  - i've described this previously in #2042  but this time i've used default config provided in `nav2_bringup`. When the number of layers gets smaller (or layers are very light) improvement slowly vanishes  but still even with 2-3 layers and no filters there is 5-10% improvement overall in  `updateMap` measured here: https://github.com/ros-planning/navigation2/blob/b63b11f8a638faf389d6b99911d95899abe1580b/nav2_costmap_2d/src/costmap_2d_ros.cpp#L411-L415    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required    - probably a parallel version of `updateCosts` function call would be more interesting and useful. However  that's a bit more tricky to do safely on that shared member variable `combined_costmap_` here: https://github.com/ros-planning/navigation2/blob/b63b11f8a638faf389d6b99911d95899abe1580b/nav2_costmap_2d/src/layered_costmap.cpp#L208  - any thoughts on how you would go about implementing this one? one obvious way would be to make a copy for each thread  update costs on the copy  and later join them but that seems suboptimal because the costmap copy can become expensive      <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2583,2021-10-06T07:55:54Z,2021-10-06T16:47:00Z,True,2021-10-06T16:47:00Z,0513db1cf94481958d43ac4e3d15100f2c91c245,1,1,f4b6af1c53f16dd3f732f829c601f41db2ddc614,,Fix typo,fix typo in warning msg;    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1) |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2536,2021-08-26T00:49:47Z,2021-10-07T23:52:42Z,False,none,630d2afcaf5df0e22966c8edf1b11a459522e640,8,1,da14a7ef5f799f847f48580a178c7a36afa6fb17,,navigation Modify BackUp behavior to respect a demanded backup_dura ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/2453 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | custom differential drive robot |    ---    ## Description of contribution in a few bullet points    * The BackUp movement will be terminated as soon as the elapsed time exceeds the `time_allowance`  defined in the `time_allowance` input port of the `BackUp` behavior tree node.  * During the `onRun` call the `back_up_time_end_` time is calculated by adding the `time_allowance` to the current time  * If the `rem_time` (difference between `time_allowance` and the current time) becomes smaller or equal to zero during the cycle updates  the robot will be stopped and the `BackUp` behavior will be exited with `FAILURE`  * If the time_allowance is smaller than zero  this restriction will be ignored and the BackUp movement will continue until the robot reaches the desired goal position  * This commit changes all of the `BackUp` behavior tree node instances in the BT example xml's to make use of the newly added feature    ## Description of documentation updates required from your changes    * Update [BackUp Doc](https://github.com/ros-planning/navigation.ros.org/blob/48b9615821bad5b2ffec3a507b0e43a8c92ffe14/configuration/packages/bt-plugins/actions/BackUp.rst)  * Update [nav_to_pose example](https://github.com/ros-planning/navigation.ros.org/blob/48b9615821bad5b2ffec3a507b0e43a8c92ffe14/behavior_trees/trees/nav_to_pose_recovery.rst)  * Update [nav_through_poses example](https://github.com/ros-planning/navigation.ros.org/blob/48b9615821bad5b2ffec3a507b0e43a8c92ffe14/behavior_trees/trees/nav_through_poses_recovery.rst)    ---    ## Future work that may be required in bullet points    * Make sure that the newly added feature is included in the test procedure  * Set the default value of the `time_allowance` to a negative value  preventing unintended behavior changes ??? (or select a more appropriate default value)    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists
ros-planning/navigation2,2444,2021-07-11T18:47:25Z,2021-10-08T21:19:35Z,False,none,3596b7c4b915fdbc006acda6e4e1d0b0a58c5a3a,12,10,04d471e1c19bf65f23711d5ec0b7374be8bb68c3 8e837780fddab09dd6a39bcdf6f3cd31af3fd6cb 1295960942bbca618b13bc0f1b216f65100f0020 ccb7c50c435705403f06dcb2d0ca40e48d4e369d b62ea60b3cce75018f59bb53b8ad6dbc1b22c007 ed472cfece8dec47e8e34b17dd4fbea783478d5a 514b28c0e02f413033aa1925560939785fd121f8 bc65ec0439135660eac03f13fe0576aa2a3d4008 342396ed0b6bffd145284c33d7649a688f9af2b5 97c2ad55a04f4b78c944f2145166f144337dd802,,State lattice,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1) |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    This does not address any tickets  just work on the lattice planner.   Created a new unit test to verify that the parser is working correctly.     ---    ## Description of contribution in a few bullet points  Added in functionality to parse in json file of motion primitives to cpp structs    ## Description of documentation updates required from your changes  None    ---    ## Future work that may be required in bullet points  - Converting motion primitive coordinates to cells and bins   - Converting the start and goal pose to bins and cells in the smac lattice planner   - getting projections out of the motion table     <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2586,2021-10-07T08:37:47Z,2021-10-11T20:13:35Z,True,2021-10-11T20:13:34Z,0e52d90abf542726a156eafad304854272e0dcf9,5,1,bbfb2bd59b3bd6d834194ae29561b95028099e03,,The smac planner max_planning_time parameter can timeout the A planning stage,Related issue: https://github.com/ros-planning/navigation2/issues/2584    Due to some circumstances it is a bit difficult for me to test the entire nav2 compilation. I am using / testing the planner in an isolated environment.
ros-planning/navigation2,2548,2021-09-07T00:29:10Z,2021-10-11T21:12:57Z,False,none,b8fc24304796153a816148d10c6d87dfa44be14e,17,3,0383c54e6815d5d96e5da2b7b0413f61bb39bb0b be997c92003d2ff1b0557e5fdcd937d43070e79b 1085a379e34f4a7834e6c168492584a7bb90d7d7,,added skeleton for is valid path,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1) |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points  Added service to planner server and a client to a new conditional BT node to determine if the global path is no longer feasible.     ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2585,2021-10-06T16:09:50Z,2021-10-12T19:28:08Z,True,2021-10-12T19:28:08Z,01405e3396f416c2a506c365746b0cf1ccc91ad4,14,4,e5d0d0e3ae299c37080d1e8e2fee0c8fc47cee41 93cb4a96345b27f40eb1db6fd3dca622bd64f43a 5c3f05c6dfed2f5ab6c2d73ce50e5691d868057f dbd5582624670d9ed1df899b62a53fcd34deac99,,Change dynamic parameters method,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/956 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Wyca Elodie|    ---    ## Description of contribution in a few bullet points  As discussed here: https://github.com/ros-planning/navigation2/issues/956 and experimented with here https://github.com/ros-planning/navigation2/pull/2576  this PR changes the method used to catch dynamic parameters changes and solves an the issue of catching the same name on multiple nodes.    ## Description of documentation updates required from your changes      #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2589,2021-10-07T23:56:20Z,2021-10-12T20:28:38Z,True,2021-10-12T20:28:38Z,a9231aaf7dcbf51f841aba47b784fe317cd676c0,11,2,6ac405e6fcfe40d2d47daa0dde7581ea6d73934d 230e3085a82a3fe3a1b9dd86d4d30cbffeeb644c,,Resolving 2453 Adding timeout for recoveries in case of stuck conditions,@philison @karl-schulz please review / test     Docs PR https://github.com/ros-planning/navigation.ros.org/pull/213
ros-planning/navigation2,2602,2021-10-13T22:44:27Z,2021-10-14T18:02:19Z,True,2021-10-14T18:02:19Z,637e29064526ffb2fcf2a42c35544d4e19e08ff8,1,2,0a020b4d19e45aae918da1d2777aaaaf1580c477 a11a1f2deee5c4ecf8455aae8dad886455004c87,backport-galactic@backport-foxy,Create mergify yml,Testing automated backporting mergify  
ros-planning/navigation2,2604,2021-10-14T18:04:14Z,2021-10-14T18:04:50Z,True,2021-10-14T18:04:50Z,5d23326589c20ba32059ac6ed987304910040dc4,1,1,a938ace96d8ab854e9d569acb52836775613b1a2,,Create mergify yml backport 2602 ,This is an automatic backport of pull request #2602 done by [Mergify](https://mergify.io).   ---   <details> <summary>Mergify commands and options</summary>  <br />  More conditions and actions can be found in the [documentation](https://docs.mergify.io/).  You can also trigger Mergify actions by commenting on this pull request:  - `@Mergifyio refresh` will re-evaluate the rules - `@Mergifyio rebase` will rebase this PR on its base branch - `@Mergifyio update` will merge the base branch into this PR - `@Mergifyio backport <destination>` will backport this PR on `<destination>` branch  Additionally  on Mergify [dashboard](https://dashboard.mergify.io/) you can:  - look at your merge queues - generate the Mergify configuration with the config editor.  Finally  you can contact us on https://mergify.io/ </details> 
ros-planning/navigation2,2352,2021-05-19T19:56:03Z,2021-10-06T00:44:42Z,False,none,138e6738bb35aa66e6b385eedaec4e0113667161,49,24,127acb15b07032a3c11734397d916f5ea7e5b30e acd9cc0e2ed29250b1fc63eaef53015cccd5954c 6fb439c0edaf5ac31c66ba04103c92d0f9627295 34bfec12474d7fccef16c973692c0894e92cf605 75f1d2e8e68dc01fd383fdbe38f5409b3d70508c 951c3aad75a0cf611985550c44a43ca2a72cc5fd 16f5f603a6831aa36d2aa8d9a7276bd266c6e8ec 3ea14d9db853c344d76dafd735a85074649f35cb de3aaf1b02b20271e9368d52cf76c7f850d3e252 9c82a70c36d7a72024153737a693f7ff9fdeb494 9ca75ee7d1dfd85d922d34211d622173701b81d1 0aa54cc6c1c5fa612b2acf15e140c19ab1251f79 64e0c1ae48d5d618ed6083774d4861d25bf48540 0452e77e999e06d3d90a135125cab32d18b0774f dfac215f55bf991b0a3519e04ede8f2fef33b128 6d4be2d6645fb05f22078f616d45b7c7d8bf8f67 4539a08e21a76ef6a0744388c3ed52ad549f9707 e01aab2d680fe22b33ef6d5773e740ed4e3b69a4 8e5ee4f362792927c13b9837cef297b75653f3f0 ecd84c95dc89858954687cef7d895fd0e9a7b07c d441be729b34c993d6b8c7621e170d0257e2ba34 0f1399e012d3ddebf64ad5904a45dfd978b7a81d c6d16c06047f1b6d5da46ae765be85f26626028e c07813e8ea23dbf4e875ebd53621296219193fba,, State Lattice Planner addition,State Lattice  - Leverages dynamic programming and distance heuristics from A* for increased speed  - Leverages Hybrid-A* collision checking and smoothing capabilities as well  - New control set computation methods (TODO for branch)    TODOs:  - [ ] Merge in Matt's work on control set generation with a handful of useful default files (ackermann  diff drive  omni of a few basic resolution or turning radius options)  - [ ] Merge in Josh's traversal cost functions   - [ ] Merge in Josh's primitives file parsing code  - [ ] Test integration of these components for speed and path quality  - [ ] Collision check between end points for state validity of the primitive expansion + include points in final path  - [ ] Non-equal bin size integration for state lattice  - [ ] Reconsider default algorithms with this in its final form   - [ ] Add State Lattice test coverage and add Hybrid-A* / State Lattice into system tests    Updates from meeting:  - Make ackermann + diff (add L/R turns with turn in place cost) + omni (?)   - param to allow for reverse direction expansions as well  - Omni: if goal is in cove can only be achieved going sideways  even if we added a sideways prim  the heuristics on dubin will be terrible because it assumes only forward motion. Further  analytic expansion wouldn't help get to goal in that situation so it would take much longer to search just the right branch. Maybe need to have a disable analytic expansion option and/or a param for using just L2 distances for omni? Other option would be to force users to have a HLUT precomputed instead on BFS. Or have heuristic for side ways motion primitives be L2 instead? Have analytic expansion also work on 90/270 deg for lateral? **maybe compute motion heuristic at each forward  left  and right side of the robot and expand in the direction of lowest distance to goal?** 
ros-planning/navigation2,2603,2021-10-14T01:13:37Z,2021-10-14T22:04:47Z,True,2021-10-14T22:04:47Z,82ce6ca871ae07e9788fdb77c2f8367ee554b7db,8,6,bd641b0c77010bfa96de58a7504e01e111b58cf9 220961da5fabda54b6bfbb0ca0ad8bc7714402dd c8da852cca97d88b0431cacb201ea8206ce7ecd5 243f4645712213d10233290c0b9646925720b15a 03f8bec204b4091ab7aa4adffd31b1e5a5b61153 01f437b632bfa0586ecaefd9a4e4f509adb4f5d5,,Fixes for Windows into main,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | N/A |  | Primary OS tested on | Windows |  | Robotic platform tested on | N/A |    ---    ## Description of contribution in a few bullet points    * Puts changes from #2595 into main    ## Description of documentation updates required from your changes    N/A    ---    ## Future work that may be required in bullet points    N/A    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2595,2021-10-13T06:06:44Z,2021-10-14T22:07:23Z,True,2021-10-14T22:07:23Z,4d7a856e03ff39a863119d5dcd60f6e0bbc012d4,10,6,bc127616ae563ff08f4f298758276b200ed2baed 026089957d56e6e8c424470d4a140c21d81073dd a0026c9205583dd00f0c1623abf2edac3da51722 8086a0a0b471580234b015db5537c98600f365c5 8614968fee11f6414fe35a87517ca935a36f33ee 6db5be2e0c954090eb6589ab4134e675552f8f0b,,Fixes for Windows,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | N/A |  | Primary OS tested on | Windows |  | Robotic platform tested on | Gazebo and Rviz simulation of turtlebot |    ---    ## Description of contribution in a few bullet points    * Fixes build and some runtime errors on Windows    ## Description of documentation updates required from your changes    N/A    ---    ## Future work that may be required in bullet points    None  Nav2 seems to work completely on Windows    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2606,2021-10-14T22:05:31Z,2021-10-14T22:08:06Z,True,2021-10-14T22:08:06Z,f88c467705e4e711e83dd4a1860ffe1bfb8b86e0,8,1,57a3b5d6cb32feada5606c4d29913bab35da8ba8,,Fixes for Windows into main backport 2603 ,This is an automatic backport of pull request #2603 done by [Mergify](https://mergify.io).   ---   <details> <summary>Mergify commands and options</summary>  <br />  More conditions and actions can be found in the [documentation](https://docs.mergify.io/).  You can also trigger Mergify actions by commenting on this pull request:  - `@Mergifyio refresh` will re-evaluate the rules - `@Mergifyio rebase` will rebase this PR on its base branch - `@Mergifyio update` will merge the base branch into this PR - `@Mergifyio backport <destination>` will backport this PR on `<destination>` branch  Additionally  on Mergify [dashboard](https://dashboard.mergify.io/) you can:  - look at your merge queues - generate the Mergify configuration with the config editor.  Finally  you can contact us on https://mergify.io/ </details> 
ros-planning/navigation2,2608,2021-10-15T01:11:12Z,2021-10-15T01:17:18Z,True,2021-10-15T01:17:18Z,d46086a8238e1d135e6c25ac633f429de1087422,1,1,ce75959acba0779b7319ea56418dc5f3eb3921bd,,Delete head branch automatically on PR merge,https://github.com/ros-planning/navigation2/issues/2593
ros-planning/navigation2,2610,2021-10-15T19:06:19Z,2021-10-15T19:06:41Z,True,2021-10-15T19:06:41Z,b190ebdb6007969ec487a7bd5e827691365bf367,1,1,7c5ffea86595bc6df393d7a03cf0584079d6f7eb,,Modified the projection_time calculation backport 2609 ,This is an automatic backport of pull request #2609 done by [Mergify](https://mergify.io).   ---   <details> <summary>Mergify commands and options</summary>  <br />  More conditions and actions can be found in the [documentation](https://docs.mergify.io/).  You can also trigger Mergify actions by commenting on this pull request:  - `@Mergifyio refresh` will re-evaluate the rules - `@Mergifyio rebase` will rebase this PR on its base branch - `@Mergifyio update` will merge the base branch into this PR - `@Mergifyio backport <destination>` will backport this PR on `<destination>` branch  Additionally  on Mergify [dashboard](https://dashboard.mergify.io/) you can:  - look at your merge queues - generate the Mergify configuration with the config editor.  Finally  you can contact us on https://mergify.io/ </details> 
ros-planning/navigation2,2611,2021-10-15T19:06:30Z,2021-10-15T19:07:04Z,True,2021-10-15T19:07:04Z,93138d6001a12609b130a478113f5821c9163d44,1,1,1f32dcabcaad9643a9222cdbf2ae9e304514b37b,,Modified the projection_time calculation backport 2609 ,This is an automatic backport of pull request #2609 done by [Mergify](https://mergify.io).   ---   <details> <summary>Mergify commands and options</summary>  <br />  More conditions and actions can be found in the [documentation](https://docs.mergify.io/).  You can also trigger Mergify actions by commenting on this pull request:  - `@Mergifyio refresh` will re-evaluate the rules - `@Mergifyio rebase` will rebase this PR on its base branch - `@Mergifyio update` will merge the base branch into this PR - `@Mergifyio backport <destination>` will backport this PR on `<destination>` branch  Additionally  on Mergify [dashboard](https://dashboard.mergify.io/) you can:  - look at your merge queues - generate the Mergify configuration with the config editor.  Finally  you can contact us on https://mergify.io/ </details> 
ros-planning/navigation2,2614,2021-10-15T20:25:30Z,2021-10-15T20:27:20Z,False,none,56e8fc18cbedb5098c34e8199b453da678c9457d,1,1,3a98f7337d45bf7fdb1629829edcc48683032ad9,,Testing new mergify features Wrong base branch,none
ros-planning/navigation2,2612,2021-10-15T20:08:44Z,2021-10-15T20:21:56Z,True,2021-10-15T20:21:56Z,6994fb83a32687dca44fec9a61f006b017fd8264,1,5,d2c232386a597feabd55f553c5a48812cddaef6f b34a470505baa0fed6d2c94bb6d00afead1fa2fc 8d55e7831c4e996e5d591eb1cd8f43df42c73540 163eef2ff4f52b6cc240b01c84f4f1ace194312d ab75e6f754317043fe0de02a67fc3f3c36d84eff,backport-galactic,Update mergify yml,Adding in new automations to help with maintenance  https://github.com/ros-planning/navigation2/issues/2593
ros-planning/navigation2,2615,2021-10-15T20:28:32Z,2021-10-15T20:37:24Z,False,none,bd4043e172d58992298062cc22eb5e8497aabd9b,1,1,ba34e227f3651d852ebe673d0d1d057e75e1a4db,conflicts,Update mergify yml backport 2612 ,This is an automatic backport of pull request #2612 done by [Mergify](https://mergify.io). Cherry-pick of 6994fb83a32687dca44fec9a61f006b017fd8264 has failed: ``` On branch mergify/bp/galactic/pr-2612 Your branch is up to date with 'origin/galactic'.  You are currently cherry-picking commit 6994fb83.   (fix conflicts and run "git cherry-pick --continue")   (use "git cherry-pick --skip" to skip this patch)   (use "git cherry-pick --abort" to cancel the cherry-pick operation)  Unmerged paths:   (use "git add <file>..." to mark resolution)  both modified:   .github/mergify.yml  no changes added to commit (use "git add" and/or "git commit -a") ```   To fix up this pull request  you can check it out locally. See documentation: https://docs.github.com/en/github/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/checking-out-pull-requests-locally  ---   <details> <summary>Mergify commands and options</summary>  <br />  More conditions and actions can be found in the [documentation](https://docs.mergify.io/).  You can also trigger Mergify actions by commenting on this pull request:  - `@Mergifyio refresh` will re-evaluate the rules - `@Mergifyio rebase` will rebase this PR on its base branch - `@Mergifyio update` will merge the base branch into this PR - `@Mergifyio backport <destination>` will backport this PR on `<destination>` branch  Additionally  on Mergify [dashboard](https://dashboard.mergify.io/) you can:  - look at your merge queues - generate the Mergify configuration with the config editor.  Finally  you can contact us on https://mergify.io/ </details> 
ros-planning/navigation2,2616,2021-10-15T20:57:17Z,2021-10-15T20:59:28Z,True,2021-10-15T20:59:28Z,dc8aecee9bfc9693db0f4e920cbd79bb89c8855c,1,1,22328d4fa8ac92b88fd556cdfd621d153f407d27,,Mergify fix backport default branch exceptions for power users and attempted fix for checklist,none
ros-planning/navigation2,2613,2021-10-15T20:24:23Z,2021-10-15T21:00:30Z,False,none,3d902e4f3671d7bee95627461cb0d8d039143121,1,1,ecdb6617986fd9fc24f6e8f9d4c27c66b418d36a,,Testing new mergify features build failure bot malformed PR template bot,fdfdd
ros-planning/navigation2,2618,2021-10-15T21:04:54Z,2021-10-15T21:05:36Z,False,none,dab84824baecb018ccb9f7b708215c457d3328a0,1,1,9f80acc46205159ae93bf1353a0f2f8578d5cc8b,,test mergify pro user exception,none
ros-planning/navigation2,2601,2021-10-13T22:13:53Z,2021-10-13T22:51:31Z,True,2021-10-13T22:51:31Z,6832d6ad82cabcc29a1545221458d7fec97a8b44,1,1,7b37253fc3bb73745cb05d8206cda81fe7e5a6a7,backport-galactic,Removing multi robot test flaky in CI and unneeded,none
ros-planning/navigation2,2619,2021-10-15T21:06:59Z,2021-10-15T21:07:50Z,False,none,a421301404890962684f19fd50f311e5ef366892,0,1,508a01162056ef5716509b0d80bc61729a52d80a,conflicts,Removing multi robot test flaky in CI and unneeded backport 2601 ,This is an automatic backport of pull request #2601 done by [Mergify](https://mergify.io). Cherry-pick of 6832d6ad82cabcc29a1545221458d7fec97a8b44 has failed: ``` On branch mergify/bp/galactic/pr-2601 Your branch is up to date with 'origin/galactic'.  You are currently cherry-picking commit 6832d6ad.   (all conflicts fixed: run "git cherry-pick --continue")   (use "git cherry-pick --skip" to skip this patch)   (use "git cherry-pick --abort" to cancel the cherry-pick operation)  nothing to commit  working tree clean ```   To fix up this pull request  you can check it out locally. See documentation: https://docs.github.com/en/github/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/checking-out-pull-requests-locally  ---   <details> <summary>Mergify commands and options</summary>  <br />  More conditions and actions can be found in the [documentation](https://docs.mergify.io/).  You can also trigger Mergify actions by commenting on this pull request:  - `@Mergifyio refresh` will re-evaluate the rules - `@Mergifyio rebase` will rebase this PR on its base branch - `@Mergifyio update` will merge the base branch into this PR - `@Mergifyio backport <destination>` will backport this PR on `<destination>` branch  Additionally  on Mergify [dashboard](https://dashboard.mergify.io/) you can:  - look at your merge queues - generate the Mergify configuration with the config editor.  Finally  you can contact us on https://mergify.io/ </details> 
ros-planning/navigation2,2617,2021-10-15T21:01:29Z,2021-10-15T21:13:33Z,False,none,bcc1da6a543128a1eb1d430fcf26da6f7b93254f,1,1,ecdb6617986fd9fc24f6e8f9d4c27c66b418d36a,,adding failure condition testing mergify s build failure bot,none
ros-planning/navigation2,2620,2021-10-15T21:09:29Z,2021-10-15T21:13:57Z,True,2021-10-15T21:13:57Z,d2f56feb39531e137285670675b0e97ffe508ecd,1,2,987d622bc939553a011c61373d3a99d96c7510f9 36dffe63ef333d8f0a82db8ca6a653322a9856f2,,Update mergify yml for Foxy backports and maintainer exceptions,none
ros-planning/navigation2,2607,2021-10-15T01:00:34Z,2021-10-16T17:14:12Z,True,2021-10-16T17:14:12Z,1303d45026a0aef8ee5f871cea1e23c110ed7442,17,3,716b80d9ad1605b8709acb3b359038cd7a1a6692 0d2be79b809f27e16c7e8960ac5e67c94626eae7 e10ceca408086c29125a36e44ec928da3c57f45b,,adding dynamic params to RPP and cleaningup style in others,@doisyg let me know if you see anything wrong 
ros-planning/navigation2,2609,2021-10-15T18:43:33Z,2021-10-15T19:05:26Z,True,2021-10-15T19:05:26Z,8faa0f0550027edc7bf2640f23cff13b2af60a8f,1,1,9b839727f6d08149cb7b6c9a128a26e85fbd247c,,Modified the projection_time calculation,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here ##2594) |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (On turtlebot waffle in turtlebot world simulation) |    ---    ## Description of contribution in a few bullet points    I have updated the `projection_time` variable calculation method by adding the `fabs() ` to the `linear_vel` which was missing. This change now enables the robot to move in the reverse direction.      #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2623,2021-10-18T23:10:33Z,2021-10-18T23:12:06Z,False,none,6ecefc6c9b95c70be784b4103dd9abd95c93ff74,18,4,716b80d9ad1605b8709acb3b359038cd7a1a6692 0d2be79b809f27e16c7e8960ac5e67c94626eae7 e10ceca408086c29125a36e44ec928da3c57f45b 0de9ca03a551c7b6c0b3997f32440baf3a30fd60,,Stopping networking related BT failures from failing task rather fail specific BT node,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2376  |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * Adding try/catch loop around `is_future_goal_handle_complete` to catch node-specific exception failures rather than propagating them to the root tree  * Allows to fail the BT node for networking related failures rather than failing the entire navigation task (then goes to recoveries)     ## Description of documentation updates required from your changes    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2625,2021-10-19T00:37:50Z,2021-10-19T00:38:13Z,True,2021-10-19T00:38:13Z,8c80af04b92ef537b8fc74e7f8f3b07f869a587c,21,1,c6eb1a3fe05b74e193178654ff7aeb329035bac2,,Updating project readmes to be up to date and point to official documentation,none
ros-planning/navigation2,2624,2021-10-18T23:12:04Z,2021-10-19T22:56:11Z,True,2021-10-19T22:56:11Z,46c58a719c5dcc2c27809ade2b9ce79e043ad1e8,1,4,584adb06c635261fca4f8f061f8ad5f9a3f13652 24c67eb559a46b0b09c0b655f3ba1182cf07c637 b38a21e389ecdebdf4ea2832e9453658c3d8eab7 1b18f6c52309b7620fe44876d34542681b6cc724,,Stopping networking related BT failures from failing task rather fail specific BT node,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2376  |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * Adding try/catch loop around `is_future_goal_handle_complete` to catch node-specific exception failures rather than propagating them to the root tree  * Allows to fail the BT node for networking related failures rather than failing the entire navigation task (then goes to recoveries)     ## Description of documentation updates required from your changes    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2554,2021-09-07T19:10:15Z,2021-10-19T22:56:47Z,False,none,cdb3375d86be781874a5b75fdef6e3a124af482a,13,43,d1c5c4a3ff68d00b82f15a21f6f27b4e878a9306 428f3aa715fc52f289da48d6280abeabdf2faae3 9ee4369894c553f507de822b8208e59a02f2fbdb 67f73bc7fc36f11fbc3ecc4c01c209ceccec6bbb d434deeff75eb8622b05b5dbe4b2526065b68c27 0961be0fb6bd15bffa744877b1ee6402952a2355 e6aaac3c138eea654bc19e3af27d15b54b7a8527 35c41684d958cc4aa4b5c4a10d4cc5b5c187361c de022aba996c721400c96ac0a6466cfa289d151d 68602e5528df1b4a1ddfe634ac7c3d6a9943b2b2 8f0537f4941987fc66222b1ed4238d21554cfa94 e995f33f38ef99e4ff549838d3211ca32ac3cd3c 0d74ef51cf493eeb650dd12eb59597b0e41801d0 21aa921befe3eff758521dd3ce47998612480ae3 a59f29dd317068d89e27739fd362c33439670047 0e27f9bc8baca8b25f36d56d3d9afc9eab42d13a 722cf66157b1bba700b5a18bd21c6616bf68b3d8 33bfdbf7b2b7509c27e8b12dc5743b77edccc458 db0205b6104531a1859251f5869fac05d975b2a5 9ab4755034316ca9133334d80f3949973eb4fc46 4853bfb673444d7a8f24dbddfc33e95dbd1e4cef 275ce2326af968304ff19f298b0f0737dfd67ef5 b91197547d80a1d6b55a9d93e0f18b05e9ce6691 625d94fafbbdf2f0cb051d2fe962c9135ab03ca6 ebfc68ce56f4fef43f7ae8d874afed1d728c2669 cc455e8419638e56896fd257c659f4489d1a167d 5eb1ea266c9b4fc1ffab1736b7e2d7e09b9c8422 225cd6f8a96ed3f7b504b6ab00d5e2ccbb77d53c 131d4e523c82f6448af901ad052efed14ffc016c c2e61176567666e1451731c98109cdfdedde3c63 3b7aeb6c030be8eaca90d1f7a84050ff006e13da 26797d575c1af2ba5f3bd5694e38682afb5b86a9 6172f8abc056fc788a0ddeb2c29804fcb99bc950 ff0ea1f3f2a64e1b6fd4f08bdd023980b8b836bb d1fdba387b9c763d01606197bb80ba9b592f45d3 b5cae88c51e49e60c9e0335bfc77c1d248c02ecf 75811c66a333b61cb33379027f6b0de5d972a3d1 f17c356e9dbf33af606e2d2ca7409ad544ca5068 120816f1b6afd815e25e68049337649c583b3610 78d31c3caa6de69a59ed73c81e11073c2f00851c 2e09c44ce8ce56f73bada2ba6af7aac87293f528 e77d1509f5fb29f07fb01266152643626fb4995c 126e0c7496038bcde9053b6f5b177d2cb5aceab3,,Navigation Safety Node Summer 2021,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (tickets: #1899 ) |  | Primary OS tested on | (Ubuntu20.04  ROS 2 Galactic) |  | Robotic platform tested on | (Not tested yet) |    ---    ## Description of contribution in a few bullet points  Creation of a ROS 2 node that will prevent robot collision based on lidar and/or RGBD data  * converted the scan data into pointcloud2 & then transformed it into the base_frame parameter value using TF.  * created a new utility function called makeVectorPointsFromString under the nav2_util package  which takes a string of points as an input parameter returns a vector of points.  * created function for defining a safety polygon for the robot using input parameters.  *  made multiple Laserscan subscribers to multiple topics which are passed as the vector of strings parameter.  * created detectPoints function to detect if the detected points in pointcloud are inside the safety polygon or not.      ---    ## Future work that may be required in bullet points    * I think there might be some optimizations to be made in the current code.  * need to test the working of detectPoints function for checking if it covers all the edge cases.  * use the zone_action param value to trigger a reaction using another controller node.     #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2630,2021-10-19T23:28:49Z,2021-10-19T23:30:10Z,True,2021-10-19T23:30:10Z,451160eb7065b1ffc9a56da93b791e68e3490401,1,1,95c50bb64eefb8effeb47dd75e162566156672df,,Updating mergify rules for capitalization of usernames,    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2627,2021-10-19T22:35:35Z,2021-10-19T23:33:24Z,True,2021-10-19T23:33:23Z,b3df8cae23fc00b59d326494f92a956837f1818b,7,2,1adb56dd66f1f711e25653af077988637d12ba9e 59f8b28c8b6cdbb090b9c7af659c408dcdf84793,,adding groot separation by BT type continuation on 2409 ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/2406 |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * Adding separate zMQ ports for 2 BTs for independent use  * Adding params into the BT to set these for use in the individual navigators  * Continuation of https://github.com/ros-planning/navigation2/pull/2409    ## Description of documentation updates required from your changes    * Adding docs on the change in param IDs     ---      #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2629,2021-10-19T23:16:10Z,2021-10-19T23:50:54Z,True,2021-10-19T23:50:54Z,e1a5d548c0cd1865541da28f0369f1000c919ca6,1,1,cb70de2cb2879fd8a1d64a7752a6b9d47b757a9d,,refactor of 2624 for simplicity,https://github.com/ros-planning/navigation2/pull/2624
ros-planning/navigation2,2409,2021-06-16T10:26:35Z,2021-10-19T22:35:42Z,False,none,f600dd547a4d6ff3012fa48ea9bfa44cc12094b9,5,1,0e617b3e848e26f620c609c35b8e247df8550911,,Set groot monitoring parameters individually for bt_navigator s pose ,Set groot monitoring parameters individually for bt_navigator's pose and poses navigators    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  #2406  #2408 |  | Primary OS tested on | Ubuntu 20.04 (docker container) |  | Robotic platform tested on | gazebo simulation |    ---    ## Description of contribution in a few bullet points   * Groot monitoring now set up for poses and pose bt_navigator action nodes separately   * Interface added to allow setting of relevant parameters  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes  * Added six new parameters  so need to add that to default configs and documentation page    <!--  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points   * Regression tests could be added    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2632,2021-10-20T04:42:37Z,2021-10-20T06:38:57Z,True,2021-10-20T06:38:57Z,58b746a05f288022841d618b8d67bf18c8ca9b6a,2,3,1a339c542d85c5774277c9d28662d67a2df80daf 2d8ea34ad8dee1fec5946defa70d90349d7f88c2 8e3a958c11879266492624a454fc6be06512542b,,Move nav2_regulated_pure_pursuit_controller down to C 14 on Foxy,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Primary OS tested on | macOS |  | Robotic platform tested on | N/A |    Foxy isn't supposed to use C++17  yet this does. It also uses features that are deprecated on C++17  which breaks the build on macOS. This PR removes C++17 features (std::clamp) and implements them manually  so that way it can continue to be C++14 on the Foxy branch.    Broken Build: https://github.com/nkalupahana/ros2-foxy-macos/runs/3875079813?check_suite_focus=true  Now Working: https://github.com/nkalupahana/ros2-foxy-macos/runs/3947083803?check_suite_focus=true    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2634,2021-10-20T09:17:36Z,2021-10-20T09:18:02Z,False,none,9a9970a441e8fb4644793aefed3594f6f2ef9e14,22,4,5ffe2ee973ec6b02d0152ddaeed29546bcb3bce5 e123614dfbf3864656105b09500fe56d98ea3afb 1a9296bb6b5177b75d052444aa2a60363d3e6d30 2193757a92a025e91dec71bdccf3bf772acbfc66,,Galactic,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1) |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2631,2021-10-20T00:01:25Z,2021-10-20T13:24:58Z,True,2021-10-20T13:24:58Z,c65532f7e537c05c8d02c45099c42cf7ed8954bb,3,2,70be8b073bef7334e4a1d15e8144763e4d1f955a e842affd2c0fa2e128ce05914654b3b38de40069,backport-galactic@backport-foxy,removing kinematic limiting from RPP,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/2621 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | seasony bot |    ---    ## Description of contribution in a few bullet points    * Removing kinematic limiting in RPP after finding it creates discontinuities  * This should be handled by a lower level velocity smoother anyway     ## Description of documentation updates required from your changes    - [x] Update migration docs that params are gone  - [x] Update docs with parameters out of RPP config guide    ---    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2588,2021-10-07T23:24:30Z,2021-10-21T13:59:13Z,True,2021-10-21T13:59:13Z,10420bacc1f4d38c9a72355c183a9e835c90a584,3,2,3662dd54bf3fad89348596b06905a5a2f6337694 fa1bb0eac41737f24edec21bf9c7aca92c7851e8,backport-galactic@backport-foxy,Resolving 2574 Smac 2D on map,@marcomasa  please verify these changes fix your issues
ros-planning/navigation2,2638,2021-10-21T14:00:04Z,2021-10-22T02:19:57Z,True,2021-10-22T02:19:57Z,0cb126dec8905a6f8cce47d6199fb9135d1156f6,1,1,025f22ccc4a9e245fde9a13b043b95f33a818379,,Resolving 2574 Smac 2D on map backport 2588 ,This is an automatic backport of pull request #2588 done by [Mergify](https://mergify.io).   ---   <details> <summary>Mergify commands and options</summary>  <br />  More conditions and actions can be found in the [documentation](https://docs.mergify.io/).  You can also trigger Mergify actions by commenting on this pull request:  - `@Mergifyio refresh` will re-evaluate the rules - `@Mergifyio rebase` will rebase this PR on its base branch - `@Mergifyio update` will merge the base branch into this PR - `@Mergifyio backport <destination>` will backport this PR on `<destination>` branch  Additionally  on Mergify [dashboard](https://dashboard.mergify.io/) you can:  - look at your merge queues - generate the Mergify configuration with the config editor.  Finally  you can contact us on https://mergify.io/ </details> 
ros-planning/navigation2,2640,2021-10-21T15:00:32Z,2021-10-22T14:48:34Z,False,none,79c226b04c93eeb93af8fffed98c2300d3cf1475,10,2,d58403b0f36c2cc9b6d29ce4095d9393ac91bf3d 9a3aec24c24a96a7b7a219940550f1dd7abc7c2e,,Refactored amcl code for modularization of motion models ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | add tickets here #2552 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | turtlebot3 |    ---    ## Description of contribution in a few bullet points  - The amcl source code has been slightly modified and a plugin package for motion model has been created.    - Pluginlib is used to make the differential and omni model as plugins.Major files changed are related to the motion_model folder.    - This functionality will enable a developer to test his/her own custom motion model by just creating it as a plugin and adding the name in the nav2_params.yaml file.  -  Code is tested on the ros2 foxy branch.  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    - The parameter robot_model_type in nav2_params.yaml file is to be taken as the fully-qualified type of the plugin class.For example - robot_model_type: "nav2_amcl::DifferentialMotionModel" if the name of the custom motion model class is "DifferentialMotionModel" and the namespace is "nav2_amcl".    - To test any custom motion model  just add the motion_model.hpp file to the source code of the motion model implemented as a plugin.    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---  #### I would also like to acknowledge [@naveenmoto](https://github.com/naveenmoto) and [@mbharatheesha](https://github.com/mbharatheesha) for their valuable suggestions which helped me to understand the nav2_amcl package and make the necessary code refactoring.    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2639,2021-10-21T14:00:25Z,2021-10-22T18:16:36Z,False,none,c975498335d0b06d41be3fa7f0438264c01712df,1,1,5174b170b30912d1b84cd6b8e28dea58374e7bed,conflicts,Resolving 2574 Smac 2D on map backport 2588 ,This is an automatic backport of pull request #2588 done by [Mergify](https://mergify.io). Cherry-pick of 10420bacc1f4d38c9a72355c183a9e835c90a584 has failed: ``` On branch mergify/bp/foxy-devel/pr-2588 Your branch is up to date with 'origin/foxy-devel'.  You are currently cherry-picking commit 10420bac.   (fix conflicts and run "git cherry-pick --continue")   (use "git cherry-pick --skip" to skip this patch)   (use "git cherry-pick --abort" to cancel the cherry-pick operation)  Unmerged paths:   (use "git add <file>..." to mark resolution)  both modified:   smac_planner/src/node_2d.cpp  no changes added to commit (use "git add" and/or "git commit -a") ```   To fix up this pull request  you can check it out locally. See documentation: https://docs.github.com/en/github/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/checking-out-pull-requests-locally  ---   <details> <summary>Mergify commands and options</summary>  <br />  More conditions and actions can be found in the [documentation](https://docs.mergify.io/).  You can also trigger Mergify actions by commenting on this pull request:  - `@Mergifyio refresh` will re-evaluate the rules - `@Mergifyio rebase` will rebase this PR on its base branch - `@Mergifyio update` will merge the base branch into this PR - `@Mergifyio backport <destination>` will backport this PR on `<destination>` branch  Additionally  on Mergify [dashboard](https://dashboard.mergify.io/) you can:  - look at your merge queues - generate the Mergify configuration with the config editor.  Finally  you can contact us on https://mergify.io/ </details> 
ros-planning/navigation2,2636,2021-10-20T13:26:08Z,2021-10-22T19:06:44Z,False,none,dc51fa32ec2944e7f6f73c5bab36e055602f0aa4,3,1,fb04a8877379a44989efc599e7b59bf10e165504,conflicts,removing kinematic limiting from RPP backport 2631 ,This is an automatic backport of pull request #2631 done by [Mergify](https://mergify.io). Cherry-pick of c65532f7e537c05c8d02c45099c42cf7ed8954bb has failed: ``` On branch mergify/bp/foxy-devel/pr-2631 Your branch is up to date with 'origin/foxy-devel'.  You are currently cherry-picking commit c65532f7.   (fix conflicts and run "git cherry-pick --continue")   (use "git cherry-pick --skip" to skip this patch)   (use "git cherry-pick --abort" to cancel the cherry-pick operation)  Changes to be committed:  modified:   nav2_regulated_pure_pursuit_controller/include/nav2_regulated_pure_pursuit_controller/regulated_pure_pursuit_controller.hpp  Unmerged paths:   (use "git add <file>..." to mark resolution)  both modified:   nav2_regulated_pure_pursuit_controller/src/regulated_pure_pursuit_controller.cpp  both modified:   nav2_regulated_pure_pursuit_controller/test/test_regulated_pp.cpp  ```   To fix up this pull request  you can check it out locally. See documentation: https://docs.github.com/en/github/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/checking-out-pull-requests-locally  ---   <details> <summary>Mergify commands and options</summary>  <br />  More conditions and actions can be found in the [documentation](https://docs.mergify.io/).  You can also trigger Mergify actions by commenting on this pull request:  - `@Mergifyio refresh` will re-evaluate the rules - `@Mergifyio rebase` will rebase this PR on its base branch - `@Mergifyio update` will merge the base branch into this PR - `@Mergifyio backport <destination>` will backport this PR on `<destination>` branch  Additionally  on Mergify [dashboard](https://dashboard.mergify.io/) you can:  - look at your merge queues - generate the Mergify configuration with the config editor.  Finally  you can contact us on https://mergify.io/ </details> 
ros-planning/navigation2,2628,2021-10-19T23:11:55Z,2021-10-19T23:13:47Z,False,none,none,1,5,584adb06c635261fca4f8f061f8ad5f9a3f13652 24c67eb559a46b0b09c0b655f3ba1182cf07c637 b38a21e389ecdebdf4ea2832e9453658c3d8eab7 1b18f6c52309b7620fe44876d34542681b6cc724 966b2e983640a9327dc1bcdb581c02a210330886,,Refactor of 2624 for simplicity,https://github.com/ros-planning/navigation2/pull/2624
ros-planning/navigation2,2635,2021-10-20T13:25:48Z,2021-10-22T19:06:47Z,False,none,9e6c264f6331529c1794826e62895f1a8f3a14cf,3,1,b56608c97cffc1331abdab6c4af89b1939dec773,conflicts,removing kinematic limiting from RPP backport 2631 ,This is an automatic backport of pull request #2631 done by [Mergify](https://mergify.io). Cherry-pick of c65532f7e537c05c8d02c45099c42cf7ed8954bb has failed: ``` On branch mergify/bp/galactic/pr-2631 Your branch is up to date with 'origin/galactic'.  You are currently cherry-picking commit c65532f7.   (fix conflicts and run "git cherry-pick --continue")   (use "git cherry-pick --skip" to skip this patch)   (use "git cherry-pick --abort" to cancel the cherry-pick operation)  Changes to be committed:  modified:   nav2_regulated_pure_pursuit_controller/include/nav2_regulated_pure_pursuit_controller/regulated_pure_pursuit_controller.hpp  Unmerged paths:   (use "git add <file>..." to mark resolution)  both modified:   nav2_regulated_pure_pursuit_controller/src/regulated_pure_pursuit_controller.cpp  both modified:   nav2_regulated_pure_pursuit_controller/test/test_regulated_pp.cpp  ```   To fix up this pull request  you can check it out locally. See documentation: https://docs.github.com/en/github/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/checking-out-pull-requests-locally  ---   <details> <summary>Mergify commands and options</summary>  <br />  More conditions and actions can be found in the [documentation](https://docs.mergify.io/).  You can also trigger Mergify actions by commenting on this pull request:  - `@Mergifyio refresh` will re-evaluate the rules - `@Mergifyio rebase` will rebase this PR on its base branch - `@Mergifyio update` will merge the base branch into this PR - `@Mergifyio backport <destination>` will backport this PR on `<destination>` branch  Additionally  on Mergify [dashboard](https://dashboard.mergify.io/) you can:  - look at your merge queues - generate the Mergify configuration with the config editor.  Finally  you can contact us on https://mergify.io/ </details> 
ros-planning/navigation2,2645,2021-10-22T19:12:11Z,2021-10-22T19:15:45Z,True,2021-10-22T19:15:45Z,d8f50da2ed59879112105ac1488e9139ee7f3c71,2,1,1d12afd52fa9cbb64806c355b305dddb9442f599,,Galactic removing kinematic limiting from RPP,https://github.com/ros-planning/navigation2/pull/2631/files
ros-planning/navigation2,2646,2021-10-22T19:30:39Z,2021-10-22T19:31:01Z,True,2021-10-22T19:31:01Z,cb4cd3e36706bb3b9a8a66eb166d84c65fa61cfd,1,1,ad9f97602d8ca72971dddf29a0c4f666041e0bca,,Adding goal updater to Foxy nodes list,https://github.com/ros-planning/navigation2/issues/2643
ros-planning/navigation2,2644,2021-10-22T19:11:52Z,2021-10-22T19:40:12Z,True,2021-10-22T19:40:12Z,1d0e56a11c08c961c61c9c0745dfb67d5a1d2092,2,1,07e93249822b6323a2249ee32fb83f807d3511bf,,Foxy removing kinematic limiting from RPP,https://github.com/ros-planning/navigation2/pull/2631/files
ros-planning/navigation2,2527,2021-08-21T14:25:31Z,2021-08-25T06:37:22Z,True,2021-08-25T06:37:21Z,9ff2dc5261501f999e5ca6d02a230d778c2d6bfc,22,19,2d65ca7405d892fe041b6d0c77511b2ee4ddf6da 19024c242c12ea4212956f11a57503aec5e3ff69 8a8ac8eab18b55e345ff17843801c8fc22ab0aa4 954942cff05b3c19b73b4ff35f918b0bfe6744c8 6a64a6b3f29c783dfc3063f531309b8f28520c74 d7bfe62dee7d0b7cbd4d3ea9da08be3a6928a6af dbd795d3c070b3d50b35e4b0c06685b1a40815f1 556bdf5fcba711256a2e4f9c73b7c18039c280a8 38966cb1b950cd5f65fab3799b63f4336ebf771e b41e554e398689a992ef0ce9e0457849a595c16d d2c4fdfb2c071eeee9efc5c2855272401e028169 0bc68fde83631ec333191ed60cbc1c37dcbd5990 00b4cb6d9f856c19ce1d70357516a3c2c8f76903 449e5acae3e19652447f337dabd8378d44fc288a 2ffd46b0868084d1b1ff31080b3ad1b7821c6a3f ee31eefe73dee44c1d530c759f47da75f4b170f6 f0be72495403df9521953e6df6a48b62068ddac2 375133990445d715dbd1a3468ad4b5d5747ef1b5 f0453269895766f933c5df162d12aca9727f48af,,nav2_bringup reorder,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on |  gazebo simulation of turtlebot |    ---    ## Description of contribution in a few bullet points  This is follow  up PR to PR<https://github.com/ros-planning/navigation2/pull/2473>.   It reorder the nav2_bringup directory since Nav2_gazebo_spawner  pkg in it was deleted <https://github.com/ros-planning/navigation2/pull/2473#discussion_r691751336>  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2542,2021-08-31T16:31:39Z,2021-09-04T23:31:28Z,True,2021-09-04T23:31:28Z,ce19b4f027469f720d6e0779498a747ff80e314c,2,6,1e3ce98cccd35efe8986a0a60e54b5558a36b4ff b60bbdc77bf1eb226e348e5c660258fcefae21cd e324456527b27ba0f035cf89bc725785c11ea19e 4e87373e19275ba1fdcc9e3fbbea005cb2faefd1 494623b67db00ddc18660adcd7ab50b7cfa398e4 f977959b060b3f818df4db57bf87850bea5c4ab1,,Add new test for nav2_regulated_pure_pursuit,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  add unit test for findDirectionChange function in nav2_regulated_pure_pursuit  ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2473,2021-07-23T12:26:47Z,2021-08-19T03:28:50Z,True,2021-08-19T03:28:50Z,ad916033f04ca39d929431495bf495d03f232e9b,21,19,119572b1e47da733a136a4636765677f219ece73 10db79aa2661e64a46f1035a76fdfa95a4aac007 4bfdf49606e502f14f38714932930642248af133 dd0e416de4dd3fff7b3b59904155bf745ebfa9b2 78918937885e6e7a46a4dc300e60b375c36caec5 f03a8bdaca80c6409af99291c86e90b0fd95469f fe0f58d0e9313eef14d66e11586a263ac29a1bf9 8b73e395ab4d34af8a6cf652f73788bca0b710bd c77d47b7a480bb1c7d36b2f0ebd8a9a0d566281f efda3ae256b144bad42504f2616d434ce084ad03 bb9d611870dbaca5c94d2364486e845cde3edfa7 21cb28abf342b77295778c4ac6f09fca4f256914 60000f588fb82bd9f0d214f220d57b93ab8ad8e7 064ba94d1b15022fab46aaa5ba5a4a6cf275dd96 3eeed3889ac8e9209baa840da4ffe77bfedc2d42 c47e00fcaab86a2a6d31bb8bbe7efdee6050f94e b89629558d698a3d3692e94ae873b254fbd5bd3e 7a12115295f2afb1c3558dca584804726dc37315 7d93055c6923d39cb9ea09f4509f0f3ebdfdd9f6,,Spawn turtlebot3 separately,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (#2389) |  | Primary OS tested on | (Ubuntu 20.04 ROS 2 galactic  )  |  | Robotic platform tested on | (gazebo simulation of turtlebot) |    ---    ## Description of contribution in a few bullet points      separated gazebo robot model file from  gazebo world file and spawn tb3 using  nav2 gazebo spawner.      ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2662,2021-11-05T12:57:32Z,2021-11-05T13:04:37Z,False,none,dc54e071548f7a929d7a263aa4be223413e2d23a,2,9,36d2d4b387da0af431c3fcd1718ab8382611e320 4ff1a966cafbf679af5831b69c3024e0ee9ded9a 5c3b2d71a0ed11e549a4fd72eeb5cd2b5cc9fd02 c8fba9a03938cf68e26255344ac099caa5caa1da aa5578808fd8b7efca4c6353be505b6f51763abb 9ecbd4b5820efd7d94e4e9b55ae785702ad0b164 547ce52126ec2e78f54a46163061230fefdd4ca3 febb6a4cfc3550eed38e6e7602ac47dfd4c54fa3 34065e6c82b5d107d92d17427e63d79b3740f0ce,,Add support for reconfigurable parameter using GUI to ThetaStarPlanner,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #956  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points  - it adds support for re-configuring the parameters at run time using GUI  - removing 'w_heuristic_cost_' from Nav2 Theta Star Planner as a user-configurable parameter  - updates to `nav2_theta_star_planner/README.md` to remove its reference wherever applicable  - updates to `nav2_theta_star_planner/src/theta_star_planner.cpp` to set `w_heuristic_cost` as `std::min(1.0  w_euc_cost_)`  - fixed an incorrect check of whether the start and goal pose are the same in `nav2_theta_star_planner/src/theta_star_planner.cpp`  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes  None  <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2592,2021-10-11T14:52:20Z,2021-10-26T17:48:52Z,True,2021-10-26T17:48:51Z,0f6f49a3633de66db7cdf5f60ecbb951fea5883f,4,4,d6df47920f840d47ce7dd2c3e7ab79191fa5261c f12b9e7f00c9199b324436d5bf8e582c8c8e869c c8bec451fea3072875a3f1b71c7a525d2d50b024 3ecb867e2f2840da734292f9b8ccf6353e5103eb,,Add dynamic parameters do Costmap2DROS,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/956  and https://github.com/ros-planning/navigation2/issues/2566 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Wyca Elodie |    ---    ## Description of contribution in a few bullet points    As discussed https://github.com/ros-planning/navigation2/issues/2566  this PR makes dynamic the parameters that were in ros1: https://github.com/ros-planning/navigation/blob/noetic-devel/costmap_2d/cfg/Costmap2D.cfg    Only `update_frequency` was left out as it requires `std::thread * map_update_thread_` to be reinit  but this can be debated.  I tried to reproduce the priority order of what sets the footprint : from topic > footprint string > robot_radius  hence the messy change callback.  The `std::vector<geometry_msgs::msg::Point> ` from the topic needs to be saved when it is set in order to be able to apply a changing `footprint_padding` on it.    Side notes not directly related to this PR:    - With the current implementation  applying padding on a round footprint distorts it to a rounded square  - Default value of `footprint_padding` is 0.0 in the code and 0.01 in the documentation      #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2664,2021-11-05T13:51:15Z,2021-11-08T23:37:17Z,True,2021-11-08T23:37:17Z,de0cdde9377c6576298b2afb2f078de5f9fdd890,2,2,b945e28b300d2a0d7d62751c53f222fabb00e645 07740c990ee15254e82399842d8187ac962d6389,,Bug fix set the BT Navigator default_nav_to_pose_bt_xml and default_nav_through_pose_bt_xml from the yaml file,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2663 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of MPO-700 |    ---    ## Description of contribution in a few bullet points    * Fixed the issue for setting the `default_nav_to_pose_bt_xml` in the yaml    ## Description of documentation updates required from your changes  NA  <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points  NA  <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2669,2021-11-11T20:31:21Z,2021-11-11T20:31:58Z,False,none,0867ba7699d2d4ce50e00857943236e9cb3b6048,2,1,8c63c58070888ca18c4d6749988c5a921f59b5b8,conflicts,Footprint collision checking for nav2_regulated_pure_pursuit backport 2556 ,This is an automatic backport of pull request #2556 done by [Mergify](https://mergify.com). Cherry-pick of f16e0c5bf3b38067a252e7714e4d0713e839a733 has failed: ``` On branch mergify/bp/foxy-devel/pr-2556 Your branch is up to date with 'origin/foxy-devel'.  You are currently cherry-picking commit f16e0c5b.   (fix conflicts and run "git cherry-pick --continue")   (use "git cherry-pick --skip" to skip this patch)   (use "git cherry-pick --abort" to cancel the cherry-pick operation)  Unmerged paths:   (use "git add <file>..." to mark resolution)  both modified:   nav2_regulated_pure_pursuit_controller/include/nav2_regulated_pure_pursuit_controller/regulated_pure_pursuit_controller.hpp  both modified:   nav2_regulated_pure_pursuit_controller/src/regulated_pure_pursuit_controller.cpp  no changes added to commit (use "git add" and/or "git commit -a") ```   To fix up this pull request  you can check it out locally. See documentation: https://docs.github.com/en/github/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/checking-out-pull-requests-locally  ---   <details> <summary>Mergify commands and options</summary>  <br />  More conditions and actions can be found in the [documentation](https://docs.mergify.com/).  You can also trigger Mergify actions by commenting on this pull request:  - `@Mergifyio refresh` will re-evaluate the rules - `@Mergifyio rebase` will rebase this PR on its base branch - `@Mergifyio update` will merge the base branch into this PR - `@Mergifyio backport <destination>` will backport this PR on `<destination>` branch  Additionally  on Mergify [dashboard](https://dashboard.mergify.com/) you can:  - look at your merge queues - generate the Mergify configuration with the config editor.  Finally  you can contact us on https://mergify.com </details> 
ros-planning/navigation2,2668,2021-11-11T20:31:08Z,2021-11-11T20:32:06Z,False,none,d2a8971e14c2500fa1c737414bfc7f0e1633c759,2,1,623368c840bbcc4823e2b6eedc4631cc25579bd0,conflicts,Footprint collision checking for nav2_regulated_pure_pursuit backport 2556 ,This is an automatic backport of pull request #2556 done by [Mergify](https://mergify.com). Cherry-pick of f16e0c5bf3b38067a252e7714e4d0713e839a733 has failed: ``` On branch mergify/bp/galactic/pr-2556 Your branch is up to date with 'origin/galactic'.  You are currently cherry-picking commit f16e0c5b.   (fix conflicts and run "git cherry-pick --continue")   (use "git cherry-pick --skip" to skip this patch)   (use "git cherry-pick --abort" to cancel the cherry-pick operation)  Changes to be committed:  modified:   nav2_regulated_pure_pursuit_controller/src/regulated_pure_pursuit_controller.cpp  Unmerged paths:   (use "git add <file>..." to mark resolution)  both modified:   nav2_regulated_pure_pursuit_controller/include/nav2_regulated_pure_pursuit_controller/regulated_pure_pursuit_controller.hpp  ```   To fix up this pull request  you can check it out locally. See documentation: https://docs.github.com/en/github/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/checking-out-pull-requests-locally  ---   <details> <summary>Mergify commands and options</summary>  <br />  More conditions and actions can be found in the [documentation](https://docs.mergify.com/).  You can also trigger Mergify actions by commenting on this pull request:  - `@Mergifyio refresh` will re-evaluate the rules - `@Mergifyio rebase` will rebase this PR on its base branch - `@Mergifyio update` will merge the base branch into this PR - `@Mergifyio backport <destination>` will backport this PR on `<destination>` branch  Additionally  on Mergify [dashboard](https://dashboard.mergify.com/) you can:  - look at your merge queues - generate the Mergify configuration with the config editor.  Finally  you can contact us on https://mergify.com </details> 
ros-planning/navigation2,2672,2021-11-12T00:24:10Z,2021-11-12T00:50:33Z,True,2021-11-12T00:50:33Z,fc2c70a6df17595aaafc5de760a5f29c1e327738,1,1,23b78edfd05049f4e743cc247b96b13e1e7a6737,,Windows fix,While `or` is in the C++ standard as far as I know  it's not supported by MSVC ..
ros-planning/navigation2,2665,2021-11-05T14:20:29Z,2021-11-12T23:53:40Z,True,2021-11-12T23:53:39Z,0abd2699e86fc27ed8d1c56931f3441c2208da12,2,19,36d2d4b387da0af431c3fcd1718ab8382611e320 4ff1a966cafbf679af5831b69c3024e0ee9ded9a 5c3b2d71a0ed11e549a4fd72eeb5cd2b5cc9fd02 c8fba9a03938cf68e26255344ac099caa5caa1da aa5578808fd8b7efca4c6353be505b6f51763abb 9ecbd4b5820efd7d94e4e9b55ae785702ad0b164 547ce52126ec2e78f54a46163061230fefdd4ca3 69d67d030d0dc07acbd84d32903329247b2467a6 e29e2db40c60aa0e6abd418d1018a886750ef206 6449c47e5d72af26ce87c83a5106ec31a4da146e 8ce59be08fa4ba1cfce5ff85e6b5abd041b07284 2cfbee9364a7b2186b4b2436b27be8f42fa55b80 b9c3a4a1999d976eb2a7ca1b115b43a9be1a6659 9fceef07d2eda379d9a7cc02f65ca92d10f0fdc9 9e3ebd260d9bb54249f97ed0dccce37f79f33be1 9248a46333339cea53c2b43852cef89e79686452 5ff38b47fa794b3de43f55ac8757a6d6a6206df3 f2b293b0799c16a29aa60c167cc56301c58ec175 3974c377e67355f8ec721efbd98fe900cfddc633,,Add support for reconfiguring params using GUI in ThetaStarPlanner,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #965 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points  - add support for reconfiguring params using GUI in ThetaStarPlanner  - removing 'w_heuristic_cost_' from Nav2 Theta Star Planner as a user configurable parameter  - updates to `nav2_theta_star_planner/README.md` to remove its reference wherever applicable  - updates to `nav2_theta_star_planner/src/theta_star_planner.cpp` to set `w_heuristic_cost` as `std::min(1.0  w_euc_cost_)`  - fixed an incorrect check of whether the start and goal pose are the same in `nav2_theta_star_planner/src/theta_star_planner.cpp`  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2642,2021-10-22T14:48:13Z,2021-11-11T19:23:38Z,True,2021-11-11T19:23:38Z,9bbc0a9efaf61a86a7d917ab1eb292e0b29ba82c,19,47,029e7a1835f621040d5cb6f51cebecb88281813e 00510838bee9a35ccd56b25a60f6bf03eb6fdc54 633df2f9dd36366496299397ca598b0a187483ea efa3446f4ea11b110d084b6677ee1f9257bfe192 2658d7d476f6f2d0c4adb9ffa7bd87cd8373f67f e49608f0502e57227c5e1f0226e118367e3589f9 6d705525401ef9cd3df500040e9b5ab36f443d8e 31029da95297ac21c57b13f31eb4df8300b38a8b 6270c9f72731d9899a0533f0bbbcdf7a0ec909a1 0331487f221dd8fd704b2a39e9b2a3fafbc63c76 3605bce6e120893840023a86d25b128e9bfebe1e 06b315339629b54835f7bb2a51be240737761db0 95039d8a55a39c844d4ff92b829a611f6dea544e 44b1f1c56284d8744f43fe8fecc3bec9895044c2 b1e2d4ff7400cc794342cd21441d75a4902319bc 219e48207f03606827ca647d26a0f2d6c699c136 de050eb8846597013b0acd233ab94f7581607c4f c897217f5bf21d336825ffdb909b2f9c9ac772b8 c2cc827f6bd4d9fc2f234e179cc5e9b9a2dd6488 8bbc48cd9b3439ca5dfe1fd95afc08c4f25a72e5 cdd9015d5055e14ad17b923316d98766f73987b5 8ee87862b4fa4eb05ba4fcefa982213111cd5e9b 720b71bf21fa9d4a91c1c6fb9765316f3cd1f534 3018554cfd8f6c007f2501c9b0e38c25c542c98c 316cfd269345208153cf959802cdea155122de63 b1f9585c6bdaf8f586d5551f282abfb8df24f017 3ad0984951b258fb7bde86128b300198dc69e6b8 e6e18f9dcf3df2b4b69486ec61b96c52e6a4c8dd 50604317378c4e8e11ffb1275d48beb441c4c13c 209c2fec488c211465ddb2dbf9c392ec058c9c44 da7333b9532e1adba9e0e54e976f75eb49d3f401 571b67a547804783b073bad050f3d4633ac313b4 86589efed5e43cc2ffc989efa9b2c22e88cdb26a 1e5e6508078a32215de314a3bdafa11fbdd20c27 6d161702e325dd85eb56d48d88d779ec4f1547a3 5e839ac8e898d671f402ac15ce7e6f27d5d5d734 5c71f3d4347498a3de57c300929ba48ffe3b8558 2de6a0635169f496a877a1b8bdab5a1bacb042d5 15412f20680e0d548e4052f881b45d2898168da1 5deec0cfd1b2e638548bb596965f4763965a3379 d861b533d0feaf1a19e346e10778bb71a2ade9c7 dc9bd2cc75399e513492a4dde9678ac2ca09e72a 2a5b35b9e0eb2da3840630c0922de5dd83d5614c 12e5cfa183dd807910bc0e6a51ef7ce334a90f8b 71d1f83a75a3ab625f467c1c2d5a3d93877b313d 5cdbafbc2b589722c2e29efe2064f00eb0a6c3b5 eea8da69bc4e5365c993d9b01c9d22124b6b140b,,Refactored amcl code for modularization of motion models main branch ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | add tickets here #2552 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | turtlebot3 |    ---    ## Description of contribution in a few bullet points  - The amcl source code has been slightly modified and a plugin package for motion model has been created.    - Pluginlib is used to make the differential and omni model as plugins.Major files changed are related to the motion_model folder.    - This functionality will enable a developer to test his/her own custom motion model by just creating it as a plugin and adding the name in the nav2_params.yaml file.  -  Code is tested on the ros2 foxy branch.  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    - The parameter robot_model_type in nav2_params.yaml file is to be taken as the fully-qualified type of the plugin class.For example - robot_model_type: "nav2_amcl::DifferentialMotionModel" if the name of the custom motion model class is "DifferentialMotionModel" and the namespace is "nav2_amcl".    - To test any custom motion model  just add the motion_model.hpp file to the source code of the motion model implemented as a plugin.    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---  #### I would also like to acknowledge [@naveenmoto](https://github.com/naveenmoto) and [@mbharatheesha](https://github.com/mbharatheesha) for their valuable suggestions which helped me to understand the nav2_amcl package and make the necessary code refactoring.    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,1894,2020-07-29T00:14:33Z,2020-07-30T23:19:21Z,True,2020-07-30T23:19:20Z,ec2603960816a3b39204efb6d77ef5dff3d0a838,25,24,c483e8888583bb2748e407604ee8dd9a2f40708c 36ed224e197e4ba4cba5c9121bbdd990bdc42fbf 983212386772e79b9490bfeee8de3c9d4750d32f ed9f12449b5cfeab6aaa32933f42a7654d514d64 21778b5c0b90ff83d79531d287a80e7addb6bc29 fcc7cd62f59fe457fd8ef3a64fc93b8f336727fa 227c30ad4c84e839a6aff9fc6cfcb95ceabb833e 1f017eeab13f906331e2a446ce15171473d93c1a ccacefb9b84c7b1d98d128bb9d2b933f24fcf305 c2020d16bd1f0d5c8afb295cf9b61fae38ad8033 78c6f73b577a3b8c611e90a578d451f1e297540b 19e1dcc03ab21ca942b6b0731e33a725446d060d 4640d22d0109e6b592b8f0817670f8db9c6afc91 c159968e3ab8e147417af5934e7fc7b494543908 2f95d54885b97904825a7903e88803f0b4600391 9164130089ec68ef436697574e417dd92329edc1 4c45eb0204cc1b80eec4e2aea09e6aa31bdd3c77 f853e0e36ea92efafba4f219929d604034e3cae6 854c5e6a607d2396ab718f6b332f260a28d8278b 133f09ca74c6e46222700936bd158ca8d7d136c3 db42454f3059f10788f86cc849e89c7fb3fe936c 4f327b9c8c5aae239d4a3f6430b2c1f61ec618bd 0e8a9801ac83cdadec470f66461a2bb7cd916376 13c885fac3977b93b1120cd8c234460597fd5768,,Bond support fixing various action server issues,Adding heartbeat support for servers so if they crash or fail  the lifecycle manager will kill the system.    #1869 replacement    Tested:  - Goes down when a server crashes  - Goes down when a server breaks the bond  - Up stably >> 1 hour without timeouts on network  - Clean exiting   - Up - down - up again testing (minus #1893 which was around before this)  - Parameter setting works  - heartbeat disable option playing well    Completed:  - Test coverage  - Documentation updates to navigation website    Relies on https://github.com/ros/bond_core/pull/67 being merged but updated the ros2_depedencies.repos file to use my fork + branch that this PR represents
ros-planning/navigation2,2679,2021-11-17T03:22:34Z,2021-11-17T03:24:57Z,False,none,87ee778410d481899102ddb596d59f6563dd1b5e,2,1,88b9edd4f6377a3e60960fa9e9c5b94de6f3c88a,, Fix Multirobot demo add waypoint follower section to params,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu) |  | Robotic platform tested on | gazebo simulation of tb3 |    ---    ## Description of contribution in a few bullet points  Fixes #2678     * Fixed example of multirobot in simulation      ## Description of documentation updates required from your changes  NA    ---    ## Future work that may be required in bullet points  NA    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2677,2021-11-16T13:14:59Z,2021-11-16T18:10:39Z,True,2021-11-16T18:10:39Z,8a8b4d2ff97b36ae9931be376fe3ddd701d19445,2,1,fedfdc4af4126b9750a7a2909da9b40d3f34ac2d,,Backport 2518,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1) |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points  Backports #2518  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2681,2021-11-17T09:44:15Z,2021-11-17T20:18:59Z,False,none,f6ca5a2ec6a6237cdc0399f4d00773123c84f735,2,53,029e7a1835f621040d5cb6f51cebecb88281813e 00510838bee9a35ccd56b25a60f6bf03eb6fdc54 633df2f9dd36366496299397ca598b0a187483ea efa3446f4ea11b110d084b6677ee1f9257bfe192 2658d7d476f6f2d0c4adb9ffa7bd87cd8373f67f e49608f0502e57227c5e1f0226e118367e3589f9 6d705525401ef9cd3df500040e9b5ab36f443d8e 31029da95297ac21c57b13f31eb4df8300b38a8b 6270c9f72731d9899a0533f0bbbcdf7a0ec909a1 0331487f221dd8fd704b2a39e9b2a3fafbc63c76 3605bce6e120893840023a86d25b128e9bfebe1e 06b315339629b54835f7bb2a51be240737761db0 95039d8a55a39c844d4ff92b829a611f6dea544e 44b1f1c56284d8744f43fe8fecc3bec9895044c2 b1e2d4ff7400cc794342cd21441d75a4902319bc 219e48207f03606827ca647d26a0f2d6c699c136 de050eb8846597013b0acd233ab94f7581607c4f c897217f5bf21d336825ffdb909b2f9c9ac772b8 c2cc827f6bd4d9fc2f234e179cc5e9b9a2dd6488 8bbc48cd9b3439ca5dfe1fd95afc08c4f25a72e5 cdd9015d5055e14ad17b923316d98766f73987b5 8ee87862b4fa4eb05ba4fcefa982213111cd5e9b 720b71bf21fa9d4a91c1c6fb9765316f3cd1f534 3018554cfd8f6c007f2501c9b0e38c25c542c98c 316cfd269345208153cf959802cdea155122de63 b1f9585c6bdaf8f586d5551f282abfb8df24f017 3ad0984951b258fb7bde86128b300198dc69e6b8 e6e18f9dcf3df2b4b69486ec61b96c52e6a4c8dd 50604317378c4e8e11ffb1275d48beb441c4c13c 209c2fec488c211465ddb2dbf9c392ec058c9c44 da7333b9532e1adba9e0e54e976f75eb49d3f401 571b67a547804783b073bad050f3d4633ac313b4 86589efed5e43cc2ffc989efa9b2c22e88cdb26a 1e5e6508078a32215de314a3bdafa11fbdd20c27 6d161702e325dd85eb56d48d88d779ec4f1547a3 5e839ac8e898d671f402ac15ce7e6f27d5d5d734 5c71f3d4347498a3de57c300929ba48ffe3b8558 2de6a0635169f496a877a1b8bdab5a1bacb042d5 15412f20680e0d548e4052f881b45d2898168da1 5deec0cfd1b2e638548bb596965f4763965a3379 d861b533d0feaf1a19e346e10778bb71a2ade9c7 dc9bd2cc75399e513492a4dde9678ac2ca09e72a 2a5b35b9e0eb2da3840630c0922de5dd83d5614c 12e5cfa183dd807910bc0e6a51ef7ce334a90f8b 71d1f83a75a3ab625f467c1c2d5a3d93877b313d 5cdbafbc2b589722c2e29efe2064f00eb0a6c3b5 eea8da69bc4e5365c993d9b01c9d22124b6b140b b28745e7f5ea2f32b9bd16e4274beeda016ec71a 50d9730f4407b4dfe93cd74cdb42ada5eb48aa09 54623d1ffefbf93668c2a98f2c0435f27dab822d ced375d24a39dcdb4e05bc2e87cf3dff7f21936a 59831af94437e2082b64e5921f6c39f38095e81c f1bd053a7bfe74eaec83867040486769329456ae,,Amcl updated code,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | ( #2673) |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (gazebo simulation) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  Fixed the severe warnings due to the redundant code in CMakelists.txt .  Removed the motions_lib library from CMakelists.txt    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2680,2021-11-17T07:33:59Z,2021-11-17T20:24:17Z,True,2021-11-17T20:24:17Z,54902f6a95ce3a659f71557c419b5a1604754d65,2,1,c579c2a235f919f68519ca51de18383669915ad5,,Corrected reinitialization in nav2_smac_planner HybridMotionTable,Issue: https://github.com/ros-planning/navigation2/issues/2676
ros-planning/navigation2,2582,2021-10-06T01:05:49Z,2021-11-18T00:01:24Z,True,2021-11-18T00:01:24Z,4dc756adb11f80c45755dde193b5a49e4085da21,40,34,a1b396c4b14f8d35b9e526b924e458806c3f17ea 42bb3c874a95f127cf0ff85013a6cd69c282d253 e7e28c6ef2926474831645f5b1d443d70c9273d1 399f0e4fcc0a6915272b93deadd0d6e9c6e89a09 092c1d9c2dff70be4cd51d0a2fc0a04938ad5067 4119ef32d1aa1bafe120a67e94c93ea817b367c3 461d2faab09da6fb63e5860552c3bf00de830fba 1d7199282656fec0c11d698c73b2b21b8591e4a5 79f8f00181010b1e9f33a35c87fb921b3d092aaa 6425699b40f9121c4f17648f71bb527f7edbb76f a51790c8e871bc6913f1c257cfadfc5d64912158 e6dca9b6b02679a529f01d3e37c0c44f380a47d1 3a89142f5bde6e1b006dc23b56d36d9c2fc2c917 0a81707ad43cf33ea4bc734f3c26b4ada3780003 f2f48f63764dedaa67e69bd60e8ac88f96a5b75c 460271dc426c71f8982dacbdee8956e08d382362 391be46c4bfb7720b25a8fed64315d80767e9079 1659f1c779488647d79445577af49184d4ae3f2f f62b7ce3d0686e66741d302afd0725a17c270165 f69a49bac0d52e7a0d5a012909c99710ee6ab11b 1610710899fb2044c10d46d4625281ea9e5edebd ac46c0289108379761bb1b7859115b886fc5d77f 6bde2505db56738b51053418d8a7d8e73f79e70d 49b059bb989f00c9977a366cd8a1d75d3e9bfd6d f364aff71f87649ef9b27f5bbfd0286d0fc922d5 be1993b68d4d9975777e00766f37c8eeff8d6c3d d841fc89c4e0c46a47e7457268c618fc646c5246 83733653e373f4da6b9713ce7f16fac64deae8b6 f1ee7282892943bb45bb9606c27c38b486a45ed5 4c2b5ae82ebd04a0ca2ba3d5ae326885e66967bc d7b26d7c57ee3cdb4f888f35103aa01c78463d12 36f32c07b794ec48bffd5f1374dd14dcb39aa7d2 a4f8ff547a4b2572dd90ee6eb287bfa66d7a6678 8da0f29de39043ca752db5d1433b104223a09c37,,State Lattice Planner Work Revival,State Lattice  - Leverages dynamic programming and distance heuristics from A* for increased speed  - Leverages Hybrid-A* collision checking and smoothing capabilities as well  - New control set computation methods (TODO for branch)  - Moves analytic expansion / smoother into cpp files    TODOs:  - [x] Merge in Matt's work on control set generation with a handful of useful default files (ackermann  diff drive  omni of a few basic resolution or turning radius options)  - [x] Merge in Josh's primitives file parsing code  - [x] Non-equal bin size integration for state lattice  - [x] Collision check between end points for state validity of the primitive expansion + include points in final path  - [x] param to allow for reverse direction expansions as well  - [x] Design in traversal cost functions   - [x] Test integration of these components for speed and path quality  - [x] Add State Lattice documentation https://github.com/ros-planning/navigation.ros.org/pull/232  - [x] Add State Lattice test coverage  - [ ] ~Add omni / diff T and H function considerations~ - Phase 2  - [ ] ~Add omni / diff analytic expansion considerations~ - Phase 2    
ros-planning/navigation2,2675,2021-11-16T04:07:10Z,2021-11-18T02:32:12Z,True,2021-11-18T02:32:12Z,84edee6b651f31516b547209b51638d0005bf8ce,7,3,464bfffec0d81fcc14b4b27ddf30ee83e418436b b7a333c8f3fa86ad8207435aa629ec6c2743239b f3214e20f2a536ce0dfe4084b7d4458de444a495,,unlink motions_lib plugin library in nav2_amcl,Signed-off-by: zhenpeng ge <zhenpeng.ge@qq.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | ( #2673) |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (gazebo simulation) |    ---    ## Description of contribution in a few bullet points    * remove API  `nav2_amcl::MotionModel::createMotionModel()`    use `pluginlib::ClassLoader` load MotionModel in `AmclNode` directly.  * remove redundant library `motion_model` (as same as `motions_lib`)  * remove `motions_lib` from `target_link_libraries` of `amcl_core`.    ---    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2682,2021-11-17T23:15:07Z,2021-11-18T05:36:27Z,True,2021-11-18T05:36:27Z,46397a39d9e0577f4432878ca02aee612e29f3d3,4,12,fb765f11c9bb15b8ce426b3b9e1c8df536339e95 ab67968c4e0074550203f2a568ff68729446d508 29f63d1fbe9fb839e18b2b879b87e91ba8a6f1e5 2157f1dfa2131e0e7ae3f416266066957cb963db 2c8b9a884d5447ec312ceb4ea1b4cfb989c0cddb 9f4bb4d387fc4fe307b214d22ba1f5784710e867 f5c9389e9ea4fd48fd7acf439ebc80782429f8ee 46a86a1c33c7a6cb61dd115dc68c0295856df92f 4c02cfbf9dd31a73816ab7f07a4d8ce81c7e325e d00bbdefb3a3e146792232ac3370f13d103f7748 ff1e3ddd854661a1f1eae498e92cea4c0808820d bb41a019dfe8a7000c78f0c4a38d1df25024212e,,debugging flaky shutdown on plugin planner tests,https://app.circleci.com/pipelines/github/ros-planning/navigation2/6381/workflows/0a4d4b8f-2c05-425d-acc6-5fc63149be1b/jobs/23448/artifacts
ros-planning/navigation2,2684,2021-11-18T06:19:54Z,2021-11-18T07:12:16Z,True,2021-11-18T07:12:16Z,3f0932f99285662247b64020293c763ebcc8a353,1,14,fb765f11c9bb15b8ce426b3b9e1c8df536339e95 ab67968c4e0074550203f2a568ff68729446d508 29f63d1fbe9fb839e18b2b879b87e91ba8a6f1e5 2157f1dfa2131e0e7ae3f416266066957cb963db 2c8b9a884d5447ec312ceb4ea1b4cfb989c0cddb 9f4bb4d387fc4fe307b214d22ba1f5784710e867 f5c9389e9ea4fd48fd7acf439ebc80782429f8ee 46a86a1c33c7a6cb61dd115dc68c0295856df92f 4c02cfbf9dd31a73816ab7f07a4d8ce81c7e325e d00bbdefb3a3e146792232ac3370f13d103f7748 ff1e3ddd854661a1f1eae498e92cea4c0808820d bb41a019dfe8a7000c78f0c4a38d1df25024212e b1af8203e96c03f015af0e0cef1b6433e7c30bba 354076d2f7b67cb0f371c26b81f4962a57276b77,,Fix spin recovery test,none
ros-planning/navigation2,2691,2021-11-18T19:59:36Z,2021-11-18T20:00:54Z,True,2021-11-18T20:00:54Z,d4e166ec38239ddd25aa79562f620ec2e2b0894d,1,1,2af9f24d1be6b42fc770a53e54e5991dd90aa50e,,Updating regex for mergify,none
ros-planning/navigation2,2569,2021-09-23T07:51:02Z,2021-11-18T20:23:59Z,True,2021-11-18T20:23:59Z,7befc4975d3df4e252677a7a2b7c1d6c783fbd20,36,22,30a1bc7862343e855314386a2deb1382400aa245 0ebeffd9486575d4420625340157c913a9b2471b 4b30b93040b0492d99b253bf00e72d9d77315c5f ab08c88178baf10644a76a11b71e5cfd8d235b91 e26601ffce0591be5c77b215aea01d81e78377b3 b60a6a9d12c923e4c3c5644623b418126e63cbc0 0a6d4f707b7a4e027cfed8aaaf522b62d3322803 45c8dc7df5ea2fbae3b12db2e8332bdb398b5237 4e4bf966de5dfd13ab29b2eb493d8682a7764153 215552469c3ba5e0eb386801d99c1eebbaf9e716 8a45a26e207d0997f610d1a082aa292a88ae3727 e51ffff453447e13969f38608c09da98b2a27eaf 647c8bfa97ff8c1ef045e24724a1a505849f114b 3412f5e5f5f54ea4c02ae00f27815acd872b344f 95671807b22a089ca1d76e88ff2e48a504230339 89566455712f07f03b667331b228e2553cea7975 6261768bb95ff8f47bbd5941cef0dea75756efb2 a97e2d58d59bbc87f13955d0cb83324f68847093 d1df4c78b2409b91c082570a9112c35cbec1cbc4 f67f81dbaaef8d7f345f9390fb3c9411d30a34bb cd98b0a85bcd21b104138cee7cdfb91ed2cff930 3158bfe70bd91f354a9a4e24b44d915f759e4c16,,Smoother server,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Smoother server for path smoothing pluginization |  | ------ | ----------- |  | Ticket(s) this addresses   | #2498 |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (gazebo simulation) |    ---    ## Description of contribution in a few bullet points    * Smoother server added with functionality of loading nav2_core::Smoother plugins  feeding input path  costmap and robot footprint into them and collision-checking the resulting path  * Added updateCostmap parameter into CostmapTopicCollisionChecker isCollisionFree and scorePose methods to improve performance (costmap is needed to be updated only for the first checked pose)  * Added SmoothPath.action and SmoothPath bt plugin  * Also fixed typos in ComputePathToPose.action and ComputePathThroughPoses.action comments (use_start true/false functionality was inverted)  * Also added getHeader() method into CostmapSubscriber (actually not needed by smoother but it cannot do anything weird so keeping it there)    ## Description of documentation updates required from your changes    * new table on navigation plugins for smoothers  * migration guide mentioning it  * docs on new BT node  * configuration guide page on smoother server  * New paragraph on navigation concepts page explaining smoothing  * Ideally  a tutorial about how to write a smoother plugin like we have for the planners/controllers/costmap plugins  but that can be made into a separate ticket for another time    ---    ## Future work that may be required in bullet points    * merging Ceres cost-aware smoother plugin  * implementing current Smac planner smoother as a smoother plugin    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2693,2021-11-18T23:26:34Z,2021-11-19T00:14:44Z,True,2021-11-19T00:14:44Z,c9861973f42c24eef4cde6b525089ba929be4309,2,1,037c35a5503b9f95cda1e09d379c0a647d9981c8,,removing dead code from AMCL,Functions unused from initial port
ros-planning/navigation2,2694,2021-11-19T10:44:48Z,2021-11-19T19:09:10Z,True,2021-11-19T19:09:10Z,3b9ebdb68090a38c71803e7c0e389537f561abd4,1,3,07ebd9a0213cc653ba1c7b88abf2646eab7fca72 ec626453d6e0fc8bf7e5dc87d8b06e16104f9e95 89499ab04972fa3251fa17f9a233081705070091,,Lifecycle startup fix,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Prevented a crash situation on lifecycle manager startup |  | ------ | ----------- |  | Ticket(s) this addresses   | #2689 |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | - |    ---    ## Description of contribution in a few bullet points    * removed `callback_group_` from `init_timer_` construction  * also changed interval to 0s (very minor speedup)  assuming the timer is there only to wait for the first rclcpp::spin    ## Description of documentation updates required from your changes    * no updates needed    ---    ## Future work that may be required in bullet points    * check for other components that don't need `callback_group_` as mentioned by @gezp in #2689 discussion    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2695,2021-11-19T21:28:50Z,2021-11-19T22:18:11Z,True,2021-11-19T22:18:11Z,a9c55026c2cda08a44e7eeff895db72c8823ae84,1,1,2c909291234c73be8e75b012b3c686091187274b,,If not downsampling costmap default factor to 1,https://github.com/ros-planning/navigation2/issues/2686
ros-planning/navigation2,2696,2021-11-19T22:17:04Z,2021-11-20T02:07:41Z,True,2021-11-20T02:07:41Z,c15ccbf86d52a19b9ce80b095f39090ffd9f4afc,12,5,a5806604cf55a90807618082fbb7a82e1313e207 f3c2b28e5a5f2cf4d06f78107e11beb06a358e0b fc58434d1e9db9ff3f298e998971da92ee1b7324 e42aaca8227d22fa3a482c2a00b39e5de381fe93 e78b4ffebcbea03e7d8a758d13733c28996b8e66,,removing live groot monitoring from Nav2,There have been near-endless tickets of issues regarding live groot monitoring  so we'll be removing it from Nav2 since it really hasn't worked out well since we introduced it.     It was a great feature idea but never quite panned out  especially after we introduced multiple navigator types in the BT Navigator server. The issue we run into primarily is that Zero-MQ prevents users from producing multiple logger types in the same process. Since BT nav has multiple servers  the swapping between them for viewing has never had a clean hand off causing folks to file tickets or have nasty logs appear or ZMQ crashes in the background. The BT.CPP client for this doesn't allow us to have a clean shutdown process so we're left with hoping that ZMQ properly handles the situation  which it rarely does. Further  Groot only supports visualizing one type of tree at a time so for applications often switching between navigator types  its not possible to use a single groot client  causing great frustration.    So  what I propose here is to remove live monitoring of the BT from Nav2. **We can still use Groot to modify  visualize  and generally work with behavior trees**  the only thing being removed is to live view the executing behavior tree as Nav2 is currently executing it (it used to light up the boxes of the current nodes). This was of dubious value anyhow  since the tree ticks so fast its difficult to visualize and get meaningful insights into things as the system is moving _so_ quickly.      Ex. tickets    - https://github.com/ros-planning/navigation2/issues/2406  - https://github.com/ros-planning/navigation2/issues/2674
ros-planning/navigation2,2556,2021-09-08T17:52:42Z,2021-11-11T20:30:23Z,True,2021-11-11T20:30:23Z,f16e0c5bf3b38067a252e7714e4d0713e839a733,2,32,cfa23739faa9a0e5cb6f786a0132c37c257ccfc7 898b91d58822fefc8d97111f96af7883d0b69b1d 4f636c8bb20b5eef7ca378d90fd2c9daf9cb5f1f d3d21a7ca4f126c8afa0d4a9958f32d9566090d8 044955be0618b06e16eb8b4568844027ec2ccefb 456e8529d72ab5d5cf8d725d860bf555b0666030 536e2e7f9607057af4725aa1b82e8eeda3749b71 d769f53b1d813ed533d87e30d81fdb618a36920a e4cf2db22732b6f40c247186738b32e6645510cb 6cef4004acf25a6403701d73b4b369c39e96a2c8 7413f17865578b2f3b4cca4b62d9ceb8f1aab1cd a465f9d7a872bcc480f9fef5094f63c21ac00aa8 f58ba26d722911a9364c0ed4953959445bb5ad45 0b572e817e46ee65f101ca96948c8a98daf63802 c0ccf83af0d80f5a0809b025e0cb1fb61aa8d3d8 b797c55d40aebe21bd81597f1b9258695f57689f defbb234a521a8a699c2f617d33527c22e4865b2 0743ab26e2a74e9ba5f402a13ab017610c092415 1889ad33c5f1a6ce08c159d9dadd3b45236d9395 16e8823b8f75a09df78611ed7f471ed86189d7da 631984b7984144ccea47ab0bdc17a33eec75b77f 51a13775c69c898c3625cc95d85e944e3fd63ce6 61ccdffc730d445e7cab9daad2c29cd1e7d272d5 21daab57bf2d5feaafb73edd40e29c3d812c2981 02554623f9d7dbcf8f1a41d7688c21a40566a19c e8d793a0e414c916c482b4dea7fe02b6306838cf 97bc1e4fdcae819b03c34e849c5f49afd2d0ca02 55ce8036b7cc7bf21c539965564ee7e25f684187 cb05bb632e655304e379e8b9f579e9bd8e1a3d0f a34ccd91b858419f2780b19b806bb5cbb3ef47e7 edde2afa24428aa9126c417bbdfd9208490bc870 a5c59c81fe8d03d3ceaed7b099c5178d9f3af79d,backport-galactic@backport-foxy,Footprint collision checking for nav2_regulated_pure_pursuit,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2422 |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (gazebo simulation of turtlebot3) |    ---    ## Description of contribution in a few bullet points  collision checking in nav2_regulated_pure_pursuit is updated to based on footprint cost instead of point cost      <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2700,2021-11-22T18:14:16Z,2021-11-22T19:48:21Z,True,2021-11-22T19:48:21Z,ed30d704e66770d7683267a3f6f85f7d6fa31ebb,1,1,58222ed29fb910323b0aad0a39bdbfc5d09290e0,,Remove wrong unnecessary dependency,## Problem  `ament_cmake_ros` dependency is added in #2642. This breaks build in our repository where navigation2 is dependency.    ## Solution  Looking at the changed in #2642 I am not sure why this dependency is added  or it is at least added wrongly because there should equivalent in the package.xml file and there is none.    Based on my experience working on 10+ CPP repositories with ROS2 I think the dependency is not necessary  therefore propose to remove it.
ros-planning/navigation2,2703,2021-11-23T13:36:04Z,2021-11-23T17:02:09Z,True,2021-11-23T17:02:09Z,e3d633331209874d612bb5b1453063a4fd7252b6,2,2,d99bdf77e2ddb8cf874c12f67940fa4fa7d3e184 7d51e5da761074fb8c4d23a60f5fe2979b2c9136,,Theta star planner fix,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2698 |  | Primary OS tested on |  Ubuntu |  | Robotic platform tested on | test code |    ---    ## Description of contribution in a few bullet points    * fix the bug #2698  check if a plan is generated to avoid crash  * add test case if the goal is unsafe  
ros-planning/navigation2,2697,2021-11-20T01:39:26Z,2021-11-23T17:11:41Z,True,2021-11-23T17:11:41Z,b28f6d580bbc4b72cb91770576dc42da7c8ebc93,8,2,01d8f55e80f6f4b5e71d9e2e44046c0e4eb289d8 a5a5e0a30372e4f0d569456a110d3460719617ff,,adding max analytic expansion length,https://github.com/ros-planning/navigation2/issues/2659    - [x] test for performance  - [x] fix unit tests  - [x] Change to parameter in meters and used in expander in cell coords  - [x] dynamic params
ros-planning/navigation2,2701,2021-11-23T01:02:33Z,2021-11-23T17:16:34Z,True,2021-11-23T17:16:34Z,89bbb6d37ffffe3adfe7e09d45b556b84c1bf985,3,2,cabef8f50bbca2f7e8056d6185bdf0658ed96488 ad60e01c4e70273e3e9947a8ecee989a31eb13da,, RPP remove velocity scaling option now required and enable orientation sp projection times,https://github.com/ros-planning/navigation2/issues/2670    - [x] update docs for param change https://github.com/ros-planning/navigation.ros.org/pull/236  - [x] Migration guide param gone https://github.com/ros-planning/navigation.ros.org/pull/236  - [x] TODO get radius    
ros-planning/navigation2,2706,2021-11-25T01:36:10Z,2021-11-25T03:48:29Z,True,2021-11-25T03:48:28Z,9cc4192edd02f9810873d3af1cad7829223875a3,1,1,52faa354ea3cea4a07c33e853b4e26ff752f70a7,,Version bump up colcon extensions,Update to use latest fixes  including: https://github.com/ruffsl/colcon-cache/pull/26
ros-planning/navigation2,2705,2021-11-24T23:29:49Z,2021-11-25T03:49:04Z,True,2021-11-25T03:49:04Z,b8d3611d52df78be4ddb099f62c93cc4392cbed4,1,1,b4d0ac0a04edc987be4cb019c6f0e7d2d5940bb2,,Always initialize clearing endpoints in voxel layer,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2692 |  | Primary OS tested on | (Ubuntu  Archlinux) |  | Robotic platform tested on | (turtlebot3 in gazebo) |    ---    ## Description of contribution in a few bullet points  * With this fix we avoid calling `std::vector::front()` on an empty vector  which is undefined behavior and causes glibc asserts to fail in runtime. See the ticket for more info.  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  ## Description of documentation updates required from your changes  [none]  <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points  * Can be backported to galactic. Older releases are not affected.  <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2708,2021-11-25T12:44:05Z,2021-11-25T12:44:14Z,False,none,none,257,28,342816556b89294ccc3266e0b08c57dc603e3570 aa9394a6b57a23ede7add9cbba901ba1a21a26da 671dde625ade1092130cea68a64eca7e97435033 db2f917bd5a1bdacf7acc5436f49434be0d02ad5 fa1a64ad4d47a3793d22ce7da3f7238c92294af7 603150bcf52a48847772558f30601c5b30cf0797 96b47139d3c10f3847c66fe6bf130152dfd1a038 0ed83f084d105f3eae667e0b7a28431939a07c96 3d166b748bd704eca05ef671b0b2ca99968a8c73 77c1b742e959dda02acf6830c2a814f2278bb4a4 63b9510ddf16abe2b6cc0f21c4d4824ed4e99331 af8a857699c6f9f64cfccb7d98b60230ddc3ee94 52abee596117441311ce8fcb625fc2504e345ea2 64bf1463fe9fc92f99f8722624a4920d578b661f 41996f409fcd7b005cf779e0376273cee3de6d76 3befe9aa1c2546f2178c7ced6fe55fc3ba56642a 9831d83f5dfce01d5842c867a0540dede4dcabf9 5c9cb96e0c887a6a51506342b8fc50d2ab34643c fcdc1d83fadc6ea19589f464486a27c6a70820e7 a947ab5656e46ae3aa1afdf95e1706a16e478974 2590238de036513c96c6fd2c76884c7599b72a01 7bc07141bf127754cc79c5211813de8d4cca7602 9e7c0e12a9525bfc9ff838dbc4fe1bd0816a04ab 19189e73fe136bdf05b6a22d90a2143b3a55d1cd 9ca4bb59bfc2814af9a18da9e6fc73a3b675475e c37bff061e864d13db1ade250901a2cdedd44010 666b185294e6b3fc31e8a5f1e81a464e421235bc ea17417e63fc037f5004c7ee74758feb66b38af8,,Reload Tree on Trigger and more ,Missclick (oops  sorry)
ros-planning/navigation2,2712,2021-11-29T13:36:41Z,2021-11-29T18:13:29Z,True,2021-11-29T18:13:28Z,6522fed52926f240736d628d28c11a0be8f238cb,2,1,20905cf0fd4e6d87e505bb45bf04b07e1f0bda57,,Prohibit of simultaneous usage of callbacks accessing to pf_ object,Prohibit simultaneous usage of `pf_` shared object by possible callbacks. This will eliminate inconsistent data within `pf_`  (such as `pf_->sets[]->samples[]`) causing crashes of AMCL during "initialpose" and "laserscan" messages receiving at the same time (described in #2711)    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2711 |  | Primary OS tested on | Ubuntu 20.04 focal |  | Robotic platform tested on | Nav2 integrated tests |  
ros-planning/navigation2,2687,2021-11-18T10:07:08Z,2021-11-29T18:25:06Z,True,2021-11-29T18:25:06Z,fee433ff76b1fe2997043bec16b81568fbead49e,27,17,a3cf1f0fd055a209fc980cf47aaf670d6b15680a 4e99c11341ee1836ba4b7aad1ef320f3f0896ac3 1f70963256ec6b92cee0f4e505ce7384ac03fbf8 ed6602f4048a34401f69dc8d4cccb39eaa23e346 c7b8bbd4cfd8eca5de1deec07a52331f10ba5bb5 cf10abebfee60fb5cf09df6836b24594b68c083c d0263f9463f912e2a3736d7661b6dbbd93fd9012 df7741e1386d4338a1d05c3ea94433b28f108efe 85b0d5319759f157f11154177b6598ad59b11dd6 d627f83abb37c9dbf97851877dd836380e857624 435245be5fd761497e4a613016cfb3b94ee38352 50ee1f43c8f55820012fcc391dcfc1b5efca1c69 6390058b7995ba70768a5332ab1d001a45249b4d 3e406ef73fe372974fab9cbf28dae7f7ff9eeb1a 794bd3705f5279f68a2fd5dcfdb947d3fb60c03c 9920bfc52263836dd4b4d4ce476816f4e2f29440 03771325a10c92fe8a6e295519033251c731cf5c,,CostmapTopicCollisionChecker tf stamp fix,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2658 |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (RTV Caster  gazebo simulation of RTV Caster) |    ---    ## Description of contribution in a few bullet points    * Fixed footprint stamp rewriting by Costmap2DROS  * Added header retrieval to FootprintSubscriber  * Moved footprint "unorienting" from CostmapTopicCollisionChecker to Footprint subscriber and made it use footprint stamp for tf lookup  * Removed footprint_timeout from FootprintSubscriber  * Updated FootprintSubscriber API and added doxygen description to getFootprintRaw and getFootprintInRobotFrame methods    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    * Removed `global_frame` parameter from smoother server  so need to remove that from default configs and documentation page    ---    ## Future work that may be required in bullet points    * Check for other places where tf lookup has possibly been used improperly    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2704,2021-11-24T22:13:45Z,2021-11-30T00:48:27Z,True,2021-11-30T00:48:27Z,1f2e676ba07b6472153a92396a8d9ab240e69dff,17,7,fa1374bcf2793f368c01941941dbb4bbbb9ebadc b662cf49cb3a0a278593d99b1c84b214265cd519 57b0c42385a570f8982303d4738a866bde96bae3 c187c8160da4a7b90f8e255675c523d5f58c1e3e 980896052b17dffded1f6f8dc4fbdaaf85b906d9 353c33a6cb6c1fcadfec3c163282f51323fb76b2 11686d58d4fb95e2f579ea1b8a2d3262bd48a13c,,adding dynamic parameters support for controller planner and waypoint servers,- [x] needs unit test coverage  - [x] add mutex  https://github.com/ros-planning/navigation.ros.org/pull/242    ---    @doisyg I believe that we do not require the mutexes in most of the dynamic reconfigure callbacks. The dynamic parameter service is tied to the `node` given to the algorithms  which is `shared_from_this()` from the servers. That's the same executor that is being used for the `ActionServer` in the controller / planner servers.That implies that all of the algorithm reconfiguration functions _couldn't_ run at the same time as the action  only between action calls. That means that we could remove the mutexes because they would not be able to run at the same time.    Do you agree? If so  I'll update this PR to remove all of the mutexes in Smac  DWB  Theta*  RPP  NavFn  and goal / progress checkers. Costmap (?) I'll need to look at more specifically  I think that does actually use another callback group    ---    This PR leaves only AMCL and the costmap layers as non-dynamically reconfigurable. https://github.com/ros-planning/navigation2/issues/956   
ros-planning/navigation2,2717,2021-11-30T19:20:46Z,2021-11-30T22:01:46Z,True,2021-11-30T22:01:46Z,d616884f411cea4c83d879c66dd2209a5834f7d0,1,1,f7e99e104f99372132069a7f5be38fb491818fe1,,adding backwards state update,https://github.com/ros-planning/navigation2/issues/2710    > One more observation (not tested): Shouldn't these three lines (521  522  523) be replaced by just neighbor->backwards(backwards); so that also an originally backward neighbor can be reset to a forward one?
ros-planning/navigation2,2715,2021-11-30T04:22:36Z,2021-12-01T00:33:53Z,True,2021-12-01T00:33:53Z,bdcccd88157fdb97b6902354422d61bd3e30d3bb,1,8,c6ba9828ffab5a6de3d997cb85fcf797510df964 75703f1b31a8615a59b999a34c1f16462905db65 03ea830da4356f69eae36bee58c51f0d619a7d19 2b4424f6ca9556d5955193712164860e7a1e346a f4584d10a1a15bde72d1fdbf8f3ed15f49883d8d 3fbba58a448a3fbe4a25c2c1a4f2ed22f57766f2 825d5e2f57dedb6203c5f7155c4148a6d9c3642c 7c9ed2aa94b6c5c9abdf7ec4ffda5bff95d1cf23,,Clean gcda files for invalidated package tests,"Each time you run the program  the execution counts are summed into any existing .gcda files  so be sure to remove any old files if you do not want their contents to be included."  https://llvm.org/docs/CommandGuide/llvm-cov.html    Example:    <details>    ```      libgcov profiling error:/opt/overlay_ws/build/nav2_util/test/CMakeFiles/test_node_utils.dir/test_node_utils.cpp.gcda:overwriting an existing profile data with a different timestamp      libgcov profiling error:/opt/overlay_ws/build/nav2_util/src/CMakeFiles/nav2_util_core.dir/odometry_utils.cpp.gcda:overwriting an existing profile data with a different timestamp      libgcov profiling error:/opt/overlay_ws/build/nav2_util/src/CMakeFiles/nav2_util_core.dir/node_thread.cpp.gcda:overwriting an existing profile data with a different timestamp      libgcov profiling error:/opt/overlay_ws/build/nav2_util/src/CMakeFiles/nav2_util_core.dir/robot_utils.cpp.gcda:overwriting an existing profile data with a different timestamp      libgcov profiling error:/opt/overlay_ws/build/nav2_util/src/CMakeFiles/nav2_util_core.dir/lifecycle_node.cpp.gcda:overwriting an existing profile data with a different timestamp      libgcov profiling error:/opt/overlay_ws/build/nav2_util/src/CMakeFiles/nav2_util_core.dir/lifecycle_utils.cpp.gcda:overwriting an existing profile data with a different timestamp      libgcov profiling error:/opt/overlay_ws/build/nav2_util/src/CMakeFiles/nav2_util_core.dir/string_utils.cpp.gcda:overwriting an existing profile data with a different timestamp      libgcov profiling error:/opt/overlay_ws/build/nav2_util/src/CMakeFiles/nav2_util_core.dir/lifecycle_service_client.cpp.gcda:overwriting an existing profile data with a different timestamp      libgcov profiling error:/opt/overlay_ws/build/nav2_util/src/CMakeFiles/nav2_util_core.dir/node_utils.cpp.gcda:overwriting an existing profile data with a different timestamp      libgcov profiling error:/opt/overlay_ws/build/nav2_util/src/CMakeFiles/nav2_util_core.dir/costmap.cpp.gcda:overwriting an existing profile data with a different timestamp  ```    https://app.circleci.com/pipelines/github/ros-planning/navigation2/6480/workflows/e9f7aefe-808c-4465-bebb-d63c7136dade/jobs/23842
ros-planning/navigation2,2579,2021-10-04T08:21:59Z,2021-12-01T01:45:58Z,False,none,a2543795515f03e36e54e29c272efa5b536ea0bc,8,2,e172e360871dff03adbce26e3beeb2105a999c84 305611118c3ba7aa5d1e28c756b16b72448e0ce4,,Shim controller,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2064 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of turtlebot3 |    ---    ## Description of contribution in a few bullet points    * I added shim controller plugin    ## Description of documentation updates required from your changes    * I added parameters  need to document them in Configuration Guide section  * Also I added tutorial in General Tutorials    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2713,2021-11-30T00:04:12Z,2021-12-01T19:39:22Z,True,2021-12-01T19:39:21Z,7213cbcea91a6da72cee88774764d634dd94161c,3,1,e1965c08f7002e6525f93c21dd9fc822ae8624e7,,changing formulation of Hybrid A to be admissible and retune,Docs PR https://github.com/ros-planning/navigation.ros.org/pull/241    @afrixs an OK on this would be great just to verify this meets your needs too to put this admissibility topic behind us
ros-planning/navigation2,2718,2021-12-01T01:45:45Z,2021-12-02T01:17:46Z,True,2021-12-02T01:17:46Z,8b9c623a1c5a6085d9c5706c80685facfd42e99f,10,9,7b0833c9de754e3170e075136f44b562bf58af3a 85da1deb31dbfd5cf4926a1679bf87d57b4362da a7b209a9467934fba58a82eb955f9101bcaf2001 b42ba3abde10db45234f19f8024cc9c0d31d4835 2c0f0d10f8f8c95a051b15d04b757f74f3412d97 f9b0bd8a8965c7f76819cc33c6c0943da5eed330 87f1caff05d501e937d7e4035bece9550866d75c cac363a5dc4e4ff6fef6f9336dd60bd7d0408f86 91a9877183e5c31565976a489dd3dd6d74d9ef4a,,adding shim rotation controller plugin,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/2064 |  ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    * Adds the rotation shim controller plugin  with near 100% test coverage  and readme documentation  * Also adds a tutorial    Needs  - [x] testing functionally works  - [x] make sure you can get parameters for the other controllers  - [x] adding kinematic restrictions  - [x] Tune behavior - update readme defaults  declare defaults  and config guide defaults in yaml/table  - [x] README / website config / tutorial add runtime and video (warehouse world) of tuned behavior  - [x] parameters guide https://github.com/ros-planning/navigation.ros.org/pull/243  - [x] migration guide entry https://github.com/ros-planning/navigation.ros.org/pull/243  - [x] plugins page https://github.com/ros-planning/navigation.ros.org/pull/243  - [x] collision detection while rotating  - [x] tutorial on use https://github.com/ros-planning/navigation.ros.org/pull/243    ---    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2722,2021-12-02T11:51:49Z,2021-12-02T19:48:25Z,False,none,4a0dee94179ce961f8b3da79866235adfbffec12,9,1,61c8aaf75d65da920d88ca4b6c7be527f1fe8bcc,,add shim controller,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2064 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of turtlebot |    ---    ## Description of contribution in a few bullet points    My implementation has several features  - dynamic angular threshold  - angular deacceleration  - parameters to disable head rotation or path rotation    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2724,2021-12-03T06:54:55Z,2021-12-03T18:20:02Z,True,2021-12-03T18:20:02Z,36b7728b602197e5466e3fee49726700e7560736,3,12,a4f51ee28b03bf49f2cb63debfed49f7390fe6ef 2d81964a1eb4d910cd4d75cf612e7254c58b6c73 70ff0590acd8e2d95562c5b090ab1c2177ea98e0 f107f01730c23c1ece34ceb362b342ab01e5a55a 741e0429cbf89e3a7a42b40ef6c16c3f477f9293 885fe82c04972a2fb94241a2315dcdbbd6e5d826 4ff8edd22541be41a92d59db044a8302051067ad 1c8135d4e0928ae89b67c1f67b4cafc80dc8782e 9a56c68ea80c00c018a349a6f7e2c7007892faa4 5637026083591f9e735734bab70db0faa48934fa e83df11ad8805c3640209b24962881b1bc728e9e 16573d430812a7550b0fd99287df15a4deff7b4f,,Smac anomalies fix,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2710 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of RTV Caster |    ---    ## Description of contribution in a few bullet points    * Instead of skipping nodes AnalyticExpansion in smac planner now creates new detached nodes which are deallocated in the next search / in destructor    ## Description of documentation updates required from your changes    * No API changes  everything happens internally in AnalyticExpansion    ---    ## Future work that may be required in bullet points    * none    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new features **OR** changes to existing behaviors are reflected in the tuning guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2726,2021-12-03T11:08:34Z,2021-12-03T18:44:25Z,True,2021-12-03T18:44:25Z,ec6f70719f302ce0bc267f25d18302b53bacbd8e,1,3,72c25e31b12704b66cf976a50949bde09aa66172 b2fde47979c313d1a303731f5c32e63cbb8a4e18 259e95b52505ce94e47f9a6eaa1c01381edc25a2,, RPP Fix for minimum scaled lookahead distance when moving backward,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | None to my knowledge |  | Primary OS tested on | (Ubuntu 20.04 |  | Robotic platform tested on | Seasony bot simulation |    ---    ## Description of contribution in a few bullet points    * Using absolute linear x velocity to compute the velocity scaled lookahead distance    ## Description of documentation updates required from your changes    * None    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new features **OR** changes to existing behaviors are reflected in the tuning guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2660,2021-11-04T12:51:48Z,2021-12-03T23:02:47Z,False,none,7f0826efe47c0cc4cb58c5bd33104f6e7994d631,2,34,5bdf914958521e30e25f7d81454f74130b828453 7148c4d261e5a35262724fb18baab89eeb14fc36 1319bb03629734d0c986eb61b59e0fcab4ad51f7 4b3391ee01993e97cc8a566363581108d1f291da dc3eb0508824a6c12e8fc3b42c6879affe090d91 c73ae815c9d71c89bc90cb8ce11deb3c22c07627 0ebd02fc74f413402138b07a991e750bf65d2b62 7acffb3241ad430cdff4612e7f20cf5676943254 b8af16009b55da60be680463d72d65d443f6e775 bc1eda30d667a4c9543c043855237ef8a25e5acf a25cd438aa4cb08735ba9a6e9213c78b8ad7f528 37b519715bc77f276f2979ce7632602c507fde29 846cdb1de99f96a57723c47110371aaa6b6d50fa bdc600ffb17a1f1428845a5ea8a5b1baa4501a92 33cb0b61e69fad11d89310a5934e9072d9583718 3ead7d15b371729ab29091b7b1e96b25430286c4 0e470415f0d6b2672e350e2cc9271002b143cb10 e44b95aaa9ba78b8cc80475cfb6f5f7f4e2f7a03 e48b01a4c3a6b32e12c06382feac9ac89a8076a0 3ac88193c0b52c7e6e71bbf9de8818979f5996c9 ba9851280f747434f143762c6211d5eb8a34e9b3 5d23326589c20ba32059ac6ed987304910040dc4 f88c467705e4e711e83dd4a1860ffe1bfb8b86e0 8faa0f0550027edc7bf2640f23cff13b2af60a8f 18041cc551f704fb9d7d4e5a57e9d6eb6cbbdea8 00d5e96624ac059c6c4914b87d6e9ba4e9f23e8b 5fd009a18945ae8cec1101778d709e0b0beb1a00 fc4c2bf3a19315c2f2bf4e23c600a7c21d89f96a b38b4d55bb887c3c860a68c04fb486dbe3162325 789c103336440ec81546842abe5251b47db0ba00 30bd97aeed6bbd24b5a305912df1d5a80127e4a3 9f2ebf449ca676a1f5c6a9c8a35249703ac480ce 696dbcef9479e962b625b04334806ab4a6b3f72a f718dddf5db16b99041cdf81cf48ae2ba962280a,, Smac Smoother Avoid smoothing cusps,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column  |  | ------ | ----------- |  | Ticket(s) this addresses   | #2442 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | Seasony bot simulation |    ---    ## Description of contribution in a few bullet points  * Path segments with different velocity directions are smoothed separately to retain cusps    <!--  ## Description of documentation updates required from your changes  -->    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---      #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists  
ros-planning/navigation2,2727,2021-12-03T23:02:31Z,2021-12-06T23:02:07Z,True,2021-12-06T23:02:07Z,3e31f5ad7f1e570c1d751c8944c9b61a7a1578f2,12,4,580083a015b14cc3f5a76f84c7b07683ba16caad 4eb34d386c9c9ade35842196773e137d626230f6 b80854c28e9833968b04bee15441a3dd0cf6e916 61b3aa270d00c3c72c0c2a6334f24110abccc1c1,,adding reversing to smoothers,Supersedes https://github.com/ros-planning/navigation2/pull/2660    - [x] add disable smoother parameters to all servers (+ dynamic params  readme  tests)  - [x] Add removal of redundant points to temp fix up state lattice issue  - [x] Update state lattice file for beta  - [x] Update migration / config guide https://github.com/ros-planning/navigation.ros.org/pull/247  - [x] final testing (2D smoother works  Hybrid works  always picks up  smoother OK  lattice works  always picks up  no extra at all angles  smoother OK)   
ros-planning/navigation2,2731,2021-12-09T01:04:52Z,2021-12-13T23:37:30Z,True,2021-12-13T23:37:30Z,509854a4665fb2027263fdf183bae32b8d2992a4,10,9,16cd5136daccfb0ae464711d4f65bfe4a4c04e95 6715163d7548803c636dc5e3e3029e82eeb6d2fa 759b4acbe6236056de5bd51caa4d4361bb90e65e e5e7363e4c9e858ecf70ee994ffc840391b694e5 614d0e74fee7987cd6de1f02884b45f52f1c11d5 1f0f873c175876d7019ccee08bc50856912a9c2c a074e8106491067a457b46fcfd23ea4a0458cbd7 d19759c65bce4acd38163792657ab5f08b5d10c2 b76a8daba47623ddcf48d1ff1949d5e424dcaf27,,Smoother feasbility,Addresses  - https://github.com/ros-planning/navigation2/issues/2690 -- smoother issues    Docs PR  - https://github.com/ros-planning/navigation.ros.org/pull/249    TODO  - [x] occasional failures still where it does the full loop - guard against or fix  - [x] Test with various turning radius  - [x] test across 3 planners   - [x] retune number of refinements + gains + tolerances for smoother changes  - [x] test coverage https://app.codecov.io/gh/ros-planning/navigation2/blob/d19759c65bce4acd38163792657ab5f08b5d10c2/nav2_smac_planner/src/smoother.cpp
ros-planning/navigation2,2735,2021-12-13T23:38:57Z,2021-12-14T02:05:08Z,True,2021-12-14T02:05:08Z,43a1a1fbe018a2ea8b4743437ceeb241a37b3540,12,3,bad0e4bc72d598df392cfc2789df8a598b9cdb3b f9bb2924908a80bf609531016adc3e689f371637 e0ea772aa0f6aeb8d30c8d85ad0939f60aff6d65,,increase general test coverage,none
ros-planning/navigation2,2736,2021-12-14T23:15:26Z,2021-12-14T23:21:30Z,True,2021-12-14T23:21:30Z,ca37b228a3b96fe2a3e2c17b4ea6c7567222e601,10,1,17ca365a4a9a504a99f5561bd1840514fe8f1b3b,,Backport shim controller to galactic,none
ros-planning/navigation2,2737,2021-12-15T03:33:28Z,2021-12-15T03:34:00Z,True,2021-12-15T03:34:00Z,19dcf73385df10f3c08f9529ee7151a6138eb807,2,2,8a522cf80389556d1a60bd779c3ef9f3f1e627d4 682afc93b482a9e5b6377574d6b01698184292e2,,Apt upgrade with new pkgs,using --with-new-pkgs flag.    This ensures all packages in CI image are updated  preventing the Update CI Image workflow from needlessly retriggering and rebuilding the images due packages otherwise having been kept back.    https://unix.stackexchange.com/a/241062/213124
ros-planning/navigation2,2743,2021-12-15T23:54:45Z,2021-12-16T00:31:40Z,True,2021-12-16T00:31:40Z,ab4716216a3387308c79312eb79f04e2dc21584e,4,1,acbdc96fb2d82cb664b8ea570f32f17f7880e5d6,,adding dynamic parameter tests to navfn,none
ros-planning/navigation2,2741,2021-12-15T19:40:22Z,2021-12-16T01:02:27Z,True,2021-12-16T01:02:27Z,e9ae59165f8e040becb8928d322f7aef9fc2a9f5,4,3,918ba5f4b1cd004d59de8a29dbf9eeb4f1dfcb20 fdbba5d0406ef493abb977f2b4ecd641012a6ab0 3f73c1468c1eb0cb716576ed58eb1f1441a2b54e,, RPP max lookahead collision detection time limited by lookahead point itself,Handles https://github.com/ros-planning/navigation2/issues/2670    Dos PR: https://github.com/ros-planning/navigation.ros.org/pull/253
ros-planning/navigation2,2745,2021-12-16T06:11:21Z,2021-12-16T06:39:32Z,True,2021-12-16T06:39:32Z,51dc8e5ad88343c58ad4f9d778304d72f97ffde6,1,1,4a3fd6a5ac3ac745b94969b9eb5d4f940716bdd4,,allowing rviz to visualize laser scans again with rolling binaries,Fixes the visualization issues in https://github.com/ros-planning/navigation2/issues/2720  however warnings still appear in Rolling binaries
ros-planning/navigation2,2746,2021-12-16T21:08:17Z,2021-12-16T22:05:48Z,True,2021-12-16T22:05:48Z,2e489ab0ae65f901cb0f0b446ac145c8f03b3008,2,2,8bde115d76d8fbb0e43b472c83f671cdb36f4097 4aefa616ecf809e4fb787b54e0ad63641e191a84,,increasing backup distance and speed,https://github.com/ros-planning/navigation2/issues/2738
ros-planning/navigation2,2748,2021-12-16T22:03:00Z,2021-12-16T22:29:17Z,True,2021-12-16T22:29:17Z,4a6878c2f8fb95e5bc3be8e6f0b531d17d9bebb2,49,16,b96cfcb0a751cf475d7347bc69b9d67657e63c01 8c3eaaa329476f5e1a1a5ad5cb72c84c0645afcd 45dccfb0558b61ed3969242ac7d5d8c6db9f60ba a1eac8a2ad187a7e8b0b17f19627a761e58dddea ce7fc22196ff2febd0a958224aebbb55f8a4cfd5 eb5e1c4e35437a18851ddd8c815eb1dc75685f7f bdafb4826ffa5c475640f1fbf9f87a8b7c93355b 9cda0ebdf108862243fdb900468a0ad0b16ae1d5 7097d36d669a75399864c057eb4994f3184da038 28fbb9d50d8ee4310c2a77ca096c70873dde631a 5ab15d4d6a7612fac9ba2a0b9f01a18ed018ed9b 54e7fb0e65a53b2d47ab98e3a191fff456e3443f fb8e1b1bfed7a58091babce8914f12ac22b12c3a 436e99f1fccc8b11bb1ad922a8c369371ffd88c5 3878c831ad7e8fb7e7c6870c54be0caf15b644db c913f7e0d7698babfd7692b25111a49f136b12f1,,Galactic sync 5,- Improving BT action server networking error handling   - Removed kinematic limiting to RPP   - Fixes BT setting bug in BT navigator  - Adding footprint collision checking in RPP  - Correcting reconfigurations in Hybrid-A*  - Fixing rare async bug in lifecycle manager bringup  - General fixes to theta*  - Fixes for compiling on Windows and Arch  - Fix reversing RPP carrot finding
