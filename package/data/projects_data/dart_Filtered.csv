Project,PNumber,CreatedAt,ClosedAt,isMerged,MergedAt,MergedCommit,nFiles,nCommits,Commits,Labels,Title,Body
dartsim/dart,120,2013-10-30T22:21:16Z,2013-10-30T22:46:27Z,True,2013-10-30T22:46:27Z,6669e5635ef4d6a95c2b299a83167654a355f7ea,1,1,3534a823410afb3f0f7d86381a8ac044d335ed9a,,Switch to github repositories for urdfdom and urdfdom_headers,The urdfdom and urdfdom_headers repositories are being actively developed on github  not bitbucket. The bitbucket repositories are going to be removed at some point. This should switch your CI to the github repositories.
dartsim/dart,169,2014-03-29T16:20:55Z,2014-04-02T07:01:16Z,True,2014-04-02T07:01:16Z,54dca36df7b464ffca85a9ae7b8aaaedfb3bc2bb,49,4,6341a651f1232ac8b93f58b90928e28eae84afb0 6978f7d7e7b60a841f450eda2c16e40118c9257b cb3de512328313514f9aa3ba9c9044870d18747d a6b62f98427d8aec08bdd220769371226cef1544,,Read Skeleton from skel file,Read Skeleton (or SoftSkeleton) from skel file. Added following two functions:  ``` c++ static dynamics::Skeleton* SkelParser::readSkeleton(const std::string& _filename) static dynamics::SoftSkeleton* SoftSkelParser::readSoftSkeleton(const std::string& _filename); ```  The skel file should start with `<skeleton>` tag instead of `<world>` tag. For example   ``` xml <?xml version="1.0" ?> <skel version="1.0">     <skeleton name="box skeleton">         <body name="box">             <gravity>1</gravity>             <transformation>0 -0.325 0 0 0 0</transformation>             <inertia>                 <mass>1</mass>                 <offset>0 0 0</offset>             </inertia>             <visualization_shape>                 <transformation>0 0 0 0 0 0</transformation>                 <geometry>                     <box>                         <size>0.1 0.05 0.1</size>                     </box>                 </geometry>                 <color>0.8 0.3 0.3</color>             </visualization_shape>             <collision_shape>                 <transformation>0 0 0 0 0 0</transformation>                 <geometry>                     <box>                         <size>0.1 0.05 0.1</size>                     </box>                 </geometry>             </collision_shape>                                         </body>          <joint type="free" name="joint 1">             <parent>world</parent>             <child>box</child>         </joint>     </skeleton>  </skel> ```
dartsim/dart,177,2014-04-08T00:56:19Z,2014-04-10T12:25:01Z,True,2014-04-10T12:25:01Z,9e20e4ccac56ca540c25785eb9b02623006c02af,5,4,77b70b170a151308c44072362844db39ec4c5345 46141e8e8ee827f2364f0be958ff224188445dc7 be4edf2a31f08e9293e683a3919240c82f01a05f a26f140d5acfb6970be2c981c70c73628a5bf93d,,Fix Bullet linking,This fixes bullet header file paths and adds bullet link directories.  Currently  DART links all the bullet libraries (LinearMath  BulletCollision  BulletDynamics  BulletSoftDynamics). We should submit a pull request to bullet to provide a cmake config file that allows to link only LinearMath and BulletCollision.  Related to #174 and #176.
dartsim/dart,184,2014-04-24T20:29:00Z,2014-04-28T18:17:01Z,True,2014-04-28T18:17:01Z,none,226,71,69f9bf774d7d08c1036b9a8712bc22b808049c75 6793fc4d76a33a7207a5ac8afecd430cf8c07b9a 82f59eb1560de0f6de12a22627ecc60196fd0f30 decb47384a6a1c5d31e39c9871c5ec52179ee023 203e21384b4193e6b88765d11285e94d18bc3c88 6ef27e26495c523bab903f047fbf1ab031ed2d57 941bfc33b37aa35aec7b3134150e79539db6f416 1c6642665e8fb6f66546e70c3722d7ba84674378 a52dd199447f4c89b6eaa23772ed210794200663 a15a789700ae9337998bbc7a2b2e9326dabca2ba 38b51ace653162aa724da14eadb72cafc946d493 da1333da9b1075d78ee282bd8742dbbdfac9ee9d e1e30af3b6d5626e7226d1b3d1cd82756d560bb4 265a23355f325cbed074dd889de721b9ba74e01c 8a820516ca101fb5044f8478f125001a8cea64e8 dd014e0b5dfdc9ae9b8f37a25d37d1c6c230ab0d 9082950a31ec4e2c5420b97c6394072fff3af2f3 9fa52b232333f94ae27505a0df0b512734009964 4f285281d3869a77609cff7be3939538af84f519 1271d4198addbb424493a41cb3dba093f33c32cb 88a6dfc351ba88e038064a822ca3000efe147249 8f3d63f9c8beddb39bc560d56b4a1627b1e880ff fb13cfdbc92a17335d558d3d91005b7af197a4e9 9ad05d82169dc594289b6ac3828777a6044c1bd6 c5fcdfaa3eb43e4738a51625f43ec56ec46f9264 003632e4526a7af177acd6bcb2179ff5dba66551 b2266546c00ca57a0721de13383f9b0d99fec8c7 eda11ad4f3d87e4ccce0842e9fccdfab0167e6e6 1f0aeaa2deee4de0925368fdcc97d18b572f54f1 1e608555f57634acaef3661b2a17ffe011815d67 43d4f5aaf8ea94f588e262aeff2316bf8af70637 e4be0edc606228d213ceeaedb18b2969a7cf5eb1 e89b2f5a490a4bb1fb96a43db101fab570e96716 6eea1343d4c54f23ab44e9a95621558674b1fd36 9944ed8f748b88389709dc2dfff25846bc901a79 8b358b260d54d6a696e8428532214f20e63957e9 afe4519cfeec4dc12e6dd29506b8b066e2103f34 6abe9143c854ac03796648849365c7738f95586f d15ef085d1ed88f400dc36a72d352561ef00a9d0 beb68576078ef6195c522f3b0f04793fd1e4b92c 6cfc5de8c176c846a179139e4354e140d2788f6f f69448e41c461e6e66942f54145d347da386d913 985648d3fdd1c8c666f662460234948340e2c1cd 835494c5af21ec662332bffdea3abff913f97336 2a56c6c5542e3d59d8c2e1f15081364fac867bb3 821a2e74558fa33921cd00223b80712304d30352 b9d684d47d6ad939dc5d463f85ca7ef8a26b0ab9 bb00913751f70f6c510119d1285794acbea2af64 7c79c108183ba9f939b5e24b00aedd7cbc7803a5 103c06ba819fa0f94f333206dd592e8fb52bdeb5 1ff6cf73ad5ce5b15b3c47401fe3b84e5671568d 3fc57277fc5d217b6c14b81c71a158286910c289 92c7364c7f75b9ece91b84ece5b9620a25d6a6c2 7d12797b88d91994be22c5462e2fc6fdf37738f1 1b5323d6191f2675bb0193a92be6cbf8a131df89 cb749936583fd6f69fd734187275075cd1fb72e9 dbccdba0f8ddac7737ac409853aba158852bf115 a7fdaeee8789d466ce9b57810d591ce41a46a252 76d7d86d19fa3484630e340e34d4c3bf6209c6c3 d35f03fc3c3a0d23477faf410ffa6d12f32cd993 2b36fb7b175f14a4623bf4e056bce291c925015e 6307a4e554edce994f3c6d153dad31db211f8a0d cf823d18af7be4450cf06d1f14673aaf245a08b0 bc2cde663d8945dd4dbb281d3dfa655efb285c74 8ce380a6d9ffbac6f2df9d73209bc871844c0420 d4e447c5ba7edb4c211efcec9ae346eee21a376e 8d4e154dc1413d065be1599478fc3e122d738991 f19f72d74e88818eed54dc0cbe9f86298f88fdec 29c958e53c5bced47c1f0ef0b37fde1f57e954d4 084cfb66716b79ee3474d82e1459507b06c841d2 a92319a0ae92ebefc4e504b8a9323ef1c1e0006e,,New constraint solver and softbody dynamics clean up,- New constraint solver   - Improve method to construct LCP problem     - It does not require explicit skeleton's mass matrix and inverse mass matrix   - Add constrained group concept (similar to ODE's Island concept) - Softbody dynamics clean up   - Merge `SoftWorld` into `World`   - Merge `SoftSkeleton` into `Skeleton`   - Merge `SoftFCLMeshCollisionDetector` into `FCLMeshCollisionDetector`   - Merge `SoftFileParser` into `SkelFileParser`  Note: There is more work to be done but I'm splitting it here. The API is not stable yet.
dartsim/dart,152,2014-03-14T13:12:00Z,2014-03-17T20:46:01Z,True,2014-03-17T20:46:01Z,159ec95a5dfa12cbe5211d1a42965fc204697e41,36,37,9a4393528e556637969a3f4a3a8e7f760b707dbe 12f58c0b3d261a3a84a5323dcddb29e919383b8f 0fa16ea75311771cca49e4f9d5bf409dff521b2b 8fedb36aadc884c6f2f5c848c91818d85f7b850b 8660235aa4422af9d793ee81e85d06472464522a 6e413221508a7534e0e60326c50fb85a5b248bbc f8b54cd2fbdf76ef8da51e173dfaae4675e14e8d 18bb6487c51281212c26960097bfb8a1563c9e1c 08ffada69a000e54258fe5c3b02bc8e65851e037 39873a512387ecff5e9b3cf966b8e8a42b58fa1e 5132e8b5efd77af878780f12d7b776671b75b928 a89718af64fdeeb85edf331bb459c0ef52b87258 b64431c7c47618a4887001b453e7f9534e96d1a4 cb7f3d426253ede3afb5b87fac92b0d913d30580 5ce291f542512010410f12d4d6539bde0ed1d8f2 1f9134d2347537d681bef04dcb91977689584801 8f26bde97950a2602c60393a20c54ac544a16b0e 0219af6ff7fe89539f90f9844395f0d90f8f5962 f3809dd7923a9530769fc8699a3a04dda82d7648 cd1c4dfab38acc2b291968616d2a96c7bf1a4ba3 5a96e85a259c44a757b9a11f16d88a270c5d3b0b 68aba478ba1e6b1bcb71c7aa1fa21f07074135d2 d46b760ba7458d70436df37b611d1da03d4a506d a8e8fd2266caf9ff549c829b5794ab2b6fab73b9 3eca24f26b7bc0c4d6651f92cf974d586570dbf7 0c27325566e4dae0dff8d7677cea6e76fd9eb67b 8f6c130d9b1e53282e4db6899e76f6646f17bfb7 fe3d1eb6c204768bf48bf971c94c01e075edf80e 5c8c91b353161214fe527f1a930738fecf5716c0 692d7e7c3f66699e23251d68046fbb04a7ea0daf 41af2f5236abfcc2c564f3cf502e38070d89d222 d9129a259e33f3d3f62d37255bbed9c7a2a85779 9de9efc6c7d365341028343760f4e3f6d2aadeed 3c87d721479af6a1396ec641aa105fab1a250139 da8c0963c815b3b5640c96831b3ac8f36b73b390 3c48d66a3329d62d50f4680cf2db7905b60c9cf4 24c66f2ff195c616294758a508c15fef756baa58,,Clean up optimization interface and add nlopt solver,The previous optimization solver of DART was dependent on a commercial optimization package  SNOPT. SNOPT is well-known and well-made package but open source project  DART  should provide alternative options that use open source optimization packages.  Considerable open source optimization packages are [`nlopt`](http://ab-initio.mit.edu/wiki/index.php/NLopt) and [`ipopt`](https://projects.coin-or.org/Ipopt). Both packages are delivered by Ubuntu except for `nlopt` in Ubuntu 12.04. ([`nlopt` packages](http://packages.ubuntu.com/search?suite=all&section=all&arch=any&keywords=nlopt&searchon=names)  [`ipopt` packages](http://packages.ubuntu.com/search?suite=all&section=all&arch=any&keywords=ipopt&searchon=names))   This pull request adds only nlopt solver  and ipopt solver will be added by separate pull request later.
dartsim/dart,215,2014-07-07T22:44:36Z,2014-07-08T04:58:13Z,True,2014-07-08T04:58:13Z,990ce066831ea92b1c53bcd5610be32a300f677b,2,1,daf6a88080d971fe8008abc7715944e720024373,,Refer to debug version libraries for ccd and assimp on Windows,
dartsim/dart,130,2013-12-26T13:48:46Z,2013-12-27T20:42:53Z,True,2013-12-27T20:42:53Z,d69ace0428f9594d2db2530ed34662c014554a86,1,1,ace85ea1abd4b4af32f221959057bd5177249687,,Installing 3rd party library packages from ppa instead of building the sources directly,This pull request makes Travis-CI to follow [Linux Installation](https://github.com/dartsim/dart/wiki/Linux-installation) instruction.
dartsim/dart,227,2014-07-17T19:30:11Z,2014-07-17T19:30:27Z,True,2014-07-17T19:30:27Z,f9415eb49bdda79575da98e973e2c820a41243e4,1,1,12cc6b2a04b207155fa672b84adf52aa3ffa9373,,Fix creating working directories for abi check,
dartsim/dart,226,2014-07-16T20:19:34Z,2014-07-17T05:31:49Z,True,2014-07-17T05:31:49Z,39af6be688fa141972857a05a17227a3b9c4b9ce,3,9,bb7c5368ba9c12d55317b518d007adcd50ba6dc3 81484dc9d04594829fb61471303e2d218803bfb3 6c9802573617ed2cc71a89d597c866f2af2a715a 3d5069ac3a2bc09a1e2b82a2fc3aa8474c3b60e0 99be53336d3359edde2ae9ee2e254ff974885030 3b8fd6d03d5d69ba48aa45e8fbce9f4b1fe98d38 f1c78a99f683c449bc47a572da2b5a56705cf499 2563e6c676225b9d14fc3dd08b2ce238740fd213 d9535bd474d53863eae2904c35bcb45543fea390,,Add ABI check shell script,- `abi-compliance-checker` is required - Usage:  ``` cd [dart_source_dir]/tools ./abi_check.sh <old_version_number> <new_version_number> ```  Example 1) ABI check of 4.0.0 and 4.1.0:  ``` ./abi_check.sh 4.0.0 4.1.0   ```  Example 2) ABI check of 4.0.0 and current:  ``` ./abi_check.sh 4.0.0         ```
dartsim/dart,217,2014-07-08T07:43:47Z,2014-07-08T09:32:25Z,True,2014-07-08T09:32:25Z,0de9d8837d9c46dff3c884b085373e1200deea31,2,2,d21d9d601841755a525ec0d349948d5fe4f28dd7 edf2a8fcc7a1e5d590671755ab903a86d7f77fdd,,Fix supporting Visual Studio with DART Prerequisites installation package,- Fix referring to debug version libraries of ccd and assimp - Add option for Runtime Library (/MD | /MT)  - Installation instruction is on [wiki](https://github.com/dartsim/dart/wiki/Windows%20Installation%20for%20DART%204.1)
dartsim/dart,269,2014-11-22T21:23:12Z,2014-11-23T20:38:30Z,True,2014-11-23T20:38:30Z,3ce1c3cee6927eab60d08c8cf875916d1ae9ddd4,3,4,1b98c3d81f8cb82f3641e63bbfadff9672adba56 943052b6b87ecce2a04ecb0b42b6df179eb2cf05 09d9cd7c3776f2c0b7df664bea2aa045d600c9d2 a24ea03d07be33b6d3aee4aa145572701e0dc07d,priority: medium@tag: build / tools,Build test on Windows using AppVeyor,AppVeyor enables build test on Windows platform with Visual Studio. Fix #249.  Build test is enabled only for DART core. (see #270)
dartsim/dart,278,2014-11-25T21:22:43Z,2014-11-27T01:26:26Z,True,2014-11-27T01:26:26Z,13c644fe7266ece77426b5151f28cfcc218186bd,111,7,ce8f94bc5894b02c821523812c7fe1f04b1b0ad8 bb7f411bf72728c626cdcebf1e4c28f29c45f291 cedc70b8ffa00f41fca41195301517ebe1f34305 198b4cdef2d9d68dccc51cfe3aef6ff5d986d6a2 455880a39dccd08b0c4d02b3202901ac7a8721d1 0f4257d274ab11f403b1198483f1fc7e28ea7fc9 1d149e1b6002ba5c6f5d0be1c47fbecfe4767d41,priority: medium@type: feature request@tag: build / tools,Use individual cmake files for each namespaces,This pull request divides the single cmake file into multiple files for each namespace. DART have some optional dependencies such as `bullet collision`  `nlopt`  `ipopt`  and `snopt`  and there are optional code  which should be built only when the corresponding optional dependencies are installed. Previously  DART has used single cmake files to build `dart` and `dart-core` (not examples nor unittests) and it makes hard to control the optional code to be built depends on the corresponding dependencies.  Additionally  this pull request adds all-inclusive headers  dart.h and dart-core.h. We had to include all the necessary header files of dart to write a software that has dependency of dart. For example  this is part of source code of `hardcodedDesign` app in dart:  ``` c++ -#include "dart/collision/CollisionDetector.h" -#include "dart/dynamics/Skeleton.h" -#include "dart/dynamics/BodyNode.h" -//#include "dart/constraint/OldConstraintDynamics.h" -#include "dart/dynamics/Joint.h" -#include "dart/dynamics/MeshShape.h" -#include "dart/dynamics/BoxShape.h" -#include "dart/dynamics/CylinderShape.h" -#include "dart/dynamics/EllipsoidShape.h" -#include "dart/utils/Paths.h" -#include "dart/common/Timer.h" -#include "dart/math/Helpers.h" -#include "dart/gui/GLFuncs.h" -#include "dart/gui/Win3D.h" - -namespace dart { -namespace dynamics { -class Skeleton; -class ConstraintDynamics; -}  // namespace dynamics -}  // namespace dart ```  This number of lines can be reduced single line as:  ``` c++ #include "dart/dart.h" ```  or  ``` c++ #include "dart/dart-core.h" ```  If we want to include specific namespaces of dart then:  ``` c++ #include "dart/common/common.h" #include "dart/math/math.h" #include "dart/dynamics/dynamics.h" ```  This fixes #158
dartsim/dart,298,2015-01-07T05:04:55Z,2015-01-08T21:14:55Z,True,2015-01-08T21:14:55Z,7a610554062e72994a47643205bc79e0091c41f4,58,38,fd4df6d781d9e12e0883289c9d7b9b1dbcab63f4 a15e6d3de2ebada68d41abb2f5e685f73b72afdd 844ea919be7db939da92d3a0961c561c96ee8368 4b31757ecdfb0f64791fdbdb349cc245434e8398 46c398de22d6c342a8cd0d103620aa55a63b35fd e9b9040365bafbd896191a50d7b241b017dde0d5 4bca02c381080b716b6696a6a1695870f5be0805 905d5269e4f50c4145fd76f1c450e572ca503302 b0e5370251bb2c8ad88a0f504df86b833bc51fbd 6483a2a3133e201533b98e40f7b992d18da4d667 62614e5b3ef815494daf16a084fa0c45950e6994 26d41899ddf4c0e8c53f1159e1862158d54759ba 06426750d79a43bf8b83ce6d27cdd21f5d008847 1df33bc999fe6ea109f677d11ae2afc3423beb3f 27cf4dc6c885f7c8e2d0d736ab97ef3161d707d0 2219b4c4117ade3c301a6958ecfe75e3fb059085 e68ce598e70da6ade932a3b15f0e7602b44d4219 794cb82dc2e31da6e6a985137fc7112983fd1376 1a58c96fd2ea31555d6b2fd265df31e06b4f11ee a63491565ef5db459e3cc3df9071ed11e90be3af 1483844dd9210cc52c06f7385f2a5e29b7f39a20 39ab55d1b49220fc80bf602364bcb7a778f662d9 9efcffe14aaf8eb55ff5c355b1ef8c89624fa804 aa1411775c8fcf97522d6207dc949a588d96664b 49565ac459b62173457f37e436e533949c11719a 3d006d44e66ed87374e72823132ae3a28c523124 435ae62476a99d315d69048395f015fb4236bea3 64b78d88021a62a1f89ae171cb61f621a98e2b5e 79aa74f606fd15488a4a59067e7127df1a9c500b 3cffe2d94180ee0f0b39a12e08949b105b85003d 438e680001c099430c1d9b317b2e014aac6dee2a b6f7c915d8f4bf52b1ca63410f12f28e0d73d728 0e72171792157ba7dc75c251ee3f61211e5bf1dd 90a52ccb7dbdc86193e494c0172d7758ce39b20a 08bf6e29f4a5814881fb486284c665fb66af41cf 3fa032f173dca0e1fed27c7f07b0239de9820177 60af0bb2851ee5c07069fdb008d33d074a46c02b 958ea75faf30217cfa0f2d12beca71d655da72ed,priority: medium@type: feature request@comp: dynamics,Hybrid dynamics,This pull request adds hybrid dynamics. In the hybrid dynamics problem  we are given either joint force or joint acceleration at each joint  and the task is to calculate the unknown accelerations and forces. In effect  hybrid dynamics is like performing forward dynamics at some of the joints and inverse dynamics at the rest. Hybrid dynamics is used to introduce prescribed motions into a rigid-body system. [1]  This pull request also introduces joint actuator types: force  passive  acceleration  and velocity (servo is not implemented yet). The hybrid dynamics performs forward dynamics for force and passive types  and inverse dynamics for acceleration and velocity types. Here is description on the command input and the output for each actuator types. The command can be set by calling `Joint::setCommand()` or `Skeleton::setCommand()`. - `FORCE`: The command input is joint force  and the output is joint acceleration. If the command is always set to zero  then the force joint is identical to passive joint.  - `PASSIVE`: The command input is joint force and always zero (ignore command from the user)  and the output is joint acceleration.  - `ACCELERATION`: The command input is joint acceleration  and the output is joint force. - `VELOCITY`: The command input is joint velocity  and the output is joint force. - `LOCKED`: Locked joint always set the velocity and acceleration to zero so that the joint doesn't move from the current position (locked)  and the output is joint force.  The joint actuator type can be specified by calling `Joint::setActuatorType()`. The default type is FORCE for backward compatibility.  We define `FORCE`/`PASSIVE`/`SERVO` joints are dynamic joints while `ACCELERATION`/`VELOCITY`/`LOCKED` joints are kinematic joints. (see also: `Joint::isKinematic()` and `Joint::isDynamic()`)  Example app  `hybridDyanmics` is added  and basic unit tests are added as well. `SkelParser` can parse the actuator type as an optional attribute of `<joint>`. If it is not specified  force type is used as default. The description of the updated skel file format can be found at [wiki](https://github.com/dartsim/dart/wiki/skel-0.1). Here is an example of specifying joint actuator type:  ``` xml <joint type="revolute" name="joint1" actuator="force">     <parent>link 1</parent>     <child>link 2</child> </joint> ```  Minor changes: - Enabled `JAVADOC_AUTOBRIEF` option of doxygen - Deprecated `Joint::mWrench` - Deprecated `castUIntToInt()`  [1] Roy Featherstone  _Rigid Body Dynamics Algorithms_  Springer  New York  2008.
dartsim/dart,299,2015-01-15T19:44:30Z,2015-01-19T17:11:39Z,True,2015-01-19T17:11:39Z,33764d99fbd6a341c2360849f278ea6f20167a96,4,9,e554522f07dac53c693a1bff712886a9734d41dd d46fba91744f71711e743cea49e114e6af1c24f7 aa4edd35104e44fea6582e920420f4cdc93b296d 68166e06645841a9248fffcc147d133c8c6c9158 34684431564f1a504102c31321f3cd868cd0de2c 162cadfcc419a721a04b80eb197bc52d367b7101 126d90ab59b8a83619d34f07ce250887dd4e139f 16ad610f46b67507f58c0a9c67e01028aa3e78bd 92ffbe5cf16eca8a9a7f61def5ad0e57b6413068,priority: high@type: feature request@tag: build / tools,C 11 support with Clang,This pull request enables the C++11 support with both of gcc and clang.  The dependencies gcc 4.8  eigen 3.2.1  and boost 1.55 are installed on Travis-CI for build test.  This PR fixes #267.
dartsim/dart,309,2015-01-21T22:43:18Z,2015-01-22T02:35:14Z,True,2015-01-22T02:35:14Z,d716c05453ca43936bc2104f3235fbc59d721f09,11,9,7844e83cc0eac9508b711fd564383a915bbf8558 f5e890ecc7a37751e54d826627628fb7b439c5b8 0c9b31a1eb483c38d1cae82603c0aab7e62fffbd fdca9e894cea3cbc791cb81a785b4094a332fc6f c025e3f0318c20cd63f36e8a282d9dcc9d81d4e2 89534ce88b6687cada99147cee04d2aff5e4ca50 4b95dec73c5d1eabf46617b066045ea6adc61087 5d23b6eab0680dcebe5c76dce41f0b796f798106 150f2260606cd40e45c018bcca9931044f13bfcf,priority: high@type: bug,Fix API compatibility of dart 4 3,This pull request fixes the API incompatibility introduced by dart 4.3.  Fix #303
dartsim/dart,306,2015-01-21T00:15:24Z,2015-01-22T14:53:53Z,True,2015-01-22T14:53:53Z,5eaa9737cff16ab9aa18d2f56b78703ee8c1ec41,18,12,fe8eca2fd13c287f1ead8e69fd0c8d908c2cf124 d2ab3a458ef7e5db114b98633ed36a9e5ce07b11 72a640482d053eb74f1ff312f047b338e49c4c38 e818f4a9cce9f5147ef3530d21b84adab2fa8796 5931f8ebb976742b91ee27979f04185f3b242ee8 ed472058b82ff5677ce2a11bb6a195bf6c6163c0 d91d75862fc018be8142ad91b586bb8801de5a42 82632a2d33da6bf4bdeb4ee45fab92ca8245ddf3 21e3ad420be087d8452836329c0ee57587949eb1 64a77c47b4738e741aeea4da8d592045bdda86c8 914478327fc61a9fbf406168aadf305c2561f9f6 7504c987262122b0f69a939b4ebe13fd75625142,priority: low@type: feature request@tag: build / tools,Specify minimum dependency versions on Linux,This PR just makes it possible to specify minimum required dependency versions on Linux (since Windows does not support pkgconfig file)  and remains determining the specific required dependency versions as future work. In order to do this  this pr: - Updates cmake find modules to be aware of installed version - Prints dependency version in the cmake output  Note that upper case module names will be used until migrate to cmake version that supports `FOUND_VAR` option for `find_package_handle_standard_args`.  This PR also passes DART version through DARTConfig.cmake and DARTCoreConfig.cmake so that it is able to print DART version in cmake process like:  ```   # Find DART   find_package(DARTCore 4.1 QUIET)   if (DARTCore_FOUND)     message (STATUS "Looking for DARTCore - ${DART_VERSION} found")   endif() ```
dartsim/dart,313,2015-01-22T23:21:11Z,2015-01-23T23:06:08Z,True,2015-01-23T23:06:08Z,e612a10e8a5e7ee880c87335f352d0091c9e8425,7,16,10decd38ad9a22a9f6c706455edfa5755bf76a4e 7231e74340cc7ae9b8ef4a4921daaf2e2ae6194f 9900e9906bd29ca426b63262016840b65f9d52a2 6c81c7d2f8628199b1047f230ef4babad11f45e4 ec7d1be1f92807251bc7135f1ebf94e1fabc671f 16971f41c5747bc909be03fb81eb34c7f739536a ecf3b723792e95048f2ca064eeb49c9a68f158fe a9744b27211c7af82c65a4a6a62810c720644866 cd5a267dd368282b5f5160ef19971a3fd0fc6df7 4355f8303d1003073fe35a7ce8b0c10e4ea63824 204f83a031b6178536c7638a8c474d92e2d38a49 ff9b53b6b3317870b3f125457ae0976a6568677c 23c3101b2f4d9b206f54074d9c6c5ccd4c85e32a d87d199a214a23350fe490f7d576c2d0a3a3213c ed3636f026b9c1de5bdae4073b8fc53d590b3c88 a02c1a0588797a8aa6b9ae6a2e1526c9a3a0c684,priority: low@type: feature request@tag: build / tools,Travis CI build test on OSX,This pull request enables Travis-CI build test on OSX.  Unit tests are disabled because gtest couldn't be installed on Mac (#312). Anyone know how to resolve this?  Resolves #258
dartsim/dart,315,2015-01-24T02:05:32Z,2015-01-24T16:54:15Z,True,2015-01-24T16:54:15Z,d2116d23e23a38296f9b8ecb555adf72ac97f220,40,5,4e0e7d3eff0859a91afce2ffbaf463b275bcf39d bd56f3135e1a2bfdd8414095bf95d1e6e522588c d591a39d80c66e77f18f19870da7001ad67366cb a17d8999289efd66ee348159576e6528dfcd4099 6fad1785700f3f491249f9b07d993a0c3921ac95,priority: high@type: feature request@tag: build / tools,Add in gtest source to the repo,This pull request adds gtest source to this repo to resolve #312.
dartsim/dart,319,2015-01-27T04:19:30Z,2015-02-21T03:31:51Z,True,2015-02-21T03:31:51Z,1ce8c7279195dd7ce6dd69f9daf877d9fae3bc0a,74,101,3823bca2bc04afad7cd05740f4efb017d24abc04 e2419a5c51fce9147481df538345861511952220 2b49a7688417213c374f09367f69584054fc7033 30c5e5599d0c3a00f176104c69e36cda2858212f a51d3f4971a1f26aae443eae9620da7a9ed6ba31 ea74a5f505d8517e6c72beb05f86308dd7064574 f72de76182b2120ff4558ee7b1c068e19175bdf9 1f2328b58c0125ec8c5fd0426b0617b69633bb60 8df2d5ca0b9ff823fe7c31be3c810c7bf978a1c9 1d3e9238e1d8821fd723c000fa8383924566245f d4cdf6a8dcf5a724b76e1285667123790b6d7956 d6af7c416cdbe8c81a660ef66304459a71f1a436 b8a20926f31936a2558bed8954516f802f774c91 61c4ba6fcdf12f4e382d58d99aba04827c1d9a0c e05052544265fb2a3b5ea310cfe7facab5390db4 6a50ac59c5624ba6e6b315351a144bf7259c2bc2 4890352ed484f086efc3a4261b90bb7118db1412 0bd6cbbc84eb101a3423d54535db8d3c7f8f3884 1357a11dcae81391683f1c557066f0bd8603ecbe d00e9f4d7f73fcb36e2bc55ae5bcedcc10f53dd9 72eb423c6175e71a2c28cd2493dca1ca9cfe4215 85e44d708543295cbcf74c24cc97ac36819aae81 677eab903a801f00c4105a7156a8571eb4fd78a1 61bb072ff965af2d2c0352ea228651d123bb2815 ef541d637349d208e78c6e1e8656553569e993c4 0520058e7a0aac46d147120624a0370883fa42e4 0499933601326899c6ad6f9460519c471859fe3c b9dabd1a10794d5a8c55b02beb3926f309b3d204 184301a699880a70cfc919f4e3305ac360950d49 f4f94d772da462fa17d9230cb9f99baa313430dc 00c39ff35d96b01a8e2d2c08d9f86d3a9c2fb128 233ee8492a87822c623eada4915ae1c05695b944 2a0fd739157b226af76310aab0ca89f8c033fe8b d213fa5a6ad8df607365a8f96b4e3cc7dabb3e42 cc7c08497c01a5c67a2d825718a06fd7678750a0 5c4aa6c14a91d8962f82311a65ed49daf1c09787 ec158655d46d515f62055023b9bdd6e52090e27a aed9493db19cb4a98b265f199d7aa18ed2caa25a 40898c66a0306bccd794db6781393e1f1400236a ffbefaa34f6d453f71b60834d0bd890e171df316 d58a0d19d5ac365707ccc0b9acb68f9b51e3fbdc 011b26d4ee20f459dc217edca46068a0666c3909 77aa44aed68355fb49b9a5308ab3c5297ece849c bba92a17d793ed3e3932384627c08b7954955c3f 92f434da4ed834140015654e0e7145f81ca03041 7a638624b8f5ec58558db29e5fae03b40518f1d8 ac9074c91563157bc25a3596c77d19672e569166 8e1655915428162635c9bbf7d14b9cc7ec713805 35a47e4798252985b15810ebabeead42830c355e d79f6c837f36d753e81bf2607011630f51f53cf4 1346645901f6ac3667955645bb34d54548cf3152 2d09965eaf07eceb024f45a80e96627eb0279733 1c3a1a204b00b7b716c9faf70549d4eead8d509e 2dc8eb72be244e93c656e7d8bc262075d57aa902 9c1906fc6d6c27324933c814aff9d74f8bf5a4b8 47966565ca54a54bbe7ca78bc4ca05751f002e1d 01fe794dc5789991d8f8e2d3075a19d535567964 90c4d9eba36c67cc96083abfd6d0882fac247b6e 4e5720e48df574d59d39f130c2e11293ed09cebf 6066b7de6cd2e3a0163671f07d1a427db9f5ba0c 171c5f988c7b19727aeec6b5026125ee2d5347fd 5b69da9f046119bc0c64162dc292f5d7ffbecf71 c57b48fbffe26ac7fb9a8f87964c7b2df19e7c43 0fd0a7bda7dc993f26779d522468d5bb3e059dd8 cd51cec3f5104d48648874554634d4d0dcdffbda 7b8e46d66f00139f0c116e79c0b93f970c2b3055 9845966c77ef9d471d2fac0b9de53b525b01574a 27fa8ec2d019080a0f7e6ba18b6ea1c7bf0b1761 773d9e3a10dadc66422d84ec1b01719bf2d640af a913a9f68ea178bc937c994d5d88acaaa080ee84 a8ef66d107e6194e2c6c345553aaabd2109880c8 90314ae00287420da47f5db104f0186abed6b8f2 391acd5a75a8e1f916e480d476028264c38b516a d3e5504d3cfa189e17792cce154c9060553e5a81 b7e7cc587026fc4205f0107bb96058c1a24c03c6 c7832c4630b2af3ca3d9c6e0fbad208a83563291 9ea388fcabd65830eeb57f7c356c12367de41b46 71b4b411f674c615b6497c62877ce912351bf0ca e6bd8b74eec8919b8752c242741ca11ffc06597f a47fdf4d01afc322e7af6b7cbca84bc29af18d7a 44cc773da779dea9cac25c862699d8495240730a b27583751bd9a72b9e0cea0304f0a6e671e8606e 34e7fd6bcb0b87c55caadaa2fa520fe312222a1d 9370e2d27bdc7615e66a0c896057aaf400acb057 738ce5aecab709e21486402c9327fa2ef0bcd69a 600789b3ec3c3ed419db813c125db589a16eafe6 8cc9c06857b5b9d55b0e412ae09157c620e431ba 9aba62e4f984f2164167369ccd9f17c3651de9db 3af4393a740c6c7747a2039601ef4b684646487d d4889d0a515734d9d5cf4b3e4168b31be41146dd fb474e6737756c5ae8989999317e64812e2f8d9c ce1784936b21c8376fa3f41f63ccf6164f67d7be 52219ab78549611b89db398005c5efa48c1774d3 15dbdf9866c4bd734a08db8e9b2e535bd335bd02 5bf0c0caa4eb14e8c8262360ab05f04dc76435b3 b57e2697155b81645808f93f2f8695e618f77211 22297dd6842773c7dc5b467d17c1c1d62aa3deca 86d3c2ffca8a135ed4184a389ae77c5fdcad11aa 5f3ced5e7bd8b791a610d1b15fca3a4d56b0bb53 5fac2732fd687aea4507d01dfc0bfdf47febcd1c 87b1e9a831916c90517ce2a96aeb2cc6b591ab78,,Frame class and auto updating for forward kinematics,This pull request includes two significant new features: a Frame subclass (as well as an Entity subclass) and smart automatic updating for forward kinematics. ## Frame  The Frame class allows a greater amount of expression when defining and requesting data. For example  you can now request positions  velocities  and accelerations with request to an arbitrary reference frame by specifying a Frame class as an argument for various functions [(as an example  see the getLinearVelocity() function)](https://github.com/dartsim/dart/blob/6066b7de6cd2e3a0163671f07d1a427db9f5ba0c/dart/dynamics/Frame.cpp#L165). #### Entity  The Entity class is simply a base class for anything that exists within a Frame. At the moment  that only includes Frames (because Frames exist within Frames)  but in the future it can include things like a Point class (useful for expressing center of mass or collision points)  an Axis class  a Transform class  and perhaps many other things. ## Auto-Updating  The other -- and possibly more significant -- feature of this pull request is auto-updating for forward kinematics. From the user point of view  the impact of this feature is simply that there is no longer ever a need to call Skeleton::computeForwardKinematics(). More specifically  forward kinematics will always be computed when it's needed and will _only_ perform the computations that are necessary for what the user requests. This works by performing some bookkeeping internally with dirty flags whenever a position  velocity  or acceleration gets set  either internally or by the user.  On one hand  this results in some overhead due to the extra effort of bookkeeping  but on the other hand we have much greater code safety  and in some cases performance can be dramatically improved with the auto-updating (for example  the computeForwardKinematics() function was inefficient when only one portion of the BodyNodes needed to be updated rather than the entire Skeleton  which is common when performing inverse kinematics on a limb or on some subsection of a Skeleton). ## Speed Test  To determine whether the bookkeeping overhead is worth the auto-updating  I wrote the speedTest app (note  this is not a unit test because it can take a while to run). When comparing this branch with the [grey/speed_test branch](https://github.com/dartsim/dart/tree/grey/speed_test) (which is the same as the current master  but with the speed test added)  the difference in performance between the two branches was not appreciable. I ran the speedTest on each branch ten times in "ideal" conditions (I freshly restarted my PC and ran nothing but the terminal) and neither branch was consistently faster than the other. Ultimately  the worst performance of this auto-updating branch was less than 1% slower than the worst performance of the speed_test branch.  By default  the speedTest app is testing the speed of dynamic simulation  but it also includes a mode for testing the speed of pure forward kinematics. Comparing the results in that mode  I consistently found that the speed_test branch tends to have _slightly_ better performance for computing all three (position  velocity  and acceleration); it seems to be a tossup when computing position and velocity (without computing acceleration); and then this auto-updating branch tends to win by a significant margin when computing only position (likely because the amount of bookkeeping overhead is minimized when only positions are being computed). ## Caveats  It's important to note that the auto-updating comes with one important caveat for all DART developers now and in the future: there are certain data members that **must not** be modified or even accessed outside of the appropriate functions  even for internal use. Some of these include BodyNode::mWorldTransform  BodyNode::mVelocity  BodyNode::mAcceleration  and even others that might not be expected like Joint::mJacobian  Joint::mJacobianDeriv  BodyNode::mArtInertia. There are too many to list right here  but they should all be noted in the header comments. The reason these members should not be used directly is because they are carefully monitored by the auto-updating system  so anything that writes to them when it shouldn't will invalidate results  and anything that reads from them when it shouldn't might end up using outdated data.  This raises a question that I'd like to pose: Should we append something to the names of these "untouchable" data members similar to how the [Hungarian Notation](http://en.wikipedia.org/wiki/Hungarian_notation) encodes information in variable names? Normally I would not advocate such a naming convention  but it might help future (and even current) developers if there were a clear way of immediately knowing that they should not use a variable directly. I don't really have any good suggestions for what the code should be  though. Maybe append "_dnu" (for "do not use") to the ends of the variable names? ## TODO  Mark functions that are now deprecated (there are many…). ### Final Comment  The changes that were necessary for the auto-updating to work fast and reliably were pretty exhaustive. Don't hesitate to ask if you find any changes peculiar  or if you're wondering why some were necessary. I had good reasons for each and every change  and I don't mind explaining those reasons.
dartsim/dart,355,2015-03-17T16:52:40Z,2015-03-17T21:12:40Z,True,2015-03-17T21:12:40Z,8995c42275c46703f8931a22db8c4b97f6195f79,11,2,05cf589a8936aa5dc032ed748565f92d91fb89d9 3796b75432b034e576e8663c47e625bef7798e50,,Move glut dependency from dart core to dartsim/dart,Fixes #329.
dartsim/dart,365,2015-03-25T15:34:12Z,2015-04-03T16:58:11Z,True,2015-04-03T16:58:11Z,0a4bd77a033c9d9b5c8c823c033f9907b06499c3,1,1,067f2e6bae6a055025f9acab7c30ae66e6c61148,,Add appveyor options for parallel build and detailed log,
dartsim/dart,334,2015-02-14T00:52:02Z,2015-06-11T15:05:27Z,False,none,50e7301bcb97138dd59254cca866126f5cc95bd1,79,3,e6962a431925e276c882e575998bf03520159339 09593fe0c8fe0b588cd9eea577866795a41dc3de a69295bf4e4261f4b10c70418c3b79dad7aeb7a6,,Use Eigen AngleAxisd for exponential maps,A simple fix to FreeJoint::convertToTransform(~) plus a regression test.
dartsim/dart,404,2015-06-14T23:55:32Z,2015-06-15T13:44:38Z,True,2015-06-15T13:44:38Z,973d59047a1911000b885978ba921d65d7f51a04,167,21,65b4f5b11d5c1e3614a94cb1a2ce034d7e25f1cc b163adb83cfbadbfe97b0d38bc2844c3abea975c 45779361602cb25ec57a4f79a25bbd443a6ea9cf 9678aa808aad194aa271bf7847352c24f3c6ce0a 0ea3304c71e926c1a5d58dc044bf1da923fa2eb8 6a3b88994b8eca1f59ceebed816a3ef285ba9eee 3e7565870bb5c135b49ee6ba931ecb03c49e7448 36777be73da5975ea0c5a31431fb0a22acdfb4bb 6dc95afc9e219ae52f6d549931db98d6cd4ee51b 8e5e7ac44cde44bcecc2ac2f4c51f14896dabf61 db8b1df822196417e9f65a8f1b9ee73a720ae4ec 3b09a3fc02a60ce9fbea082ba9e090de5c0f84b0 f3b2bc3ab3ef0556352029b121e07b7d394e42cb 672efb89a27f911fbcef825fdb4478634b64a78c 32b2fcd33c3419bc26d0b387c3da9b4715d6ccbd 6929f2ab55608b6c3763e8f43b974657011798de 14cae5890db90c224ecc90fbbc62b0b472e30349 ef5af9c7bdb8a9baf34da15abbcf1a3173c99f6f 99378bd8b6732c5f37d3ab5a3187f8ebbfc53e66 06594279624a79f7725ca3bb45b446d4a633fded fc87927662acbb1b2f16ce367a978e885aa1e0b9,,Polishing up for DART 5 0,This pull request - removes the deprecated API - suppresses all the warnings from gcc and clang (and most of warnings from cppcheck 1.67) - replace `NULL` with `nullptr`.
dartsim/dart,405,2015-06-15T00:41:16Z,2015-06-15T23:55:40Z,True,2015-06-15T23:55:40Z,d6dd2e49ee9156bd8d058d1520715c9cac00f69f,178,24,65b4f5b11d5c1e3614a94cb1a2ce034d7e25f1cc b163adb83cfbadbfe97b0d38bc2844c3abea975c 45779361602cb25ec57a4f79a25bbd443a6ea9cf 9678aa808aad194aa271bf7847352c24f3c6ce0a 0ea3304c71e926c1a5d58dc044bf1da923fa2eb8 6a3b88994b8eca1f59ceebed816a3ef285ba9eee 3e7565870bb5c135b49ee6ba931ecb03c49e7448 36777be73da5975ea0c5a31431fb0a22acdfb4bb 6dc95afc9e219ae52f6d549931db98d6cd4ee51b 8e5e7ac44cde44bcecc2ac2f4c51f14896dabf61 db8b1df822196417e9f65a8f1b9ee73a720ae4ec 3b09a3fc02a60ce9fbea082ba9e090de5c0f84b0 f3b2bc3ab3ef0556352029b121e07b7d394e42cb 672efb89a27f911fbcef825fdb4478634b64a78c 32b2fcd33c3419bc26d0b387c3da9b4715d6ccbd 6929f2ab55608b6c3763e8f43b974657011798de 14cae5890db90c224ecc90fbbc62b0b472e30349 ef5af9c7bdb8a9baf34da15abbcf1a3173c99f6f 99378bd8b6732c5f37d3ab5a3187f8ebbfc53e66 5369f80daeb52f6483903a7c3b7ba455858e2f12 c24b4d82768764ad157320e804144eba473527a6 0d11d2c5f6e6a67d7b1919d7440061bffcd94d75 36fdaf64855f44a933711be8bf3589f3158267ce a1cded975e85a85766c40c68a38d4517a604fca2,,Improvement of FCL collision detector,This pull request improves FCLCollisionDetector that utilizes primitive shapes and broad phase algorithm of FCL.  Related issues: #19  #20  #59 #### Caution  The current version of FCL has some issues in support of primitive shapes  but they will be resolved in the next version. In the meantime  you can use [fcl-dart](https://github.com/dartsim/fcl/tree/dart5.0)  which is customized version of FCL for DART 5.0. Also  debian package of `fcl-dart` will be released shortly.  You can still use `fcl 0.3.2` but the result will be incorrect.  This video shows the result when you use `fcl 0.3.2`: [![IMAGE ALT TEXT HERE](http://img.youtube.com/vi/uTwn4ZQpDtQ/0.jpg)](http://www.youtube.com/watch?v=uTwn4ZQpDtQ)  This video show the result when you use `fcl-dart`: [![IMAGE ALT TEXT HERE](http://img.youtube.com/vi/isNNFVvqsC8/0.jpg)](http://www.youtube.com/watch?v=isNNFVvqsC8)
dartsim/dart,369,2015-03-26T09:27:02Z,2015-06-12T10:27:51Z,True,2015-06-12T10:27:51Z,675b8de65b028624ce0d284ce1f7428de0277c38,176,154,a629753bf7352e89efda174bdfd6f801846ad99d 446014d5db31f54b4ac3e049319117406fc0592b 0658888b31fe0dd304e26465dfd22cb67a448947 5e16a07c2dcc6ba7e11a74425320eadc0cd6a846 98573eb630c21315fe504c4f96de9b754b8ab421 4ba7e645f1377a3f9dff2b1dcc98eb12e688f88d 96769eea473cbe49939d09787bb592ee1cd3048c a38547e4f180a5d4ea64cbc33e66bf1d143cd7b4 2f224673ce081b1b6f30a67393d732f5c0ce7cd6 b479c30a84f328df3907b1979ddefef410da813c e76fbe059da9fe63ea807f8d28183d2043728356 e81642a59e62801c2a8910816f57329b55892385 9dad4be5bcbcb7eb87c33b4135679aef3b85895b 9704b68697840e14f68b6aac4d0b7b816cb1d075 64ade0aad151e74d68a96e6886ade1ae5b44722f 7e7c88914e661aaab6e4bb23ef1830732f1ada5a da507deb737207d43cf23306d26277ab3cede1dd c8e7b6cfa86d6481c0727e662578d31a472975f9 3d5881e72bcb8c320f70ecc82312f9801f8b6fa6 56d2d33866e96c605b6d1e3560430e2d8cf2343f b233ad2dca26f7760bcb6d38fa7ec5c4a8a8f559 a2a039f8aa9893e255694bae3320524aca6994b8 4fc9c947bc9bdbd7c1f5edfa4972049bf653d921 6888893f8307fb245f94331f016ce2218e0d543f ccd0602868b6252f3925417af2ccb7e520d06aa7 58e97f7ff2752e6f463ae424dfb93ec6c4a83165 449a0bb90bc60a7d38c494b023a8d6b29b73ee21 7914df33da84e7010b2736d9c529c2de8642a898 17a32d75945c922f9abce6b2e2580b641e38e651 1199d67a5e38cfbe432a8dddcef3240c21c03a82 e615aeae5652837f47e260b84024fd46e540e7b9 062a3527d60cbe94ae2f3c289c3b74db377e4a44 49b274e54b1bdee99086703347d3caabb71c8059 526ca6f8b488f48e8c834dc558be4b52965b1728 a011da152399697b3ae09747fa626c6e49e0fad5 8e06164eac66ff6c2243aebbbb430122e7d3f815 e84797d82a03dd21e6ed4ca82da6a69bc1ccdf16 c4971ffac192a355724e3110639c6ac505fbad5a 69ff775ed736ee2192f6776c50d0e3cc879fafdb 4432a95d2d8b28ccfaa11b7489ac70ae25cacc82 23b9e6183d4e2169d7d1e02ad0f5b27a6f78e08a 440b7c34782f0f6e23e235b0f0899b570f6af328 6f0c941336e3785b8f22a97c2c79623b055c85c3 92fa9315baf9529ddb1a147c425b7d99e4f973e9 c3faa2cf246877b27225503ca32dc763f4ccb0c1 1cd828cd4a3d04d6ecf247c0ad393c432e905a49 c61dacd7964ecab7e0e73f625fac1371857ccc5a fb142f1739ad47dcea3c9e4d27f62bf3f428d0ab fff1f9c5baba8ea15d64c6a139ae7868a390c812 f6cf92143826630d9d6f4d26961c46ad93872194 d0fe4619213706fc376e2b7be0cd48c24c55c039 370a333eefdc6c5295811ff07c78a3190a347841 bb9be3db5e350f37f5835b29bfefcfbeded05694 5ee2403d59759dc70e55249b3da0d79c58c8de31 efd4bd5df5bb6fc4b44bd4c5e9bebc9be0751863 34c5f3afd6e999f66063d559ab80428fdc20b32c 6fc059df3f34379fd03aee468ff6f2b0c2eacd15 c04faa12f3e495a8407ae42b98bb14ba98ee9c9a ed35861f94a4494edc4629b95bfe53008adb7df4 1130d27f953bd237d203731e3e2be41359db685b d0764aaaff9b5d919c8ea508d8baaf582b006c9c 4f327656645f1e61131fd5a17b9ab54477847a29 91ed8fccb55ef4aa0aff522be4fe04d8cb64e463 2648d4a6d752122d7d5e5f73b8ec8feb6550bf36 b1066e277fe1362a3d0131bb212a5104f843db97 536e7774297e23835236cd7a0c0b9852f07bdb76 98d02de24cef15ab121b8d96acd69a1a90528856 298450f307a590b1238689c5a4e2291e00751ac7 1dbeafa2c080c0502a9ddf66f1c83cc10e639eb3 4ad76eb432764d7c31d5de75f41832abc2ffbe41 046820d67ca7dd4f97a210c2d3802b87a332af00 e09f223325c02be17fb3cada3cb53ae5b860be35 8b87b1d5ad3c4ad4bff635b28c366d27a566a5dc 6d64995ee031164f3ad7c33ce492799050379be7 d601569031c6441ee45e414720c2c375319aa818 c60baa5951c8b3d84247dcc4ff943e8b9d9e50f3 adf63f4efb2ea5c8331c74a2935ebec2bc723113 56e2c2a44ec0a09b94b31a4cf1e0c1642c909fb5 f5f81d9e4b257472a30c1468c5b23d8d6e8106d6 f74a1141136da9f30f9bcbea6a27eb94a9317254 1d0c4e79c22ac00210132c6a8ae7c721a97e87f7 44fe5ab3835809aab93c2cea2e991d2fe083c081 35725fc4267d16247904dd6f8a1016c7c06ffede 2f2c52768aaf9d2653217507095d3d61a9e98697 50dfc08f4cca6ff3162d4543776b5a2902228466 a1cac456e460bd1f53164e6d531e829b81c0c5b3 60398f9b6914791a8be2c5a7f55eafa64d05e720 266a0c9691dfb84e78cabc27d44f6b6a184db489 3b36db4163f46587b698f0cd191430df731963f6 32408ce3e0e26d8daf9d6d35c7503f49fc15c403 a37ce7e679cbaaaaa95965556c8492763fc8595e 397c553188d808be4ea30541cb0c640bf0b4dcff f61ba07253a235ecd14731d0f8b46c8bb37a78a8 9671b0dded7b7f56ca0a9d958f937f33cba2e69f bb223d5e3d06149e70eed97be8be1c3108c06fdc c9aedfdc0a4743c6dc1617fec3d3bbed58463e3c e3043e3625c3943a4f31e6c0ed508fffcc99326a 3e3bb1fde4d1c8077cadb83c25089533f01ac74a 802ec21412079644ceb8b9485ab7705e3ab0e265 7aa1442b06223a656acd2871a4fc88594a021c8a dcd5b84e89268d4f028442a4b08c43e82714d64f 22aff66c712c258b6415cd338ee8e2c031c3610e f2ffefd19f97e2f13feb410a0b79aa28a0eaa6a4 bea1eea48e91ab6846c8c92bc37b732bd8f51bff 6c96391b074ba887aeed7bd98fc057690129ec45 44c299813ca88d1b4942d266b7fad1717b039c37 974d7b07759d4591e1e67518bd9ef2bc52afa189 15e71d621d8d77a8efa12cbfb7a3554c9b07f90b fb0ce925c9db90c4e4fbd41cc73fbd2e57a4d8cd e94d6a39b6e758a7c7f5f0bdfe60269640001fd1 041969bbb0619d937b2202815d3e2c18c5b17cd7 71cd7b33d6776baa666d3c44ceecc619f6526124 15679cc838428b647306ccad030d2154ed46908f 5f3275e92b842e6756f1909892be7ea4c25739d1 f63d0ff246b61da7e8d14bccfedfe2726d08c818 47415ca00058d8e633548e9512a07adff05661ca 344e64fadbbb18a1aafde1291e078732ff1ec10d 2d9e06b6e459ffdd1bd70907203a731cadd56ff6 54ae12f463d3d6e6de44d8b8fdb57bd08be6d41c 15a0259b095ff60739ae2b7df2fd05384d6f3a14 f7f7c28d20621d89b664deaeb1583b0496289ad1 169613c0ce1fa1888c20c26456822b57de896c02 8a58794ccb132f43b35627abcd0552c847238fb3 cbdb20d39654ccd46a0900437cd86ec91ffb706e a3945bca16e82c3ad6a71367955e0721e25d5b74 a5039c987de0f04087c80853ec743fc1306d0b90 856b499f634d4957679e7dc65330991231ababa2 bfff3c738ce5ccc96cfb58847f05572eb080468f 29ac9f5e03dfda956c8fc01c671064e7e2085444 c127038b91914f1a65d4e0b877cf053ce3ff8184 f2d94753d668cd77a2ad5efdc56af79e6d4b760a 1d066a27c801ea11cf93e7b8612180c99ddc3149 876fbebf38b3104c6cb40d0d38df908578561ca8 dd81f967ffba8e75d45e2da2a5823742dda8c65b 0e642f637db5cb85efa3dd1e706ea3dfa5ff94d1 3992a5aa55bcd08c8a5950cd8c66e6cba77e655c 2e4c7ccaa241773b776ffd32e36ec123c91508da ef20002c02d697dc8f433a922153149a95a6000b 640d8a264f771c7fc60af0161eb3ea03ec71bae9 7bfce9111156558f112d33ba9ee1d9a94068f6f4 ebde971490dd4b5d869aa9249ae1306c884e50b1 57cc22eda6ef96ea36224d62108e6680473b9167 6f00f803c0a99b21987472e4ed75ecc9ee5f38d3 9b10c63c3a4c0aab349227256dad755e5151fa97 11485eeda68dd16b9f39304d1960ba5a3cf9ee6d a4e011a4b1fd6e6227bf5bd58825114049418a18 9c97ec6b2e855a624e458b5d254c35d13ce81dd6 268245bb43fb14c416f4a93a2d46bf82bfe524e3 6094b7725648331ad17776d64124e611e7beecf2 06f137ea0a13f83c03bf19f99412ed0592a0ccf3 67064ebd6467dc743d61c202203641df9132f682 2e29332601efa8ac1f1ad0b2fb61b8f11900e517 bc6dbb27eb5695c8a8563eecc7e33f1c1c150a01 7e93e175136c549174aab9532a4dd4601303d324,,Eradicating memory leaks making classes copy safe and clonable,~~This is a premature pull request for review and discussion purposes  not ready to be merged yet~~ ### This pull request is ready for review  This branch and pull request are dedicated to removing memory leaks from DART as well introducing the ability to copy properties and create clones of objects. Spawning clones will be useful for making efficient multithreaded applications.  The changes being made here are pervasive  and some will require breaking the API  specifically the adoption of std::shared_ptr for the Shape and Skeleton classes.  Here is a brief list of the conceptual changes: - BodyNode and Joint classes will all have a Properties struct that can be safely exchanged between different instances  and this struct will be used to standardize the constructors for the different types. - BodyNode and Joint instances will be fully managed by their Skeleton. BodyNode and Joint instances will only be creatable by the Skeleton class (the current procedure for assembling Skeletons will be deprecated) and they will be destroyed when the Skeleton class destructs - Shape instances and Skeleton instances will be treated as shared resources  and they will be managed by std::shared_ptr. BodyNodes and Joints are not shared resources because they are worthless/meaningless without being part of a single specific Skeleton. - It will be possible to clone Worlds and Skeletons. - Cloning a Skeleton entails creating a new Skeleton instance that is filled with new Joint instances and new BodyNodes instances which copy the properties of the original Skeleton's Joints and BodyNodes. Shape resources will be shared between Skeleton clones to minimize memory usage and copying overhead. - Cloning a World entails creating a new World instance that is filled with new Skeletons which are clones of the Skeletons of the original World. #### To be determined:  It would also be good to have a concept of a "State" to complement the "Properties" concept. I am still hashing out the details for how a State class would work  so suggestions are welcome. At the moment  I think the State should belong to the Skeleton  but it's not clear to me exactly how much information it should contain. It could either be just Generalized Position  Velocity  Acceleration  and Force vectors  or it could also include information like external forces.
dartsim/dart,422,2015-06-26T10:36:34Z,2015-06-26T10:37:54Z,False,none,ca1abf74d6e3dc3dac501d57b1bc6f0da96eb390,24,27,f7cbe318c278da010a88cf6be130b472a36867c8 7a470d324c96e5031d60301da45f6e2a31acb859 027c2a1a12f0fa441b7fc19f178eb223d8c4ced3 3fd483dddb7ba6a9ad09aca3cdfa16fc91b6edcd 54e1d376ae0f8963396b34ddec1b77ebaf5c8f07 ec8e9e2b2285c3c3384b2f9cc9b4c072fe6375c5 76fbf24cfc8da7055c962f869c85b1682b78bc65 dd21616a8d1cacaabb23fde622086b89454f9607 1491e78b0f81984eed8bb7c40f9baa8e5762e4b4 8cf601fe9471093447d815bf39dccd61023c8efa 72253b2eee1c4e0096936b222b201f3a600094eb 51e414c4abf3c062515544fd4b22cf60720fb26c 41b52b9baa37148ab7ba52cd55f0e19f084efff4 a3f56da0e71d59f9599850a689218ac95cb010a1 c558097d3edf387b9d37332672b32a021bbb8fbb 00a6369cc348ade37acea715ed896f93092cc3af 3d834243daee1b584f6a8da21cd838d227d9036d aca6e39fd4b2220ab8695b0399e13ccd9b102bd5 f9819fd3c9c5426db340571b00930feb8e0bb15d 3e3367535ebb36f4378f5e5f179c8050e303b831 ed7f141fb7721ebf0e1ef1903de50c4d9f14d209 0c743f5ceb3ef1cadaa26656b7208c0024371b74 b710756c31ae29fe137b612df16e918f6f636b3d 71763eb2b05898ea07e10544fc17489601f01187 beef607fa8bd320e5e8eae904a8de3a059df698a 3af870bd37d6a048e98d1cddfea23b1d848bfd84 966af760e8b2a65756bb13921edca82f88c59e42,,Basic structures of tutorial document,
dartsim/dart,403,2015-06-11T15:06:41Z,2015-06-16T02:32:29Z,False,none,91fc73162fe0fe97599439b8e60acacd18794818,177,153,a629753bf7352e89efda174bdfd6f801846ad99d 446014d5db31f54b4ac3e049319117406fc0592b 0658888b31fe0dd304e26465dfd22cb67a448947 5e16a07c2dcc6ba7e11a74425320eadc0cd6a846 98573eb630c21315fe504c4f96de9b754b8ab421 4ba7e645f1377a3f9dff2b1dcc98eb12e688f88d 96769eea473cbe49939d09787bb592ee1cd3048c a38547e4f180a5d4ea64cbc33e66bf1d143cd7b4 2f224673ce081b1b6f30a67393d732f5c0ce7cd6 b479c30a84f328df3907b1979ddefef410da813c e76fbe059da9fe63ea807f8d28183d2043728356 e81642a59e62801c2a8910816f57329b55892385 9dad4be5bcbcb7eb87c33b4135679aef3b85895b 9704b68697840e14f68b6aac4d0b7b816cb1d075 64ade0aad151e74d68a96e6886ade1ae5b44722f 7e7c88914e661aaab6e4bb23ef1830732f1ada5a da507deb737207d43cf23306d26277ab3cede1dd c8e7b6cfa86d6481c0727e662578d31a472975f9 3d5881e72bcb8c320f70ecc82312f9801f8b6fa6 56d2d33866e96c605b6d1e3560430e2d8cf2343f b233ad2dca26f7760bcb6d38fa7ec5c4a8a8f559 a2a039f8aa9893e255694bae3320524aca6994b8 4fc9c947bc9bdbd7c1f5edfa4972049bf653d921 6888893f8307fb245f94331f016ce2218e0d543f ccd0602868b6252f3925417af2ccb7e520d06aa7 58e97f7ff2752e6f463ae424dfb93ec6c4a83165 449a0bb90bc60a7d38c494b023a8d6b29b73ee21 7914df33da84e7010b2736d9c529c2de8642a898 17a32d75945c922f9abce6b2e2580b641e38e651 1199d67a5e38cfbe432a8dddcef3240c21c03a82 e615aeae5652837f47e260b84024fd46e540e7b9 062a3527d60cbe94ae2f3c289c3b74db377e4a44 49b274e54b1bdee99086703347d3caabb71c8059 526ca6f8b488f48e8c834dc558be4b52965b1728 a011da152399697b3ae09747fa626c6e49e0fad5 8e06164eac66ff6c2243aebbbb430122e7d3f815 e84797d82a03dd21e6ed4ca82da6a69bc1ccdf16 c4971ffac192a355724e3110639c6ac505fbad5a 69ff775ed736ee2192f6776c50d0e3cc879fafdb 4432a95d2d8b28ccfaa11b7489ac70ae25cacc82 23b9e6183d4e2169d7d1e02ad0f5b27a6f78e08a 440b7c34782f0f6e23e235b0f0899b570f6af328 6f0c941336e3785b8f22a97c2c79623b055c85c3 92fa9315baf9529ddb1a147c425b7d99e4f973e9 c3faa2cf246877b27225503ca32dc763f4ccb0c1 1cd828cd4a3d04d6ecf247c0ad393c432e905a49 c61dacd7964ecab7e0e73f625fac1371857ccc5a fb142f1739ad47dcea3c9e4d27f62bf3f428d0ab fff1f9c5baba8ea15d64c6a139ae7868a390c812 f6cf92143826630d9d6f4d26961c46ad93872194 d0fe4619213706fc376e2b7be0cd48c24c55c039 370a333eefdc6c5295811ff07c78a3190a347841 bb9be3db5e350f37f5835b29bfefcfbeded05694 5ee2403d59759dc70e55249b3da0d79c58c8de31 efd4bd5df5bb6fc4b44bd4c5e9bebc9be0751863 34c5f3afd6e999f66063d559ab80428fdc20b32c 6fc059df3f34379fd03aee468ff6f2b0c2eacd15 c04faa12f3e495a8407ae42b98bb14ba98ee9c9a ed35861f94a4494edc4629b95bfe53008adb7df4 1130d27f953bd237d203731e3e2be41359db685b d0764aaaff9b5d919c8ea508d8baaf582b006c9c 4f327656645f1e61131fd5a17b9ab54477847a29 91ed8fccb55ef4aa0aff522be4fe04d8cb64e463 2648d4a6d752122d7d5e5f73b8ec8feb6550bf36 b1066e277fe1362a3d0131bb212a5104f843db97 536e7774297e23835236cd7a0c0b9852f07bdb76 98d02de24cef15ab121b8d96acd69a1a90528856 298450f307a590b1238689c5a4e2291e00751ac7 1dbeafa2c080c0502a9ddf66f1c83cc10e639eb3 4ad76eb432764d7c31d5de75f41832abc2ffbe41 046820d67ca7dd4f97a210c2d3802b87a332af00 e09f223325c02be17fb3cada3cb53ae5b860be35 8b87b1d5ad3c4ad4bff635b28c366d27a566a5dc 6d64995ee031164f3ad7c33ce492799050379be7 d601569031c6441ee45e414720c2c375319aa818 c60baa5951c8b3d84247dcc4ff943e8b9d9e50f3 adf63f4efb2ea5c8331c74a2935ebec2bc723113 56e2c2a44ec0a09b94b31a4cf1e0c1642c909fb5 f5f81d9e4b257472a30c1468c5b23d8d6e8106d6 f74a1141136da9f30f9bcbea6a27eb94a9317254 1d0c4e79c22ac00210132c6a8ae7c721a97e87f7 44fe5ab3835809aab93c2cea2e991d2fe083c081 35725fc4267d16247904dd6f8a1016c7c06ffede 2f2c52768aaf9d2653217507095d3d61a9e98697 50dfc08f4cca6ff3162d4543776b5a2902228466 a1cac456e460bd1f53164e6d531e829b81c0c5b3 60398f9b6914791a8be2c5a7f55eafa64d05e720 266a0c9691dfb84e78cabc27d44f6b6a184db489 3b36db4163f46587b698f0cd191430df731963f6 32408ce3e0e26d8daf9d6d35c7503f49fc15c403 a37ce7e679cbaaaaa95965556c8492763fc8595e 397c553188d808be4ea30541cb0c640bf0b4dcff f61ba07253a235ecd14731d0f8b46c8bb37a78a8 9671b0dded7b7f56ca0a9d958f937f33cba2e69f bb223d5e3d06149e70eed97be8be1c3108c06fdc c9aedfdc0a4743c6dc1617fec3d3bbed58463e3c e3043e3625c3943a4f31e6c0ed508fffcc99326a 3e3bb1fde4d1c8077cadb83c25089533f01ac74a 802ec21412079644ceb8b9485ab7705e3ab0e265 7aa1442b06223a656acd2871a4fc88594a021c8a dcd5b84e89268d4f028442a4b08c43e82714d64f 22aff66c712c258b6415cd338ee8e2c031c3610e f2ffefd19f97e2f13feb410a0b79aa28a0eaa6a4 bea1eea48e91ab6846c8c92bc37b732bd8f51bff 6c96391b074ba887aeed7bd98fc057690129ec45 44c299813ca88d1b4942d266b7fad1717b039c37 974d7b07759d4591e1e67518bd9ef2bc52afa189 15e71d621d8d77a8efa12cbfb7a3554c9b07f90b fb0ce925c9db90c4e4fbd41cc73fbd2e57a4d8cd e94d6a39b6e758a7c7f5f0bdfe60269640001fd1 041969bbb0619d937b2202815d3e2c18c5b17cd7 71cd7b33d6776baa666d3c44ceecc619f6526124 15679cc838428b647306ccad030d2154ed46908f 5f3275e92b842e6756f1909892be7ea4c25739d1 f63d0ff246b61da7e8d14bccfedfe2726d08c818 47415ca00058d8e633548e9512a07adff05661ca 344e64fadbbb18a1aafde1291e078732ff1ec10d 2d9e06b6e459ffdd1bd70907203a731cadd56ff6 54ae12f463d3d6e6de44d8b8fdb57bd08be6d41c 15a0259b095ff60739ae2b7df2fd05384d6f3a14 f7f7c28d20621d89b664deaeb1583b0496289ad1 169613c0ce1fa1888c20c26456822b57de896c02 8a58794ccb132f43b35627abcd0552c847238fb3 cbdb20d39654ccd46a0900437cd86ec91ffb706e a3945bca16e82c3ad6a71367955e0721e25d5b74 a5039c987de0f04087c80853ec743fc1306d0b90 856b499f634d4957679e7dc65330991231ababa2 bfff3c738ce5ccc96cfb58847f05572eb080468f 29ac9f5e03dfda956c8fc01c671064e7e2085444 c127038b91914f1a65d4e0b877cf053ce3ff8184 f2d94753d668cd77a2ad5efdc56af79e6d4b760a 1d066a27c801ea11cf93e7b8612180c99ddc3149 876fbebf38b3104c6cb40d0d38df908578561ca8 dd81f967ffba8e75d45e2da2a5823742dda8c65b 0e642f637db5cb85efa3dd1e706ea3dfa5ff94d1 3992a5aa55bcd08c8a5950cd8c66e6cba77e655c 2e4c7ccaa241773b776ffd32e36ec123c91508da ef20002c02d697dc8f433a922153149a95a6000b 640d8a264f771c7fc60af0161eb3ea03ec71bae9 7bfce9111156558f112d33ba9ee1d9a94068f6f4 ebde971490dd4b5d869aa9249ae1306c884e50b1 57cc22eda6ef96ea36224d62108e6680473b9167 6f00f803c0a99b21987472e4ed75ecc9ee5f38d3 9b10c63c3a4c0aab349227256dad755e5151fa97 11485eeda68dd16b9f39304d1960ba5a3cf9ee6d a4e011a4b1fd6e6227bf5bd58825114049418a18 9c97ec6b2e855a624e458b5d254c35d13ce81dd6 268245bb43fb14c416f4a93a2d46bf82bfe524e3 6094b7725648331ad17776d64124e611e7beecf2 06f137ea0a13f83c03bf19f99412ed0592a0ccf3 67064ebd6467dc743d61c202203641df9132f682 2e29332601efa8ac1f1ad0b2fb61b8f11900e517 3cc0a30378f54c5abdb91eeb46a35b53d7ee54fa,,Using Eigen AngleAxisd to compute logMaps,
dartsim/dart,432,2015-07-02T23:28:19Z,2015-07-02T23:52:15Z,True,2015-07-02T23:52:15Z,59990e0e0e01780c214ce5c82d1391b03f4ed298,1,1,b815527ea60936487007dd9842a6327ff741b05d,,Fix Appveyor build,There was [build environment update of Appveyor](http://www.appveyor.com/blog/2015/06/23/new-oss-build-environment-and-xamarin-support) but it causes [a problem installing DART-Prerequisites.msi](). Use [previous worker images](http://www.appveyor.com/updates/2015/06/20) until it's resolved.
dartsim/dart,423,2015-06-26T10:40:02Z,2015-06-26T18:28:49Z,True,2015-06-26T18:28:49Z,72b5888c783db93ae2d53ccea440de9219cabab5,2,1,966af760e8b2a65756bb13921edca82f88c59e42,,added tutorials introduction md modified mkdocs yml,
dartsim/dart,468,2015-07-25T07:49:22Z,2015-07-25T10:24:56Z,True,2015-07-25T10:24:56Z,2ba85f10a329dd59af73907448aa0d48de260ce4,1,1,f46df86027c50a6213edd2f0b9073607073a9296,,Update homebrew formula before installing pacakges,I believe this PR will fix the current travis-ci build failures on mac.
dartsim/dart,456,2015-07-17T03:57:35Z,2015-07-27T16:09:44Z,True,2015-07-27T16:09:44Z,4c1cc38b0b49cfad732c2e57290036233aa6ed5e,2,1,47ab982019b19951a5f16c45c713e1d3f3caa898,,Removed outdated packaging scripts,This pull request removes the `CPack` commands from `CMakeLists.txt` and the `auto.sh` shell script. From talking to @mxgrey and @jslee02  it sounds like these are outdated and are no longer used to build Debian packages.  I thought it would be best to remove them since they led me on a bit of a wild goose chase while trying to build DART into a `.deb`. If anyone is using them  then please feel free to close this pull request.
dartsim/dart,198,2014-06-19T11:00:53Z,2015-08-02T10:58:02Z,False,none,53d33b19e5ee702ddc1e95b76310f31acb0a5c1b,2,2,feece92a0cb3eb2a654640d0a99367be5971ab7d 0b7dc05f15c8c03b4ddb29614490f547af0a800f,,FindIPOPT cmake fix libraries ,This may also solve #153 by linking with Ipopt's dependencies  i.e. the libraries described in your `ipopt.pc` (possibly COIN HSL  BLAS  Lapack  etc.).  Compilation failed for me on Arch Linux with a ton of `undefined references` errors related to Ipopt. Now everything works (compilation + test suite  although apparently Ipopt tests are skipped).
dartsim/dart,486,2015-08-11T15:23:46Z,2015-08-17T09:45:07Z,True,2015-08-17T09:45:07Z,710e4080c67e61504b3dcd59301a9e35093b3600,18,14,6118b37aa0758f6c81371e13527d3703a1194445 9c07b19589f1b30dbef71f2afcfe32c306480689 32ee5a3a7ec8835660006dcaad9a3280f357ba77 2bfb8a9ffa78b6c10ddccfa41a9f4d4e9a32d425 6d74c3af3c9b7ffffd0a33c4b07aa2700b3fe60e f9dd64624d490b0faf098359b6e452537dab2e15 c89e5835ccea051e7036943a33b1a29d1627b0e3 d0f11cfb0c0fbf4e0376ac145780c3cb535af047 e81dcec571d2e7bcafafe9e75a9d8ab031e17f53 484e829dc60585e803695dacffeae12dcc81f7c0 b5c32be441a14fea4dfb3afedfec0168f0f3cdf7 e69a56f645a37d878ddf1810d1896bf11f1b9b3d f16d6ad257be6e785e9a89b2c94276bf293ff220 a1a33fdba0bd07b65787c02b39183bc998fffa9a,,Fix build issues on Windows,This pull request includes fixes on multiple build issues on Windows: 1. **Predefined compiler macro for Windows identification**    OS identification macro is dependent on compilers. DART used to use `WIN32` for Windows but [`_WIN32` is the portable macro](http://nadeausoftware.com/articles/2012/01/c_c_tip_how_use_compiler_predefined_macros_detect_operating_system#WindowsCygwinnonPOSIXandMinGW). Here are another references I found: [[1]](http://www.boost.org/doc/libs/1_58_0/libs/predef/doc/html/predef/reference/boost_os_operating_system_macros.html#predef.reference.boost_os_operating_system_macros.boost_os_windows)  [[2]](http://sourceforge.net/p/predef/wiki/OperatingSystems). 2. **GL_MULTISAMPLE**    The use of `GL_MULTISAMPLE` on Windows is disabled until we find portable way for anti-aliasing. See #411. 3. **Default Run-time library option of Visual Studio**    Change default run-time library option from /MT to /MD for Visual Studio 4. **Linking libccd**    `libccd` is a explicit dependency of DART but the libraries and include directories were not added to CMakeLists.txt 5. **CMP0053**    Set cmake policy [`CMP0053`](http://www.cmake.org/cmake/help/v3.1/policy/CMP0053.html) to new. 6. **MSVC bug on template function specialization with default argument**     See #487. 7. **AppVeyor**    Updating appveyor script and dart-prerequisites-msvc12-md-x86.msi
dartsim/dart,504,2015-09-28T02:03:42Z,2015-10-01T05:52:30Z,True,2015-10-01T05:52:30Z,ea916659a05ef9672f0ec1f6e7507553093c4cae,36,79,f7cbe318c278da010a88cf6be130b472a36867c8 7a470d324c96e5031d60301da45f6e2a31acb859 027c2a1a12f0fa441b7fc19f178eb223d8c4ced3 3fd483dddb7ba6a9ad09aca3cdfa16fc91b6edcd 54e1d376ae0f8963396b34ddec1b77ebaf5c8f07 ec8e9e2b2285c3c3384b2f9cc9b4c072fe6375c5 76fbf24cfc8da7055c962f869c85b1682b78bc65 dd21616a8d1cacaabb23fde622086b89454f9607 1491e78b0f81984eed8bb7c40f9baa8e5762e4b4 8cf601fe9471093447d815bf39dccd61023c8efa 72253b2eee1c4e0096936b222b201f3a600094eb 51e414c4abf3c062515544fd4b22cf60720fb26c 41b52b9baa37148ab7ba52cd55f0e19f084efff4 a3f56da0e71d59f9599850a689218ac95cb010a1 c558097d3edf387b9d37332672b32a021bbb8fbb 00a6369cc348ade37acea715ed896f93092cc3af 3d834243daee1b584f6a8da21cd838d227d9036d aca6e39fd4b2220ab8695b0399e13ccd9b102bd5 f9819fd3c9c5426db340571b00930feb8e0bb15d 3e3367535ebb36f4378f5e5f179c8050e303b831 ed7f141fb7721ebf0e1ef1903de50c4d9f14d209 0c743f5ceb3ef1cadaa26656b7208c0024371b74 b710756c31ae29fe137b612df16e918f6f636b3d 71763eb2b05898ea07e10544fc17489601f01187 beef607fa8bd320e5e8eae904a8de3a059df698a 3af870bd37d6a048e98d1cddfea23b1d848bfd84 f568f2400aad6a78f6694e8bd1066a47e69f8038 966af760e8b2a65756bb13921edca82f88c59e42 7bc9b60b5709738010eda439f7abc1e268677c85 a81b3e5048a4a4b6f801847d64e289d386be09fe 5e33c29d3647f89537dddacb9cbfb127c742c104 c09c97c339e42934d389138a64f93b4db411acab 5dc233e906d7df48406e4a09688cb5af7189eaa0 94ec483cf35ae3ac3fcd7da3fe406e1e0facaa13 c6b1e69298476542673fb3777c98d1b6b45c1907 a96bc35373515eb62e4c20fa64ec4350ee905c0e 50e717b640603869b9990ab62b2a5a57be6d2624 14bec82cc9e9fea70690a39784f1fb9d4879bcce 67cb2fb09036635f380fc9a2bda7f22f9b41379b 3d32915187a7548f4e8ba8c3cae3ad8cac5a76ae 0307a6e2e7a0c407216d4c5d93f267a628428e37 da3a168785a9bd996c943ad211af5a7938754075 19708b357deb5e102566801c247deaedf83bf737 b6cdfe584f64aec0d21aef7f04c0cef84657360e ad352870c497fd7bfb6fb8f90b85a40e85170e1c f11221558697a32702bd0ae78bed04c6098c21b1 d464123e28c1517156cadacdc36bb95f9abb48c6 3332edd732124a1a269ddddac6eca7b2c63ea3c0 d1911c1605bb4833e88fdcb6ca5700ee4ec1d4d8 1258c1556c9c35317c8adb413f21a4497b9e3a60 f38907f89c5819cfa6c86556d76c61afe5fda8e2 116a3ae2d2f538c3d0345aa258ceaa39f11b74f2 9e91b31208a8c03f8543343bca56b1954ef11638 0c5ed5ae614bcaa991d6effaff386ad33788157e 7f5b5e39a94a936e1cb678a94cd69ac2cad6bf08 7a67fd1ebca4bcbfd472334627024eccd9a9111c eee1c767d197793d63ab379e4f2dd82b575e81a5 261dad5fc7802737b604dd83c54ef958d7a179a0 cc9130142f9e79323833a2122077682efc1a3cbe b5d6bdde3cde6393acc312b6ac195fa9c8fc82c4 b5ee84c625b8ba7175ba7fb939c07d085721f9f9 23d34134f1c87bcf2081bcbabcb1962574fd4616 1034fefaf7664ecef590132c02459385c58261d2 6bfc19d5f39dff9a1a508ff860cc6e15d016abe9 33f88bf2810e69b05b26571ffce884eb8a3ab33b 9b1e09f4be609f9a12cddb5553e4165c1db5caac 2329367d52eb897a46523ed7cbcb5732dfbcd537 74346c0885349cb6e8b7f73d0d43f2235442bd7d 52ac1fc306e089db3e5eb2a1268eb09594dc9cce 0880efac2be728ecc770d8aac27c911b67afb9ec 0ed5f646e2035d4dd39ea54ce97e6adf7994aa7a 9267aa4ff8a46b1eec4447ff1877b113dafca02f b693fc0589b0a1a189bcb10f8a7a9fe7ceaacfbf 6e064107428466087fda2547f0bf1375928f7358 a556cea22933167d27e8bf095b54d5d33d1ff7b2 26cc82d596fc1eff6255bca5f57c6defda8da11c 1127f24bcc20b419da9a09334cf0485619473958 2a04bc89a8751b8e6cc8fc4b7ea3454ced57794a 12be7a167e608e9b5b1463beb530d9c5af980d20,,Tutorials,The purpose of this tutorial is to provide a quick introduction to using DART. We designed many hands-on exercises to make the learning effective and fun. To follow along with this tutorial  first locate the tutorial code in the directory: dart/tutorials. For each of the four tutorials  we provide the skeleton code as the starting point (e.g. tutorialMultiPendulum.cpp) and the final code as the answer to the tutorial (e.g. tutorialMultiPendulum-Finished.cpp). The examples are based on the APIs of DART 5.0.  [Here](http://dart.readthedocs.org/en/tutorials/) is the prerelease version of the tutorial site for this PR. Note that once this PR is merged the official tutorial site will be [this](http://dart.readthedocs.org/).  Any feedback is welcome!
dartsim/dart,513,2015-10-02T20:47:12Z,2015-10-03T05:21:26Z,True,2015-10-03T05:21:26Z,226826b7626ae6996fe94b4447d93be14d066f77,5,3,f8cb3c65fa50b8443a659c3f4b5184e4e4692bb7 19a7dcb0b9f2c3a12601e4620bca60f66290abcb 578ab7252afa846656f2cfbdd44b7828503ba9e7,,Resolve Eigen alignment issues of recent changes Fix 512 ,This PR is a patch for #512 and other similar errors.
dartsim/dart,517,2015-10-11T05:18:08Z,2015-10-14T17:33:23Z,True,2015-10-14T17:33:23Z,9111b5cc62577916c9687cd67de8b4992e4c5089,50,36,d3648fb5dceb341af69ced5715e82b25cedc4ca3 6bf01b5ecb70751a143eca6a8fa97d279163f278 28015cc4458b762442fe8dabde7af7132eb0c0da caabef01ef2357065c9c164ba5bb9f020c4b4820 8da05d17fa250277295d950ffe24d4d9251ee425 f59420d39628e955689801b11d4b85abd45483ad 24e4b0ea0bb21374ed6264031ffc9fd00dc91e87 d509dbeabb68ae8b4b858509dbee561768170a27 2616b754cc1ffbc9f3aac0afb66358a78a80ed0d c731e993ed790ed2a466a9f1fbb95bc454e760be e1dc055871685a1dd73be95def304d6f757e7307 875de883ea73f7eefc5daf4fae4278c4e4fa7f1c 363d430bf4185acd671cc5c872e04c71decb6e44 bd79ad39877b234ee80a1fc986f287ecab8d97c5 968615e20acbfdd2148a371be899c777c1918632 29dbdfcc1d66b9a5534f9ebd2dc0fee052139f5d fccd529d61ff43bf6f6e486424e698521c891be6 a1cc97bd9b0d68099646e29bc2037ed488ff4d77 12c79ec19de8b9a91b8cbe1662f0fb3456eb621f d0a2a0475ec2a1c304afb142fb8024d149677e84 a220ee1db3aa970b4c2abb2f588eba00d8bb5d5b 5c835af09e03b14ff153ccf2dd05a6e6e0f91f15 236135835bfddba0cd28c6f4fa9d917d3d679aaa d20b6b94e0abfae9f050f008ea2a3724eb22bf30 9f3a6f92af03d9e9eb846c6d3d8d96097574f929 d2a164fccbe30e225420d04f335c7f7fdb378014 03882507ea1a78ae6d4caa7d31a9f5260b836c29 78051d095a7d10cdb31c7ddd454e72f078632678 3390cacb5d4dce7ede70d06610fd7f6dfd640e4b 7352b359273f75954677cb1048f3b9b6af6dda0d 3c44d64b3b85b70bf228ef05a548631cce1339eb 252012d11e7f0362a1b67a0165628f41a599181b 42515bd51f9af8e09e73397b963acb201a7a581e ed369f585b0d88c03ea971e1b29e87d6666908ee c9b21ce8f85b03792388b3a169d986f1f3c4a650 78557fd82588af662a8064a02c92f661f84ae5af,,Improving URI to be compatible with Windows,This PR makes URI to work on Windows and resolve issues reported in #488 and #497.   Most changes are related to file URI (file://your/path) to make it compatible on Unix and Windows. Here is a summary of the changes: - Every function that takes in a filename as a string (e.g.  skel/urdf/sdf parsers) now takes `Uri`. - In order to pass filename to those functions as before  you can use `Uri::createFromPath(filename)`. - A `Uri` can be created from file URI string (e.g.  file:///foo/bar.txt and file:///C:/foo/bar.txt) or raw file path (e.g.  /foo/bar.txt and C:/foo/bar.txt). - Every path should be absolute path.  You can find more details at the discussions in #497.  Note that this PR also makes the AppVeyor CI tests to pass on Windows so afterward PRs of this should pass AppVeyor CI tests as well.
dartsim/dart,529,2015-10-18T11:34:41Z,2015-10-21T13:35:16Z,True,2015-10-21T13:35:16Z,12788287d289b75ee08e746194f5d30fdc0d4127,1,1,62b99ed422ec8590e3dbf394d3503c08306a02bd,,Reduce Travis CI build log on Mac,This PR reduces Travis-CI build log on Mac based on the idea of: - https://github.com/osrf/homebrew-simulation/commit/f3cad8c9ab2639d5981418b96002d02a1d6955ea - https://github.com/travis-ci/travis-ci/issues/4936
dartsim/dart,543,2015-11-03T03:55:33Z,2015-11-06T03:04:11Z,True,2015-11-06T03:04:11Z,d861ec95bf312bf8fa636e6d8b4e9d616efc3462,3,6,b4b43935201fef012c7607379e3ee72ad256354b 0d2425ecec9181ecd7d6503a7dd8be4ad25d7734 207636224b9dd3f482c50af5d2907c929fe01299 9adad4381a277430f14c53d19231ee9eac37849a 7969f2d4825826244427379cad3a502893aefa0a 49b8d7bc42e8c0309a08168d3f534780ebc6e90b,,Add cmake option DART_MSVC_DEFAULT_OPTIONS for Visual Studio build,We have optimized build options of Visual Studio to find best ones for DART. However  the customized options seems to increase the build time so that it can not pass AppVeyor build tests: every build should be done within 1 hour  which is allowed to a testing project.  This pull request adds an cmake option that builds DART with reduced version of custom options so that the build time is reduced. This option is only turned on for AppVeyor tests  and  by default  this option is set to off so the default behavior wouldn't be changed from the previous.
dartsim/dart,552,2015-11-06T15:18:26Z,2015-11-06T21:09:18Z,True,2015-11-06T21:09:18Z,8b03498cb074e173992d67740ebf82ea9abe19ae,11,19,1ba52e5bbd4c4b7b6bb1cbbe177a90e93dbabe08 ebc0ad8891c419ae2e35062ccdaf07e8e91c399a b4b43935201fef012c7607379e3ee72ad256354b 0d2425ecec9181ecd7d6503a7dd8be4ad25d7734 207636224b9dd3f482c50af5d2907c929fe01299 643f8188b584d15dc073c50b7ed54a9ba492a71a 0af147f533f06a33a282864ec17dabff5db71f08 9adad4381a277430f14c53d19231ee9eac37849a 3f4a9db35b9258752849915e90a5bb9255ca7283 c629eddacced5bac035ea89ac0b2190b499993de 827a4492703615c062d358f17bbb936dc5534a2e 7969f2d4825826244427379cad3a502893aefa0a 49b8d7bc42e8c0309a08168d3f534780ebc6e90b 8d003b11e02cf427c58eb3b2e02d7d644c37b310 7ee9bc33fe411fd278138534ea4f4a1477b4f244 2f49a259c68773d5ae5543b40c533b261dbc34f1 0ab5d773d4fd824cf7c5f6ee3fec5c5cbb0175e5 b961d29cbce2bf7231c0cd2612146a47885215fe a8edf3f23d06d87defc37067082bf09fc72a1e3b,,Merge release 5 1 to master,This pull request merges forward a few pull requests that went into `release-5.1`.  Note: `master` and release branches are now set to [protected branch](https://help.github.com/articles/about-protected-branches/) to prevent accidental direct commits to the branches. They requires pull request to merge changes to them with status checks pass. This applies to `master` so we need merge pull request from release branches to `master`.
dartsim/dart,570,2015-12-10T08:26:47Z,2015-12-10T19:30:18Z,True,2015-12-10T19:30:18Z,633c68df5adeaf98566a0e0f2d2e218d4f8f7037,2,2,8e1034c523ccd1b706cd5698f2782473df2de7d9 976fbdfd05d0dde0666cba9d21aec2f955415e5a,,Change Travis CI to build DART on Trusty,This pull request switch Travis CI to run on Trusty as [they supports Trusty](https://docs.travis-ci.com/user/trusty-ci-environment/).  It is still in beta stage  but this seems to fix recent build failures.
dartsim/dart,579,2016-01-08T03:40:55Z,2016-01-08T17:30:26Z,True,2016-01-08T17:30:26Z,f2ccf63057879a3155d34187435795e2beef2bc9,5,3,fe3e6fe8829758151758c1d6cb41bbab4504ec99 0656ad9ad7852d6faaa1f586e8c6238337f53b9e a29a3e4dabb80b88d9ce54ebd5cee983d8f9d5c8,,Fix incorrect applying of joint constraint impulses Patch for 5 1,This pull request fixes #317 for DART 5.1 as fixed in #566 for DART 6.0.
dartsim/dart,578,2016-01-08T03:40:39Z,2016-01-08T22:59:12Z,True,2016-01-08T22:59:12Z,1958e55029cdb1d5248adfcb022b6d724eada55a,14,7,a558fecf6eb37903113e84796a14aaa9fd96606f 3f68bfb0ba6f474ef79d63e329ed2b381f09c406 ab17051cc2ef4d48d9f8d0dbca99d0964ed33bd8 745d7430709146662d32829e5690b544779218f4 e98694c4b32cad46bab9903610fd60992bb05e14 15c236cb72802178da7573cab2feec24962ab6d6 5249d84f53c6109ca62a45f10c2ae6d7997081fc,,Fix incorrect applying of joint constraint impulses Patch for 4 3,This pull request fixes #317 for DART 4.3 as fixed in #566 for DART 6.0.
dartsim/dart,595,2016-01-26T21:36:38Z,2016-01-27T05:52:03Z,True,2016-01-27T05:52:03Z,b9d491f8bbada1f9dd125cd3ddfa297666c472bc,3,4,fb664e76d3d066aa4eadd75d3836ca8287587f92 7d5d074bc35cca39b1aa1172b0cd157cfa90496b 2e73697912495f4cd6b7797874d8d03910d50f87 580e188f6dae5c77721ba2eb72cf23c748654f3b,,Set AppVeyor to use Visual studio 2015,
dartsim/dart,591,2016-01-21T17:34:49Z,2016-01-22T15:12:16Z,True,2016-01-22T15:12:16Z,0d1345004871d92cff37df55d51c27e2cb40d1b7,124,114,4de3375232af021b5372ceb0711a44ffd00670fa 4dd49d40b1e4e49e031a468e48472053e9f73d10 bc49d40c1306f5097bd58cf5256ddaa8201ab3f0 667ff1c2e7b3f96bfd84f65ca0e55a4de0680c96 8e1034c523ccd1b706cd5698f2782473df2de7d9 1ba52e5bbd4c4b7b6bb1cbbe177a90e93dbabe08 701929e80daf345ed80bb9e1d9de0c34694486df ebc0ad8891c419ae2e35062ccdaf07e8e91c399a b4b43935201fef012c7607379e3ee72ad256354b 0d2425ecec9181ecd7d6503a7dd8be4ad25d7734 207636224b9dd3f482c50af5d2907c929fe01299 4e8abc8a323646ba4bcff8631525333d59f0bd38 643f8188b584d15dc073c50b7ed54a9ba492a71a af3d1cd3f9fcf6751e9ae4d8afed35801f83787b 0af147f533f06a33a282864ec17dabff5db71f08 9adad4381a277430f14c53d19231ee9eac37849a bdb6cdb2e3f94dfa733fd998796adb643ed320cd 71bcedc49e95fd2d4b4122a54185aabe0e0f47ea 55e1266f6ebb5c38135b6a7b314d26be5bd746d6 3f4a9db35b9258752849915e90a5bb9255ca7283 c629eddacced5bac035ea89ac0b2190b499993de 827a4492703615c062d358f17bbb936dc5534a2e 7969f2d4825826244427379cad3a502893aefa0a 49b8d7bc42e8c0309a08168d3f534780ebc6e90b 8d003b11e02cf427c58eb3b2e02d7d644c37b310 7ee9bc33fe411fd278138534ea4f4a1477b4f244 5c5c5afb603e07a0e173a6e231c9a9183eed4c3f 2f49a259c68773d5ae5543b40c533b261dbc34f1 0ab5d773d4fd824cf7c5f6ee3fec5c5cbb0175e5 b961d29cbce2bf7231c0cd2612146a47885215fe a8edf3f23d06d87defc37067082bf09fc72a1e3b d22bba74631ad3a1ff25ff28c74ebd3136974a35 a5eda7ea4188337041c8329a1d019a1a0a5f618e 1048a0657ca5a60272edc40c96037741e8a920fb b66b6794865783ae703fb2d1f0e2462750b6186f e65a82a167e21ab450ac5337b1e7350d494305d6 1e34ac5138fb9546a18bfd4fbd6206a22bd1085d 1a750fd6665c95566a6fd1392594c63d8bbce061 71f6aa2f8644138e321fe6bdfbffda6bcbf16289 71b04561554f3ddfe8241d8e269759db12965490 105a0735aeb5b2609d960d38ab3df7cef6fd5df6 fa37f1c68066733e5b35828032b4589620dc5145 934448c56d41fde1c1202bae8971b71e8dad1370 1a5356dffb9b46b4deade850c903c7d4b0d29369 4dfe4b5735f171cb11ed3ba8919ecbb54df77ee0 f1808c8c2024c5c28d92cd98f7990ae5709c0666 e5aed46d5f17119188c52fa6a3708d3b2238519c cba5ffb8cc23b132e5b4e5e4ff1c2c6d96719a32 bc57bc26ef04129f8f878e1e7eb55b524dacfad2 4ceafe1f94a0b4c0f4ecff697c367481e6ee76e3 e14110c8f94cef2cfd93d3d4dc054ba8a8cb2a6b 0dee94005d5c0d021b15c6f182e764e28bdad7e2 2d165673e2b2e5d43966c7b6e046933545686a71 ed746f6ac1ae5a2e0ca2e5c0ed9e16f1f33e4fd9 2e1709efe94a6c4eabc016e4f086d54d368d33d8 0aa402175398215af9e6fb7331a4e86f85484bc8 04098274b7404845b96620b6dcb6ebd321690113 984e1c2e9acc949dbc6ddaba855493852f79b4a4 482d17c2527e10a5aed6ae549e11bc45186442fc 9d24b2f2337169abc12599ef3aa5ae8bf0655fba 5dc38cfb09fb187ba93c3dcba3a48015197174d7 37cd00ac426f2e4427fdcdf1430cf8bdcb1e514a ff27c7bff4f5249a57ca8be826623dfe09572f09 172d8d09d5cc8e98e4ba963405e4bb636fc7af39 ffc5e7b0d7a331f9c76c7a4fd43642362e8def31 958c181a4e6b53b525f5741921108441df700122 d8ee39cc537296779a98bdcee83cddef83569ce4 c65383570c364ff7877ece13ac1f5840282671d6 074b654f7412bbc1fa2f9b42ca2fe554f1ce582f b962cebe0ae1c772eb74ab3107003a9b3096f593 86d8d4642a58c19c9613edcffa1b8382c4002b71 76485a3dc24c7f7d0d31b3630106571a69ef56a4 de250158793c53d9986aa4916e3b94738fe30ccd 95d019c61db1edf9ac07c6999a21697dd1c3b996 4efda838a9980d664fa812eb7798017ce413e897 97f0cd14d3d0b4de5d711ebe2017862a184a91db 16c325db18ebe04be83197075f4bfe1e246f844f dca2755ca800ca1712ba93376ab804d41eb46c4b 9946d62877f7c06c71b43415a42cacb5ba945829 e0fdd9f9469222b4d93eba1fd578fbe72031741e d72a371271fbe18db08cbdf544e27a1b4353d9aa 976fbdfd05d0dde0666cba9d21aec2f955415e5a b333113a7c0cd7673bd36f4ecb338bca892d4520 e9661e97066cb12bcfe66f2b9a20970a5771bcc8 3d88a47956dab867ded4aa6139a45526982b7b87 77cb772469b3fceb6b917a2003e954b5b4de5e7d cbbc97555d9cab59c5b92915d54e04b1228b8dd8 c4295f04498a488aabd6289331838ba1b15482b2 220ea220fc8fc239ed38dcc7273f53ed4f5d17e6 d2427a342be7b80c43ebb2e4e0b987e89209c0c9 ed208fc856983da3f8fa4201d73675045e297cdd de4b14bd7ac0f79376689424a98d06815a2720e1 e6ae75b4f7c2d3c41b0340864a433578665381c3 51f23e0c2b9388dcdcb52a95e4bb6e11190e88d9 99491af6292e22ff8752ee40a4ab797e8c5b0e90 b0f4ee72db2e81701eba3c1f73c44a02f880f10f 8d23ecdf98106946507d3ae297e594fd8ccdfa9d 7318372d294121bbd92bf7b0e473d88aa0025372 bec9a8d517482e0d010634a23721a008aa98192e 6b71d13210d45225918afd266ee41b1c276f08f4 e8e0e6311307d75d7e63a0440704a0136ad9324f c68f92b29624fb2926ffddcb96b5825c24e5751b fb06b0b54ad6345856d97115663dffb51c846cde 2305827c413f602dfd46bcc041d6deefff5cc2e2 ec269b5f21425950ecf7c6018ea0f7d41164c889 d0427594a93f7dcd3f0cd39305a0ebcb2835f0d7 0c91dca69534179fe382518f3f48725e2a07db89 34a2c1bcf814838d023c40042ca37fdee0fa52e7 43585eacf6bc1f11a9608c6955a8a8cf80f9251f 8c994dc2d4f145fcba1cbc21c2a4e4622c7b1b7f c3bfb608cd69bda05f16a5b6ad0693331736f50d 4ec1be80348f1b89b2dc8d75d7aac62f9a71bdc9 2194f99d179487454434f2c60436ca2ce1c3798e b10b4a3b5de9aeaee4aa533c3ac249264ddfc29f,,Merge master branch into 531,This pull request merges master branch into `grey/addons` for #531.
dartsim/dart,587,2016-01-20T00:54:17Z,2016-01-21T13:42:48Z,True,2016-01-21T13:42:48Z,9dfb2f912eaedbdd42186aa6f482630190a4489b,151,31,fb8bd596d9d25547c1cd794837233dcdffae2f4d 8dc80edc309c2c55c9598ce28e2252d1c79f7010 d4db9c210c3e444f5efe456022b9d6d2dd3e2ddb e7d2f996c7e923196bd499cfb90ed803af19c54e 5ce6914087c67e60df13a56a7bb054ad48a3daef 2be5d4e678d0e11621da6d112305249be7c15840 795d5209c7915b187941558365bffd483890c399 23edf458451096033df573ebd2ae71d42881fb81 dbf04726d3c18a41a94af2edab4b44646b787044 3c659fdb4b3aa81f911552d7919cd9387b34cbe3 887ce4f9312307859525ef77917fc7a3c1d7183c e5d6bd83c513605819e061ec8e854cfd0d08bb67 99d58cb1ce33b643d45181fb3c8029ca8179a8eb fd3148263c5723c2233cfa48dde38cf4ac043e39 4413cc9b4baa8c7760a0d350a771545e1c13a67f 8890f0611a6d3a822fcfadc612ac112acaf165a8 24ff5c42b6e0bd52ed527d0ddc144c2cbdb22525 eebbe36451286fdbf46fe53c43b73b1471dbee86 70abb5de73361697aad1d86d3db6b9ef6e6297fb 17d9fee95b5a84eb16587f0c56dd3b0f01a5739a cefd85a93fb048e330fffe67e05e097c589c92e2 dcc849c7d81f392a078f6434f1665e3e2f1decc6 f36f21ed5403d447c44b57f916654228de1a7d36 4a7ed505c7e3957e44eef2f0473c1fc626516173 adf210f569f41ee41f29ed79ed4a28a253c2be68 0476bc74c329076ea5396960edbd286215760c19 69ea914aa843eeb548cff2a974524dad7b535dd6 1bb64a7f63440bf2fddea198947d2efb52e71848 2088d232c5c59cf8a7b03494dda6ba1cdf405be0 d7118fe1678f7147d3b5955d108785e43903e674 097f0cfdc6687cfee14d12469ad0fc06244516ed,,Package reorganizing,This pull request reorganizes packages of KIDO into new composition as discussed in #477.  In the new composition  previous `dart-core` becomes `kido`  and the additional namespaces in `dart` are splited into several components: `kido-planning`  `kido-gui`  `kido-utils`  `kido-optimizer-nlopt`  and `kido-optimizer-ipopt`.  `osgKido` is a separate package rather than a component of `kido`. So `osgKido` can be used by `find_package(osgKido)`. But  it can be merged into `kido` as a component easily if @mxgrey wants.
dartsim/dart,588,2016-01-20T19:43:58Z,2016-01-21T05:27:25Z,True,2016-01-21T05:27:25Z,3d440fd0816e20f1ef2b67d185ae159fbaf73125,59,10,eebbe36451286fdbf46fe53c43b73b1471dbee86 70abb5de73361697aad1d86d3db6b9ef6e6297fb 17d9fee95b5a84eb16587f0c56dd3b0f01a5739a cefd85a93fb048e330fffe67e05e097c589c92e2 dcc849c7d81f392a078f6434f1665e3e2f1decc6 f36f21ed5403d447c44b57f916654228de1a7d36 4a7ed505c7e3957e44eef2f0473c1fc626516173 adf210f569f41ee41f29ed79ed4a28a253c2be68 0476bc74c329076ea5396960edbd286215760c19 69ea914aa843eeb548cff2a974524dad7b535dd6,,Change namespace and directory of osgKido,This pull request changes the namespace and directory of `osgKido` to `kido/gui/osg` and `kido::gui`  respectively. Note that this pull request is targeting to `package_reorganizing` branch of #587.
dartsim/dart,598,2016-01-30T01:36:49Z,2016-01-30T17:58:26Z,True,2016-01-30T17:58:26Z,44635b1c8b9408248d108bf1a748f7cea236fa22,12,9,b4e2e64a9eb93509be595089e0f45342e31349a7 4ae6e8ed363c04afcef04514fa3b6aa8ea6130d0 2cdd8d6407980cf6e62ecd695139ed370b16aad2 acf7573a1f888f4b91fed2d7ff9b76ca7e845e10 480422923fd9eb6e7b81c1a091ae745c52d78d63 b3294838e57ccb0f6f5fe6adeaa1a48c721b45eb b97d7f539c2793e2c33aed05fa64e83925cfbd0d 668d3343c2f694f5253b2c89d8ffad7a1a4b0694 585cf4c94b703a475ce97acaee2e17f358a37589,,Revision of 531,This pull request - merges master branch into #531 (should pass appveyor tests) - revises as discussed in #531
dartsim/dart,596,2016-01-27T06:34:05Z,2016-01-27T11:46:09Z,True,2016-01-27T11:46:09Z,a4bd3fa9c984a1fed4e9ec1d79986b938f5abe92,4,1,4ae6e8ed363c04afcef04514fa3b6aa8ea6130d0,,5 1 master,
dartsim/dart,300,2015-01-15T20:30:03Z,2015-07-27T04:56:13Z,False,none,477d58746ba8fd44030f7a62e4796e650659d4ce,6,17,1fa6a485666299b8135a3dbff71411acf5890396 dc1c0afe5b7926c11aa5a44466dac0f062133b47 3b12680be1b5474c39d8a8420bd295d7a101caab d49461012686c9d4f3e56f48c271370283c399a8 e813224c0381d72c61d8e0ff534610e0e6c8196d 784666627a0365c90d2d0a90de2e2fbabd1d0d35 b693c639f87bcf207701b14766b65ae3e9c2e777 51f6fddfc530088e51a7ef9b78a965ac7a4a6a41 203d72963ca92d0bdfcdb16dc5509e6a3d8727bd 724f993f388e8624c999c4e0b5983765a605aaf1 90bc74824091f18a1cb546434a04d4221c26318e 6339332f01f62164c188e31a0e59d34243025251 9bd18b2483fc49674c8208837d752b1554896c7d 4804a5a28dc6522fd119b788918b306b5325fe9a af83472bf5caaa7debc46ee6f686b0e9da3445ff 53bc6157b4b0460390bcaec8a990f4be77e7c0ec 025e43c3cd2d07fc97c0a1ea0c98855d3220a037,comp: math / optimizers,BSpline class,This pull request adds `BSpline` class  which is a wrapper class of `Eigen::Spline`. `BSpline` provides essential interfaces such as modifiers of knots and control points that `Eigen:Spline` doesn't provide itself.
dartsim/dart,632,2016-03-17T15:34:37Z,2016-03-18T03:23:08Z,True,2016-03-18T03:23:08Z,a092f5219fa13ce20ba7dcb74e9b44c6769ba01c,9,3,b26be0822fb0e712620877ff46ecbfffc27b72b7 246a6a57cdfa7ac3a2c8ca7075c605d9e00632a2 7d39ea44333c736372b21d69af8f4cb24cf4c100,,Code coverage test,This pull request adds code coverage testing for DART. [`coveralls`](https://coveralls.io/) is used to show the results on the website with nice charts and tables. External cmake scripts ([`coveralls-cmake`](https://github.com/JoakimSoderberg/coveralls-cmake)) are imported to generate and upload coverage data to `coveralls`.
dartsim/dart,638,2016-03-18T17:03:42Z,2016-03-18T18:35:41Z,True,2016-03-18T18:35:41Z,e4539849db033ec21c7885a9f150525f0decd296,1,1,16dc3bbc0b18323336bceffc81e6f36f9496960e,,Fix invalid coveralls report file generation with multiline commit message,This is confirmed by the upstream. [Issue](https://github.com/JoakimSoderberg/coveralls-cmake/issues/12) and [PR](https://github.com/JoakimSoderberg/coveralls-cmake/pull/13).
dartsim/dart,644,2016-03-24T02:17:54Z,2016-03-29T02:33:53Z,True,2016-03-29T02:33:53Z,11a9d9e832b34b013b0969f7f520f66155768cd9,9,3,a057c2809dfadabe57122d6d95fe22bfeaaca33d 72b20f4298b1e2ab2712e54bfdaa7b004b715265 ad93f3b2cbd643da429cd1f2683cfac75dc502f3,,Split tutorials examples and tests into separate targets,This pull request replaces the `DART_BUILD_UNITTESTS`  `DART_BUILD_EXAMPLES` and `DART_BUILD_TUTORIALS` CMake flags the `tests`  `examples`  and `tutorials` targets. These features are no longer built by default unless the user explicitly passes the corresponding target(s) to `make`.   The key advantage of this approach is that targets are specified at _build time_  whereas CMake flags are specified at _configure time_. These features are optional and take a long time to build  so I prefer having them disabled by default. It's currently awkward to do this because changing these settings requires re-running CMake with new `-D` flags and  possibly  deleting your `CMakeCache.txt` file.  With the new paradigm  this is as simple as running `make` during development and passing the `tests`  `examples`  or `tutorials` target when you want to try re-building that code. Note that you can still run `make all tests examples tutorials` to build everything at once.  I am not sure what @jslee02 and @mxgrey think of this change  so this pull request is mostly intended to start a discussion.
dartsim/dart,650,2016-03-28T20:34:39Z,2016-03-29T04:01:58Z,True,2016-03-29T04:01:58Z,878d3a4de163ac5fceab16c20c2f1c66ec38d661,1,1,af3cfc2254a6548828e191ebd111d8837a47cba5,,Travis build test with Bullet,This should resolves #376.
dartsim/dart,655,2016-04-04T15:11:26Z,2016-04-04T23:14:38Z,True,2016-04-04T23:14:38Z,7c04754e70ae7db33cfd8f47066b32a685e491f7,7,6,e0828bf297d88b5fcad4534ca7d1c485f190f22e ed06d75a115a2c071a0cef49597b076c25d4f01a 8e354e0fd4a92c9464f0c1a8a1bde198fc45dcfb 6eea2596464723e5464c5f020565e1c24441a224 25979f4bd3542afc79345ae818d2d972aebceeed 2a8ee91c274b8e7310cc73b68e1313b82420e8fb,,Travis script polish,This PR (1) fixes the build order so that `coveralls` target is built after `tests` target and (2) polishes travis script by removing dead code and merging duplicate scripts which are the same in both of linux and osx.
dartsim/dart,631,2016-03-11T18:58:23Z,2016-04-13T16:11:11Z,True,2016-04-13T16:11:11Z,25e3a8b74f3419a26134c452ac8cfdcef782608a,81,79,37d59b8633ce6f4dbee0ed29a3875015a277cb0c 0b2da84a59207de7491fa3bc5ec31dfb00b01b43 a0b1305efa1fe15cc2edce236706d5f373ed8ed1 054fc149b4efd994e29779d34e929a90f8569d18 1d437c632ce6d5e9482e7dcc3cf2c28f6b7977eb 88d56abe9cf27becbd40a879b5d83ff4b68e1895 0c931ddd0aa7d7ea6eb6968d2efb8449b77ee98b 7adf6b8b14ee3b2f16715d6ca200e326626eb429 10397b0df5b8df73614853db7c8eacab6a00af5f 889ccf8c7f4573d7f9a5ba172eb972d02b93bc61 da625ecb9ed899bad4d47975e3b23844c25ecd73 c0b4dfec3b41c4bb40782e00c3c2bf1c30cc8c70 321e136d205d4d090812c03dbe78500b96c13b2c 634192f45e456e0ebfa653ea0e4dc8fefd1acc69 22fb8f85e020d230160b8bb214a53b477ed73fff d094bd74cecd59208c3c776355b9762f12e2069b e330676dfb74588ac9f173227e34ef367f931cf9 e22f4ce2b743801461704bf8e614a8388d470e3b 522b2a974ff822bb67303497e6a7381b2dd3705d 6004a1bb57a211d7c5cb21f318d886688086af65 87e17d99dfc49225ca9b84d0084aada8706d7536 ba69ba7bf2f2ad140e75446f961b9cae20f5718a 60bd53b4d61bec1f5e1a5d063c0f947069201832 d85b74bc574fc2bf65726a00c1c1f384fb566225 e93f921b111f99128880d9790823c8924a479be4 0de9993f1e37f83c17608ebf12c4901e55a9cd16 f3a89c7e57bb832aa6fc41dcbcbb22f322036c88 5039629a534e09885fd2dcb0b5993d12a61bfbf5 25cac6b46eff74176f946935104e6a9bf14695e1 5d803257cd6c8667fb35c295e57f7ceac922bfd9 161a396b5601c6f87c966760bbd4fc2e1d1fafae a6653d60657dcb80dcef7f756660442525355d8f f91a19079ecbbd0c0f46e59e4f2b2d95304b18b4 4bf1ec7cdb63ccd655a15da91ed312113e53d751 b935da178c867442bb403a8b95d8625c7b234bce 0be239c756b8c702f5b88df74176ed4752c899f0 c0d83266b840ad68cba9f1fd533a34397be8e849 12743da18fbf1e69ffdc1d048abaa574a21b0455 19fdc4b317697b596eb503da3a7a18db2b4ac80e a18f4ddfbd30b290b17e3a4d69ddd8acfc30d76f efc9699cd94722e07ca723f982d31908688432bf 0a265e6fe81ae5184c866588884e5b9295c84fdf 0888b9c8d349f24daa0439f8a7e5fd70d9ebfc0b ce6f5589c190a101c26073ce63c5b9df4b518eab 555d6ff0a009b124bd3d0bf8f3fc5ca2ebf0baf8 65c4d9669ec46f36f44e862f5666e58e8d111406 aac9ac904829636e8a3d190a22219a71a51188f5 54a2316657425572dccc3e590c254d3a7aa00480 5b89458cd812c2fa23877df0317b90c05fb6365e 4993f060adb7d7cb430e4e195bdde78d7c67f306 c3223828f0920fb137c235a777c80ec94c6f647a 123e87d1420debd42fa151de672edac62f8141a8 e6739511f3acec6c957a94e2698f94d8a8c366e5 40d9a382bc1467132984183ab885d29f6e4eddbe f52833517ee8bb541d0c061e37870c59ea5dd2a4 97c97362c1606cc507a2e0136b3272ce7ce37f33 3f4921190d9476d63458fd12e6e709e1e462264a 7a5863c18084e3b5e12a01877932a486458e2c0d 1c8e36fb61ee2e835bf8722035ef2c667f43ffbe 14d60cba5ab6b0f1b6f32064c62c9949efd760db 202ab75604c945ed5bbfb2395e768d191f34248f 1230a2d82db670ce38ef7d007b660919118912c1 b66ed5fd7fde27bd0fea7cea8ac1a93ed74ed112 517203503ff37c177409b23f72ce7fb8f6d82787 01c8e418e6e4107a62408de5e07046087e649dfd 8927ebb4d7a674353c292538b6c860b815439d0f df324db5758211c5441cd7d928f41f8e063bce0e 9070bc968c975b652ca019d45c52988137f97164 79604162976001c21ae7e98be80331905e84abe5 f36a12c3d21fdcbf79827abf79033ae08d9b02f6 5a1652bdf1d003a4260fd00c1341d36ff83e8838 540802aaa433890a365f2ad5c322124ad8f30d5a 67369481c6e54e73419a55a80a04483ac7ea0a5e 12ecc2f019045a5314cb2b61dab9d629a3e59c4c 538d1c26736e03e455c9cab559600eee66cc61b9 8ec2c2e1e171d870736a4406ef1a7a820588f06c 76b866323eeecc95d0d2426f96045eaae24b5ab0 6a16e8de7b594ccd0d1c9e945bda5e6abca3fd8c aa6c545d0e5bc8e44f1431b5e6b4f2ab721c072f,,CollisionGroup class and refactoring of CollisionDetector,This pull request introduces collision group feature with CollisionDetector refactoring.   An overview of the changes is: - `CollisionGroup` class is added. Collision detector used to containe collision objects in it and only could check collisions for the objects. So we couldn't be able to check collisions for arbitrary (distict) collision objects. `CollisionGroup` now plays the roll of collision object container  and collision detector can check collisions for object-object  object-group  and group-group. - `collision` is now only dependent on `Shape` class. So once we move `Shape` and the derived classes to `common` or `math` namespaces then `collision` would be completely independent on 'dynamics' namespace. - `FCLCollisionDetector` now takes the advantage of broad phase collision detectorion of FCL to avoid checking all pairs of objects. - Collision detector manages Shapes so that the collision detector doesn't create multiple collision detector specific collision object (e.g.  btGImpactMeshShape  fcl::BVHModel<OBBRSS>) per Shape.  This pull request is not completed yet. The major issue remained is the ownership between `CollisionDetector` and `CollisionObject`. I'm considering apply the same mechanism of the customized shared pointer `BodyNodePtr` by making it general to be able to be used for `CollisionObject`.  Note that this pull request includes the changes of #608 .
dartsim/dart,667,2016-04-14T12:25:46Z,2016-04-14T12:56:18Z,True,2016-04-14T12:56:18Z,cb1a272debade203edf4d7c843552137535acfea,5,1,19d71b5739830e24e5387628b0e5f7c91aab79d1,,Removing OpenGL dep from main lib,I removed OpenGL (and renderer) libs/includes from main library (libdart) and moved them to gui library (lib-dart-gui). Also  I minor fix for installing properly the gui-osg include files..
dartsim/dart,652,2016-03-29T15:02:16Z,2016-04-16T04:29:09Z,True,2016-04-16T04:29:09Z,830b321b1d9089f4c22861346f164311e403a3eb,142,33,26497a0f8a7643797891e39c83112198f61385fe b259145e2701b7d369816fd9bdf19a9e9c978cb8 63a697c15009d04573cd56f31029ac718160f5a5 30ca7fea06303343a1ca3764774eb66da2ca7113 eb00773c2e1dc5d6d1610fe74594d634d8560ece bb31f964e1eea66f98770c3400099da86903e304 75ab087a3ce445d5a619b49ed2dd45c323546851 ecb5aff432d15ef3b838e7283895e63affcf71c4 1c4e7476bda80e81c8da0262f44883987eb9bf23 9d00105399f3b6be05025cedcc0a3ee5c953258c f767a9bb291da36e1938d45e27b23edd7d985440 19d71b5739830e24e5387628b0e5f7c91aab79d1 cb1a272debade203edf4d7c843552137535acfea fcb3fba29f532f0d7a5b28d71b091dfcfacef956 05846ae97dfd22f13586901fd5e94ff6b5cd4fe9 2782aae1015745476b722efd27e8e356579b5a3c c4ae8771462e2fc291030a5b630b5f1675ea34dd 4309abebec99c40e4163f0bc6871a87628b740e7 f084f493e328a1d9e107bb387c2b8c3c7bc1a17e eeaebb71f12477a1fbb931bbd12ce257bd7913fb 3d26c2af5bec9e9403fec9ddf4d86d93a0cdbc38 751304019ca20c493e1c93d3958fc2ef0229798b 46e9c03516f9bc71d60c7e066b0e02d82cf66277 d22b556e954354e2dc7fc85e756fc8c25868ebda 5d0d9ffa34425a46c379022b0fcfea5d92219e09 88dadaaaa0b4e3a224730ef964d6790992089915 8b27d8267233cc5258630b88caaac4077360dcc1 0cf7037d66565496c6a66882ce3e3619304fe72f 7cfbb56a2d7270b731025e157c343be88cefcd2a 2eafa54a769aaf562bfdcd263a559425ac2628cf bb5ef56d0eda4c1207fbd6298bea42c0cbc12dae aeedcbf3bca6b2a582a71b0bd31473c605fee7d2 9499a5a8ec2e8cb58400912b291d8634627aa536,,Reorganizing DART library composition,Similarly to #587  this RP changes the library composition of DART from {dart-core  dart} to {dart  optional components depending on the 3rd party library dependencies).  This pull request includes #651. See [this](//github.com/dartsim/dart/compare/packaging/osgdart...packaging/components) to see only the changes made after #651.  Componentizing `collision` is saved for later until we figure out how to handle dynamic library linking of `dart` to the components. For example  `dart` should be compiled without `dart-collision-bullet`  but also `dart` should be able to load `dart-collision-bullet` in runtime to use the bullet collision detection in the constraint solver.
dartsim/dart,653,2016-03-29T16:43:22Z,2016-04-16T05:34:32Z,False,none,0ba8afe6777bd5f1c2350ae023515a3004d77f80,576,66,37d59b8633ce6f4dbee0ed29a3875015a277cb0c 0b2da84a59207de7491fa3bc5ec31dfb00b01b43 a0b1305efa1fe15cc2edce236706d5f373ed8ed1 054fc149b4efd994e29779d34e929a90f8569d18 1d437c632ce6d5e9482e7dcc3cf2c28f6b7977eb 88d56abe9cf27becbd40a879b5d83ff4b68e1895 0c931ddd0aa7d7ea6eb6968d2efb8449b77ee98b 7adf6b8b14ee3b2f16715d6ca200e326626eb429 10397b0df5b8df73614853db7c8eacab6a00af5f 889ccf8c7f4573d7f9a5ba172eb972d02b93bc61 da625ecb9ed899bad4d47975e3b23844c25ecd73 c0b4dfec3b41c4bb40782e00c3c2bf1c30cc8c70 321e136d205d4d090812c03dbe78500b96c13b2c 634192f45e456e0ebfa653ea0e4dc8fefd1acc69 22fb8f85e020d230160b8bb214a53b477ed73fff d094bd74cecd59208c3c776355b9762f12e2069b e330676dfb74588ac9f173227e34ef367f931cf9 e22f4ce2b743801461704bf8e614a8388d470e3b 522b2a974ff822bb67303497e6a7381b2dd3705d 6004a1bb57a211d7c5cb21f318d886688086af65 87e17d99dfc49225ca9b84d0084aada8706d7536 ba69ba7bf2f2ad140e75446f961b9cae20f5718a 60bd53b4d61bec1f5e1a5d063c0f947069201832 d85b74bc574fc2bf65726a00c1c1f384fb566225 e93f921b111f99128880d9790823c8924a479be4 0de9993f1e37f83c17608ebf12c4901e55a9cd16 f3a89c7e57bb832aa6fc41dcbcbb22f322036c88 5039629a534e09885fd2dcb0b5993d12a61bfbf5 25cac6b46eff74176f946935104e6a9bf14695e1 5d803257cd6c8667fb35c295e57f7ceac922bfd9 161a396b5601c6f87c966760bbd4fc2e1d1fafae a6653d60657dcb80dcef7f756660442525355d8f f91a19079ecbbd0c0f46e59e4f2b2d95304b18b4 4bf1ec7cdb63ccd655a15da91ed312113e53d751 b935da178c867442bb403a8b95d8625c7b234bce 0be239c756b8c702f5b88df74176ed4752c899f0 c0d83266b840ad68cba9f1fd533a34397be8e849 12743da18fbf1e69ffdc1d048abaa574a21b0455 19fdc4b317697b596eb503da3a7a18db2b4ac80e a18f4ddfbd30b290b17e3a4d69ddd8acfc30d76f efc9699cd94722e07ca723f982d31908688432bf 0a265e6fe81ae5184c866588884e5b9295c84fdf 0888b9c8d349f24daa0439f8a7e5fd70d9ebfc0b ce6f5589c190a101c26073ce63c5b9df4b518eab 555d6ff0a009b124bd3d0bf8f3fc5ca2ebf0baf8 65c4d9669ec46f36f44e862f5666e58e8d111406 aac9ac904829636e8a3d190a22219a71a51188f5 54a2316657425572dccc3e590c254d3a7aa00480 5b89458cd812c2fa23877df0317b90c05fb6365e 4993f060adb7d7cb430e4e195bdde78d7c67f306 c3223828f0920fb137c235a777c80ec94c6f647a 123e87d1420debd42fa151de672edac62f8141a8 e6739511f3acec6c957a94e2698f94d8a8c366e5 40d9a382bc1467132984183ab885d29f6e4eddbe 063e552a7f384a7925ecae5649225a8e3c140e42 df3c1a7f4f1e028c0a6b0db378e178b412fa5f96 26497a0f8a7643797891e39c83112198f61385fe b259145e2701b7d369816fd9bdf19a9e9c978cb8 f52833517ee8bb541d0c061e37870c59ea5dd2a4 67d74ad4933cb9403950034ca59f823bd59fe494 f56dd2e353a3144e3703d7fe5a9ffa6cc145dbc5 63a697c15009d04573cd56f31029ac718160f5a5 30ca7fea06303343a1ca3764774eb66da2ca7113 0bd36fe0af889832c4abd78aaaf2bc223f7557cc 62f52d2950b04a63b50be221084d430002b195bd 9559d1f16fec4b797cbda99fe782625b4e9351bf,,Changing header extension from h to hpp,This PR changes head extension from `.h` to `.hpp` as proposed in #568.  Exceptions: ode files and lodepng.h  This pull request includes #652. See [this](https://github.com/dartsim/dart/compare/packaging/components...packaging/h_to_hpp) to see only the changes made after #652.
dartsim/dart,688,2016-04-22T15:58:57Z,2016-04-22T19:37:55Z,True,2016-04-22T19:37:55Z,d0563b336c517fb3f45412d95ea993c94033253a,1,1,29df2fa84f144ff2762bc139d13cc703054edd5f,,Remove coveralls token from travis yml,This PR resolved #687 .  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/688)  <!-- Reviewable:end -->
dartsim/dart,679,2016-04-21T20:49:51Z,2016-04-24T01:34:08Z,True,2016-04-24T01:34:08Z,d70b316144f92198affe98b510ae4d9a78638883,454,4,3e889a9b3624aa22fe65df3c58579bed4988c808 5e17c52545abdb1186901cf272479f064636dade bc9a0007d5ad556bdd3af410067c8d303c9f0bca 2de4d8ce97759c6371586f6b31ef1efa81f69d2b,,Update copyright years,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/679)  <!-- Reviewable:end -->
dartsim/dart,682,2016-04-21T22:26:01Z,2016-04-24T15:16:36Z,True,2016-04-24T15:16:36Z,23fd076894318c0e64524cf8425536e562e7e549,4,5,028e214458d1b710de77360582b6239da434efa0 4fb1b7fe49ae3eb8cfa3d1b40bbec27caae36064 439de079a4c996149d431d4c790bf2c51e472d4f a83ac7bac8faec7927626495af5d7c1850fb36e8 c8fcc6a29090800a3745ce1266525fa6e1c592f6,,Configure Travis to treat warnings as errors,resolves #677  <!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/682)  <!-- Reviewable:end -->
dartsim/dart,700,2016-04-25T18:25:35Z,2016-04-25T21:00:01Z,True,2016-04-25T21:00:01Z,ba3502eab3bcefea0e7542832ae4145d8da2c205,3,4,c8d6d7d00d66c36a46dea59edef12ca45248cc1e 93fefdb74a381bfa3025ac08f8450b258b7898dc c9639335480007f9711734c74434052c80dacdda 7db3fbd56c8c9aebd15ec78e7f6dbe38508d7f1d,,Simplify Travis test for general push,Up to now  Travis tests for 2 x 2 x 2 (os  compiler  build type) builds per general push and pull request push. However  this may slow down the development process since usually it takes 1-2 hours to see the result.  This pull request simplifies the build for general pushes by testing only two builds (linux-gcc-[debug/release]).  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/700)  <!-- Reviewable:end -->
dartsim/dart,723,2016-05-12T16:12:05Z,2016-05-13T16:58:53Z,True,2016-05-13T16:58:53Z,5131609cff7065d47c4072eab3d8b1b68a2f3bce,527,8,036f373946e3324dd27b4cb22468f53fa72c1775 e0e49d82f005d6fa11b444a2ca3d79db6a0952de 9392191b691ae2e87dde104ee099699d3a1e526b 327cd498710f36c02496624767895d405747edf9 9e8cef80afa304cdb34b11fb9350f715f8f8afae 2d293eea9b049ea009dcd44f712395e4d3009d35 5e3d126a54f327731f3906b866e5e1a4a5d431e3 0eaa902cd36a810fa4c1722d7b49725c60bc9961,,Update copyright,Since this year  DART has become a more collaborative project as being supported by three research groups of Graphics Lab and Humanoid Lab at Georgia Tech  and Personal Robotics Lab at CMU. We believe it's the right time to have their names on the copyright.  Also  the individual contributors have moved to a separate file `CONTRIBUTING.md` from the copyright with short descriptions of their contributions. We've tried to fill the contributions at our best  but please let us know if you found any incomplete or incorrect information  or even you're not on the list.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="35" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/723)  <!-- Reviewable:end -->
dartsim/dart,761,2016-08-26T14:18:55Z,2016-08-26T17:41:06Z,True,2016-08-26T17:41:06Z,dcf0d7b493d6102ab26effb772455e2c3278b349,6,2,b6b1b136bc460caf9a4a9a1dcd13ab6bf2d0bd29 f13f319322b88d69a70f99f7c6119a69cc751ef7,,Link to flann properly,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/761)  <!-- Reviewable:end -->
dartsim/dart,764,2016-08-26T19:56:13Z,2016-08-27T12:30:06Z,True,2016-08-27T12:30:06Z,1c1f4583e3d8766bb1db67ae8d4a302bb9ce96e6,10,8,b7e9fdd62e12c8c00cc0f28b04a2d8a6863315b3 b3c21005ef18876db8c7a198b9ec60ad4140135a 20457320836132d1555f398e216a5d484b31590d 6fedd1057d7bf1a525bd5258ab59b5441c38a90d 1a5d9593fa0044f984e2799011a8b0ece6eb48c7 7c2c3a352eff6d7bb76bcc2744aca0e4c0cb8811 eb6c050df22c5627bd66d703eadd612ba43cac6a f3910c88c2067c94c0431f338a7d0173303d74a7,,Use btGImpactMeshShape instead of btConvexTriangleMeshShape,This pull request switches to use `btConvexTriangleMeshShape` instead of `btGImpactMeshShape` for mesh shapes to support not only convex but also concave meshes.  Related issue: #762  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/764)  <!-- Reviewable:end -->
dartsim/dart,766,2016-08-27T16:45:16Z,2016-08-27T22:32:34Z,True,2016-08-27T22:32:34Z,6c313683a4d595c541ceb971d4b6327b578a1753,6,3,9060b2e583b1822e80d0cc70f130f81248f94417 8e8b833960a2a692d021c7d8c7494dd3cf4256d2 7b873824defc367c4d812b1bc90dd75a770a5dc8,,Support urdfdom_headers 1 0,`urdfdom_headers` 1.0 [is released](https://github.com/ros/urdfdom_headers/releases/tag/1.0.0) with API changes. The major change was replacing `boost` with C++11  which is a relatively small change.  This pull request adds support of `urdfdom_headers` 1.0 using different type aliasings depending on the `urdfdom_headers` versions.  This should fix [the build failures on Ubuntu `yakkety`](https://launchpadlibrarian.net/281296686/buildlog_ubuntu-yakkety-amd64.dart6_6.0.0-0~1541-daily~ubuntu16.10.1_BUILDING.txt.gz).   <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/766)  <!-- Reviewable:end -->
dartsim/dart,786,2016-10-09T16:44:52Z,2016-10-13T13:04:12Z,True,2016-10-13T13:04:12Z,458319efbe1ee8b546bcac883356962b3d7f8e8b,47,21,0302acee220c03a8585ec7a668c05274b6d1923e aecbf8543ddaa87527891b6250eb53df84091b4b c8513a849049240bec9a90b6d84dbb0d631d4e11 2ca4ae2c12afb9826e87de6606dc4e1704030c18 425d9ad9ea2dd926f37fb34c1a8e7c0471b79592 f0374b7775cb8ee81b12c7e903e12c1975774c65 d82d49517330ed1f4609efe1f34ea7236f847b85 2ba310834ed4fd42eb18c37b04197229ef45dee8 286aeb8a856fc922cbfd771827391ee7a55f79b9 1cfbe1a72de7b29f1fa83bdb4cf8c68c035604cc 0f9d4cfcf33c0dc8bc32c29e390acdc9ca1c02f6 3509ee69142afb36583b425352e1da7c83f68386 e7f78b87b588bab14a0aad80275aab7b12edb658 5f6e47d92db0a29ff20ece37f5fca2ef5ffbb93a 4fc45e2ab2579d329a051eca19443c80ef3012b4 83bc548e0f38653ecb43b17c6fb4f0ba10d3ff19 7cf9118c84fa7fa40a58eb0fc370773609cc150c 40aa795082b9dba00a071fc4c02cf5ebfbbddb4d 119fff95899bd93c8b854bec0322c1b49bd7dd54 42c7003ef500201a70babd2acc49e9d062e8db5f be0567b3319fe0c3a1f63a6da2de2928f7ab5766,,Export each CMake component target as a separate file,Since #652  DART is built in several components depending on what the optional dependencies are installed. However  all the exported CMake targets are shipped in a single target file  which is problematic in finding DART components when the DART packages are partially installed. The single target file always attempts to check the binary files of all the component while some components could be not installed  and it returns errors in that case. This PR is to fix the problem. ### Main changes - Adopted component system of [personalrobotics/aikido#107](https://github.com/personalrobotics/aikido/pull/107)   - split target files per target (previously single target file was used)   - Introduced _component_ targets. A component could have multiple targets.   - Note: Component `dart` is the default component so we don't need to explicitly have it `COMPONENTS` variable in `find_package`. For example  `find_package(dart)` is identical to `find_package(dart COMPONENTS dart)`. ### Subsidiary changes - The bullet collision detector is packaged as a separate component `collision-bullet` (or target `dart-collision-bullet`). Component `utils` now depends on `collision-bullet` because `SkelParser` needs to parse the bullet collision detector. -  Introduced CMake option `DART_VERBOSE`. If it's `Off`  which is the default  CMake prints minimal messages like:      ``` shell   --    -- ============================================   --                 DART 6.1.1   -- ============================================   -- Adding 9 components including the default component 'dart'   -- Adding 33 unittests   -- Adding 25 examples   -- Adding 8 tutorials   --    -- Run 'make' to build all the components   -- Run 'make tests' to build all the unittests   -- Run 'make examples' to build all the examples   -- Run 'make tutorials' to build all the tutorials   --    -- Configuring done   -- Generating done   -- Build files have been written to: /home/js/dev/dart/components/build/Debug   ```      If it's `On`  CMake prints the full messages as [before](https://travis-ci.org/dartsim/dart/jobs/166222750#L1017). - Used CMake _property_ instead of _variable_ to manage global values ### Caveat  Edit: Let's stay with using upper case as before and reopen the discussion later if needed.  ~~Adopting the CMake scripts  the CMake package name for DART is now lowercases  `dart`. Subsequently  the CMake variables use the lowercase prefix such as `dart_FOUND` and `dart_INCLUDE_DIRS`.~~  ~~It wasn't intentional at first  but I'm starting to be inclined to use lower cases for consistency with the library name. Not sure what's the preferred way  though. If we use lower case then the consumer project should find DART as `find_package(dart)`  which breaks the backward compatibility.~~  ~~So I think we should do either of:~~  ~~(1) provide both of upper and lower case versions at the same time until the next major release. (2) just return to the upper case. In this case  I may need to ask help to @mkoval. I tried to tweak `Component.cmake` and `DARTConfig.cmake`  but it wasn't clear to me.~~  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/786)  <!-- Reviewable:end -->
dartsim/dart,481,2015-08-01T13:03:11Z,2015-08-02T10:50:34Z,True,2015-08-02T10:50:34Z,a83a05580442d7cb0313b1bb0b6983400c9d919f,5,5,5ff493d263d8b00dfa7fd0b05476e52914061158 32453370488d20aa5ccbbbd3e827294480a82500 ef28081d2313e880739a36aaac06c27c69f9be91 8a6e4571c7e0faad0805c31c51500dbbaada5e73 49b9b5327f28c93cbae6b04cc8707f8c73682e3e,,Fix IpoptSolver bugs,This pull request is a revised version of #198 with more bug fixes.
dartsim/dart,806,2016-10-27T14:37:13Z,2016-11-01T14:58:16Z,True,2016-11-01T14:58:16Z,66beee9a4a4f3a8083a5c21ea8d1c920fdc33975,3,3,3ec63b2e813241b4a7824d2cd7b54a3ee6995520 a6c54e6a596b60529b163362b81f7d2b00ea42e1 e12635a1636e3d3c4f0fea7bbcf7885e9dcbeee8,,Use Codecov for online code coverage report,Coveralls and Codecov are all promising coverage reporting services  but it seems [the layout of Codecov](https://codecov.io/gh/dartsim/dart/branch/codecov) looks more organized and intuitive to me comparing to [Coveralls'](https://coveralls.io/github/dartsim/dart?branch=master).  We could use Codecov with this minimal changes of this PR since they both work based on `gcov` but uploading to different services. There are some CMake scripts could be cleaned up  but I'd like to save it for future PRs.  <!-- Reviewable:start -->  ---  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/806)  <!-- Reviewable:end -->
dartsim/dart,811,2016-11-03T06:10:04Z,2016-11-04T14:38:58Z,True,2016-11-04T14:38:58Z,4ced794594ed7ce3bdb6e3a200514d9f3cbf22fb,6,15,bdb9f0b73ccffa66d02dc82335b8a6ce4fca1b45 6ee5e925eb3b2a4d0ad17bed5a560ed8d566a34d e26063e890f6ac5618bef00446127fab9024be50 fb5d8f7bb754ff6cff2abede163a9387a62c9cde 7c9131c6444586ce98e35198964a00226e314bb3 1d2f1d2b8ff36c8f5b86cb804f597c39b3cb7513 b2545d1bf6dd9920f102b87feada4ee93e2cd640 32194556b862c0cddc40bd2d6173cc83f7de01e7 522bd17d59dcd73e8fff50ea498d1b9dddbcdec9 08e04aa1ccd9059244a1cf2210684dc99ddbb5f8 6158607e7eda6b019d2f532a558721df3a8134c6 6c42f64864dda2c51a1fc2aa5cd3513b520e8c1e e5e61bd6ef14536cbb285ffa8a693ef73ccfbd12 0adee4bffce29223203bef1766e6c28ca1b3503d b4c67968befb88f33a138f7c922e8cfca8433a96,,Setup clang format target,  <!-- Reviewable:start --> This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/811) <!-- Reviewable:end -->
dartsim/dart,834,2017-01-13T20:01:42Z,2017-01-14T01:11:20Z,True,2017-01-14T01:11:20Z,6c21492b11fe89bf31c800b5400e2385e354f75f,571,2,4b0c48fb4f9e01e4e69eed362d67c04f91fc2d09 f264cdca274e7765529796b0646582b8903ddeca,,Update copyright,  <!-- Reviewable:start --> This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/834) <!-- Reviewable:end -->
dartsim/dart,842,2017-01-31T05:55:14Z,2017-02-05T18:50:51Z,True,2017-02-05T18:50:51Z,ad7544370669c6088337ef3bcae3a694cf6d7e99,197,14,bc443fc04a7fb593d91c1f5a5a772bb32386b116 27efcdb1889833774947fa882b8f49d5dbc7bfb3 95b80d434d219692728a8edc83641e5a80d1b062 4363ec8556f4a3e89de61bab86eebe6710f1e8a2 162b7a842ee737c03339c6d6554954748fe69e46 764900674f0f8d924ac3ffa2c66622644513dc5c 260ce8d94b942c56368f9abb9e99e3bbf8b7c9e7 c62c56a7ff1c2999e8fd00beeba9e8f611674a03 dd6cbdcba6faad7fd90de4b4de280d9c6ef3598b b490cc6e487f47ac16eddb604943cd2faa953b90 762c693f9befd54ee4bbac15f5ea61d40ed4483d d3b609ad45fb01c2ae9620c73dddc42bd1f21703 c89f7073c022281bc8b49f9f7060be6c52a1ba06 3cbbbc76586f6be8fa878039274413dfc98f761e,,Allow examples and tutorials to be built out of DART source tree,This PR allows the examples and tutorials can be built out of the DART source tree when DART is installed on the system. The examples and tutorials are now installed under system directory (e.g.  for Linux  `/usr/share/doc/dart/examples` and `/usr/share/doc/dart/tutorials`) with sample data files (`/usr/share/doc/dart/data`) when DART is installed. You can copy the directories to your workspace to build them. Detailed instruction can be found in the directories.    We are still able to build examples and tutorials through the DART build system. It requires distinct build script  which is in the main `CMakeLists.txt`  because the build scripts in the examples and tutorials assumes that DART is already installed which is not always true when building DART from source. One downside of doing this would be that we should keep maintaining two build scripts for the same projects.    `SampleResourceRetriever` class is introduced to be able to load the sample data files from either of the system directory or in DART source. It first tries to load from the system directory and then from the system directory if failed. A specific URI is also introduced to refer to the sample data (e.g.  `file://sample/skel/biped.skel`).    TODOs:  * [x] Add instruction at the root of examples and tutorials  * ~~Add debian packages for examples and tutorials~~ (will be done by other PR)  * ~~Add Travis-CI tests for out-of-source build of examples and tutorials if possible~~ (will be done by other PR)    Note: This PR will be squashed and then merged.    Related issues: #751  #752  #839     <!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/842)  <!-- Reviewable:end -->
dartsim/dart,861,2017-03-28T22:23:33Z,2017-04-14T20:39:02Z,True,2017-04-14T20:39:02Z,48a5aaf9c05a0b00631e88b08369ac00753231bc,56,19,231be36a0ad226a42dd9d7f17f34a7d04590e37f 2df6066a7c7809e46aca7cf0353b297c875e1ff5 747e9cb189ecc58c299f062d3fcb0aa9f8c3afde 874d84687ee87fe7de82198e8890a28fdc79efcd 6b19ceec92888c4c501fb6822b5a27009cd35eb1 0059d9eab4830f9c90d9e86fd0b1635d9628b946 cb7572ad7ef68769acb0f4a87f748a5de598cd4a 627df80b99ce8dea14854cca2afd45494f7b5a04 7f78285ca16e529f68e221755c798908b968764a 3408890cd5388b2dfc0eb4b0ff82b55fa279f7b1 ebb5759b4e130326ea331d2f22ba885e7f307fe1 f44c7723f38d438d59b6b1edb9376be30749597a 4b564d037d735b7236d022381032d5ac62f32beb 845d1124cf221a4cb4b405f283cf3186a180114d 130e2fffec05bcdc8c2e4aaa7ff21946849756d7 cee10843acc7f8882d5945e60a568308ac721614 5fb11bf0c079ccd8b0ec0c3ed860368b1e64cbf9 f7833f8dfdc32539ae9a51dcaa7b9435fc6ffe17 64f7eaecea177c2dd5c26b83c5604b4c36e5bdb7,,Add ODE collision detector,This PR adds the ODE collision detector support to DART.    The supported shape types are sphere  box  capsule  cylinder plane  and mesh; and the unsupported types are ellipsoid  cone  multi-sphere  and soft mesh.    The ODE collision detector only supports collision detection queries but not distance queries.    The ODE collision detector is only enabled when ODE 0.11 or later is installed on the system.
dartsim/dart,880,2017-04-22T20:04:15Z,2017-04-25T12:01:34Z,True,2017-04-25T12:01:34Z,7ec76a19aa7172960a880fec9e947ec36898fbcf,45,9,600b428994c3dc93fcd901818f7b26224269da16 d258f67bfb230eb8a9d9c0ef5ab6c37a4a5d133b d2b9900618e88cf90e4b7047d9063f9cb8ddb1a9 ddf01289a08b4bf580864acdc19c256cc5573ca9 37251a29ba56624d3fca3758b9501ed3b3c0214a 4e2d0164ecb4d8658e1deef6e53aa24daba55e4c 254743d3602e77654503d72378a7f6d02dd0b6f0 bd1473499b649dde1bb91c699b3994d7929e4aaf 189212ffcda646c6267829524e169d2e830e67ee,,Rework on dependency checking,Currently  all the optional dependencies were searched in a batch whereas those dependencies are required by different optional components. I think it would make more sense to move the dependency checks to the each component that requires them.    This also should resolve #830.
dartsim/dart,882,2017-05-14T17:58:52Z,2017-05-14T22:55:44Z,True,2017-05-14T22:55:44Z,7fc046515db62c3a5dcc2f4182d150017db14ee2,19,2,8e3fecbad05307629be1713aaa5012de86e3b94e c4e518bc9cfea7364d618fd4eb1ad004b0d20c42,,Remove coveralls,DART changed the online code coverage reporting from coveralls to codecov by #806. This PR cleans up the vestiges of coveralls and enables reporting the coverage diff using pull request comment.
dartsim/dart,883,2017-05-14T19:21:26Z,2017-05-14T22:55:53Z,True,2017-05-14T22:55:53Z,02c769a40d5aae9bc51fa4a70808fe08dfd0e8bf,3,2,257cad3ce2f39406135bc2fc07fc77241e6b8d4d 2bb6c48c1722783adaf04a607814741c5b01e5da,,Add back rigidCube to the in source build list,
dartsim/dart,885,2017-05-15T22:46:04Z,2017-05-16T00:03:21Z,True,2017-05-16T00:03:21Z,e37046f0d75c2513bbbc23bd4b25b941578bb5d1,3,6,a185fa48f24bd0104644a4911a2ad45658c53dd0 2f9609edcb46caac883c2f473a1e5611bfd46fb3 a0aecedcdbf71c7ec6930a2232553b53a604f923 d5828bc2a7599507e99acfa5e3e2d986039c0428 a3fffa7e2756614f73b64aaed482d73956b1a1e1 fd50e0f221ecafed9e86fc2ba8954b8b006bfa94,,Packaging 6 2 0,
dartsim/dart,894,2017-07-20T22:00:30Z,2017-07-24T17:28:24Z,True,2017-07-24T17:28:24Z,38fdd581040dea2ae1510e196d67d04939345062,4,5,98eba25dd912a5636f97a08fd4156cdd29803d91 dccd81a60c77a385905a5afa0cdee7ab31434dad 8d05b1ffefc79ca8bc3b51b21741397663be0e91 12c5e44a79bd4e3effafd8d4a0c389685e81e55b f01ca963f0e9ece3c564ef719d878ebec89d7226,,Avoid collision checking between objects from the same body node,I noticed that if I create multiple collision objects for a single link in Gazebo while using DART physics  they are collision checked against each other even though they are part of the same link (body node). The proposed change to `CollisionFilter::needCollision` prevents collision checking between shapes attached to the same body node.    See [collisions.world](https://github.com/dartsim/dart/files/1163781/collisions.world.txt) for an example in Gazebo. It contains a model with two links and self-collisions enabled. The top link consists of two flush collision meshes. Without the change  contacts points (blue dots) are detected between the flush meshes.  ![before](https://user-images.githubusercontent.com/5615894/28440399-f1f395ec-6d5a-11e7-94e4-1c225e8c8603.jpg)    With the change  no such contacts are detected.  ![after](https://user-images.githubusercontent.com/5615894/28440459-3b345f5c-6d5b-11e7-913b-e83a9af5015b.jpg)
dartsim/dart,902,2017-08-04T01:04:43Z,2017-08-06T16:54:51Z,True,2017-08-06T16:54:50Z,a31fa9976e71528a202e293647efae741ca6685f,10,10,651946bbf7002e948156edc33cad2e635980373c dcf91102a89b0f62b8f9613faf1bc4a26d5b4f2c 4def26b22cd01840667d76615b94ce1b411e0e32 01fec0f9ade6f2d6325f529212ff82b2421f67eb 3c9d3277fc7c801438967f71ba988d04fd8a73f7 b05200ce8d7264f86a7faf5dbc48ea14cb774df0 244d89c044b53f262443ad460647b731d296c175 cb887c17802d9a58905e934c67f8d95b1a47b01a 38fdd581040dea2ae1510e196d67d04939345062 e363d1c20e41123dd1cc9a20884ceb1ed7f47e9b,,Merge master into release 6 2,There were some PRs for 6.2.1 those were merged to master instead of release-6.1. This PR merges master into release-6.2 to resolve that. Once this PR is merged  master will bump the version to 6.3.0  and all the future PRs for 6.2.1 should target release-6.2.
dartsim/dart,884,2017-05-15T16:08:56Z,2017-05-18T21:13:11Z,True,2017-05-18T21:13:11Z,aadc0476b500f2c0dc3b440b74e914d2f612a607,1,4,23733546f8276494e5050baa1b445d16655ae4aa 651946bbf7002e948156edc33cad2e635980373c 84487c25f157755da29a8b001b1209c824eaa13b c26154483d0097eefe0d3555aa6a0767579e2adc,,Install libccd enabled ODE on macOS,[`test_Collision` fails on macOS](https://travis-ci.org/dartsim/dart/jobs/232230503#L3479) when `ode` is installed that was built without `libccd`. This PR makes Travis to install `ode` built with `libccd`.     This PS is dependent on Homebrew/homebrew-core#13590.
dartsim/dart,913,2017-09-03T13:38:52Z,2017-09-06T02:09:25Z,False,none,14c0cb7a0cd982057f50aaaef2e678e0c2973104,5,39,b7f223f9b4a208e85e5955e300a13883bdd6a133 e69e9849f0216ddeb74ce1564785382497e8f193 70cfaeca2696de171d174414c0da7c229c1a5725 fe9fdd9dc8011debc8aafd464cea933c01ecd7e2 dbb1d7c4795ca046dcb069313cbd252748283377 9f268d972725d0a00f786ee4b18800e597ab94c7 b8578a74474ebefc42baf1478c89b1d3e6b93ab6 170bb5742b2e09f0e44349b0ffe59df925dbfb0e 2fbce42b5a1fc8c9fed3cfdedc82c755d543cda9 d6a52f0fb77c0c709e0864bf7b74ab5aede4dbc7 3f0937f52760f0faa32b8b6df927d509429b255f db401761958acd230ed45647bc1eee4331d777f1 792c16e663cf4fcd4034ede025171cc764fcad9a 8f4463104e6bae006000cb60033ecc0d42fba748 2fd50db61c043744627c6bd213877799c1a7678a 1edd3ee8b30d929b82157c0285f17d5167969f8a 5d7bf989a2eeb81b5f5d06996249d33eede7ed55 bdd5dcd8f904bbb48f63b5f5bc23d9ef55ec3ff6 f7170528a5d3818af2dbc179893c5ef86fd11e3a e8575d9d2485745078b689cf4a893309fc8ed4d5 4a9a22d29df482c5c43b4f26032259752e6594bf 336834636076d7c5349fb9cf5d47176f1c82a6a2 229cae6aeb97739e67d04c63aafb22ece180e175 7b2ce7f631bf10e1bc8a1d381edd268c548741b5 76533cd259f20f2722ef16e5d75a47fd8dcef749 07f341358b18f97bf1cf847b77b38951d233efe0 9972a5422517e1b4dca1f0ab6454d4132eb881bd 158ba1a8c175e5940aad9208c49723e5f6b7ffbd 89c77c8e9f1f9e9a6c8681da787831c1b05f13cc 8cacda1b3603e058a11f87751bd5637a9ce3eb5c fcafdc195a3e390147536124fec1e9af99317705 535c084fdc39f48844918d30fc8391778c0e80fe 8cf6340699fe81ada7aec0e7195fa0f456bf9fd8 2d21f354def0be2f044974ce0a2a92a02436db30 751f514b7e81d476a63459c9322557b226b9f9fc 4b6839284cf0ad239367816c8abeadfa43373042 11bd145790cf245b852eacedd1772e1607d2a5e1 ef251a0a01e29d1710c6d3f984d0985e508781bd 9869ba1a31c8bb6a554d497cdebfccdbadc92e04,,Switch to vcpkg for installing DART dependencies on Windows,We've managed and provided own installer for the DART dependencies  which was tedious work.  [As discussed](https://github.com/dartsim/dart/issues/260)  this PR hands over the duty to `vcpkg`  which is a package manager for Windows developed by Microsoft.    Note that we still don't build DART on Windows until the [existing build issues](https://github.com/dartsim/dart/issues/753) are resolved. This PS only changes the way to install the DART dependencies.
dartsim/dart,923,2017-10-04T17:37:51Z,2017-10-05T21:05:50Z,True,2017-10-05T21:05:50Z,395a78faf67cb8b12a09a5d50f0f187f00ae697a,17,2,f75a4067458d06b726bb5a33c267a022fa653662 b947520de2c47ea50c16e88cae0c9ee077c227b9,,Remove planning component and FLANN dependency,Resolves #920
dartsim/dart,929,2017-10-19T21:56:18Z,2017-10-23T02:57:21Z,True,2017-10-23T02:57:21Z,118b45df0108c78b39771876e5335a77410766a8,627,8,da509716ef1e0c72bdda6a9fbd33623fa51f0061 a777a3cde93e5be38e2a5f751a221fa8181d3138 0e9fbea1111477da9a8dc09e6223c1462ac69a48 1a177e9489e31baafb5d197e96cfabeb20f88235 29820706456c91f02f2abfa65b24fd6657d9a21f 6791394afaa4499b76d7d188c7ad0cf85e351c35 1c0f116ae52714e6b0547e71f47b60ec9a15f1db 695e35143241df73c4bcc45dfef10df04c06e4aa,,Update credits and copyright holders in license,This PR includes:  * updating the copyright holders adding [Personal Robotics Lab](https://personalrobotics.ri.cmu.edu/) and [Open Source Robotics Foundation](https://www.osrfoundation.org/)  * adding [Siddhartha S. Srinivasa](https://homes.cs.washington.edu/~siddh/) to the list of the contributors as a project advisor  * simplifying the list of copyright holders by replacing it with a statement that refers to the main license file at the root directory    ***    **Before creating a pull request**    - [x] Document new methods and classes (N/A)    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)
dartsim/dart,931,2017-10-24T20:17:06Z,2017-10-25T06:08:03Z,True,2017-10-25T06:08:03Z,e5fe91c30064349eeeeb2baec82231cea1f36eed,1,3,810774313a554e89c34876ea7dd344f85bafec2e 4586fcb9f73cbd0f3da223153c4e443db390ccc9 a0f78b17dddfaa9794cc1b9dbccbf7dd528a2183,,Install fcl using the full formulae name,I haven't figured out the actual reason  but it seems tapping `dartsim/dart` isn't working and it causes the CI test failure on macOC. This PR changes the script to install `fcl` using its full formula path so that it doesn't require tapping.    ***    **Before creating a pull request**    - [x] Document new methods and classes (N/A)    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md` (N/A)  - [x] Add unit test(s) for this change (N/A)
dartsim/dart,932,2017-10-24T22:03:44Z,2017-10-25T14:22:14Z,True,2017-10-25T14:22:14Z,30483bf36beee436ef9b4b3fd8e21fe2fab98d39,1,2,57e4213e0a0e1ea781905f64dfb0f0629cdc40b5 da3f6279b0936f6a28cb84e316124c04e3333193,,Cache apt and Homebrew to speed up Travis CI,  ***    **Before creating a pull request**    - [x] Document new methods and classes (N/A)    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side (N/A)  - [x] Summarize this change in `CHANGELOG.md` (N/A)  - [x] Add unit test(s) for this change (N/A)
dartsim/dart,873,2017-04-12T17:03:16Z,2017-11-10T11:50:46Z,True,2017-11-10T11:50:46Z,12894a2580e3b6b2c520c00f60ccc5cc9259e0d2,41,26,702c58e79b3db349fc959b5fe464677bd7527b75 04c7497b24d5d59c1a697310875de72f07925183 ea9687b20a47de044c784cccf241bb60598ed39d a8923ac4acfd942865622219141be2907078360e 0c5fa27d33db5f62a0a60263e9b49fb43343e0d9 3f76d7c84864284aa5f74d5539b270bdcfe6fd25 5b44ddf171415daf004f30c988409f16a9217436 e89b8269a1b04aa196092fc40a38585ed0d50eb6 33d5204ad911567b04ed67d867444403503cec8d 090852e1990593ae7c7c8b09c653e4dad2174c0d 3a1e823f31047459f56bdb73ef0efb870e2188c3 c239ce4c0958ba56ce2707cf18f1d8916dbf1d05 1f6b7a518ac81eec40a6bef5172464e3660e94bc 264adc4918d70a7abb9f6306f18adcb539b4b033 b71d9f7f03eece9f5860526740f0643daef2ecf9 06590df519c93fb3fe9c79dd59495894cb3b7021 bc64ece7827a951f7e4ab8e38c0f266ff4cc0f11 4dd9f7b973dba44f334053896772d9c54402535a 3cb7d0deeb797b8f67037cfadfaccab11fade283 dd0d610d2569fcb7e64e0b589389dfaf65a2a747 01d490d7ff111007e3802cdfb7e76e18ee84fbb5 2a81929d1641d4b7bac21c6c53afd7efd23ae3b2 64f48944a712d27932d272276d6a3775a525b117 e6c23bfb5d92d0053888fe8853d433e330b745be 9901e3ff9abea0bb7fd7b6d782afb33ed326c678 58b76a909dd047ee8ab286dd5b1c6ea7cad1c420,,Handle FCL 0 6,I abstracted out the FCL incompatibilities by typedefing a bunch of the common FCL types in the header  depending on which version was found. This likely needs more thorough testing  as I only had FCL 0.3 and 0.6 to test against.
dartsim/dart,936,2017-11-10T14:01:55Z,2017-11-11T04:03:59Z,True,2017-11-11T04:03:59Z,cbf82772f055f51ad551378600b8fbb698c91852,43,8,aed89bac7d8a48185ef810915cd6f4fcfd0aa6c5 be1531aecfdc986650b6a7ee0e99915af7d97b89 d08fe621734515b1df28880f267385fa74e58584 ba8bc69340b63f463b9852dd47bebed6d5f20daf 48ee2c28102402ccbe12fa898f5998eb394a89ae fd1b2be98fdbfaa304920f5dda2443f5791466c2 821f6bf23c3d5638456813ffe20a974ef79c2808 c5ac0a1ea248d21589ea360b94a76364bb909cea,,Backport of 873 for DART 6 4,Backport of #873 for DART 6.4    ***    **Before creating a pull request**    - [x] Document new methods and classes    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)
dartsim/dart,941,2017-11-12T18:39:58Z,2017-11-12T18:43:56Z,False,none,none,51,4,003447fcb9d802a5490bd600b6067a0ba6d66377 cbf82772f055f51ad551378600b8fbb698c91852 5bebbbf7c55d4179ad27190df5b2a76f610fbaa8 a798db79546323c6d69c87673442a215614f2f85,,release 6 4 master,  ***    **Before creating a pull request**    - [x] Document new methods and classes (N/A)    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md` (N/A)  - [x] Add unit test(s) for this change (N/A)
dartsim/dart,955,2018-01-06T00:29:18Z,2018-01-06T01:09:49Z,True,2018-01-06T01:09:49Z,1337d55990b6187b9b7df2d68f02092963a68145,9,4,092b0f80c8d779d8eba6ad7b06bc592333098755 3e0b88350db13d00f1644e49c554ad0acce00ed4 08e3b58fe07ca86944484519c262f144c2fade7f f323e7dd1d8f9b29b3e6d308c400aab0f16d3256,,Update DART 4 3 to be compatible with the latest macOS,**Before creating a pull request**    - [x] Document new methods and classes    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)
dartsim/dart,956,2018-01-11T22:09:04Z,2018-01-12T16:57:36Z,True,2018-01-12T16:57:36Z,fa304321d8f310398763bbaf211a0995da661ee1,19,7,bbd6be3aef965ef44af0afa6d1d92e9e7e7f635b dbec50c0e36ba3f1dd9e150e2d585db38792d398 714f097c8166b9f0792062f317d0b42b84961564 db6a2d83da0266862f5046e0cbbf35459b3303cf ee0ea1fb93d315d3c7fe9bae2a5a42e6966e5e8f 3f623d70b6f88cb96fb04c5b519c458cded555cb a110a8717226233c603d189943b52d80fe460a03,,Fix various build issues with Visual Studio 2017 15 5 3 ,This PR enables back the build tests of DART on Windows with Visual Studio 2017 (15.5.3).    Summary of changes:  * Use [`vcpkg`](https://github.com/Microsoft/vcpkg) for dependency installation (resolves #260)  * Increase the minimum required CMake version (to 3.8.0) and Visual Studio version (to 2017 (15.5.3))  * Use `/permissive-` option (resolves #753)  * Disable many warnings; these warning will be addressed eventually    Caveat  * Unit tests are not run by AppVeyor CI yet because custom CMake targets are not shown in Visual Studio (building unit tests are tied to a custom target (i.e.  `tests`)). [This post] says this is fixed in the latest VS preview  but it didn't work for me.  * `ipopt` is not installed because it's not supported by vcpkg yet. (https://github.com/Microsoft/vcpkg/issues/233)  * `osg` is not installed because `gdal`  which is one of the osg dependencies  is not built by vcpkg. (https://github.com/Microsoft/vcpkg/issues/2551)    ***    **Before creating a pull request**    - [x] Document new methods and classes    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)
dartsim/dart,977,2018-02-08T20:00:07Z,2018-02-08T21:51:21Z,True,2018-02-08T21:51:21Z,a8df7989851cc6d0541b5e5a5e7905332e05b9a6,1,1,da94eae2855956b3525b38093387fdcd7d898a3e,,Update dart_format_add macro to handle relative path,
dartsim/dart,974,2018-02-05T15:23:52Z,2018-02-12T03:22:12Z,True,2018-02-12T03:22:12Z,37fc5e8b3942402bb9c3a1ef11716055d37fcf64,3,8,01272653e36a27b2724fffa0d66e84b257616a07 42349b93f3335c3bd2530b420f86949b3233e5e3 f1a5631723dbe057b14bfa60443e32199261a50b 69393c814daf0b5c8b407b7955b4d09fbbb7e331 2b32a81cf8fa45c866b0e17010bc1ce3c56fa0eb a90bb253220ce01a9fcfbcbb54cebbd0a1b046be 753df2943f532a575f25dda9470a7d2fc392dda0 b7bc5a2e1d0b38ae808cf27d15dcd4d8f73a49eb,,Use Brewfile to install depedencies on macOS,[Homebrew will fail when it tries to install or upgrade a pacakge that is already installed the most up-to-date version](https://docs.travis-ci.com/user/reference/osx/#A-note-on-upgrading-packages) like [this](https://travis-ci.org/dartsim/dart/jobs/337454320#L68).    This PR introduces use of `brew bundel` and `Brewfile` as recommended by the [Travis manual](https://docs.travis-ci.com/user/reference/osx/#A-note-on-upgrading-packages).
dartsim/dart,982,2018-02-11T19:54:38Z,2018-02-12T21:27:22Z,True,2018-02-12T21:27:22Z,b42de6bf9a579885fdf7da81d649692a33564f89,1,3,ca171d1cc9650ec592f81f1ba52c046a58dc05eb 20fea4f6491316729ec1e028bd73b799d6b92e1e 6e24003290910335025afe263f50925fea0936ad,,Add probot stale configuration,See https://github.com/probot/stale for more details.
dartsim/dart,858,2017-03-21T14:07:59Z,2018-02-16T16:21:31Z,False,none,7dd7e7752511b9132f2a48ad6316f97084f7000b,10,1,bcb717ebee06329a8eba116a80dabcf7c18b2246,status: blocked,Drop tinyxml dependency,As discovered in #434  `tinyxml` is only a transitive dependency of `urdfdom` and DART doesn't use it in the public API. This PR drops the explicit dependency of `tinyxml`.  <!-- Reviewable:start --> --- This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/858) <!-- Reviewable:end -->
dartsim/dart,991,2018-02-16T15:16:16Z,2018-02-16T17:58:46Z,True,2018-02-16T17:58:46Z,5428e5c0ef5299ae7f893be9ddd7a2bb2dbccd0a,3,3,d1b3c29d8a2ebc3bb4c11f77cf6b2a2542067ab8 429c724ce14f93681c5bbe471e9e1d97f3cd9263 ec73119a260c1b406dd7b4b4c34659c2bce8a077,type: maintenance,Remove Brewfile,Installing dependencies using Brewfile on Travis doesn't work for some reasons.
dartsim/dart,983,2018-02-12T03:36:09Z,2018-02-18T01:40:28Z,True,2018-02-18T01:40:28Z,c70af9a46bf79e353e970e9f987785a936ca6c7a,1,4,cb6717a1716eeb6279618cff4e1cd2b68c1fb047 e8f895e42f995bf77632318bc4c9fbeeeedaa4e4 96eb134b5b03705fbddd0d5358f1af4980fb6b87 459604d8246d0249355c70d466090665ac9ee6f5,type: maintenance,Use newer osx image OS X 10 13 ,
dartsim/dart,993,2018-02-16T17:03:53Z,2018-02-18T03:33:33Z,True,2018-02-18T03:33:33Z,cf80373ed89bb1fdce5d25afd9ad2bf2e7b81ee7,9,6,bcb717ebee06329a8eba116a80dabcf7c18b2246 ec87c8fd73353e37cbef72e83e9d05aadc043de3 f9c23a61c2ecae1979a9372278d6756b734e364f c4dc85eb9ee96a3bf75b1cdb8b6847dc7cc2ba6e 01683a863104e27edbba2a7aa61fab89950f6d5b 9a7e83deb805b157bc0d48deca77e461a3456704,type: feature request,Remove tinyxml dependency,This PR is a revision of #858.    As discovered in #434  `tinyxml` is only a transitive dependency of `urdfdom` and DART doesn't use it in the public API. This PR drops the explicit dependency of `tinyxml`.    Resolves #434     ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`
dartsim/dart,995,2018-02-16T18:52:55Z,2018-02-18T18:23:01Z,False,none,94d683dc96e5f4e07ec660653ed157922b671ce8,1,2,7d3c3196c40aa86c35eec5cb5ae4e7522d61823f 78d5b5eb5478a49767e1b1c153a95fb3df3c3175,type: maintenance,Install dependencies only when not installed,
dartsim/dart,994,2018-02-16T17:08:36Z,2018-02-18T18:23:05Z,False,none,5e5247b9be5131ad5213ffc5033e7872df1d592e,4,4,4952dc8d8aa4510542f57ad8419d5bcf13eef6bd f879d862faba1bb67307c9b0a145103c8b5baff2 23457f561f0a1aeb344b2b2ce03f48a6e500e9d4 d5eb8ccba8d2b368d9476af89833072380f288d6,type: maintenance,Add missing shebang to shell scripts,
dartsim/dart,788,2016-10-11T05:12:24Z,2016-10-11T23:40:30Z,False,none,4b702c322cc256cb7d6220be7d9c1315af1686cf,305,29,0302acee220c03a8585ec7a668c05274b6d1923e aecbf8543ddaa87527891b6250eb53df84091b4b c8513a849049240bec9a90b6d84dbb0d631d4e11 2ca4ae2c12afb9826e87de6606dc4e1704030c18 425d9ad9ea2dd926f37fb34c1a8e7c0471b79592 f0374b7775cb8ee81b12c7e903e12c1975774c65 d82d49517330ed1f4609efe1f34ea7236f847b85 2ba310834ed4fd42eb18c37b04197229ef45dee8 286aeb8a856fc922cbfd771827391ee7a55f79b9 1cfbe1a72de7b29f1fa83bdb4cf8c68c035604cc 0f9d4cfcf33c0dc8bc32c29e390acdc9ca1c02f6 3509ee69142afb36583b425352e1da7c83f68386 e7f78b87b588bab14a0aad80275aab7b12edb658 5f6e47d92db0a29ff20ece37f5fca2ef5ffbb93a 4fc45e2ab2579d329a051eca19443c80ef3012b4 83bc548e0f38653ecb43b17c6fb4f0ba10d3ff19 7cf9118c84fa7fa40a58eb0fc370773609cc150c bea8b7fc1f78c03563bc47da782abf9edc25261a 40aa795082b9dba00a071fc4c02cf5ebfbbddb4d 79ef9497f388d8e7854c2da05ae85f50e328d626 7c1a834fe1fe911835e874fc2c840fae000cd88a 119fff95899bd93c8b854bec0322c1b49bd7dd54 c8674e311583da3b1d940f641e3a49563a3b7d6b ab2cd237d62fb42017fb838b0b041d114d670dd5 151a87eb584b2c262e9c743670f402b665f0eab9 3d5eac6041b120d04c6dd8183de8848d76fbb008 760fe2404a9335a541e2fe661887ebcfed0f2fb0 0b052e19fece04dff83eecda0c056896a4d42bfd 236ce013033c5bd6cef42c403f4c0c8fd65032a4,,Update Google Test to version 1 8 0,<!-- Reviewable:start -->  This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dartsim/dart/788)  <!-- Reviewable:end -->
dartsim/dart,998,2018-02-19T16:12:26Z,2018-02-19T19:02:04Z,True,2018-02-19T19:02:04Z,67c9485b05198216097021077ee53bf7c8c1d548,1,2,57527da09a5e94c62d775ef679d31bb41378f86a debcff8a78e015f785f27e2a6fd15340773ff20a,type: maintenance,Add installation test to Travis,Resolves #362
dartsim/dart,1002,2018-02-21T16:23:34Z,2018-02-21T23:08:49Z,True,2018-02-21T23:08:49Z,da6a8fa184cacf472289dc4b6f166b4b6138869b,2,3,d6930cb678e0fa73547ed948136021358e9393f6 84abad34ba37bff56806efeee83f1c39c05c30f0 0ed6f48142bf49993244cc238db49bc9e1fd6c26,type: maintenance,Update boost dependencies on Windows,based on https://github.com/dartsim/dart/issues/1001
dartsim/dart,1006,2018-02-22T16:16:14Z,2018-02-22T18:08:07Z,True,2018-02-22T18:08:06Z,6d949f9f67eef579cf8c8d67719baf2acf44db10,1,1,316e6985315345076d597fe9ccf213dd007f4f01,type: maintenance,Update stale not to close issues automatically,
dartsim/dart,1004,2018-02-22T15:59:03Z,2018-02-23T00:00:54Z,True,2018-02-23T00:00:54Z,9b28e973240044c233750c0f194d43db4a780798,647,4,4ad14effb42657041a9a735f49ecea825c828b43 fcb8d94dfc38c66c6ace5f1b2df4c28efb43a0c7 218dd246ef50ed897f936247fb36fb95923e45f4 10883def61012505a52dc8dc640614bbf78dce5c,,Update copyright years,
dartsim/dart,1018,2018-02-26T14:20:06Z,2018-02-26T16:03:22Z,True,2018-02-26T16:03:22Z,93215cffbd2365200d20a24b813c131e3a4a8ebd,1,4,72f9c93eed607fd2ff1fc8b18a2cc217069744a6 dfb0a7136ab6020e87e2de39d26b246f233a3983 953d463d66d898e4af2b5b21233a3baa1e0f171a 08f232e0f2caa7bb5a8524e4fa0bca2ab549b124,type: maintenance,Update vcpkg before installing packages,This PR fixes the recent build failures of AppVeyor tests.
dartsim/dart,1015,2018-02-26T03:36:07Z,2018-02-26T18:48:48Z,True,2018-02-26T18:48:48Z,b637b9f069ccecad172ac2e3cc32ebeef858c214,73,7,fa9dfc97258ee097d68b801c12c84845595355a0 b9f7e71938a5b476d5fbea305e275583c72c1502 94c37dee23abc95458d217f26907ab2a66abf864 ab5bc4cab80398a2dc1833d6c7847594b0f2f545 a079111d3e9e245c3a1badc6b06c1e2e916bea0d a69ce11efd2353b767feae5d0141c56ad2cbd621 e831b907e14aaf76726281414785c81508ee74ad,comp: examples,Add in source build script for examples tutorials,This PR is prerequisite work for having examples and tutorials with various build settings like requiring additional dependencies. Up to now  in-source building for examples and tutorials was handled by macros (i.e.  `dart_add_example` and `dart_add_tutorial`)  but it wouldn't be straightforward to handle various build settings.    This PR adds separate build scripts for in-source builds (based on [this suggestion](https://cmake.org/pipermail/cmake/2008-December/026130.html)). We are still able to build examples/tutorials out of source with installed DART.    **Caveat**  * I found that osgWamIkFast doesn't work (at least on Ubuntu)  and this will be addressed in another PR.  * Out-of-source builds are not tested.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Once #1018 is merged into `release-6.4`  merge `release-6.4` into this PR
dartsim/dart,1020,2018-02-26T21:15:44Z,2018-02-26T22:31:37Z,True,2018-02-26T22:31:37Z,6e5416e36a9b262ffa6cda8f7d56761eca6623b6,1,2,436796fd4ccbdd8db9348e06bbb37daa32e00048 8b3f8c2d268a9c0f476d41411983e7412cf57c46,type: maintenance,Install ode and bullet w o options,so that we can speed up CI tests on macOS    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side
dartsim/dart,1019,2018-02-26T18:35:08Z,2018-02-26T22:45:46Z,True,2018-02-26T22:45:45Z,5309abb25d6ed56af0ec4b9bb4148be0cd990e83,1,3,89f5dea09cf82d8e72ca328dd0ba14db33bcf831 366f9b8fc917592652dc3ba44421d5603f1a9eb1 372ec2e3c45e4fa2a6255d3cb51505056fdedd19,type: maintenance,Use simpler vcpkg commands,based on @ras0219-msft's [suggestion](https://github.com/dartsim/dart/pull/1018#issuecomment-368595079).    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side
dartsim/dart,989,2018-02-15T17:28:13Z,2018-02-16T18:01:21Z,False,none,c2e75ec53d25bc0053da0b691b1cbbf38560971e,6,6,9562fac2bbc3d701694c1c9ddd2f142eb683d6b9 e13bdc3a41973aa9808b3d47b4a5e90148a5ebf4 63a2c8723eacd4d067cefa7b725403e68fb24370 bf4286697c243b54d2c488915bcaa2a170746154 46fe3e19a75feb4b6bef686420d9911df1f429f2 0a8c9a879964b9aa1c4b4fda1d4b1224ab243283,type: maintenance, WIP Setup clang tidy,  ***    **Before creating a pull request**    - [ ] Document new methods and classes    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side
dartsim/dart,1025,2018-03-07T16:24:51Z,2018-03-08T12:08:47Z,True,2018-03-08T12:08:47Z,002112ebd06cac0e760ed2cad854006db03d5ec8,1,6,82ebcea7001902c6881a4a1aabc7f49c219cfc3f d952d1d6f59fcb3149adc160a9141c7ebd10eb7f 81a7650a0fedc06abe467d5f111c9a9751efdcd5 9115fc025a5c1e441c5e670648b1de833183436c b267c08fd8e1d244d4efc4c514dfea1efa71ddfb e730b3fc22de11a40b5cdbd961b04e890aed387d,type: maintenance,Add build testing on Ubuntu 16 04 to AppVeyor,It's a good news AppVeyor supports Ubuntu 16.04 (in beta)!    **TODO**  - [x] Fix build script for Windows
dartsim/dart,1030,2018-03-13T17:18:05Z,2018-03-13T17:25:53Z,True,2018-03-13T17:25:53Z,5771f72bd3253171f39741c84b1f15ce4d97aad7,1,1,2eff9a4062c65bb6e786152018f4b8734fe11f95,,Disable stale bot,I installed `stale` for testing but didn't find useful for DART.
dartsim/dart,1016,2018-02-26T04:20:25Z,2018-03-15T14:42:53Z,True,2018-03-15T14:42:53Z,2f40699bf30d86f7a528056789736b2dc7ad28e2,23,39,fa9dfc97258ee097d68b801c12c84845595355a0 b9f7e71938a5b476d5fbea305e275583c72c1502 be77d75263dd949c141c865a1bccc567d6eff6f8 69ed7db1320fcab3a1fef78d48077baac3579cd3 3858617fd3d6941d8670b8c48251382155284032 b048fb3f288a6b2b74e4394bca0208a46a3d0301 c47ac0f2168ead0af2ce960a1d9b5cbfa6dcf62b 9941bf04f6d857a690d526b4f900b0059248da34 9f938b3b660a61e7aa67b67f2066e9da40bca1df b2f302e86b2ffcfd75567ad99743ff0353c49fc4 952ce67bbcdc33bf4a7c170df3c30cdd0589d1b6 d612a5a8266e55d37496434c2ad3e950d597ee34 ade6c8d20bc4b1bab7289c5d255351b1f476e199 b9787f23be2f3ed10a4f7c29cf1a9f0227103938 f1fe20410214ae268603bab0f79fca1af3f8e3bd 9e7e86518f8a71e512b5ce14c95ab5984fdb803f 1378ab374988ae01ff43e7f0ec5b77e787e9f4ec 3d5199f15b64f983b4e7a5838e377e6bd4bdd8a9 f694cf338aeb46cccd159b5e18cecda64e8b9f55 94c37dee23abc95458d217f26907ab2a66abf864 ab5bc4cab80398a2dc1833d6c7847594b0f2f545 388f0cf32122661af68c4eafbb77b239badcfb03 0e1339e8965544109bc02ccbf49a00a6bbe326f4 15984bde0f117519a202a49d7157ef4130b5d7cd 9f2e264691edec60565604a6ff6d361b3cff62a8 a079111d3e9e245c3a1badc6b06c1e2e916bea0d a69ce11efd2353b767feae5d0141c56ad2cbd621 661f66b1fe05ce6284854a23f7ed5b3a8f9d6842 ad0e4d1a26483095fd860e7a096c956bfb49b4e8 72f84c7ae1b5c42610fcd6269fa2aca025d23540 c4285382b2b043106e5085ef83c7ed4a44bf5155 b9e564238b87d0903806877234862fb6d658d711 68ea963812f2701535f3d09588633d8eb83a2ff0 05718ba93177765318ee3a6d35377551500b8bab 7c743ce0a8b22a8c8fa584e987661fca633bdaf7 c2cae3c4407ce80d74f6edd197e2fb8e45ef253e 3f2c2cdf12de51a9d51a3ad57a660fd7a7de1d57 552b878d7db1ac24fbd72ea21cfb3e9f792a93b7 2ef2eba96e216d464fbec7512d71a84ef6331acc,comp: examples,Add human joint constraint example,This PR is a revised version of #919.    Summary of changes from #919:  * Make `tiny-dnn` as a dependency of `humanJointLimits` example. In absence of `tiny-dnn` installed  the example target is not built. If you are on macOS  you can install `tiny-dnn` as `brew install dartsim/dart/tiny-dnn`. Otherwise  you should build and install it from source.  * Remove C++14 requirements from DART libraries. But `humanJointLimits` example requires it.  * Move `Human[~]JointLimitConstraint` classes to the example directory since they are application specific at this moment.  * Fix invalid box dimensions (i.e.  negative size in z-coordinate).    Depends on #1015 ([diff from #1015](https://github.com/dartsim/dart/compare/examples/multiple_cmakelists...example/human-joint-constraints_6.4_js))    ***    **Before creating a pull request**    - [x] Document new methods and classes    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Code format for new files  - [x] Install `tiny-dnn` on CI tests to test build of this example (only macOS for now)  - [x] Update README.md of the example adding author and paper info
dartsim/dart,1041,2018-03-23T19:57:57Z,2018-03-24T04:23:07Z,True,2018-03-24T04:23:07Z,677a3c5d7fd7a8af395f20c4ccdeb278adbec90b,5,2,9e0404b4138b2d37296336685002cde7418ac852 31c86d1d552852d4ab6d008bea784ca8e35570a8,,Update CI scripts to exit immediately on failure,The current CI tests pass even on test failures (see [this build](https://travis-ci.org/dartsim/dart/jobs/357492491#L2600)).    This PR add `set -e` option so that it exits immediately.    Caveat: By adding `set -e`  Homebrew fails to install some packages (`flann`  `ipopt`  `nlopt`) successfully (e.g.  [this](https://travis-ci.org/dartsim/dart/jobs/357492491#L1221)). Those packages are disabled for now  and we will revisit this.
dartsim/dart,1043,2018-03-25T18:37:48Z,2018-03-26T03:05:28Z,True,2018-03-26T03:05:28Z,a3fc10209ab2eeacd0ed1e20e259f08526c91746,13,18,f3442685a43657702e1b38a24bbb7adee280fe96 f4a4fe84a21945bbcb74a7b6d763b7511bffc8d4 b8c10fe8164caa22f72046b2e43016b55a057aa1 3ef464bc68a745b9a2a74d9be77fcc8ab7688ec7 610247c71c5c486397d5e4f69da767e62ddcb98a 695c6a9a01146f27faaaba1972147fed11e333e5 caab5150520df99354991b38f7ace92b9a615d2c 24e1621f7789a85afa25e336f9a82021e92ced9b a5e2f4724eef6580a93f800cb3c04cf4580e4211 e3db15539b3800b0b8560e1eb0dfabc2de54941b e90094e49f707acdf8a6dffac0aea57a5ec1e12b f3a189107d7c392a191dd694945600137c265dd8 18caf079a2c74013d003abbad6517b154c609c6c f3a20b924cb255a1f7e39ec4a6a950dd9f247f77 84f1d6a98a7ef51b2f0446bc58d030c19e7dae75 9d11bd4c747bc9cfa6aae348d85b741f2a9ee8f4 c5b8e5ffa1176805400113c729e601e55a75b5b1 5b44806329a0fc567b743e71476d74778e4107cc,,Build tests on Ubuntu Xenial Artful Bionic using Docker,* Tests newer Ubuntu distros (Xenial  Artful  Bionic) using Docker in Travis CI  * Disable AppVeyor's Ubuntu image in favor of Travis CI + Docker (Travis CI is faster than AppVeyor because of Travis CI's concurrent jobs)  * Add -x option to scripts to output the command
dartsim/dart,1054,2018-04-19T21:33:58Z,2018-04-20T04:13:02Z,True,2018-04-20T04:13:02Z,efeaf98970144759336bafb2c0fb86a5f7ab471f,4,1,de503f15346214d8eb1ea312e697f5575bf23368,,Install only required boost components,
dartsim/dart,1059,2018-04-28T15:09:22Z,2018-04-29T03:47:35Z,True,2018-04-29T03:47:35Z,373434a24c85e39f9ccce176bfc868240299add6,4,3,d86fef26b720afbbb47594d84e9dcfd604d982cf ffef292037ca74d6de514f968d6ec55c72daf5a1 9d1ec681395d0ead56690365697202e86162b096,,Remove CI tests on Artful,As Bionic is release  testing on Artful is pointless.    Also  this PR removes code format test from Artful because Artful doesn't have clang-format-3.8; A higher version of clang-format outputs differently.
dartsim/dart,1061,2018-04-30T20:44:48Z,2018-05-01T00:01:09Z,True,2018-05-01T00:01:09Z,ddad78033684bb099f173bbaba9d752a54955e7f,1,2,b923d8d6c46a5d16f96354f9713536621779e645 0a0d052d5f2160d0bf12f8db15c0e5986e27f6a7,,Enable C 11 for Assimp 3 3 0 or greator,The Assimp constructor/destructor checks in `DARTFindDependencies.cmake` always fail due to lack of C++11 flags for Assimp 3.3.0 or greator. [Assimp requires C++11 since 3.3.0](https://github.com/assimp/assimp/blob/master/CHANGES#L167).    This PR adds `-std=c++11` flags for Assimp 3.3.0 or greator to the checks.    This is reported in #1060 thanks to @Aneoshun.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`
dartsim/dart,1076,2018-07-03T04:19:12Z,2018-07-10T04:21:43Z,True,2018-07-10T04:21:43Z,9c3e1380244bb325efe3b9d76db12b17899c1acc,20,31,0e77663e4af829f03f1bf81eecc39480a9d868fb c2eb2526818fc2c7f495fc3d0d2c637ebd75cdb4 54096cf1b8ea9dd41cc9c405528ecddddb4ac9a0 6a80b0761c15c9dcb32dba176daf0a2d67edde50 3ad8fc867ac7419eb8b641525fed0a07879c107c e7a693b94c76d2acedc4bed28ba433b9678edea7 fa44fe71ae304ba635df5c36973354f6e172322e b978c929b23a199a82653d2553f42156ab7519d4 0b3e89b4c555feec288fa67a9cbf15c7cb43cd27 f9d787f56b27cd2ddc83f52786090ba226c805fc 7d01bdddf95b8d0a1d1891f5a5e8904dcd2e8464 0f740da17956173b2301534cac9c56df3c2b3b70 2b50a1364ad64cbd2e62c60d4edcaf0128388623 fbed8e5ef0f2dd9b3f0134ffde75c9ac6b03bc8d 054c36b34ade315c36e97732b10054796ef2a43e c2d54dc7bc0b3739703fffb3ea5452069fa0a336 9b4be5809502cc3fab62ed02dc50e0ec3a51f461 472eb5baed25250b6c666d60a17fdd4a0c3a8344 a4fe14d79ae834a28a7d6c985c777494836edb6b c64bb227aa26418436f2c05c0dc4cc47e1d16b11 2f2898730d67ede053bd9a35e3895b871611dfe0 b469593be0094e451b6c3ae3e6c89719cb9f1a0d 220233be8a5fcde01dcd2c17fa32287fe653c76c c25a803329feb493372fb338c55a9d606f272803 98175352011718e4c4a5df56147f6dccc2767fc8 f1e008f8eb2c4fe5cf408921f9cb9b7d5269ed9d 7f08f1e6c10c57a06635869995f3f45ca06ab5a1 e4a8cc2b08016b0f2258bd8b18340d57347e74bb b9cf90746ed34e980f3a8a57781627187fbdcea2 3432c7888e497ebb49b378c86aedee99bf30f3c9 4e20a8c57522ece6a6cb7d4e34873b61080f7cc5,,Add VoxelGridShape,This PR adds `VoxelGridShape` class and its collision detection feature using fcl. `VoxelGridShape` uses [`octomap`](https://github.com/OctoMap/octomap) for the underlying voxel grid representation.    This is a minimal implementation for rapid test for voxel grid collision detection. There are many rooms for improvements  which will be handled subsequent PRs in the future.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] ~Fix test failure on macOS~ (disabled for Octomap (>= 1.9.0))  - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change
dartsim/dart,1080,2018-07-11T04:41:43Z,2018-07-11T07:25:55Z,True,2018-07-11T07:25:55Z,ccdb5cf422bd38dff7e421f21f1e9c7bfe11322e,34,3,73273857ba2cb443c2f6b9a41f9bd39f4de9f3b0 1b7d5ea6936a9a3487ecd58bee44ccfabb1df590 90306e364b97200212f0805090f824b89a7ba9fc,,Update DART versions in examples and tutorials,Additionally  this PR fixes #1079 by adding missing `collision-bullet` dependency to `tutorialBiped[-Finished]` tutorial.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side
dartsim/dart,887,2017-05-18T14:33:04Z,2017-10-26T06:35:16Z,True,2017-10-26T06:35:16Z,cb4e855301640bbec963782412daec780cf74435,62,35,a79005e203403f42052f622b0c3a09e7ba5ffea7 e3cb034f3068ebdf115e223d53b3e474a3ca1bd8 23663fed56fd4d79a50c1072bbe5a335cc7c16ce 420fdcc62a5af1755ab9a91a5cac4c3495e2369b 58def8d7aa5f99fa11f3fca407480884d4cec3ae b2c375cd39d1c7579a12082f73a97872b6a08d78 2fb059858de32743a55894d4de021a71c3273c8e a6400fe4a3ad33487883c39eeecf72b0429cfb3e 7208821c2d12eed39963031e4811a61925251c6b f02d6e4de7b66d36323f60e57a5bece79cfe8be0 54d8b8ff66e6196250659e213c2ead6774153d43 5772209fcf77b1163effa909a4160e633b6f7c8d ddad0be91f9e1cc20826c1f20889cae4bacaa89e 1f1c1099c8e52d6f11b98e03e3405da7c7da9a2f 4267167a6a71343bb674bb175d500dd4c055c6d7 19b59a9c4570e75ae46e9dc37859682db8036d44 a83f2b371c599601949e78e6d2b68fa95461f87d 139a48164ab28c0b19fd89b9d4c111ef5ab25a7a 4ef6064b77f26a718c0e5411c0da4a3e462067cb b562f276c73992e461decc43ad2c8bf8fb4b7333 d506cb5e01ba321e7f403f2c920650d4a37607f6 3eb787cbddbc2144bb6c521dea56630a149fa771 4be62225b20ec66dce32e80eaf24616b6ca85e74 a5dc8b1ed61ed767e8447130cc6d558859d80965 0c91abc61b3fdeaf9174986a9668895f9d8410e7 6f5f5183c47794ce3937e56fbd52bae7db19fe0d 92a7916acfcc352c44db722a9d0e70cdaf3f9174 5a91bf3f8be7b3d473251c18bdc21ddcdd3a8ed1 8720989966f5ad6c4be1bc50e55e30994fe49c02 6bbf6e4852ddf38ab02864e5d33563ce75bf49dc f4efb77e8dd30cdde7f6edb686054f62f1efb21a 9cc2fd0725a41d7607655a7812f87b6a06e2815f e70d4bdaccf02ddb72463b01bcd27299d23aca16 db317d57bc0b03950f5ce6ffcd01523c548ba9e5 554f6bbbfcf1afcca2958a457726ff2b88207386,,Add an analytic IK solver IkFast ,This pull request introduces an API for [IkFast](http://openrave.org/docs/0.8.2/openravepy/ikfast/)  which is an analytic IK solver that is a submodule of OpenRAVE.    Here is an example of Solving IK using IkFast for Barrett WAM Arm:  [![IK using IkFast for WAM](https://img.youtube.com/vi/JBFiLsv5VHQ/0.jpg)](https://www.youtube.com/watch?v=JBFiLsv5VHQ)    TODOs  - [ ] Add benchmark (IKFast vs iterative Jacobian based IK solver) of the Barret WAM Arm demo
dartsim/dart,1087,2018-07-18T07:41:59Z,2018-07-18T21:22:39Z,True,2018-07-18T21:22:39Z,6659c690d37ab9313f9f3702c0a5fb655631ff6c,5,1,332e5c6fd8b7a49323b5d18d2149f75aa3b539a4,,Fix osgWamIkFast build,Fixes #1085     ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side
dartsim/dart,1097,2018-08-09T04:43:24Z,2018-08-09T05:43:09Z,False,none,5100443376cd1af96d20d2529191e3709c68f08c,4,9,c5dce4cf5d0b8629dbe1b878b5d76ddca35cccd8 2b608f043ab7002dd15297e9027894d8c0fdedf4 d76655044984c9036e982f95ed5f68ae69897f4a 979c56653e77b67b3bc0aba382c5177fa86b1ce8 671efa7558821a5f9d351578043ded073b2c56ff f274c43213eab202cdbc10cf383490b95ca9a958 fa3f8c86f80ea6b752fcd4cfe3984a361a333e5c d92c9ee2ac446b697aa14eae18cbb1e9f8a47740 83963e2d47cc5d89ba00c52830337e59964174cb,,Add CI scripts for automatic API document generation,This change is inspired by https://github.com/personalrobotics/aikido/pull/403. Thanks @brianhou!
dartsim/dart,1098,2018-08-09T07:12:00Z,2018-08-11T05:00:49Z,True,2018-08-11T05:00:49Z,b22a915bfd6ceede81c95321f29b7cce6d58b823,7,2,ecbc09e0b6dcacbaa714ad1878ad083044e8f114 58a38716bef188c2092b743035a6b047df2a8780,,Setup automatic API documentation generation,This PR adds the CI scripts that automatically generate API documents when the changes are merged into `master`. The main API document page would be like [this](https://github.com/dartsim/dart/blob/gh-pages/README.md). Note that the versions to be appeared is specified by `.ci/docs_versions.txt`.    This work is inspired by https://github.com/personalrobotics/aikido/pull/403. Thanks @brianhou!    Related: https://github.com/dartsim/dartsim.github.io/issues/12
dartsim/dart,1103,2018-08-23T17:02:36Z,2018-08-25T02:23:50Z,True,2018-08-25T02:23:50Z,da9d27bfa03680295a0b31def0b5e785e47944e0,19,7,b6f5b1a9a0964cff99746f932edc07bcd9981a21 63329dfec2e1d00eef90176f827d62026065b859 43cf24f544e8caaf00702f3d7d1cc71dc2c729ce 03581825415bfc47705bdf47b1b93805589db911 81bb9f63ee9d9904d824b2f8c1867d3a521c1c5b 5223eb9916c452aa56a211a5d8e1dc51c8a0967d dba41ace560fca889880390a8f7cf2469d549bf1,,Add initial work for DART C API,This is an experimental project of adding a C wrapper for the C++ DART.
dartsim/dart,1106,2018-08-28T06:18:03Z,2018-09-10T06:26:52Z,True,2018-09-10T06:26:52Z,7a713eba2e529a4766b747cc98ba650046e19556,30,34,486594c55ac5515f2abbf86fcccf59a71c801d19 3ba91775c503842ab20189c469b95509a368f594 6fe2b7a9b1e0456a9209dd23e2f8701b5b1dfa37 4d023abc29e288184a004527a37a32b8ef893034 0d2b347d45a6cda17a36f2c443059d28729923b8 7b781f7d92cc2d35536aa535c28d20063acdd4bf bdaefbca7aeebc2e8dd4c1abac0d061911cf486f e3517d5a76ada910cb31a7d7a00d03f472fecc5e d316eb8a557ea0709b7398f0193328b243da9682 fcf9a75b190714cf95869f328b0ba52755538861 695fff230a1cccb5d97875a37b995eff1ecbf7c1 9b944c7792c8d146a6f8a7e24fdb4609160e2f3f f623514cc676be83c540146f76cc0aba670babe6 a2e1dc0e88d2e335f95a77c61c3b3abfd7d67af1 356c6192f941e2aca76e8034611ece1afbe879a8 f8c315a38d83dda8d216557e7e5d99454adce71f 130996c5949095b57910fe49394bce9c3c9c62db c1c6f921104e8046a666c486c85e984b1fde6f38 d496c641e3b032abf07f852d3572e57d37e4c1e3 6ca4edb5c2c317fbb8e042724c415bd6899b8d72 c124df84599a31a4341f3e60043e6d62ecdee1e8 db6c570f8533968299f7f8b438b6df76770dcfd4 01f66f39fe458d141cc33c3b5003d1b157e6c4a3 ec19e2e4f87e27b5e5e9d2b315fe3d31cb878a2f fb60ee2f3813461232c2db8f004c97ea3eea45a4 210e14860f29189ac996192e6bc0218b8d31c7cc 90c072136a08a9502664119eab28f40efb0661d0 642cd9097441267de88591465db7bcf9a68b4806 bee55be9757d711f1e9beca1025fb3a708e433b7 3d49cdeafb2ad8a97960c98c9f9717e0a44f4bf9 5a42bfe17c4ec582d5bd1ea9a03e8eb6730930f8 dee444893a99e0e0bb14b7c1ee2bb639554bb25e 34cdbc21e6f28eda786fcaffd22f10abfb10207d f2e6fe3c1a0ba59a3bc9cfe4fd82871fd8143f3c,,Add multi objective optimization API with Pagmo support,This PR is an initial effort for having a pipeline for multi-objective optimization.     **Summary of Main Changes**    * `MultiObjectiveProblem`: Class to define a multi-objective problem. You can compose multiple objectives  equality constraints  and inequality constraints by adding `Function`s to this class.  * `Population`: Container of populations and their fitness. Pagmo2 inspired the implementation.  * `MultiObjectiveSolver`: Base class for concrete solvers.  * `PagmoMultiObjectiveSolver`: The first concrete solver that depends on [pagmo2](https://github.com/esa/pagmo2)  which is a population-based optimization library for single/multi-objective problems.    The implementation is based on other project collaborated with Daqing Yi(@dqyi11).    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change
dartsim/dart,1188,2018-11-04T09:25:27Z,2018-11-05T04:17:08Z,True,2018-11-05T04:17:08Z,be225af432d49271af32ad8e6dba22201bf6a57a,2,2,77a2ceaa44d38b4e662abbc2f369ec9b240687c8 99e706d617b22948ea192445788ee16110911f9c,,Add Ubuntu Cosmic to the CI tests,
dartsim/dart,1192,2018-11-10T19:15:02Z,2018-11-11T16:56:46Z,True,2018-11-11T16:56:46Z,efddf551099715873b3dda1e7c21feb9118c851c,39,3,71db9a10b65bd89e9203040bf9d0ecf046404da7 9975ea2870d2fbc24dadcea7e0e0b96fd47c7443 b578d35e5317726df41ddd16b3dcda649dbbd70d,,Generate namespace headers without requiring hpp in files,This PR simplifies the process of generating namespace headers by not requiring `*.hpp.in` files. This also resolves #1081.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`
dartsim/dart,1196,2018-11-11T18:51:12Z,2018-11-12T16:51:50Z,True,2018-11-12T16:51:50Z,9f905d9ae69b9eb59af0a9ee936752f533560df7,19,3,1215a5347ecf865b1340786d8a0b02c66bba1e76 03ade7da41975097d5bf23b3a09508cbfc288f43 761e75b9ad1c578b40f917e99b1bd55ced0ba0e3,,Setup Azure Pipelines,[Azure Pipelines](https://azure.microsoft.com/en-us/services/devops/pipelines/) is a recent CI service from Microsoft. It provides unlimited build times (while Travis CI is 50min) and 10 parallel jobs for open source projects. Also  it supports three major OSs: Linux  macOS  and Windows. We could utilize this service for long build time tests (e.g.  python binding builds) or parallelize CI tests using both of Travis CI and Azure Pipelines.    It appears that Azure Pipelines is twice faster than Travis CI for a single job with the same configuration (e.g.  macOS).    This PR is not that perfect  but I think it's a good start.    **Changes**  * Make build scripts CI platform agnostic (so that it can be used in both of Travis CI and Azure Pipelines)  * Setup Azure Pipelines  * Remove macOS tests from Travis CI    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side
dartsim/dart,1195,2018-11-11T18:06:46Z,2018-11-11T18:07:07Z,False,none,256f8237499040154394c497e5ec4a1e0beda6e6,1,1,7de5ed2d318e34d18e88db2675c0c255f7dc1f32,,Set up CI with Azure Pipelines,
dartsim/dart,1205,2018-12-18T03:06:32Z,2018-12-19T03:42:04Z,True,2018-12-19T03:42:04Z,0b5b6dd21e1a119fead8c79d54b655f6ea90a5ff,40,7,5ae6510541552de975250648d0be7492ad71724a 84f6662c82068efb2a2f5d6c141413599cb81aab 64c6a462063c41f57a8f4a26990770b81cf4cb56 2564d4bdbd50b57f957d07b8337d2bfed14bd4ab 31b7a8957aa9ff8c9d0f24695db4b39825e87d80 4e4dfb9b8d79d0b574607810475992281ac6ce6e d5ab0823f46a4651bd989b46fccfdbd95a9a915d,,Remove gtest source code from DART codebase,This PR removes gtest source code from the DART codebase. Instead  we download it only when necessary. Also  the latest gtest version is used.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`
dartsim/dart,1207,2018-12-18T20:18:35Z,2018-12-19T03:42:21Z,True,2018-12-19T03:42:21Z,0ca3adad49ee0019436f75555b7aa0665caefbe4,2,1,ebca4286b87ddd37893e066869f66d553b071bd8,,Cleanup detailed cmake output,They will appear with DART_VERBOSE option.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side
dartsim/dart,1208,2018-12-30T20:26:26Z,2018-12-31T00:19:16Z,True,2018-12-31T00:19:16Z,b17dbd88869a19beb102ea6495441da85f63779a,1,1,da62bd0295ac62f0e399825c16ae7abf88009f03,,Fix cmake syntax mistake,A quick fix of CMake syntax error introduced in #1207.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side
dartsim/dart,1212,2019-01-08T18:48:50Z,2019-01-09T23:59:20Z,True,2019-01-09T23:59:20Z,d486a9217a829245a27f2335f0b7226f1aa23152,85,52,da62bd0295ac62f0e399825c16ae7abf88009f03 23b596d27874df6c73366f3bb68a4c331565b853 0edd9eecee98c1beda08284c6791ea56bd359ecf b5d4a51a424bce75c6b312d1e117c4027cf82046 4ec793f016c08bd51bb11187d6a63bd2408f68af 74037fab0b9fcc874ebcf8839ce653acf37b7990 70c234b48b91b293db85436dedd9c22ddfe3a4bc a9858af3c9281f754dc0023cb9ae895a7d081008 da717b4f81bde947eae315a2b3eb2ff94cfc6deb 4f42b71cde5fc69d6e6846c3d8282c5c52bce063 04b5f8d3da2c4394509677cf060c6a39b3ef70ba a33ebe026fa06360b585493ec9cc70b00bcd3c18 3d282f6c58cffd3a0ffe5905dd67cb12859d2ffc 686c85aa10456ec4452925f36a8bfd24494cf23e 4816efe73f771e8131adf552f5fe2d1192017699 73c28e20f5d598bd5b105d6ea6df69e0086bdecc c669b1e450a45be641b10a9922b00d139d01ffdf 22d23189073c0a44be200bd5407f7434050322c8 89397ec3b8b37483b72c46f858f950e09d394e2c 9e9779fcf854524e348b17d50266a1e7931478d8 a5ce5d355c8be6869b72528f2789484cdce198a1 691a7bdc78eb3e50b7cd88d84880d023c6e46d4a e2ab1d5ca4735a09ae15304ca4dc6db30aa7300f 541a810228fd38770f4ec35d99742b934373ad0b ba6b5d91f4e5ff4f20a4878e74e5ebae285e670a 79ed35f3996f4e8e11775b5e27c07af045d9b7f9 9bc9a37ef28deeea392baa1be4ea4417c6ee0be1 cb085ed98e0c6a97720611e8b34015c4361c22ab 3ec1c8a65020a9104bfcf59b61bc2d67f03e8748 062f2604a8664dfc14529750346f092cd0470ff3 a176eb67d0353373b2ab883d19f52181287fab02 072584364a0df676722346208a7cbbc3050556f5 ef729fc3fa996aa2d270c1421d8ce81944bc29ed e6bd19c8011f641dbf8bfdedc8b5f23a407358af 03af11ecd141fdf55fa0b53dbdb5971252a9f3ed c164f3ce33b99a11ec359abb8cca85289a5f7663 32a36aa56502196f44bccc2b81f98a302e7a6f57 10377554e0a2b0245e4f0d74ee16fa01ccc405ed 1dfb9c5c6bcc38c7f20f7c119ec5fcfd09b066a3 e2ddb453b587cf96d95b147a3e54eb2b4ccf7dde c8de175a3675b0684c395d487eab5e7f3437466d 240201dd40352666859d8fabeeff7fa6cd7ff4e0 ab745c051bbd1c890012143db0b7315415409f5e d1c2b476367f90391c624e041ccee6556303bb8c 843a3957c6f6e2784d7a89389cd13350aed66820 21437774cb096ab9aa30714d60e952e23ba4656d e297de1f756af5082775348a4c48762bb75168ea f8d411187251e1fbbaec4fd65172ebb14430cf80 fd873ca796050d9f286f8cdca885f4310c8b84a0 df251305506bcc17aa416046ffa2610b71832565 d7bebf325448f1bc8ca088f52733b3b52c2722ee 7c13f5d505db5552779418a52ee548359b6502cc,,Drop supporting Trusty and use imported targets for dependencies,This PR is a sequel of #1209  and more will be followed to modernize CMake scripts of DART. Here are two main changes in this PR.    * Drop supporting Ubuntu 14.04 (Trusty) in DART 6.7. The main reason is to use the recent CMake features (e.g.  target-based dependency management)  which requires CMake >= 3. Also  this is to reduce the effort of supporting the too old version of dependencies.    * Use `IMPORTED` targets for dependency libraries where available. For the dependencies that don't provide targets  define the targets in the finding modules  `Find<package>.cmake`. Use the same target name when the corresponding dependency provides the target in their latest version  which is not released yet.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side
dartsim/dart,1214,2019-01-10T03:43:58Z,2019-01-10T05:45:48Z,True,2019-01-10T05:45:48Z,4c1001cc858a1781e22d0a064e8bd02af2b59a97,48,3,e0dcc2cd1726e2ff93f2202f6f766b0d1c28e88d 263fada55be41fa3f60cb4def40b5c31e14087ef 2178e3cbb3ffc1974105d93277f95f67f364df2f,,Revert 1205 and update Googletest to version 1 8 1,Revert #1205 to have back Googletest source code in this repot. This is because Launchpad doesn't allow clone a git repository while building the package.    Also  this PR update the Googletest version to 1.8.1.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`
dartsim/dart,1219,2019-01-10T20:59:40Z,2019-01-10T21:38:21Z,True,2019-01-10T21:38:20Z,5cc389b40d1066f49c4a65f50b023d1b80b3bc77,3,3,22ccefce229d4a23f8fcbfe337279bf4146e8f42 98083e0669b2ac7a3ba3f67941530e5d3c77757b 35563cda6c67335f227b250174cc32367088e253,,Fix failure of ContactConstraint ContactWithKinematicJoint on Ubuntu 32 bit,Fixes #1218     ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side
dartsim/dart,1215,2019-01-10T04:21:03Z,2019-01-10T23:48:50Z,True,2019-01-10T23:48:50Z,6823839308d1face1d12b730448cadca2bbb88b5,705,10,e0dcc2cd1726e2ff93f2202f6f766b0d1c28e88d 263fada55be41fa3f60cb4def40b5c31e14087ef 2178e3cbb3ffc1974105d93277f95f67f364df2f 0043169e3dc85d33b8789985314ef50f7d58bb50 cb7dfd074aa1586cb19a235101b3fb972163f8aa d3948367f82f36ce2bafc95e3273373b986baebd 3b64f853793462f96bc25c34595e192aead7196f a7c24216b0ccbd134d6fcb99ca0fa557e168905e 44175863d16dd52f3856b2653372cc69444fb71a ecea7152e62b56874066a3e5675461733e76446f,,Packaging 6 7 0,Depends on #1214
dartsim/dart,1209,2019-01-06T06:43:55Z,2019-01-08T22:41:53Z,True,2019-01-08T22:41:52Z,ef20d1a73900d7d3bb5d38fa7a39c86263e8348d,4,6,da62bd0295ac62f0e399825c16ae7abf88009f03 23b596d27874df6c73366f3bb68a4c331565b853 0edd9eecee98c1beda08284c6791ea56bd359ecf b5d4a51a424bce75c6b312d1e117c4027cf82046 4ec793f016c08bd51bb11187d6a63bd2408f68af 74037fab0b9fcc874ebcf8839ce653acf37b7990,,Import dependency targets when loading DARTConfig cmake,Currently  the transitive dependencies of DART are propagated by using CMake variables. For example  all the dependency libraries are stored in `DART_LIBRARIES`  which will be defined by loading `DARTConfig.cmake` through calling `find_package(DART)` in a downstream project.     However  this approach can fail to load the dependency. The items in `DART_LIBRARIES` can be either of the path to a library file or a target. Path items work fine (as long as the path is correct)  but not targets because the downstream project don't know how to import the target only from the target name. This PR fixes it by letting `DARTConfig.cmake` loading the dependency targets by calling `find_packages()` for them. This approach should work as long as all the upstream dependencies loading relevant targets subsequently.    In this PR  the new change is only applied for loading `urdfdom` to quickly fix #1200  but this should be applied to all other transitive dependencies in future PRs.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side
dartsim/dart,1220,2019-01-10T22:37:13Z,2019-01-11T16:35:14Z,True,2019-01-11T16:35:14Z,5a06758c438e8d472b0d91ccae0b2b9672d5d21c,12,3,4aaa637befea2f472e8ab064e0c66c6a6cb2ae1e 4b58ad2b1082295ed5c6d46aad5f1c5ff9fe9b1d da84316c014e263e235e670a26197494f8dd1c48,,Update ClangFormat to version 6 0,We use a specific version of ClangFormat because different version can format the code differently even with the same configuration. In this PR  we update the ClangFormat version to 6.0. I particularly chose 6.0 because it's the highest version that is available on the Ubuntu distros we support for DART >= 6.8.    ***    **Before creating a pull request**    - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side
dartsim/dart,1224,2019-01-11T16:55:46Z,2019-01-11T19:19:37Z,True,2019-01-11T19:19:37Z,af5b236eba977cbea0cbd3ade752784c4f12794b,5,5,fa153cd878828208a0fb4f406d574edec477e40a 566cc40bbb24d8685dfa9ee074ba215e2d6e6e08 412e65d6310ca7e0b658ee897163a5334e06f122 ad70b11169a0f14b577792ba5e1d01a6b5f1fba0 b8e23e179983933293caa06b877ba6e3acdeef4d,,Fix building API documents on Travis CI,  ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side
dartsim/dart,1222,2019-01-11T05:30:53Z,2019-01-11T21:52:38Z,True,2019-01-11T21:52:38Z,ce185b709de758fdc61025d8ac3ef2facb2c15c3,17,8,4a5716d3e6a21847cf830399a7188df00a01a34f 939906f2a1ed693f8bd342a5494aa73a11716395 63e01735ff644bd46ba4303d7b619c84055689e5 e8bd1ed1b6761ca0cd1609b85d957af8e3094a12 9a4a7b0263c7d3455d5140f4e5522afcabb1735d bd43cb6943708d6ccacfb36ac609375d137be91e 36375d3ae1bd0a57f52eeeba4af12ec3e40d0113 9bcea7dc7fe975bbbe107b73ba0b3c5bacf0b564,,Create imported targets in DARTFind cmake instead of Find cmake,This attempts to fix the issue reported in the thread of #1209
dartsim/dart,1221,2019-01-10T23:54:35Z,2019-01-12T00:27:19Z,True,2019-01-12T00:27:19Z,7cef21ea857feabfc2a958133abbe9439eacf08b,10,16,08ebbfec3631ebe09c5a51c042631d4196ac8030 4aaa637befea2f472e8ab064e0c66c6a6cb2ae1e 4b58ad2b1082295ed5c6d46aad5f1c5ff9fe9b1d 8d98fae71bc2ec49be3413bd1cdfc53860aabba9 1216fb580367f329c1c651966f7ee64a1d90de1a 7fb2f8a822c5bca81c0e4d754d91e8a8f4859fec da84316c014e263e235e670a26197494f8dd1c48 89677df5df71c5d221bc02cfc307b8c1d77d39c4 7ea7af22c7e0291894cd14c5a7dcdbe15681f097 826ba88e3f734aa4c211f644b9010a655dd25bc2 02986d7741260d65e7d188b560dcd9f9f67a0e11 7dda552bd3473477d6bae93cbf49c2c8e4ed1eb2 3403f2287708d6b55cf1d2f4e16b0230e4db290d 5028739e3a32c89f6ffb1a5fdda611a9ada6880f af5b236eba977cbea0cbd3ade752784c4f12794b 35b08c78068e7ac91eb54960182c776157468bed,,Fix linking error of FLANN on Ubuntu Disco,FLANN requires `lz4` to be linked  but it's not explicitly linked by the upstream.    Depends on #1220     ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`
dartsim/dart,1223,2019-01-11T09:44:26Z,2019-01-14T17:37:18Z,True,2019-01-14T17:37:18Z,eaa7440f807ba4e683477d58c8f24cae2932b6dd,4,12,4a5716d3e6a21847cf830399a7188df00a01a34f 939906f2a1ed693f8bd342a5494aa73a11716395 63e01735ff644bd46ba4303d7b619c84055689e5 e8bd1ed1b6761ca0cd1609b85d957af8e3094a12 9a4a7b0263c7d3455d5140f4e5522afcabb1735d bd43cb6943708d6ccacfb36ac609375d137be91e 36375d3ae1bd0a57f52eeeba4af12ec3e40d0113 ac5f58ed8490d9abc64139e39e6872c4d24e5e6e 93a4affcbac5167a20c0f81a948c9e1ec3586edd 34b735754772ee030782a843adcda186e7c4b8e3 ec7e1102c6388465d4ba06851f01a90902dbf538 8d1ad143e950a77325e4217555d3f1f03e1966df,,Fail to find a component if one of its external dependencies is missing,This addresses the conversation at the bottom of #1222: If an external dependency of a component is missing  then the component will be declared as "not found"  which should create a configuration error when that component is required.    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change
dartsim/dart,1225,2019-01-14T06:14:07Z,2019-01-15T19:29:58Z,True,2019-01-15T19:29:58Z,87fa371cb349e6cf5df2a89cdcabda9789ffc371,7,13,4a5716d3e6a21847cf830399a7188df00a01a34f 939906f2a1ed693f8bd342a5494aa73a11716395 63e01735ff644bd46ba4303d7b619c84055689e5 e8bd1ed1b6761ca0cd1609b85d957af8e3094a12 9a4a7b0263c7d3455d5140f4e5522afcabb1735d bd43cb6943708d6ccacfb36ac609375d137be91e 36375d3ae1bd0a57f52eeeba4af12ec3e40d0113 ac5f58ed8490d9abc64139e39e6872c4d24e5e6e 93a4affcbac5167a20c0f81a948c9e1ec3586edd 8ede42809c57191149a6be517b241354bd868d1f 190a04d1be75b41f44c3007f3df05cea5ca76df3 1742d6e0c9dd53475faacc718da4ef54e2c37ee2 30aeb292a8bbd08e79a8324ddbd3ca0790b79abd,,Support multiple CMake conventions for _FOUND variable,This PR continues the efforts of #1222 in fixing an issue with the confusion of using alternative find-modules.    CMake has two conventions for setting the `*_FOUND` variable for a package: `PackageName_FOUND` and `PACKAGENAME_FOUND`  with the latter being the older convention. To be able to gracefully handle both conventions  we should check both versions of the variable when decided whether to make the imported target.    Note that this is branching off of #1223  so we should merge that one before reviewing this.
dartsim/dart,1228,2019-01-17T09:07:07Z,2019-01-17T20:36:16Z,True,2019-01-17T20:36:16Z,41152321c5342f56a8195c33e281d0788aedf405,15,4,25d6de33119ba12f60b6c11e62094ae7fbb591c9 1edf051af1f38abc44b71972694a2a228802e280 16f10af33ef3642e8f3a27abe1d26b670461d06b bf1e3f9731f66dfea49d8f689af7483eca1cde8e,,Specify mode for find_package ,There could be a case that `find_package()` is module mode when we intend it to be config mode (by not providing own module file) if the downstream package provides a module file. This PR specifies the mode explicitly to avoid this confusion.    ***    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`
dartsim/dart,1239,2019-02-13T14:46:18Z,2019-02-14T17:19:47Z,False,none,3aaaa88aeb699963973800066d05483257052034,1,1,a5bbeb25c39aee4d12b110627a80fde1817dac32,,Fix SOVERSION to use only MAJOR to match ABI rules,The SOVERSION is currently coded to MAJOR.MINOR in Dart. If I'm not wrong  Dart follows semantic versioning so ABI is compatible in all minor versions of a major serie . If that is the case  I think that the current SOVERSION should be composed only by the major version.
dartsim/dart,1246,2019-02-20T04:35:59Z,2019-02-21T03:03:59Z,True,2019-02-21T03:03:59Z,2f392b6e28f15c4d98343bd53f97aa1162ac7bc9,2,1,2a201f3007fff0061a24af6db8a77b1446ebb5f2,,Silence gcov output,Travis build with Codcov reporting fails due to huge log files.    This PR is borrowed from:  * https://github.com/personalrobotics/aikido/pull/489  * https://github.com/personalrobotics/aikido/pull/495  * https://github.com/personalrobotics/aikido/pull/501
dartsim/dart,1250,2019-02-21T03:12:09Z,2019-02-21T05:09:44Z,True,2019-02-21T05:09:44Z,0a1996ed36b94f43b4c5d47f2dc794724eaaeafc,6,2,ca91f19d71b8cd42577e803168016923ff1357d2 e954546dc2a919ce4cce268e6282ddfb20d6ddb7,,Fix not failing for missing required dependencies,Fixes #1247
dartsim/dart,1237,2019-02-12T01:26:04Z,2019-02-21T13:29:00Z,True,2019-02-21T13:29:00Z,1b2e22841e4a5e54103945bdeba96cd345c8cbe2,54,56,1e88e467514daa0abc31400987a75addcdbc5cef b44d21c1ec5225f69de3d7cd839c2dd5bbabf0e4 747a2c2d54a76418880a035397b1a8e5a247a544 c368e7c72192b742c39184fa837aa003e661e1a7 08ebbfec3631ebe09c5a51c042631d4196ac8030 4aaa637befea2f472e8ab064e0c66c6a6cb2ae1e 4b58ad2b1082295ed5c6d46aad5f1c5ff9fe9b1d 8d98fae71bc2ec49be3413bd1cdfc53860aabba9 1216fb580367f329c1c651966f7ee64a1d90de1a 7fb2f8a822c5bca81c0e4d754d91e8a8f4859fec 4c063e71dcce6c872e70e230e932664364fe7ae5 da84316c014e263e235e670a26197494f8dd1c48 89677df5df71c5d221bc02cfc307b8c1d77d39c4 7ea7af22c7e0291894cd14c5a7dcdbe15681f097 826ba88e3f734aa4c211f644b9010a655dd25bc2 0416bb2a651dd0959c286ee0e387abd92eec0cc7 6d34914a286186dfcede1908bdc411b00a6a04ce 558939a53cc48d610fb5c1019bcbe52f8f362fd4 5a0bcb1eeb823431c6e0084dda368a8ed61a5d78 0dd2f5b10f04cf7a371f1889eda5593030371401 6011239abf6ae4f42c234a556883debe310767d4 cd064d71ee294e88e1028dfa87b840a8ebbdf24f 853f7cfa16d8c3383c9d4bd5f3a108a8f3ee9274 0a81a6a39e300117e6a8b7a03d146017eb2aaf34 5f51c0908cb8a5b554897a94020a5cee240e2ecb 645f5aa1d9972cd854662812832176d520524f43 79570f89fb10e84705773c0142296f57794c2302 b7f1ab2eb494289bf21305eebc3dcf6e4f04e7e2 d6b4ad060118f29d1ff4bf73411691e477584559 c3fb5a6807d5c1ee423aa34fbfc93cf28a720f37 303d0580e95dbd3397d0313d02967a6d82a5560e aa7f64395db9295967e1b53a8e00e9c69f077d0f 1b15ebfc6e4b70d0bdcb47b5c09f7aff36c8d7c5 0639ad4340833d3d3dd68cacc69f3558709bb9c7 11e6a70ffc65a7952f4df2d89e269949a444b4d2 eba910d0968f8dbca36b218c134ce08b809462e0 1898693ca2b1f8294b3e1d1f71e9aed2af8aaae5 2d8ce0cd15e3e3ac30cf91b72f6e5486d6d84705 41942ba99fdfdfdf26d944aef8246286e03a6ac3 42a7ad3628d799010e3e36843f16698c73cac44a f6bda710898cb5c89bc87d423484af215b7b016a 5c6c97b395b8cfb52db556f54515e479f3802d91 8dc28d5968d0af92fccb433a895426cbdd6014d6 938fd3640a7167d246c9dd507c4f2471e2443b35 f32eb550d3b3e9fce68ea38935e5e842cbcde8f6 2fae1558ed9e03f4eee59733ed1604da385f0f98 22d67405f859d5d70585a04387fe3a54f1689d70 80c15e575dd775542a2135803a9338249cf16ab7 bdf5921f24f05518cd65ccbe680a644eca0dc8a3 4519ee51b308854ce26b297f1916414c35af9cb4 8c34703886087af73f64ceb8cfe1ceba19f5a654 08ac852da5ffdb349e627907e3a63958ea4141e0 2b34be7de8dee9530058c8e572d1720b0aa3fef1 4811acf827bf9eacd0860fa972053ac28d5b1f1f 7997e066aeefb42fe19357af489fb8dc059b6284 0207517bc7134aa7f39df027da59ab38b0e28bb9,,Add initial python binding utilized by Chimera and Boost Python,Python binding is still under heavy development. This is the first draft for early access for potential collaborators.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change
dartsim/dart,1254,2019-02-23T08:15:56Z,2019-02-23T14:41:44Z,True,2019-02-23T14:41:44Z,e37fef54aa0d49e9bf3679cf91f95cbc9f6bdb79,2,3,6685f790a0438e88de4202d42d3df3426e492398 c5b724cb51caac0db9f5e40ac3a2a904b6f08575 f37664edeb4155b6bec6907049f17ab506f6a7cd,,Fix not defining boost targets,This allows us to use the boost targets even when the default `FindBoost.cmake` doesn't define imported boost targets.    ***    **Before creating a pull request**    - [x] Document new methods and classes (N/A)  - [x] Format new code files using `clang-format` (N/A)    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)
dartsim/dart,1259,2019-03-03T22:55:59Z,2019-03-04T03:22:41Z,True,2019-03-04T03:22:41Z,25e4d62444262b5b82828a4966e176179e8a0859,2,3,fee67a66a985afc38bf11da8747b57840deea336 bbcb4ed1bc5d965879f6549bd0aa541ebdbec8c2 958e5576fdca7c6127db7bdf3302dc4de33f4f6e,,Offload debug build tests on Travis CI to Azure,The CI test of debug mode + codecov on Travis fails due to Travis's time limit (50 min).    This PR changes the CI settings to only test release builds on Travis CI  and let Azure test debug builds and others that require long build time (e.g.  codecov report and dartpy build).
dartsim/dart,1099,2018-08-12T20:55:22Z,2018-08-24T05:34:11Z,True,2018-08-24T05:34:11Z,545f3ad198457e6f0eed2ac32ef5c9bc63a89cf8,33,7,2d1970603fa478c0c43529fbccbcee13916ad08c c2c3fb8cb5953110247335604cc8e4aa2a306c10 0428b708cb1f9a2c68d783b790c4fb737c57d7ae 468c3f7d906eb5a9dfa79e53c07871b107a6c778 a4d61fdd48f6965d7f4c30997be6f5f71d21b93c 075454e783c5cde2bbac5202310172bf378f669f b8a85ada96145327b9292bcdb1fd3bc77fb35006,,Refactor ConstraintSolver decouple LCP solver from ConstraintSolver,This PR refactors the current constraint solver  `ConstraintSolver`  without changing the functionalities. Currently  `ConstraintSolver` is strongly tied with the (boxed) LCP solver  which leads to that it's not extensible to other non-LCP based methods.    **Summary of Changes**    * Remove the LCP solver dependency from `ConstraintSolver`  * Create `BoxedLcpSolver`  the interface class only for solving boxed LCP problems  * Create `Dantzig/PgsBoxedLcpSolver`  implementations of `BoxedLcpSolver`  * Create `BoxedLcpConstraintSolver`  an implementation of `ConstraintSolver` that requires a LCP solver. This class is the mostly close class to the previous `ConstraintSolver`  * Deprecate `DantzigConstraintSolver` and `PgsConstraintSolver` in favor of `BoxedLcpConstraintSolver` + `Dantzig/PgsBoxedLcpSolver`  * Add a "box stacking" example (will be improved further in the future PRs)    As a note  this is prework for implementation of sequential impulse method of Bullet and hopefully more constraint solvers.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change
dartsim/dart,1269,2019-04-03T04:30:25Z,2019-04-03T12:07:42Z,True,2019-04-03T12:07:42Z,4a97518c720053de907875ab8a538c44e7d844a9,2,2,137a7f770909fa2f67bf32428a12647d4556b96b 1a27192096e8050817535ad5ccdbce7280c17971,,Add mojave test case,
dartsim/dart,1272,2019-04-05T15:05:30Z,2019-04-06T01:23:07Z,True,2019-04-06T01:23:07Z,3deec2c5acdb4c6844083c05d5068c4f4ab76189,1,2,087219d860e9b049f3792cda16d7bdbc6b36d73c e1cd7e04502ae0c1bba1f323374c92afc781429b,,Use docker for Xenial build on Azure,Per https://github.com/Microsoft/azure-pipelines-image-generation/pull/732  Azure uses Boost 1.69 by default  it seems there is no option for choosing the system boost (1.58). For some reason  [DART fails to build with Boost 1.69](https://dev.azure.com/dartsim/dart/_build/results?buildId=492)  which should be fixed. In any case  the Xenial build should use the system Boost  so this PR changes to use docker for Xenial build.
dartsim/dart,1275,2019-04-19T03:35:24Z,2019-04-20T04:49:41Z,True,2019-04-20T04:49:40Z,b23f04d622308e18a03d6dfd9e42f608b02f07dd,1,1,d0bc3fb971e31f745bafb05fbb721a47a6c3482b,,Fix finding octomap,
dartsim/dart,1276,2019-04-19T14:33:18Z,2019-04-20T17:50:38Z,True,2019-04-20T17:50:38Z,d4350e9808dad388a92b88864c7d4b6dc2691f8e,14,4,4ee7c3bb08415f9ad8c28e178f075cc8c8671c97 7e1b01390cc4836ca94182a4de5a9c97d3fc043f 1e0fe4d1cdc3b170932639371f4b5c95451acfc6 cb993cd323134f40e9df1ca1394fd11709cb5bf5,,Add VoxelGridShape support to OSG renderer,![image](https://user-images.githubusercontent.com/4038467/56428754-5cda0b00-6275-11e9-9de9-683c9078d2bf.png)    This PR depends on #1275     ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)
dartsim/dart,1194,2018-11-11T02:58:37Z,2018-11-11T03:27:46Z,False,none,6e47d2d40a7472da5f68ac73982760958205df4c,1,2,d0f27d64af04ff56648f3818a31945e9a6060f02 9dbd35205101d62431aa5619826df7434c5a60a0,,Set up CI with Azure Pipelines,
dartsim/dart,1283,2019-04-23T00:31:55Z,2019-04-23T11:30:30Z,True,2019-04-23T11:30:30Z,552faf5a4b1d9c9d5c1cfff7440fd40c3bb57d62,3,2,2fa737ddfddb017066a044df72ef363ded383020 b862b5995af5634c09186ef20fb494f936391662,,Fix invalid double quotation marks,
dartsim/dart,1284,2019-04-23T01:25:50Z,2019-04-23T11:28:13Z,True,2019-04-23T11:28:13Z,7304ea236fb8c82a352358cd2eb7275e95a8a49a,2,1,89b2d288f39dd1878e09f3a39fef0cc759c7e1bc,,Disable octomap support on macOS,For some unknow reasons  Homebrew FCL package + octomap fails in collision checking for octomap. This PR disable octomap support only macOS for now.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change
dartsim/dart,1286,2019-04-23T14:52:37Z,2019-04-24T11:47:21Z,True,2019-04-24T11:47:20Z,e18046107679ff71a0da75dbbf2982b5650ff490,9,53,b2b5c3c5da8dd0744b3a098d52efee3a9ee7166f ca65f2eda91b488300e9c3f1981ff608961cf63a 93c2f7f73e8866d50d1540e2b71415a3a1a3ad4b 53217303ec9693cea381878633b4a6181036c2a4 c1b12c1796fe6663fc95cc11bc8c39271b705563 ca4718e1d166cd16556f79b869d69a9782b2e40b bae8fbf89f618a36150a4daa847b43731d3e2246 c34ca4ec1938ecec44d1bd310148384fe5f4c749 b1a4f0f7aa08be7117c488b2cd98f903692fc724 aef0cfa9e82c72c9d0e23f0ea0ec2445aaa593a7 09e6c7a7741368808b4f60335177dc0a0115840d a2e5623b9d9c8e3d2c4a77876f0c6f4d0937089f e37df0c29348dd0d39b1ba0d5ecee29c45d12a8d 4ce36b862697c222863a2bb14f7130be9a3a7c15 549b9e9b9de73b1388add14cc02300a43d83c916 c7ee9d392553d32b0dd66a2ab684bba4344373a7 34dcb8281c163787253fb2fbbc3928a8902bdbbd 33450203844395f3c763def7e1c8a26811b3bfb3 de545bc8414a6ba691f96acc0d89936b5aa7d05b b6e1a98569cceac2c2acc89ecf89fcae0da7a4da 634c09e7019c09347edb011903b389187e3e8ad3 acd369179915bce6bbd60e58ed5c1dc4a70731d5 e09c1f86b101599298861efa410b1f142bdc17e4 8984fd8938eb5971c57eb29a3c7f8ba07970cc1c 27b7be13d79d7390de60d14e8e5bc6e76422fca5 cc8ee67de0051764c2f0b4c617ffff183b75cdf2 54d4fba51258bd4e286b2e678eaf8857686ff4db b0fe1b73323d2cd651856d978ef7a851d33a3277 c2a2e3750b8cf6c628893c43964f8b072000e1d5 d7224d8301a4e53d9b0c08f536a0af1beafffe81 9528d27f18b244c0faa7ce4d61567becd72200d9 e545675a9c8224b893249b14b93225a9ccccdbae 4a784fc44a2ff3f7d4a6fa115f8efdc60147d1c2 fa5cce299633181fa7fffe69f7859cf1ef8fd3b1 5973e01fd74e0ca1cc3e88814f7ac8f21e62b851 578327ea25885ffa6a87e5be31ec5e86964ef0a7 ee31111eb58956aed9e579425255dc1f511fbdcf 9e85bf436b9490beae677063972b44791b428ebe d747fbb9f9bdf8d6bb57f207912214a4b3efedcb d2a3006c1bdcba1c7de9f521451d5d647d94a0c4 a7d67a00923311684e1328c21042306513f229a3 a0b8487c47f992f2415cfd9152000e479655f7a2 bcd3a80f077ca173f64d33fd22c5f9367a2122a3 73ef8c2716b37ad8a1fdd5d1468eb88841408ec2 674f27935c5dd4ca5a29a39fcfae6c1d0fbb1bb0 f89f405b36d8ea4ea2a3e48775027c8d801e602f dc3f1962644f679975f8d9cbebb5ec640fe357cf f800513829d32be76f7185e95cc621b8370dff72 bc42d26afc0eaea4a0eae92c8e9b53c19bd6ef15 9aa32d4a654b04d670dc0cd05354f971d5cf947f 4ee97c6080931dc2162410a42a371df07bd3e622 7eebcfcb50eb32fcb66c8ad2baa17fe7aa94c019 9a99cfa884c50d07c9b34f2d070b60d9d4587bbb,,Enable VS2019 CI tests on Azure,Building tests  examples  and tutorials are disabled for now. Thanks to @scpeters for fixing various issues in this matter.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`
dartsim/dart,1296,2019-04-28T22:20:13Z,2019-04-28T22:41:59Z,True,2019-04-28T22:41:59Z,1413506d0e7aeea04888f3c73597bed9dbd4199f,1,1,9b21ab29d3a5f799ccae908af6c191aa12ce99b7,,Disable building on Appveyor until CMake 3 14 installed,It will be enabled once Appveyor installs CMake >= 3.14 on the container.    Related issue: https://github.com/dartsim/dart/issues/1180
dartsim/dart,1293,2019-04-28T04:59:07Z,2019-04-29T05:01:54Z,True,2019-04-29T05:01:54Z,4e715be53a6ffeff7b00f62aeffa56f0ae1a8602,29,5,87f6301d35789324f5b80d3478672fda03786f24 f9af028f3cdb20e72b31247d3934afc3be281d48 2b02b2f7b19ab5c1ea6ede1b97fb3ab354a5266d 234006a706047b6792700cad16c401f1982d6c6f 956354f3c46abea350d155cc48869196e8bedf90,,Add heightmap support to OSG renderer,Resolves #1289    ![image](https://user-images.githubusercontent.com/4038467/56858921-6fb8a380-6937-11e9-8870-edb8d88c5153.png)      ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (added `osgHeightmap` example)
dartsim/dart,1301,2019-04-30T16:05:17Z,2019-05-01T08:13:12Z,True,2019-05-01T08:13:12Z,4330d5e18c345bcf9e7081719a09e41332db7312,7,5,bfeae689ad5351551ecb3b06147a2331d273fb8b 5d667764ef8a34082d26ad1398e68ab2dfb82e1c e0664a5e996f8e70523fcf38adff4f9aecbccbf9 e3048c770ded613bdcda9d881266012762857841 9de5697dacbeb2c7acec3c60628e5755c4a27752,,Fix building with pagmo s optional dependencies,Resolves #1299     ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change
dartsim/dart,1306,2019-05-05T03:22:01Z,2019-05-05T06:24:25Z,True,2019-05-05T06:24:25Z,25cad4c36537b567dc579e2bf678246cf009b2a9,3,2,77d3b1562ec3a961c2b6f6fad40ec7336cb50866 d30333c5855993caa1aa74bbb561986cef264820,,Fix code coverage reporting to Codecov,
dartsim/dart,1305,2019-05-04T11:43:57Z,2019-05-06T01:31:39Z,True,2019-05-06T01:31:39Z,84adcfa09b5e2ec9e65aad10cffdae52695d3a91,277,8,924cde9378466c97cfc2928b784a6924706765f9 3e660f5b9605167ac21c14aa2425d5c24e2ff444 e0ccee61386a51c1ff19394d57047760e70c79a4 dbc43bc09ab4651b1ff87574ee7f61897b940154 e0b2145e9f40358090afe50ebece6f5e2f631ac0 99a13cca5041933d56dab65c7715f45f42b72caf 0d9e8aad89cfd88a6ff8f825ae57e1ec25cc2766 2549b98b18f43687eda85e47419efab2a6fdfcab,,Update examples directory to make dart gui osg more accessible,This PR tweaks the examples directory to make `dart::gui::osg` more accessible. Following changes are also made:  * Change example and tutorial directory names to all lower cases  * Remove `InSourceBuild.cmake` files in favor of `dart_build[_example/_tutorial]_in_source()` macros  * Format examples and tutorials code  * Add `hello_world` example    Resolves #1304    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)
dartsim/dart,1307,2019-05-05T20:57:29Z,2019-05-06T04:31:38Z,True,2019-05-06T04:31:38Z,a12231e92bc57623cde85afc6d5b2ef683f94bc8,72,1,6cefb62ad04fdf92f11950946c8d274857ae6a27,,Switch to pybind11 for dartpy,  `hello_world.py`:  ```python  import dartpy as dart      def main():      world = dart.simulation.World.create()        urdfParser = dart.utils.DartLoader()      kr5 = urdfParser.parseSkeleton("dart://sample/urdf/KR5/KR5 sixx R650.urdf")      ground = urdfParser.parseSkeleton("dart://sample/urdf/KR5/ground.urdf")      world.addSkeleton(kr5)      world.addSkeleton(ground)        node = dart.gui.osg.RealTimeWorldNode(world)        viewer = dart.gui.osg.Viewer()      viewer.addWorldNode(node)      viewer.setUpViewInWindow(0  0  640  480)      viewer.run()      if __name__ == "__main__":      main()    ```    Screenshot:  ![image](https://user-images.githubusercontent.com/4038467/57199909-91b6b500-6f39-11e9-9d51-dcdbd4840bfc.png)      ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change
dartsim/dart,1311,2019-05-09T14:16:39Z,2019-05-10T14:08:50Z,True,2019-05-10T14:08:50Z,dec75f50e481580386d1b388b74a5f8349a06727,5,3,995316836c066c9d1faa6ccff1d6239e0fa15d0e 69e71c66ae4258d2de925f274b3234ca853826e0 7d6696c7d83fa3dc5a5bd588d43b07a9244730f7,,Fix dereferencing a dangling pointer in WorldNode,~~In `clearUnusedNodes()`  if an unused node doesn't have any holders that have the ownership  it becomes dangling pointers since `WorldNode` holds nodes as raw pointers.~~    In `clearUnusedNodes()`  an unused node is possible to hold a dangling pointer to `ShapeFrame`. This can happen because `ShapeFrameNode` doesn't have the ownership of `ShapeFrame`. This leads to dereferencing a dangling pointer in the logic of checking whether the node is shadowed or not.     This PR changes the behavior of the node deletion logic to remove the access to the internal `ShapeFrame` pointer. Instead  it now unconditionally removes the node from both of shadowed group and unshadowed group. I believe this is safe because OSG will ignore the attempt of removing a non-existing node in the group.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)
dartsim/dart,1319,2019-05-17T01:44:38Z,2019-05-17T03:44:13Z,True,2019-05-17T03:44:13Z,a253a58f765075fa53d1edcf1bd72f9ecd431a4a,1,1,7c6604a6779a78169527eb65fdc5c93d41ab01a2,,Use upstream of vcpkg,
dartsim/dart,1341,2019-05-27T18:41:13Z,2019-05-28T05:23:40Z,True,2019-05-28T05:23:40Z,976026bab274ff343522ba3e6390aa7a7f39d6f1,59,8,68d6d0d9b1791ec610508909734876dad8cc3c04 10e55c599dcbfd9d9c7f7283e0ccab2301466e7f 173a22615cd91a18d566620fb0d4e6841cbc0d00 ef76181a0536b1afae35fdaa880fc0401700fd66 8800efc7cde60ae795ca526693dcf31643ae9135 d5096682791a956dbed2238f7cc462b8d50d8df6 a5b9e599702ebe90af061bf1f9bf38946cdc44f9 05975cc614cb2fd071215c7a59778a770a2c1410,,Update build scripts for uploading dartpy to PyPI,[`dartpy` is not available on PyPI](https://pypi.org/project/dartpy/).    Installation on Ubuntu:  ```  # Required dependencies  sudo apt-get install build-essential cmake pkg-config git  sudo apt-get install libeigen3-dev libassimp-dev libccd-dev libfcl-dev libboost-regex-dev libboost-system-dev  sudo apt-get install libtinyxml2-dev liburdfdom-dev  sudo apt-get install libxi-dev libxmu-dev freeglut3-dev libopenscenegraph-dev    # Optional dependencies  sudo apt-get install libbullet-dev libode-dev liboctomap-dev  # Ubuntu 16.04 and 18.04  sudo apt-get install libnlopt-dev  # Ubuntu 18.10 and later  sudo apt-get install libnlopt-cxx-dev    pip3 install dartpy  ```    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`
dartsim/dart,1342,2019-05-28T07:47:15Z,2019-05-28T13:09:32Z,True,2019-05-28T13:09:32Z,2e0a11fa8963b2c2c179820f26f289507a904f0b,6,1,8e3b661a4eb79a986a10b97971d57b217ca09743,,Update CI settings,
dartsim/dart,1350,2019-06-03T06:10:35Z,2019-06-03T15:49:53Z,False,none,6aab58143d0e54e13e20c89275803ad0f11f620a,4,12,c1a10088a114a09fb54c1b224122480c7a8ca750 92558da76381dcd2fed64037e74619fb8879f074 bd20820c4d5ca7cc683408a6ba2b9c8c957fb909 ea8ef373a38b060b1758ec2d894d6568dad74db7 717b9c8b77a42972f5477fb4a8a6116b850d0550 4bd98ef5a6e4ebd33863f0487d43f233a515992d e97d5c53a337ff61d6f02044dcae3292e08e0ab4 4b7941a54fa15ad231c9d98c879a408153b125f1 803d6b4509b661c08fdd1cfe0103ee87f9bd60ff 7c57e62f3bcfc38dee9a6f526727558824acbc95 ee56b1280a2c0e3d89e4ffbb937e7a3fadf778e8 ed6c5b43b90553844947d25d73266f3b62584ec8,,Run memcheck on CI,
dartsim/dart,1353,2019-06-06T12:16:11Z,2019-06-06T13:45:48Z,False,none,f7b4f6326e8e957a699267917e441e8e197756e7,7,17,c1a10088a114a09fb54c1b224122480c7a8ca750 92558da76381dcd2fed64037e74619fb8879f074 bd20820c4d5ca7cc683408a6ba2b9c8c957fb909 ea8ef373a38b060b1758ec2d894d6568dad74db7 717b9c8b77a42972f5477fb4a8a6116b850d0550 4bd98ef5a6e4ebd33863f0487d43f233a515992d e97d5c53a337ff61d6f02044dcae3292e08e0ab4 4b7941a54fa15ad231c9d98c879a408153b125f1 803d6b4509b661c08fdd1cfe0103ee87f9bd60ff 7c57e62f3bcfc38dee9a6f526727558824acbc95 ee56b1280a2c0e3d89e4ffbb937e7a3fadf778e8 ed6c5b43b90553844947d25d73266f3b62584ec8 73da44356b0b2f39d61cf73586b590fda3104524 585a8cb0737bce0ee4c0379238ac6eff2ff11b4d ff28f148f94d85c17a9138fe9bef96999e12478d 3f8d8164c9726939243f00b6d21d2d05cc264fe2 b64c9c572a6229744282e124d33e604ea7e64083,,Run memcheck in CI tests,
dartsim/dart,1364,2019-07-03T07:01:04Z,2019-07-03T14:39:01Z,True,2019-07-03T14:39:01Z,8ad327a71380cd4286fe6861f123caa2d50d3cd6,1,2,1948ccc776c637d225d6ae86c8855e6783bac1b0 b708606377050d11ece381a149ac0325bf3298c7,,Test against pybind11 2 3 0 on CI,
dartsim/dart,1356,2019-06-08T16:01:33Z,2019-07-14T19:33:15Z,False,none,23538687018fa36733f9ba7725fea5912a71c40f,14,1,47c0c099288bf580d601a15c7342ab154b1418a2,,Add memcheck to build script and CI test,    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change
dartsim/dart,1373,2019-07-14T23:44:21Z,2019-07-15T03:33:12Z,True,2019-07-15T03:33:12Z,80fcc9f9d82bce563af554729f84f8926c45a14d,2,2,bf76d539f6310a02734857b56df39cc81290ef3c 4c72cf434f53dc07e2a3406f82fa1256001d82de,,Enable octomap support on macOS,Recent the Homebrew bottles for octomap and fcl seems to work on macOS.    Resolves https://github.com/dartsim/dart/issues/1078    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change
dartsim/dart,1390,2019-08-14T15:35:38Z,2019-08-14T15:35:59Z,True,2019-08-14T15:35:59Z,d0f5179ca7ab60ffd3a04f77049e12c524fe5ef5,1,1,64666a49e3471d8198388d97ba06ab3f63dfb280,,Set Azure timeout to 2 hours for all the jobs,
dartsim/dart,1395,2019-08-16T01:24:28Z,2019-08-16T18:05:34Z,True,2019-08-16T18:05:34Z,6b023c2994294d6eb1b95e2242e39ba7e9f02427,2,3,d1f1eb14a1d612a1db8645f9aecd90d55821b9e7 85d5324793e60256074bd093b84501b4355000b8 ff53e8625a2bc48c2793ad8482b2a708f617f135,,FindBullet separate win32 optimized and debug libraries,I see a configuration error on windows when trying to build dart with bullet3 installed from `vcpkg`:    ~~~  CMake Error at cmake/DARTFindBullet.cmake:16 (set_target_properties):    Property INTERFACE_LINK_LIBRARIES may not contain link-type keyword    "optimized".  The INTERFACE_LINK_LIBRARIES property may contain    configuration-sensitive generator-expressions which may be used to specify    per-configuration rules.  ~~~     There are multiple optimized and debug libraries interleaved in the `BULLET_LIBRARIES` parameter  so we can't use the simple approach from https://github.com/dartsim/dart/commit/73ef8c2716b37ad8a1fdd5d1468eb88841408ec2. I've used `cmake_parse_arguments` to separate the `debug` and `optimized` libraries  and I think I set up the generator expressions correctly  but I'm not sure. I've added `bullet3` and `ode` to the list of vcpkg packages to install in azure-pipeline  so CI should confirm if this fix is working.    ***    **Before creating a pull request**    - [X] Document new methods and classes  - [X] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change
dartsim/dart,1402,2019-08-17T00:54:38Z,2019-08-17T05:40:29Z,True,2019-08-17T05:40:29Z,7ed5bc336f7766f471dafbde8002a3e80bd35f18,4,3,73538b436f054113d2f813dec3ff3367c112f475 5694d5ba407e2bc3453d395be443254c29d226ae 9ee2fa4653ac4419c9d457d6cabe4e5885beb43b,,Fix compilation warnings from VS2019,[Build log of the warnings](https://dev.azure.com/dartsim/dart/_build/results?buildId=1587&view=logs&jobId=3bcc548c-0df3-5c60-b8ef-b9233b9b23f1&taskId=5d8baed6-9a20-5b12-6996-82143a809734&lineStart=268&lineEnd=269&colStart=1&colEnd=1)    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change
dartsim/dart,1405,2019-08-17T05:49:22Z,2019-08-17T07:41:36Z,True,2019-08-17T07:41:36Z,245aafb05499a38d923be0507db900a9238807c6,4,7,4ad81d44971d4c9a16ba557480abc8e679a8b5b3 f3e3ee512503951ca11c14d8b9748a025509cb34 12692defab4767aeaa538fa942836c21c560d758 73472e1cbb9853781b85bbae2eff54f16f3f7a63 0606d1efb6f1eb6bba69639a708b8c580d7d5a50 d8ec0e3aa09fc01dbba30cbdc95b2f24317fd669 07e9b164de23a6f90fa69df4eacea3897fa61b66,,Fix GLUT dependency check for Windows,This should fix the build issue of #1400.    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change
dartsim/dart,1400,2019-08-16T21:37:27Z,2019-08-17T08:33:53Z,True,2019-08-17T08:33:53Z,bd370981b5ee3ea47e609815d58405abd4637dab,2,5,17dab01b7b2b70b530f079b0cd435732eb318ae0 c73b6a9a890518021b52d9e07a334e869721e9b4 ea21cd0a79bb25d73cc385adb623eebff8c92c32 3dc838cb5294292e7ca7d26b1474fb006f35ae01 0c8fa4c7c2f81224290d1ecd00531f70b9a3749c,,Azure install vcpkg dependencies for utils component,I was testing the `utils` component on windows with `vcpkg install tinyxml2`  but I ran into compilation errors in [XmlHelpers.cpp](https://github.com/dartsim/dart/blob/master/dart/utils/XmlHelpers.cpp#L37-L38)  which includes `boost/algorithm/string.hpp` and `boost/lexical_cast.hpp`  since those headers were not installed along with the required boost dependencies `boost-system` and `boost-filesystem`. I've added a check for these headers in `dart/utils/CMakeLists.txt` and added to the `VCPKG_OPTIONAL_PACKAGES` variable so the `utils` component will be compiled in the windows build.    ***    **Before creating a pull request**    - [X] Document new methods and classes  - [X] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change
dartsim/dart,1401,2019-08-17T00:00:37Z,2019-08-17T23:54:46Z,True,2019-08-17T23:54:46Z,e480e2f06bd8c0dbd0be6862b7e5b4cb01df6cdf,11,4,e4ca1a8553a7624d3c46312e60cdd0c72f205bf5 bc66475066a845b1342bfebe76f18d2d78dabc10 4567f846638c9a3b11eb637aa99423dc77b1743f 22a2fc7fb9da7f6680608935e519385c8e4655b6,,Use cmake message WARNING and SEND_ERROR when appropriate,When compiling with colcon  messages to stdout (such as `message(STATUS)` calls from cmake) are not displayed on the console  while messages to stderr (such as `message(WARNING)` and `message(SEND_ERROR)`) are displayed  which makes it much easier to spot configuration issues. I noticed that many places there are `message(STATUS)` calls notifying when optional dependencies could not be found  so I changed those to `message(WARNING)`. I also noticed one place in DARTFindassimp.cmake (e4ca1a8) that seemed like it should cause the build to fail  so I changed that from `message(STATUS)` to `message(SEND_ERROR)`.    ***    **Before creating a pull request**    - [X] Document new methods and classes  - [X] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change
dartsim/dart,1409,2019-08-28T01:10:21Z,2019-08-28T03:11:39Z,True,2019-08-28T03:11:39Z,49dd195eb643e9415b4e479032b4406f671becf9,1,1,84e417eac6f12fd363425af2bf05815200c7135b,,Fix Travis CI on macOS,
dartsim/dart,1412,2019-09-07T18:11:44Z,2019-09-08T17:58:30Z,True,2019-09-08T17:58:30Z,110269cb74c9355aa4d23ed2acee3e53e037f51a,7,3,c0cf41b3753940454f31f5381e9e7b96a1b5860b 44311c67070f9f7d881e45d0dde8a3363bc7f7b2 5c62ecbcc790190facc74b26225fd62ac3074479,,Remove dependency on Boost regex,The implementation bug of GCC <regex> is no longer issue since DART requires GCC >= 5.3.1.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - ~~Add unit test(s) for this change~~
dartsim/dart,1413,2019-09-12T07:04:11Z,2019-09-14T18:01:54Z,True,2019-09-14T18:01:54Z,409bbc28f1509e3c31e8dbfbecd882602a6d2cdf,6,18,f093203f1ac8f5f151fa20818e03fcba6f8c8c02 c000eda81b81634694b82b2a3eddda2f87abc527 eda57d5d5a64b5baeae6e4d9a737286f81106059 e0c98ac31be779cd174c075fd018f1c78fb93224 34c8d1d681d02acd828e57b00cddad5cf0424d58 efefe45ce5f24ef7fae3bf421952336131cbcd84 113ce80458a9f0fd962d22fd4cb69a7e9ba22385 15fdb17e42e8c5ddc2c72251e4fd6a04c5e90fed 8332f34151ba094686431bf8fc39a66effe7fe15 1dbd3c2e8c2fa4ddd2a1748431271f5ae6997f52 c677cf360066ff551b8edd2b68f0a7c3a51fc684 3970db8ef241881e595e2669f6fac71b6e4e8196 a5db9020389e1e8add29fafb5b37163476219cef 8884de0f7c6294eff6d4a0e211b62b44dd6aefa9 330dc668598d41dbaa5321bb00909751c7febf23 431360e819100a71062f22fdb6a91132dce5eec4 5b76d68f9946b13a6685ce3cdeb254493b12a161 66b24fc34d4eb11da879d83423f9945d77b431ae,,Setup GitHub Actions new CI ,The experimental setting for minimal CI testing using [GitHub Actions](https://github.com/features/actions). More fine settings will be followed.
dartsim/dart,1416,2019-09-16T03:43:11Z,2019-09-20T09:03:55Z,True,2019-09-20T09:03:55Z,f709d00995c4910c4bc602c2bfeb950a72224c64,128,6,e850bc6e9c747c132d2662c2c515eb38d4a4a679 b5bd66444a8d34615f424dc75802999cddbc3604 f92323ccc5a762738c27a3d06f88d840abc2d015 29172cdf863b72e14fefafc7df00dcaa4d100c2a 7a0b6c9076291bf6ac409427327d52a46fdf59a9 485de6de6da861ba4cfb5e73f2d64bf0df50bbb8,,Add MJCF MuJoCo model file format parser,This PR adds experimental MJCF parser that implements a subset of the [MJCF spec](http://www.mujoco.org/book/XMLreference.html).    Some of MJCF files are copied from [OpenAI Gym](https://github.com/openai/gym/tree/c33cfd8b2cc8cac6c346bc2182cd568ef33b8821/gym/envs) for testing and an example. The license file is included.    **Fetch model controlling the end-effector using weld joint constraint**:  ![fetch2](https://user-images.githubusercontent.com/4038467/64933354-c39a2b00-d7f9-11e9-95a0-43a16c990151.gif)    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change
dartsim/dart,1417,2019-09-20T05:19:20Z,2019-09-20T09:04:52Z,True,2019-09-20T09:04:52Z,18bff8ef2ff2c7ac688ea42e3e3a79a997e413e8,6,3,ae74d523138aa8a8837e53a2bb280060a20c385a 9ab89bc7e7e10311031867d41f1b78da41f736b9 51a1efe284d6c3a6dde2ac94d826bb3ed603f009,,Remove use of boost filesystem in public APIs,    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change
dartsim/dart,1419,2019-09-21T05:53:56Z,2019-09-22T17:55:46Z,True,2019-09-22T17:55:46Z,d69835597723c59abf4b44b4973ea1a0677dbc1c,5,3,7178bf8405b2083fb6f383a4224482931e7bd4ad 2af79aa91d3126b95baf174c9d9a8369396256b8 96e8fd23ca4f762951cac9e29905bdaa29ec3d67,,Split build tests to balance loads on CI services,Build distributions:    |                       | GitHub Actions | Travis CI | Azure Pipelines | Appveyor |  |-----------------------|----------------|-----------|-----------------|----------|  | Maximum Parallel Jobs | 20             | 5         | 10              | 1  | Assigned Jobs         | 10             | 3         | 6               | 1 (only CMake)
dartsim/dart,1421,2019-09-24T09:38:45Z,2019-09-24T10:47:27Z,True,2019-09-24T10:47:27Z,07fd1a15a9dfd16d71903baea7ed515a7106924d,9,2,8568a90f77052a7cb145f0a924a33d8062dc8908 d2f008ca54d6cd9a36ab7e49950ef4cb10e630fa,,Remove requirements of setting OS_NAME and SUDO when running CI scripts,
dartsim/dart,1426,2019-11-17T07:16:33Z,2019-11-17T14:32:05Z,True,2019-11-17T14:32:05Z,9192c38825e5db948cda989d804fdea11071e3e7,1,1,04482ddedd5b50e978e23300d34bf3529d374325,,install_osx try removing sudo from brew commands,The osx CI is failing in #1424 complaining about running as root:    ~~~  Error: Running Homebrew as root is extremely dangerous and no longer supported.  As Homebrew does not drop privileges on installation you would be giving all  build scripts full access to your system.  ~~~    So I've removed the `sudo` calls from the install_osx script and CI is now passing.    ***    **Before creating a pull request**    - [X] Document new methods and classes  - [X] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change
dartsim/dart,1441,2020-03-19T04:49:30Z,2020-03-19T12:11:24Z,True,2020-03-19T12:11:24Z,0be8c3de481f85e440579ab1c60a8242a0d936c1,2,2,fd9d40df1a6129933b59179f3482cb484cf1e2d9 01a6a6ba8caa4cb0ba97357a84cd30f7c7e725f8,,Update Findfcl cmake to support FCL 0 6,    ***    **Before creating a pull request**    - [N/A] Document new methods and classes  - [N/A] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [N/A] Add unit test(s) for this change
dartsim/dart,1440,2020-03-18T12:33:55Z,2020-03-19T15:13:02Z,True,2020-03-19T15:13:02Z,a8e4c3c9cfa8b25eb37171135449b22f1636eb24,2,3,9b52aa6cc60262c9a07731583493af6e085962b0 5e392c0450fc0c46ce2bbf7b2045699ffbd58d2f 55f2ded10725d32ebea6da565e2a76e81705f190,,Update to macOS 10 15,
dartsim/dart,1442,2020-03-24T07:30:51Z,2020-03-24T14:33:43Z,True,2020-03-24T14:33:43Z,29c0e51e615b588453733f526cb00a57dc73f77d,6,1,5e696dec97d4244655bf579ee0f4f1fbed2563ea,,Support Ubuntu 20 04,
dartsim/dart,1448,2020-04-22T02:47:13Z,2020-04-22T03:42:06Z,True,2020-04-22T03:42:06Z,0b900a1627b9387bcea9bbf7d1e1e637470307ad,2,1,f8d10788dfa5d4f34a3efa7f56bee1037a22174c,,Install numpy using pip3 instead of Homebrew,This should fix the CI error on macOS.
dartsim/dart,1453,2020-04-27T07:20:39Z,2020-04-27T09:27:18Z,True,2020-04-27T09:27:18Z,9180d98d982ce31b2bdfa318f661291e1f4d7cd5,1,1,fdec9d506cfcda4d906c449728b11aee98bdcf54,,Build without ODE on Windows CI builds,To suppress build error: https://github.com/dartsim/dart/runs/621262581?check_suite_focus=true#step:3:1096
dartsim/dart,1456,2020-05-02T21:10:39Z,2020-05-03T07:42:08Z,True,2020-05-03T07:42:08Z,35bd08e008fda8fb9a7dee4f063d2d13ff0cb583,3,1,63ce390124feabbcd9cf2c1d80ba2e67e2c82f1c,,Add workaround for invalid path in finding urdfdom on Windows,Fixes #1365
dartsim/dart,1458,2020-05-03T20:01:58Z,2020-05-04T01:38:33Z,True,2020-05-04T01:38:33Z,3f767660e0861d8abc04da4ef9e29816863d9e72,2,6,9ca9452ed5877372fc11154b6f144dfc7ff0eaf1 09942782e732d27e6dde7be9d9f0d3570676ab4f 0a93b315edaaeccde269f5caec1335c2b9390589 ed7c85814e1df9e7c739a77517455028f616cdcc 91bab09e73cd6d908bc113da3fe192b7e7a676b5 9321cf9e7021ecf6599a0955fbac4a786696fb13,,Use pre built vcpkg packages to reduce build time,
dartsim/dart,1464,2020-05-10T08:26:15Z,2020-05-11T05:34:35Z,True,2020-05-11T05:34:35Z,becbeada2a8ba94834e69ceb9f4efaa92381b756,5,2,cd9b2e994337105d424f87692b780f6a6eb4f382 06fd1c4cc366aa02859c9ba9e550fed421662c2b,,Remove gccfilter in favor of the default feature of GCC and Clang,`gccfilter` was used to colorize the compiler output  but the feature is now supported by GCC and Clang by default.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] (N/A) Add unit test(s) for this change
dartsim/dart,1479,2020-07-26T06:45:49Z,2020-07-28T20:13:44Z,True,2020-07-28T20:13:44Z,3f61c50c3c334e1964f2237c1909a8e3413dae2f,5,4,96ac8d915d4f581e1d316d4daeab7afcc91a1eb7 a702a5b7222d143153a60ad674fcccc306279bb6 cd39cce33cd29ce02fdf3ad8e3aec6046eb2d557 559b20b0fe23697a5d975446233adf4af1cef960,,Enforce to use OSG 3 7 0 or greater on macOS Catalina,OpenSceneGraph 3.6.5 or less are not compatible with macOS 10.15 (Catalina) or greater (https://github.com/openscenegraph/OpenSceneGraph/issues/926  https://github.com/dartsim/dart/issues/1439). This PR increases the required minimum OSG version for macOS Catalina to 3.7.0 that includes the [fix](https://github.com/openscenegraph/OpenSceneGraph/pull/944).    Resolves #1439    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)
dartsim/dart,1466,2020-05-12T00:21:14Z,2020-07-31T21:30:04Z,True,2020-07-31T21:30:04Z,43a2d1060624fc4c9a132bb20e428ccb05d2bd7c,21,11,0383d09310be509170036507ef55408a548a4201 2e36b8205b5819f1eed49240bb76a69ef29e4104 7d6dfce35f8a821d827b5c78eca994ef224f4ec1 0b5295f289fc89415f40c24b4db9d8fda176a5e3 0f4225b926da0b30483af62bf254633338fb7cf5 93fc9b28334bd24741d2a2a880c7722be08df762 4906ebbcbf57f0719252981b5bdab6d241970ee3 a78bcf922b0cbfd9965b1199b41b5e4505d7a7f2 3947d1dbf8e133d9135afad980b6e47258fe095e 934f90fe752d5aa097b1c49c735f35bcf1a879ea 75bcbd134233501bb5d57b14a1bfe9e27893f6ce,,Add pyramid shape support,This PR adds the pyramid shape that has a square base. Currently  only FCL supports the shape for collision detection. Like other primitive shapes  the pyramid shape is converted to equivalent mesh with minimal numbers of vertices and faces. Both GLUT and OSG renderer can render the pyramid shape.    The moments of inertia for the pyramid shape is not implemented in this PR.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change
dartsim/dart,1486,2020-08-22T17:13:21Z,2020-08-22T18:38:54Z,True,2020-08-22T18:38:53Z,7db4c081015778b52a007087ce394d57fb50fcee,3,5,97e6c8ebd368eb9de394b64378e1b69b7c70f992 74184e9a6f9026621fe8aabfed163d0a47472573 cd6ab4601b42b86f9a31387d0909a0348a88d7fd b995a10a9b01ea54b8d0366d9f5f578e71105a6f 325e48b7f231ee303d703d571831ac31f7fab39a,,Add build on Groovy to GitHub Actions,
dartsim/dart,1487,2020-08-26T22:28:14Z,2020-08-27T05:21:51Z,True,2020-08-27T05:21:51Z,607f89d59b63c3495891fa4781171bc80b3cb62c,19,7,3447b7ef5a2d0e6909cff3df315190c905680bbb f2080eab6e0154e7d2ebdbc3189314294acbeac3 feaead19284fba052ada750f9f3d746ae4b88cf7 bd5d80b84ee9d20633abb0705a452cfe4af58b27 18dc379be80ef43dbc2c829caecfd98e29e0bfe7 33960c7bb196ce9067faad2bde3fa64bb2ab5261 e950eb860ce9b638587db3dd8648fb290f1b2536,,Packaging 6 9 3,
dartsim/dart,1493,2020-08-28T19:29:47Z,2020-08-30T02:22:54Z,True,2020-08-30T02:22:53Z,c6391f76743a93e44ff4f84cd7dcdfee7fd50305,5,13,2ac4a56bc56a109e6510efda2d157e1410f97c10 cb7107894a5012026cd32a0e5bf0c1d25c13e1c6 c12ae274d1e8571936c6d9412afa12031fa71746 afed2a2a65ba42c4256ac4b5570f009144928762 47bd9692352115b264f21e2458c55c7e8e60d327 a2dec7fda79fe983aac30c839a5af9471a109e88 02c60536e1d9d74137a1afe581e00df02681353e 6042bb61d639941b0d3110ed73a8c8032db8d3ac ea77a3e1f6e6b02e4ea8004d5ca0f8f1ab64ad61 b7383446f4504abe1117bd094203a8b1fe158f60 e3b36e17e7d84e737030a08fed213accae322628 3ebb4ebd12c043c1ef3458b114fe45154b17e941 a23fb38a0c9d5651a75537d543546ec87e2e0714,,Build DART with pagmo2 in CI,
dartsim/dart,1503,2020-09-20T20:17:04Z,2020-09-21T11:04:25Z,True,2020-09-21T11:04:25Z,185fbc2a171e364a00be49c5fe1e5ffb945429c5,36,2,bee198baa64e9abb490143e4079c6aa9c20ca33b 0f390c6266b55df37943d615354e54771dd01d26,,Change dartpy install command to make install dartpy,Previously  DART provided two build modes  which is controlled by `DART_BUILD_DARTPY`: (1) build for the C++ package (as either shared or static libraries) or (2) build for the Python package (i.e. `dartpy`) enforcing to build the C++ libraries as static libraries. When installing the package  (1) installs the C++ headers and shared/static libraries while (b) only the binding module (i.e.  `dartpy.so`). So we had to configure and build the package to build for both the C++ package and Python package.    However  there is a use case that requires to build `dartpy` against the shared libraries or/and build both the C++ and Python libraries without reconfiguring the package. This PR (i) removes the enforcement of static library build for `dartpy` and (ii) allows us to build `dartpy` without reconfiguring. For (ii)  we still need to set `DART_BUILD_DARTPY` as `ON` though.    In short  here is the old behavior:    ```shell  cmake .. -DDART_BUILD_DARTPY=OFF -DBUILD_SHARED_LIBS=ON   # to build as C++ package  make && make install                                      # build the shared libraries (`libdart.so`) and install them with the C++ headers    cmake .. -DDART_BUILD_DARTPY=OFF -DBUILD_SHARED_LIBS=OFF  # to build as C++ package  make && make install                                      # build the shared libraries (`libdart.a`) and install them with the C++ headers    rm -rf *                          # clean up the build directory    cmake .. -DDART_BUILD_DARTPY=ON   # to build as Python package  make dartpy                       # build the static libraries (`libdart.a`) and Python binding (`dartpy.so`)                                    # BUILD_SHARED_LIBS is ignored  make install                      # install only `dartpy.so`  ```    and the following is the new behavior:    ```shell  cmake .. -DDART_BUILD_DARTPY=ON -DBUILD_SHARED_LIBS=ON  make && make install                # build the shared libraries (`libdart.so`) and install them with the C++ headers  make dartpy && make install-dartpy  # build the Python binding (`dartpy.so`) against the shared libraries (the shared library should be installed)    cmake .. -DDART_BUILD_DARTPY=ON -DBUILD_SHARED_LIBS=OFF  make && make install                # build the shared libraries (`libdart.so`) and install them with the C++ headers  make dartpy && make install-dartpy  # build the Python binding (`dartpy.so`) against the static libraries    cmake .. -DDART_BUILD_DARTPY=OFF  make && make install                # build the shared libraries (`libdart.so`) and install them with the C++ headers  make dartpy && make install-dartpy  # no such targets  ```  ***    **Before creating a pull request**    - [x] Document new methods and classes    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`
dartsim/dart,1509,2020-10-12T22:19:20Z,2020-10-14T22:55:18Z,True,2020-10-14T22:55:18Z,46abc668dbbcdc58fb63e07f7d8ffb15e834da0a,3,4,87cd61b4e5878ec5b09f218dbf5ee991b54b793a d8e835de791edf3194c4e3375a7011894e83eda6 8bd2804a8eb649f5435339a4d4415edcbffb392f 00459b64c6b1a0ad9098f9c5f378e34d0df2705b,,Fix compatibility with clang cl,clang-cl is the Visual Studio-compatible version of clang (https://clang.llvm.org/docs/MSVCCompatibility.html).  This PR:   * Enables compilation of DART even for VS < 2019 if Clang is used (as clang-cl can be perfectly C++14 compatible even if the used MSVC version is not)  * Avoid to pass the /MP option to clang-cl that does not support it  * Adds a GitHub Actions job to compile DART with clang-cl (using in particular the ClangCl toolset shipped with MSVC)
dartsim/dart,1511,2020-10-16T17:12:36Z,2020-10-16T18:36:21Z,True,2020-10-16T18:36:21Z,9cfa019e3c8b0dd3207ee186fe4176bcf4cf0d62,2,4,d106af5236ac0f170a2812935c1821c805f0b5d1 bb72bda33942864e14825d63da1b44fc7ab1dc5c 2f0e2e26231f8e02e8b9067fce4f604921f9d9fe 144ac810132d005c78cbdc2e60be9254cc4d11f9,,Update appveyor to use vcpkg build cache,
dartsim/dart,1512,2020-10-16T21:07:12Z,2020-10-16T22:34:10Z,True,2020-10-16T22:34:10Z,cf69920c7d972b2149b951b79be2b04af6b91d97,2,6,6c7700f8a0d824c547198b792effd7aa1371b040 6bd76b2bfa568590440ff7cef3d9ce9125ae2ca9 258a84d173c2c72daf1a4e4f3a515576a8ce9529 8fe5d5e25bc3c0cbf63df7f92f8030acc379db37 90569ea2e72bbd8d149dc9775f2b27dbec8eec10 9cb3d34e3104fd24cbcdb84db1bc2ea801cd5c7c,,Mute output from wget and unzip,
dartsim/dart,1510,2020-10-13T07:16:06Z,2020-10-17T00:20:06Z,True,2020-10-17T00:20:06Z,2ed57ec92624080e1661441e1572b867378d0f5f,2,7,6104682e1b507ce909bd357204e20131b14e2ee7 0fcac8fa28f4e06ce2b78c50e6d76cab6b49183c 915ca137fef394eaa806fd7090a8868470eacaa4 76cc303fd6315efe7fb798708ce5b9f7eb89eafe 71ee91183185ebe8b766d8f2667f137767352b82 389998891b257d00747023d31360fafa35a9c7f1 98563d2a2456a254644ecf8707a71ae925d9de6e,,Fix MSVC linking for assimp and fcl,This PR fixes the linking of tests that use fcl and assimp on MSVC  hopefully fixing the problems reported in https://github.com/ignitionrobotics/ign-physics/issues/87#issuecomment-705155086 .    As the existing code is working well in CI for non-MSVC platforms  and as support for CMake imported targets can vary depending on the platform (for example  `assimp::assimp` is basically broken in Ubuntu 20.04 apt packages: https://bugs.launchpad.net/ubuntu/+source/assimp/+bug/1882427 and https://github.com/robotology/idyntree/issues/693)  to minimize the possible regressions I just used the imported targets for fcl and assimp when using MSVC.
dartsim/dart,1514,2020-10-17T01:12:48Z,2020-10-17T01:14:16Z,True,2020-10-17T01:14:16Z,f91223c94de6ce3829da7486589a4e841a0f5ec0,1,1,3f6ae039634528f17e4b27fb941742d21d3b35df,,Add initial Dockerfile,
dartsim/dart,1515,2020-10-17T03:08:39Z,2020-10-17T03:12:39Z,True,2020-10-17T03:12:39Z,0a99f3c74fb7ce2c96ec4bbc3f8218fdb96c756c,1,1,fff30c810cd17156ee0fa47c58d61d936b76776d,,Fix dartpy build in Dockerfile,
dartsim/dart,1513,2020-10-16T22:58:36Z,2020-10-17T19:30:46Z,True,2020-10-17T19:30:45Z,2ca551a6173c531be4e8a1500f1d6e6667ba4cfd,16,28,ad1d4b1ef1dfd806a1919d1975bb01bc6392147c 6141269cb709c7ff726a5c0b69d171a22a68ae26 019463f60c7d83e73df1c9ee2468624098eeb73e c080ef83b2b9609997fbb5420ec53d40464dc801 ca5a07364ce16f11c3189b4abd9a792fbd25f0c3 92c631d2b674807d3fa026d01f7f96d8141ac75b 7e0bd068bc3f81ddb9f66080ce4eaca595adff67 a00d261b18fee85f27f984afdc6ffa193dc15d21 7a88f145c7f31109d67c6a7d416eb6703028d09e fe8d5bda672ab8a1870568c040b36ac2eb4776bf 4adcdbda71e72f3056d5cb0e4986d48ea4afd20d a70fbc74134dcd65ebb20a32eb3c0b8e8fd01f33 6f181d6b5961fe730beaa9b8ff36daf46b8cb3ee 4da378f71f141a6514d160361d6a9bb61f2b823e 569272af371e700075e9202a99f50fb1145df3f0 26178724ce122679b1f4fdcc3f66ffe01b486e34 a50caef32f0eefa44b1f704b9ab945d699449697 65809479697b83eb16bd2deb0cf848d5516aed75 622e3bb8570d2ae00a09140bab2e7abc1ca90c25 588520ede3bb8422c884a3c0b4fdc0c1a7b6e713 b981fab2e7d9c28de45ec0e04e75c505728f4a94 7edba7ba101f4aa7f5a87dde878be3a8ba3bb13a dc4056ab7cf5509da3d0fd627a49ffaa74b7e8a4 38e46e95450117ea4183248e7bf2009c579623ea 060affc4b58d79b26bd304f7e705460233f1f34b 507af5d35ff5bd7322e0633e0cd75bded52899bb f409d8e1d19ec461687d08bbfc3f5e4be3cdb920 3bb67b5ea08d1a6a4aed3c4c18d2290c6aaf4122,,Build and run tests on Windows CI,
dartsim/dart,1518,2020-10-17T22:12:28Z,2020-10-17T22:35:54Z,True,2020-10-17T22:35:54Z,836421c36f5b7ad1b54c9a6604906e43cfb2c971,2,2,fb6b3b33a77acf3b4d054b6b215a1f4582856e81 7e3937d494cfdc8dd6e23a5bcc1ea1a963434012,,Cleanup CI settings,- Format YAML configuration files using VSCode  - Build DART and dartpy together
dartsim/dart,1519,2020-10-18T08:11:48Z,2020-10-18T10:18:10Z,True,2020-10-18T10:18:10Z,2ef44daae5c67711a5d63f23b47235878f8f52cd,4,3,22e45e5440c60d33f7107790ee62ee6652be4f4c 2dfef2ce8332944456abf8d319bd25a8564be2ec 44e1770287e1486de5039d3fc700d570c53a993c,,Fix pytest run on CI,
dartsim/dart,1520,2020-10-18T19:24:48Z,2020-10-18T23:52:11Z,True,2020-10-18T23:52:11Z,7476d1663acbfdcf6971f32ac656b5000245d687,11,7,6d82af1779bc51c05fcc0f910bb21d48d501017e 461f09174ff85e654b99502696340527cfe888cf d0a104f75b1532355182af209f10d02592008a28 e87cb186c66be1d19f3aa2db5e986c3afa3e5549 ce6b758c63ec80977517e3fd3b0485c0a3ca9d8b c32280b5ceb7caf2e469ba2117c83deda40a5b2a b977a1ed6b08fda93e313e83266a3ecd917d6c96,,Use prebuilt Ubuntu Docker images for CIs,The Docker images are hosted on https://hub.docker.com/repository/docker/dartsim/dart-dev  and the source code repo is https://github.com/dartsim/dart-ci-docker-containers
dartsim/dart,1521,2020-10-19T03:00:10Z,2020-10-19T16:54:18Z,True,2020-10-19T16:54:18Z,83b0c8c23fd49973130c2f11f13d99587ab204b7,1,2,119bcc1322d436a45d07b61b1d9233201333ec92 941d4e96833840542224e4529b4b8031b8980634,, Fix C tests are not running,
dartsim/dart,1523,2020-10-25T04:29:08Z,2020-10-26T00:53:16Z,True,2020-10-26T00:53:16Z,4b0b4dcedae6c6f0de50a1d3d13015b178aa68bb,2,2,4229aa71107858188555da71a6bd3286c0a32361 9ec88359ff0b2eadd0cd900f293cc74bbba59da4,,Fix brew update error,
dartsim/dart,1530,2020-12-28T23:45:23Z,2020-12-29T05:12:54Z,True,2020-12-29T05:12:54Z,0ef675341b8b82aace4b2768eda12ed4984573c6,3,1,84662cbaff87fe04ac7357c97a4f39e8bdae7c2e,,Fix installing dependencies on macOS image,
dartsim/dart,1531,2020-12-29T23:24:59Z,2020-12-30T06:42:52Z,True,2020-12-30T06:42:52Z,f0ba239607b3a7e79f57b856789e7329c0e9d771,7,1,2a0d963e9a2691c4265b3b41c60c628b820b5349,,Add multi architecture builds to CI,
dartsim/dart,1541,2021-03-13T10:37:49Z,2021-03-17T17:40:11Z,True,2021-03-17T17:40:11Z,30ed61d25f4c74cf0eaf8ebd0cb9ebf8196938f6,27,16,4eb6768ba9e7416c90331fd196a249ea3bad33ac 66a2bc6147f46973793896db878bb5c5f5cf7b57 89fb383ce7484628c1bb0c989901183acb626dc3 ff0dd6f8c133006fa9b9b6778f9b0e93472ff388 366ccd20a5391a22644931e04e72b886d8ce3d15 55ac710d4231cde9a33f1ca15a30507210f746e9 f9be177774fab8e4e9bbbcd856de92d75663def0 29d9f4f5b4f13edb28ede7441d07b387f6fc7303 7ec1c4520df49d9e42d9903242b4d9caf78dbf67 2c1aedabb70613126bca39577e958188bd50872b 838c486b743e770c6a63d50ce9809ede3f2d8fab a4e7e1a444c9d28b3efd2acdd8d6b071e88f022b 0eb209aff445a53a4a06bf9f99658d648c90c8d3 ba0da50010afa3a6e8062e3542198bb84d0cac38 eac35f527e0475df11d193acbf74ce6e945c771e 9fece0b333462ed88ab842544468951e8657930c,,Fix Aspect Composite relate tests on Windows MSVC by marking every class with virtual base with appropriate pragmas,Fix https://github.com/dartsim/dart/issues/1522 .    This fix was inspired by https://github.com/dartsim/dart/pull/1540  however just enabling the `/vd2` option can change the ABI of classes with virtual base whose implementation has been compiled without the `/vd2` option. For this reason  using instead the [`vtordisp`](https://docs.microsoft.com/en-us/cpp/preprocessor/vtordisp?view=msvc-160) pragmas explicitly for each class of Dart with a virtual base could be a more robust solution.     For some reason  the fix is not working for the `Clang-Cl`  toolset  at least for the version of Visual Studio used in GitHub Actions. I did not investigated this  but in theory clang-cl has support for the `vtordisp` pragmas (see https://clang.llvm.org/docs/UsersManual.html)  but it is possible that this support has some bugs. However  for the time being I just remove the `Clang-Cl`  toolset from the CI jobs  and I instead enabled the unit tests that previously were failing.
dartsim/dart,1544,2021-03-23T10:41:23Z,2021-03-23T11:07:55Z,False,none,d126799567f592cd9240e272c33c6a59a3e358e0,1,1,969b9bd7ba709f1f997a786b26d8bddb7376e824,,FindODE try to check first for ODE cmake config,As of ODE 0.16  ODE install its own CMake config files  that are able to correctly support advanced functionalities such as various build configurations. This PR modifies the `FindODE` CMake module to first try to find the ODE CMake config files  and only fallback to try to use pkg-config if they are not found.
dartsim/dart,1547,2021-04-02T04:41:23Z,2021-04-02T04:56:42Z,True,2021-04-02T04:56:42Z,08a75807049669b26f5c175eb936e843d34bd945,905,1,caaa31392a8146719d3ca9614194d47733a326b9,,Update copyright holders and years,Update the copyright holders and years based on the recent affiliations changes of the project creators and developers
dartsim/dart,1548,2021-04-03T09:41:07Z,2021-04-04T05:29:52Z,True,2021-04-04T05:29:52Z,c05da7167d4380b27c2a6173c5bc7474e6977f54,4,1,1c1a98b19fac6717cf4ff81f5c5abbc89bf7d22e,,Allow specifying reference frame for TaskSpaceRegion,This PR is to allow `TaskSpaceRegion` to specify the reference frame for computing errors in the task space. This PR replaces #1430 based on the discussion in the PR.    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change
dartsim/dart,1497,2020-09-03T15:34:25Z,2021-04-04T05:38:14Z,True,2021-04-04T05:38:14Z,a7584a11d43faacb7b06a4b89b1b870ec615114f,1,1,9fde9124927789ca2399f99c1be9b101ed1e8550,,CMake Add DART_SKIP_ dep advanced options,Add DART_SKIP_<dep> option to permit to specify that a dependency should not used even if it is found in the system.    This is useful in package managers such as vcpkg to ensure that  for a given set of enabled features  the same version of the library is build  independently from which dependency are actually installed in the system. A mpre extended rationale is provided in https://github.com/ignitionrobotics/ign-cmake/issues/63 .
dartsim/dart,1552,2021-04-09T23:13:07Z,2021-04-10T01:21:15Z,True,2021-04-10T01:21:15Z,82028e3e7c78ca042edf3800fd8c47f48b94433a,5,2,5627acfdbaeb0c748a8f5dccf5b7b0d8cd3904cb 22d4ea5e011edd29e80a04ec23ceeb45372ebafb,,Replace OpenGL dependency CMake variables with targets,
dartsim/dart,1553,2021-04-10T01:49:06Z,2021-04-10T01:51:17Z,True,2021-04-10T01:51:17Z,bff098b0e180bab6fb060d60bf3fcab61ea2c1b7,8,1,4e0ed10b05873e2e5082d095c3eae997629d85d5,,Support building as sub project,
dartsim/dart,1556,2021-04-13T05:51:10Z,2021-04-14T00:01:18Z,True,2021-04-14T00:01:18Z,9e9d0b2c130bc9fa503efa409a65450ee20a88bd,71,2,9eb43a5c9113fb746e403e562994e49b5d76e926 950816dab9ba8c23bb7c850b227ccfb107df08ca,,Replace HAVE_ with DART_HAS_ to avoid potential conflict,
dartsim/dart,1555,2021-04-13T05:50:42Z,2021-04-14T08:13:16Z,True,2021-04-14T08:13:16Z,6968128029987594c67fcce606af7dba9ddfef3a,9,1,ab3ebc9d5c71fd045e86d4303ca647f50d1cca7f,,Clean up CI setup,
dartsim/dart,1560,2021-04-14T08:41:56Z,2021-04-14T22:56:50Z,True,2021-04-14T22:56:50Z,d71a95e0bbd800d8a73d6fd5eaca26c8862ad52f,57,3,fdf2a10959e105868ced2d0c6618b55c0bc0b72a 1587238c0af24bc6a206744def07421ca5802110 be69daa0628be497f9abc11e9e2eedb80ae92e3a,,Update required minimum versions CMake 3 10 2 and C C 17,DART 7 shall support >= Ubuntu 18.04
dartsim/dart,1262,2019-03-13T20:13:46Z,2021-04-14T23:17:57Z,False,none,efb32f0920b58892dc706c695101374cbb4c9b0e,82,7,6f556b4896a28b7882a92e19b38037e24cfa58fc 79b69b5b0a15ee003fa3ae866c705dd37ca54af6 bbe8805f95b63b3410dfe78395e940c263ae5b4b 25b78731f709ffadcfa155a26af365b2986553f8 f2ade095acbf31742c5a994b86c0af34a58bf138 a0c1af24cc3628965f5c309460824ced038b8ec5 9b80735e72ff8d7190fb812013b9c3fa904fec75,,Make gui glut as optional component,### Problem  `gui` component includes the GLUT-based GUI by default. This introduces unnecessary GLUT dependency even when only OSG-based GUI is required.    ### Solution  Split out the GLUT-based GUI from `gui` component as an optional component `gui-glut`.    ### Caveate  This is a breaking change. In order to use the GLUT-based GUI  `gui-glut` component now needs to be added explicitly as:  ```cmake  find_package(DART COMPONENT gui-glut)  ```    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side (N/A)  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change (N/A)
dartsim/dart,1564,2021-04-14T23:00:16Z,2021-04-15T01:25:09Z,True,2021-04-15T01:25:09Z,5e3208873bfce1c160a5dd3cbfe506322ae95f96,7,1,234db423e53baba351a0844071aedc7ffc852db4,,Move code coverage build from Travis to GitHub Actions,
dartsim/dart,1562,2021-04-14T09:55:53Z,2021-04-15T02:38:14Z,True,2021-04-15T02:38:14Z,a63c7eed6f714c8f34d9a988b641df40b5780216,65,1,f495f32c40a1f94a34c40d49c6c3b6d79218ba62,,Make gui glut as optional component,This PR is rework of #1262    ### Problem  `gui` component includes the GLUT-based GUI by default. This introduces unnecessary GLUT dependency even when only OSG-based GUI is required.    ### Solution  Split out the GLUT-based GUI from `gui` component as an optional component `gui-glut`.    ### Caveate  This is a breaking change. In order to use the GLUT-based GUI  `gui-glut` component now needs to be added explicitly as:  ```cmake  find_package(DART COMPONENT gui-glut)  ```    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change
dartsim/dart,1566,2021-04-15T02:12:25Z,2021-04-15T04:00:07Z,True,2021-04-15T04:00:07Z,f07b7a7747ba1bc0245f8617e87d242234c409b1,12,1,729005fe6f06fb715d877c9138cb068c1aaf0e27,,Move gh pages deploy from Travis to GitHub Actions,
dartsim/dart,1568,2021-04-15T06:02:35Z,2021-04-15T07:52:53Z,True,2021-04-15T07:52:53Z,e7d612ee9ebb899b971b28db936b509cf40b5b96,10,2,a3b164290aa7c08a9c2e21dfe127e6f74118e189 bae5807be1a3d5147c74054ee01c6fd3ed953e19,,Drop supporting FCL 0 5 0,as the default FCL version of Ubuntu 18.04 is 0.5.0    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change
dartsim/dart,1569,2021-04-16T02:37:03Z,2021-04-16T02:39:22Z,True,2021-04-16T02:39:22Z,df53bbf669296cdba7f8ecc729f9dba4ccce4e28,27,1,1fb00c5c7b54de99c0b0c007958a233d27dd251c,,Merge namespaces lcpsolver and integration into math,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change
dartsim/dart,1570,2021-04-16T02:42:02Z,2021-04-16T02:42:57Z,True,2021-04-16T02:42:57Z,abca3918172cadc0e7728cae5d592ec1b7d68b02,69,1,9495cb73278321061252239c8bf1a5c9ccd2a38c,,Rename namespace optimizer to optimization,    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change
dartsim/dart,1571,2021-04-16T02:52:03Z,2021-04-16T02:52:41Z,True,2021-04-16T02:52:41Z,51f1326cd58a0ca43e1534bc5382645801197390,107,1,e5040bb7a162dfe69dd6e3f9d2c5cda5073b6244,,Merge namespace constraint into dynamics,    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change
dartsim/dart,1573,2021-04-16T05:37:29Z,2021-04-16T05:57:12Z,True,2021-04-16T05:57:12Z,8a9231015fdc653db885ebced0a4cf9b68753724,7,2,8f2ec7995fb444b7112af1b5dc00203b81b0c63e fce79e24ab41a1d8c212b5bedbe204679632b713,,Drop supporting Eigen 3 3 4,as the default Eigen version in Ubuntu 18.04 is 3.3.4.    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change
dartsim/dart,1576,2021-04-21T03:38:28Z,2021-04-21T07:28:19Z,True,2021-04-21T07:28:19Z,eafa47927888c3faf53748b9714b707cf07b6598,415,1,5017d2c1fce5f390a3fe59d1098f1f9e6616b9be,,Restructure components,Summary of Changes:    - Restructure components    - Remove sub-components (e.g.  `gui-osg`) and merge them to their parent component  where the features (that were the "sub-components") are enabled when the dependencies are found (e.g.  `OpenSceneGraph`)    - Before: `dart`  `optimization-nlopt`  `optimization-ipopt`  `collision-bullet`  `collision-ode`  `gui`  `gui-glut`  `gui-osg`  `utils`  `utils-urdf`  `planning`    - After: `common`  `math`  `optimization` (possible to be merged into `math`)  `collision`  `dynamics`  `simulation`  `io`  `gui`  `planning`  - Add CMake options `DART_BUILD_COMP_<compnent>` to configure whether to build the components  - Enable to install the package with other major versions side-by-side    - Change the package name from `DART` to `DART<major_version>`    - Change the path to include directory from `<prefix>/include/dart` to `<prefix>/include/dartsim/dart<mafor_version>/dart`  - Rename directory `unittests` to `tests`    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change
dartsim/dart,1582,2021-05-31T00:22:08Z,2021-05-31T16:29:11Z,True,2021-05-31T16:29:11Z,5e128eeb4f107fbcf3a772e5e3b1a2714f14ebee,7,5,5be4caafc059414a890a4904906902de7587a7c1 53bac40fb219b005d4a6e1235e4b6b9b644d62c8 ee2291813fe16286aa321ee0823ba2286c677221 bc12da6ffa4cbfcffb5e993dcffa83ec9e1d7ec1 49aeec3806c2f6add98f94d9058d949b3a5ee903,,Add archlinux to CI,
dartsim/dart,1584,2021-06-16T20:59:25Z,2021-06-17T04:12:11Z,True,2021-06-17T04:12:11Z,2765390bc0d31db7077b30c7aeaccd057457eac3,3,2,2a8f611694c04b569f4dbdb3aea9d86719062290 4f4e33abc288a73502e72da895ceb28c42211b5a,,Use GLVND over legacy OpenGL libraries,
dartsim/dart,1588,2021-07-08T05:25:51Z,2021-07-08T14:02:05Z,True,2021-07-08T14:02:05Z,bdec50d2a8d405e976dde371e10faeeb7ac95757,35,17,df03da3e57bf1eb0c82a269281d38259e84eaa18 f559cc10c3c54ddc46a48da40eaf5d6669c34d77 f4d0341e5125368d96a4ac38fff3ec34c58e4e6b c088e9b22e026460e9e46c60b934a095a58676f7 551617f57da5cfc51b8dea399119d5430dbb0e19 34a19c2cbf9db6dc4f5f70dc993d53a21ca13785 984a9063fd159bbdd3f233bcd72beec575d2d714 3fbc45de934c874d6369abc52e743707abba9e33 2765390bc0d31db7077b30c7aeaccd057457eac3 e2bd9d118046760ffb5564d72f29f1f3b4a77c47 0799362c43279151bfe7a0488e99c9a37dfb8bf6 2cb0ec4fa1b2f1a28937c333ff8f79b6457dd946 5058255853d5b733476fc031b18fb95bdf7d7f5d 2a28d5de73c62332521acd1222d586aa45266478 118cb2fa6110e7565b555806c0bd32258e73214d 86d77fd80bbd3b827b5d64739b7bf2a26bd189af 41f316d7109395029d84b1bf8728db30c4949b2b,,Merge release 6 11 to main,
dartsim/dart,1590,2021-07-10T09:46:09Z,2021-07-11T05:53:31Z,True,2021-07-11T05:53:31Z,325b232afadf28e3ef78207da2cda1d97bd06227,248,23,a1bf25fe838b23119041c3430eea3ce7c7336eed 08ad15b3ea1a761a101e954d41eb66035f382d41 f17ca652b8c6fb87f84715ceaaadb2329209fe64 dd0d5eeddcbe6f989ac084e531da3f7e754c7f00 6cd8ec097f75ca16d97f8a950081e1b8e021dcf7 6de5165f9bc7872efd4108cd7c92d79bc1a8229d 16b2d3d4e6b1044bb1009b5f6429b4c3ca0fe788 0d65bab92aa3fe63e196dd8becd3715e985a9a65 b7f8a50088733a849043863afd5bd1b6dbb0a177 8568b31d2d68dabbdf0049b50e21205953732ac4 732dc7d560254e790e6e8aacba968f924f44d575 f521e8a5ffb646da733f0d4e878b97e2e8b8a35b cddd6aa38abedb5ba045c3104f0f48a749554f7f c9e9adaf87053b9eeb65612c6aabb8483dc4af54 f962eea713ac3152edab4ccd421afa25e0178848 d67a4cb52ba95740f861c7d13efcea581525b4f8 6e22cbdcc21d5753996ce175c6020bc98aaf7d2c 982db7db896bed876e54b1048a9e566c0547762a 1af7e5f2f97bee857226334ffdfd2bdf6cad5bdd f015aaa94746186229627fefb427f002ee8e5d0c 7fcf932517c53352d37962927dd43f9022f8f0b2 0c676496edf38af9ec2a90170473d6a1f13c6a30 c673fcb27d6e90bd66f3274fa75947e0ae88581a,,Refactor collision Most minimal sphere sphere binary check,* Move old collision code to dynamics  * Adopt the new code style to the new code in collision  * Minimal collision functionality: sphere-sphere binary check
dartsim/dart,1591,2021-07-11T02:41:35Z,2021-07-11T22:56:49Z,True,2021-07-11T22:56:49Z,d02b3fbb0fcf64d5ab0efd82cacddc3ccfc7d175,873,1,3490ae3b80e1fb63c974df658d1af2cdc59ebf80,,Upgrade to ClangFormat 9,
dartsim/dart,1592,2021-07-11T23:19:59Z,2021-07-12T01:29:26Z,True,2021-07-12T01:29:26Z,6c487c0ba037979e907b23934c192337d5df62c7,69,1,0e9ee22b2aca664e7abf73d1ff40f35200b85198,,Refactor tests,* Split the test libray into multiple per DART module  so that building an unit test doesn't need to build unnecessary DART modules  * Move some unit tests to comprehensive test category
dartsim/dart,1593,2021-07-12T01:36:55Z,2021-07-12T12:56:12Z,True,2021-07-12T12:56:12Z,930a49676fcd3fe503ad344a922485bc9047fa85,18,5,b3f4165b4078de8be1994d5eae7eda7a486b2777 4acda41847ed9b999a1deb3b63edbb8f05dab8dd d6b91dce224e0e2032a4a71155bf0f80c47dcb50 1bf319e3724126882f0f37d9f73fac6f616197a8 2e991e07bb55c8ac6e59afe0e29cbee8f554f6c7,,Integrate spdlog with basic functionalities,    ***    **Before creating a pull request**    - [x] Document new methods and classes  - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change
dartsim/dart,1040,2018-03-22T17:57:04Z,2019-01-12T00:34:28Z,False,none,95e0b6588657b0ec8cd651ed2531a860547ccf1b,233,29,97468c33928132cf2401e3e71fefb474a80ab22b 7e82bcdcc96a46faa1c7f74919a77b98a6bd3d93 9129ad6d573f721f51eb24ff87457617bd7646e2 a38ca139b53e9916bec7f36c0f9d6e759e6012b4 4dd81fd37f0b98797b563e7fb154cf35e85dba38 e3fd90e3e667b8986cab16d95a81d60390f69114 024ac5a92f999d0c3b31ba359f1d8659d16d4205 9141345aeacb16c649071aa5827b8ff8bde267e7 c5eb4be28d57f25366684f93512356d3ce01eed8 12aec1a490c7184b224a23ecd709033e2382b66f e3f17f2e60f99a6c6c0e0f90b10e558bbc1d7abe cc638e039aa3737a9bf5bec876c3c8cf77c65b15 ed9a5df3ec16c970f693b4063d329982ee939809 d8de131f59e42c0d4d982f14b72e24ffa5c1b1de 11330ed2b4e9fba2fdc7874075c569842508cf56 cec1d7c11908c20ddedd6464a10167cf9fbe50c3 698a4edf2b120c09c192d931c495d05b48ba389d 3da6e789e0a31de71f0bc9563344ac27572c06c8 f43af8cc589afc2767576e4438a0f804fa3dc59c 7af2a71fc8c9fbca947557d30c2f07c5e0626495 73e98ec02f7edc2929785dc035c07877ee6b8fd2 ff49098447a2f08c166df2d8bf27010b1be3a557 7dce12d67a0a5367b8fbb2402979acfda605d1c4 98444dd675a5b300d10802b8ae0362b93390ba40 5f9fd4143d5ce813e0a60182c294a1fa1b6f64de 91d089e8416a8ff3eaf41d6dbce42d29cc951af2 ee0063c5c29666a8b232428479ca8743539ca38f 9facf402291d9d12999536e127ac1dc047557612 a52135908d88b7238f76f8817d60faa2067fe66c,help wanted,C visibility support,This PR implements the [control of binary symbols visibility](https://gcc.gnu.org/wiki/Visibility) in DART inspired by https://github.com/flexible-collision-library/fcl/pull/233.    `DART_EXPORT` preprocessor is added to any class  struct  and function that needs to be exposed publicly to third-party software. I could compile all the tests  examples  and tutorials without any issue  but it would be good to test DART with other third-party software like AIKIDO for sure.    `DART_HIDE_ALL_SYMBOLS` CMake option is also added  which is `OFF` by default  for the case that we want to hide all the symbols as DART is built as static library.    Caveat:  There is a preprocessor name conflict between the existing `DART_DEPRECATED(version)` and another preprocessor generated by `generate_export_header()`  which is necessary to mark visibility of deprecated APIs. To resolve this  I changed the name to `DART_DEPRECATED2` so that the preprocessor for deprecated API becomes `DART_DEPRECATED2_EXPORT`. I'm open to better workaround.    Alternatively  we could remove `DART_DEPRECATED(version)` and use one generated by `generate_export_header()`. The version information can be provided by using Doxygen comment (e.g.  `/// \deprecated Deprecated in <version>. Please use <other_api> instead).`).    This PR is related to #1005.    ***    **Before creating a pull request**    - [x] Format new code files using `clang-format`    **Before merging a pull request**    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [ ] Add comment to the export preprocessors
dartsim/dart,1600,2021-08-27T08:04:21Z,2021-08-29T07:15:22Z,True,2021-08-29T07:15:22Z,6338430d79f01ab71f181d82b7c8c590e0a8c2a0,78,8,086a1d95ad4450ff55973df996cb8e32e207f1c6 32fcde5bc6b7e0fb2a38b521a182bd37d3cbe46d c4d4d44edd8025522bbbff8dab894e1496de5578 23544411a7c3309d9bf24d673b7cf1bc77a97ecc 3c5fba7380514b6c6c939511befa1429ea93e5ae 7a7dcdaec706544e12593bd3a0c684d2c6b8fc69 9dafbe5c9e486aac639b364b116ce14ec3b9cbd1 6b68f7dcb0abcee41f7e5cd3c482e7409bd58441,,Increase required C standard to C 17,- Increase required C++ standard to C++17  so the compiler versions as well  - Increase required CMake version to 3.10.2  - Drop supporting Ubuntu Xenial (16.04 LTS)  - Update CI settings accordingly
dartsim/dart,1621,2021-11-04T00:42:42Z,2021-11-04T20:35:53Z,True,2021-11-04T20:35:53Z,50130217501e7d4951607d8c8f6b23e953c6f440,12,5,9e830c01e3b55f160e94c4d427b88f647446bd68 31a780e8ef5e9782662da2238c721d2b9ecc35bd f70e100fc519434d8baf22ef3cdaebeb25344f32 5cb19aa2044a26b2428bf304eb5842c9b38e1fdc 80e4b2c710684cfad0dc8c56120bd5e54536fdad,,Add python bindings for Joint getWrenchTo Child Parent BodyNode,none
dartsim/dart,1607,2021-09-20T16:37:30Z,2021-09-20T18:29:27Z,True,2021-09-20T18:29:27Z,3fc76ebc4eb1b8e8362f50004bbc730b6643bb10,15,1,79514a42e0a0377a0cc3484627d6f5f34cf86453,,Replace not operator with ,`not` operator isn't compatible in some build environments. No reason to use the _alternative_ operators.    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change
dartsim/dart,1629,2021-12-18T07:41:02Z,2021-12-19T03:00:22Z,True,2021-12-19T03:00:22Z,bcf32fe1ec1c64fc1fccd8261d18134e7103a6ec,11,10,e4f2808639320a7e0d928b0ef88cf2a0a6057893 ba57d7876c39da291099725715e2f0b008cf699d 76932e178d5db73c8108cd853872c21ae7aa987f 3d17c404fb9c852e0981d3fdacf876e23bf82394 8896d7f3fc067031f7157a7fc525d9d661379224 ffe4496f4702407183101389fa885909482d8a80 10f095b984cb49a32bacde893457d2f9e491f392 eb440dc1aac6b020dc23825f3846e57d733c3543 aa67e7451ab48c6966236535cb8304bf9e1d573d ce2d84e4bbea2fe45a4073a1eb07a3a2cd63b6e6,,Treat warnings as errors on release mode,- Treat warnings as errors on release mode by default  - Remove `DART_TREAT_WARNINGS_AS_ERRORS` option  - Fix compile warnings with GCC 11.2    ***    **Before creating a pull request**    - [ ] Document new methods and classes  - [ ] Format new code files using `clang-format`    **Before merging a pull request**    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change
dartsim/dart,1632,2021-12-22T03:29:49Z,2021-12-22T16:42:59Z,True,2021-12-22T16:42:59Z,3ad67190ee296c1aee13be4d8c667615dea47f08,7,4,37063ecb09145ee541762b9bd6674b7298c4c217 ea019083529f71ffe7ffec0418a6b8eeabb30157 abbae33de3abdba96a5305cfdc09935141315dd0 9ac9f5a25ce4ea232e98a93441858c431c8f5fb5,,Revert 1629 revive DART_TREAT_WARNINGS_AS_ERRORS,none
dartsim/dart,1633,2021-12-23T09:14:14Z,2021-12-23T19:53:25Z,True,2021-12-23T19:53:25Z,2507c72808af943ab9dc872f31cf2904f58ec815,14,1,18dcb525473d35ee4af00098d8c2f214a14b06af,,Add spdlog support as underlying logging framework,- Add new logging macros `DART_TRACE`  `DART_DEBUG`  `DART_INFO`  `DART_WARN`  `DART_ERROR`  `DART_FATAL` to replace `dtmsg`  `dtdbg`  `dtwarn`  `dterr` eventually  - Add `spdlog` as an optional dependency    ***    #### Before creating a pull request    - [x] Document new methods and classes  - [x] Format new code files using ClangFormat by running `make format`  - [x] Build with `-DDART_TREAT_WARNINGS_AS_ERRORS=ON` and resolve the build warnings    #### Before merging a pull request    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change
dartsim/dart,1635,2021-12-23T10:58:12Z,2021-12-24T02:46:51Z,True,2021-12-24T02:46:50Z,8eb76884fc9cf400a99c62d44d643730b9c339b1,66,1,ba5c42d45fa5055d0a8ac25c6e3bd0fa4345ec18,,Clean up unit tests,This PR is an initial work for refactoring of the DART testing  including:    - Add `dart_build_tests()` to easily define tests  - Add subdirectories for unit test for each namespace (e.g.  `unittest/unit/common` and `unittest/unit/math`)  - Rename comprehensive test to integration test  - Move "unit" tests that test more than one namespace to integration tests    ***    #### Before creating a pull request    - [x] Document new methods and classes  - [x] Format new code files using ClangFormat by running `make format`  - [x] Build with `-DDART_TREAT_WARNINGS_AS_ERRORS=ON` and resolve build warnings    #### Before merging a pull request    - [x] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change
dartsim/dart,1639,2021-12-24T04:55:04Z,2021-12-24T07:11:36Z,True,2021-12-24T07:11:36Z,4ec3e28629e6981e72c3c291922993beca60e66f,17,2,5b6bcddcfe7c9cc35e614241f0b22f696fcf1009 fa78bc3fcd72fd1ee45229acec81fee753cb7982,,Add FreeListAllocator class,    ***    #### Before creating a pull request    - [x] Document new methods and classes  - [x] Format new code files using ClangFormat by running `make format`  - [x] Build with `-DDART_TREAT_WARNINGS_AS_ERRORS=ON` and resolve all the compile warnings    #### Before merging a pull request    - [x] Set version target by selecting a milestone on the right side  - [x] Summarize this change in `CHANGELOG.md`  - [x] Add unit test(s) for this change
dartsim/dart,1640,2021-12-24T16:10:59Z,2021-12-24T16:11:06Z,True,2021-12-24T16:11:06Z,261e28ce34d58e4227bd093d0f3e4f3b764a2072,1,1,d8647708dc296fd4b9edb6db95f19682ed1c30bb,,Use fclConfig cmake,resolves #736     ***    #### Before creating a pull request    - [ ] Document new methods and classes  - [ ] Format new code files using ClangFormat by running `make format`  - [ ] Build with `-DDART_TREAT_WARNINGS_AS_ERRORS=ON` and resolve all the compile warnings    #### Before merging a pull request    - [ ] Set version target by selecting a milestone on the right side  - [ ] Summarize this change in `CHANGELOG.md`  - [ ] Add unit test(s) for this change
