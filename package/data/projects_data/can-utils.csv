Project,PNumber,CreatedAt,ClosedAt,isMerged,MergedAt,MergedCommit,nFiles,nCommits,Commits,Labels,Title,Body
linux-can/can-utils,2,2015-05-07T14:15:53Z,2015-05-08T10:41:53Z,True,2015-05-08T10:41:53Z,a4d418210e7fe9b38addf2bb1c43726dfd4c6653,1,2,6a5d671ea20f6badd83874edd73ce3e5b7194d96 0a32afda3a60c3bf9dc9a4ccd551e5927f0fbadc,,add v command response,add v command response. Some software like USBtinViewer using 'v' for software version. Tested on USBtinViewer 1.0 
linux-can/can-utils,1,2015-04-03T13:09:20Z,2015-06-24T18:14:03Z,False,none,1a0d6b0890d1d654bafc6d68d88ef7af7331a1a5,9,1,144e698dc7483c92ff6976cc03903743b9009e35,,Added missing length check for strcpy ifr ifr_name argv x ,
linux-can/can-utils,3,2015-06-24T14:01:39Z,2015-06-24T18:51:45Z,False,none,15ae73da1ef45a65d010e03626ccea77cc51bcb4,9,1,83eea54bc7f21cb43714fe436cc73f9fafc9280a,,replaced strcpy if_name argv x by if_name if_nametoindex argv x ,replaced strcpy(if_name  argv[x])+ioctl(.. SIOCGIFINDEX ..) by if_index=if_nametoindex(argv[x]) to avoid overflows caused by long user input (inspired by isotpperf.c). 
linux-can/can-utils,4,2015-06-24T18:55:19Z,2015-06-30T19:07:14Z,False,none,2d1ca1021c946b5f0af962fa03264750bb8bbdfc,9,4,a6d35b39dbdb11f57d3fc3c33999b00147ebd61d 177f9e6722fc4e70ff600f10be287a3e6754278a ee10198a39b9363f3ff122769e8391f4b50d2074 1bf14755f057c27c32bc1dd7df264a9b6c188ce7,,Replaced strcpy if_name argv x ioctl ,Replaced strcpy(if_name  argv[x])+ioctl by if_idx=if_nametoindex(argv[x]) to avoid overflows caused by long user input.  Signed-off-by: Sven Schmitt sven.schmitt@gmx.net 
linux-can/can-utils,6,2015-09-02T07:58:26Z,2015-09-04T09:17:10Z,False,none,b791016608073f4e3fc153796ce8901dc5cf5baa,1,1,88a918ade9de18370a6e19c40215fd5b5fb22dd9,,Create README md,Create a sample README file populated from https://packages.debian.org/sid/can-utils 
linux-can/can-utils,8,2015-10-06T15:49:26Z,2015-10-10T17:47:23Z,False,none,8f71067e4c5ec85b3c24fe7158bf914a9fc99779,1,1,04e4457aa9ac0de15c7515a6d5ec89dd1f7d7260,,cangen added optarg enabling bitrate switch in canfd frames f b ,Signed-off-by: Sven Schmitt sven.schmitt@gmx.net 
linux-can/can-utils,9,2015-10-11T19:23:38Z,2015-10-14T19:25:53Z,False,none,8049a960199c080d1762cd2f2472d52837640ef0,1,6,04e4457aa9ac0de15c7515a6d5ec89dd1f7d7260 11ea75367b312ea7750dfe555bfa60a22621bf65 eb7a371f27a7ee0c42a6349e83f13a3422916a98 b1775eae3e3cf54f7b0b343911a1c54ce0de1533 679e3324c89992e71381e06e3ca819c5820d543b 505631eb7030256c51a1a000cd8dfe75e0322fcb,,Brs,Like this? 
linux-can/can-utils,10,2015-10-13T21:13:47Z,2015-10-15T12:41:13Z,False,none,b36547719e3a9eda0ad8892f883499d2fcb090f5,1,4,dd13fc6eab9cb81ffb7a2db34ee8b2a9d826f552 e00c34b286072c3cdfec956e2875b14a8143bf77 fa8f1d4306a24eae3179914493813c3dbbcba2ff 96fabc3b6a35ff1bbf3217856a483b0460e074b5,,slcan added listen only flag,slcan_attach: use -l flag to send a L\r instead of O\r to use the can adapters listen-only mode 
linux-can/can-utils,20,2016-05-20T20:49:33Z,2016-05-21T08:36:30Z,False,none,bd5450775d56da3096079e7c8434b1ad7af0938a,1,1,d3d094a5de1203db89f84162461b570e110cc401,,added listen only to slcand,listen-only option (-l) has been added to slcan-attach in oct 2015. It is now replicated in slcand 
linux-can/can-utils,23,2016-06-13T08:28:22Z,2016-06-13T08:35:26Z,True,2016-06-13T08:35:26Z,862e8ed1780014069797c3c2bb7d13594246822a,2,1,ef2ea8fa59e9123c496a109b2b4cb62dd1e3e7fa,,pointer to const in lib,See issue #22 
linux-can/can-utils,24,2016-06-13T08:57:09Z,2016-06-13T09:00:34Z,True,2016-06-13T09:00:34Z,8c5cd245f6d36325f780ab5de2e98b22c6743da4,1,1,3a33ee995cbb151ab2a1c98d1dbe053544454e4e,,header guard for lib h,Ah... I was trying to include lib.h from 2 different headers and ... just noticed...  A header guard would be nice as well. Also including `stdio.h` to handle `FILE` ([ref](https://github.com/linux-can/can-utils/blob/ef2ea8fa59e9123c496a109b2b4cb62dd1e3e7fa/lib.h#L145))  (Thanks for quick previous merge.) 
linux-can/can-utils,25,2016-06-28T15:14:46Z,2016-06-28T15:55:04Z,False,none,297f530af10ff1780e3c6723f6e8e1ddc7cdef0e,1,2,e6acbb1428f5b9e1ddbb9beebb343c1f79019cfb e907f3c78a6e89e996442c4b26173c03312baaf8,,LGPL bittiming calculation,All copyright holders agreed to change the license of this file to LGPLv2 so the bittiming calculation function can be used other LGPL licensed open source projects. 
linux-can/can-utils,16,2016-03-21T14:08:31Z,2016-06-30T19:33:16Z,True,2016-06-30T19:33:16Z,42ee04ff64a9e88e0f5bc9d1a253fc287a0add8e,1,1,3f6ffbe1f48c7ed4e921cd8f13bb5d3b16ab72fa,,cangen reset frame flags at the start of iteration,This patch fixes a bug in cangen.c  Bug: When used with -m option  if a CAN FD frame with BRS option set is sent  that flag never gets cleared for the subsequent frames.  Fix: Reset frame.flags at the start of iteration.  Signed-off-by: Ramesh Shanmugasundaram ramesh.shanmugasundaram@bp.renesas.com 
linux-can/can-utils,28,2016-08-31T08:19:51Z,2016-08-31T08:19:56Z,True,2016-08-31T08:19:56Z,8f74b1cc21a56276b9e0c7b95afa00ba399d218f,1,1,7a9e10173a48402efc8ebc9deda1fbe4803fa4d4,,don t exit when device goes down,
linux-can/can-utils,29,2016-08-31T11:24:22Z,2016-09-07T12:38:17Z,False,none,c9750774fe1887f52daa116c7fd0a0c987f67f7a,1,3,2ca7d6fd2ef9d479adb0df9c5c78c3be1a1c0cd8 b4bba50c540e34d56de8f8111fb5e62a391c40cc 0bc81a4c1f820bb683e2e53733f2807c9daf2e10,,candump down up device monitoring,See #26  
linux-can/can-utils,31,2016-10-04T15:21:11Z,2016-10-05T05:44:18Z,False,none,d7f682aacc2f967e2c27aa9d0df82164e0a3e786,1,3,9ef196a25da13343c8e1d375cfaeb397a997ce8e d98f199b46af015dec4adabe56cceb0d323e67e2 643dadd617f83da757575ea38874574718d97362,,slcand log to stdout when running in foreground,when slcand runs in daemon mode  it makes sense to output via syslog. but when running in foreground  it is nicer to have all the info on the stdout. 
linux-can/can-utils,15,2016-03-21T09:58:15Z,2016-11-21T13:11:17Z,False,none,63db90e566151a77de0d7f2b0bd536d86d03fc15,1,1,fa624eb2e6f05b482df8272fc5281497e037fad9,,canfdtest remove usage of gettimeofday,This patch fixes the issue #13  https://github.com/linux-can/can-utils/issues/13  Modified the existing millisleep function to use MONOTONIC clock & used clock_nanosleep with absolute timeout to be accurate. Also cleaned up unused variables in can_echo_dut.  Signed-off-by: Ramesh Shanmugasundaram ramesh.shanmugasundaram@bp.renesas.com 
linux-can/can-utils,33,2016-11-21T14:07:52Z,2016-11-21T14:22:57Z,True,2016-11-21T14:22:57Z,64edc021d22441002028bc451548b9e7f1874b91,1,1,cf1b2a177f2efc6c763a929a557a43526c13544d,,canfdtest remove usage of gettimeofday,This patch fixes this bug  https://github.com/linux-can/can-utils/issues/13    Modified the existing millisleep function to use clock_nanosleep with  MONOTONIC clock and relative timeout.    Signed-off-by: Ramesh Shanmugasundaram <ramesh.shanmugasundaram@bp.renesas.com>
linux-can/can-utils,36,2016-12-20T14:03:37Z,2016-12-20T14:06:24Z,True,2016-12-20T14:06:24Z,c3305fdd515464153d20199db232b6124bc962c0,1,1,5f4785c2acb7e261b05dfc5794149d87a75dfeb8,,Add check to detect clock_nanosleep in librt,With glibc versions before 2.17  we get following build error:      canfdtest.o: In function `millisleep':    canfdtest.c:(.text+0x212): undefined reference to `clock_nanosleep'    collect2: error: ld returned 1 exit status    make[1]: *** [canfdtest] Error 1    make[1]: *** Waiting for unfinished jobs....    glibc versions before 2.17 needs to link with -lrt for  clock_nanosleep(). This patch adds support to detect if linking with  librt is required.    This build issue is detected by Buildroot autobuilder:  http://autobuild.buildroot.net/results/0e5/0e5242376ff6aa82e89ed1172350e05009d48156/build-end.log    Signed-off-by: Rahul Bedarkar <rahul.bedarkar@imgtec.com>
linux-can/can-utils,35,2016-12-19T11:06:27Z,2017-01-14T19:19:12Z,False,none,a645a2d39f6a1ad44a3dbf0c94987b435050eb4b,1,1,3fe9ac9cb22dccec9d51aa210fcdbad8a0f3d40a,,bcmserver fix ifr_name scan size,Fix fr_name scan size to the IFNAMSIZ-1.    Signed-off-by: Jiho Chu <jiho.chu@samsung.com>
linux-can/can-utils,37,2017-02-13T08:53:29Z,2017-02-16T13:26:13Z,True,2017-02-16T13:26:13Z,cb33a55720716cbe01e6025a2bda74a1b7e492d3,1,3,7eb005d9f33621d1b4b585e6cfb497ae34dff886 51192feff873b2cf011d955ea9c9dffe4ffbd1c9 35f3dc375b429d815d30c520b37dd8b8d176c0b4,,isotptun daemonize by default add F for old behavior,We want isotptun to exit when the tun device can be used. This helps system  startup continue configuration and use of the interface at correct time.    Log errors to syslog when daemonized or to stderr when in foreground.    Exit consistently with EXIT_FAILURE when the tun device was not set up as  defined on the command line.    Signed-off-by: Marko Kohtala <marko.kohtala@gmail.com>
linux-can/can-utils,39,2017-04-24T03:43:01Z,2017-04-27T19:32:29Z,False,none,2a89022000dc11c1e59cdb1bec46b98888a7bfaa,2,5,1f3bd246026b4c09d248e3c5ac9c0c84ba693cad 7f0899ac4301be604776a5aa27a822dc74a3a556 57cee48f754e89dcb84959233b8e2844d950d0bb 0b82576818a807f9cd81e0a5eaf09fa95051fd05 ebea6b347651ae2213e556e797fd8b89a6ae0d07,,Improved README md file for can utils,Hi @marckleinebudde and @hartkopp !  Thanks so much for maintaining can-utils!  I wanted to contribute back by making the README file a bit more accessible with more information on how to get started.  I know not all the information I've added on the README file is complete  but it is a starting point.  Here are the main things that I would like to get your input on:    - Added MIT License file called LICENSE.md - if that is not the correct license  feel free to change the content of the file.  - Under authors  I've put both your names.  Please correct if I was mistaken or missing anyone else.    Any additional input is welcome and curious what you think of this README file proposal.  Thanks for all your hard work!
linux-can/can-utils,48,2017-08-08T22:13:10Z,2017-08-09T06:40:08Z,True,2017-08-09T06:40:08Z,c6ed797918bdbc3d72145d0c026fef12d23a27fd,1,2,243bab70d584b27a895b2af61b3ef30245709e87 23249c5cd8e9c8b19fc63558c454291f9b7a24ed,,use a macro for standardization,I was reading the code to learn more about can but I noticed that the hex_asc_upper_lo macro which is defined before do the same thing as  hex_asc_upper[id & 0xF] so it needs to change for standardization
linux-can/can-utils,49,2017-08-09T07:26:43Z,2017-08-09T08:47:40Z,True,2017-08-09T08:47:40Z,846eddd854c6906e034a46071281a21c48519595,1,1,1ae8714d0d4a5da885d6ab9977f2d37dae7d05f0,,Another macro usage,Used same macro instead of array
linux-can/can-utils,50,2017-08-09T14:25:13Z,2017-08-30T20:05:34Z,True,2017-08-30T20:05:34Z,5b518a0a5fa56856f804372a6b99b518dedb5386,1,1,c45ee0cdbe1ce2e1cd7dc83291b40e960e443392,,omit extra sets and clears,old code does extra sets and clears in case of quiet==1 so I've changed if statement orders and used else if
linux-can/can-utils,58,2017-11-28T21:02:10Z,2017-11-29T10:00:09Z,True,2017-11-29T10:00:09Z,60de0d97834d15964a5302731d43434c78e4d1ae,1,1,f1c3ed1461f263a20229b051d37d47b2c6822da4,,increase TTYPATH_LENGTH,ttypath can't fit filenames such as /dev/serial/by-id/usb-Zubax_Robotics_Zubax_Babel_1D002A00185732523935382000000000-if00
linux-can/can-utils,62,2018-01-14T13:18:33Z,2018-01-14T13:46:36Z,True,2018-01-14T13:46:36Z,6bbcf9d90cda1115f803268a610dfd9a68b7da30,1,1,d052ad1a6be919d5418c952826b0986050d50d2c,,Set low latency flag on serial port ,Some serial drivers does not default to lowlatency mode by default.
linux-can/can-utils,64,2018-01-18T09:41:15Z,2018-01-18T10:02:43Z,False,none,6b986e2c561a24bbe2c0d851e489beaf1c56a610,12,10,ac181f305fbc8ba9ad6b8312f032133414360fea eabe3a69f03a0bdc7f79f031f72d5f3ede133e3e c234ebc4a5d0f7c9b623afdddc17e7d8d9602dc3 6e22cc49a7ebc676de754fab70f8f1b59391b3b5 f66e18aed0ed12e8febe90f346bcd012e2077f0c 6e8753e4d2d62a0078f385ff49fb69000e620159 126896e1734256eadc52718a80731e7e7df3f198 99e1d052363b31b8f87620b5d043346c64d933d7 186656f960ed95a658ca2902525dc1a4223d7234 206906ccd38e304d985ab6942d8053dddaf69168,,testj1939 initialize verbose variable,verbose is used uninitialized when testj1939 is not called with -v.
linux-can/can-utils,7,2015-09-24T19:33:45Z,2018-01-18T10:22:12Z,False,none,none,11,5,e965a2a25ede2753513f4d52eaeea51ee2ea87bc 18da2c3f6ab68450ca2b58cbffb0bea33cd2dd6c 0cbdbfaf0ea81ca0fc65c25d9c11dd7ec03efbef 8147648b3c395f475c574a38c694c8e268d6f18a 44e40cac2c6c73703a763c6f22446f18c991837b,,J1939 v6,
linux-can/can-utils,63,2018-01-16T15:02:06Z,2018-01-18T13:42:31Z,False,none,63d53980bc1e031cb520730c3d6f0f6c8d23b5fe,1,1,4664e69ca11f4098bbba3d04c8ed72e121264040,,Android mk Allow building in AOSP source tree,AOSP is treating all warnings as errors. Allow these specific warnings through.  Fixes #61 
linux-can/can-utils,66,2018-01-22T11:29:01Z,2018-01-22T12:07:27Z,True,2018-01-22T12:07:27Z,a7de2f68b76ee5d52315fbe6bc3b06ad7dbcd17c,3,1,1f3f2f61634a8468d82225c6f2ccb1e7218d5d9b,,testj1939 use address to string function from libj1939,canaddr2str() from testj1939 and libj1939's libj1939_addr2str provide  the same functionality. Remove the local helper function and use  libj1939_addr2str instead.    Signed-off-by: Bastian Stender <bst@pengutronix.de>
linux-can/can-utils,65,2018-01-19T14:51:30Z,2018-01-22T13:52:32Z,True,2018-01-22T13:52:32Z,a6469df2c0a7282bf3743e792135a84a5f01021a,2,2,6133ac94f0119bb402796875555c592f242afdb7 cf039f14fb4083c35937a191f800198eefd0b5b4,,jacd add verbosity and fix missing interface,
linux-can/can-utils,76,2018-03-24T19:04:39Z,2018-03-24T19:47:36Z,False,none,331ef319d99a962e85620178da7bc2c6071cd910,1,3,c7266ff148ad801751c1e3d1e3c14d04b2ebee44 f8dcc0f8ba4feb1af9536cf43741a2691eac7eee d8bbacfb476d5d26690cdb9910d15fb8600ea9ac,,cansend Valgrind was reporting uninitialised byte s in bind call ,Issue #75 for more details. Cansend still functions as before and Valgrind no longer picks up on this.
linux-can/can-utils,77,2018-03-24T19:54:33Z,2018-03-24T19:56:58Z,True,2018-03-24T19:56:58Z,8389744f79f9a68b3ed7053a2c1a78eda10b9dfb,1,1,b00cb24f128c482ac2a89c45d6c7245ab99eb680,,valgrind no longer reports uninitialised byte s from bind call ,See issue #75 for more information.
linux-can/can-utils,78,2018-03-30T17:00:22Z,2018-03-30T17:03:03Z,True,2018-03-30T17:03:03Z,9d52f81058808dad2b768ba29e19abdab4ed23c1,1,1,6ca4ce8ac9ad4025321a538b43367b31f568f90c,,bzero is deprecated,Use memset() instead of bzero().
linux-can/can-utils,79,2018-04-03T10:00:34Z,2018-04-03T12:22:34Z,True,2018-04-03T12:22:34Z,01041fddd6e8670a75d5ae6e3a61fc0b3048dcec,2,1,f51c897d6874e2d3c5f3524449e0e82b93b0add2,,Consistent arguments to sizeof ,In calls to functions taking a pointer 'p' and a length 'l':  if the address of a struct variable v is passed in for p  then also pass sizeof(v) for  l.
linux-can/can-utils,81,2018-04-20T13:23:56Z,2018-04-25T14:34:37Z,True,2018-04-25T14:34:37Z,872b73766cf4ea3d2adbf18f04e66a3849f954f7,1,1,33a9249571a396609d865467458329718699f9b4,,slcand daemonise only once setup is complete,Delay the daemon() call until the interface has been configured. This  simplifies scripts that wish to use the new interface immediately.    Signed-off-by: Mans Rullgard <mans@mansr.com>
linux-can/can-utils,90,2018-08-14T02:31:34Z,2018-08-17T07:50:31Z,True,2018-08-17T07:50:31Z,8a3e0453aa3b3aaeb357711b0007fdf179ea7bfb,4,6,1a4846cf5cdec776317ce37e55b02d5b60779e39 b6efbc2f546447abce0314d62324e658defac496 4585ca549793aad41f594837ebeaded56e692001 08c8a8626cfea4bf68f6bc7a80f0fb51c359caa8 998f2c998c06a03fdba1a99ef48f55967f258b06 c838f79e5f7e0029758faae2e9137eb2e7fee583,,CMake first pass,Hi     This PR is a basic CMake implementation.  I'm hoping this may be of use to others.  I included a usage section in the README file.  Testing has covered Linux  with cross compiling for Android  and RaspberryPI.    Regards   Joel Winarske
linux-can/can-utils,93,2018-08-22T13:56:46Z,2018-08-23T14:04:40Z,False,none,08c01c72e39644a90d9ac338566fab66ce5050ed,2,2,f811b53dfea1022def0961f7370effad4c784fba b541771b7b9caac2fdfd5f5c9603f0c7702e1195,,cansend send multiple frames in one invocation,It is sometimes convenient to be able to send multiple frames with a single cansend invocation  otherwise the time between frames can get very large.    Split into two patches for easy review.    I added a 1ms delay between frames  otherwise it is too easy to overflow the transmit queue. Apparently write() is non-blocking  it returns -ENOBUFS. I suspect that adding a select() wouldn't work anyway. 1ms is used in other CAN utils as well  so I used that.
linux-can/can-utils,96,2018-09-11T06:04:41Z,2018-09-18T08:39:57Z,False,none,35d48ced2f16d198df3f378a3cc38753c3d901ec,1,2,a0b48b8ac0aae002aabe9193add163c6eefcb374 826d18972f563613d991e12e78f7d3f0f5452cbc,,Canfdtest 2018 09 07,
linux-can/can-utils,97,2018-09-13T08:41:26Z,2018-09-18T09:48:24Z,True,2018-09-18T09:48:24Z,0ff988eeeff5a56a4698175ada66c2c9122a2d51,1,1,55b0ba83080e1c1ad121e6df64ef1989c30a9de3,,CI treat gcc warnings as errors,For now exclude unused-result warnings in order not to  affect current builds.    Signed-off-by: Yegor Yefremov <yegorslists@googlemail.com>
linux-can/can-utils,101,2018-09-21T09:37:27Z,2018-09-21T09:44:50Z,True,2018-09-21T09:44:50Z,3e4d589fec9aeb3e9e3efd28c9dc28c6669d5ea9,1,2,1ba9b864518463e6baf970fa861fc10b6909de4d 54ff81cc40ad1aa71372359f17cbf64c322c5e67,,add bind related options to testj1939,This options are needed for testing of j1939 socket functionality and currently used by labgrid based j1939 regression testing.
linux-can/can-utils,99,2018-09-18T08:39:43Z,2018-09-21T10:04:06Z,True,2018-09-21T10:04:06Z,5b8145f63df9185cceaf8be60e3c7d2cf4207821,1,2,18834410ac63634c93fd281708a5c799be32b695 ba603c59ae8ebc4185ef0452814dc8280d9df027,,Extend canfdtest to test proper RX and TX ECHO order,
linux-can/can-utils,100,2018-09-18T11:45:22Z,2018-09-27T10:57:17Z,True,2018-09-27T10:57:17Z,1c81f7fb2dc6d198b1d342d4eab02acb4f5c3c3c,5,1,1ce4dc7b39fa45fc9b895c15288721df0a50f140,,Add missing return value checks,Signed-off-by: Yegor Yefremov <yegorslists@googlemail.com>
linux-can/can-utils,92,2018-08-17T08:03:22Z,2018-08-17T08:08:47Z,True,2018-08-17T08:08:47Z,7a4dd732af411f4dd000f50ed4205f9358743cff,1,3,d0c855c5589cc826906f2af59467aefae0df6ffa 6cedc8a5c67fa9d8641a2ce835238aa96e142f86 db7261d403b2e8d9be3b435f165e2a52420df3e3,,Improve readme,
linux-can/can-utils,105,2018-10-04T21:58:39Z,2018-10-04T22:08:24Z,True,2018-10-04T22:08:24Z,12664efa9f5ea6945be7b9ff09bee1cd6fabe099,1,3,a6954bdaae3dc968952ec722a2ba45814d14ae39 572a66fb947857de1e4d9711e79f1c39c548c698 04c171c285b3dba2c7e388d7e56a40d8a0dd9374,,Cmake cleanup,
linux-can/can-utils,108,2018-10-08T20:39:37Z,2018-10-08T22:02:59Z,True,2018-10-08T22:02:59Z,3f2bc6e1eabbd89775eae1ccb9c9096e8d3e9d2b,1,1,371d8e6da4cefa10aa885f935595e1df88150252,,Fix CAN ID typo in candump usage to 12345678,Single char typo  also means of learning the ropes.
linux-can/can-utils,109,2018-10-10T21:30:16Z,2018-10-23T19:37:26Z,False,none,c7c60de8d680d1535b1320dddd0386b2abe41729,1,3,b0190b9d6eef46ab2e62cca6db8b194585947e2c 104e08ea708ea3e706c49d0699eaf1bac103a486 9f829d394c4274985a8d533ee2420def5fa820fb,,Revert Fix CAN ID typo in candump usage to 12345678 ,Reverts linux-can/can-utils#108    The documentation was correct - the MSB in the CAN ID and mask must be set. My mistake. Thank you @hartkopp !    (I think this is the extended ID bit?)
linux-can/can-utils,117,2019-01-04T13:41:53Z,2019-01-04T13:43:25Z,True,2019-01-04T13:43:25Z,02b87eb1200fea2f44b5e7d84a6294f1316a2205,1,1,5b68a2cef1a1dcfba3ea1a28ef837352066fd80e,,jcat inverse if logic,it was if(offset != NULL)  so it should be if(offset)    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
linux-can/can-utils,114,2018-12-14T12:17:02Z,2019-01-04T12:56:13Z,True,2019-01-04T12:56:13Z,0083a3762bc01fd355c46c47bc7990ae0866f14d,8,2,e649b6ee2a20c5c7ad3e270b24a813f1a78d1a46 23e5e227ace0a6564c125aaa7aac16751a4d4ab4,,add jcat,jcat is kind of netcat for j1939  for example:  jcat can0:0x90 -r > /tmp/some_file    jcat -i some_file_to_send can0:0x80 :0x90 0x12300    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
linux-can/can-utils,118,2019-01-10T16:14:33Z,2019-01-10T18:28:13Z,True,2019-01-10T18:28:12Z,8991b5c47d0b4ee8efa02e705279816d36e10e98,1,1,f6e07960d3feba621302d7ef32012d8346e90b67,,Silence false positive unaligned pointer access warning,This is an issue for Android (ARM) platform  throws a compiler warning.
linux-can/can-utils,121,2019-01-14T08:17:56Z,2019-01-14T09:03:35Z,True,2019-01-14T09:03:35Z,7b70a433cf29af50a9f0441e752ee777c1a464c9,1,1,ed5b495da68f049856360d4072d10ff5ad8b965a,,testj1939 fail if we use unsupported size,Currently if we set size which is more then 128 byte  will silently ignore provided value and send only maximal  supported size.    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
linux-can/can-utils,122,2019-01-14T08:23:18Z,2019-01-14T09:03:42Z,True,2019-01-14T09:03:42Z,e0277cc9609bf12b64e88fe9305fbe80dd18d912,1,1,5551de5e563ddff3af1cc286c81c1204981dcef7,,testj1939 split output string in to 8 byte strings,Currently if we send lots of bytes  `test1939` output will get unreadable.  Make it easier to read by splitting output dump.  New format will looks as following example:  ```  root@DistroKit:~ testj1939 can0:0x90 -r  80 12300: 01 23 45 67 89 ab cd ef  00008     01 23 45 67 89 ab cd ef  00010     01 23 45 67 89 ab cd ef  00018     01 23 45 67 89 ab cd ef  00020     01 23 45 67 89 ab cd ef  00028     01 23 45 67 89 ab cd ef  00030     01 23 45 67 89 ab cd ef  00038     01 23 45 67 89 ab cd ef  00040     01 23 45 67 89 ab cd ef  00048     01 23 45 67 89 ab cd ef  00050     01 23 45 67 89 ab cd ef  00058     01 23 45 67 89 ab cd ef  00060     01 23 45 67 89 ab cd ef  00068     01 23 45 67 89 ab cd ef  00070     01 23 45 67 89 ab cd ef  00078     01 23 45 67 89 ab cd ef  ```    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
linux-can/can-utils,119,2019-01-10T20:06:48Z,2019-01-14T13:48:49Z,True,2019-01-14T13:48:49Z,2328c6cfa0b004173644796a3604392f355dcde2,1,1,4da344b2aac8fa6448ebcf22c08604d7231232ae,,Don t build libj1939 for Android,This library uses `if_nameindex` symbol  not available at this system.    When compiling for Android  you get the following warnings:  ```  libj1939.c:35:3: warning: implicit declaration of function 'if_freenameindex' is invalid in C99 [-Wimplicit-function-declaration]  libj1939.c:42:11: warning: implicit declaration of function 'if_nameindex' is invalid in C99 [-Wimplicit-function-declaration]  libj1939.c:42:9: warning: incompatible integer to pointer conversion assigning to 'struct if_nameindex *' from 'int' [-Wint-conversion]  libj1939.c:44:4: warning: implicit declaration of function 'error' is invalid in C99 [-Wimplicit-function-declaration]  ```  
linux-can/can-utils,129,2019-03-12T11:28:53Z,2019-03-12T11:34:43Z,True,2019-03-12T11:34:43Z,e1d5ee9907cc2dc9cf919cb2ac472ec5ee7d1f26,2,2,4a1818aa55fdebc861137d82ceda869585d3210c c59dff1bb181e33a94c98d1007268451c2bdda00,,Cleanup,This pull request cleans up the `Makefile` by sorting things alphabetically and adding a missing newline to the `GNUmakefile.am`.
linux-can/can-utils,130,2019-03-12T11:38:07Z,2019-03-12T11:52:14Z,True,2019-03-12T11:52:14Z,83667e822cf0cedf50a4583fb009665513d941f2,1,1,9f60ed6fa0c79964ef1556cf23fc6757471afc66,,testj1939 use zu to as format string to print sizeof ,This patch uses `%zu` to print the value of `sizeof()`. This works without compiler warnings on 32 and 64 bit systems.
linux-can/can-utils,131,2019-03-15T09:29:17Z,2019-04-04T09:01:39Z,False,none,f14b4e03d4e064f408b3f63f3a5cf9b4a74657db,5,5,a505085b713fb2a3b819c47237d0da43118ddf07 d5665bb73a6c805777381dc1f5032f6266d90ae8 06cbc0a9330b23d4bec5a96dd475e6b79b9b8603 6d305d3d67f79152c467713de9138e11b967707f 75082a043fd8bda3b1663f37045dfb35d3247dda,,Sync some of j1939 tools with latest kernel UAPI,
linux-can/can-utils,136,2019-05-09T10:13:05Z,2019-05-09T10:29:59Z,True,2019-05-09T10:29:58Z,e92806db2134a85927e9d0e38275ba6381759976,1,1,5e342e3c50ea508ae7b07d90a8503f1f44a3db46,,libj1939 fix name parsing,name is 8 byte long.    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
linux-can/can-utils,138,2019-05-09T12:19:49Z,2019-05-09T12:37:41Z,False,none,a5b59c9c706726d865cd611d21bb7973f49f9a6a,9,8,38fa644069d2a40cef8fe1df876588a5a76845cf 1ea2ec872e51e5a66d182cb8a39a0ee6cb5ed6ea 057bf8b7595c050acf24adbcb25b0a1a29730d42 818571a1e37e803bf9bca4804b2f231087715404 a7ed9b5eba70b8089a1549cdd42f441fa271f732 a9e737fa7a7e462f5e59b0950db68d3f7642c8dd 74cbcfee64f7c8f16c3355dc49a735a909502cf9 b6b40ae2af0ae9874d6ce30d8ecc424fa52c983d,,Errqueue broken,Picking up @olerem work from https://github.com/linux-can/can-utils/pull/135.
linux-can/can-utils,137,2019-05-09T12:04:44Z,2019-05-09T12:49:38Z,False,none,54b356a89bb688eb55f50ec90c3913446aa7eb04,9,7,38fa644069d2a40cef8fe1df876588a5a76845cf 9ff370ea8218c0e8b11ca188c01cdb52dac4fca4 6260263ef3a21f3071675898572ef34ba6076d9c 05a66d63fa65e486e08c1d3066737ff51a5854d3 05368ef1aebf9d339afbd083d3f5671ae3fba3a2 edcce70373e54cbdbea9a38cccce111630772fec 25025d05ae4a97034f479dacaa68ee2cbd0349d1,,Errqueue,Picking up @olerem work from https://github.com/linux-can/can-utils/pull/135.
linux-can/can-utils,135,2019-05-09T07:35:51Z,2019-05-09T12:50:29Z,True,2019-05-09T12:50:29Z,045f75ad649f6e039c521252d125a839e834962d,9,7,38fa644069d2a40cef8fe1df876588a5a76845cf 9ff370ea8218c0e8b11ca188c01cdb52dac4fca4 6260263ef3a21f3071675898572ef34ba6076d9c 05a66d63fa65e486e08c1d3066737ff51a5854d3 05368ef1aebf9d339afbd083d3f5671ae3fba3a2 edcce70373e54cbdbea9a38cccce111630772fec 25025d05ae4a97034f479dacaa68ee2cbd0349d1,,Provide error queue support,
linux-can/can-utils,139,2019-05-28T14:14:07Z,2019-05-30T18:37:43Z,True,2019-05-30T18:37:43Z,f185160bfb3cfd02c64969a12ed08a2473157dca,1,1,0d8b0a88372a1c041a94a4d93f4312e803358ebb,,Add uds output functionality,Adds the option -u to isotpdump which will print the UDS message type as well as the service name or response code.
linux-can/can-utils,140,2019-06-03T18:25:55Z,2019-06-03T18:26:12Z,True,2019-06-03T18:26:12Z,a965086356ccf91cfdd9824fac75540dd59332a1,1,1,8ada533538bda9539ec334e8811c92691fced393,,isotpdump fix compiler warning,| isotpdump.c: In function ‘print_uds_message’:  | isotpdump.c:94:29: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]  |   } else if (service >= 0x10 && service <= 0x3E ||  |              ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~  | isotpdump.c:96:22: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]  |       service >= 0xBA && service <= 0xBE)  |       ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
linux-can/can-utils,144,2019-06-25T05:39:56Z,2019-06-27T10:05:53Z,True,2019-06-27T10:05:52Z,bb2cc1140fafe799b20fd94996d8f10d17e888e4,1,2,0e542c8dba1f547d162102e0b719b2a59e40a791 c4e68aff7828d4c568e8d5172e9f578d05cc3250,,queue status,
linux-can/can-utils,143,2019-06-19T10:25:26Z,2019-07-10T11:42:21Z,True,2019-07-10T11:42:21Z,9d0c08d8cb96dc1387cbc5d545cb7bca16b12c2a,34,1,7b7331976a05b21ac39246b6878f781020086ded,,Add SPDX identifiers,Signed-off-by: Yegor Yefremov <yegorslists@googlemail.com>
linux-can/can-utils,146,2019-07-10T11:46:40Z,2019-07-10T20:47:12Z,True,2019-07-10T20:47:12Z,9ffb16495c4c29081a945ad3e30bba3bceed0e6b,5,1,59f92965b90efc00b0cb63e3d4edfefd9b24326f,,Relicense GPL 2 0 or later files to GPL 2 0 only,This way all licenses in the project will be homogenised.    See the initial discussion in #143.    Acked-by: Marc Kleine-Budde <mkl@pengutronix.de>  Acked-by: Oliver Hartkopp <socketcan@hartkopp.net>  Acked-by: Sven Schmitt <sven.schmitt@gmx.net>  Acked-by: Oleksij Rempel <ore@pengutronix.de>  Acked-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>  Acked-by: Brennan Ashton <bashton@brennanashton.com>  Acked-By: IOhannes m zmölnig <zmoelnig@iem.at>  Acked-by: Frank Theile <ftheile@grundfos.com>  Acked-by: Wolfgang Grandegger <wg@grandegger.com>  Acked-by: Jeremiah Mahler <jmmahler@gmail.com>  Acked-by: Jonathan Challinger <mr.challinger@gmail.com>  Acked-by: Cheng-Lung Lee <chenglung@gmail.com>  Acked-by: Ramesh Shanmugasundaram <rashanmu@gmail.com>  Acked-by: Mans Rullgard <mans@mansr.com>  Acked-by: Søren Holm <sgh@sgh.dk>  Signed-off-by: Yegor Yefremov <yegorslists@googlemail.com>
linux-can/can-utils,147,2019-07-14T20:16:52Z,2019-07-15T06:34:00Z,True,2019-07-15T06:34:00Z,c10c049ce79d52ae29dd85a65cd6d5b9d3458a9e,6,1,e9590b1ca75d360eaf3211bebd86058214d48064,,fix include to find SIOCGSTAMP with latest kernel,In linux kernel commit 0768e17073dc527ccd18ed5f96ce85f9985e9115  the asm-generic/sockios.h header no longer defines SIOCGSTAMP.  Instead it provides only SIOCGSTAMP_OLD.    The linux/sockios.h header now defines SIOCGSTAMP using either  SIOCGSTAMP_OLD or SIOCGSTAMP_NEW as appropriate. This linux only  header file is not pulled so we get a build failure.    canlogserver.c: In function 'main':  canlogserver.c:404:21: error: 'SIOCGSTAMP' undeclared (first use in this function); did you mean 'SIOCGRARP'?       if (ioctl(s[i]  SIOCGSTAMP  &tv) < 0)                       ^~~~~~~~~~                       SIOCGRARP  canlogserver.c:404:21: note: each undeclared identifier is reported only once for each function it appears in    Fixes:   - http://autobuild.buildroot.org/results/363de7d9bf433be8bc47ba4ee52ae0bb80fa9021    Signed-off-by: Fabrice Fontaine <fontaine.fabrice@gmail.com>
linux-can/can-utils,141,2019-06-08T07:32:23Z,2019-07-30T20:03:19Z,False,none,fb85be385db4b7b21b231a87f95b20cfee7617fe,1,1,294dd9740998c9385536e90bf3cd439e5afd4f88,,isotpdump fix service 0x23 naming according to UDS specification,Fix Service 0x23 naming according to the standard  "ReadDataByMemory" -> "ReadMemoryByAddress"
linux-can/can-utils,151,2019-08-26T09:07:03Z,2019-08-26T12:16:06Z,True,2019-08-26T12:16:06Z,a8d4827d0fe83edcddc83ce48b53c04024a6ee0f,2,2,d5ba0e2d236a2152871d9cb41aecff3acc7644ca 7337cb12ded8f7cbe9602327d3cc3139ce0832b2,,Recvown,Sync with latest kernel J1939 UAPI 
linux-can/can-utils,134,2019-04-04T09:00:04Z,2019-04-04T09:00:54Z,True,2019-04-04T09:00:54Z,afb88e901902ae27e45afcc2230896f0af83a59d,6,7,06d3beb08ca55dfa3c33401d7542fad1d3e48898 314f8a92ae79b0880f7c4d506576a780102d938d b8a2fa319a57adc909c4e785e800ff2f4d014807 7192b0b9d7c97e91099b523902740d1b1df91cb8 b931fb514c118b091a3077460ae0ec1dbe1b4a9d 48a4a4bef44009cb5235e408cf28f111045ed29f 19d41bec457bcfb9c85d0ddfb53c5403967bb3ff,,j1939 port j1939 tools to new UAPI,
linux-can/can-utils,154,2019-09-19T12:15:30Z,2019-09-19T17:17:15Z,True,2019-09-19T17:17:15Z,26ae1fffa8f290442882d3e59c7363cb371e2380,1,1,de8bb5fd8f4772e19f790f23e52b852648689db8,,README update the list of CAN over IP tools,Fix socketcand URL and add cannelloni.    Signed-off-by: Yegor Yefremov <yegorslists@googlemail.com>
linux-can/can-utils,155,2019-09-20T10:11:40Z,2019-09-26T18:14:41Z,True,2019-09-26T18:14:41Z,7e9bc7719b47082371a6d76183ef58abf2dfa581,4,2,d66295ee75c42a42119bb741676b5c77dbb4af6f 0b93e9836f6fc981d121e4d26c696cf875cc34ff,,Reuse fixes,This patch series fixes some of the issues mentioned by the REUSE utility
linux-can/can-utils,162,2019-10-30T18:25:25Z,2019-10-31T07:52:14Z,True,2019-10-31T07:52:14Z,a08b61621d5ee063f7a7a300556cfc713a1de147,1,1,275f606a1f849a79627b2e5380edd21405dfdd32,,Update can j1939 kickstart md,Added the padding FF at the end of the to the candump output of j1939 message longer than 8 bytes. 
linux-can/can-utils,163,2019-10-31T07:56:47Z,2019-10-31T07:57:30Z,True,2019-10-31T07:57:29Z,35b2ef691c10ead0b1e1d4e9a1c7c366ba166c20,6,1,791b6de78673f005e9748983231f7260f6b69e99,,treewide Fix compilation on libmusl replace error by err ,Fixes: https://github.com/linux-can/can-utils/issues/161    Reported-by: Brandon Ros <brandonros1@gmail.com>  Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
linux-can/can-utils,165,2019-11-11T13:23:23Z,2019-11-11T13:40:27Z,True,2019-11-11T13:40:27Z,8426d63ecf1ba175366e42fee8324430e4618c76,14,1,14ccc06ebada83f80d00c9ec4b15e261fd41b634,,Fix spelling in various files,codespell parameters:    `codespell -q 3 --skip="*.in *.sh *.m4 config configure autom4te.cache"`    Signed-off-by: Yegor Yefremov <yegorslists@googlemail.com>
linux-can/can-utils,168,2019-11-12T08:07:27Z,2019-11-12T09:01:58Z,True,2019-11-12T09:01:58Z,a67bf7aa89d7a9e196b39d276f838eb562bdafce,1,1,276077de00cf27c04901e0a0ba8e887219f72ea3,,jacd fix typo in a comment,s/ourselve/ourselves    Signed-off-by: Yegor Yefremov <yegorslists@googlemail.com>
linux-can/can-utils,166,2019-11-12T08:01:38Z,2019-11-12T09:02:20Z,True,2019-11-12T09:02:20Z,c0dba0a454480413f0fcf727d442eecb955f97ac,8,1,ffd60c9b74117361fe3dfd1004533ff593b90645,,include import header files from kernel v5 4 rc7,Signed-off-by: Yegor Yefremov <yegorslists@googlemail.com>
linux-can/can-utils,167,2019-11-12T08:04:31Z,2019-11-12T09:05:49Z,True,2019-11-12T09:05:49Z,bf30a4bc01bbdcfc4115ca88357f757e1367c7b3,1,1,63d9a3d87b984636646df822478cc6191b225c92,,libj1939 fix missing include and syntax,Include err.h and remove the unneeded parameter errno and  its header include.    Fixes: 791b6de ("treewide: Fix compilation on libmusl  replace error() by err()")    Signed-off-by: Yegor Yefremov <yegorslists@googlemail.com>
linux-can/can-utils,169,2019-11-13T11:37:36Z,2019-11-14T12:54:06Z,True,2019-11-14T12:54:06Z,9ae877ce3215a748729f15167c943cd8338a9a60,1,3,ecf80e8f91e3570978ded0be55f381a7d36109ef b04108c6150dda19b2174cf9b1ed88921c8de92e da33f96edfb97d8052b2a8b5f0d181149df075cc,,Isotpsniffer add llopts support,
linux-can/can-utils,177,2019-12-02T18:14:19Z,2019-12-02T18:16:56Z,True,2019-12-02T18:16:56Z,6eeedb0e66bc356a6147dccf14242a4b6a721074,1,1,b6a44803fd10053fa067e21afb75a29c5441dd6d,,isotpsniffer fix error handling 0 is a valid filedescriptor,Fixes: b04108c6150d ("isotpsniffer: Fix error handling")  Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
linux-can/can-utils,176,2019-12-02T10:25:08Z,2019-12-02T17:59:34Z,True,2019-12-02T17:59:34Z,b6a44803fd10053fa067e21afb75a29c5441dd6d,1,1,b6a44803fd10053fa067e21afb75a29c5441dd6d,,isotpsniffer fix error handling 0 is a valid filedescriptor,Fixes: b04108c6150d ("isotpsniffer: Fix error handling")  Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
linux-can/can-utils,180,2019-12-06T10:26:20Z,2019-12-06T10:31:53Z,True,2019-12-06T10:31:53Z,6831eeeb62ab5eb9224d444d04cc4d9e7b2ea5b0,1,1,a8456276dfefdc57fa806f7215af419405161af6,,jacd remove SO_BINDTODEVICE setsockopt call,This was used in the non mainline stack version.  Removing this call allows to use jacd without root permissions.    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
linux-can/can-utils,175,2019-11-29T13:19:24Z,2019-12-06T10:41:11Z,True,2019-12-06T10:41:11Z,4e36059f6ab33839c8f96a1e230dcafecf17fa46,2,3,5d3f8073b26c77302c275126af4f26cf4db9d592 8cf63530395560311ff07fc94a49c05f308b19ac 153501c0ab383e3a2ec2cee86d232f7cf3889a33,,sync testj1939 with latest kernel UAPI,
linux-can/can-utils,172,2019-11-25T14:25:20Z,2019-12-06T12:55:33Z,True,2019-12-06T12:55:33Z,665d8699ebe728bf48e63e8ae58d2482db72f954,1,1,d75122f649a3b77a0a4be9f04349eea4f3f2cd4d,,add github actions,This enables a simple GitHub action  which just runs `make` and `make distcheck`. The results will be visible in the pull request view. As an exampe  see [the PR page](https://github.com/jluebbe/can-utils/pull/1) and [the checks page](https://github.com/jluebbe/can-utils/pull/1/checks) in my fork.
linux-can/can-utils,195,2020-02-14T15:17:59Z,2020-02-21T10:24:16Z,False,none,2a19936abbbf41ca790ffec703f017a3ead387e3,1,2,e25ef756920ca85b409269696b73282bda840784 531b93cf526bb4cfe06fea285259a1aa0320a74a,,Fix compiler warnings in cangen,Nothing serious  but I got two warnings when opening the file with my clang (YouCompleteMe) setup.
linux-can/can-utils,191,2020-01-04T13:29:08Z,2020-02-01T08:55:24Z,True,2020-02-01T08:55:24Z,8027b498cf3c7f535e61e1b0bb253e04078b5e75,1,1,a9985c76528f1bbc3144671139fd082d088a989c,,candump remove bridging functionality,The tool 'candump' is used to dump CAN traffic to stdout or logfile.  In early days where the in-kernel CAN gateway (can-gw) with the cangw tool was  not yet implemented the bridging functionality allowed to send received (and  filtered) CAN frames to another outgoing CAN interface.    As we now have can-gw and sending CAN frames from a 'reading tool' seems wrong  especially from the Unix philosophy "Write programs that do one thing and do  it well." this patch removes the obsolete functionality from candump.    Signed-off-by: Oliver Hartkopp <socketcan@hartkopp.net>
linux-can/can-utils,199,2020-04-20T08:09:26Z,2020-04-24T11:01:51Z,True,2020-04-24T11:01:51Z,6cdccbbafc882d7c29aa238058abfbf0f7ba6871,8,1,8106214b5503ce3e9648d506305445f54b6a7206,,Rename j to j1939 1,Using j*smthng* for j1939-related tools is not very good for 2 reasons:  1. j prefix is not very informative;  2. jcat name is used by journal cat tool from popular sleuthkit toolkit;  2`. jacd sounds very similar to jackd.  2``. Possible future name conflicts for new tools.    Thus I renamed j* to j1939\1 to deal with this issue.    Signed-off-by: Alexander GQ Gerasiov <gq@cs.msu.su>
linux-can/can-utils,69,2018-02-12T11:22:34Z,2020-04-27T07:16:14Z,True,2020-04-27T07:16:14Z,f91b537c01aa69f386ead70139a6f8886ad77a6d,27,29,b740fb7fab97a6dfba330e54390adfc5393c1833 69865c824719e050db27189fcbf73128af222cd6 f4a9e5b57deff103787bb050d8f34ad7bc594205 6db632531dc37522c35a6325802f2a9219655910 c56259ab33a16f30f5721cc7d19b21f0784f437a f503097a3861bd7be94b8b9a0a536ec1827813be 1127609357701ab7c5e14ed9128a861595a24fb9 65399166c1d6a74354b47e12d08901aef2c219bd 3e2c1d3cbd1fc6b7affb90bea8ec73a37a589dea 4568d4a180c09de87f5a77ae6aa6958505a0df2e 24af0488122c8cc6accd53b20ed29eb1fa3c5fda 4db63e4b55a06157cc0a0cb74e7cc84656012e62 1cf4d86874f074a9b900d87de6fdbbe2c8aae8a0 3d6a53550e58af41554bc0d723e68b641a8cbca1 9240ccfcb7a3502f1000a4f4d4732f6bc4b14bfb c61c9bc030eaa776d1cf452d1850df026c810ff0 89c66aba5ff9712cdeeb94880e260b3a985625a8 506252e9bcd0cba6e987facffcb1ba0c788e2b67 c1fdfb09fca0aab4b7e2a46098af3b11f13ba331 211c5cea4925364d09adda3eef237c8703454ecf 0155472ee06c5661241d8451dea2fd566741df7f 276688f2ad01c9cc900a164cdc29ab98dc4d66fd 8e6c11128d8f7db1b9bd15cd726d348a3804365e 09f6dc6d1771dbce90d759e8979c5279a20543ca 9e491bc5530c1798c05b8baeb3fab13e703dac05 d39cb046d18d9c919bc249d5d38bec3b40ce2931 d89b38de8a79ec9a0216ecd85081da307fabcf39 f638cdc79bfd1fcb4b62ad93d84ea65eeb0a3836 b43d1b4d274b4f2dd9355f9880ef9a028fca4b82,,Reformat output of help usage information,While packaging  can-utils for Debian I finally decided to generate manpages for the tools with help2man[1].    I've added something like this to Makefile:  ```  HELP2MAN = help2man  VERSION = git20180118    PROGRAMS = ...  MANPAGES = $(PROGRAMS:%=%.1)    %.1: %          $(HELP2MAN) --no-info --no-discard-stderr --help-option="-?" --version-string="$< $(VERSION)" ./$< > $@  ```  Real code could be found in debian/rules [2]    Then using help2man I generated bunch of manpages. Unfortunately most the tools outputs usage information if format not (very) suitable for help2man  thus I patched them a little bit.    1. Add short description in the beginning.  2. Move "Options:" and "Examples:" keywords to separate lines. (And fix exact wording where needed.)  3. Reformat options list (e.g. add doublespaces between option and its description).  4. Did some more trivial reformatting.    After this I've got not ugly looking manpages for most binaries.[3]    Since I do not know project's requirements for build scripts and build-dependencies  I did not add manpage's generation and installation to GNUmakefile.am but to Debian build scripts.    [1] https://www.gnu.org/software/help2man/  [2] https://salsa.debian.org/debian/can-utils/blob/master/debian/rules  [3] https://manpages.debian.org/unstable/can-utils/
linux-can/can-utils,88,2018-08-03T15:09:09Z,2020-04-30T09:12:25Z,False,none,c14d33fa1640c5eb4f5ab60a8004c14e920f8361,2,2,384ed8d9191df4f9518de890e3c81350f029fe7b 042038fb52a03cde44b2813a0046e668ca06215d,,Added 29bit ID support to cansniffer,Moved from CAN_BCM to CAN_RAW.  I have most of the functionality restored.  I just need to look into how CAN_RAW filtering works and add that ability.
linux-can/can-utils,59,2017-12-02T06:35:40Z,2017-12-06T09:15:01Z,True,2017-12-06T09:15:01Z,7b8607ca897407d9f1f1005c4e32a7b8ccea063e,1,3,fbebc6188185d1980ad2f6aec2f8190b25baa49f 319571796140c334d4289410d82f51b90ee201af eeb0dc2390de7c4170a3806d1d9a6a834a0f12aa,,Add option to read hardware timestamps ,I took the code from https://marc.info/?l=linux-can&m=138244457221323&w=2.    Unfortunately only the pcan driver provides hardware timestamps.    Note that I don't own a PCAN adapter  I tested this modification using a self made pcan compatible adapter  receiving one message every 400 us and the hardware timestamp sometimes jumps back or forward. The same self made adapter gives correct timestamps in Windows with the official driver and PCAN-view.
linux-can/can-utils,205,2020-05-26T21:12:18Z,2020-05-27T07:07:25Z,True,2020-05-27T07:07:25Z,8df3d1dd3fd1b5f94e8c6d4d21fcdba7ee96ff0c,1,1,255e36023337dc68d6c3e0542900ec4584ce428d,,Update j1939acd c,Minor change  as jacd had been renamed to j1939acd.
linux-can/can-utils,209,2020-05-28T13:07:23Z,2020-05-28T18:54:39Z,True,2020-05-28T18:54:39Z,43610bd6217cd8b38455ea9af6783fc04547929f,11,2,90f0cd0f3298eb65bcad0196e32fa12692944fca e86c363c105d1bfeac137a68dde090a3318e8058,,Fix warnings,See below my patches to fix the warnings. Let me know your thoughts.
linux-can/can-utils,211,2020-05-28T21:49:20Z,2020-05-29T04:54:48Z,False,none,dfc040504175d76124fd06af65452e2ae6c4b020,2,1,38d240fbb889e11beef76e50fe94c9153a5202be,,Added CAN message direction Tx or Rx for logging in candump and log ,Added Tx and Rx for can messages for candump log recording. Log2asc was appending Rx for all the recorded can messages and now it is updated to parse and append correct message direction. With this the can trace will be more useful for analysis.
linux-can/can-utils,208,2020-05-28T12:03:52Z,2020-05-29T15:58:25Z,True,2020-05-29T15:58:24Z,da42cf4bb58f69720af8ea9df67ab9d55939a927,1,1,f773edf6d3333714bb00558cc1aa3b17a8dfd119,,Android mk fix Android 10 build,Android now uses clang with Werror by default which prevents from  building.  Removing Werror for the current warnings.    Signed-off-by: Gary Bisson <gary.bisson@boundarydevices.com>
linux-can/can-utils,216,2020-05-30T13:29:38Z,2020-05-30T17:32:33Z,True,2020-05-30T17:32:33Z,eac93ced80f0ef2ec109f6f560af45069dcf795f,1,1,7a0b67064623873ed00f02a41df9041cb9821d21,,can j1939 kickstart md fix example in documentation,Incorrect value of the second databyte '23'
linux-can/can-utils,204,2020-05-21T15:57:48Z,2020-06-04T16:02:52Z,False,none,92b10b6f39dde879dd03edeff87de8ee68f8ae58,1,1,5c6ca259636ec8da849b4e0100429e4e556dd456,,Change path for canutils modules,Change path for canutils modules from system/bin to vendor/bin in case of building in AOSP tree
linux-can/can-utils,213,2020-05-29T17:01:08Z,2020-06-03T09:33:52Z,False,none,e107271437a53700300eddb707d406a8773c72a8,3,3,8ea410d34fd5c8f243ac1429556a0e54bea7bac9 3125b3a9757d8b6e7723e3c207f2afb717db2fb4 5e7261e0a7ae338cf1ee62aa0e82e19f48ff69d6,,Added CAN message direction Tx or Rx for log recording,Log file recording updated with CAN Message direction.  Changes Made:      1.Added CAN message direction (Tx or Rx) for log file recording in candump.      2.Log file converters log2asc and asc2log are updated to parse the message direction.    NOTE:  Log2asc was appending "Rx" for all the recorded can messages for conversion. With this the trace was not much helpful for analysis. So they are updated to reflect correct correct message direction.
linux-can/can-utils,214,2020-05-29T17:18:49Z,2020-06-12T18:08:19Z,True,2020-06-12T18:08:19Z,669fa79b21b1316523ce636263a283d12b3b4c1e,5,3,b932d46bde55af43009d5db55b3f2c04cd785b15 ccd4889ddce0cad2a896e24bfc5e4e5cdab294cc dbb7a3099db83126bf9934d377cc23e6fbb468a7,,J1939 clang fixes,Fix clang warnings in recently added j1939 files.  See Garys fixes here:  https://github.com/linux-can/can-utils/commit/43610bd6217cd8b38455ea9af6783fc04547929f  and here:  https://github.com/linux-can/can-utils/commit/46895a41c5241971f48bf936056de597d8190e29
linux-can/can-utils,215,2020-05-29T18:26:58Z,2020-06-04T16:02:11Z,True,2020-06-04T16:02:11Z,62f995601e5aa40d202956c9ac2f829880dcfd63,1,2,7549a35fc72b0cca0e1fdf36a844142daaa7c6ff 16fd6334c7bdc1ba2bfc3ef446e6f79debaefb25,,Android mk updates,The J1939 tools and asc2log was missing in the Android build.    Android.mk: Introduce LOCAL_VENDOR_MODULE to build in AOSP tree      Change path for canutils modules from system/bin to vendor/bin in the      case of building in AOSP tree.
linux-can/can-utils,203,2020-05-10T14:27:43Z,2020-05-10T14:45:22Z,True,2020-05-10T14:45:22Z,41c8ead6c0e4852e8504bd4533e2e53a0c71f206,3,11,43a3cca54deaaea4df888ebbf3b51c952b2ccc18 3c8197e4d1d09af1933b0cdf44f1832fba6a37cc df0b25c17e28f1be8b882634daee98eb4eb32ae6 ed9c64660873a91c8d4f83cc2cda40a9531feaa2 9a079942cd54a8620a5b00056a6627f8b6a437c5 ad9fc28f9e5fe1410bad9bc3e4db5ffc2dfa015c 3014d390b4b4d27d2626621c740372599bce061a 61dbb56ef694e3c668dd156d19652e806f610cd0 7729c046c59f1efdc04d755f519d4d26c73e069f 9cde2ebe8f908476ea864490f6ab4ee5c5caa4ca 3bb659d18db1572244fd898a26f4079f973a67d7,,Rework for CAN FD support and fixes for asc to log file conversion tools,
linux-can/can-utils,200,2020-04-29T17:16:00Z,2020-05-07T16:35:51Z,True,2020-05-07T16:35:51Z,c5cb7e1a7c0562dd52c295583d859c5920abbbb7,1,9,507ff82d81aec4fcfe90f0c965c8722aa276dda6 6f44582c19c8d7185dc1a4e2fd33874511f5d315 6d112a7209f23f094a3d77ae97e90ef0c9f2ba9d bd6ef44321323f6dbcf49016a606febbae015875 adf29573f4d1f21dac7ae6f8fd8a14ab4c5228a2 64e33bf9adf6c9087327a6e153eed9687723c3c9 ac55db508afeb2be7fa66bb173be50785cafcea8 ab2e8ffe0e49bb2289801cd61cffb5289c233d37 2a8867f3cb4804b978f7717755f432656ce41968,,29bit cansniffer,Rework of cansniffer to support EFF CAN frames with 29 bit CAN identifiers.    The patch set addresses issue https://github.com/linux-can/can-utils/issues/181
linux-can/can-utils,220,2020-06-12T12:40:40Z,2020-06-16T12:35:58Z,True,2020-06-16T12:35:58Z,e15b044a1d0a1e580812406131a7b8f52d86b3eb,1,2,1d3125bef2804e99bc3201102bbce73c7809c11b 1f5c9638abb18a77746a7c11ce219fc371118e1b,,J1939acd verbose,Fix bug:  https://github.com/linux-can/can-utils/issues/206
linux-can/can-utils,221,2020-06-17T08:55:57Z,2020-06-17T10:34:52Z,True,2020-06-17T10:34:52Z,6553ccaf06bd332033ea364b778d729e4baaf493,1,1,1b5d3adbe57663e1bb1ba19db7eb4f1cf7ff29c0,,Changed hardcoded hex number 0x0fed8 to j1939 h constant J1939_PGN_ADDRESS_COMMANDED ,Use include constant instead of hardcoded constant
linux-can/can-utils,223,2020-06-17T10:45:01Z,2020-06-17T10:51:32Z,True,2020-06-17T10:51:32Z,e9e1a02085c4b343914a6217d5010a3db495b7da,1,1,19b3ffe34bd117fb8c65c9db9928f27ee7ff402f,,j1939acd replace 0x0fed8 by constant J1939_PGN_ADDRESS_COMMANDED,Reported-by: josemic <josemic@users.noreply.github.com>  Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
linux-can/can-utils,224,2020-06-22T09:42:58Z,2020-06-29T16:18:18Z,True,2020-06-29T16:18:18Z,24b73044c53cac075bf862b327209ca9fed99000,1,8,d92adf68e8de385e23e7d931cd5d1c5b6919c13d 29605e331439834a7db1a1b028faa3e9fe2e0438 ff3d0e0d05ec26352ca7e82ea6917b2946a361ec aa5386f1cbd710df08a356e850de7583267d622a 645cd1b1ba91e40983592f078e88eda86dc30a22 e393697112e4c2c01a999c704d65b76858ec51ae d7f28a0ffe36f73fe08729202f9c49ca5cac1dd4 13ecaa6d7ee862bb32c6b4fcb0bfc5132044c150,,Canfdtest,Various `canfdtest` improvements.
linux-can/can-utils,227,2020-07-05T23:02:29Z,2020-07-06T06:47:36Z,True,2020-07-06T06:47:36Z,af531c3d52876ac86ecb29dd8d85a188a3171272,1,1,4e298355387b055104e095596ca2d7c789862255,,Update Android mk,Fixed typo in LOCAL_MODULE isotpsniffer
linux-can/can-utils,229,2020-07-30T21:22:03Z,2020-07-31T06:21:18Z,True,2020-07-31T06:21:18Z,bad90515f0a60fd042ff38990e5d3f038a3d6d9a,1,1,da87d595c52b21391158e49a8d86038e1160aa7b,,Update testj1939 c,When receiving multi chunk messages  only the first 8 are printed.    Simple coding mistake. Should print dat[i] instead of dat[j]
linux-can/can-utils,222,2020-06-17T09:07:01Z,2020-08-07T12:03:55Z,False,none,21cda8ceaa718c36e7fb06652c17d30c9d701ff9,1,1,bf3582c91674a476e5e83f9aad3803fd6def1a50,,Changed j1939acd help examples,Changed j1939acd help examples by removing duplicate example and adding one example showing optional interface parameter.
linux-can/can-utils,145,2019-07-09T09:31:20Z,2020-08-07T12:12:00Z,False,none,92142f40f95d1d878423bd7ccc56c87912fea442,12,1,609b2444faf85ed8f1b42a28c6a21f025e3f340c,,add j1939 tests,Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
linux-can/can-utils,142,2019-06-13T10:37:19Z,2020-08-07T12:16:32Z,False,none,4bf1d0dc279fef79ed27385d487ce02fffa911c2,1,1,d0502a39e490656d0891ff282825e9fba476645d,,j1939 Allows to receive own frame ,Need this patch after commit on kernel.org  :  dfa62204a6f5c8689431a21b23830a5929b373d1 j1939: socket: rework receive filter.    Signed-off-by: Arthur Guyader <arthur.guyader@iot.bzh>
linux-can/can-utils,231,2020-08-07T12:17:09Z,2020-08-07T12:23:47Z,True,2020-08-07T12:23:47Z,58dc257e11107c59df33f1e50084055238c24c5b,1,1,327587b2c822119d235a41b4e2f6d78bb2fb71f5,,j1939cat add broadcast support,Allow to use j1939cat to send and receive broadcast (TP.BAM) messages.    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
linux-can/can-utils,232,2020-08-07T13:03:01Z,2020-08-07T13:06:37Z,True,2020-08-07T13:06:37Z,ab23c6f7e77e34be515c1100c5fce22f029b6565,1,1,c912d6f8d528ae4a12bce1a4c81a634f2e7b23e1,,testj1939 print proper offset in the data damp,without this patch we will always print "0008" on each line    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
linux-can/can-utils,237,2020-08-20T07:31:04Z,2020-08-20T07:33:11Z,True,2020-08-20T07:33:11Z,e6dfcb773ebf44966a07c7cf2a424f1bb83ec418,1,1,c43a168c6889eeaf427c93d1399bbb31543e5167,,canfdtest fix frame consistency check,This patch fixes the issue reported in:    https://github.com/linux-can/can-utils/commit/d7f28a0ffe36f73fe08729202f9c49ca5cac1dd4  https://github.com/linux-can/can-utils/issues/236    Reported-by: https://github.com/ronitnvidia  Fixes: d7f28a0ffe36 ("canfdtest: can_echo_dut(): check received frame for consistency")  Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
linux-can/can-utils,225,2020-06-22T10:25:28Z,2020-08-07T11:53:49Z,True,2020-08-07T11:53:49Z,dec3c5eda1038256999310ed826c772a4baf31fb,4,5,0f9c69c193af29bea986efae917e4e24b4777724 b29a75d4c630764cc8d36e87d9bfd2a19c4e6530 57949154cce001cf9ab151af66c6023ac7a6fdd2 a5c049d37a8396438b20004f87831637d7a8391a 8e3c050b1c8537fbf8c8d91b62cccd0faf98448b,,Fix warnings,
linux-can/can-utils,230,2020-08-07T12:03:40Z,2020-08-07T12:10:30Z,True,2020-08-07T12:10:30Z,659e0acfe6f88ab048523db56d9718497fb35357,1,2,112421dc22872ebebf0088652d6714354054673d 88ad7e57551216ae5865210237eec9bf13dddb39,,j1939acd help text improvements,Picking up @josemic work https://github.com/linux-can/can-utils/pull/222
linux-can/can-utils,194,2020-02-09T13:45:47Z,2020-06-17T10:53:33Z,True,2020-06-17T10:53:33Z,063e361cc51836932f76c8bc11641f4855849fcc,1,1,506f6f30431dc31235725aa2943d844286429bf5,,canfdtest can_echo_gen initialize tx_frames with zero,This avoids having the padding in the struct can_fame contain bogus  values  which are interpreted by "candump -x" as CAN-FD BRS and ESI  values.    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
linux-can/can-utils,238,2020-08-21T05:38:55Z,2020-08-21T14:11:42Z,True,2020-08-21T14:11:42Z,ea844bdc5e575b1f2f631f8bed11f2f4f18fbd13,1,1,cacd809b5715d52a858afa91884357c1f2d392f3,,Document J1939 commands,Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
linux-can/can-utils,240,2020-09-24T09:15:34Z,2020-09-24T09:27:11Z,True,2020-09-24T09:27:11Z,e1f75da43334070db2186660aa8ece7b3a0391cc,1,2,73e421557faa40161700da5e8a7378f840889c35 435a59a3946aa975db15836b3d4b3b4942381519,,canfdtest remove trailing whitespace and print RX ed frame in case of RX before TX,
linux-can/can-utils,241,2020-09-25T13:27:21Z,2020-09-25T13:33:56Z,True,2020-09-25T13:33:56Z,dd8fb0b697ac500f9aa8e17cf887576a1dbb2748,1,1,7fb2585641f2cb78047b50421279e669bb2afce5,,travis fix indention,Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
linux-can/can-utils,239,2020-09-23T16:02:31Z,2020-09-25T13:36:53Z,False,none,bf632bdf4fd61589cda3abf52a1f898f24f64db5,1,3,f3e160619b16b82ef47647e9abb563f391b40ee7 bf39ac19ac88509bdbbf6030bbe3e6013cbb8a01 497bd19e08d1a76a68322427e17ede0852999eb8,,added script to run on power,Thanks for the code  its working good.  ## What do these changes do?  Added Architecture "ppc64le"  ## Are there changes in behavior for the user?  No
linux-can/can-utils,244,2020-09-29T07:07:37Z,2020-09-29T07:14:30Z,True,2020-09-29T07:14:30Z,485d8135459ec7e1bdc149c9554eccb6d43fd1a1,1,1,ce7f22928ddbf03e44cdea12e4040cbd1cc61879,,canfdtest bail out if trying to use non existing CAN interface,Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
linux-can/can-utils,246,2020-10-05T10:55:14Z,2020-10-05T14:15:09Z,True,2020-10-05T14:15:09Z,194959270f1f83393d0aba5c2aad349601d397f7,1,3,eaf3070816d3ef28aa12c66422b71d414c75017c 2ce8cc52385980b32941aa4b2552fac485c4e0bf 54935c2ece7aa8709a7eb40f00a833324c93675d,,Added tutorial how to compile kernel with can j1939 module,
linux-can/can-utils,247,2020-10-06T11:54:35Z,2020-10-06T13:33:57Z,True,2020-10-06T13:33:57Z,c27c61424ffa67d24753ce4ac58a60116700da18,1,12,eaf3070816d3ef28aa12c66422b71d414c75017c 2ce8cc52385980b32941aa4b2552fac485c4e0bf 54935c2ece7aa8709a7eb40f00a833324c93675d 7655e8af307293e4a64b9b4d6451e98bdce9f98a 1e2197b8573a12ce2bd51f8c0ded22455aafc22c 056cfca9aa7f33d7637bfc98fd61c0f04570f926 e9146850545788b7c8c71c1d6fd53549ca95725c e0c952d8c2843f8c6b83d824700184a94a2e6138 219ee0941e95c2ba6fa17cede93f23def860ae0d 2e424e7c57e5ea7247e0234bc0fc6a52dce437d3 173bc79e1d5f121f8dbf2996c25740ed33a148e6 d022c5de828409a9ba9c536b33e40e9e84639ab0,,can utils can j1939 install kernel module md better explanation for adding backports fixed typos and grammar,
linux-can/can-utils,248,2020-10-12T05:03:27Z,2020-10-12T06:12:06Z,True,2020-10-12T06:12:06Z,18573d1dd2ebadcb17b25ed10873e6804da02aa6,1,1,8d2ed4c959039abdcfeaa3fe1e70af0e75be8809,,j1939cat remove bzero,bzero is removed in POSIX 2008. malloc/bzero can also be replaced with  calloc.    Signed-off-by: Rosen Penev <rosenp@gmail.com>
linux-can/can-utils,249,2020-10-12T05:04:06Z,2020-10-12T06:48:34Z,True,2020-10-12T06:48:33Z,5a93509655148c0614defe22c38b9786abf8e4da,3,1,d7df79e6876bed9df9522255f9d24ad5a76b65ce,,convert usleep to nanosleep,usleep is removed in POSIX 2008.    Signed-off-by: Rosen Penev <rosenp@gmail.com>
linux-can/can-utils,250,2020-10-12T07:41:52Z,2020-10-13T06:44:49Z,True,2020-10-13T06:44:49Z,7759b00c581459dbb79ffed6cdb8b7e6419eab44,30,7,17a5fe602273e94d6622e0dfa47a67887c31f13d d5320d554edfcb359953418ff6bbd8afdb3d67b2 3e67b5cbd1d2e0921d0251ccf3830aa715ee21ac 33f3593436ea3eb4cc4c74b4a11538eb7be5a751 3e85fc5422536484b11742a7d82259fef90cb0fd b153fe3f3591c3320cb5ea7848f6ab94b3d1af2c 48bb69bc7bcb1b8ff6ad17a647c888034a56199b,,clang tidy fixes,
linux-can/can-utils,251,2020-10-13T06:49:17Z,2020-10-13T06:55:35Z,True,2020-10-13T06:55:35Z,bda4b0ad8c979250badd825e5902547df87fe1d5,4,1,f766174677adaaab6b4fc042d43d94c088b9f692,,custom if statement reordering,It makes more sense to return before hitting else.    Signed-off-by: Rosen Penev <rosenp@gmail.com>
linux-can/can-utils,252,2020-10-13T22:22:09Z,2020-10-14T11:28:20Z,True,2020-10-14T11:28:20Z,8c7cb6f0db5b73b12495df4e014a65f875738ca3,4,1,72a8a0b64b957a915258d02fa761e642d848a285,,change to 0 ,The former throws a pedantic warning.    Signed-off-by: Rosen Penev <rosenp@gmail.com>
linux-can/can-utils,253,2020-10-15T16:13:11Z,2020-10-15T16:35:13Z,True,2020-10-15T16:35:13Z,677f9ec26f3fd0fc3bc7eb462782d08b4077acee,1,1,f3cf4cdf88ba1361594c2615f30593f6b8038c4c,,Makefile fix indention,This patch fixes the indention  which was broken while renaming the j1939  tools.    Fixes: 8106214b5503 ("Rename j* to j1939\1")  Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
linux-can/can-utils,242,2020-09-25T13:35:01Z,2020-10-15T16:36:19Z,True,2020-10-15T16:36:19Z,93ef09d9b0d5fb0100d0f4ff5032fc71e885e7dc,1,2,b99f5400394f16ff9a8ba288984cc3d421052b8f b7ba7f32fc8e7487c835e41a7f17ad7e7703d33f,,travis add ppc64le support,
linux-can/can-utils,254,2020-10-19T11:50:56Z,2020-10-19T12:35:05Z,True,2020-10-19T12:35:05Z,cb5d2fd65309855940287c4bb6837fdc693f2db7,7,35,d8435a56afeb4f170c3d0a290c186003d3250143 c55d1813601d253ce792fcb3447e79f94a09bf6c fc3b0449a91ac115eb6bd3d15bd005e9751fe5b1 3794644caa13151679d49271e7a20d79d2efd566 ac8ae17727812b26ce7a753aa99b42dd1705ea0f 0c888d794280156ab056c09ca02905c81a00ae60 b3b501d92222ee91a37de742641a2f3e903169fa d8be4d8a4fdedcb4210bb4cf46ab9787f5c7160d bd3ea25fe1df68ecb74728f39efbd5bfc3e1b467 f4cec293dcfe38046fa07e1be91f5bc820214889 5fa35cbe2a36a877d796428f0ca74b369b7b19e8 c93d3a63c57be3f4ff883a8c1ece3248acd15e6a 6e3b123d5bda89fced739e74cad215aaca8f80d6 a16f8ed47152b0c3c4f4cb7a17ec7eaf68c4239c 4aaad290826ecb057c900771e08e82cdd67a7b83 fb5903f226e666f1a2737f9ce174b1ea2609997e 9841820ea06a5ed9e8e474253c15cd3fdc3fe4cf 2f125e44ce8de0ce7df2c7830c5c2a3df1f1ac6f c9bb22022d83c51b036c66c04f839bd6295d4328 7975f9859c3d3230adb3cbf48bb9a959a86037a0 985121aaad9f0e4b8ef7a8c9d7da59aceebdb77e 9567230494ea9aafa7d7eac33e73e775f0317a53 1e0fb39e8bd7a57833e5f8078929e28388b9b356 0bcb5d9c2c3ff0174836c2fcf9806b85d4ba21f0 ac9124c776d87b2215fc18a4bed43af4bddf7ce9 4d50109a69acc69d05d66d989e6dc5462f5a040e 68d5f87889080614bce4bcb911398d1e03c98e99 36fc75bdb7b3d42480baf57d4fa5a30136195f14 de5b9607dcb0dc9a503ccbe3ed79281a48b84748 d6991358332a8d567fd8c113eeff2e24f7bb4530 a1c20aeb45617aa75198be9f57dafcc0e0c73020 00134246c2a54f93456e5f30e6b3254ad3390b61 2afcbd2feecda6163c69b2a03c704726baa64ac9 a8131b799698e2840a2bb3df29e455fea3763c01 a726c2a57a6f947416d50cccdc970dc4e54d76c0,,can utils import PTX cansequence utility,The PTX flavour canutils have a useful utility for generating a sequence of CAN frames with an incrementing payload and checking such a sequence for missed and reordered frames.    Recently  it has helped finding a regression in the kernel pfifo_fast qdisc  which led to reordered frames.    To bring the utility to a greater audience  import the current state  including its history  into the linux-can set of utilities.    The supersedes @a3f's pull request https://github.com/linux-can/can-utils/pull/196.
linux-can/can-utils,255,2020-10-19T12:40:47Z,2020-10-19T13:00:42Z,True,2020-10-19T13:00:42Z,09466c2f1d0fe4dc1230b7f9c90f497c160a8c3f,1,1,eada3b4f5343441669034ee05d76c98aa7a1d3cc,,travis fix env for ppc64le,Fixes: b7ba7f32fc8e ("added script to run on power")  Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
linux-can/can-utils,256,2020-10-19T15:20:25Z,2020-10-19T18:52:07Z,True,2020-10-19T18:52:07Z,4573e852f97dec6c18748d1c0aeebd4213173af4,1,1,b71769824d82138d61691a25a7c76f4ddfe8fe17,,log2asc fix spelling,Fixes: 61dbb56ef694 ("log2asc: support DLC values in Classic CAN RTR frames")  Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
linux-can/can-utils,120,2019-01-10T20:22:19Z,2020-10-19T19:00:22Z,False,none,cd9651776df07f68739ef4dd0ae20912db30e023,1,1,b5362f7c59d93cd7e7d9e85170e5ceb5341200e2,,Check if can_update_spt succeeded,This fixes uninitialized value compiler warning for tseg1 and tseg2.
linux-can/can-utils,196,2020-02-14T15:21:00Z,2020-10-19T11:51:59Z,False,none,833a39ad06d31f62c4dbd61337235ec32044652d,7,2,f6676e58f4c177c11e27b3acb0529f20b4b89074 5d8248096e619e74e2bcfb71e92e1d92939dca17,,can utils import PTX cansequence utility,The [PTX flavour canutils] have a useful utility for generating a  sequence of CAN frames with an incrementing payload and checking such a  sequence for missed and reordered frames.    Recently  it has helped finding a [regression] in the kernel pfifo_fast  qdisc  which led to reordered frames.    To bring the utility to a greater audience  import the [current state]  of it into the linux-can set of utilities.    [PTX flavour canutils]: https://git.pengutronix.de/cgit/tools/canutils  [regression]: https://lore.kernel.org/netdev/661cc33a-5f65-2769-cc1a-65791cb4b131@pengutronix.de  [current state]: 207a476b5 ("cansequence: print error frames in hex")    Signed-off-by: Marc Kleine-Budde &lt;mkl@pengutronix.de&gt;  [afa: code by mkl  I removed --version and fixed an off by one in strncpy]  Signed-off-by: Ahmad Fatoum &lt;a.fatoum@pengutronix.de&gt;
linux-can/can-utils,258,2020-11-04T13:13:52Z,2020-11-04T13:57:45Z,True,2020-11-04T13:57:45Z,a6cac755b4b405b95f0d222211606ff317efcdb9,1,1,86bfa25f9d207de77ac493224e8d0cc3950b7f2d,,Android mk remove duplicated cansequence definition,Otherwise throwing the following error:  build/make/core/base_rules.mk:325: error: external/can-utils:  MODULE.TARGET.EXECUTABLES.cansequence already defined by  external/can-utils.    Fixes: a726c2a ("Merge branch 'cansequence' of  github.com:marckleinebudde/can-utils into master")    Signed-off-by: Gary Bisson <gary.bisson@boundarydevices.com>
linux-can/can-utils,259,2020-11-04T13:59:22Z,2020-11-04T16:08:53Z,True,2020-11-04T16:08:53Z,856d0a662a02dd2dc0b83a7ad1de9fd120e82c4b,1,1,ccfa3c8b00e45b1f57fdef2ce4e83cebb2993a18,,cansequence do_send remove unneeded cast,This patch fixes the following warning:    ```  cansequence.c:232:3: warning: expression result unused [-Wunused-value]   (unsigned char)frame.data[0]++;   ^              ~~~~~~~~~~~~~~~  ```  Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
linux-can/can-utils,261,2020-11-18T06:14:15Z,2020-11-18T07:22:32Z,True,2020-11-18T07:22:32Z,d0ad1689532703b48cc34368e8b8d6038fe059a2,1,1,c3348ed51ec2fe38cb551ab23b2c1e4d693f65fe,,add missing time h include,Needed for musl.
linux-can/can-utils,260,2020-11-11T18:31:57Z,2020-11-22T17:30:06Z,False,none,3b7f32956feee002195c4bbde560693553b87427,11,14,1845141208640e9d4cce10936b504607b2dd41a4 5960c19e6c65dc26a2a49dbb728c018d42860d4c e1761f8583b78a681bc42ef25a32f0f699cdbf4e 45b9a4812a2e56cb7dae82839c4368e348040ff5 0b6af299d1b92c76447ce24f31702efb8eda02fa a23eb24f9519629b001d7acdd0760acbb17f4eb4 fcc9a89c6eb6683b7b18e5a903a0b3608c5440d4 1e2c96e4943189997e261554aebe7d3ce4827732 ff11fe7ad749f92fb72778d2486a80724953de93 f567b75c6c1c10d23fa10a23816ccf9e30481244 76285153b9c5cfe06d3dbcc6272c6c50e5a3e35d eec76a74439c227bb0984e724617a132b855e21a 6ac0ad33ad02a6c2a718f6d3ea4b15e0f8c92162 9d0bb72bb6c9d6391303ecf6ffb666fe4259fddb,,can utils support len8_dlc for Classical CAN frames,This is the patch set that has been developed to support DLC values from 9 .. 15 for Classical CAN capable CAN adapters.
linux-can/can-utils,269,2020-12-06T06:31:42Z,2020-12-06T08:53:22Z,True,2020-12-06T08:53:22Z,51d675368d23d3d20e9c60fb15c0bfec54ffb5b2,1,1,333e631286c17d6817422b1cf838ddea376056be,,docs fix simple typo cought caught,There is a small typo in canlogserver.c.  Should read `caught` rather than `cought`.   Semi-automated pull request generated by https://github.com/timgates42/meticulous/blob/master/docs/NOTE.md
linux-can/can-utils,264,2020-12-03T16:49:22Z,2020-12-06T08:54:33Z,True,2020-12-06T08:54:33Z,aa6411075fe61fffd8673f6613e77bf0bcce424e,1,1,639498bc801a22f7fa2e58681eee111eeca87db1,,candump epoll_wait instead of select runs faster and better keeps packet order,Using epoll_wait() instead of select() gives higher performance for listening on multiple interfaces. Additionally  the read order has a higher chance to resemble the true temporal order. select() gives implicit priority to the lower index socket.
linux-can/can-utils,270,2020-12-06T09:01:37Z,2020-12-06T09:22:15Z,True,2020-12-06T09:22:15Z,33de12680aa97df737e0d45059639604e15a15c0,1,3,15f3a2e385e77faff0ac6837f0071fae3c467bfb 305b2e8b796de3d041fad11230a702e585ecc97f bfaa44fa91a7f1548868b0afb36df9329e6866ba,,Candump cleanups,
linux-can/can-utils,266,2020-12-04T22:59:40Z,2020-12-06T10:37:35Z,False,none,e68c6ef175daded19491a6b6d3ff1a769f421dd3,1,1,523fed73acdf9596d94c0a283342e04ebc68d02e,,Enable all timestamp options to be used in log format files and stdout,resolves #265 
linux-can/can-utils,271,2020-12-08T07:01:02Z,2020-12-08T20:07:44Z,False,none,95432ebb4435c8d547745e6c1bfa2682e56ecc84,1,1,58f606f5dc47c20b5df194ce8bc4a89ce90a18ea,,Enable zero relative timestamps to be used in log files,  resolve #265 
linux-can/can-utils,243,2020-09-25T13:53:31Z,2021-02-10T16:26:31Z,False,none,0009c7d63e36e08491342bcc5f30c16d681ffba1,1,1,35c9175b52f04e67d0436e99eb02a7bfcfd09ce2,,travis add archs to build matrix,Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
linux-can/can-utils,277,2021-02-10T16:28:01Z,2021-02-10T21:15:17Z,True,2021-02-10T21:15:17Z,e8c90ddff934f1c74e50cfe37f704a27367a2cec,1,6,84bc52d6ffa977230efa852f30f05d176405fc4c dd315316d8a75f043d7c9eb90a9a0ea92a5dedf2 3fc6c05ce244929b645ffd89d4e33a3511f6880d d72438243a3b42aa529208b682b27b4969fb2052 ef8cea79f0546a3df973a768cc8d97d22ef5c935 913311fc15a222de1e4754bff84afcd9e64408e2,,can calc bitming cleanups add mcp251xfd and add decoding of low level bit timing parameters into bitrate,
linux-can/can-utils,276,2021-02-10T16:01:04Z,2021-02-10T20:16:30Z,True,2021-02-10T20:16:30Z,fe07dc58371e84a6dc59aa5e9a7bec9b23d9ed79,1,1,9378b91c5094d050ac77ba4b07eb958d46832259,,cangen add possibility to generate random ID odd even,Use this for stress testing  when sending with two CAN controllers on the same CAN bus to avoid broken CAN frames due sending the same CAN-id.  
linux-can/can-utils,278,2021-02-13T22:18:24Z,2021-02-13T22:45:57Z,True,2021-02-13T22:45:57Z,cafc4bf748d43f82c05dbea61e0455b7eca671e7,15,2,66de96d3379de478a8e1fee58cb9c9d80817d4bb 1792aebd8bd1eeeb5d3b4e4faafeabd6b19eb1bb,,mcp251xfd dump add tool to decode chip and driver state of mcp251xfd,It works on dev coredump data generated by the mcp251xfd driver in case of failures  as well as on regmap based register dumps.  
linux-can/can-utils,283,2021-03-22T23:22:27Z,2021-03-23T07:11:48Z,True,2021-03-23T07:11:48Z,d2f5b3dbe04c6c3ba5a273a3b006963c07eb926b,1,3,890dcc4735c50e8314a55674b6d66de2829591cd b1312a03f02e287c8caf8348fc363e5662ccf337 f11949b7d8f9f42e7049bfc3388c81db3699c468,,Clarify that the mcp251x uses half of the external OSC clock as the base clock,This comment would have saved me a lot of time  when I was trying to figure out why the generated BRP in the table was twice of what it should be according to the datasheet.    I'm using a device with a 8 MHz crystal  thus the version of this tool that gets installed in Ubuntu 20.04 does not have the following commit: https://github.com/linux-can/can-utils/commit/3fc6c05ce244929b645ffd89d4e33a3511f6880d  which made it pretty confusing.
linux-can/can-utils,285,2021-04-14T15:57:04Z,2021-04-14T16:14:23Z,True,2021-04-14T16:14:23Z,5116452e6d808c6b4ef231bea848207e36f8a2d2,1,1,bdf3e96ef9956d1e0026cecf4e31e6de41053a63,,Update description for candump,Hello everyone      This may sound silly  but I just spent two hours debugging why this `-T` option won't terminate the process after specified timeout. Later I figured out it only terminates if nothing was received. A small change  but probably it saves some time to someone else.
linux-can/can-utils,286,2021-04-16T12:23:39Z,2021-04-16T12:30:50Z,True,2021-04-16T12:30:50Z,9c2de072a076236410f6c5a112bd7b9075a9e77d,1,1,4445e201997b3ba1ee151a44d45debce0542af82,,asc2log Correct usec overflow handling,This commit fixes this sort of lines  ```  (1614188635.1000000) can1 4A8##28001E9A318ACC0 R  ```  to become this  ```  (1614188636.000000) can1 4A8##28001E9A318ACC0 R  ```    Canplayer was barfing about the incorrect lines.
linux-can/can-utils,293,2021-05-06T13:58:40Z,2021-05-06T13:59:52Z,True,2021-05-06T13:59:52Z,f8a2cf01fad386e9bbba9f0f35f0bc1d084d2b6b,2,4,4b94546cf9f248a60f75e2a9fd7899a6048ffa3d fd6829eb4fc9759d7ce42758854dc5f067d99089 70eda640d592be7beb5a1e054630a53b78331ebf b88a64e9fc413cf346c5c3e3b93f1a1867453906,,Misc cleanups,
linux-can/can-utils,295,2021-05-12T05:27:31Z,2021-05-12T05:53:11Z,False,none,b83e5f070e5659f489e3467585adb97e0ace865e,2,2,1f9e16bf34d13f3b6e215f45d5558f03a68e2c0a 5eaaeb66f2050637ad126b02b4f7a5b840343373,,add test,add test
linux-can/can-utils,290,2021-05-02T13:16:43Z,2021-05-14T08:16:31Z,False,none,bb999362c36c3c62c3a21d29ea50388a285baf96,1,6,b13cf2cd48c03e96cc179d3c3df9d559c489f439 780b4f4ad8002ce839013f3bc6536caf30125902 b7e27b974923c73f47ba304e7fe1b80537b2d467 39ebc30e398dafd2225c8cda4b1b5188aa328ba4 449c0b5658f18d8a31905bbfc093f37f3aab9bab 4fbaa3acdfd94632c63206c06078ff5a5a505608,,Circular buffer file output,Circular buffer implementation as per #289.    Sometimes the need arises to log accidents like a dash-cam. High bandwidth CANbus logging becomes expensive from storage a standpoint especially on embedded devices.    This feature allows for ring-buffer type logging where a fixed number of "most recent" entries is constantly on file and ready to be stored in the event of a failure for forensic analysis.    This implementation relies heavily on the existing `log` code-path and as such introduces a (perhaps undesirable) coupling. However  it also avoided trying to make the actual `log` output code-path (line 832) be conditional  and instead outputs in a dedicated code block on line 807.
linux-can/can-utils,297,2021-05-28T09:58:30Z,2021-05-28T10:22:59Z,True,2021-05-28T10:22:59Z,a70801f1ce5c39b45f2b4329578f339243e81522,1,1,1b4e317083dd1ab43be997690ddabfcb43eebfbd,,candump fix epoll_wait returning 1 errno EINTR,-EINTR is not an error  just restart the syscall.    Fixes: 639498bc801a ("candump: use epoll_wait() instead of select()")  Link: https://github.com/linux-can/can-utils/issues/296  Reported-by: Joakim Zhang <qiangqing.zhang@nxp.com>  Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
linux-can/can-utils,294,2021-05-08T23:09:58Z,2021-06-03T13:22:06Z,False,none,3f84908c2f23d5611d99a17f0ba273aa2679b3fa,4,3,899f0dcb792808caa8f0597b5e8d654f98ee83ef 899e63284eb947de8512754ac2c7c8cae4e8b2ad 4cda83153683d77b4d9e8f789f953abc83af5d97,,Add CANFD_FDF flag,First commit was taken as is from @hartkopp https://lore.kernel.org/linux-can/20170411134343.3089-1-socketcan@hartkopp.net/ so he was marked as author.    Second commit is the result of agreement on having flags for both CAN and CAN-FD as per https://lore.kernel.org/linux-can/20210503100810.cacbmdfmpjipgoka@pengutronix.de/
linux-can/can-utils,300,2021-06-06T17:46:41Z,2021-06-07T14:14:23Z,True,2021-06-07T14:14:23Z,e9dd86fa5c4e6ecdfc34e487634a32f19e5c4d63,1,1,aaa7fd215f4ecde45d2047d8ebfaed3c255d66d7,,canplayer add interactive single step frame processing mode,Wait for ENTER key to process next CAN frame from the log file.    As the new line is printed each time this approach doesn't win a  design price. But this feature is very uncommon and setting the  terminal into some raw mode to get the raw keyboard hits would  introduce a big code overhead to handle e.g. CTRL-C signals which  is a vital functionality for canplayer.    Link: https://github.com/linux-can/can-utils/issues/280  Suggested-by: https://github.com/nico0481  Signed-off-by: Oliver Hartkopp <socketcan@hartkopp.net>
linux-can/can-utils,302,2021-06-24T12:17:38Z,2021-06-24T12:34:07Z,True,2021-06-24T12:34:07Z,c1aae77740ebce8edb11f50042b4108e5704b657,1,3,e19b5abb5c13c803468f31189bc556e5130ea31e e9a298ec21aefca6e8a174e94c4adf23b87a4aa0 37f316ebc3c9b8571d1d57d2e338956a093d517c,, v2 more chips bittiming,This request adds can-calc-bittiming support for    * STM32 bxCAN  * C_CAN  * MCAN >=v3.1
linux-can/can-utils,301,2021-06-24T10:53:29Z,2021-06-24T13:03:07Z,True,2021-06-24T13:03:07Z,3615bac17e539a06835dcb90855eae844ee18053,3,2,e319afb10f0a42ca7dafa40281d1613eb1d24ef3 6382765bf6aea0aef6df2329954c85c0758f5097,, V2 canbusload with FD support,This MR adds (limited) CANFD support to the canbusload program.    1. set the socket in CANFD mode to receive all (up to 64) databytes  2. count the databits for BRS frames against the data bittiming
linux-can/can-utils,201,2020-05-04T09:34:25Z,2020-05-05T08:14:59Z,True,2020-05-05T08:14:59Z,729e346d31aa2c1a68043798804414c79f290015,1,2,e03fd06abe3742fff4fea32ecf6c9b417aebccc8 4acc74cbcf888f3a63d310e411a4c190617cfca4,,cangen c added c option for bursty output ,I had an idea to try and reproduce a problem I have with some bursty traffic and RX overrun erors. The bursty traffic is trying to mimic bursts of messages that might happen on CANOpen when multiple nodes sends their PDO messages as a reponse to a SYNC message.    Does this make sense to include in the cangen tool? If so here is a pull request.    Specify -c 100 to have 100 packets sent in a burst before gap.    To have a burst of 100 message with a gap of 200 milliseconds between each burst specify: -g 200 -c 100.
linux-can/can-utils,311,2021-08-20T11:48:26Z,2021-08-20T11:56:50Z,True,2021-08-20T11:56:50Z,9f269db0701e56a439e7829a6681e5dde0bd6351,2,2,0107f07d836040fe5d5070fddd72a73d419cf612 cc155d2f63dab935b8189125a3ae42ef13c75054,,J1939 rx state support,Latest net-next kernel is already supporting RX notifications. This patches are extending j1939cat to make use of this new UAPI.
linux-can/can-utils,315,2021-10-13T13:24:05Z,2021-10-13T13:25:26Z,True,2021-10-13T13:25:26Z,4236614ab6b13d810acc637b5849a789475fa48b,1,1,e03f3e1049d0605ebffacc4146338ae0ed0dee2a,,can calc bit timing can_fixup_bittiming change type of tseg1 and alltseg to unsigned int,All timing calculation is done with unsigned integers  so change type  of tseg1 and alltseg to unsigned int  too.    Link: https://lore.kernel.org/all/20211013130653.1513627-1-mkl@pengutronix.de  Link: https://github.com/linux-can/can-utils/pull/314  Reported-by: Gary Bisson <bisson.gary@gmail.com>  Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
linux-can/can-utils,314,2021-09-24T12:33:33Z,2021-10-13T14:48:40Z,True,2021-10-13T14:48:40Z,5a3d1703d28dcc349accded0ad302040877bd593,1,1,57cc73d413c205a0c16c824b8cb8f81a74e4ca46,,j1939cat fix comparison signs issue,Hi   It's been a long time ;) I tried building can-utils this time for Android 11 and found another batch of warnings below:  ```  external/can-utils/j1939cat.c:270:5: error: format specifies type 'unsigned long long' but the argument has type 'uint64_t' (aka 'unsigned long') [-Werror -Wformat]                                  stats->src_name  stats->dst_name);                                  ^~~~~~~~~~~~~~~  external/can-utils/j1939cat.c:270:22: error: format specifies type 'unsigned long long' but the argument has type 'uint64_t' (aka 'unsigned long') [-Werror -Wformat]                                  stats->src_name  stats->dst_name);                                                   ^~~~~~~~~~~~~~~  external/can-utils/j1939cat.c:276:20: error: comparison of integers of different signs: 'uint32_t' (aka 'unsigned int') and 'int32_t' (aka 'int') [-Werror -Wsign-compare]                          if (stats->send <= priv->last_dpo && priv->last_dpo != -1)                              ~~~~~~~~~~~ ^  ~~~~~~~~~~~~~~  external/can-utils/can-calc-bit-timing.c:705:12: error: comparison of integers of different signs: 'int' and 'const __u32' (aka 'const unsigned int') [-Werror -Wsign-compare]              tseg1 < btc->tseg1_min || tseg1 > btc->tseg1_max ||              ~~~~~ ^ ~~~~~~~~~~~~~~  external/can-utils/can-calc-bit-timing.c:705:38: error: comparison of integers of different signs: 'int' and 'const __u32' (aka 'const unsigned int') [-Werror -Wsign-compare]              tseg1 < btc->tseg1_min || tseg1 > btc->tseg1_max ||                                        ~~~~~ ^ ~~~~~~~~~~~~~~  ```    Sorry I didn't have time to investigate them further so I offer this PR as a workaround to unlock people who want to build with clang. But I won't be offended if you'd prefer to have actual fixes rather than this.    Let me know if you have any questions.    Gary
linux-can/can-utils,317,2021-10-19T10:34:44Z,2021-10-19T13:26:55Z,False,none,ca6bcb988fc86e32313ac8897d211d93a35e6fe1,1,2,957f5e53fd5acde787272c0f7ecee87084fa8639 dd2dc0b8d2ec2f4bf1f7a69f1a91c152d9f5c6fe,,canfdtest enables program use alongside existing CAN bus traffic ,Enables use of this program alongside existing CAN bus traffic     -i / -o select CAN IDs for ping / pong  -x filters out other messages
linux-can/can-utils,316,2021-10-17T15:47:09Z,2021-10-19T06:43:20Z,True,2021-10-19T06:43:20Z,02e8b1ff39c8acb18740afff8b91ade1c0b98423,2,5,c36bdc743f7d5c405053625d5c0f8cab31d5bffd d9368a6003ad37785b60b7488abe25ab90da581f 93a6cd6dfbd8ba4c6734d5eb2ddc5cd91e78064a 8bf57429fc6dc8987036502e6c58e5fc4ef7e0f0 9fd2b2e617f9e0f248ae2195b0205885bcfbd0e3,,cansniffer fix detection of invalid provided CAN interface refacs,Dear can-utils Community!    Please  have a look at my cansniffer commits. Feel free to drop them  or consider them for upstream merge  if you can see any use in it. Anyway feedback is highly appreciated!    Mainly:  - Some condition/indention unwindings  simplification of logic type of refacs  - Replacement of return / exit 1/0 by exit() to EXIT_SUCCESS and EXIT_FAILURE  respectively  - I noticed cansniffer provided with an invalid interface also starts and waits forever. I understood this as a bug  - "make clean" or "make distclean" did not clean all *.o files    The commits should be organized a bit to allow for cherry-picking.
linux-can/can-utils,319,2021-10-21T09:22:58Z,2021-10-21T09:24:12Z,True,2021-10-21T09:24:12Z,607b643e0fc311f058b298d0ffb2efdf9468c4f2,1,1,eb0eb7889623491ef988a4d754094034ce948eff,,j1939cat properly fix printf format string to work both on 32 and 64 bit systems,Fixes: 7b8457ce9f79 ("j1939cat: fix long long unsigned int warning in x_name printf")  Fixes: cc155d2f63da ("j1939cat: make use of new RX UAPI")  Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
linux-can/can-utils,318,2021-10-19T13:26:27Z,2021-10-25T13:33:09Z,True,2021-10-25T13:33:09Z,ab9bd4f287ba9782f18836c7a56bf0af479f21aa,1,1,2dde06801abc22be0e617525170783d8d9de7ecc,,canfdtest enables program use alongside existing CAN bus traffic,This change enables the use of this app alongside the traffic  typically found on a CAN bus.
linux-can/can-utils,320,2021-11-14T12:40:23Z,2021-11-14T12:40:31Z,False,none,736dd951ab55b5a6f4ef832652eafbb4bf8bdd2e,1,1,d21a7e03e10fbd826b9fd6346f27d63c1a91599b,,Create codeql analysis yml,none
linux-can/can-utils,325,2021-12-16T02:01:08Z,2021-12-16T09:05:09Z,True,2021-12-16T09:05:09Z,6bd7ced052080998b18ce04dac895a4011a05ffa,1,1,7dd714907b3a90eb9e8a30cf049cfeb1f602ff4f,,mcp251xfd add missing libgen h header,Needed for the basename() function under musl.
linux-can/can-utils,327,2021-12-16T02:08:21Z,2021-12-16T09:04:04Z,True,2021-12-16T09:04:04Z,9ca68a12c799c7d37db7ed84d9954a943963c94d,1,1,eb9cfac9543b1d0e38164e3bcd30086c840a106c,,use PRIx64,This is the proper specifier for uint64_t.
