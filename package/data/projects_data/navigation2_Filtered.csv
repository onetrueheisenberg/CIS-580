Project,PNumber,CreatedAt,ClosedAt,isMerged,MergedAt,MergedCommit,nFiles,nCommits,Commits,Labels,Title,Body
ros-planning/navigation2,86,2018-09-14T23:30:55Z,2018-09-17T20:01:30Z,True,2018-09-17T20:01:30Z,964456f95a8852a4c705144e35067c5311127ea3,62,2,49b21679835d2b50707fa9f5d13c248f596d1881 aeccc47ca3aa6552c9c1bd0e9cee382798010b16,,Add Costmap_2d from ROS1 navstack to port from in smaller PRs,We talked before about a different approach to merging our large code ports (this is already 10k+ lines) into master. This PR would simply merge the orginal (melodic) ros1 navigation stack code of the costmap_2d package into master (with COLCON_IGNORE so it doesn't build). Our goal would be to make smaller PR edits as we port parts of the code. We could make better use of labels to note when it is build-ready.
ros-planning/navigation2,31,2018-08-24T23:12:56Z,2018-09-21T16:24:54Z,True,2018-09-21T16:24:54Z,e57809b3233ec646c457e9764be3d01b4c467335,27,36,f23b0b13924c24c1a1376bf5d0bde302897b2f2b 282a6d59c853f9d789fc998676293bf0532a897c 0efb49bc3067c3ab96f2f6fb4f1883d271ff7335 b9e12e8b8612868e9905eacc028247ac801a2b1d 4a0e97f8838202a1efb6dcbd59333ee0f85c4d88 67763bed865b37f22dc3fa29a56e0c0234221e1f 68084b215a0531ce02d570d8fcaf4c8716b89ff0 917374308f3b48ecab099c29ba284995f96cf16f 1fe730a70a74a6e9af0f40d2e027b70e0707d245 832b1c93a306e267495f9ad95d0a7ba5c3cd3333 32ff9bd74d56f1fe43b2cb93b7be56bd3da50196 33890475661b48a970e7a0ddc6e48cf625c84e60 4394c5dcd3342ca668dc989aac728abce55b7c42 86941a384c26788f7289bda3d9e0c0f0e151da4d f3dda6d5ad05365bce931701798d25d1a7952901 6f5cd791a3228c0b2f476a7c9e1112b764780545 835042b60ddf7c8c2f446d0971986ad9f5296a33 ede47eb81e91366dcd9384f73c041251375cc9b0 b258dd05d07acfa6a4795b74a0298bf201deaf28 c6f970ccdf11e9ed4dd56db61f8ad7871ae54467 7d042e818945729c07bdef8c3fb9f32c816d2880 7ca19e2a6d30375a42deab9506c3232adfafeea9 397380be4bca8d6a6290cb458176f448bbd3c6d0 629904ba85ffc97315ca5e785706b10676c216ae 12a0ee2c221a16986fd30e92d67e13d2c95d72ae c439b6beb6fb974bb08b7349b0f10a64cb19a295 b28ea55a34ca0d17908956d46feaf250fd76da48 cf7d4617fad41bc9a7cfd39ecc968beaa0865829 53fad594bc6fa2b26974930750e0267540db3a5c 3e57e5ee05aae69da7c6ed95701b2269380aef63 6524297b1de3b415997842bff983d783a0f52b2e 5263a9dec8636c3cfd797da3fc5500d39107ee60 81fb42c93d6b8ff8449fced31fd16566a6089bde b836950f0ef452100902a278e20f2481be7ea97d dbdb39d745de03032bcd01e23530ffb61c1cc7b7 2ade04ed31498ca1f2a1b5fab434da23edbc2b67,,Refactored Map Server,This is a refactored map server from ROS Navigation. It provides machinery for an extensible framework for loading map files into available map representations (currently just nav_msgs/msg/OccupancyGrid) and provide as services/topics.
ros-planning/navigation2,95,2018-09-24T16:40:43Z,2018-09-25T23:33:24Z,True,2018-09-25T23:33:24Z,f0357815c30c108e8b39d987714af17a734717c1,1,3,c7806682d871e7dc51866a2557f23528243db47e d4c9aa5dc695ac91fa69c2598e512c15c23e04aa 6af648ce8a628db9a6aba82de7e1e79622515650,enhancement,Add Travis CI ability,Add Travis CI capability by adding a .travis.yml file
ros-planning/navigation2,106,2018-09-27T00:42:17Z,2018-09-27T16:28:43Z,True,2018-09-27T16:28:43Z,24790bd786c0c0f28828bf5a1d88425f6ae25365,62,1,31f17148f918eead8a7512285f04ceb97bce48e1,,Moving costmap_2d package up to libs ,Costmap_2d needs to move up to libs/ directory in order to compile
ros-planning/navigation2,108,2018-09-27T16:30:34Z,2018-09-27T21:03:10Z,True,2018-09-27T21:03:10Z,6271cb8d9b8e983423bc2fb3db57e5a2f9f913d4,26,1,551a1b0001117f85802ff3bfe9e9b5362332a6d7,,Put base costmap_2d on melodic devel branch ,Move the base costmap_2d package in repo onto the melodic-devel branch
ros-planning/navigation2,113,2018-09-27T21:01:53Z,2018-09-29T09:53:07Z,True,2018-09-29T09:53:07Z,0c8a7eb9f4687dab217cde9ddef3912acb4833eb,37,3,e98840c621e44a5bdca6d26cf5efed64a3d01429 5d1b6a08758c1adc8a767f88afba6c6f78dce31a c714cf04ade0719a4e27f091490faa994e72b97e,,Initial Costmap_2d port,This initial port of costmap_2d compiles successfully. There still remain many TODO which are documented throughout the code. I'll file issues for these TODO and remaining work.
ros-planning/navigation2,100,2018-09-26T14:41:07Z,2018-09-27T21:38:52Z,True,2018-09-27T21:38:52Z,a37ace46adb693f4e5a44c808ff2031da88a295a,28,14,b2596b13d11d8386ef81ac605423b966ce2d701f 915efcac976ee9faed007d2e27dac35397ce15e7 121ac8d7e9fe80447683acb8ee7688d01b97ef9a 28f7a51d2ab74dbd098062eb0f7755e7ecf85372 f5ca980fd2c7517fe8bae4161bdf0999d8eb83d3 e811a33b2c0a92c06fd36e5ce82db52258f3bbb4 129255939748d3a001c86b6d4e1a58fc8844456b b83998e90e8110602068d898cc3ce4c47f0b35f2 72336db635ec5bd75925c8a93344d828f41a6464 7ea05ba0ad944cc554162231094ba8fc85975bd1 94353a5f509cac7ce0d356ed78bffe4dda018b4c abced0e81c1213aa1567340913cfda40814d6462 85a7658b8bb33093950b7fba879d4e797950d192 8ca0dd24825772d08c4014f85c2f46e92bcc0eb9,,Integrate planning tests,Integrate Carlos' planner tests.
ros-planning/navigation2,136,2018-10-03T16:25:23Z,2018-10-03T19:57:49Z,True,2018-10-03T19:57:49Z,350533e5696c1250ea4fe63d0ddf78188a8afa7e,31,12,7e9ba73e2838ca31b6f7e5ad50eda97e7d9b3f2d b13167973d6c39dd78732f39cad22a5cc043c0dd 4f63212017e5e9846a594bda04443f76cca508b1 c179d9b97ca5c91722439d943621a8ad9af0ec82 eab272526a2379eb4f8d38f20cc49cae5a0edf2d accfecff7c62c9a55d880ac6e413f2b815a8c052 013067a8936f5dfe68f8799a976939dc09e35086 ebe726edee908ea085de7c3dde9a46c5e76f8427 ddbee57f03259eae609bc61cb1367ea0f442f765 42ec5735e8d8acf4c4a300509ca8a422f00865d1 f683cf17f42aea46c1e8290bd7b24152ed41c019 1a87996eabca5869ac5063574869ce9ea0ee5ade,,Subsystem integration,Some changes as a result of integrating the various modules into a working system. Also added a service client template class to common up some duplicate code. Added some initial launch-related files  but this still needs work.
ros-planning/navigation2,107,2018-09-27T01:43:51Z,2018-10-10T15:57:49Z,True,2018-10-10T15:57:49Z,ac932ea443ad1b3cd5e769aecb3c768baeb49359,387,32,f270f3972fda1f635224c3fa965122184dbf2757 1aa251546ac811707346220f44d89e4bfe6bc2d0 753acc0b8c2ce258fa43f8629c777fbcb2af2d9d dee5d824adff73912fda962160d42ff2f7eb0fc1 f73b0893c611db8d8b93d1b811a14aa06871957e 9e3929006f3f9f36402b210906dd663f639acacd 83b48c10da1cfcfccfa41a96dff6d09e92789bb9 a6ff72a3d975c82db15949b965b7a0e075201502 53e9eeed3f1195b1bb133901f0d061182219659d a9c58cd4922ca5e6e8df935323295df3000fffda 6956dc8a4e1700ca3a53fd1445da7bb5e5253775 e90fdf22a496ab813ee2843b5c2c9192d31dc760 387fe465678b0f3cc3f8dd345d144c02e9fad27b 359641fe2337cc40b495df8185f882b630df7e06 e75658acd7687b3ed9cdd7ee9eb7ed800d028f06 4414050e87b9592e9a4003122345e20a6f38a84e 17746928f50dc9819e15b1594abd4093a28e380f d764d250a83b39b13764c7be5d7e8aeaa42c7ed6 b8a83628ce594d841ad0c28756709725ce4e3a17 653ee5373d5e23edd4d6cb0cd97b1c09730499fe 8f7f3d0036b692632aae07dfc46a67aad2197ed1 5c9bc6bb3c612740e1ed86601e7c383dec2bb2ae 9c0962060c7ac225bc1bc8947e11bc4b3a08f313 c1fa056f25506deae384cd9bf9a244bd10d969ec 719c622297b70be24bb605a89793569a86fc42ce 6ea52aa2f2f53ab357696416f4fb531644c33221 da3cafe123815c92652f942536166becb04d74d3 2d9cbdceef5106d6fd16b64d317c53750c798664 6636b0f4f78d313272e3131d7294fd7043e3ec9a 3f8e650b65dcfcbca899b143d7a7acb1ee5304e2 c76f278dc0f952a1a937a6103bc4ee8528ded9e7 bc168a20ce6341808aebacea9957e5ab7e2e3b82,,Metapackage Reorg build script updates,Addressing #78 and #35 and #135     - Adding a proper metapackage to the repository   - bringup package  - DWB planner is as a placeholder  in a nav2_controller metapackage until I think of a better way to handle this  - Reorganizing packages to exist in the root directory in accordance to ROS conventions  - Changing build scripts and documentation to not build the workspace in the package repository (which would make it impossible to build other things in the same workspace which is a necessity) -- now it builds in a `navigation2_ws` workspace. initial_ros_setup and build_all scripts updated with docs  - Fixing some tab -> space conversion issues  - merging the msgs packages - it is standard for a metapackage to contain 1 package for messages. It made the list of packages too long otherwise and most of those packages were completely empty anyhow. We shouldnt need 7 msgs packages for 5 messages and 1 service (where most of those are repeats from `nav_msgs` anyhow)      Notes for future work based on what I looked into:  - Many of the messages are either near identical or identical to a `nav_msgs` counterpart. Is there a reason for this? The `Path` message is only `geometry_msgs/Pose` and not `geometry_msgs/PoseStamped` like in `nav_msgs`. That Stamp is really important for those of us that create custom planner/controllers.  -   Build script function `download_navstack()` hard-codes the ros-planning repo  in another PR I could change this to be a flag to use a fork instead - which would be useful for those of us without push permissions without having to add a remote.
ros-planning/navigation2,91,2018-09-19T22:09:42Z,2018-10-11T20:53:04Z,False,none,909ad39aa4cc735153716cc6a6930665262ff975,30,16,7e9ccb63e3d6f70ef7def7fa874f732520e71141 c7654b8fdfe108671008a332ec961f770dbd437a 699edec817c05364ee79d0e2e31f13421f3ca7ad 783ea040b04612ae7439cbff8b6da4040dc5c454 31ed77d5f9aed28a3942e3f4c47058fc3706b53b b8eb848a8efd0f3da396feb0550cbf6ab3d423cd 30bee5f999407180119f0539f762485706e94bca 2cb4d86309e73890298f8ae216afbd45f747d3a5 0a765c5341bf4eb579cade0a288441e2354e0a61 a20f1738243ab209903afd54af2e847a831a9dbe 9fd6093bc9c4c6dea726f218aacc1549c6db8be4 efead8f6fc7f6196b1d6e3fb896f73eac7c51697 a4749d3e6144ad68523c480bdaaef8153fa96e86 8a1af4ae001a59652528a024fd6d3dbc25504956 1c7891e90b6c361d963c49320c8ac3854db52231 c82e9e2f9aac71e288e71b78f1be9ef3a7296cc7,enhancement,New behavior tree,**Background info for this change**   The Navigation 2 software stack can be driven by a Mission Executor module that receives a description of the desired behavior tree as an XML document via its input command. The XML is contained in a MissionPlan message as a string. The Mission Executor receives the plan and builds the tree according to this XML description and then dynamically executes the resulting tree. Currently  the nav2 software has one Task that it can perform  NavigateToPose. In the future  other tasks can be implemented and included in the mission plan.      NavigateToPose is implemented by two alternative modules  the SimpleNavigator and the BtNavigator. These implement the NavigateToPose task by invoking sub-tasks  ComputePathToPose and FollowPath. Each of these are themselves separate TaskServers (what will be ROS Actions)  so the Navigators have corresponding TaskClients to communicate with the task servers.     The SimpleNavigator has a hand-coded execute method where it invokes first the ComputePathToPose and then FollowPose.  In contrast  the BtNavigator itself uses a behavior tree to implement similar functionality. However  the behavior tree is more easily extended and can do things  such as run the ComputePathToPose (the global planner) in parallel with the FollowPose (the local planner). That is  the global planner could be run at a desired frequency  sending the updates paths to the local planner. Also  using a behavior tree  there could be recovery actions upon failure. To implement the behavior tree functionality  we're using a new version of the behavior tree library that was previously using in ROS1's ROS-Behavior-Tree. There are several useful additions  including XML parsing & automatic tree building and blackboards.    **Description of the change**  For now  this commit gets basic behavior trees in place for the MissionExecutor and the BtNavigator. These will soon be extended.     Fixes #51. This was an issue about not referring to the library directly in CMakeLists.txt  but using find_package instead.     Other issues  that will be addressed as we develop the mission plan capability  including #58  #41  #43  and #42.
ros-planning/navigation2,159,2018-10-10T23:40:27Z,2018-10-11T22:18:40Z,True,2018-10-11T22:18:40Z,d9870731bfb676bb78981f74574d9ac560e4a09f,2,2,f8fd2675d18770ec15abeb27c764025ce045d2f1 15ce83e577eab0900817c01a8ff2b92ac64a6161,,Fix dockerfile for new repo structure,This fixes the Dockerfile to work in the new repo structure.     In the process I discovered that the BRANCH variable change I had made previously wasn't working  so I fixed that also by adding the REMOTE before checking out the branch.
ros-planning/navigation2,160,2018-10-11T17:07:36Z,2018-10-11T22:21:12Z,True,2018-10-11T22:21:12Z,a2fd344ca45e0a1b3f71b097fd606c62cc09ce5c,14,3,9e2066f2162682a4ab56f819a879c91efc8e3829 5ea1f28c92487ae4df06b90399ba5bdaee023d11 4172901e06b0a2acaf78b8c3af3a5d4d821c4424,nav2_system_tests,Create a system test directory,With the new directory organization  unit tests will remain with each package in a test directory and we'll have one top-level directory/package for the system (and subsystem) level tests. In the system level directory there will be multiple sub-directories for the various kinds of tests.     Our first subdir is for the planning tests. This directory tests the global planner implementations  such as the Dijkstra planner. It should be possible to use these tests for other implementations of the same interface (ComputePathToPose).     @SteveMacenski
ros-planning/navigation2,173,2018-10-16T17:21:36Z,2018-10-17T17:02:56Z,True,2018-10-17T17:02:56Z,130d78572c90551f16ecc2ce58f1fce61e88a398,2,2,1b11c2d5f5f0dad76e93603e9704b963c16c5257 c5121f26591d28d3881f12ac75512411a2138885,enhancement,Ability to build Pull Requests in Travis,Don't merge this yet  will update when ready.
ros-planning/navigation2,214,2018-10-19T02:35:24Z,2018-10-19T17:39:21Z,True,2018-10-19T17:39:21Z,7370ed99e2d006dd78e41d1f0f97ca0132760574,1,1,9d0d24439f6ed67d3c20e318881c2d5645c89a25,,adding all contributors for email production failure emails,@mkhansen-intel @crdelsey @mhpanah @bpwilcox @mhpanah @mjeronimo     Added all major contributors to email notifications if production (master) fails to build in CI. I just added everyone but if you don't want those emails ping me and I'll adjust the PR.    Steve
ros-planning/navigation2,205,2018-10-18T22:47:01Z,2018-10-19T23:26:07Z,True,2018-10-19T23:26:06Z,468f308c9ceb8e09704a65a3cc5e20938880153f,2,3,e9705df1995fde4ead09020f98d423397601026a 869a9676431ffcfb1bc742e41a2dc88a9d37a8c3 e5cf7613fcf2fc013eda4464646ffe869bcabec5,,Build CI using ros2 master nightly build,Goal - build against ros2 master branches   - changes Dockerfile to pull from the ROS2 nightly build   - changes initial_ros_setup.sh to use the *master* branch versions of ros2.repos    I had tried pulling and building everything from source but Travis times out at 50 minutes  and the build was taking that long (you only get 2 threads for building so it's much slower).     This solution was recommended by OSRF here:  https://github.com/osrf/docker_images/issues/201    I would still prefer if they woud just generate a dockerfile as part of the nightly build. It would make things easier. But this works.
ros-planning/navigation2,208,2018-10-18T23:27:53Z,2018-10-22T03:38:04Z,False,none,0a6ab3a52de434f62d8bd0ec4231238615f77768,3,8,609ca63383b17ac165a8baf31efedc9c141a2061 8e0019fe42b4a293f46a0779c24ebf816023caed 95d845054c2d05ef37bb0e96f8158f2d3ee7c7d8 ff3ac60fe99e7b4be823551fb820bc63d56e7845 3e2e80b19e8803e891f560725d4d4b624682f5a6 e3834b63d06acf930e987856bac7231603b39b45 84cc508770c9c11c39bf4556a2d35ded303f3e0a 1e21acea1f1d5ad5adcc4267e3b909b3b347ca58,,changing build script language to be more clear,Changing some of the print statements to be more correct / consistent.
ros-planning/navigation2,237,2018-10-24T21:43:37Z,2018-10-25T21:02:11Z,True,2018-10-25T21:02:11Z,af38ef9e945b61a08aab29f0da138f8c6aeed5ea,6,4,e2db9348973d06ef5a604eac0a18ee7d766943aa 2b121b4604f263d37adc8226ed7de51f213ef0bc 5882ed14dd82ceef22daec3cfa4cafec169f1ba9 fa0f2295fd02ef2251839ffebb4339088d770f84,,Dockerfile update to fix build fails,Fixing issues - will update when ready to review
ros-planning/navigation2,231,2018-10-23T22:32:03Z,2018-10-26T00:15:14Z,True,2018-10-26T00:15:14Z,3f66854313c4cceeae91293d62e99819474da71e,6,2,77e41a53292f8b8d362e9d71bc9796efc64b6f10 f746ba9326e9fcde6187cc1504ac6886af12357f,,Port costmap2d buffer tf_sensor_msgs local port ,tf2_sensor_msgs once merged into geometry2 should move back to their fork rather than mine which is identical except for this commit.    Deals with #132 as well as ports correctly the observation_buffer. This deals with elements needed to fully port obstacle layer
ros-planning/navigation2,233,2018-10-24T04:57:06Z,2018-10-24T15:47:08Z,True,2018-10-24T15:47:08Z,c298232d5353e6a4d37deacd3b57bf2291fab998,1,1,484de0f7b53c3cf4f0bc281f46ba7f07d60bdf55,,Fail build if ROS1_DISTRO setup file does not exist ,Hit this issue when was following [https://github.com/ros-planning/navigation2/blob/master/doc/BUILD.md](https://github.com/ros-planning/navigation2/blob/master/doc/BUILD.md) on a clean machine.
ros-planning/navigation2,244,2018-10-26T18:37:55Z,2018-10-29T21:28:56Z,True,2018-10-29T21:28:56Z,96f37e02bd6ec0037606997a6c940ea729a9e289,1,1,b02dc3cec3766872338947497e70a5fedf5ee1d7,,Update gazebo_ros_pkgs branch to ros2,One line change to repos file to update gazebo_ros_pkgs to ros2 branch
ros-planning/navigation2,245,2018-10-26T20:36:02Z,2018-10-29T21:35:59Z,True,2018-10-29T21:35:59Z,5b54c9a8388d3c4c83f297425e3a098fb0953a52,1,1,7b5e47d5ec8e32432e1fcfdbad4038b4d4191d16,,remove my fork used for geometry2 after upstream merge,It builds in the `ros_ws` directory which I believe is part of the daily builds. Should wait a day or two before removing to make sure its reflected.
ros-planning/navigation2,238,2018-10-24T22:19:19Z,2018-10-30T14:43:21Z,False,none,36246de3bc76f425894fa3eaaab51bb9f2e00699,22,10,2e76d265a4ab8958899259bc2bf97fdd58677e1f 4114e9ed8f167fe6c4f4dcba57190ab15d5e086b 9cfac1f08099aa7b83fee420be706cd21820d43e 4885acfb3e1eebcae4c37379790efd5d3964fa79 82aa49ac1de420946c3bff66bb9197aecb0b1a53 bf6c2d2a0f46862ad64675c1fb2ff1ce137200cd 4d8575f04558d8fac8f80c53527543466cafd0c8 c6a9500df97f9e1ea55a7cb3643c35147d2a198e 1c3ff18b809e0aa85a844ddaeb74959cc7a227f4 1fbfe82269e270fa35c633560fe0d6d0bd783f1a,,Map server params,A ROS2 node can be used standalone in its own executable or can composed with other nodes in the same executable. If we intend to make our nodes composable  the parameters should therefore come through the node's parameter interface. This PR modifies the map server to get its parameters via the node interface instead of the command line. It adds a sample YAML file for the parameters. This sample YAML file is in the nav2_bringup/launch directory and can hold parameters for all of the nodes in the system. The map server could be launched with this file or any other  similar  config file  like this:    `map_server __params:=<path-to-params-file>`    or    `ros2 run nav2_map_server map_server __params:=<path-to-params-file>`    In addition to the above changes  while working in the map server directory  I attempted to simplify some of the classes there.
ros-planning/navigation2,94,2018-09-21T04:05:44Z,2018-09-25T20:36:53Z,True,2018-09-25T20:36:53Z,448039a92c41ea07fb0b19224b3b25b75520d7be,2,8,f4cbb9baae6787b5cd1e0e90ef7126b32f81f03a d6c26bc3ef4817086737b4ecef541412d1899248 72f7b54e234a6bd417578118ae873b3efd345523 03d1691058571b0a6e2c0a9cf76ddd39c3602360 6e437f21e2bb690adfcf25f083ad9ac1c92849e2 63e72757d0e4f27fa483e9b603a79b20df4cda16 bdce5f7ecde20da536d998615fd5cb7d929ac2c7 56057fe0c281056fe64342fca466f12f119b2038,enhancement,Add Dockerfile,Adds the Dockerfile  Updates the README for Contributing and Building the Docker Image
ros-planning/navigation2,278,2018-11-01T00:51:37Z,2018-11-02T18:18:40Z,True,2018-11-02T18:18:40Z,43c2858f42dc58b0c240bc570c308dd3ca00911a,14,5,f580419a9373bbcd7d0af0ea15aefac6253b04ac 5f8b0dbb2e4a8d8c3cc1a665d4b7b1c10dbc941a 2bfdb24f2fb22e798bd32e86ceab970e052f113e 99f6f0ffcc2ea7c349dd049ed5c43a9348cda3b9 4a595b4f9770d22feed6ff4edd62567c36ebcebd,,Rosdep precreated definitions,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |#99 #281  |  | Primary OS tested on | Ubuntu |  | Primary platform tested on | N/A |    ---     ## Description of contribution in a few bullet points    * There are a few pkgs in the ros2_dependencies that are already rosdep definitions. We should invoke rosdep instead.      ---     ## Future work that may be required in bullet points      * All other items in the ros2_dependencies need to become rosdep keys  or overlayed in this repo for the time being  * ~the side effect here is requiring melodic as rosdep keys for some of these things dont exist in kinetic. Right now we're not resolving them and that's why it works but probably not great~ not building rosdep ROS1 in CI      ---
ros-planning/navigation2,283,2018-11-01T07:23:33Z,2018-11-02T21:53:02Z,False,none,4d83db760d047984d58ef273b114b2349b91277a,527,12,3c2bb26ea02d708919097a43b1c9fa258c3f438e a688a142833202e7c60f6e4f4526c94beeb3e5b0 88d17bbfa43824e47a6cb87e4a2b7b414a16aaaa 3e727084167d0bb774e57156f141e84f9acdd803 93d1a89f86b8c79d3bccf741fca758c5002d0c57 ba6b938f835bd37c1f32336c80a1889219099405 53ccb712eb0387d214363785a0b0144d53294b46 c963ce654ef796adfa7e621f2853d8e7e7a41092 f49667f3b2a54335764cf39d5d7a353da81c840a 24c97236332a181f5a467fb2ed7edc90c7412c17 31d5244e6f59437cdc95c6d5f58f672883e291a1 d178c136f23afe397b03d796c1dc27d1d4f8f10a,, test PR for rosdep issues will remove after CI completes Explanation in description ,I'm having an odd time with rosdep right now and its running smoothly but returning to me no needed dependencies when there are things to install. I notice in the CI build farm jobs they correctly identify these packages needing download by their own non-rosdep logic.     This experiment is to see  with overlaying all the packages we have in the ros2_dependencies which stops it from completing  if we get a successful ros build farm job. At this point  I can isolate the problem to a quirk in rosdep to investigate further
ros-planning/navigation2,288,2018-11-05T22:44:06Z,2018-11-07T06:37:34Z,True,2018-11-07T06:37:34Z,52c5ab4135b7373d8f32969cfbadcf10662d388e,4,1,50fb4a650e33911cc390be7382091a954bd9fc7e,,remove ros1,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #287  |  | Primary OS tested on | Ubuntu |    ---     ## Description of contribution in a few bullet points    * removed all ros1 dependencies (vcs  build)    ---
ros-planning/navigation2,258,2018-10-30T04:32:17Z,2018-11-07T23:02:33Z,True,2018-11-07T23:02:33Z,64adca85bb634bc7c61950deaa7dfa1d0110a434,25,8,cc9df405054cdad93a367107c9c8203fb6b3bcd8 e591c9454a86fda6b137de90cc2a0757cc60e14b c33e5454cda156fcb931248cf5b2b9d86d31d479 21f8c05707eb39a401f8541013bc0d73a5e008ef c86812f6cc0f57b60a176345a050def6c8135b70 00cc3e7a627c12bd12be251b7a3efda45bed97ee 124d361c156144a91030db7cbe0191ccf9795b07 94e692b60409c6de35d6b3878e25c7a1f36d4e23,,AStar planner and Dijkstra s minor changes,I don't fully understand the rationale for splitting A* out from Dijkstra's into different packages  given that `NavFn` library implements both potentials.    With that said  here's a prototype of A*  based on the nav2_dijkstra_planner port with the necessary changed lines to reflect the use of A* potentials.     I also add an INFO on successfully creating a plan in both  and also make it so that you only create a new NavFn pointer if the size of the costmap has changed  which is the intended functionality in NavFn with the creation of the pointer in the Initialize() method. A little bit of CMake changes.    A (pretty much identical) readme tops it off. As changes are made to nav2_dijkstra_planner  those changes should be ported to this package as well as they are pretty much the same. In my opinion soon down the line  I'd like to just make a parameter like in global_planner as to use A* or Dijsktras. For now  as there are 2 packages in the repo  lets make sure they both work.
ros-planning/navigation2,272,2018-10-31T15:27:40Z,2018-11-03T19:39:12Z,False,none,41cb4b18a7efdea26286868d9856fe9eeec01800,18,1,5770d542819c7db0247568376274216828dcab19,,Rename AMCL related files directories and namespaces to match proje ,Rename AMCL-related files  directories  and namespaces to match project convention.
ros-planning/navigation2,227,2018-10-22T20:07:58Z,2018-10-30T23:11:45Z,True,2018-10-30T23:11:45Z,6d37648cd77f8a36fc1929d2131a941bc270beb2,32,32,2c7af3bc2e04bee1bea113ae596d609bbde77b94 50bbfc10b0f9eb8a06cea6061979214858e29d46 e8cd47a81ce344e34bfe70db7e2e04a42a42e239 10c5b099a78eb00a87194fb787418199aa00ea1b ecf53804c07405f33783818893044e6841da413d e50ea45a38e03dd4fe227dc839eb00f8ff0763ec e143e79c704a2a50502ab8846069a044a41aeaf3 565039e808ea281c9752334e00c0b45879796e71 4e9c7d762e9d5fdfaa7ae5525e6345b677dc8c39 dfc1c72fc5a08854b1f11dd97d8d615e9152fb7f eb5d8db433608f56c61867cfa3f4975342f80bc6 4969906e33d6be6f546b63e5a4fc7ceb2228531b fdb5b8da5d003b5ccc6d20aad0cb6018d7360e29 f845b75938039c15ad0263d7ae634fe3caebd141 1514259d6dbef98dc2c88579fa1c9ffdb49916ab 909c2ba5a1a79e62cde1b61e0e184b8ef12292a9 780730f9896d93392c1b66be38cd78a8b1c6ac80 8dae64284f7a235bc65b44a24e09a79bc07769d3 a44f8cd96dbebc2138337c41c0c4eaa7f7f9851e 2e6df425f2b9d1a6c4de481bc081d2e67581e26f 4fe0aadbf91353d6daa275ec71ed993294ec2e98 80bf9cba3dcb1c160a2a35247d4d927c05a5f0bc a46fe2027be444d4548a98c54eebd52c4b59851d f02847daade7055bf8d2c87ab854589e94a84b4c 4be39ff9674c5ca16fe679f993ff688c99f4f8a9 83b06032984ecdcab160c6b904c2472058d986ff a8d65ae9e0a8bcd5e3f672496ef8acdd4df5220b 7502e92c6d3189467078acf32484363b4a2360e6 def8b55da4d00005095fd1a0a2186a58025fe9e7 5a594f43591c884d03031f13ef54fc400e4d6c55 022abda0c7c7783d2d4b4157a4d3bd7233fd26d6 c11e7be8b090df79c9dcc546f6a9fee6aa97231d,,Behavior tree for mission execution and BtNavigator,Use the BehaviorTree.CPP library to implement BTs at the mission execution and NavigateToPose (BtNavigator) levels. This check-in relies upon my fork of the BehaviorTree.CPP library  which has a few changes to enable ROS2. I'll work to upstream the changes so that we can move to the source rather than my fork. The Behavior Tree classes in the MissionExecutor and BtNavigator have some common code that I will factor out into nav2_tasks (BehaviorTreeEngine). This will be a subsequent PR  but there is a start on this work (I've added the BehaviorTreeEngine class  but I'm not using it yet).
ros-planning/navigation2,271,2018-10-31T01:15:10Z,2018-11-12T22:17:14Z,False,none,d1dc505bfed609b424220d545cdaf7ff30311393,6,2,9a4a4324be5fa0bee1a409e899d233cfb6d2d747 e2dd999315524315cb13a3e4c56dc411c2ed238d,,Add dynamic reconfigure support to DWB ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #264  |  | Primary OS tested on | Ubuntu 18.04 |    ---     ## Description of contribution in a few bullet points  * Gets robot kinematic values from dynamic parameters instead of being hard-coded.  * Adds a yaml file with turtlebot kinematic values to the launch file.  ---     ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->
ros-planning/navigation2,302,2018-11-09T00:30:47Z,2018-11-13T01:53:34Z,True,2018-11-13T01:53:34Z,d054da63fc444ef76eca48bd347f986388747afd,7,2,ed27f25ae9aa5ed9754ad35650f57d403569f9ae 90d7451e8094129cdc44e7ef2800ba49c9f50907,1 - High,remove xmlrpc dependency and re enable plugin params,  <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #131  #262 |  | Primary OS tested on | Ubuntu 16.04 |  | Primary platform tested on | NUC |    ---     ## Description of contribution in a few bullet points  - Removes the dependency on xmlrpcpp in nav2_costmap_2d  - re-enables plugins to be loaded by parameter  - replaces parameter client calls to be off the node itself  - remove unused functions  - add footprint as dynamic parameter (should have been before)    ---
ros-planning/navigation2,293,2018-11-07T05:31:14Z,2018-11-07T23:19:55Z,False,none,137fa12863534b547cc60aaa0bf612a522c4b887,1,1,4b0fb3a4ad0f78e8755dd757965ab4c809c32007,,Small fixes in build_all sh,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | N/A |  | Primary OS tested on | Ubuntu |  | Primary platform tested on | N/A |    ---     ## Description of contribution in a few bullet points    * Remove duplicate export statement  * Update the export statement so it has correct syntax.  Here is the  help from `bash`:    ```         export [-fn] [name[=word]] ...         export -p                The supplied names are marked for automatic export to the  envi‐                ronment  of subsequently executed commands.  If the -f option is                given  the names refer to functions.  If no names are given   or                if  the  -p  option is supplied  a list of names of all exported                variables is printed.  The -n option causes the export  property                to be removed from each name.  If a variable name is followed by                =word  the value of the variable is set to word.  export returns                an exit status of 0 unless an invalid option is encountered  one                of the names is not a valid shell variable name  or -f  is  sup‐                plied with a name that is not a function.  ```
ros-planning/navigation2,343,2018-11-19T18:04:34Z,2018-11-19T23:52:39Z,True,2018-11-19T23:52:39Z,df69e244683e132f67e2cf8061aa394156256000,1,1,acd1b586baa12f230b996845470ac194650212bd,0 - Critical,Add angles back to ros2_dependencies to fix master build,currently the Travis build of master is failing. I can reproduce this on my system by building the dockerfile locally.     Error:  --- stderr: dwb_plugins  /ros2_ws/navigation2_ws/src/navigation2/nav2_dwb_controller/dwb_plugins/src/simple_goal_checker.cpp:38:10: fatal error: angles/angles.h: No such file or directory   #include "angles/angles.h"            ^~~~~~~~~~~~~~~~~
ros-planning/navigation2,324,2018-11-15T05:24:08Z,2018-11-20T01:19:48Z,True,2018-11-20T01:19:48Z,a992f9cdac21ee5be8f201a29dcac097017fd139,1,10,81308f270b1ad76b7d8d16c94b9b704b9233cd38 4f50cbf233d627d5aca1f21decd2c59a157a4e84 3ebd1c372547ea262cd80d58ec2ddff8d531d9e7 1b579fb0525f139a652430795fd95f527a82c81a 3422f9017b6ca8f04fe29297ebc1d261b65ddc82 cf5c6ff53d34885da2ea6791d903383f3bce8f9b 0aa707fd0ddca0be5e9b50c603398ba5ec3c5920 16a107c2ffae698948aa49a69f64604855f29827 8869d43b184457b94b839d0e897255028400f39f c9b66e742b0af4b3ae38722aaecb315b707d3cc5,1 - High,Enable colcon test in travis for passing packages,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | None |  | Primary OS tested on | Ubuntu |  | Primary platform tested on | Travis CI |    ---     ## Description of contribution in a few bullet points  Added colcon test to travis for currently passing packages    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---     ## Future work that may be required in bullet points  More packages need to be added  <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    ---    <!-- OPTIONAL -->
ros-planning/navigation2,332,2018-11-16T04:19:46Z,2018-11-20T20:59:44Z,True,2018-11-20T20:59:44Z,3d7cb15cec830cc5b35ad0fcdfcad6a0cc5cd9be,16,6,20c2ce8b3eee7c6c7ec6e2b8c5372cce3c2a2d35 a4c1cc26ebf078ce97c81b2181f3e604ef4ee74a 183fab4bdcdde466f211f30918260697b981ff1f 0e8a8fe5fff0a77809385f9b2b8e05da97acef53 1f444918114ec41c627448a802af637ee2b9177d 03ab7e700ffb11a89e49456f825d62c1dc6cc54b,1 - High,Smart to navfn,Addressing https://github.com/ros-planning/navigation2/issues/325
ros-planning/navigation2,316,2018-11-13T05:13:33Z,2018-11-15T15:05:10Z,True,2018-11-15T15:05:10Z,6e457a2782ee3dde4f2d63443f903e7931e59717,1,1,bbf229d14d5d0779c30321b7d80780667dc1ac50,,Improve output in initial_ros_setup sh,Print a message that a function is skipped if a checkpoint file exists.    Hit this when was trying to repair a broken enlistment.  When I run `inital_ros_setup.sh` I got the error below and it was not immediately clear why the other steps are missing.     ```  $ ./initial_ros_setup.sh   <...>  Are you sure you want to continue? [yN]  y    ./initial_ros_setup.sh: line 102: /home/user/nav2/navigation2_ws/src/navigation2/tools/build_all.sh: No such file or directory  ```    Adding printing in the `else` portion of `checkpoint` provides a clue of what's happening:  ```  $ ./initial_ros_setup.sh   <...>  Are you sure you want to continue? [yN]  y    .INITIAL_SETUP_download_navstack exists. Skipping download_navstack  .INITIAL_SETUP_download_ros2_dependencies exists. Skipping download_ros2_dependencies  .INITIAL_SETUP_download_ros2 exists. Skipping download_ros2  ./initial_ros_setup.sh: line 102: /home/user/nav2/navigation2_ws/src/navigation2/tools/build_all.sh: No such file or directory  ```
ros-planning/navigation2,364,2018-11-27T07:57:21Z,2018-11-27T20:33:58Z,True,2018-11-27T20:33:58Z,0892b0762454a73751b86845ded6e31838b633bb,2,11,e053705540600b0fa87ebee6da246379622a8525 98571f77530ae81fccdc2f57b9832c0d4a3a5e7c 1ab32988f10ca7083cf30dfbfa39b73570bc43c8 2493a2aead3682ae1e14351b274279b54cec56ba e7ddf88dad2280dd69f9cde077087af614cc554a caa1b0a1ed445fffae9c60ecb337a39a9d45c675 01eb0126e46cae19fc68b3c6b4903b4c2be6b8ae 4e32c5fb6194a5c63a635c50d1455b05cf7aeaae b13d6aeea3e8d8b5b6b75d9adeb68079e593f663 1a9559404c2b972354147dc832662544a523531e cf0921119412130947116412d375f310d0991edd,,Update how colcon test runs in Travis CI,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #334 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | N/A |    ---    ## Description of contribution in a few bullet points    * Before the change `colcon test` in Travis CI run in a wrong environment  * After fixing the environment  skip only packages that have test failures.  There are 11 such packages now  * Adding verbose output to `colcon test-result` so Travis CI log has errors    ---    ## Future work that may be required in bullet points    * I'll check issues on package by package basis and see what else I can fix.    ---
ros-planning/navigation2,389,2018-11-29T07:09:27Z,2018-11-30T06:40:20Z,False,none,f21fd85ba2921e9e7d28aa78a5ab59726628adcc,2,2,9189299e80b13c0146323c70960152e999090870 d3f3aed35ab8ab28c0da47b26f5a9ac649add285,,Dockerfile change to copy navigation2 source code from the current repo,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (N/A) |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (N/A) |    ---    ## Description of contribution in a few bullet points    Fixing the logic on how source code gets into the docker image.  The previous version always was cloning from `ros-panning/navigation2` that is unexpected for:  - Local build  - Travis build in a forked repo    I hit this problem when was testing a fix for `colcon test` of one of the packages.  I was confident the fix was right  it worked locally  but Travis build was failing.  After some time I saw the code in this file that is ignoring all the changes  but gets source code from the master of ros-planning/navigation2.    @mkhansen-intel
ros-planning/navigation2,388,2018-11-29T01:55:26Z,2018-12-03T17:17:57Z,True,2018-12-03T17:17:56Z,63a33c233cbb637c3a1950a504b6b72759aed6ab,12,8,c89e8074a933ce0ca9966fc58cd26d1dd8f11431 183e793220c8b87bdb0bac8a0d431486c6b139c6 9b949477ed0673423cda5e668cf52784ff6f6039 19dcb157e9f535318ec38ba21d9eb31b64384d47 3e9209c669475b1f03feb0e93c13ffa7a798bc1b 761e8d84869b40367ec00915b2c2baa00a452f35 9e089ca81193e005f25595f118a9570422475ffa 5b960c6ccd10a7647aa9ad937d824577c35945f6,,Amcl integration test,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | HP Desktop |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---  - Moved the amcl integration test from amcl's test directory to nav2_systems_tests    - Modified the existing amcl test by first publishing an initial pose to amcl and then subscribing to the amcl_pose to compare the initial pose with amcl_pose    - This test launches Gazebo  map_server  and amcl
ros-planning/navigation2,393,2018-11-30T06:37:29Z,2018-12-03T17:50:08Z,True,2018-12-03T17:50:08Z,542433406e647d93267cfc45e401c01f7d2c53e1,2,3,07b351f340086abeca20c5e8b6260a7eb78b96ca 2628448ca20411a3177e7f956456a77c83828013 873b6e1dc0cd801b4202413cebcf41f824121ee8,,Define USER and BRANCH in the Docker image,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (N/A) |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (N/A) |    ---    ## Description of contribution in a few bullet points    It is the response to the discussion in #389.  I updated Travis  so it errors if it runs in any repo but ros-planning/navigation2.  Added retries for `wget`.  For some reasons  I cannot download the entire archive without retries  probably due to my physical location.  The other changes are about the ability to customize GitHub username and branch while running Docker.  The default has not been changed.    Hope this is a better PR than the previous one.    @SteveMacenski  @mkhansen-intel
ros-planning/navigation2,269,2018-10-30T23:08:53Z,2018-11-07T22:50:55Z,False,none,082a4a3189bb024e508e4a466f2cb2d5ad72cd50,7,4,60535f8def8658696efede33b612deecb88d14c6 56e35ebb7be351289da8fe39353ad837d1392147 726976fa24b4bc94b615b1babbcea6ec58e9e214 0cfe54e3eb3b7a72fdea20cef2373ea6a4146d77,1 - High,Move tolerance to param,Per the team discussion  move the tolerance value out of the PathEndPoints message to become a parameter of the global planners. Fixes #164.
ros-planning/navigation2,265,2018-10-30T17:36:17Z,2018-12-04T16:18:50Z,True,2018-12-04T16:18:50Z,397c573eae5fa80a000f6b8519e0c8a98bbb0594,27,24,52e95d448afe2e6b0c4b7f5fdcf3cc5820fad0be 2f09930dbe5dc94624359bf900c052a0309e8d90 f809a4de78450e7d890b702902e2179aafc31dc9 79751c609c941e33589daa71a76318e1044788fb e736e7bd0c339ca05552d152ee91bc5ba69cd501 3f3c9a8b514494f9928ef31a78fb1da54a1c3b2b 470acff03f40d39c8f416a4015df3aa194e96c70 e0c010c96fe4c5f6d76cf5957614b06ad9251356 083008e888b75e1f8aea1a2d7b7213d7c83a444a bfc6a15ef5b20c5bf20cc7e1121b1968342fa417 2214f691c58c9b70f3f9bb581cfb908c6e9cab2b 45f198bd450ceb3d7f4d0be7a4c210c70fe34f01 89b924ea7b6e13a4266704286b08cb6ee8f26c76 ba594925e953b754dab00d7a7c739d9d4791ec6a be4567659669facc50f4f7ed9adaba68f545d23f 63d85d84842eafed1592e8aff0b7fc310c83cb2c 1643e06ee95b0bacb9fcceb98975d97f6394b9fc f9dd8ff4c6a67ed42baed35f9bc3ab51f681ec84 a1c137f882bd7f63649b451f1ca97bdbe8692ef3 6fb7cd8e6c705874c2bb02f09f75bcf8caf3eda9 afc9461024022a342e5f7235458706b5f4a8ebe5 a3745690d398d9ab54600e7d4a222422e613a111 ed3886053d61d93b1dc2ab1f5be7009f56b9c280 341a3836890b7ab3c03cac0a530124204f11ddd6,1 - High,Map server params update and refactoring,A ROS2 node can be used standalone in its own executable or can composed with other nodes in the same executable. If we intend to make our nodes composable  the parameters should therefore come through the node's parameter interface. This PR modifies the map server to get the map YAML filename via a node parameter. In addition to the above changes  while working in the map server directory  I simplified some of the classes there.
ros-planning/navigation2,412,2018-12-05T01:52:24Z,2018-12-05T20:38:42Z,True,2018-12-05T20:38:42Z,03c1ecab67ab5927f4013bef959b6e14c6b6c640,5,1,b88e9402d3c4bf3e3fbb5f468bc6903d250ce3d3,,Fixing nav2_system_tests linter issues,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (HP Desktop) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    - Fixed nav2_system_tests linter issues
ros-planning/navigation2,357,2018-11-26T01:20:37Z,2018-12-05T22:24:08Z,True,2018-12-05T22:24:08Z,c00f83675ee4098ce1d697961739a0f906fbd61c,41,49,26d583f3204bbb3a3cb609cb5386dbdee46914af f69f837a39aac8b1477cccfc18feb2c3da56419b 87fcadb605a5bce26e7db1a5944e0f93871138b6 4ae67c8c5fc4f619a41f72bc9ae15a7974c87525 30db1753f5753b31205f8153b1afe249c73c1b39 25d19bf5ca2dbffea53c4063d1fd5d5839cef4dd 3096db77d4fb771f27a777377ccb453cac7cc910 91fd389f380d3731f9aa0c9daed310ca45d9debc 4c30bf92ffd2c706c0d792edb9f2e7f4d1be2c4d 0ae12deb4ae0a57d6e70efe6d9c110920f96ebb1 3757df076c16af67a6a43b8fd921380e7f70d50d ffcf99141cad9661774b488d9905586577ff4d5c 142124e586e91c26f3f6f9195d46d3f8a71bddfe 20730f1306456254accd3f5622f9466c8a35e359 1d49be3f8db62e4cda33829bd0fda14e18af4d03 3553235fb00f2313025a15e11b633c6904d01f72 10fe5e73d2415762a0da0542d30ea906be0208c3 60da0c4d1c30ad5d858fdd561932f0d9ece2bea9 9f1157a380e3462aba2f911c13dfe84f404e54a8 2688fbe1d1415861f7c443b2238ce28734efe5b3 e83e4f49a7fb0f820ab55627320bd4e820659211 62771bc567010f12be4fcd6be870c69d0b99b049 f13d3241aef42a213311b0e9f0ef2eabca351c90 84e90fbf18c58872e64891d263af3e9a0d85ab98 9cdb93930eaed501ce029a212284eef497e52600 c7cb673206b6a622fcde379d0f5d128236060652 fbb8561761c2e5f90113e7b90811b31e6b8c5db2 ac09f3835031dd1761287a5cefa26c7d1b1852e7 b54da7232893f7a2b73fd21f0b9f2b075b31be79 7e62e0a61f33ea2520b1623697cfe0650e7253b4 f44f15d1b08640b0cbfe226450c0b11e78cd103f 5ad9597013f9f80e288babdd34734dce778141df 5b3fce1c097be5ff99925880ecd148b3689046ab b5da34979ae732601eb0a1a59eac93c33919d40f b469083c361defa2d7d828571c2426aa458d4852 db7e158e3fad8e5b4ad0721b7b3ce64ad1fb0431 783452af19394faea6ec4485804ae855365df3d3 77daa81aa58e3e205e9a21d8eb0c60c5fd9d2b38 a70cf2d46b975d5bcda59f52ef4ac072df3c07fd 63b30b282ffcae8f946b5a327595dc00a492ec66 075a2ebf26b8e3ee876277103494b7c1679169cd 23595d4ce660c7c65012c4fba7edafcdecd6d070 1c8326c9f17239a0db35292b1586b7630690060a 414886390e1d3f8398c31ee2f548aedf423efb8e 1c5f6719ac02b3d436c375dc80870ad30aa137e8 b1c0e686deb34602f6c0817ff2fe68733592d51d 38391dd8f1dde040b906bd0d73791ba2f5a9741e 86b9cd55210c0375f185718edf177d3f22146de6 b9dd484c5f120d244221781aec0a70a24f3f5cc9,,Recovery behaviors,## Basic Info  | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #49 |  | Primary OS tested on | Ubuntu 16.04 |  | Primary platform tested on | Gazebo simulation of turtlebot |  ---   ## Description of contribution in a few bullet points  Developed an example of how to implement recovery behaviors on the behavior tree based navigator (`bt_navigator`).  * Extended the navigation behavior tree to detect if the robot is stuck and take corrrective actions before pursuing further navigation.   * Implemented a simple algorithm for detecting if the robot is stuck. Created the corresponding `is_stuck` condition behavior tree node.  * Created `stop`  `back_up` and `spin` action nodes and defined the corresponding `task_client`s and `task_server`s.  * Defined a `nav2_motion_primitives` node to host the `task_server`s for multiple basic motions.   * Defined a `motion_primitive` base class and implemented the stop  spin  and backup primitives.  * Implemented a dummy planner and controller for testing.  ---   ## Future work that may be required in bullet point    * We might want to have the `nav2_motion_primitives` not as a separate package/node but part of the robot.  * Multiple improvements are suggested (see `TODO`s) for the algorithms used for detecting if the robot is stuck  for spinning and backing up.    Created the following issues to track future work: #378  #379  #380  #381  #382   #383  #384
ros-planning/navigation2,420,2018-12-05T20:17:47Z,2018-12-06T17:27:39Z,True,2018-12-06T17:27:38Z,bd12f5b3b8f5db8fa2ce365a53d0aefe73a3426f,2,1,128fb3d6a18b921b9c4f9caf8055210d98856436,,Fix colcon test issues for some more packages,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #334 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | N/A |    ---    ## Description of contribution in a few bullet points    * Fix `colcon test` issues for the following packages:    - dwb_controller    - dwb_core    - nav2_util
ros-planning/navigation2,368,2018-11-27T18:52:03Z,2018-12-08T01:01:03Z,True,2018-12-08T01:01:03Z,8005318f7cd1ff639ed395a03908a3df436b07bf,20,24,9c4608eb756bf8c7e0754910fc1807395c4d77a5 e3a3cf351b79b2c794e2696de0f7cdbbad6ac7ab f96b4310804d0005bc16eee957c47ae8f62cb912 57e29c42600abb119c41767974a999932cea1a7e 894f5653ff46cda81e623af2122a054b4bdf9cc2 ba10236fe009a724e02b0d3f2e19889e94a9aecc 1aa3757ef5d8f8ecd129b66134ea197285adb61d dcf2ddc683aa28dcd1f66816a88298efdaf4f3de 242ad1d532982ecdbed8a042b9f5df2757b98a40 1a2036e48fe018907b1e1be5ab0b2891e3414b35 dae0b9695552fb2185e8352c57b1382990c150b0 be430f448c57175ab2b9264e826e419fce15b6c2 fddb556d4655a4368efaa1220e05ca4c9f8d9ce0 317d6fd3229ad20b6f739f1add72d72757a5f9a9 0fe4177306382a2b7a4ffc8df77a65a2db2c74a4 6d1728024198fc158c1a0981176a3ed08c257145 d271876ab83f3d6aaf0e098cd598ab18c09ea854 bc5f7ce9f7611e8a61cbf479e0e956c2959b9712 b51bd4bd699a0c07477dfe24e3d8f6369d137a19 ebdabde5cfd08cf11d907787befe421a3f6ce36b 8cf1f344a9416074c4ba0e0c9ceb26e23aeef4e4 8cbbb52aaab5b485700eaeeb2a871a0733621c1d 73ac96e680e02f56442b85b7e64c2a9e57ada5ec 621338b0822d8767e82031a10743dd0b438107d0,1 - High,Add top level system test,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | N/A ||  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Runs using Gazebo |    ---    ## Description of contribution in a few bullet points  * Adds system test which launches Gazebo server with turtlebot3 world plus entire stack  * Sets use_sim_time for transforms and map server  * Sends an initial pose and waits for a pose returned from /amcl_pose  * Sends a goal pose and monitors for 30seconds  * If goal is reached within 0.5 meters  test PASSES  * If goal isn't reached it will retry one time    ---    ## Future work that may be required in bullet points  * ~~Currently still WIP~~ due to instability of the bring up  sometimes it passes  others it doesn't.   * ~~Not totally tested within colcon test yet~~  * ~~Will resolve those issues before turning on in colcon~~  * ~~Pushed here for other tests (ie. AMCL) to use as a reference / starting point~~  * Change travis.yaml to run the test automatically (future PR)  * Add a bt_navigator test (future PR)
ros-planning/navigation2,414,2018-12-05T08:20:10Z,2018-12-08T08:45:19Z,True,2018-12-08T08:45:19Z,2816b0c9fa6f0c43d25e43adf8e2ccbe94fa63bd,43,4,ca861e32ed3c112c071ca138a9f603920f19f93e fced1ac0bdd710bff27072c2613790a9d095623e 830367e3e80ae51e78821c5b600b11f417899f40 ea1b13a14ebed95803047f74071eefd89daaf1df,,Fix linter errors in nav2_costmap_2d,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #396  |  | Primary OS tested on | Ubuntu 16.04 |    ---    ## Description of contribution  - fixed linter errors and uncrustify   - disabled copyright check and cpplint (was getting error due to no copyright in two files)    ## Future work that may be required  - resolve no copyright in two files (testing_helper.hpp & costmap_layer.cpp)
ros-planning/navigation2,458,2018-12-09T00:38:40Z,2018-12-10T17:32:05Z,True,2018-12-10T17:32:05Z,4589b6f378c7702593c768edcf4a02c751179d31,47,17,22faf5862ac59a4320803f584fd63de5823e6e8e 629e34e80594bcbd359083ada3dc566164152312 8cc6ee52e21c0c0ec7f125ed5c723474b4f95a8b eca959fe04da26d713f8218508bd929ea99c0cea 94801ac06ad0348693cc4e52ea0f803b40e7cec4 ac8f8221c3750a4c99a336d0c1c30518daa5de0a d0994d3dee6fbef061c83c17e68053fbf6be2640 b84c7bbed2f31e07af8ff9821e9c18f9d2b204ac fec61efe2aa96ca08cee444d7b4c11fa917cbaa5 72790a03004ce5faa522c77cf91fa355b2df5e4e ab70f88d9a7f6264bc8692614de7ecb3315e66a0 39e465179a2c7e139f12bc4bc09ef1ddd4dd06e8 13ffee5dfe078c8e9e04ad99276cf4f8c0a89116 b89dbd21e72bc0a2d2e063de7aaa734dfdf15720 9c79e7c512db55d3f3cc175de7237e99d9e48c48 fedb1a1c656809d4c3e663be3a3d36d3a91a8ce0 38450aecef6574a5a1507da0e9a59c43b5798755,0 - Critical,Getting Build Farm CI on track,- adding missing rosdeps to package xmls  - dealing with failing costmap tests  - fixing tests in map server  - throttling while loops that dont need to be running at 100% core speed    @mkhansen-intel @mjeronimo @orduno @mhpanah @crdelsey  its super super important that anytime you add a find_package that is a rosdep key and not in the repo  you need to add it to the package.xml under the rosdep key name  for now the travis build system is set up and not isolated  this will not be testable in this repo but will create nightmares for me to release debians (and anger the kind folks at OSRF). I'm going to go right now through every file in every package to get them all in  but in the future its important for isolation builds the way the debians are generated
ros-planning/navigation2,437,2018-12-06T21:08:04Z,2018-12-06T23:41:09Z,True,2018-12-06T23:41:09Z,e21cbd2ac082962e8d7541b1f4ae4f610f209503,1,1,86a73dcd3e80e7120201b63f343b88be847bbbaf,,Use new ros2 branch of the BehaviorTree CPP library,## Description of contribution in a few bullet points    * Use the newly-created 'ros2' branch of the BehaviorTree.CPP library
ros-planning/navigation2,409,2018-12-04T01:15:35Z,2018-12-07T02:26:36Z,True,2018-12-07T02:26:36Z,67be9d98f96902a485294167526c89556b8a740e,25,4,4f282cbc8812c9e98d97bae99ad6fd795b3c597d c39622eb5ac4b234dc598188657d901a2de64a07 79ce6b01c70b604834e49508d4cb9199ad44491b 68e40b9760a9e8f263be8db50cb25f7804c05a9d,,Enable DWB to receive path updates,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #164  #362  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo |    ---    ## Description of contribution in a few bullet points    * Enables DWB to receive path updates which are sent when running the global planner in parallel with the local planner/controller  * Moves the retrieavl of the current robot pose from NavigateToPose to ComputePathToPose. This is required to do dynamic path updates.     ## Future work that may be required in bullet points    * Could update DWB to ignore path updates when it is close to the goal
ros-planning/navigation2,350,2018-11-21T17:25:51Z,2018-12-05T16:00:10Z,True,2018-12-05T16:00:10Z,b797a3d89b5abe23cdc0f4a7de3308a8f66bb22e,12,5,9eec6fd1a78352eded9f3191d56afb51d46c8b60 699d68ad7bdb50672416ade7a51d79efcca5fccc 93507bc748835c267c221173fd59ad7321e77b6c d55304325478fcc97daa0c62ccb490eb1b26a8f3 3fae1845d4626482911e5d954a84d14da2e19150,,Update behavior tree cpp,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | None |  | Primary OS tested on | Ubuntu 18.04 |  | Primary platform tested on | NUC  HP Envy |    ---     ## Description of contribution in a few bullet points    * Update the BehaviorTree.CPP library to the latest version. This version fixes a few issues      - M_PI macro undefined on Ubuntu 18.04      - New ParallelNode constructor added so that it can be registered with the bt_factory       - ParallelNode is registered in the library so that it can be used in XML  ---     ## Future work that may be required in bullet points    * What remains is to provide a PR to the BehaviorTree repo for the colcon-enabled CMakeLists.txt  * Work with @SteveMacenski to understand how we can incorporate this library into our official build
ros-planning/navigation2,456,2018-12-08T07:16:05Z,2018-12-10T20:08:08Z,True,2018-12-10T20:08:08Z,4cd0968465f230b062a9a8dc2419817d9ae2f37e,2,2,4ee9967ca8fc14689b1d75d189db16b525948e06 61849fbc2233c652067879f4420f15680afdfc8c,,Enable obstacle_layer marking clearing observations,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Turtlebot3 Gazebo |    ---    ## Description of contribution in a few bullet points  - sets default for observation_layer sensor marking observations to True  - adds clearing observation parameter set to True for scan sensor  - fixes `raytrace_range` assignment bug/error  - with above changes  obstacles can be detected and cleared in real time   ---    ## Future work that may be required in bullet points  - Though obstacles were detected  sometimes the local planner failed to find a valid path even though global planner would create a valid path. Should further test to see why this would be the case given a valid costmap.
ros-planning/navigation2,475,2018-12-11T17:16:45Z,2018-12-11T18:10:31Z,True,2018-12-11T18:10:31Z,809cf5a818f3744e00c78c33dbe860e7aa51a631,3,2,d9441a387eab222f609cf204017fe907aa68635d c490e3b4d4686f2583e4157d21cda5358a69df6b,0 - Critical,Fix Travis build remove gazebo_ros_pkgs dependency,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info  Removes gazebo_ros_pkgs from the dependencies for nav2_system_tests. They should still build fine but won't run without those packages installed. This should hopefully fix the build and we can find another solution later.
ros-planning/navigation2,471,2018-12-10T19:11:43Z,2018-12-18T17:58:57Z,True,2018-12-18T17:58:57Z,e5607a501ee5cfa01536736b25e5714c362842c5,4,2,f45cb4de812b8abb9c3cfe03ba7c1d05ffac6f9c 5cba348c538abd4c7eecf1f7f8672f3e18006dc1,2 - Medium,Renaming getCurrentVelocity and getCurrentPose to address 163,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (#163) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (HP Desktop) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  Addressing first TODO items of issue #163.    - Renamed `getCurrentVelocity` to `getOdometry` which contains both odometry pose and twist.  - Renamed `getCurrentPose` to `getGlobalLocalizerPose`.  This way we know this is the estimated pose from the localizer and not the odometry.    ---  ## Future work that may be required in bullet points  - Do the remaining of the TODO's.
ros-planning/navigation2,489,2018-12-13T18:38:18Z,2018-12-17T18:50:28Z,True,2018-12-17T18:50:28Z,28c2ff07c8409802fcb5378532df641f0bdd08d3,1,1,ddb987cca87f952b6e717ccd51644f1f82efbd3d,,More tests are passing Enabling them in Travis ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Docker |    ---    ## Description of contribution in a few bullet points    Enabled tests for:  * nav2_dynamic_params  * nav2_map_server  * nav2_navfn_planner  * nav2_robot  * nav2_system_tests    I think system_tests is only passing because everything is commented out  but it's still worth enabling IMHO.
ros-planning/navigation2,83,2018-09-13T21:15:39Z,2018-09-19T22:52:35Z,True,2018-09-19T22:52:35Z,d3dc665612a4d3f0a8cea20d7c3128be962cc617,7,11,524731a956fba5d5bba7a1fb9458d7b8e9afc818 f287f4782409c3d780e6f9abd0c31db172eae042 683a34400ef1358d6c8f7140cc62624a4d829bd4 6e32ac8eab45c851cbee98e190b8d3cece5fc728 769627016f5c60e04f5db9f3415e3733ca4a6157 06bb32e2bd70b612d048e42145d47671a88619de 55ec78449d32f8c1361470eea70164afe0b402e6 64e5e28b7043b52f007c4891bf148021db433836 ca507655122e245db8ef88cffbeadfed57350d4b e97985d46622b607b2d84a08b4ceb5e688117340 231f4da948d51632e526304b0ef4a5c3c5431ef3,,Buildscript,Scripts to automate downloading dependencies and building the entire nav stack
ros-planning/navigation2,394,2018-11-30T18:03:57Z,2018-12-07T18:16:42Z,True,2018-12-07T18:16:42Z,5f6c2c41d4905f6e19caa90f7cfa40fb2b0813a0,7,13,111f3d5f24ff049f50a78388bdb0f6d6aecc9f0b b63c1c93819d100d13ad77039e50ca68ec83215a a1871c89673d4f357b74b5e1b84c86e2bd17725e 842b2ea8797042a9c7b9f6d334c5f0bd06e8e4e3 2f9a390130ceb042a3c521f6b43b02a18c91097f 4716dbe3c165a65cb8d5e7e49ca395ab81d97eaa 0a7b147a17091eaf41b891720d8d07109ee868e9 333b159aee48f57cc3766ac2fd5dd42839fb9143 b41d994d94bfed4618a8a96fb07286b1d5bcc8bb 457eb6129899a8e0505214136d25b19436166431 8b5db9cc98ca26925a4d57f6878ece2b8104bff8 c8497a303474e4d2bef4df10974c2d2b7da43c59 fd46f37e5b16b7e525808e54eb9f2b2dba8fec4f,,Put local and global costmaps into separate namespaces,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  Gazebo Turtlebot 3 |    ---    ## Description of contribution in a few bullet points    * Costmaps now put themselves into a namespace that is the same as the node name assigned in code.  * Updates the RVIZ default config to map the new topic names  so both global and local costmap topics can be displayed independently.  * Adds a nav2_params.yaml file to the launch directory and sets a couple of parameters on the DwbController node and the local_costmap node.    ## Future Work    * Due to the way parameter events work  each namespace in use needs to have the `use_sim_time` variable set to switch the nodes in that namespace. Since this change causes us to have 3 namespaces (`root`  `global_costmap`  and `local_costmap`)  we need to set it in each. Here is the command line I use    ```  ros2 param set /gazebo use_sim_time true ; ros2 param set /global_costmap/world_model use_sim_time true ; ros2 param set /local_costmap/local_costmap use_sim_time true  ```
ros-planning/navigation2,407,2018-12-03T21:42:14Z,2018-12-06T00:01:39Z,True,2018-12-06T00:01:39Z,eda2e64f137b8006bd98df2c1780d07e6001bd16,5,2,f5d19d0c9d4e56f9d61dfeeb43b31c3f8b3774ea 5b2a240b2e66debecdb06fcd06796070299d9375,,Fixing dwb package linter failures,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #334 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Fixed linter failures in dwb_core and dwb_controller packages.  * There is one more failure in dwb_controller due to the parallel planning code. It should be fixed with a change @mjeronimo will introduce soon. Then we can enable colcon test for that package.  * Also enabled colcon test in the travis build for dwb_core and nav2_amcl since they are both passing.  * This depends on #405
ros-planning/navigation2,403,2018-12-03T19:08:07Z,2018-12-05T21:05:42Z,True,2018-12-05T21:05:42Z,3ecf53b6810ff15b85b48e24be09c2477122a20d,3,1,58fbaec48de082bab06afbb8481170c4890a98d2,,Make nav2_utils pass colcon test ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | Resolves #219. Partially addresses #334 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Fixes uncrustify issues in nav2_utils  * Verifies copyright test is disabled.  * Enables nav2_utils testing in travis.
ros-planning/navigation2,402,2018-12-03T18:50:18Z,2018-12-04T18:09:47Z,True,2018-12-04T18:09:47Z,d61d465f245f11dcd163b0905eb2252cff7c829f,1,1,7d0f53485cb90944ebb3a9049e854d3c6252253e,,Remove the old message filters dependency ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | Resolves #274 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 in gazebo |    ---    ## Description of contribution in a few bullet points    * Removes message filters from the additional ROS 2 dependencies. It is part of base ROS 2 now.
ros-planning/navigation2,399,2018-12-01T01:28:11Z,2018-12-07T22:02:33Z,False,none,71b324a00b581f7858b9e1a5bc385c7645b1a067,5,6,874c73fe04320c938ba3527c6eb9bd9ad37a30bd 122a6a95b9e2d22571742771af093c1f4acc9e54 005c835cd787a2fdae57954d46f6d87b7ce71856 40b2eb52b00670db718fb9641add725b73c52d00 1b59451f538bad7fe94306bb00fb50071c47e378 2295082bfa63b0e01e4ab505d8036dd636d1ada6,, WIP Enable obstacle detection,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Turtlebot 3 Gazebo |    ---    ## Description of contribution in a few bullet points    * Adding these parameters enables obstacle detection in the local costmap. It still needs a bunch of tuning  tweaking and testing to get it to work well. Right now obstacles get detected but they do not get cleared.  * This builds on #394. Only the last commit is relevant to this particular change. The rest are part of the other PR.
ros-planning/navigation2,361,2018-11-26T19:30:45Z,2018-11-26T21:39:43Z,True,2018-11-26T21:39:43Z,f7bdb66d7a26bf024c60d7c3211a3f00e980b065,2,1,4d99c7319a368429096c3cb5bed61de7ff71e8eb,,Removing dependency on custom ros2 launch ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | Resolves #285. Resolves #348. |  | Primary OS tested on | NA |  | Primary platform tested on | NA |    ---     ## Description of contribution in a few bullet points  * Removes the dependency on  the customized ROS 2 launch tool.  * Removes the obsolete launch file that still has the `TimerAction` actions
ros-planning/navigation2,139,2018-10-04T22:29:20Z,2018-10-05T19:35:05Z,True,2018-10-05T19:35:05Z,e20af48177171ef8aa15b14f817bc90d92e549f0,2,2,05c14100900075137e3681c641377a1b5a577b88 f7c5ee5cfc8e462a0147ce5ec7f32b89fcdb25ea,,Adding time delays to launch script ,To use this updated launch file  you need to update your ros2/launch repo to point to the version specified in the change to the repos file.    We can change the repo back when ros2/launch#144 is fixed.
ros-planning/navigation2,130,2018-10-02T23:09:36Z,2018-10-03T19:15:17Z,True,2018-10-03T19:15:17Z,0fd3f69454d9bb111d3025bc8599f6f305cb5237,1,1,8808ae61a3c1569bba6fdbcbea7d3b2a01c48aee,,Making the path to the test_map pgm relative to the yaml file,This should make the test_map.yaml work on other systems.
ros-planning/navigation2,387,2018-11-29T01:43:41Z,2019-01-02T16:55:30Z,True,2019-01-02T16:55:30Z,77e2d95717dfb4197cbdd25d0dc892130250ab4b,29,11,ef5769d26ec0b7838aaf8981128d622ea9b3d0f5 41d09ab4a3852158347c1b3fe7c256ce54ec07e3 d3dfeb80e7c5e4961f6d301fdd421d214d72abe6 1ca96a0571a8242368294bb1e0aec9ce5633aa37 fd534d3f90e98e5dc1ece000d27a34d8796176d5 0503839896853d6f40a367c32e562928de80bdc8 3dba70e2905c6457fac2267446a002434d1cc895 f4ea3bb284939eba47a49d075d9f0a0b1e1dd4f8 e65a073628ef06b9b9efa9b523b54c3497c0384f aea06119b97832e8279e572d201cbe21e8825b97 48da70502e7336a0f546c07e07b6d7151e3d8124,costmap_2d@1 - High, WIP Port of nav2_costmap_2d tests,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #121  |  | Primary OS tested on | Ubuntu 16.04 |  ---    ## Description of contribution  - Adds port of costmap_2d tests including     - footprint_tests    - static_tests (the code in this test is commented out in the original navigation stack)    - inflation_tests    - obstacle tests    - costmap_tester (ported but not enabled until rosbag playback is available)  ---    ## Future work that may be required  The 'module_tests.cpp' is not being built in the original navstack costmap_2d  so we should consider porting or deleting after investigating what it helps to test. The test of the 'costmap_tester.cpp' seems to have been launched with a rosbag and the 'simple_driving_test.xml'. Rosbags might not be available now  but we should investigate testing the `Costmap2DROS` in a full system test      ---
ros-planning/navigation2,453,2018-12-08T01:43:03Z,2019-01-02T18:26:52Z,True,2019-01-02T18:26:52Z,15a792f3ca120cec0ff2012853113148d66f1457,11,10,acfd1782e5aad5f6590027fde40f3a05d8023bd4 6f434b15183b65d39798bbc3300cf2e150f1003e 225168542664ec2f88e8834c4db6493a4138d5db c543d76cab81b0716cbe9e1decf168fb8d92abb8 1767bf5b31fdd4bd7cdd345928b076ffda366d08 53b866e764bd2566338a2156a444ade7a90be57b 9358617d1398ea274dd752dbf410344f7534576c ea7a8ac4e659aa44135c421a0ca3469817b64892 bc68bb4dc9d1dd828444c32f19ca6eded15fcd5e 03f5ff27beaa9c74ddb3628cc7b14298f32e8201,,Add system tests to Travis CI,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    Adds the system tests to Travis CI    ## Future work that may be required in bullet points  This is WIP until it passes CI reliably enough to enable it. It will probably require adding a 'retry' statement.
ros-planning/navigation2,510,2019-01-02T22:09:09Z,2019-01-08T00:47:33Z,True,2019-01-08T00:47:33Z,fed34b84765f49283d5acc06f117abec0e89439e,1,1,c8c9f3eb0ca6c8fbd58b8ac8f8eb6fc042292cb5,,Updating travis build email list ,## Basic Info    Adding @crdelsey and removing @bpwilcox from the travis email notification list.
ros-planning/navigation2,360,2018-11-26T19:20:55Z,2019-01-10T19:18:53Z,False,none,99d8db39e7abbca774759027704fdd4826f0ae54,1,6,251e9efe6c3bc435f0d4b377c56b658fc45e0c61 33523f64e4f64daaea79809b5f0fa81268653cdd 7f14b89f1a9454577a531beb775e6e1641ab934e 7f7e86c78760ebec7b5ebbe71cfa800eb0ef1147 e9be31d161332f7325ec1077d78a94f390aa674f 59e671f0267d61a4baf0df2df32eeafe5e2911e5,,remove angles again in rosdep waiting on next Crystal sync ,Addresses https://github.com/ros-planning/navigation2/issues/345    Needs to wait for the next Crystal sync to be in main (out of shadow-fixed)
ros-planning/navigation2,523,2019-01-11T22:28:37Z,2019-01-12T00:08:48Z,True,2019-01-12T00:08:48Z,82fdc1c61ed17273cd4aedff1de2b4204a7d7eda,1,3,6d6b15b66dac6f4bd77d4a4960a7ed6ab0fdffc1 67a4ed9465fbb9dc24f5e4016149ca9239b760ef 182616091511165e3a377e9dd225064f25a23738,,removing rosdep cache for new initialization,A couple of things changed  rosdistro2 has been homologated with its upstream + container may have been updated and didn't remove the rosdep initialization cache
ros-planning/navigation2,513,2019-01-04T23:15:50Z,2019-01-18T19:20:59Z,True,2019-01-18T19:20:59Z,84b85da5f523cd26f4c23b88d6f7424c2e6422ad,2,5,344cf5dd8786fc8fbac21bd0aa2e7c86865126e0 a49f6205c8c6a756faea37b0b2a23650d0f94e83 fba24c148bcfcb5e39dc3608311de953658888c7 d69a7e789a053c1c01726928b400fcc0647a96b5 b8d80102ba183acdc3934c87068dbbf2cdf7f22a,,uploading and tagging docker images to pull,Along with deploying versions as zips  we can add this to the mix so that people can docker pull the latest software or a specific tagged release that's available as a deb in apt    to be squash merged
ros-planning/navigation2,527,2019-01-18T21:38:52Z,2019-01-23T00:48:06Z,False,none,5d058bfedae5b799d2a9fb584a2fe31daf71db6f,1,1,c753747ae347dfb2433cc650adc172d062592492,,Disable unstable system test in Travis ,The system test is failing far more often than the 1% predicted. This is causing PRs and the master branch to show they are failing even though the fault is not part of that change.    This change disables the system test until it can be made more stable
ros-planning/navigation2,526,2019-01-18T20:04:16Z,2019-01-25T17:58:06Z,True,2019-01-25T17:58:06Z,1ae4a5493d7d9ddc3d0d1cc814050da8699b2e0d,1,1,9614dc1dd456ed9c74d1380a52f4e54e1c4be5ff,,tag docker container so it registers to the repo,Addresses issue I noticed where the image we built doesnt match the push repo name. It may work but it's good to be explicit and one of those things you can only test after being merged. Master is still failing due to a system test failure
ros-planning/navigation2,532,2019-01-24T17:56:40Z,2019-01-30T17:51:25Z,False,none,f871de716e5fd81e2c2301b66ef25a40a0b28de0,5,3,573c76ee4cd15efd6e927c044b72c296dbb746d5 73806b472a92313f72105284e7a5348e4efa454d c7508638f13d08ca54863121c3a2f7e87590196f,0 - Critical,Workaround for logger exception,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Turtlebot 3 in Gazebo |    ---    ## Description of contribution in a few bullet points    * This works around ros2/rcl#375. This was causing our system test to fail consistently. Our system test should pass again with this workaround.  * This replaces #527 as a better alternative.  * The problem with this PR is that the `use_sim_time` parameter cannot be changed from the command line. Instead  if you want to use real time  you must manually change the nav2_params.yaml file. To fix this  we need to upgrade the ros2 launch tool  which is in the works.  * One last point. I did not apply the workaround to the map_server node. Due to fortunate circumstances  this node is not affected by the issue. By not applying the workaround  we are able leave the map file name as a parameter to the launch file.
ros-planning/navigation2,536,2019-01-25T00:29:06Z,2019-02-05T22:10:47Z,True,2019-02-05T22:10:47Z,3f65576a98330de0cb832d2c344474b2b604142d,51,2,bdef28f4fd7916e55e442e1174b3106b5eb0fa1c be15cd8fa2aa96ae81c27197ad55f291663f2e7d,,Factor out basic cmake common code ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * There is duplicated code across `CMakeLists.txt` files throughout the project. It will get even worse as we add code coverage capabilities. This PR creates a package where we can put common cmake functions and macros to reuse across packages.  * I factored out the common preamble code across all the packages as an inital use of this package.  * The dynamic_parameters package had a special case pre-amble that disabled the sign-compare warning. I re-enabled that warning and fixed the sign-compare issues in the code.  * The costmap_2d package had a special case pre-amble that disabled all warnings. I re-enabled the warnings  however  there are more complicated fixes in the code  so I disabled the specific warnings that were coming up  leaving the actual fix for a future PR.
ros-planning/navigation2,558,2019-02-06T19:02:38Z,2019-02-12T03:40:58Z,False,none,b76eb024d201dd41dae42555c189d4a59ba71a43,3,3,527ada0e50665ecbd0065038c89ea24ff3192337 b6f97fada6e6f9f72a5b0e0793313e585813a830 6130f359f526b720181a6605970e87d65b9da793,, WIP Remove unneccessary additional ROS 2 dependencies,  ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #345  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Removes `angles`  `behavior tree` and `gazebo ros pkgs` from our extra dependencies. They all get pulled in by `rosdep`
ros-planning/navigation2,560,2019-02-11T21:38:33Z,2019-02-12T17:32:09Z,True,2019-02-12T17:32:08Z,0deebc1dbde0c206c6d39e316d2b3cf1c1f917ac,4,2,828a388fb0c91e8a8bacfbed837a35eb901b2a83 0436639a0f01e04bd22d82dc1a5b14b2b21c6637,,Fixing the broken build,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  NA  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Turtlebot 3 on Gazebo |    ---    ## Description of contribution in a few bullet points  * The build is broken due to ros2/rclcpp#622. This PR fixes the build.  * I temporarily changed the upstream gazebo_ros_pkgs repo to point to my fork until ros-simulation/gazebo_ros_pkgs#887 is integrated.  * I added the gazebo_ros_pkgs dependencies to the `ros2_dependencies.repos` files to make it easier to work with them locally. No need to use rosdep to build them. This will help avoid bringing in lots of ros-crystal dependencies in the future if their dependency list every changes as noted in #558.  * I changed the image_common repo to point to my fork until ros-perception/image_common#120 is integrated.  * I reverted #538. It is no longer required now that ros2/rcl#384 is integrated. Also by reverting this change we are no longer affected by ros2/geometry2#92
ros-planning/navigation2,553,2019-02-02T00:52:00Z,2019-02-13T01:04:46Z,True,2019-02-13T01:04:46Z,357e3030ac968fa32869ff751e20f2d7bbf0aeb8,8,25,12e56ac68e8860f589eba28c8001c4b38cf0736c 857ba30022bd1e44f030781f4ce870c80526b436 ac4fe7f610541faf16243b93f8e7dd89ef253ccf a8e772f5ed8fdefe3ea9db5bca64bbf375782142 f7a28df77c18f54e8dfc637fba6ce89f50d6c469 d0d826411a773fa4a452dd1735f7841d6d3925de aa7678300c20e0005eb721407a1d9453cf274ce8 3d7165308f7240c5119f53e6a64c6cfa0c8c6d68 0b38026319f2ca4c8069c473eaea39970a535a86 4225761fae6512866b072e28ef09d8c127f32eb5 9d436231e86840357effba39a99621895515bbc4 ad95353f4442a631b3dab903d2be2254fe0ade62 a48a7b5fb46d3d6da19984ca4b98ccec1772f98a 9f13e554d738aa4f9c3c476d3d7137f21169066e a5f5f44ed40d5ca696c1d553b0208a0aac879263 a3404b84b491683652b85425404eac7769e2a62a abea8020829d18b4351a0048bbe538827e98fa23 68aea5607a072442838c6c6a8996f3d6b403f786 72f285625218ee2cad7805f2a2871ecd494a3e77 05215775f8c305a2c97bf072b12b3dad354f9955 11acdb724875f50df483087d2206253cb57174b8 f124aa30a9477ced3712b4682be27bd6090e31e8 70d27834a322fbb82f7a22edf3e143598e1b934b bb856c64e7f1a91976bb05f4f7e2f906f3392c2b 6cf7498f79818c0ca06d130c8aecaff1a6c05e7e,,Adding code coverage report to build,## Basic Info    Adding code coverage generation to the travis build with a report out on Codecov.io.    * I've split the travis CI build into two:    * a release build that eventually gets pushed to dockerhub  and    * a debug build that includes code coverage generation. The results to that build get pushed to codecov.io  * I added a script to to the tools folder that runs the test suite  so that only one line is needed in the travis.yml file instead of 4 or so.  * I added a script to the tools folder that generates the code coverage data. If you run it without options it generates an html report you can view locally. If you run it with the option codecovio  it uploads the data to codecov.io which generates a report.  * I could not use colcon/colcon-lcov-result on account of colcon/colcon-lcov-result#9  but will keep an eye on it for future refactoring.  * The reports generated on codecov.io are a bit wonky because we don't have a baseline report yet. I think I can't clean up any further issues with codecov.io until we integrate this PR to get baseline data.
ros-planning/navigation2,562,2019-02-12T19:27:10Z,2019-02-19T18:55:36Z,True,2019-02-19T18:55:36Z,4a17d4a03a6a77c63ee91631ab1ed41201dcf45f,1,6,a093c2c8cdc7119d2b20821d48bff9ac93a2dc48 229840188e1449789a5fbae067ece872da424fbb a1365bf1312906702310bdd5471228a2ec1b65c8 8e0c372360dec65f77c58202657467aec1fcf348 e4fe896884cc86a2b20537ee67e2fad38bdabdd4 545bd4002cf34e979925d669c6375f6c538a1dc9,,Add docker file that builds against crystal release for use in testing the crystal devel branch,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | related to #421 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * This new docker file builds against the Cyrstal release instead of ROS2 master  and relies entirely on `rosdep` to bring in dependencies. It is intended to be used to test the crystal-devel branch  and maybe make a crystal dockerhub image.
ros-planning/navigation2,557,2019-02-06T16:54:35Z,2019-02-19T21:47:18Z,True,2019-02-19T21:47:18Z,1c1f4cd71ee55c13ac2864d4a6437bc4f85d87ed,5,5,0decf414597d95c49660b891d52033b3fa5be3fe e90bb5803a30a9aecd892b0d79289d142454ffe2 ef4e056923e56eb2eb039b553636c3bbf8c2eab3 10c47466a243b03caba1e4765928ef8925cf248e b1a594afb80a91ae8d053bf0864cbd2d74d67d44,,Add BT Navigator System Test,  ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #542 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Gazebo |    ---    ## Description of contribution in a few bullet points    * Creates a new system test that runs the BT Navigator node.  * Installs the XML bt navigator config files.  * Enhances the `ctest_retry.bash` script to:    * avoid the need to copy it in to the nav2_system_test build folder.    * display test output    * allow running only one system test at a time so they can be retried individually instead of all together.
ros-planning/navigation2,584,2019-02-26T22:04:41Z,2019-02-28T04:10:43Z,True,2019-02-28T04:10:43Z,ec92a2d9476b0098cb4e5d9dfa2e4acc1bfe3b54,1,1,3551af9fa2e82b229d33ae9c9a955b6773905de3,,Run dynamic params test independently flaky dynamic params test fix part 2 ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #556 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * The dynamic params test fails when run concurrently with other packages' tests. This changes runs the dynamic_params tests independently in CI.  * This is part two of PR #568
ros-planning/navigation2,598,2019-03-07T20:06:27Z,2019-03-11T21:53:23Z,True,2019-03-11T21:53:23Z,e797177fbd8cdec8a8b754a2fb08203b4833566c,1,1,4a1c1d66dbc4e08b357b9cc7e66fd0b1eb12e719,,Adding retries to dynamic params test,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Despite all my efforts  I've failed to get the dyanmic_params test to pass 100% of the time in CI.  * Till I've got more time for this  I'm giving up and just retrying the test like we do the system tests. :-(
ros-planning/navigation2,604,2019-03-12T20:40:23Z,2019-03-13T00:36:50Z,True,2019-03-13T00:36:50Z,db8f4d553d50a53efe2bfac14e5970411f64e429,8,6,d0115a1451deed07809d1c317c0e78d5e058490d f8b2905517c01db91e83e3e0d89b7592e9068e2a bd2d430f67dd73eb5022e8891c3da13030ff4520 a09724c472ebf14b204c013683ae12f824bfd4fb 73b157e7fe4eb482d2c2c74bf618a4d32528dc56 8a8323949678162e14714c7115f7532f9ed97836,,Fixes and workarounds for crystal devel 0 1 6,This consists of various bug fixes and workarounds on `master` that seemed worthwhile to merge to `crystal-devel`.    This PR will hopefully kick of the ROS build farm CI to verify everything still builds ok in crystal.
ros-planning/navigation2,583,2019-02-26T18:48:42Z,2019-03-15T23:22:23Z,False,none,21a0eb9dab60c619a00a04e4bfc2ee18a7b235f9,197,34,e11bb2252a887a1668c00ce97e3145bb362c60b6 e5ffdbf6070cd6b98b3590d5a046db11e8b9c23b e27aca55bcf93e348b89e11140043a06b3a144d2 e86f3036f2844ce84be9c576b0c24f56101a0447 a8566aa9ce9673a88182a5c3de33d6391fc59023 cde28d3fe2839107f4f88647faedf36497a06e48 64653126c3ae8077151536920c7d3b7edc5c8c49 7bb116c138d0bf472af6813df1c44af2f64cd2dd 78e1cf098d40491de84da1bc3555b4713341dbb7 13c7312c91c75f8b9be2568cead3c2ad3edd1754 bab9ae0a483fd13e67ceafde11cc811b4c18acef 81d251ca353eb73b0f29ffdd729dd4a0f359f591 f4c66e36132fe739ba1bdb8d26a1ab7dff982164 23546c465bc4d5c839c3715021cba432611f6cfc 43112f41c2cf88881d2d2c67ac9edea90b00747d 95b112ecbbe9d0f933182f97f203e9870cbd29cf f13430416808773e9a3150f9370f7cf143c7fea9 cd6920d8a0d9c1b529aeabbf01021c0c78e74761 0903407e9c66977dadbe227cfc50a44b1eee100d e7f28c7449dfb03d6de9790e7f1b6ac54b0757db 3d82a1d8e29abb71c85be7c5c013b9379dbb02e0 ec8aeb25c63f599659495369ddc88c80362b40e6 214eb5d4d37fa7b03342237e9d4230da0b5262e5 eeb516ef8032fdb7928c0cc24aaaf20315e66200 d343a89cab14a2bb77fd886245d0dddd178aad12 85fd35d5333973c4f0bcf6b458dcb336263e0e4d 6f650b6b2a405d6be5dd35466381f4af71c051de 393764276f920c2130f482aef7bde8bc738df7b9 5e1ad2670de54c718097ed18e67ebd691ce597e5 f2856d69d1246321a2cbf5bcc67fed3b3cd2052b 8024a265aa168e4492f6b8108e164fbad788451a 52c22a117fd146450f92d656e8e857eeee6b08e8 0483871dbe46989b587b8ee2716e7babaa9e0984 c7f3d51a1462f77c733c040a81daddcd980d1151,nav2_lifecycle,Lifecycle staging 1,## Description of contribution in a few bullet points    This PR consists of the foundational modules for implementing lifecycle nodes in nav2  along with a couple simple modules that use the classes. The lifecycle work will be submitted in stages and this is the first PR in a series.     The code won't be fully functional (and probably won't build) until all PRs in this series are reviewed  since this is a significant and incompatible change to most of the modules in the system. Perhaps we can review these changes and get approval  without merging until the whole set is OK'd.
ros-planning/navigation2,576,2019-02-22T01:23:05Z,2019-02-26T22:54:07Z,True,2019-02-26T22:54:07Z,489e6311f078458db0da683d1f47bddd18e1f865,1,2,8a6961ecdb6cdca1d3bd492b8e1299827d650521 025d4d5e7be8d0e6decf2d93ffc345b9e2dbc581,,Workaround for sliding sideways bug,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #514  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Turtlebot 3 on Gazebo |    ---    ## Description of contribution in a few bullet points    * I set the XY speed limit to a large value. This way even if the Y speed is high in the odom data  the robot continues to have X speed to maneuver with. The robot will still think it is slipping sideways resulting in a maneuver that tries to compensate  but it at least won't fail saying there are no valid trajectories.  * There is maybe an increased chance of collision due to the robot continuing to maneuver with faulty data  however  I see no increase in system test failures.    This can be reverted if ROBOTIS-GIT/turtlebot3_simulations#75 is fixed
ros-planning/navigation2,588,2019-02-28T03:21:09Z,2019-03-12T17:09:43Z,True,2019-03-12T17:09:42Z,32086c4a4c220440bc8da31378348d522bd62979,4,2,1fe52ca222eb167fcec1994bd475080097897250 392e087e2ac4c01e684c663a8bdaf16100d87c38,,Fix oscillation problem and tune DWB critics,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #520  fixes #570  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |Turtlebot 3 in gazebo |    ---    ## Description of contribution in a few bullet points    * Disables oscillation detection on the Y-axis if the robot is not capable of Y-axis motion (eg. a differential drive robot) . See #520 for reasoning.  * Rough tuning of the DWB critics to get reliable motion. I upped the obstacle avoidance critic and the rotate to goal critic based on observed motion.  * Decreased the radius of the robot based on measurements of the model in gazebo.    ---    ## Future work that may be required in bullet points    * Need to sync the oscillation critic changes with @DLu
ros-planning/navigation2,623,2019-03-22T18:43:37Z,2019-03-24T18:13:54Z,True,2019-03-24T18:13:54Z,c4937833b3411828069bd88c79745a73de14ddaf,1,4,88534b454f7d56a0b03257ed939d8a81527abeec ff1d15256276cf156027b6b3fe9a7ccfffad790d 1b657aa5e4c971cd6073c8ec099b973db79883f6 cac2901c05f5c01a305d0d5aad07ecdc3738cf42,,Param tweaks,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB2 |    ---    ## Description of contribution in a few bullet points    * Adding to yaml file some parameters I find I felt the need to tweak.  * The only actual change to the parameters is the ObstacleFootprint.scale. The others are just restating their default values.
ros-planning/navigation2,624,2019-03-22T18:44:17Z,2019-03-25T20:42:10Z,False,none,659721012912e4cd1769235daaf14868c6b87c05,10,3,45a5ef8d86f5800601384132f70689578d97dcdc 66c84d9189ac29fa10fc1a9928efe3e562af699f 367ea29881d8d635ef6fd919c323d85318416777,, WIP Enable Obstacle Layer on Global and Local costmaps,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (fixes #613 ) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | () |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  WIP -- Please do not review.    - Created a method in obstacle layer to enabled both Global and Local obstacle layers.       - Local costmap gets enabled at start. The global costmap gets enabled when robot is localized to prevent putting garbage on global costmap.  - Factored out isLocalized method to util directory to check AMCL pose to determine if robot is localized or not.     -TODO: isLocalized method still exists in is_localized_condition node within BT  will factor this out on a different PR.            ---
ros-planning/navigation2,632,2019-03-26T17:02:31Z,2019-03-26T20:48:15Z,True,2019-03-26T20:48:14Z,1a8e823cb672f6642b37486403c15c66bd496ce3,3,1,8f4543ca80e5f588c91fd24a58d28a01751685c6,,Add parallel planning and obstacle layer ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Turtlebot 3 |    ---    ## Description of contribution in a few bullet points    * Switches the default navigator to bt_navigator with the parallel replan configuration  * Enables obstacle layer in both global and local costmaps. This part duplicates what's in #630.
ros-planning/navigation2,630,2019-03-25T20:52:44Z,2019-03-26T20:39:10Z,True,2019-03-26T20:39:09Z,a76e01d3b1a5a9fe5caec18be29705132764ce59,4,6,0f40a58ba87d672c2f19d03cb2b0e05135533fec 73c24bcca45c8d3ed79d42989c2c02b3c8a8a679 4e50546c962ca1253ccc0bc65da19554292a1f75 8794c9597a36aa7388cf93ee6cd053332245c531 cfa170c9b95c21343f2475653636b78de46a46ba 52f382cde0b79067c678cec7728e53750475c8ce,,Enable Obstacle Layer on Global and Local costmaps,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (fixes #613) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | () |    ---    ## Description of contribution in a few bullet points    - Changed AMCL to not broadcast transforms before initial pose is received either via initialpose topic or later when pose from server is available.      - This way robot knows it location with respect to map before putting obstacles on map.  - Enabled obstacle layers for both global and local costmaps    ---
ros-planning/navigation2,643,2019-03-29T20:38:29Z,2019-04-03T23:52:54Z,True,2019-04-03T23:52:54Z,7b4cd35abd71d44547e286fcda425f368a5229a6,1,2,bbef5579184f5dcf40934cb7d25e7916f8b149f1 5c4eb35ebaa47886d83de1049ad4ccd859ac92d1,,Disable failing dynamic params and motion primitives tests ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on |  |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points    * Disabling the motion primitives and dynamic params tests. They are constantly failing in CI for yet undetermined reasons.  * If you run colcon test from the command line on the workspace the tests will still be run. They just won't get run through the run_test_suite.sh script.
ros-planning/navigation2,105,2018-09-26T23:53:36Z,2018-09-28T17:40:49Z,True,2018-09-28T17:40:49Z,c4f8b65eff8f9e6fa9f50f9207e8c454fd7cbd30,13,5,87f054bbe68a2d3b75de2b00719ada05b82ea211 bdf885ea622ba0b7e365e145f14dbc9744874ca0 1b6a7f89d4f9b2f772347384d450376daa5f46b8 cd302b9831fed9ec7038bcb441897e7d13679864 ac9431a12961b3e54be848606e408492398f74a2,,Amcl integration test,Simple integration test that checks to see if amcl is publishing a pose that is a number. Addressing issue #53.    As we continue the re-factorization more tests will be added.  Also  planning to create a separate test to measure algorithms performance.
ros-planning/navigation2,669,2019-04-18T22:58:25Z,2019-04-19T17:29:20Z,True,2019-04-19T17:29:20Z,3ec2662dd9bbc29a26023833980fb47eb1106a3c,1,1,6252122aaaa03646f20dc81653af7dc2f2cb98cb,,Tuning parameters for turtlebot 3 ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu 18 |  | Robotic platform tested on | Turtlebot 3 in Gazebo |    ---    ## Description of contribution in a few bullet points  * Default linear_granularity was 0.5m. This seemed too long a distance to look for obstacles. The turtlebot seemed to clip corners with the setting at the default.  * Replace the obstacle footprint critic with base obstacle. When using the inflation layer in costmap to make obstacles bigger  base obstacle should be sufficient to prevent obstacles. We also saw strange behavior with obstacle footprint that needs to be investigated further. It reported the robot had collided when it clearly hadn't  even according to the costmap data.  * The turtlebot3 waffle is our main model we test with. Make the robot radius match that platform rather than the burger model. Since the wafflehas a larger footprint than the burger  it is a safer setting anyhow.  * Changing the inflation cost scaling factor to match what's used by the turtlebot in ROS 1. This setting causes the robot to give obstacles a wider berth if possible.    ---    ## Future work that may be required in bullet points    * Investigate why the obstacle footprint critic reports a collision when there isn't one.  * Investigate why the inflation layer inflates such a small amount when using a footprint polygon instead of a robot radius.
ros-planning/navigation2,670,2019-04-19T00:35:15Z,2019-04-22T16:43:54Z,True,2019-04-22T16:43:54Z,af739b58e27effdb3166154dd0566316072072d2,6,8,19e65350a3eb281d82ce75448c9ed8a946197a1c 1a3ac459cb07db35d0675a1c94c888fe822de585 fa541def4b0b51b32cf472a94a01ff6d7ef63645 704e1b7d0109a1fdf1228a38e58ea8f884b1234c a6a25235fcb3d4b44d0796a70ae9312ebd1174a0 4ff5af5d0fe70dd6822cf02d7cc6ad86b9afa64d f4c045dd0ff948e92987b4d83d029ea4b53ef246 abd73f18be853978f7a41fdeea017b6cc8ed1af0,1 - High,Enable Behavior Tree navigator with recovery and retry,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #642 Enable Recovery Actions |  | Primary OS tested on | Ubuntu 18.04) |  | Robotic platform tested on | Turtlebot3 in simulation |    ---    ## Description of contribution in a few bullet points  This changes the default navigator to the bt_navigator and adds a behavior tree for running with the backup and spin recovery behaviors  and a retry set to 7. I know that's high but in simulation  it seemed to work most reliably that way.    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    ## Future work that may be required in bullet points    - Add parameter to the launch files for changing the behavior tree XML file. I tried to do this but was getting errors from launch    - Change backup and spin motion primitives to check for clear space and ensure no collisions occur    - Add a clear costmap motion primitive and enable it as part of this     <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    ---
ros-planning/navigation2,677,2019-04-29T22:23:56Z,2019-05-03T22:25:53Z,True,2019-05-03T22:25:53Z,826163201f906ecf24586029742b04377d17e282,19,5,bd8da4792149dce461567036abe6ce084b290fc5 fc05e72bbb4263969ffe6307d3be7206fe7bb110 ba1df6cade12e7dda47e0cd5d1088a7f9c8d0bbf 3793f02ef9b8f11a0f5e1f07da3dd19ff2b52017 8ca4c45e7e6beb1b06590bd496c65bca69b56216,,Add default NodeOptions to fix new parameter changes,## Description of contribution in a few bullet points    - Temporarily fixes master branch after rclcpp parameter changes  - Adds default NodeOptions to nav2 Nodes with parameters  - Defaults to automatically declare initial parameters (from yaml) and to allow undeclared parameters  - added function in nav2_util to return default NodeOptions object  - Temporarily removed error for warnings to allow for deprecated parameter functions while we are in transition      ## Future work that may be required in bullet points  - These changes can be removed (or modified) after we integrate lifecycle nodes with parameter changes
ros-planning/navigation2,684,2019-05-03T21:15:05Z,2019-05-06T16:02:01Z,True,2019-05-06T16:02:01Z,815572c76fed7b61ae36550efe74a8471dff9dbc,1,1,d8109c5a1dd6ce205bf9cda2c3d28b7669709a67,,Restoring proper upstream repos ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Gazebo TB3 |    ---    ## Description of contribution in a few bullet points    * These upstream repos have taken the fixes I provided and build against the latest ROS2 code now. This change uses the official repos instead of my forks.
ros-planning/navigation2,693,2019-05-07T22:33:57Z,2019-05-14T16:56:10Z,True,2019-05-14T16:56:10Z,841c4aa08ab672fc8d182a50c8635e6fd53e28e1,1,2,0ddd98e8e4d0411e12c6e47486ac28e556925a8b bc7a45c3c8f8cf19e9f7d7fccea20c3bf340e3b6,,Default to a release build if unspecified ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Sets the CMAKE_BUILD_TYPE flag to Release if it was unspecifed. Without this  if the user doesn't specify  they get an unoptimized build with no debug info - the worst of both worlds. I'm defaulting to Release because if someone just downloads the source  builds and runs it  we want their code to run as fast as possible to avoid them reporting performance related issues; robot motion can become unstable if the controller doesn't run fast enough.    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    ---    <!-- OPTIONAL -->    I'd like to request maintainer: <blank> to review this PR.
ros-planning/navigation2,674,2019-04-22T19:52:28Z,2019-05-14T17:05:10Z,True,2019-05-14T17:05:09Z,de07f90aa8f67cc5e508d6928f3659d54dce9cf5,5,5,2ab79963ba9fa514a59e08301e3471ec1a6dd437 4283819ce6353ed6acd7689aa9621be96ac64859 ee9de375eac2915d920e7f0737075966bb2c1ecf 920bac12b287502ca3e9cbe52267aff9d52d7f2f 2f93bcaaf87e7f5c915314a2097c6d080e8bb093,,Filter out IMU noise,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #514  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Turtlebot 3 |    ---    ## Description of contribution in a few bullet points    * Velocities from an IMU are likely to have a small noise component. This noise was getting filtered out in individual trajectory critics by removing any values below a threshold value.  * This PR removes the filtering from every critic that cares and replaces it with a single place to filter the noise out.  * This PR also makes the noise filter threshold configurable in X  Y and theta.
ros-planning/navigation2,721,2019-05-15T16:45:19Z,2019-05-16T00:31:18Z,True,2019-05-16T00:31:18Z,af6b8cdd50c321274fb991936cb9813db26ad485,12,3,1687dfb828fba371332ddb213c26e5294d25b440 8a0eb3d5815b166b18da3a8df1a500a22ae2a44c 5e20e1a50236bd3157633a34e08c4042e5733071,,Remove simple navigator,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | N/A |  | Primary OS tested on | N/A |  | Robotic platform tested on | N/A |    ---    ## Description of contribution in a few bullet points    The simple navigator is no longer default  nor is it uniquely used in CI. Given that we now have BT running in real-life  I think its time to deprecate it where the default XML is "similiar enough" to the simple navigator logic that it all works out.     I started to refactor the simple navigator and about half way through I realized it really didn't need to be around anymore  as the default is BT now  we have a couple BT trees that we like  and this piece of code isn't under active development / use. If we're going to point people to the repo to test it out  we should point them to the thing we want them to actually use.     I think keeping the simple navigator was a smart move when this project was started  but given recent developments  we can safely remove it and make sure we don't have people looking left when we want them to look right. It took me personally a few weeks to get on-board with the behavior tree base implementation  but now that I understand more  I think it's worth not confusing others by giving the option.    This is also in theme of my PRs this month of trying to "simplify" the repo to new users.     Let me know what you think. I dont expect this to be merged out of the gate  but a catalysis for discussion.      ---
ros-planning/navigation2,697,2019-05-09T02:05:24Z,2019-05-29T20:45:20Z,False,none,379f53a90d9f41ebb40b7785c8301ca421f8ade9,8,5,fedb696b19dd231f0693b8175726428fd7c5efb8 04734b5c45526ebcb3bdf674bcc6cf29d960d090 98317d2c260aef66f0b84629c7aac7605e4b2e1a 5a31d66222d7950d14e84f6dd760d161b976389b e2c82185e743f1fb59846abfe416e9354f9b67f2,,Added a custom launch substitution to modify YAML parameters based on launch params,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 in Gazebo |    ---    ## Description of contribution in a few bullet points    * The existing launch mechanism in ROS2 does not let you pass parameters from the launch file to the node without renaming all the nodes in the executable. This causes us problems because we use many composed nodes.  * This change adds a custom launch substitution to modify YAML files with launch parameters. The idea is you have a default params file for the project (nav2_params.yaml in our case). You then have options passed to the launch file that should modify the parameters. This substitution will find all keys by the specified name in the YAML file and change their value. eg. You specify substitute `use_sim_time` with True  it will find all instances of `use_sim_time` in the default params file and change them to true. It changes a copy  not the actual file  by the way.  * This doesn't currently support scoping the name. Eg. if you want to change the `enabled` parameter on one plugin to `true` but leave the others as `false`  you cannot do that currently.  * The name RewrittenYaml is kind of lame  but I haven't come up with a better one yet.    **NOTE**  You can review this commit by commit to make the review a bit easier.
ros-planning/navigation2,665,2019-04-16T23:12:49Z,2019-05-17T22:13:35Z,True,2019-05-17T22:13:35Z,2056c595eed97c88c7d887d6b5c56f9f56f3e537,17,7,8d8bcc3610baf1f877eee1429976e649892d5a7c 4a0bd90f701a4bed7ca32ad37fdbb197b157b414 4a35a3e9d405fb7f082585014b4ff52cc92faae3 ce9f0b773eae7bdc0216ca78e4fb593a28784d0d dd59a7b79b718721021ce5d0049e079216484d57 d5c9172ec8510538a87b97987efa7037a4b4a751 80d7c3ca4d20513cdee8f2ab3382505b33abe0aa,nav2_lifecycle,Lifecycle enable the nav2_system_test directory,## Description  * Add a bring-up/shutdown test to the system test directory    ## Future work  * More work required on some of the tests here: localization and planner  * Need to port the dummy controller and dummy planner to ROS2 Actions
ros-planning/navigation2,717,2019-05-15T01:20:19Z,2019-05-17T01:02:44Z,True,2019-05-17T01:02:44Z,cd532cfeb6b5fdfa614b8a2b2ddebeda500229d5,6,1,0a22b7f6af08319a126fe71f19995897db46a34b,nav2_lifecycle,Use namespaces on costmap nodes so that pub subs can co exist,## Description    * When implementing lifecycle nodes I removed the namespace from the costmap(s) not realizing that the namespaces are required so that the publishers and subscribers from each costmap instance remain separate. This PR restores the namespaces and costmap node names as before.   * Not using namespaces for the utility nodes (those that are created simply for the purpose of calling a service  for example)  * Updated the lifecycle manager node name    ## Future work    * There will be subsequent changes to the nav2_params.yaml file as we rebase with the master branch and get things in sync
ros-planning/navigation2,667,2019-04-16T23:54:17Z,2019-05-14T16:13:22Z,True,2019-05-14T16:13:22Z,abf33b895a85142a0c6efb084bc5391078eb45b6,8,2,cb12316a1bbbfc3e19ebc2d21f9e3e03ade6a2ca e65929ecac28995d674a955d503598ed6c675f84,nav2_lifecycle,Update the launch scripts for lifecycle nodes,## Description  * Use ExecuteProcess directly for the lifecycle nodes to avoid the broken LifecycleNode class in the Python launch. The Node and LifecycleNode Python classes should not assume that there is one node per process. They should also not rename other nodes created in the process.   * Also  specify use_sim_time in the parameters file to avoid having to set it manually    ## Future work  * Could fix the Node and LifecycleNode Python classes in the launch package  * Could separate out the use_sim_time parameter settings into a separate parameters file and use cascading parameters file to specify whether or not to use_sim_time. In other words  there is a base parameters file that is used and can be specified on the command line. Then  based on a command-line argument  use_sim_time  could use a second parameters file; either one where all the nodes have use_sim_time=true or another one where use_sim_time=false.
ros-planning/navigation2,772,2019-05-30T00:11:01Z,2019-05-30T22:06:53Z,True,2019-05-30T22:06:52Z,e4452eb04002e71d801c5b87abb1e7866bdd550c,12,9,69af159e14dbc8d5b80969671531b1cf5b7530e3 d10afc25c45a07350fbe6ab2b75b22380c30ef3c 5f507c6dcbcbaa0c4413f7cdd8fa7d5a44d91300 020428939b5bb09410519301412c210119bb1264 a5d9fa950dae05bf822f25dd10566671312b009b 0a31ea9b23b5a220e2c25db0c3aa23f18efa8998 2f69fd7190acf1e44062f93e3865cd85cc6a7e88 53462349e71f7dc02979734a2b53a55ecc35bfae 8cfa4cdc530ecdfb2eea74aa3cf7d147455290cd,1 - High@nav2_lifecycle,Modified all the Behaivor Tree s to work with lifecycle branch,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | () |  | Primary OS tested on | (18.04) |  | Robotic platform tested on | (Gazebo and TB3) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    - Modified all the BT's to work with lifecycle branch  - Deleted unused BT's  - Renamed parallel tree to navigate_w_replanning  - Fixed isLocalized condition node. isLocalized condition node was using lifecycle node but Blackboard passes regular node.    Now we have three main tree's.  The first one which is set to default is `navigate with re-planning`  the second one is `navigate with re-planning and recovery` and the last one is `auto localization with re-planning and recovery`.     TODO: #773
ros-planning/navigation2,784,2019-05-31T15:56:17Z,2019-05-31T15:57:14Z,True,2019-05-31T15:57:14Z,cf8fcf2d009548c99b6f71d68f7571009c3e4889,13,10,b547f5fde7b471e6ccfcf24713f7f7bd81d5faf3 75b8892d6b337e82abee0cdc001bb9c355dadc64 4af5011db4cc9eb68c47d023c327dca66c12bac7 a9af0bc45dca6921397bb31bb4ac8d5e50864bbd 5bd1e0d1e8434f10137d4b7d9321e4fe2b32c8ba 5bc686993ebe47823f8db8fa47986713b57ef944 86bee787f743dc7df65a6ef1c20d8627a7819a3c d82e5913658b5624ca6b6a0532e5857255a7a2d0 5279aaa5df44a7ae2227ae423c707fc107ce43d8 41e431f21545017a10280279e6bec4099092dbac,,Modified all the Behaivor Tree s to work with lifecycle branch,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | () |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | Gazebo and TB3) |    ---    ## Description of contribution in a few bullet points    This is the fix to PR #772.    ---
ros-planning/navigation2,762,2019-05-28T20:04:35Z,2019-05-31T17:14:57Z,True,2019-05-31T17:14:57Z,1b4c2403d0869dc3347825b5ce7ffb2433275d6b,2,1,0e0e566fe95e496d26f15082d6d77b0c0b971813,0 - Critical@nav2_lifecycle,Re enable obstacle layer ,This PR re-enables the obstacle layer in the lifecycle branch. The obstacle behavior seems to behave normally in adding observations to the costmap. The qos setting in the obstacle layer laser scan subscriber is also changed to `rmw_qos_profile_sensor_data` which appears to resolve issues with not receiving laser scan topic.
ros-planning/navigation2,745,2019-05-22T00:54:30Z,2019-05-31T17:38:43Z,False,none,eaa493a082631af0aa87126b6858a182db29884f,3,3,203495a2522d02eaeeebba5127e5c4b5ad32c96f 6410347e010c9c1ff781a6ab02c059c7596f2e1c cea8eae766e4ea7c90b9148a7d7620853d734ee7,, WIP Use Opensplice when running system tests,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---      ## Description of contribution in a few bullet points    This is to fix the failing CI due to recent changes to FastRTPS  see https://github.com/ros2/rmw_fastrtps/issues/280    This change will switch the test flow to install and use OpenSplice DDS.    ## Future work that may be required in bullet points    We may want to move this into the Travis file as an argument  so we could even run the tests with multiple DDS implementations    ---
ros-planning/navigation2,794,2019-05-31T23:09:07Z,2019-06-03T18:44:14Z,True,2019-06-03T18:44:14Z,80a1ee4ce49a5d6c798e8a3f7ee35103b0c3d366,2,1,7661d1543ce173c33312631680335787b1d7f722,1 - High@nav2_lifecycle,Enable BaseObstacle critic and declare critic scale parameters,The `BaseObstacle` critic was commented out during the rebase  so it is now enabled. The scale parameters were not seen on the node but given a default in the code  so this PR declares them so they can be tuned in the system yaml file. Now  the robot should actually avoid obstacles and make progress towards the goal with the right critic scale values.    ## Contribution in a few bullet points  - Re-enables BaseObstacle critic in `nav2_params.yaml`  - Declares trajectory critic scale parameters
ros-planning/navigation2,797,2019-06-01T00:30:14Z,2019-06-03T20:37:01Z,True,2019-06-03T20:37:01Z,51bbc3bf9fc084491e66ad46a23bca1ea3cdc123,1,2,cec04b6b82bf7b17229e9b334a4d6ffc24486e4c de89ab31c9b64eaffd09a776e619ad478360bd7d,,Remove apt key from Dockerfile,## Description of contribution in a few bullet points  Per this Discourse thread the apt-key for the ros2 build farm has changed:  https://discourse.ros.org/t/key-rotation-for-ros-2-apt-repositories/9363    This broke our CI builds  with a GPG key error.     This PR updates to the new key and should fix this problem.
ros-planning/navigation2,806,2019-06-05T22:16:05Z,2019-06-06T15:59:49Z,False,none,b2a86e990fbd3a3297f7d2a2fb9f722820e8bfe2,1,1,1e64c978feace0d5085b0c97f852c52acfdb1b69,nav2_lifecycle,Work around rviz_common import error,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #799  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Nightly build tarball used in the osrf/ros2 docker image has hardcoded paths to the ROS 2 build farm's install location. This specifically is a problem for packages that use the ament_export_interfaces mechanism such as rviz_common. When trying to import that package using `find_package(rviz_common REQUIRED)`  we get the error   ```  Imported target "rviz_common::rviz_common" includes non-existent path        "/home/jenkins-agent/workspace/packaging_linux/ws/install/include"  ```  * To work around that problem  this PR creates the invalid path in the docker image and symlinks it to the real ros2 location.
ros-planning/navigation2,798,2019-06-01T00:36:40Z,2019-06-06T16:54:46Z,True,2019-06-06T16:54:46Z,7e463d376492e53f193c931ba45303c9e2990162,1,2,4dee64cc827c6fc92a8917ef08abb04c9d5a61db c20625ec5e7ef9da781534f33c647bfe7f1da980,nav2_lifecycle,lifecycle branch remove apt key from Dockerfile,## Description of contribution in a few bullet points  See #797 - this is the same change for the lifecycle branch    ~~THIS SHOULD BE MERGED ASAP before any other PRs so that we can unblock the build (again)~~    Correction - the build works without this change because the key already exists in the upstream OSRF docker image.
ros-planning/navigation2,783,2019-05-31T14:23:22Z,2019-06-07T18:46:57Z,True,2019-06-07T18:46:57Z,f92c1ebddfc059bc9ca80935225393480be58680,7,15,36cd2cd9f352a216b2b3bae00b2ee65959fcd3d6 e36d5046a1e4b2e39866be7af682dcc8b524e429 68de23a76305fa29b2082127bd3a7de4bc90f234 47c1190c4d57b18250f8976e1dedaa69071a5188 887541968c6f95fb6549ee1612790cadf46f80cd 6ad9fc1b99c544c65123e349d16bbe1f6c1a7877 3d13f5d92b9f79e5e206aa3ae8ceeb738b33d232 b519defe6b0f33d6652e060ed50eafb4fdf9f9d7 ec19703ceea9275db9139e4475679fd224327d54 c78d1122bd4d6f8fdd4e2e3ba275e768a9de4437 ceb2afe1dff3eff3894c92229796f7bb5e1f281f 60505796469dc89339a17e65ad194ca9a78ed705 33177ef4c83611c673c7d5dd08dd75cd253ad574 7d94cfa38bdb213c89d9c7b42b6549a707c44c4b b16ed83d9ef8abc86244be08f236350af60cd56c,0 - Critical@nav2_lifecycle,Enable bt_navigator system test on lifecycle branch,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Description of contribution in a few bullet points   - Enables the bt_navigator system test on the lifecycle branch      - UPDATE: Now uses the `navigate_w_replanning_and_recovery.xml` behavior tree   - DISABLES the linters for some packages temporarily    ## Future work   - Enable other behavior trees and change the test to use the default  (DONE)   - Enable the localization test (#795)   - Enable the Planner test (was already disabled prior to this PR)   - Enable the linters again - #812    - Clean up the nav2_params.yaml - #813
ros-planning/navigation2,843,2019-06-12T18:11:52Z,2019-06-12T18:50:47Z,True,2019-06-12T18:50:47Z,e754f42afb7c6109f673d359641c09e84094993e,1,1,bb2ee9deae5735b1fa63f050f609c2129d1c1ebe,0 - Critical,Use_sim_time missing from a couple nodes in the params file,Probably lost these in the recent rebasing of lifecycle against master. In any case  all nodes in the nav2 system should have use_sim_time set. The use_sim_time value can be modified with a command-line parameter to the launch script(s).
ros-planning/navigation2,837,2019-06-11T15:37:49Z,2019-06-12T18:54:22Z,True,2019-06-12T18:54:22Z,28f6dedce2c9a0f2d594b1ba4f3f20961fb521e0,17,1,e650149af4391619f9f2300d9c8eb6c65af05cdc,,Remove the nav2_mission_executor directory,This functionality is being removed from the nav2 repository and will eventually be revived in a separate repository. The plan is to first pull out the generic Behavior Tree functionality into a separate repo and then build a mission execution system using this generic BT functionality  also in a separate repo. Then  we will be able to span navigation  grasping  and other kinds of tasks  all coordinated using BTs.    Also  we have a general "background thread" to reduce the number of directories and consolidate  where appropriate.
ros-planning/navigation2,852,2019-06-13T19:42:29Z,2019-06-18T18:03:14Z,False,none,fcc0533b384cfe309b0c43100d8bcee0c8a21287,56,9,2421d74fa10beea0e4776b5f531aff14e0e95846 0bd922b930087d69ee9cfe0fe6c2f5e9c297f6fc 2c0a9b3cca110ed51cc0833c1250fb164940bd52 bf18cc586685db841abf4b1d04a3fabe8044c0e0 d2329bcaf0524778302bb10e4ed472c9a0755498 9cbb60b0f4a15ac55593338df8e065620526b70d b830d0ac7d0fa401019b580e261d74f4baacf007 b7c711f43cfcb9188b31e60184b53d8698f6f495 9edbbef8eb50145065281f1f2f4f41c3d7352728,,line buffer stdout,When launched with launch_ros  executables can withhold logging output at log level "INFO" until termination. So RCLCPP_WARN will get output immediately  but you won't see RCLCPP_INFO until the program terminates. Explicitly make stdout line-buffered so this doesn't happen.
ros-planning/navigation2,841,2019-06-12T15:04:13Z,2019-06-21T00:43:23Z,True,2019-06-21T00:43:23Z,fefa0aa00945c189698862a35baf42b061030884,5,21,1a13faac89a7a8d02d46813e040c7202627183e5 7d7dffbd40ddce28ff852e72f1218c2246dbbd07 beca44a896d2152f238bc48db197cab01e30b7fa 754fe410b449b4d930c87b6d7a2d7c58a389db36 192329a9cea628e74fe9b24c62cc2f8490195c5c 7382daf17c6e08790e929592115dbcd2a8cd2e41 f83d7bb3d62849baeb5f786f9e34b841bcd38c4b 41507f72cadb46ce3b338fe2643e9dc9448a6eab d7316489aa414221b15861e56dc93996de2c9667 e88b822e202198b5d4860c62f737fa08b4362f37 1150ddceb6a02a24eff1aef8f87e3bb1cd0453a0 96fab84d67f3c1214f91a86d1ecd039814e4a95b 4991b47b4a1036f485ba11c818147ae7e811d3bd a58286cb1ad6872fa870f24dc61424e0e7306f5e bc99555a4d233f0c64d38235d859567e782a5da0 ab2973f42746cc8c17eca125c8dff14fd6f27ab2 fb41912b50111b547f70b56be6f7e21f0b049ec3 5df8926317d597f776a6f5112bdb5870a5ecc1cf 15b0784ca7ed9dde60ca37b4d515355fc1f3daf6 2877106d6ae729c6e2b8cc333a71b80389c16975 fa9a42c43bb3071d3671bfd1fc1743a4551b529b,1 - High,Update bringup for lifecycle nodes,## Description of contribution in a few bullet points  This is fixing the nav2_bringup launch files to work with lifecycle.    It also updates the README.md file with the new simplified bringup instructions. Note that the 2 part bringup is no longer shown in the README. The nav2_bringup_launch.py file is all that is needed.    However  this is re-adding the 2 part bringup files:   - ~~nav2_bringup_1st_launch.py~~ -> nav2_localization_launch.py   - ~~nav2_bringup_2nd_launch.py~~ -> nav2_navigation_launch.py    These are not being documented right now  but the nav2_navigation_launch should be useful in the future for use with SLAM packages.     ---    ## Future work that may be required in bullet points  Test / fix the nav2_navigation_launch.py to work with SLAM.    ---
ros-planning/navigation2,720,2019-05-15T15:34:50Z,2019-06-21T15:43:09Z,True,2019-06-21T15:43:09Z,413f4fc735e4de0dc9e2338d8413052c07636f13,8,7,ecc50b0291c70ebe9e388e437f7b11be31ac1891 ff0cdbf68ef6fdc97caf101c44448b677b81351d 776feffdc7304948fcb43eb3afcc670c34907178 bef920f0f820abcb7a9b788c940fe73efda6864a 9ffffe4747bb42a4d97729a0f268374f6b788dcb 61a2e84d0db755777ac6a52c40b97a0323628bff 5bfeca1e8074b2cb8c7feb070505aba13cae877e,2 - Medium,Add support for DWB to use a costmap in the base_link frame,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 in Gazebo |    ---    ## Description of contribution in a few bullet points    * This PR fixes DWB so it can use a costmap in the base_link frame of reference. The main problem was transform availability when DWB tries to convert the plan into the local frame of reference. Typically the transform was not available yet  so this fix gets the latest and checks if it is reasonably recent  where "reasonably" is a parameter.  * The static_layer of costmap is not happy in the base_link frame of reference  so this PR disables the static layer in the local costmap and turns on the rolling window mechanism instead.    ## Future work that may be required.  * Running on the TB3 in Gazebo  a 100ms transform tolerance was not enough. It seems like there is a bug or performance problem causing the transforms to be delayed so much. Sometimes even the 200ms that this PR uses is not enough.
ros-planning/navigation2,606,2019-03-13T19:47:57Z,2019-06-25T17:50:01Z,True,2019-06-25T17:50:01Z,5cfcb35e30ea5d2d68bfcf0842891820dbf82fbf,4,11,442a3a6ae711b335f0073f8d97b1b9c74c69a6bd 29f7b2569a06508bd83b8f0f490fb42059d3a73a 65d2becc86ea87814eb1d2bd7e6d3ebeefff8858 06104e323578e392a49511d306131fc3ed052ce2 3f6028b06e706dae40051664e9bc91702466ba38 9a25729734f5f2e3060acfeb5b99b923070c80f6 80e0ac51c5d527226cd088463bdc5e42cc3d7b2f 156bb7bf9f41be698f2ce23ca31fbf0a8ab0d2a7 5fc802fa6ae8406054690a03c786b20088baa702 faa46e829eae10f4d06cc407361ba70268cbdd1a 31dc6aa89610c406715aa1bee8859abc1d55df9e,1 - High,Adding a docker file to help test for missing package xml dependencies,## Description of contribution in a few bullet points    * Added a docker file that builds ROS2  the navstack dependencies and navigation 2 in one big workspace without sourcing any setup.bash files. This catches any missing ROS2 dependencies in our package.xml files.  * Also added a Pre-release checklist doc.    ---    ## Future work that may be required in bullet points     * There is a lot of duplication among our docker files that needs to be fixed. I don't know how to do that yet.  * This docker file starts from `crystal-ros-core` to get the correct apt sources file and the basic dependencies that ROS2 needs  however `crystal-ros-core` installs a bunch of ros2 packages we don't need since we are building everything from source anyhow.  * The `crystal-ros-core` base image probably needs to be an argument  so we can change it based on which branch we are targeting.
ros-planning/navigation2,840,2019-06-11T18:13:55Z,2019-06-27T18:39:50Z,True,2019-06-27T18:39:49Z,5754cb68a9493dc88e650971e66cb70182e6c53c,1,3,368a255bead3f94989d25164b787c3970a695d81 8b048217ae0d9dafe05856cf074e574148bd7589 abbe0688d63b1804cd2f46d72cc390311eb102e4,,Pass lint tools on nav2_costmap_2d,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #812 |    ## Description of contribution in a few bullet points  - Fix linter issues in nav2_costmap_2d    - Leaving cpplint disabled until we resolve missing copyrights  - Re-enable colcon tests in test suite
ros-planning/navigation2,889,2019-06-25T01:09:20Z,2019-06-29T00:01:20Z,True,2019-06-29T00:01:20Z,328983de5cd7398547e716881edd038896f8c11f,22,20,9a2bd8f28a113c97eabba318538a42ab191eb710 48c55df3e3db79df5bf8f304f554b23303df58b4 dcd2e5df8d93b04dc26912bede0df9107f4276cb cd0d9162330682c74c4377f3785eb84d4e7ad50c a54734705dce6ec04299528d89c8bee6522eb312 2ffbe48d41aef7cd571965d70fecfaa229192c52 a1b7b1f7bd499054891c3871bbbd25abd45791e6 7e8df0dfd3152da1e95ff711fdfb0990bd0b9782 6a4b21754c7546338489750729658f3f0aec698f 89504bec3e55ac56a1f6e4c5f9c7913f00785733 743c3c3c2f418f6e157367c157e9f84f4bfd3f9e 84c30314f8be9cbb8ac279ac5316cc5af6814dc5 7bfe5a3d9e69886555eb6852ce795ad802808f1d 6f334af2fabf6c1887bcf7eb2a608f9450440e8b 7c91f069a6ac24812cb66db52b9014ebc963653c a7a3a82fd4995f6e1cc6f0804e0029ab5d74bf4c 67936d86c74494ab8c2bea9740642ea5ed569d45 9c633acefcf722c85cedbb037d571fc396703f18 a2a413118643bc7533e11f3c4ff3dc332fe54ead da4f12c09ca639d38303e925d4259e665a951412,,Check for collisions in motion primitives,This PR requires #737.     ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #533|  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Turtlebot3 |    ---    ## Description of contribution in a few bullet points  - Adds collision checking into spin and backup actions  - changed default robot radius to 220 mm to reflect [turtlebot3 radius for waffle model ](http://emanual.robotis.com/docs/en/platform/turtlebot3/specifications/#data-of-turtlebot3-waffle)    ## Future work that may be required in bullet points  - Add robust spin and backup tests
ros-planning/navigation2,859,2019-06-14T17:47:17Z,2019-06-17T18:34:06Z,True,2019-06-17T18:34:06Z,cd9bd29007ed2ec293da6dd495f14d7842a5fafc,1,1,d4d0054caa2160858c3fce03b6571ff1a17a9fe3,0 - Critical,Consolidate related parameter sections under a single namespace heading,The navigation2 launch implements rewriting of the input parameter file in  order to change some values  such as use_sim_time  based on command line  input. This is currently required to work around some node renaming that  occurs if we use the Node class in the launch system.    The input nav2_params.yaml file had separate sections for nodes under  the global_costmap and local costmap namespaces. This caused some issues  for our parameter rewriting code (see example below). So  to work around  this problem and to use what is probably a better organization anyways   this PR puts the nodes under the same namespace section.    **To demonstate the current issue:**    Example input section:    ```  local_costmap:    local_costmap:      ros__parameters:        use_sim_time: True        robot_radius: 0.17        inflation_layer.cost_scaling_factor: 3.0        obstacle_layer:          enabled: True        always_send_full_costmap: True        observation_sources: scan        scan:          topic: /scan          max_obstacle_height: 2.0          clearing: True          marking: True    local_costmap:    local_costmap_client:      ros__parameters:        use_sim_time: True    local_costmap:    local_costmap_rclcpp_node:      ros__parameters:        use_sim_time: True  ```    Example resulting output:    ```  local_costmap:    local_costmap_rclcpp_node:      ros__parameters: {use_sim_time: true}  ```  The result is that use_sim_time is not set for local_costmap.local_costmap or local_costmap.local_costmap_client.
ros-planning/navigation2,891,2019-06-25T21:09:39Z,2019-06-27T16:28:15Z,True,2019-06-27T16:28:15Z,7a0e634d06dea0b88960dc01f6a0de84f8c3a680,48,3,309b19e29986817b267a81bf5c9666bae643eb23 c2ca1d38ce696806c58330844e359f4a36b5c93c 1cc35085a7d347451de08b63a731d1de2044eed5,,Rename nav2_tasks fixes 821 ,Now that actions have been implemented in ROS2 and our temporary tasks implementation  is obsolete  all of the task-related code has been removed from the nav2 repo. What remains  in the nav2_tasks directory is Behavior Tree related code. So  to bring the directory name  up-to-date  this PR renames nav2_tasks to nav2_behavior_tree. This new directory will   contain any of our domain-specific nodes and BT-related utility classes. This fixes #821    Also  as a result of running cpplint and uncrustify after the rename  this PR updates a few  minor issues called out with these tools  such as including missing header files.
ros-planning/navigation2,767,2019-05-29T16:12:33Z,2019-06-10T18:21:46Z,True,2019-06-10T18:21:46Z,c530cd89eb2e23cd4e9928c9df9dcdf21eaa042a,263,95,79e65d51ba49976db7754e866d5225589c46cbc1 1c7d3e2b408be5fdad4a1d6cc174082c8a5512f7 c52c62455f52387b2796fc553e0c5f54d9f8c75c 7cd658adfbde496424d4ba4ad0fe87f0a3153aba 510d9034285b1db7954949aed9357689c7a359bb 17603c6f4d7503eae2998a34f9142f61d3725237 a147c3bfbd4a0783461a0e4acda0947c31991567 ba8a031695924e531c92a6068fab773aaf26a69a ebd911055c19ddf3368d52c2a618ff65279a8913 55d71007c35a0d5b92be4500e06ec7fe64826039 cb567188539d0b6669a1e3f8086ffa62a1edf361 1a16e2ff29d9eedb1e062fb6105e3da8cc365014 04b94fa6eeb84acdd0f650cb1ff065592604e81f 08312eb22b86e75dc0d579b06e2885ea505c4151 ef61df10bfac8aba102e1532f48310d27b62ae77 aa4aed3397629c58b758469d7e5f275b4f7876d3 7ab30d02aa4f158dedafa361190d22352a0f679b a6fe4e7a88543f340e8d010417617bc6fba2aa4a ad641cfc38e3e74d52914da6956b0b3cc76f3576 0be555b059005a0c50c2c06745095f5e92a66fcf 0e7f4c4e48edaebf4e3416b1b1bf90b31f6f2d33 79887e5e608472e5c8bdd75405f4f89f75284578 3d8717fd1f8ceb1eae9e36e6f3c06f22aa86b340 60e59ad3da6cffd2181dff41867ea6244dc65369 d673558b5ccdd2498ed3893b07d401db1ea25d4c ac8d34ce619c9b5e17cf6ec62fbdaf43506d61c1 ae767ef10b46ed42f6986c2809feba43d71f52a2 d10add9597b6655d447435af36b284b38b1520a5 379bdfd8abc5c2b69c6653fe291e856e317ee2f2 b0718302daf49c51044e0b9ed355a2065576d592 a1b49678dc62386b7ce9d2347adfa2edc9c042c0 7a056c2a592752b53272aea58f44b0454cffe14d cb8e42f7ea59f4eae09c009c3a38102b6b73f115 383993b25fcc7cecf4daef7f14100397a7536f9c 8feadb2a5bb9d2ca69bd166d8781387c0f4364e2 1ddfd9a70066081c8222722ff7047d44d402d516 9fb12c3fad304e9ce108c82bfd4ea67072419f93 a36d5d4b4e2d2864ea54310fdac18bfd1aecbac0 e639de3cff84c8b1da04d1e015d4e5b710755c2c 3d818c0fd10830d9d03f2463c383b9179a6b1358 3e152eb805c3737363a2f4eaa20471ff5292ed41 874f03ff9f7cde433b6d51c164b21e622cd7e7f9 dff707edd0f7c74256dbbf48027976e4bf4b40e8 34404c8772fffdfdeb71cf9082689a5dba055cb9 dda26f8fd6fea21ba1c4c0be52268beaea3783c0 9642779b5533d9ce33af525327006c38d7369e66 e34711e8bfed0fa4b088745430989c8fe8bbc097 aa43bc72ab3bfa823a611c42c598dc31776a5184 8ed3c2bf45ec6731ec99aa3af89585e7713d7ed3 318538f8001ff0eea0d28f6047a0206fad805c17 a10ccbde6a60feec6803b8bc1974d72f911dac93 8eaf2087f2a8a3e63805027ebcf0c60849000df9 33b668014504fb5db69c1bb0aed88351c55ccdf8 5258cb87476ca4a387caf8d04bb6fdf63603dc71 1f2bc78901a99e5d356773a7316d0a78cac179b3 c256b2499f076418ca5ea198064e5a3dd01a2378 4ec93abe3b30aa854f9d0e87b09f3443d4f7fa78 dcbe8481e153e9df8c79dae59a9241ea0e0e3de2 852b4d9497c532e8d0038b3f5fd4f229e74d5130 8a2645ba04fa3eceba8f82f773ae53529bf49ce4 63e2bf6e708dc254ffef5decbcd386a9c263275b b55a1e11c13ca5dcac53484fd32f05a701e5c20a bc4c38d0498526af3e586d30b79468e41192a710 6b9ffc9e53e46c12d8f77b0e2d250c19814ebbab fc5aaeee45d966c2a90e3fe74f43d011611830aa e1714e19dde5786c568626bd33766ef504a6933c c4af587022a876f25e824eb79d2e26de99a34b21 75724dc872250283b7942d210fc1f9e590e93dbf f8d84e173513bc00c2ac09f7fb1616838f7f10b5 f0182dee6c7ee45059572891b9dd7f34b163316c fd2e5f80e18671f9c23dca661d041981eda25340 ae7435b10442ef36b1b95040fda4af014c70d991 871f0fc287d113175e5c0c9811a02a3b4bbb52b1 2e9dd69fe9cf672cbfcabfd182e1de97430381e9 916a6eece26190d34160a721533e05f41dedfa35 c6490ea56c99bb33cca2ea6ae8d258cb3779a739 146c29bc150df4a6d0bb4aa7108078c37d51c7ea e5838731edc38818012ffb514c431cdecddcf49c af32279e79dde74b9d4ea133fe1a0acd9b5e6e47 c595b1a619e15e61fa691fa3e9c7bb54f40dbbf2 cbc51a0de63498dc60717f8433e4d0846820f713 8b655a10ab68f0ea1d23b80cf91331ef5eab32f7 94bc05d3155f56fa4c43922d68c2167d9802d234 3aa7db9afa46e83ef010e066b8359c12a13bacac d582606a84dbf43dfc2421c28c847c69204c1a2d 440147e8e50c64b3b10804050d3015d9c547a043 69d6415b737e5449d143f11ac4feb77c1928b5db 2b738d4e0f2a3e53077463148d4d4a36cde83eea 41f30b03c26467a5075cd5591040acd2c98459f2 2306c36de37add92dca859064f651d3f47d0ab16 c5b916f6c6f4939ab032109f32161e044b254724 ead48920de20bdd5f7914d484e2133c0c5f3c33d cd87787bbaf8a0b945e3de9d15bf494ecbf73ce5 f92c1ebddfc059bc9ca80935225393480be58680 986815fad514b6a86ca1ebe1cc33540777edc698,,Merge Lifecycle Branch,
ros-planning/navigation2,681,2019-05-01T21:32:42Z,2019-05-08T14:57:33Z,False,none,ceb76d123742cda22b91f9f8970d756d6876d3f8,2,2,f5b5bcbeba90e8f0259690b4d9643a36fbed549f 9d00ee0b91e77a006ed24c296e5586e4a81644d9,,Fix CI pipeline by controlling fail on build,Presently the CI is deadlocked given the build for master branch is currently broken. This prevents our CI pipeline from completing and pushing updated docker images to our automated docker repo  thus blocking the use of CI for testing PR that could be merged to fix the build for master.    ![image](https://user-images.githubusercontent.com/2293573/57044439-6a9d7200-6c1f-11e9-8b8f-d205547c24d2.png)    This PR simply adds a build ARG that controls the fail-on-build behavior that allows the docker build to succeed even if the colcon build for the repo fails (default)  thus keeping sure the CI images remain fresh.    Alternatively  we could just skip the colcon build step entirely for the tag `rosplanning/navigation2:master`  given the build artifacts for workspace are wiped clean when used in CI anyhow.
ros-planning/navigation2,776,2019-05-30T23:22:59Z,2019-05-30T23:23:58Z,True,2019-05-30T23:23:57Z,74a58b653e49847db4414f1a1117e6d93561a4cb,12,1,398d180bd0f61b1f3b4a3fa8ce5a45a1cb4b8252,,Revert Modified all the Behaivor Tree s to work with lifecycle branch ,Reverts ros-planning/navigation2#772
ros-planning/navigation2,705,2019-05-11T03:50:54Z,2019-07-17T21:06:18Z,True,2019-07-17T21:06:17Z,c5e814fb25dc44d62e5d3fe8ffe6bbd86faf41f9,26,5,ccdff0f05e6d07f19904ce54d3f04b8b10850efa a7a4a38f0bed293e961749506b08be6246c3c4b1 c977061dcc6505c67cdeb8ab994bafced98ab651 1a6d14d094b77b27f65dc2a9a3f872010d07c51c 3213f2762c74a91b0f8c0a4c99b4e4b0c19b9916,,change primitives to recoveries,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/691 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | CI |    ---    ## Description of contribution in a few bullet points    * Renamed the primitives to recoveries    ---
ros-planning/navigation2,924,2019-07-11T00:40:02Z,2019-07-19T22:41:26Z,True,2019-07-19T22:41:26Z,2e1a53113696d42fcd67eaf34730c7640b0e5e9e,2,1,0e6f1634f4bbb9cc83ece1e1cfc56b479b4e5a4b,3 - Low@for review,Build scripts update for ROS2 Dashing,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on ||    ---    ## Description of contribution    * updated build_all and initial ros setup scripts.  * it was checking if the ros2 distrubution variable is set to bouncy.  * now it checks if it is dashing.    ---    ## Future work    * I am not sure if we need to do this check at all. I will test the scripts without checking the ROS2_DISTRO variable. If it doesn't cause any issues during build  I will do another commit for the scripts.    ---    <!-- OPTIONAL -->    I'd like to request maintainer: <blank> to review this PR.
ros-planning/navigation2,936,2019-07-16T18:21:37Z,2019-07-22T21:37:05Z,True,2019-07-22T21:37:05Z,2c17640b568085cdd20e9420bd8f38cc05508ec7,1,1,348c2296b8c21f97839eeff289bb0a141ac17c30,,Set GoalAlign PathAlign critics scale to 0,The navigation and obstacle avoidance perform less than ideal when the PathAlign and GoalAlign critics are being used. In the local planners from the ROS1 navigation stack  these align critics weren't used  so this PR sets the scale to 0 until we can further investigate why we were receiving poor obstacle avoidance using these critics. Removing their influence for now has led to better performance so far.    ## Description of contribution in a few bullet points  - Sets PathAlign and GoalAlign critcs scale to 0      ## Future work that may be required in bullet points  - Tune and test critics scaling
ros-planning/navigation2,962,2019-07-19T23:12:18Z,2019-07-24T22:10:00Z,True,2019-07-24T22:10:00Z,25e918924c7e3c64fe8fe8b1be2ec3a3a587658f,3,3,f109fcc20229ec3256ed46c8f74ecff35346181d 71af3acb17523dfe558f0c96c6c95c1224f7f52b a8e20d9ce37f0fb590e227a578cc0710dc34a6bb,,Build tools Run build_all sh from any nested repo workspace rename dependencies workspace for nav autocomplete,Build tool improvements    - Check if we're in the `navigation2_ws`  `ros2_ws`  or `ros_nav_dependencies_ws` and then cd out into root before running. Now you can run the build tool from any where that navigation2 touches    - rename `navstack_dependencies_ws` to `ros2_nav_dependencies_ws` so that auto complete for "nav" will bring you to the workspace you *actually* wanted to go to.
ros-planning/navigation2,525,2019-01-18T02:45:48Z,2019-01-31T17:57:53Z,True,2019-01-31T17:57:53Z,626b1609d3811e8e8d32c404387c94a0c7689f3f,2,12,14487f071d59f9768e143477dcc733bb0f2812b6 de873e28a9dc6482e98ad37d2a9051c9e7d145d6 a92094b28c83d5f0681287cd63c56e55f0a00158 9614dc1dd456ed9c74d1380a52f4e54e1c4be5ff c753747ae347dfb2433cc650adc172d062592492 76c1a37e8f084c780783aced0f2cd6b78871e5d3 69accc7872d535f3694489526adf4c4908377c52 5b460ffd29486f13ab86e8f65bcd60dd85b290fb 5bfe74041af114ab09c05d991dc73cbafef15c0c 6a5a6d5e4e3f4cb6ab65c2f639614d8e673509c4 aa1651fad9282a099b8e19d807fb5fb0968a897d be4d220e5a9b104ef25e96900f307a7b0be44517,,Update CI Dockerfiles,Updates dockerfiles to use new Official Library docker images for ROS2 and/or nightly builds from osrf/ros2:nightly. This PR avoids changing users  shells  and repeating layers.    Context:  * https://github.com/osrf/docker_images/pull/202  * https://github.com/osrf/docker_images/issues/201
ros-planning/navigation2,534,2019-01-24T22:10:15Z,2019-02-05T18:04:27Z,True,2019-02-05T18:04:27Z,69d9e04dabe99222ecace39078fb435d99628b6b,2,30,14487f071d59f9768e143477dcc733bb0f2812b6 de873e28a9dc6482e98ad37d2a9051c9e7d145d6 a92094b28c83d5f0681287cd63c56e55f0a00158 9614dc1dd456ed9c74d1380a52f4e54e1c4be5ff c753747ae347dfb2433cc650adc172d062592492 76c1a37e8f084c780783aced0f2cd6b78871e5d3 69accc7872d535f3694489526adf4c4908377c52 5b460ffd29486f13ab86e8f65bcd60dd85b290fb 5bfe74041af114ab09c05d991dc73cbafef15c0c 6a5a6d5e4e3f4cb6ab65c2f639614d8e673509c4 c6031596dc4bbc28e84d5f76f46a158ed49a9ded e21e47a89fa0e79adf2fcf165ff312f2bcf43a23 ad0929280161a1204e512fb93b37adbfbe966a6e c2f7179858b2f5817ea801ed8384a2680c420f9d 398bde2d42e65c79cfbe4a37f28d4ab57d067ce6 7dff98d542c6433b047ef0d098c943d4555142fa e7e4e81a4ee259dd8a88b212041a74a29bbe8d2a ad237161a255241fdb38352364a7493255ea1c32 37d88df8f3ca797a221f7049ebbfa9ac60de2d55 d286ce097880516e33db21b5430d663d5395fe0d 8b2f762c9a2cc5e2c3dec7fd68eaad8bb43c515f d0869973c31612c495a7ceb692a9fef70e2f82a2 c37ef38831479238a04f1240825e283d9cbb6b5f 9a3fe4210012143fbd4972e271569a9d9c5916c0 9fcb6aae92d2594a454bb4c8b0cc6c26abbef74c e2b8f7598dc3b2c19eca75d0513761147571536b c3c175fb218b8a726687b1ad610b3c4bc4f2bcc7 ce560677b44a619b75ecd2b9cc0f6d9d1e698269 48ef768e2986bf68f01a30f742a929896eff3fde 2f02de17b4743dbe4f17fd34ae19cf210f0245d3,,Add CircleCI,This PR add CI support for CircleCI.    # Summary    Like Travis  CircleCI is a Continuous Integration service  however CircleCI provides more docker integration such as support for custom images without resorting to machine type executors. This means that CI jobs can start as soon as they are triggered  rather than queuing for an available Virtual Machine to then spin up. The pulling of the Docker Image is perhaps the only main flat overhead in triggering jobs. Further features such as caching and storage of artifacts additionally accelerate job times while providing insight into build and test results.    ---    # Overview    The proposed CI would start with pre-build Docker Image  hosted on automated repo on Docker Hub that would trigger tag builds upon new commits into particular GitHub branches or rebuilds of linked Docker Hub repos  i.e. `osrf/ros2:nightly` base image. Built tags would include all/most the necessary dependencies for the project  include any build dependencies for prerequisite dependencies  i.e. running `vcs import`  `rosdep install`  etc. on the master branch. Even when short cutting the install time by building `FROM` the `osrf/ros2:nightly` base image  this takes about 90 min on Docker Hub  so it helpful to offload/bake this amount of setup into the image our CI pulls from.    Once the CI pulls the docker image above  the config proceeds to clean the workspaces and checkout the source to inspect. This also entails `vcs import`ing and prerequisite defined in the new checked out source  installing the prerequisite dependencies  building the prerequisites themselves  installing the source packages dependencies  building the source packages  then testing the source packages.    In between steps in the job of the workflow  caching of the build stages for both prerequisite and source packages is attempted. Caches are broken with either the installed dependencies change or the source code has changed. This allows the cache to persist across jobs.    > An example of current table of caching in action:    | prerequisites | source build | source tests | time |  |---|---|---|---|  | w/o | w/o | w/o | [16:19](https://circleci.com/gh/ruffsl/navigation2/58) |  | w  | w/o | w/o | [05:07](https://circleci.com/gh/ruffsl/navigation2/62)  | w   | w  | w/o | [02:07](https://circleci.com/gh/ruffsl/navigation2/60) |    Lastly  the log files for the colcon build and test steps are also archived and made linkable by storing them with the job's public artifacts.    ![image](https://user-images.githubusercontent.com/2293573/51814617-1033f480-2271-11e9-8cf7-8a8e8e6154a2.png)      ## Workflow    - DockerHub builds CI Image    - Triggered either from linked base image or branch commits    - Shortcuts CI by installing the majority of decencies  - CircleCI    - Triggered by any workflow condition  e.g. commit  PR  web-hook    - Pulls CI image from DockerHub    - Cleans source and prerequisite workspaces    - Checks out respective source from trigger    - Prerequisite      - Checks out prerequisite from .repo file in source      - Installs any new/missing prerequisite dependencies      - Restores prerequisite build cache if possible      - Builds prerequisite if cache restore falls through      - Saves prerequisite build cache if needed    - Source      - Installs any new/missing source dependencies      - Restores source build cache if possible      - Builds source if cache restore falls through      - Saves source build cache if needed      - Save build log artifacts    - Test      - Test source build      - Save test log artifacts    # Action Items    - DockerHub    - [x] Create the `ros-planning` DockerHub organization (admin)    - [x] Invite relevant Collaborators to DockerHub org (admin)    - [x] Link GitHub `navigation2` automated repo to DockerHub org (admin)    - [x] Configure build rules for automated repo (@ruffs)      - [x] Add rule for branchs  e.g. `ros-planning/navigation2:master`      - [x] Add repo link for Base Image: `osrf/ros2:nightly`    - CircleCI    - [x] Enable GitHub integration (admin)    - [x] Invite relevant Collaborators to GitHub Team (admin)    - [x] Configure Advanced Settings for ci repo (@ruffs)      - [x] Only build pull requests (**On**/Off)?        - Save build usage by only testing open PRed branches      - [x] Auto-cancel redundant builds (**On**/Off)?        - Save build usage by only testing current HEAD of branch      - [x] Build forked pull requests (**On**/Off)?        - Looking at repo's history  most merged PRs seem to come from forks    ---    # References:    ## CircleCI  * [Configuration Reference](https://circleci.com/docs/2.0/configuration-reference/)    * To get the gist of the config file in PR  * [Building Open Source Projects](https://circleci.com/docs/2.0/oss/)    * Special considerations for Open Source Projects  * [Migrating From Travis CI](https://circleci.com/docs/2.0/migrating-from-travis/)    * Other notes/suggestions and highlighting differences in CI  * [Caching](https://circleci.com/docs/2.0/caching/)    * More on Caching Strategy Tradeoffs when used between workflows and jobs  * [Debugging with SSH](https://circleci.com/docs/2.0/ssh-access-jobs/)    * This was helpful when writing/debugging this config  * [Caching apt-get packages](https://discuss.circleci.com/t/caching-apt-get-packages/9076)    * Using 2.0  this is now done by priming the docker image  * [Storing Build Artifacts](https://circleci.com/docs/2.0/artifacts/)    * Used make colcon build and test log files more accessible    ## Related:   * https://github.com/ros-planning/navigation2/pull/525   * https://github.com/osrf/docker_images/pull/202   * https://github.com/osrf/docker_images/issues/201
ros-planning/navigation2,977,2019-07-24T17:18:38Z,2019-08-01T18:20:11Z,True,2019-08-01T18:20:11Z,05517fb13f476707709f4e838b6c7f29e97654d9,73,42,7a53e07929af192b672a886b914d50b31ca60558 cebc582c7fbf251a86429c0233ce68d614fe8618 8a85061068aebd19aea6741aac68c4e51444e0b0 67d451e6c5c1b405187d6c3ccac8f9cbd689768d 3d5d0a37a5cf6ce962db9e51b6eeccffd69a740f 585586408c2901135acd28d12e7519d4a9cf8924 1577d2ce838fc006d96d056bec573db7ba35a11f 5db19c8c2b5d6dd128b7af7ea5476f4a1dee6d23 86d5923bc1ab5bf5a9ac12d9cefc3c64daa12d30 6d4d92b4a1c114427da0aea4c4786f9dcd2f1828 9534a7cd00122ba21d00d68d75d85e7d83f5ee6e 69d0aea89cb3742a8d7cb1fbdfcf0909d9b7369d d147f97987a484ac1b71db78af7e616cd0f983c4 054a4bf4afe7dd4cf2553fa6d03ddeed9e7c00b2 c5e814fb25dc44d62e5d3fe8ffe6bbd86faf41f9 aaa8c2eb3f9d0d3f1787b77e0c3f9a73325fc4df 4225e7bb5579a47b007bdfe69fd56b6a4174c347 18fecaca3a3cdc7f76e4e11c661d12ca0ba19563 1fb5efed502fe9e98c20acfca9376225c1ae7a7a 052064eb1b283120d773ec6eb4e411755fbfe466 1d73654caa4bbb5c22c162b94eb523637a7422a3 2ede683356dc51cbd1732275aaacbf27ce3d0bd3 c15c93fcec944a35d2ffc634417417faeb89b6b7 640ec4105cad7148a630ce053af223e7e810c509 2e1a53113696d42fcd67eaf34730c7640b0e5e9e d076e5d23e03dadfff91db4f199f71698892da9c f109fcc20229ec3256ed46c8f74ecff35346181d 71af3acb17523dfe558f0c96c6c95c1224f7f52b 8cee42c9122096ede6c7bc528722159bd06be90c 2c17640b568085cdd20e9420bd8f38cc05508ec7 a8e20d9ce37f0fb590e227a578cc0710dc34a6bb daf1a71feb1cfbec38fac681fbc0134146be2439 5816733b3fa24fd6119017e83624004d4a3bd829 25e918924c7e3c64fe8fe8b1be2ec3a3a587658f 742f53f4724ef61411c2daa0539466345a65dcd2 c97e19f922c5aff122f5934a3c28f3433c2bbbad d7e8b65e7b31ced76738c01bd16f3fc84f886527 cacccadfe95ff9cb4a07a4310d11e7b65a2cde62 4cacc17cf9d69590953405c6cbf87cd1928571f8 1d439d60d63e452c5879892e1c8a8483fc7358f2 270c8d4ed4172e329e9f71ff11eec9202250c8f8 0fe7d4d85b32e3e6b0e91a3b78f949e1c0391aa1,,Release Candidate 0 2 3,This is the current 0.2.3 release candidate. This PR merges master onto the dashing-devel branch.    We expect a few more changes to be added to this PR as additional PRs get merged to master this week. The goal is to test this early next week and then merge to dashing-devel.
ros-planning/navigation2,984,2019-07-26T00:15:54Z,2019-08-08T17:24:50Z,False,none,0f4880188b2ef53c5cbb095ca8245d4f07b6c612,3,3,396c98c82d971dcd9516d5e8bf9da7f3f794a9b8 d9c9df81a575dbeba0abb9a7474571109a09a8ac 7fa67d5b1b6ccf1fd9cd67ddf6522a6aa625f2ca,do not merge, WIP Change retry count to 100 for system tests,This changes the retry count to 100 for the system tests.     It would never actually reach 100 before the CI times out but this arbitrarily high number is to see if it can be made to pass at all while we're debugging stability issues.    Marking this as WIP and 'do not merge' until it is passing CI  at which point we can decide whether to merge it or not.
ros-planning/navigation2,986,2019-07-29T20:01:39Z,2019-08-13T13:52:27Z,True,2019-08-13T13:52:27Z,48a7c5db0f480bdd2a061f6196c7b00c5a37e650,2,3,75d67f99d7fdcf160998a3878effd7c5ede5a8b6 29c69d71cc0720af9f9fc8cceac63759b52bca12 ec72597a5e9f854475f99f1aed7218dff7bc8239,,on download rosdep all necessary items calling on each build is redundant,Also came up because the ros2_ws didn't have rosdep called over it so anything in a clean 18.04 container (or metal) didn't have alot of things installed that were necessary for a clean build on a new machine    Edit: I start out yesterday to work on recoveries... ended up battling dependency PIP vs APT nightmares for 15 hours... "Oh that's missing let me just pip install it..." *famous last words*
ros-planning/navigation2,1036,2019-08-14T17:28:41Z,2019-08-14T18:56:36Z,True,2019-08-14T18:56:35Z,59f0360827a504ac9d54dfbc7019cd8547fc766c,1,1,d6444a04edacabe5bc973586c1648cde0388eecd,,Fixing up paths for codecov io report,    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1) |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * adding a config file for codecov.io so that it can find our source files to include in the report.  * The actual code coverage data records the path relative to the top of the workspace eg src/navigation2/nav2_amcl/src/main.cpp. Codecov.io needs the file names relative to the root of the repo. So we just tell codecov.io to drop the src/navigation2 part of the path
ros-planning/navigation2,989,2019-07-30T04:44:17Z,2019-08-20T21:03:03Z,True,2019-08-20T21:03:03Z,8b239fb4e276d8c2430a788fb3bc5a0d5746ed2b,13,1,3fde33b2fb36b9f90cb331292a8d1db7b38f91d2,,Rewrite nav2_map_server,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #466  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | hardware OpenRover |    ---    ## Description of contribution in a few bullet points    * I added parameters to map_saver which can be used instead of or in addition to arguments.  * I added the following argument to map_saver: `--fmt <image_format>` = image format (png/jpeg/pgm/etc.)  * I added the following argument to map_saver: `--mode trinary/scale/raw` = how to save images. Primarily of use is scale  which prevents data loss when converting images from grayscale to trinary (previously the only option).  * I switched the image processing backend (for saving and loading) from SDL to GraphicsMagick  which supports writing several graphics formats and is in general nicer to use.  * I rewrote YAML writing to use the same library as YAML reading.  * I renamed map_generator to map_saver  which more accurately describes what it does  * The MapSaver node now exposes when the map is ready with a promise instead of a polling a public boolean field.    ---    ## Future work that may be required in bullet points    * There is another implementation of map loader in nav2_util. These two implementations should be unified.  * Add a convenient wrapper to map_loader run without separately invoking the nav2 lifecycle manager.  * Implement multi-layer maps (#547). This should be a lot more straightforward now  since the new graphics library supports several multi-layer formats
ros-planning/navigation2,1018,2019-08-07T23:19:11Z,2019-08-22T17:56:33Z,False,none,57874ce3f0d1b628e630ecf1a79980f22be329e7,18,12,4f8e53c230c0622900714f4858269d2201829afe 346b82cc80572537bbe5add743ee4d76ef3d1282 1e9c106630333cf9aa11a91e578aa516dfa357a5 d5cb795ea912316822774525880e38efb4178f21 2fa009f0f93031a4993a38c0b004a804a684a23e 84a9fe9d4aa9724ad8577807454d44c2cfd99ecf dadca9909ed1367fd495621bf6d45a07eefd3ea1 87be9a07d2c2914631879bd67e309e2784c03599 694e182f5a91a0203557f8dca60515bcacec932e 006b714be695195df52fb2490592291705ccdb9b a7222e900c17fd6540188c242a75ffd13bf695af d565498d81110a201b09ea99a7a871bf31dfb6f3,,Update updown test,## Description    A while back a change was made to AMCL which broke the updown test. After the change  AMCL no longer initialized its pose to 0 0 0 and continued with startup  which resulted in other modules coming up later to wait for transforms  which would be satisfied only after the user entered the initial pose. To re-enable the updown test  I've added made the following changes/additions:    * Added a few parameters to AMCL to allow the user to specify an initial pose and whether to use it at AMCL initialization time. This way  a program like the updown test  which is running without user input  can tell AMCL to start at a particular location.  * Towards a clean shutdown: disconnect the Connection created in the obstacle layer when the object is destroyed  * Towards a clean shutdown: reset the timer used in the map server so that it doesn't continue to run once the node has be deactivated  * Created a utility function orientationAroundZAxis that can be used by other modules    ## Future work     * Update other modules that are using a private version of orientationAroundZAxis to use the version in nav2_utils  * There are still shutdown-related race conditions in the various modules which cause some of the modules to fail occasionally. This needs more investigation and cleanup.
ros-planning/navigation2,1053,2019-08-21T23:30:34Z,2019-08-22T17:56:33Z,True,2019-08-22T17:56:33Z,8196e1f422fc6f3c7bad8c54a9744c2fc2809356,18,11,c5505ec00cac7027bdb6320b2f2c85c0816e8187 6ed133fd6e9279e99e07b90fad7d41561bf3131d 8fca800f2bd9f2175b960cad957a48bff5af5dd9 619f4e1bfb0b4c605b9f7e5116e63f93ef978404 4cf839c4897c698683537e382dceae5befbbbdcf 6ea714e90e46e56f98298ed4479537b02a9f7608 6195139355fd0e02ea8c721a5a5e9da24485a539 e601fc4119f0d6b76a8d6f9af9db5bdbe9ea8118 93b181ec04e19c14fc41b57948e9dfcb863ae4c4 fe12977e15f9d32dac04f268d3dd0191af540966 474c2643b03d849c87184ab93faf20cbe1b62710,,Update updown test rebased ,Had to rebase mjeronimo's PR but can't push back to his fork  so this is a duplicate PR. If it passes CI and code review  we'll merge this and close #1018
ros-planning/navigation2,1038,2019-08-14T22:19:57Z,2019-08-27T17:11:53Z,False,none,32bdac5e4c9e8a397009ce640afbbf5af9d30e8e,6,1,ea404f8a8dcfdc3ec0a61be97d8c9f41ebf5a499,,Split robot specific parameters into separate yaml,This PR creates a separate yaml file for the robot-specific parameters in the navstack (e.g. specific to turtlebot3 waffle model) and integrates it alonside `nav2_params.yaml` in the launch files. For different robot yaml files  they can be specified at command line via `robot_params:=/path/to/robot_params.yaml`.    I've left out changes to the `nav2_simulation_launch.py` since it is currently incurring run-time failures due to ExecuteProcess and rosargs for params.    #### Future work:  - Simplify and clean up launch files (too many and redundant)
ros-planning/navigation2,896,2019-06-27T18:03:16Z,2019-08-27T22:56:31Z,False,none,18eb10a7372de0995b399bb54fe0a8382f281767,2,15,477838e767c65238ae3464721ecb5d868b529907 b06fc5e08c779700db1b05a96d274c2ed2e60ef6 22922e7968a70965b1c960bf9d8a0f4c82a2e509 cb289d9e7aa81a4ba62c359243bcd5ae957f6459 17e6c15d6f1b231ec5bb9e38a9f0ce297edfbd80 a37adf07bca30324abfdbc1c7259e273baff1e07 ef1fde7f2d68c3b5d3af327a0b21ea78523d815f e2c3be23d5c0f8170a35f6d32387408e8ffc35c1 f1c9cae39843f64ae527e22c5656899b72146954 40d83775ea8cd2af8cb64187b29146ee671f3266 efa296236a4f4db0330de513fb756f7a5ec2c73f 4a32c7ffefc5455c1207f123c056f8cd0342d445 31a58cf1027da501e4280637862aafb658b1aba3 0ed427a703d6b1267c3039d3891fa72a58fc83d2 dad6563bc442ea339709bc8b7345fef8b479b112,,A new Navigation 2 Tutorial for Turtlebot3,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #605  |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | (Turlebot 3 Waffle Robot  gazebo simulation of TB3  all the other hardware info can be found in the tutorial) |    ---    ## Description of contribution in a few bullet points    * I added a new step by step tutorial for Navigation 2 stack.    ---    ## Future work that may be required in bullet points    * Add tutorial with a real robot (Turtlebot 3 Waffle)  * More videos  * Add more to Troubleshooting Guide   * Example for TB3 Burger in Gazebo    ---
ros-planning/navigation2,927,2019-07-11T18:27:15Z,2019-08-28T22:50:03Z,True,2019-08-28T22:50:03Z,39ab506d865f830efdff01761a3ed9d681548d57,8,5,326d40f75dc86584c6be236407c7ee0ee016308d f24aeaddef299968a86d3e6cd68ba94f38710735 6419307fd59c35131caa01eb1d7f6a80b27bbf47 848d6fa5737d8c78ae5969d079ca7388a52c0cc9 d30c4fb8b91e31972edbef6ae1f782fa11eefeb8,2 - Medium,Enable global planner tester,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #586 |  | Primary OS tested on | Ubuntu 18.0 |  | Robotic platform tested on | N/A |    ---    ## Description of contribution in a few bullet points    * Made a few upgrades  including using the ROS2 actions interface.  * Enabling the planner tests on CI. Ran the tests on my machine 100 times with two failures -- planning service was not available on both.
ros-planning/navigation2,1076,2019-08-28T21:15:32Z,2019-08-29T18:03:45Z,True,2019-08-29T18:03:45Z,dcad656db397f66fd4e7320f00cd9582132a14a6,4,4,45b17455ee286c4e12ced1d42010a1aed7d8fd58 09b229bda8a3a17d0558fe980d42cd9b44e2b153 59fc7152f86fb81e985156bddd3cb0de396782bb abe7058f0c19c62cc1d8b871087b447fd6c622ad,nav2_system_tests@2 - Medium,Add ctest loop script,## Description of contribution in a few bullet points  Adds a script to the system tests directory for looping the bt_navigator system test. Useful for reliability testing.     Also updates the README files with instructions    ---    ## Future work that may be required in bullet points  N/A
ros-planning/navigation2,964,2019-07-19T23:35:48Z,2019-08-29T21:42:47Z,False,none,421c2b1a8eabf20071b79f33a67fd8883c52327b,72,9,6bb0ffb77aab61a747ee055903b34936f31e239d a2aaef83c21f4a5bd4f8380e54a473e124cb8bcb b70a740480bb7517044c3b99cdec5d5f53914255 b3d69666df636d2666198c049ff658fb44e11ea4 036c0abaa2aa1b4652b85581b65e3946fe11974a 3f90526e42cfb366de6ff9ad035952bf5a7b89d8 7e065522d513b8a812a85d229298194c99cf2796 acf9572d88af2efb8dbea0ec740429197116e5a7 9185192521f0a63e66c2380876b4e4ed2df479e4,, WIP Adding components of ROS1 base_local_planner needed by TEB ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Ported a subset of base_local_planner that the TEB local planner would require. |  | ------ | ----------- |    ---    ## Description of contribution in a few bullet points    <!--  * Ported files that TEB planner would require from base_local_planner (from ROS1 -> ROS2)  * Note: Compiling it requires Position2DInt.msg  which has been added with #963   -->    ---    ## Future work that may be required in bullet points    <!--  * Port rest of the base_local_planner if deemed necessary  -->
ros-planning/navigation2,1088,2019-08-30T18:00:17Z,2019-09-03T20:16:21Z,True,2019-09-03T20:16:21Z,1aaca6d02d708720df0bb90030945885faefff48,1,1,7ee7d209a0c0cd297f8aa645da71639572053bc9,,Update to latest v2 BT Library,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | SystemTest |    ---    ## Description of contribution in a few bullet points    * We were tracking the ros2 branch of the BT library  however  this branch seems out of date. Grabbing the latest tagged version instead.
ros-planning/navigation2,1096,2019-09-05T00:02:17Z,2019-09-09T17:04:28Z,True,2019-09-09T17:04:28Z,ec6ae7cf4e7a804f51776d8877ad65bdfc94f2d5,212,222,7a53e07929af192b672a886b914d50b31ca60558 cebc582c7fbf251a86429c0233ce68d614fe8618 8a85061068aebd19aea6741aac68c4e51444e0b0 67d451e6c5c1b405187d6c3ccac8f9cbd689768d 3d5d0a37a5cf6ce962db9e51b6eeccffd69a740f 585586408c2901135acd28d12e7519d4a9cf8924 1577d2ce838fc006d96d056bec573db7ba35a11f 5db19c8c2b5d6dd128b7af7ea5476f4a1dee6d23 86d5923bc1ab5bf5a9ac12d9cefc3c64daa12d30 6d4d92b4a1c114427da0aea4c4786f9dcd2f1828 9534a7cd00122ba21d00d68d75d85e7d83f5ee6e 69d0aea89cb3742a8d7cb1fbdfcf0909d9b7369d d147f97987a484ac1b71db78af7e616cd0f983c4 054a4bf4afe7dd4cf2553fa6d03ddeed9e7c00b2 c5e814fb25dc44d62e5d3fe8ffe6bbd86faf41f9 aaa8c2eb3f9d0d3f1787b77e0c3f9a73325fc4df 4225e7bb5579a47b007bdfe69fd56b6a4174c347 18fecaca3a3cdc7f76e4e11c661d12ca0ba19563 1fb5efed502fe9e98c20acfca9376225c1ae7a7a 052064eb1b283120d773ec6eb4e411755fbfe466 1d73654caa4bbb5c22c162b94eb523637a7422a3 2ede683356dc51cbd1732275aaacbf27ce3d0bd3 c15c93fcec944a35d2ffc634417417faeb89b6b7 640ec4105cad7148a630ce053af223e7e810c509 2e1a53113696d42fcd67eaf34730c7640b0e5e9e d076e5d23e03dadfff91db4f199f71698892da9c f109fcc20229ec3256ed46c8f74ecff35346181d 71af3acb17523dfe558f0c96c6c95c1224f7f52b 8cee42c9122096ede6c7bc528722159bd06be90c 2c17640b568085cdd20e9420bd8f38cc05508ec7 a8e20d9ce37f0fb590e227a578cc0710dc34a6bb 5816733b3fa24fd6119017e83624004d4a3bd829 25e918924c7e3c64fe8fe8b1be2ec3a3a587658f 742f53f4724ef61411c2daa0539466345a65dcd2 c97e19f922c5aff122f5934a3c28f3433c2bbbad d7e8b65e7b31ced76738c01bd16f3fc84f886527 4cacc17cf9d69590953405c6cbf87cd1928571f8 1d439d60d63e452c5879892e1c8a8483fc7358f2 270c8d4ed4172e329e9f71ff11eec9202250c8f8 d253a3e0ed3799ad761e5dfef3a73750a340c814 d4cad3cd7ae1cbb0aa0d5d883fccde5d57839a13 2350778c3eb11196de68ce006d5ec246e848f27b 794ab41f6a539a0c0931c3ccb49e791a47ef7122 a22cf4e8952003983e35a774bd759ace650f4cad 97fed9ec221ff36157f3ed0e6c958e56461912cf 675574f382c015d9901f81dc6761fcf17a67986a 526893ae479f835faa69442c1a77ecac431c3719 debc3f33c770ad08768b8d075eab0cd1070d7989 8276c4edcb5c645cebd67295cccda5a8ad2f9c06 599fe3b1def337528c2566ffa54120512ee7c447 36a8bda0d0acf16ac153ab10c430ffef1dec3ca6 21ea41edbb741a0164a5fbfe8960f5194f199693 d232c1f79056f1dd17757d82449745c1e27ac4d7 861e612baed62ae3d94bbe891ef064bd01da76b8 189dd38f595a67b116ec7049875868a7fb4eb444 c4ddb0228c3b8297760329885baa7ecb9479e3b1 54ab6e80ae4bc73a3d72af547a354b553dd57f30 0d6773f0f1043709e9c81c74edf642b427442f34 f55a87fc940541ab1660a06edf3d11acd26f981d 090aaffecce5d448a55aa53d7d12af320b52c258 6c33c1d3fd2d6c4c1a573cef8258d8b38920704d 8c4960e82f928fb35513c40d1ed50044f66083df 9f749e6d6f0e4987ae22534df1df9bbf7d6f5d52 3fcf498da9b5accabef9cab46b4a5265ea72fd16 2196ad80af16a3fa726e629ea43d82e1f2f89238 940100b398126fac5f8ae5e7d047b65a638180cd 27b3f5935c9948b44b7597df582ceb5d16ffafdf 658185b397bbdc55f3902ef67e142f423e645130 d4e11d9febc45caa165c032f69ca74b94dcf70a4 9a71604ce629782f4dd500373a890016092306b8 73aca3586f12aa5df63a87a92a9c2f5158027ab0 4acb6975fd8fabfa5f27b1852e3a2e983ca115e0 88da3f15618bdf85f782be2dfdea5812e04f5658 6d437df14d40759ce91982f6276b809cf7f48d53 0259ac40a99a084a23ee51f421966ac84ac0317c 42fd63fc87ca7e272c9f6d3f3b7c98d155d2db20 97db4b2d1332c643aad6003ace95f306680f80ec 8603f2e44123a6e10a632ad5903b7823348d8d54 3fd24c46d23132884f5a975087000b420ea40271 db301c0f1ebc4d44544a36fbfe1e19eb785529dd 9f00e9149568773796f8d9e39481ce1c65a114df a01365ef61f53e39e3f18a05e49110284ca5bc45 383fad07af4731f98d21117b5f23ab634ddbc4a7 48a7c5db0f480bdd2a061f6196c7b00c5a37e650 7fa7400bc71860829c3bb7f05bf0b62a4e3b860f a972e81fac333675797588e93caceb49a47eae66 8f1eaa2975388c66969c009596ef1e8fdce22030 80f4b3dcda1c30a0ac87a4888f43506422c60162 d4b5c76ef22bfe01768db78ef5260f4e554ae761 f2342412fdcdca8e2648df88ef106d2aa19d917d 83b7037cf7d781de7d583b0d80e61918c7a78a49 48a59a7e2266ca7c1a126dc5cff1c9fa588d7dad a58732744b197910871030764015f47658827902 5f59f682ffeca74d5df9943e1e9a7cde775b4936 c2cc8faecda3896e6499f4b440f06d4d8fcb09ae f9b0682455230f9ce899ab1bd608cee676e2721a 0386f4435fe5855cf8ee288962dcc7766f8fe477 abd33800082a3940b9b888641fbed87998addc1d 53ba5d631099bed5e302baa32042d1ee76aa9829 103d3f28e4dce4da95764aa7aed9d990519025d6 45b35d39e49d10a6c6f8d125943d283f6e2d691a bfb5f65ec1af72311f4f4472a2d795800aecf7bd c8c00f1fea59ccd795b2713463325dac7aecabb2 bc747019fbf380a56d213c3a5b2520f30227e91d fdd13cac3bbb6305a95eeb6cc998f277972d134c 6e8b927be7d6750b904b9d3fa1f49990322e9f8b af78ecb7b857d9649d9ab96b0c1278399d91dd07 dc8b43eaa07b25dfcea2ea9a2dfa2960d6215140 60f60290a17037005ce436be7e940c2157ebbae5 1a0d9753341747c362a711d9f18e3ecbe605d34a c2b5c9653dd330a0b1cdfd41e282c55774f79589 cb67dd98f0115562272ac4a6635fc9893238b210 f1d5c22142839b6b2daed571ea03a8fe857bf381 17cf28a0c9d126eb6292a8ba8eaf928b02a05c82 e866ce96f0b8a24e4818b26b650ec7f44ef7bb1f ee98e993e769ef97eb5878c90fb1385b86a8be72 b4393117f9d348109ec673afd0bbed78930cec0f f5c000dc3c19e0ff8f83f30641f2598c147b47fe fc52350213bf30fb0db61b99926b652db490eb34 b54e7a1230d3187c3c49a97ab735458dc2c738c6 d54d1b5f0725eaa4e96cff2b072d67ac2c3e5ec4 8f6215459a83a786b8756f15d9e4406412195ec6 6d7f90cb579c0d24ef2a5e391836798f0cd352e8 1e7130798af60eabb9400b6f540d8cfe391321cd cad449d613671b019935d48d7dfb2f82a0b10fa3 92d966164eff2e0b6931270bd5c7d006daf67b5c 60491b1928df409e3fb613cdea24c53837a8cec4 d1fa0b2036e86272415adb325c7e3a88934a6686 7f5e02015f66600de50aaee37ae9b3b5a69f5717 27ea4cb745891e49213b5098de7dc3e880eab1f1 2eb191697783bb071de2c49f63dba800dd6fecc9 142d7c967c34f12fe1ed1f9a1a05c48371f9a0ce b89c1f3fc3cf06ab9e9ffd828d9decbdc92defb8 b4fea138025372269821c26f19c054f83977799c ac71fe5a4e75d8adef59d6fc7bcde9f6f99abb75 980063b1eafc8c2301d051574279de5373316242 a0fa810521752ecd833f80346c78c0e4fdaf0b7b 321e0e8f1f1be70b7c8bf64fdc167230ea62df93 d53be70027644b362c362d6a79ccdcabf5da30e3 e0fd2ebf88104d87dffe2fa80d0567ccf55c284e 1c6e4a85d1743c7551304c2367b0e7992e97c300 c6853560879e4109be4267ae078c9eeb281d6c0c 64d5ddd255d3adfffa0c1ee04a04ac0c1c961ae8 94f73430becb793ac8177c577317dbb4010347d8 d5379dc08708c6e4c5cca4ec55b592dcf94f1a02 a4c53dedef5fea17c4ffbc615d673d1ad84cdd29 b2e3d720809760fc18b90f0c3bf9c32fe26e513a af127127d3915ee526d49adc89dbe2897b743e59 0359bf76cb6a77cb2a30b5431ec0ca5a93430a6f 208e4e5147cf3a8ea4012bab7a6df985586edf68 01b367c6a7fbd3e8bdb37367dc73a15118e7875e fd21ee90d86802922418f53504bff951697eb10b 286a88157b0ad3f56b45e1368174b19d24e39ed9 970aee8fcf7cca59902b2541b74947aca45d808f 0ce96c96c43bb016341300bd64497c5cde6c7b97 2c9cd822b82338a07397c3279e6c499e14eccffc 59f0360827a504ac9d54dfbc7019cd8547fc766c 099402f31abd6939b3285f1cb899c0c0be389bb3 a1345de8f28e2c4225f009450a903e9f55b54a7b cf8fa70e0ca22af4218f067d7995ddb8a49b470a 66892a6eed8bbf24f7bb3d004642d68d1ddf2047 6eef8e53b3dcb829be93f37346ac9251a04ddf9b aa65146f3beb1b52373d9e8c9a1243765eb442d2 d944605e90b898dff7986d2800c5144fc0b0a929 a177fe2a2790ef8753ad7517c68fbb047128351d f85c2bee6302025921493bb6ca25261f306dc9b2 a071cfdb94479f460932d9c5cc2a533be8c79909 3c0bf3439490bd850280768626518d689b556b70 7bafe500e4730c56af88f07758b2322ce1f560a9 98e62e451fd67f8a146e757a3674e9e0978db644 e03175ba9f0634cdcd59b07e9936c049e48641aa ca948f28b9aa5d331b114b12c68bd1a8900348c0 7c473cdadb71355fcdc8dd73bd4bbf40e75141ac 8b239fb4e276d8c2430a788fb3bc5a0d5746ed2b 618e642f1e8177ddaebbd95b4eaaa65e9a98d2a9 5c0dfbe7a49cdc91a0db893ae5e1fb0e1bc84e6d 5a5fe5662ac03b47a0dc2141b601ea7b55104c52 46efbfa0c1e86efb49e1d977de2bee712c23a722 0c6a1bc0aff39aec59affab444ca1477d8a0e616 de44f045aa09ee18be0c60826bd204b80f563fbe a1692543ca3ea410b7fc1671ca61bfb025729950 6dccd404e3173d0acba3b9a0201a2a02c8138acd 5a70ad0d8b7409b23b90c0112dfb8f03fbc8a3dc f4f62d1d1e012870b5d55e3bc32953af5e6ce5d0 e9bf8da7aac2e9bc535cd0742f502ccc6d921bfc 41cde9f5273c6c3b904caddff59eae789ac1fc78 8196e1f422fc6f3c7bad8c54a9744c2fc2809356 3c7b061b468751b31ab0f01a8fa26f5cdbad11ca cb3f76eccdce42a374e60cad7923ec062e21349e 18bf2a6f0a9757c32ab096bceedd6b652ec004f9 c1b4fe4bfecd7a3a374119b7190870112510b271 baa0f83e7433e3565d0e0e8f90fb04bc3d16a8d5 6a1b16181de5f900b83a4c4167a4843fd6ce9a5b 23628db71470d6416c25e8a5304f4f329350d805 ef90f8af53364944deb4ad82d2ceb292e38893d0 4f42633b9320d503e0f26d1fc7773485b4f94de3 886e3e1a4d194216da819830dbc031690150b86a ee3d1500512dca5f97657477de049d5cddcdff06 4da138a6ed4a99786630ca907c0eb7bb56a4da5d 75632414a6ab352ace935e5a3476321ebf6cd6b1 7a7ce075bbd2593a83ca6986102fd4db652d99d8 c27d6638311a4a3b2b133d9d4d0ee9ad4fa91c9b 39ab506d865f830efdff01761a3ed9d681548d57 2eec1436b75cdf7c5d5ecf9993406752ebb7e17d 63b1fa03518b24f088c43efe1643c08a73173121 ea34bba8252514a597ba5b527ec14a9f172cecda bb20578c2363e9654a142759dac19bf827b93c6b dcad656db397f66fd4e7320f00cd9582132a14a6 c241ab6cfa3f1504849824f604a8d59fc0b6a4d2 3d5d4cd50c8c53daa5ed7a22985f111a85b82d02 9e309dfdd12446918b7b136696cd0f6dbc572088 f46c8ee3dc8fd1d802e4492c1e3169cff9e8f3de 97de88d91dd90141486f34a4b45258f03b2874e2 c004f21e6be61c3a3eabea8e686307cd1dc63cad 443f56bbf40db5a8fafed59c2353de214c697df7 1aaca6d02d708720df0bb90030945885faefff48 b629f5520c9de3e5c7345e26bf714de35dc20b7e cdea9746d371d882846b077b8aebad79a28d4130 6aecc6a0c64ed2946f3b349ee80819316c2c79ae 5053bfe5b9ada963c2d67afe8cc2936aa3876bb2 ba0ce63c944b61fb39a44bee933327bd911af5b1 52061fba987e4f054a84f91ba85e56845a6d3f47,,0 2 4 sync Ready for testing,Updating dashing-devel branch to the master b629f5520c9d    Everything seems to be working as expected. Please test!
ros-planning/navigation2,1089,2019-08-30T21:13:03Z,2019-09-10T19:37:22Z,True,2019-09-10T19:37:22Z,41da7b80f1cccfa8480a3bd166a19220c1ed7909,38,18,38f7fcb21d5f11a84021c4d87e10d3a036a2ba96 05076bf72e51f56457d8f1c463eb8222e3856689 d7f440db8bbf2c233b7d3c732c6002119ff8a281 4745fdeccf27269d275b3ba1760e2db56249d6f1 0895df8560656f98826a1527e947cf670d4d4320 a7acb33ab9747df5014fb85cbc1543ed3b9f50ef 5711646e1aeeedee3e59ee7c796d9d2a4c0e2bf6 61be8c60119e0946b2b80cb750b2ef590b114ab6 4103d418207fc7f3a48e7122685a5c689790e146 e9fa7ecfc3216ef9b7fe1a4457dd62207311a11f 3972e3cf4981a64874af6a8ccbc7c7fb75539203 fb25e8fd3a25b1e85173e31eb85702a7742d6735 0514c9aaf071166918ca85e65236a7b735e3191a 183d6eceec6740361982ca400df3cdd3626a3c85 50bb913114abda4e17132054c5f1e86866ae5aac 675717da58cbe68eed8df8bc46fbf66c1ece78bb 4efa7357d36c5d1bdec1857a7047c1ea91062ef9 71d5d7152df8e71dd7ba3aa022ac4980550d058b,,Move Costmap into NavFn process,The test updates may be flaky  I'm still working through the automated testing. #992     But on the real robot or in simulation this works fine.     Major motivating reasons:  - Global costmap is very large in even medium sized spaces  a 100 000 sq.ft space could have a costmap in the MBs. Even ignoring the serialization elements of DDS  even copying that data to a ROS message  and copying it back out for use on the other end is a huge thing to incur. Add in the serialization/deserialization processes and we've got quite a CPU and now memory hog on our hands.  - The costmaps should have access from the planner/controller directly to ensure that if a message is dropped or late  we're not running into a sudden obstacle.
ros-planning/navigation2,1057,2019-08-22T22:29:03Z,2019-09-12T01:33:11Z,True,2019-09-12T01:33:11Z,19dd3302d53edf77ec80a09e95fe44691946cfb1,5,8,8f83655e860f0c64f56e5fb7599c4b0006120727 3b78c38eab4a080dfc7e467dffe3bbc1ace2e233 07768d2ccf762337d7ae581341fac5c2090812a6 bf1cbff3d44eeca3956e360d8fbd2b0707dc8205 64eadab53456097421149f9dc8a09592151396ff 98b3cd9bc1aef99b394f714ec4571a0a6269ef20 de6988f197b2684bb0bdc12e8dc733d7030afd6f 7cc209da5ba2d775be19e90afc3a5c4d564379d0,,Add support for running nav2 with cartographer,This PR includes changes for using Navigation 2 and Slam together. These changes are tested using Navigation 2 (Dashing-Devel)  Cartographer and real robot (Turtlebot 3).    - set map_subscribe_transient_local parameter in the launch file to False when launching Navigation 2 without AMCL and Map Server. The default value for this parameter is True.  This parameter is used to set the QoS settings.    - Set QoS Keep_last to 1 or 10.    - added if costmap_ == nullptr. If for any reason costmap_ is nullptr  wrold model will stop working. this problem occurs when the QoS settings are not right.
ros-planning/navigation2,1115,2019-09-13T18:48:39Z,2019-09-13T19:21:22Z,True,2019-09-13T19:21:22Z,32d36f802e017f1bd02cf9e2eac79df980ab1ea6,1,1,3e05f5de4b806a57d37bf2d37e7d90565d7ccd4a,,Add current workspace to the rosdep install command,# Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | This PR addresses the issue noted here https://github.com/ros-planning/navigation2/pull/1107#issuecomment-530652301 |  | Primary OS tested on |   |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points    * CircleCI is currently only running rosdep on the underlay(navstack dependencies) workspace  and not the nav2 workspace. This PR adds the current workspace to the rosdep command.  * When the CircleCI `install_dependencies` command is run on the underlay  the two paths will collapse to the same directory and should be harmless but redundant. When the `install_dependencies` command is run on the overlay (nav2) workspace  then underlay and overlay will be scanned for dependencies as desired.  * Once https://github.com/ros-infrastructure/rosdep/pull/699 is released  the `$UNDERLAY_WS/src` component can be removed and the redundancy can be eliminated.
ros-planning/navigation2,1106,2019-09-11T00:42:43Z,2019-09-11T04:43:36Z,True,2019-09-11T04:43:36Z,ec34755fa46539d191803dddd4bb928b80cd8fce,6,2,eec7127d700cc5f4c1d3d35d46f723ba7d921f88 51e8663e7078d0df33afd77f3aa017cb5abe564f,,Remove COLCON_IGNORE from nav2_system_tests,Context: https://github.com/ros2/ros_buildfarm_config/pull/38#issuecomment-530117611
ros-planning/navigation2,1107,2019-09-11T03:48:57Z,2019-09-13T21:09:00Z,True,2019-09-13T21:09:00Z,a2b8ed99ab47920ebe27763451947e4a0d4907f4,45,19,465e4e1d70cf0bf4869c6297d7ad15ae7017bef5 fc9ab5d2612ad06c0f344b578657db846e16017f 92a50aa69aff2ea1dfcf3f6038052ba83c63204f a473526f4e4a4ed7bef944b27971e00bd7f5bf2f b1b33bf1a764965cc155830c8b5c9c8f7c45bc5d 7dee2eafbb57e0d1de6f2319b06798378cc60b32 867b03b3fb22beaf5e55c4cce256635f579707af af402c5329df8834e1a9744995ddcd257dbbfe21 85f32dc2b8dd3170cd450bfdf9574ac75adbd0b9 446925e9d6cd2dcb5815012acbaa09ea5a0cf194 c6ec5647746f978a836852bd34c55c083e48f030 82f56f786da0778abc79dfc5650f3fe6fd234d03 b0eda85808d39ac780319c21dcad9f9e009e7dab 8e6b959a9a8e3699dc4b7a71f34f10ac7b32d3a9 9c4367d61d3e1c11b3ae52306694d2cb9ea7110c 828516328dab3c492ed6c5d84bff232df4dd7dda 577fb6cd1b1d883b1a70ca5ce38ee973685669f2 ee184fc43e7f4ac780e58d64634b71d8c9f6a8df 3112a3d120a60be876e1a9b5e2cec437b4d785d1,,Nav2 Planner Navfn plugin,Major items    - removed nav2_msgs/Plan in favor of nav_msgs/Plan because they're basically the same and nav_msgs/Plan included the PoseStamped which is more general for model based trajectory planners  - Created plugin navfn planner  - created general planner server  - updated relevant tests and launch files  - Refined global planner and recovery abstract headers as needed
ros-planning/navigation2,1118,2019-09-13T22:25:15Z,2019-09-18T02:40:34Z,True,2019-09-18T02:40:34Z,44dcd6054ce2922dc9481a75ac07871450612af4,13,5,f5c048c909bf01941500e2308e0a29ee5ff4ef34 6d5ddd94b566abd27f3fa7100beb32428e2e36cd d2356fe532bb384da063a62dd982155f7efb1b32 061f21557d2abd9f2bf3f02911e957cd938ba9e0 66db570fa999a2737bea7b4a923102e311b505cd,1 - High,Refactored launch files,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1078 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TB3 simulation |    ---    ## Description of contribution in a few bullet points    Did some refactoring of `nav2_bringup`:  * Improved launch file re-use: `simulation_launch` :arrow_right:  `bringup_launch` :arrow_right:  `localization_launch` & `navigation_launch`  *  Use `launch_ros.actions.Node` mechanism to launch the nodes instead of `ExecuteProcess`.  * Fix launching full simulation.    I'm setting priority as high since running in simulation is currently broken (other than system test).    ---    ## Future work that may be required in bullet points    * Pull gazebo model from TB3 repo once it has been fixed: https://github.com/ROBOTIS-GIT/turtlebot3_simulations/issues/91
ros-planning/navigation2,1122,2019-09-16T22:56:28Z,2019-09-19T21:28:57Z,True,2019-09-19T21:28:57Z,919aa32c11b52b514d9c33b7722aa0800a389479,1,6,dce46bf06a47a751e6e01700115fbb97e7c8d964 ce1724d1ba3f59aa9131aaabb43cb59df2642417 6de6f2d2741d2a145a375be1bb73d667a4c4967f a1097607c27c563587317280021474e67f754580 b49a4699107018550e8cc97557a74a998f4d5a09 35e80f417ca79d5dae02e8209bfb80cf8da08110,,Cache per packge xml via multistage build,Use multistage build in Dockerfile to cache dependency install agents only the package.xml files themselves  rather than the entire build context passed to the docker daemon.    Context: https://github.com/ros-planning/navigation2/pull/1106#issuecomment-530614144
ros-planning/navigation2,1127,2019-09-17T18:38:34Z,2019-09-19T22:47:07Z,True,2019-09-19T22:47:07Z,f2a9fb7a32f2b913a6438f149f94cccfdfd08760,1,1,c9b497bc4d688756e1cd93dd37cfe1313df751e2,,Colcon mixin now installed from base image,Update Dockerfile now that colcon mixin comes pre-configured from base images.  Context: https://github.com/osrf/docker_images/pull/315
ros-planning/navigation2,1144,2019-09-20T00:15:47Z,2019-09-20T00:29:11Z,False,none,none,23,6,f5c048c909bf01941500e2308e0a29ee5ff4ef34 6d5ddd94b566abd27f3fa7100beb32428e2e36cd d2356fe532bb384da063a62dd982155f7efb1b32 061f21557d2abd9f2bf3f02911e957cd938ba9e0 66db570fa999a2737bea7b4a923102e311b505cd 072bcfc3cf8e03c93fb07e0b2fc7d05f804a0de2,, multirobot Part1 Spawn multiple robots into Gazebo,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | # | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  *First PR (of multiple stacked PRs) with the objective of enabling multiple robots running nav2 in simulation.*  Add capability of spawning several TB3's into Gazebo
ros-planning/navigation2,1167,2019-09-25T20:16:51Z,2019-09-25T21:11:39Z,True,2019-09-25T21:11:39Z,0bf7f9ce3eb1862271ccb329d515df653a24f32b,1,1,2ef6777e068b889ef306e6ce6db9c7080fb8fbf3,,Enable deprecated warnings,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | (add tickets here #1) | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  Enable deprecated warnings during build. -- we're currently getting no warnings :smiley:
ros-planning/navigation2,1146,2019-09-20T00:35:12Z,2019-09-25T21:46:37Z,True,2019-09-25T21:46:37Z,a0ee02ea932ba8e48419ce0d16f18a2ed655d7f3,21,2,4ab8930bbc86a8aa62ab8720a30d557bf2bc0a49 9cb8638cc8dc9df398aa827249d3cd129a1cecd3,, multirobot Part 1 Spawn multiple robots into Gazebo,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | # | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  *First PR (of multiple stacked PRs) with the objective of enabling multiple robots running nav2 in simulation*  Add capability of spawning several TB3's into Gazebo
ros-planning/navigation2,1175,2019-09-30T17:53:29Z,2019-09-30T23:59:54Z,True,2019-09-30T23:59:54Z,ba9cba71756234540a645d67c34b4d77bdf1c671,3,1,f6aa7217e0fadf24b467728c8c38500570ab01e5,,Re enable test_collision_checker,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1030  |  | Primary OS tested on | Ubuntu |  ---    ## Description of contribution in a few bullet points  - Added sleep after broadcasting tf transform in  `test_collision_checker.cpp` to fix race condition when collision checker tries to get the pose off the tf transform immediately after it's been sent  - re-enable `test_collision_checker_exec` in CMakeLists  - for cleanup  removed nav2_dynamic_params from the `test_suite.bash` since that package has now been completely removed
ros-planning/navigation2,546,2019-01-29T22:40:45Z,2019-01-30T22:21:38Z,True,2019-01-30T22:21:38Z,1094c1056357276ea0be79ac70c37829ed3cd2a7,2,2,7304466a6d126c286cd98e9c79b3cf1f8e728cf4 1137874d3dff511f7dd0929ce0e615a2f3d30eb0,1 - High,Enabling dynamic obstacle detection,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #544 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of turtlebot |    ---    ## Description of contribution in a few bullet points    * Some important code was commented out in the obstacle layer by mistake  * Changed params to use obstacle layer by default.
ros-planning/navigation2,1165,2019-09-25T19:47:55Z,2019-09-25T21:12:11Z,True,2019-09-25T21:12:11Z,9c061867064c1ff45167d5456d9297d8985905a9,1,1,49a0e84a412d962a387cc99d21c5c58dba71e842,,Set correct time in Planner,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | #1164 | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  Params yaml file had wrong names for the planner nodes. It was also missing a parameter on one bt node.
ros-planning/navigation2,741,2019-05-21T22:13:08Z,2019-05-22T19:10:03Z,False,none,2b05f95e910c0875f9e2c758bab06a33ae81f2e7,250,47,1b13246d5b39366bacc566688f0f50bd45ae50f3 8c6c687fd03e95c8999581b3a4d2e7aaab89a31e 8850bebb087fcc6a5c3cf0d2e326941e8e55b637 ed281b4b1fe8a132746a8a65ad43551aab8453c0 2de0b47433060f2286bb30af4bbc489681f4121a 84ffc35884edf681fbd5f2b95c8d22d2293f5967 a0ab2450253cdb3274781dd5dd061c536349912a 2a84c19774cb5230153cac041990c3b680810b5a 5291b0731059b6b8c4d25d4354f22eb67f9daef9 7b2b7bf2ed51196317d86593146838581e724f1c 20ab604ad303f57a5acbbf424e4bf256da94c4d4 2d1df9141d37b6f58cb0f30a92e6947e61b72008 4f8a3a7613a098d8bcf59d39035eda2b4ace791f c8b8ed21b65961591145d0fb3ad11dafbb5a20d8 989b465739eeb6482aecb22c509b1739f2c25a20 450e053d56c9b846754c14cd6a3fe2a7102629cc f11466a372597ef3bdfddc950a1fdf7c087f0fe4 06a6e4f032218954509ac8651c3a7dccb394dc5a 1308a5925dc8a023c71183d524b7983690e4f85e 176944d4f7a08e9d7c65c44bded13371628f776e abf33b895a85142a0c6efb084bc5391078eb45b6 cd05311b1e9c41ed0600569bae24eabc86ab586b 74e63c9a5caa3086da8be18b85076a9c88dffb2a 4c8ab63acf37592c37dcea6be06df33cd4b32152 f729650a8c0edf7df419fc4ad03730436235ae10 38d3df6b3a2cd3f44571e611f4745a64c0c88aff 90ab26e78180064dc549ea9916e5e90a64ca2115 9401c13ace49213e23822003954bce18a4aff95f 5ea16b78ba5e12b498130ee0d984862d63b569d3 07444cd0b1315d198e873ba96af9b3a10c4d797d cd532cfeb6b5fdfa614b8a2b2ddebeda500229d5 d74d184b68a76f0d57843abfbbd2668798b44936 2056c595eed97c88c7d887d6b5c56f9f56f3e537 b4eead18b734d5971a986231f8b698a329c8bae3 78f92013edcaff224e1405282bd22edd8453e0f6 e53662dd8dd0325f5e1833e4582af7ddaae4d0fc adab7909ea5c97825cecea8082edc1fdbc7f88e0 6c47baabb6ed3e30e67f289ad1f3052c599bca63 3947790bc1649301754180b46cae90d6bea2c132 fc32ca4c7680f1242f790a22541d8e7945070751 b0ed6e9f00ae3472dc7919bb59a3a59e9c599a03 35fdbda1f402db1554808973a12f729fa029af55 8fabdef30796fba662ffcf0808042122b04dd142 a01a46c7c211d2d0a43bdb2d68b5faa1344604b8 cfdebdf5a15042c7c7d0faf75cff9c8ffa990779 98e912ab29c4e18edbfbd387e3e383597f5ca804 cf0ae89ecd1c45f655523e8b5cd3b2b171df99c8,1 - High,Updating Motion Primitive unit test to use new Actions interface,As the title says  updating the unit tests to use ROS2 actions instead of `nav2_tasks`.
ros-planning/navigation2,1058,2019-08-23T00:05:38Z,2019-09-20T17:11:21Z,False,none,68dab02f12e9a442b15818b836a958c12f5f042a,38,12,0a0c03c698529a7ed515256ea7d723e61008ff05 6b6f1d9f39d663ba06e40646993a892984a3ef1d 036605a9e7201dae784cd9b794f1fbefddb4cd86 fddfa069d39289bc67fe19e71cc6a13cf8e72ba4 b3b965945c17dc5873dc66f124609ca0e1e02c23 fc754f6caf9f5ac4dca5bd491aaa5d9b6bc4c66d a29d93c6468a90cdae29ca220cd00caae6280cba 38fc5194fa2b93e433caddfeeed399e6ce9877d6 a64870012a34eaeecd0b08db2fd9f5042acd3bd9 76f86b77c765d3ac2ad1da89806a9720f4f45bc6 15efe5629adc07e694f436a65793371e1700d454 1e4d48dcb9384dab350b84636acc21a148940634,nav2_multiple_robots,Add support for multi robot nav2 simulation,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #971  |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Turtlebot3 |    ---    ## Description of contribution in a few bullet points    Enabling multiple robots running nav2 in simulation. It's not ready for prime time  the purpose is to provide interested parties a glance into the work done so far.    *The branch should be built against ROS2 master*:  * Apply the change described here ros2/rviz#442    Once the tasks mentioned below are completed  I will create ~3 PRs to merge the work and get more detailed feedback.    For a video  click the image below.    [![image](https://user-images.githubusercontent.com/39749557/63557667-7da1be00-c4fe-11e9-855b-80ca259c206c.png)](https://youtu.be/JNnt53rziXE)    ---    ## Work-in-progress    To do before submitting the work for review:    - [x] Fix launching a single robot using `nav2_simulation_launch.py`.  - [x] Organize nav2_bringup into /launch  /map  /world  /rviz.  - [x] Rebase  build and test agaist ROS master (Eloquent).  - [x] Move `spawn_turtlebot3` to `nav2_bringup`  - [x] Set correct topic namespace on the RVIZ config file.  - [x] Extend `launch_ros.actions.Node` to conditionalize remappings -- remappings are only applied when launching multiple robots.    ---    ## Future work    To do after the initial solution is merged:    - Update docs  add launch instructions  - Move `/map` & `/cmd_vel` to relative namespaces  - Singular view of the system through RVIZ.  - Fix limitations preventing from launching successfully more than 3 robots.  - Create a `RobotsLayer` in `Costmap2D` to avoid bumping into each other.  - Create a multi-robot system test.  -  Enabling a `PushNodeRemapping` action. [upstream ticket](https://github.com/ros2/launch_ros/issues/56) to prevent defining remaps without context.
ros-planning/navigation2,516,2019-01-08T00:09:40Z,2019-07-11T19:04:27Z,False,none,2059ab6fb060c8e21af17deb2377aed1856800cc,38,65,58513fd31c0fb7c1776658a77921a0a4b119a6a1 6447ce22858091249d57f5429cee136819138645 a2cedc7c208a0d1c1beeb6402444c9048f1c26ce 5535940c026c117038637da9d2fe45e7e276c7a6 b4fe6634b8a468a48c58fa4cf72b1a507a1a53e6 d08d07c73094806464692e38b1a37de97cf8e407 92df77a2c76d234529eab87d631802f848a85d87 d9670a17e305096bf9bd3190a6d49542750af276 de51b8c18e38930968ec3140ad33eeb419b41753 3f6901d02f7a1b6075c2d6ee5ae1f8bfd9c20830 5497dbfb2b1e3d8ce838826180a05bce6d8e039c 55da1bb657f651504d1955b3e94e4416106d40eb fd2e90331e9564e187225b58ee19ef6969f53500 5600606ed66e5cf7ce70b1d4ccb96bcb8e4d6c38 4a6c9f6fc14b9398de716e8b5ef3d60503220178 2e91db38d1cbef09af7b8dd36290d368723f0ad7 23bf5dee6045beb4188dc2775430e79e267fa27c 03e1b69da161275780c3ee4b77577037c8f0c915 9d202c5e4f7d258a44ec943db8c48d173470cd11 4542a4a71072426e0f7966c6a661c54a436cc2bf 98a33f4c38978078366837bb74a79bf28835f85c fc01f1bded6136b8534c32f13ea095988358bc61 ad8dbc704c2a83d83d3490b8e081e346703e1f54 ff9f3db29caf74e4eb0ff445aff05be55f5dbaff 25bb1d7295db3bd7406f6e2b0a72950fdcba4035 4840edfdd8dedd7cf05ab99b681a5ebdc82abb89 07ff3767d6a680f5e68f21fdfbbb004ff1a9b711 231d53b438430f07d296a13f7185bc7a9fb645e9 ff28d06091426b877ee0f015f4346786d3d80cd7 a6caceed04bc5d2db75c0b7c79dd9ac7d2213fab af0b39691a53191c7225c905662fed1cb59b68db 38d9b6b02a9b87c95d2ac4027d92a16c2df31c3a 14927e790b5312c7c28ab814a2eca134476fe277 71d4c915216e0f9ef939ed4dc91e77060e8a4d59 f20121d73585b0a8737861667151a983433fa4f1 5fdbd5714b03e4ffbf7b2815bc28fcef6e2d79c0 91ba67135ec4fbfe7904be0c45d357c155ebee9b d947fd9a6a79ac4c687ffb93545735c364bf2db9 8ba2821a84408a02418846c2e35e39f9dbcf9310 88dea35f66a1be4d1a62cdef9598b45d31e617b8 caaac115984b912b487074c3e740da4e1bc410ac cb3bc423e07e29dffb414b5aef2a2f2aaeaba0b2 905b5c37103ff6c458806e6f2f82c870e969ed15 2c1facb5769b9e88dc0cd99f5d08b39ba71b9a0d 92e91bc6660205d22fc937c9ab0f8ec1f4d24c7a f283a556ec770247a4a810ce719341ab2500c0d3 09ce837d6ec9549a38d25f3fe92717da884579ae 1e01eb21a0d011f06d6cca1efd20cccdabb2c0d0 fc522ce691cadd71e38472c6e981bd9775252c06 14accaeeea9c7fd405306ed189ea13a33dfd7c5b 1c5fc8d6a1e07e78f9b3038e319b300014298f7f a0de14ee89826b1c77a5784b5a418537412e076f d106d109b91d116589eca363d67316aaaf5d924f d8621c402aa0bb6177e3001e21789d64ac53dc4d f1cd625d6b23221473053ec629ca15804f257ad9 b1163bf23118120ebd77be658ffe741a35a159d8 ef82ba9006874f831d84e48d1f11c41ce344af76 2e9285b8effbe3ea093c2db3ebea36c0143d0a07 c7e6145c275867774d16b6227812538cb57b7837 67a119795d1d3811e897867ddd6c2c923f611a25 d955c2e2d489fb5abdd66494ef31ca3921abe895 361685dc18f0e14094d41b833342108260746647 bc04ad9def13a4d1f12c42c06884e668c595520c b18f98abbd97974e3c0965fc009758007599e144 b9cfd4d78d66bb8cf87804661ae5d350878e9d97,, WIP World Model refactor and new features,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info |  |  | ------ | ----------- |  | Ticket(s) this addresses   |  #379  |  | Primary OS tested on | Ubuntu 16.04 |  | Robotic platform tested on | Gazeobo simulation of turtlebot |    ---    ## Description of contribution    * Refactored `nav2_world_model`. Defined an interface for specifying different world representations (`WorldRepresentation`) and moved current functionality to a `CostmapRepresentation`.  * Added service for checking if a region is free of obstacles.   * Added a `RegionVisualizer` for displaying regions in RVIZ that get processed by the world model.  * Defined a World Model client class.  * Modified the Global Planner `Navfn` and  the `Backup` motion primitive to use the new world model client interface.  * Added a new method in the `MotionPrimitive` class called `pathIsClear()` that motion primitives can implement for checking if there is enough space for execution.  * Modified `Backup` so it checks if there is enough space for backing up before executing.  * Added a new nav2 service description for specifying a rectangular region.  * Added a `robot_centric_costmap` with only the obstacle layer enabled and centered on the robot.     ---    ## Future work    * Obtain robot footprint on motion primitives #524 *
ros-planning/navigation2,1176,2019-09-30T22:22:27Z,2019-10-01T20:35:18Z,True,2019-10-01T20:35:18Z,a0a9eb237635c44cc5e2fdf4c274af95ed233609,14,7,4d80d5d33891e524ec913b7a49df0d7613b09b63 e17b29eff0965333b7466878d68fd19c6a8e0bd8 0d21ddd4d345ff932323076145ffdd983796f133 2c84c534b8fe28776aab199729c29ce997af74b7 e9e96a391f7b72d72fdb7d1ff6e0370351c5b1c1 21a3b113c1b350283211ecb2562a86e3004bf54d 691abe365d2561a61142e38da1980e9a14c8b6d8,,Wait recovery,Adding an additional plugin recovery behavior     To be merged after #1131 (and rebased)    I also removed the `bt_navigator.xml` from the bringup package  it was an exact copy of the non-recovery tree in the behavior tree package and was out of place    The wait plugin is very basic  it just waits some particular amount of time and returns success. The recommended use in my mind is the very first thing you do is plan -> control -> fail -> wait 2 seconds -> if OK continue  if not continue with other recoveries. It is often the case that just stopping for a few moments clears up whatever the problem was in a well tuned system    A more useful version of this is to have contextual wait behaviors. Wait until XYZ. An example would be "wait until person is gone" if you're failing to plan because there's a person in the way. Another would be wait until dynamic obstacle is gone to be more generic. Wait until unix time. Wait until external command. Wait until... All can be fairly easily created for a specific robot  but I'm not certain its too useful to try and provide any of these that would work in a generic robot in a generic environment
ros-planning/navigation2,1138,2019-09-18T21:50:12Z,2019-10-01T20:41:12Z,True,2019-10-01T20:41:11Z,a05c9440e76dfd0d76f243740c143a2a1b5d7c1d,61,2,9e935f4a31d70914bb962f1a0121863505ba70b3 60240ff90d01a35017002318407da556c40fba49,,Sphinx Docs Template Only,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on |  |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points    * This PR contains the template we'd use with none of the content migrated over.  * I previously converted the old markdown files to RST. That content can be found on the old [PR branch](https://github.com/crdelsey/navigation2/tree/sphinxdocs/doc)  * The built version of the docs are visible at https://ros-planning.github.io/navigation2/
ros-planning/navigation2,1158,2019-09-24T06:11:29Z,2019-10-01T00:30:56Z,True,2019-10-01T00:30:56Z,0df1713bcb4bbe43471c9ed45cae84065bfb8875,2,4,555bd7fb629480b6944a388d25f30ae416434521 f4e704864be972f861d8b62cdd82ac71db75fd38 da9cec635fd3c87c4ae2fc7086929503b6c34d87 e96d1851351deed32d4324e16b10c29ec5229b37,,Fix underlay parameter for install_overlay_dependencies,Use `/opt/underlay_ws` as the target underlay for overlay's `install_dependencies` command  otherwise the checksum.txt for the overlay is improperly copied from `/opt/ros_ws` instead of `/opt/underlay_ws`.
ros-planning/navigation2,1142,2019-09-19T22:53:54Z,2019-10-01T05:02:55Z,True,2019-10-01T05:02:54Z,8e88686722032298b1f1f77e684185972fee5aba,2,1,818ae9d83d7920e9855fcf2650beb5290ca89dad,,Use ament index to resolve rosdep install,WIP  waiting on:  * https://github.com/colcon/colcon-ros/pull/79  * https://github.com/osrf/docker_images/pull/323
ros-planning/navigation2,1198,2019-10-03T21:45:51Z,2019-10-04T17:09:25Z,True,2019-10-04T17:09:24Z,7e41f13e5ed7d40c1ab99f359714d24c5deccd4b,16,18,7d5b0d44fc7227b5df043318b0ec8344ba845ebe f5169aa137a5b5037506c2bb8003c20cc397d74a c89ff44f0575f7cbf5a2abb38890735ccfb6f42a 79e9f96bdece2d05ca601fdcfd8ec0c03769905d a65ae1f29a04d6042ee86797a6f88b4d307feb83 6abcf09cd4d848fbf0ada4ace06601470235a878 021de46adf4b47576b8598e91fd67e49871d9e29 2e69c8778b943b0bf44a809e6c48de684928fab3 c1525db889d51774a329f51e8dc98c5bef3f6f4a 5237e20fb0c40b3281ff0aa7bacdc9ccd487267c 954a03c210aaf876f32896374b6417d33bb83e80 7d828179551dc2d8b4b18e707d670a426d355340 c6ac213aead6d631972ee1d52720019546a2be13 43c1182b4ccb3156418d94158c63afd2221dda86 2ad1439748709210cb89ed1fa2e9dcfa7ad67438 7f09b640b59a230015e1b7cf5dcccce176771cc6 c3e6f21e62a49991169007518c2440e2d93e318a 47b0f1f90b58b41365f5307bde29446d396124d5,,Dashing 0 2 5 Candidate,Do not merge yet. I'm still testing.
ros-planning/navigation2,1119,2019-09-13T22:40:14Z,2019-10-03T20:22:25Z,True,2019-10-03T20:22:25Z,126464caf33a465b9944de5d4a0ea287c6935cfa,5,11,96a08878873d5a0f00e0fc7ecb063e37aff547eb 62902ee5d09288c9fe88fa0648b8cf437769ea8a 946624760cb7777524e99d0c07c05055957e6350 2eb268a1d6627b5b57b3e3aa3ffce849b81e0005 7e3db2ceb6509df28548bcbee97b053868988678 0fb0a1fca2f980b1aede0f0089945652303a9078 22bacd0ea22330bf319ccf4ebbd70dfa0974f7f9 0a16405b82dbda6ef92de7769e3fe21c06e7422c 15248e577bfdae61ae5f24280c3ae1805f404833 1adfe0df8b79e137a0cd5fd36d96428d45a16ede ab468f613b38c9aafc3a571ba339c6eb76ce4186,,Build navigation2 in the same workspace as ROS2,Context: https://github.com/ros-planning/navigation2/issues/496#issuecomment-530479067    Building this Dockerfile took a total time of `12m36.300s` on a workstation with   * Processor: `Intel® Core™ i7-6950X CPU @ 3.00GHz × 20 `  * Memory: `62.8 GiB`    This *might* be buildable on Travis given current timeouts.
ros-planning/navigation2,1212,2019-10-09T00:46:34Z,2019-10-09T17:28:18Z,True,2019-10-09T17:28:18Z,8905c3fc988fe76614e31ad2080aff336006c8c3,1,1,19392bdce82dae01d3314a07f87bfeeeef38ad9e,,Move scan parameters under obstacle layer namespace,The scan parameters were not being set from the yaml because the `declareParameter` was expecting the parameters to be under the 'obstacle_layer' namespace  e.g. `obstacle_layer.scan.topic'.  Therefore  the obstacle layer was never receiving scan callbacks  causing the robot to ram into obstacles since the costmap was not updated.    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1208 |  ---    ## Description of contribution in a few bullet points  - moves parameters for the scan observations to the obstacle layer namespace in the `nav2_params.yaml`
ros-planning/navigation2,1213,2019-10-09T17:52:28Z,2019-10-09T22:00:31Z,True,2019-10-09T22:00:31Z,277582ee17d94a1b09d55981259e859710199510,5,8,36ba821af69ecca096dca6660a410a77da4bedb3 bd0dfd55608d5c0a5aff8658039d76b02b6520c1 ac47b8d3bdd5034b4a86a09314465593eed79469 207ca0f1738e4978b2f1398d9f33e7a7ab95b80b 73f3e0f4bfc464ea99548d3666e7806d196cccdb 08a045197e23e72c7104e1e26dbd0c711ccd3457 1058c03f0d9544c6fa3d082908ca167b610a6989 f643120760f20c6701eb70a342396112877c8089,,Backport Nav with SLAM to Dashing,This is the same change as PR #1057  which is in master.    This is a simple enough change to back port and it was requested for integrating into the dev kit.
ros-planning/navigation2,1222,2019-10-11T17:32:31Z,2019-10-11T17:47:18Z,False,none,5022734e8346ceb6a4b6f75fd2511e2024a28ad1,1,2,1530e10b95e1000fc417244244759a1fe43adcdc bc9cc6181cf0c798190838bb12b0ca984e655ebc,,Update ros2_dependencies repos,Remove unused dependencies image_common and vision_opencv    ~~@crdelsey I think these are no longer necessary.~~  Maybe not.
ros-planning/navigation2,1232,2019-10-11T23:47:00Z,2019-10-14T18:41:33Z,True,2019-10-14T18:41:33Z,aad1f2433b6ac41c68a9c04afee6e89469f87eb4,33,1,9db54b7ed34168024d1bb5505c7a104c9fa62ef7,,Remove unused test dependencies and files,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Removes unused test files  * Removes unused <test_depend>s
ros-planning/navigation2,1259,2019-10-18T19:12:30Z,2019-10-21T23:04:01Z,True,2019-10-21T23:04:01Z,caea1d2cb748cebaf2b3444675226e8db14419c8,4,3,0c098c0606a47781e6ddbc36ed6e3bed22f24335 e43f32b5a58a5195017c3327d261217e99158a0b 55571cf648f021c67200bbf7d8396f5ff63ced16,,Add arbitrary obstacle in CI map that isn t in static map,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1253 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Gazebo simulation of TB3 |    ---    ## Description of contribution in a few bullet points    Addressing #1253. Here's a [video](https://youtu.be/FcJejE2xqd0) showing the robot successfully navigating on an alternate path.    ---    ## Future work that may be required in bullet points    Even when the scenario is straight-forward  the test still fails occasionally. We need to improve the default recovery behavior.
ros-planning/navigation2,1243,2019-10-15T20:38:15Z,2019-10-21T23:44:08Z,True,2019-10-21T23:44:08Z,5d1319eebbb86a74823eebfcd6495263acd1b6cd,26,7,a64ef05f68e4319d3ac6b9ce98b20ddddcf1f58e 2481fc9025d05a2912e14009a39ae9b119c55e2f 1d2fee6a42cd4f9c03e6bf7d049df7cd99e79315 ba97693bce815390e50809df2d33d464e742f06b 20753ec3f7b3a0a2cac11fde92acfab3732bd126 9cb8957aaaa92e247abccb885579881d233ee475 73b10a7eb020d267ae22545c51e07c1b051f4ef8,,Refactor System Tests,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | # | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  Adding multi-robot system tests and addressing #1135 and #813.  * Created a `NavTester` node which can be used for testing with single or multiple robots. * Added launch files to test multiple robots. * Added TB3 model files needed for running tests on ROS build farm. * Updated `spawn_robot` to accept any robot sdf description.
ros-planning/navigation2,1251,2019-10-17T00:31:14Z,2019-10-22T00:09:05Z,True,2019-10-22T00:09:05Z,ce23b5eca5ff29ee10e5c3576bbf9d8d8a3a73da,27,7,15dfca5354353f65b3d7d3e285dffd4a8aa9a851 7cce8f0d27373a39711acaf6869ebd3a47aba927 c0bc93ac25dfb02b5c203c79ca5d1da73dbbd91d 04f38860416449aec9423668e5bba8583f7d752b b911e8e215319c19cbe95edea6dd7778cdef1bce c03ba3353209c3203f9f50dda6a30c3beafb2fa8 037a5f5f0a32c73958afd9b66a469a2337c7d30c,,Migrate to Behavior Tree V3 ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #958 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  System Test |    ---    ## Description of contribution in a few bullet points    * Switched to version 3 of the behavior tree library.  * Major changes include:    * Parameters in the XML are now ports. The classes now use the new port interface for that data.    * Tree nodes are provided a configuration that includes the ports instead of being passed parameters.    * TreeNodes no longer have an onInit method. Initialization happens in the constructor instead.    * The blackboard is accessed through the config method instead of the blackboard method
ros-planning/navigation2,1273,2019-10-22T23:42:40Z,2019-10-24T19:09:03Z,True,2019-10-24T19:09:03Z,ab2c71d0d81cd67774a35a0d571728cd503ceb49,1,1,c3213c5d0f4e06af791c170e5fa379923ba79433,,Switch behavior tree to dev branch instead of 3 0 9 tag ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1) |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * Switch the build to use the latest version of the behavior tree library instead of the 3.0.9 tag.
ros-planning/navigation2,1242,2019-10-15T20:03:57Z,2019-10-24T20:09:28Z,True,2019-10-24T20:09:28Z,88d94d18a889748086f2ee652575408df5a9a359,12,7,bfa922cbc1b42aad6f0b40f8eb2179f4c606f5b5 847f0561dee8cf0a22df3928b01595512cd16b84 1191492552ac446a1a5bfe64f6ca786c303c830d 453cd5289a7eab7b561530e1abb47fc68ff1e78d d893decc456caa5a58fa4bf073e01233ef85a7d1 1799e14fb57bb309fe757d2fd8a494dd63fc5c17 f74cf2c643798fd64864b82b34c2fe0d25210a00,,Overview and Getting Started Page for GH Pages ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points    * Adds an overview section to the main page and a getting started page that takes you from 0 to navigating in the simplest way possible.    **NOTE** Since the site isn't really considered live yet  I went ahead and published these changes so it is easier to see what the result looks like.    Take a look at this page https://ros-planning.github.io/navigation2/  and the Getting Started page below.
ros-planning/navigation2,1287,2019-10-23T22:20:30Z,2019-10-24T20:12:49Z,True,2019-10-24T20:12:48Z,72221ba1e7feda486405b12731e6cef22878f0af,1,1,6e8f2920c613c0401a4f38a1dbabbb841b55ec51,,Cause build output to be sent to screen to prevent Travis timeouts ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1281 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Testing to see if passing console output through prevents travis timeout failure
ros-planning/navigation2,1311,2019-10-28T17:56:43Z,2019-10-31T23:22:35Z,True,2019-10-31T23:22:35Z,1a1070ae8fd4aa19436773bd0877f5ec093f9170,1,1,7c1b31d907ae31d9f4781b6a6e558881db34b044,,Run multi robot tests on Travis,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1308 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Gazebo simulation of TB3 |    ---    ## Description of contribution in a few bullet points    Addressing #1308  tests have been consistently passing on my machine so I think we can enable them.
ros-planning/navigation2,1214,2019-10-10T18:49:07Z,2019-11-03T11:38:06Z,True,2019-11-03T11:38:06Z,a227539ea9a9d979baa91e1139cbcf60499ad564,14,24,8f0b460147a9c574afee232c176b5575a294760b aecdd12d2366ede6404a37a6449b887da0732a8e 4bc4dc9fdd662f07b8887d9980280bfa448691bb 84ae766fbc098fbf406b585ced5700caaec51164 5d0aa7218fc9521a8c7f0e5dbdf4d6de5d46008c 29c3fed3b882a1b209efe0117389d69fbd2f7ab5 03e4a59d8b94bbeb68ebfeed663f6c168d962c38 4ba5e55da6acf04c231c98f3ef4ebbc448f61fcf 38882580bec7777edfaf2f3a108fa565ff3b25a6 3c57c076eff7986c605570378c50eee485281d74 fff4d673b4b7ffb517bce1cb97b5bc850a695682 6154be4c56c3553f3798e261f80490846d34daba 73ea1e47ced1517631fd6943f7067a912291bcc7 bddb25f8627e996348349413be317494fed5e3ae ce1ee1cf00e1359c4ca0eca23d9c2d2ce88691e7 26ac5be349005b79f9855dd626fa10149263e6b2 19169b58b1ae5789b0e925da5dd4edfb6a61dc28 17f9573226f12035b0e20865f57dc616d146ef23 fd064012817cadab463a539bd94d16210ab7fd0c 83155d083175feae244c33a85502b609c0352f15 11fdc904c121307007a7c461b36a08715d27a5dd d2d5881b855dfadc85b9234d9383ace27e794a21 7ca68ffacf08cc574c16a375c710f3df42e307d7 45fdac6a42692c6d5fe7f5c59bfc09c066256550,,cleanup all globally hardcoded remaps for multirobots,Fixes https://github.com/ros-planning/navigation2/issues/746    This PR cleans up all the hardcoded global scope topics across the stack so were not unnecessarily remapping basic topics.     Passes tests but I think @orduno is in the best position to give this the thumbs up that it resolves all the issues he needed the remaps for.     Now the remaps are just for things genuinely needed (TF) where there isn't (yet) an option for a prefix
ros-planning/navigation2,1324,2019-11-01T23:03:07Z,2019-11-04T20:54:43Z,True,2019-11-04T20:54:43Z,9d17355276f77eed01cf6ef8e788155f8167b371,1,1,9e957642e9fe7a0a4240c2bc18dc53f1b55f14c4,,Track Behavior Tree 3 0 9 release tag instead of ros2 dev branch ,There is no "stable" branch the behavior tree repo. We just need to track the latest tag instead.    The branch we were tracking was deleted  so this fix is needed to get CI working again.    We need to update to 3.1.0 before making our Eloquent release  however  3.1.0 doesn't build successfully yet  so I'm tracking 3.0.9 instead.
ros-planning/navigation2,1291,2019-10-24T16:06:13Z,2019-11-05T07:30:19Z,True,2019-11-05T07:30:18Z,49f0a124d742105ecccc0ac8b96ef1e549c50fac,7,10,5766c44d33befdad364093b1d7d85802eaa3a6a2 17c1ecf88883aabe0419022d2f74dc1350b765c1 97e734f35fed70f2cd131f4b5ecfa7767d22fd8e 9a1af6e4c5216456ec957e116cd528b666c8cbbb d152d51145bc0344568651d446cdae51cd76d141 e953f6bb7e80a8743ac0265a4f95ecdd70889fb5 c8c17c66cc0e0885a0a95ffcbc29f2826240e78d 7497265f8401cdf565ea4eb81d6019dc505720a9 9bcb25a0d01560c4b317129bfaf21f9beb3711d3 6e48ee2808986c7bb60eac2f1402ecdfdaa22913,,Enable voxel layer,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #955 ) |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | Turtlebot Simulation |    ---    ## Description of contribution in a few bullet points  * Voxel layer enabled  and used pointcloud2 data.  * Tested with multiple sources using obstacle layer (scan and pointcloud)  * added short documentation in the costmap_2d readme file    ![voxel_obstacle_avoidance](https://user-images.githubusercontent.com/12860979/67730537-8a390b80-f9b2-11e9-8835-bf1cc3e79a94.gif)    ## Future work that may be required in bullet points  * Test with real robot
ros-planning/navigation2,1269,2019-10-22T18:24:48Z,2019-11-06T14:12:43Z,True,2019-11-06T14:12:43Z,48dc74bbdd48995b5e27358a9baad83f48b13d65,41,17,53e1a31d005d619ec7f1cb8716c1e42fc916ea8f 3a8846f9d295fa4f3f16c70ef1c14f90f0b4fe9d a808659de60f3567e0a9dd8c73f82179d4b89275 4958f679352f23c65152eb2b9693672f5ad93468 d68b449c892b38b5239bc7a5f32c166c752f8a2c 5305df903955768942791b3ddcdc036b71a88617 7ce209f99d1fd905bdcb646e4663357b5edfef38 f9ba3f3c197a2edd5e4cbd402c29e313bec266d2 a8fece364864c3a32758d32fba758eabfe37bcf4 8bd82a7489cf145d6003a3e3f3e7ec0c95fbe873 401f2bdf42276c1cce01046bc4a5c9411e30acb5 47b8ed92488836a137bdf4b97cf71fe4529427e7 6da9d3d9e34a9623e28c205ebc9178e6f914de3f 56b98782ad86c12311aeb45720efb66d9f07ed21 2bfffb05771a9514169cadc1ea51376f21386a20 e70eb08b704bb0cd52ad119373f12f75c89166bc 65dab923acb60e7b6f56470a154a80965cb7dd25,,Multiple planner plugins server for contextual planning,This is a draft currently addressing the discussion to allow for multiple planners and controller to be available in each.     Right now its just the planner server being able to host multiple planners  but I wanted to throw this out here early for comments if someone has an issue.    My plan:  - [x] BT navigator refactor/rename compute path to pose to a general planner  add a name field  - [x] test we're getting all the good stuff hooked up    If anyone has strong thoughts on plugins within BT at this time  maybe we start here      If anyone has a better name than `ComputePlan` as the map name for `NavfnPlanner` plugin  let me know  I'm not good at naming things
ros-planning/navigation2,1343,2019-11-11T20:23:40Z,2019-11-12T18:10:42Z,False,none,3c358039903a6ea8894f3bb537015163c286ad40,1,1,418abeee470137ec8b5e0e549d53ca48e2c2a852,,Reduce the number of tests run in Travis to just a single system test ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | CI |    ---    ## Description of contribution in a few bullet points    * Travis is frequently timing out due to the number of tests that have been added. This PR turns them all off except for Dynamic Obstacle. That test should cover the vast majority of the functionality that the others cover without being overly time consuming.
ros-planning/navigation2,1323,2019-11-01T02:58:28Z,2019-11-11T19:41:02Z,True,2019-11-11T19:41:02Z,43bace3bbb9ddec4d2b362b56af05957194233b7,22,5,8e0b2612a39874aa032cdc060f7e8853dda55aae e4770e44a226174e57e6fc14b27f61a9c6d87603 78a1c33d2075edd44c18ed9b7c51cfdf2daca792 2f8fbe6b5a40a1959d62e6fe84341ad6491220b9 483b3d993bb81464d0691e57f202a0960d7d8bb5,,Enable dynamically loading BT nodes,---  ## Basic Info  | Info | Please fill out this column | | ------ | ----------- | | Ticket(s) this addresses   | #942 | | Primary OS tested on | Ubuntu 18.04 | | Robotic platform tested on | Gazebo simulation of TB3 |  ---  ## Description of contribution in a few bullet points  Addressing #942:  * Making the existing nav2 behavior tree nodes plugins. * Modifying BT engine to load plugin library specified on params file.  ---  ## Future work that may be required in bullet points  Provide documentation explaining users how to create and use a navigation behavior tree with custom nodes.
ros-planning/navigation2,1249,2019-10-16T06:11:47Z,2019-11-13T23:17:13Z,True,2019-11-13T23:17:13Z,e3997789b18d2c737ce4f0be79becf1f03d4d7d7,3,5,eba478f69b11720fa8bb8a3b04afcfad8e9b6c03 28d4a55f11a4b4b7550af320b618033604739933 a820cb7ed4f5eba0006e42c403e96d2e041f3fbd 7b8e8d9b43c5c6cc21092862b1c6dcaa82540c9d 2fd3f150169aa230b7f7f939da2912bd43a3b5ae,1 - High@for review,Turtlebot 3 Waffle Gazebo model with ROS2 depth camera plugin,I am not sure where exactly this model and the robot description file should be in the repo. I am open to suggestions. Depends on system and network performance  the camera update rate and picture resolution can be reduced and rbg camera sensor can be disabled.    This robot model is needed to test;  - voxel layer  - robot with no lidar using depthimage_to_laserscan    Do we want to have the pictures and the readme file in this directory?
ros-planning/navigation2,1334,2019-11-07T12:30:10Z,2019-11-13T23:43:18Z,True,2019-11-13T23:43:18Z,f80356380f765d75d0cb6db62332d3917983eac0,23,1,132d4aaf284fb31c72d478e5cc8b07441e7ca268,,updated header files with v3,Behavior Trees Library in C++ has now updated their include directory files from behaviortree_cpp to behaviortree_cpp_v3 in their latest commit in [ros2_devel branch](https://github.com/BehaviorTree/BehaviorTree.CPP/tree/ros2-devel). I went ahead and updated the includes in navigation2 header files to reflect this change.
ros-planning/navigation2,1313,2019-10-29T17:39:18Z,2019-11-14T20:02:37Z,True,2019-11-14T20:02:37Z,d8b8a9a0c41d2a86795a365d49d833c3ecd2b3e4,1,1,44f766a08a91310fe2bdb479bcb0af414e0d6708,,Script to run the thread and address sanitizers ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #850 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * This is a script to run the thread and address sanitizers on the navstack  as described in https://github.com/colcon/colcon-sanitizer-reports/blob/master/README.rst  * I didn't see any serious concerns  but I've uploaded the results to the ticket. #850  * We should run this manually from time to time to see if there are any interesting results.
ros-planning/navigation2,1340,2019-11-11T19:06:31Z,2019-11-15T00:51:39Z,True,2019-11-15T00:51:39Z,2e28e23a4beb5db06dbdd0849ad4a90e781eb40c,2,4,b6f8a45e9d568539149c50707a30d95cef4e1a20 b316ab9c36e19e8c5bcb323d92a771c7f9d2bb11 7dcf392de2e7104f29bd96723bd1b9c44aa0f2c6 406cb94c7a2aad2f68cb93f0c6dac2e96e44d3fe,,Attempt to filter out generated message files from code coverage ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #973 |  | Primary OS tested on | NA |  | Robotic platform tested on | CI |    ---    ## Description of contribution in a few bullet points    * Add filtering rules to remove any files in the _msg packags  so they don't affect coverage results.  * Also  reduce the number of tests that Travis runs to improve the odds of completing in time.
ros-planning/navigation2,1223,2019-10-11T17:50:20Z,2019-11-17T16:47:49Z,True,2019-11-17T16:47:49Z,8fe5dee535410c55b0549ab22710a22a045fb532,4,3,648ecaeaf128d497c778f3a4591f9a8805c64713 cc1a7f4858498d195969d1242a4eecae83ade98a a642460e107dd07a6da90caab37454dc947de466,,Update Dashing ros2_dependencies repos,Switch dependencies to dashing branches
ros-planning/navigation2,1364,2019-11-16T20:53:49Z,2019-11-18T21:04:55Z,True,2019-11-18T21:04:55Z,827506be1fed4887935043f8d0501671df8a77a6,2,1,c0963c8fbc4fa225f200f6fda944f08a259b06a3,,changing docker file removing travis,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #1360  |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points  * Changed docker references from my docker images I set up to the rosplanning version (can't believe that was still there  I did that so long ago)  * Removed travis badge and travis file    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->
ros-planning/navigation2,1371,2019-11-19T10:07:42Z,2019-11-22T22:03:13Z,True,2019-11-22T22:03:12Z,4ece520ba87e1a813fb6d5dc680c01dbb94873af,14,5,fb781f63ec9f55622e32e20e690c0f0660aaf41f 2e5cefc19c961127d823f376d932e60c85fbb90e 1b9a0c7aaa0331cb4e8c6d91372c8f3d02f7f2d1 50a70dfa68cacebd5ffbe41694c2561dfd8edf4f 8bd1172d3e5261f3416a056ad59e03efa0ff722f,,Fix parallel replanning in the behavior tree alternate implementation ,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #1301  fixes #1307 |  | Primary OS tested on | Ubuntu|  | Robotic platform tested on | TB3 in Gazebo |    ---    ## Description of contribution in a few bullet points    * This is an alternate implementation of #1336 that the team mostly prefers.  * This uses an alternate control node that I'm calling PipelineSequence for lack of a better name. The comments and documentation for this node should explain how it works. I'd start with reviewing the readmes and the comment block at the top of the class definition  * This approach used in this PR simplifies the overall behavior tree at the expense of a using a harder to understand  and maybe not generally useful control node.  * The behavior tree image generator is essentially identical to the one in the other PR  so  if you've already reviewed it  you can skip it on this PR.    Here are the new behavior trees visually:    ## Navigate With Replanning    ![simple_parallel](https://user-images.githubusercontent.com/39749483/69137261-4006ef80-0a71-11ea-8693-836ad84f4b23.png)      ## Navigate with Replanning and Recovery    ![parallel_w_recovery](https://user-images.githubusercontent.com/39749483/69137282-4f863880-0a71-11ea-9d59-849f6b68b7c0.png)
ros-planning/navigation2,1336,2019-11-08T01:29:50Z,2019-11-22T22:03:44Z,False,none,e868b630ada20691afdd276c310aab48eb62a589,14,8,8d1df3b0a87f837eaaa29a2bd633c0e064de59d2 bef6c646c3d7ead12ea2ba5baeb16409770c90bd 6311c40933c47ca86b2ced799c62458dedb72b5c f6d495e95dc7ff9d1736ef238f909520cc2cfebf 08a82aa78d459aebe3bd749bd95074e157cb928f 9bf289d3e7443ffbf077eedbb5d9a6510d993a10 072a8e4d097e8216683272321ad375bb7aca82db eea1ca0bc248fefc953c7bdd3f9e24282734afde,,Fix parallel replanning in the behavior tree,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | fixes #1301  fixes #1307 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 in Gazebo |    ---    ## Description of contribution in a few bullet points    * The `sequence` node in the V3 behavior tree library works differently than in V2. There seems to be no way to have two subtrees running simultaneously in V3 unless you use the `parallel` node. Unfortunately  I couldn't find a way to use the  `parallel ` node in a way that was convenient for us.  * Instead  I created a custom control node that runs all its children in parallel until one of them completes.  * I modified the behavior trees to use this node.  * I also added a simple python script to convert behavior tree XML files to PNG images. This can be replaced when Groot can be used to edit our behavior trees.
ros-planning/navigation2,1400,2019-12-02T22:45:54Z,2019-12-03T21:29:43Z,True,2019-12-03T21:29:43Z,6d8e23f7e9e9490fac58cbff755cb1d1d2b6be8d,2,1,1aa81547b0c639b2bb68c50e722669233eb5ac52,,Enable auto publishing of the docs on the master branch ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | NA |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  NA |    ---    ## Description of contribution in a few bullet points    * This change will cause CircleCI to commit the generated sphinxdocs into the gh-pages branch  * This causes the actual website to be updated.  * This will only happen when a commit is merged to master. All other branches are ignored.
ros-planning/navigation2,1403,2019-12-03T21:57:30Z,2019-12-03T23:53:00Z,False,none,f49ff68f5c20e3fc9d4180c2f053af7f8c7f98cb,1,1,557990a5ca7175e81ab337cf3ca43ca388993a0a,,Fixing CircleCi config to publish docs ,Please ignore this PR. This is just to get CircleCI to do some pretesting of the config file before I push to master.
ros-planning/navigation2,1186,2019-10-01T22:48:30Z,2019-10-05T05:31:53Z,True,2019-10-05T05:31:53Z,07c17a3cd9f8697915a82431b4e8b8cfc8c71506,11,5,eedada188308a0f16ab91178648bced900071540 af04d830f21fb000e7f6aada71ebc1a7eead7787 b034c0fa9b90f78acbb4378454c83508d3a00a8f ed0f88401f0890f204dc6845150fb4b80075ad8b 47407cfefdb57de7889898e1b638de6061874dca,,New Gazebo world model with dynamic obstacles and a map,New Gazebo a world and models for testing Navigation2 and training reinforcement learning agents.    - Dynamic obstacle Gazebo model (Randomly moving box)  - Empty room Gazebo model (20x20 meter empty room with walls)  - A gazebo world model with an empty room and 9 dynamic obstacles.
ros-planning/navigation2,1045,2019-08-19T19:26:06Z,2019-09-20T20:36:12Z,True,2019-09-20T20:36:12Z,ea0524fb6a75b9ab8f113556ff5d6e492fab6e0c,51,11,d2ecf9576c3218e1746a28fbe4ce9bdb88a89260 d81be902e02de5567b168b9ba3de1b7426f58d08 cdd3723efb189e06eb2722fc91bd386ef0d60269 29b13a598358d871fd9324b6417a8fbfeb1dbfbc ac825943f39fa504d72533616f5b2f87f9c40261 ec7cf0a93f84a9c1e5a27a769b2d335a8f749519 538ccbcb994b33c43afb1ce02048e9ef7f0d41d5 39bc7f6ffe24ecc637b708146fef6865da0ffaed ea444f0c69be82777c34f90e4ff2060c3d6376b2 374440cdf7bd50d4a80f3add542fbd6933dfd34b 011305d4df3c8c0b72d762e78b2596fcc22a68ed,,Planner interface and action interface for local planners,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Adding plugin interface for local planners |  | ------ | ----------- |  | Ticket(s) this addresses   | #943  |  | Primary OS tested on | (Ubuntu 18.04) |  | Robotic platform tested on | gazebo simulation of turtlebot3 |    ---    ## Description of contribution in a few bullet points    * The UML diagrams for these changes are in #943   * Created an interface package in nav2_core. This has the interface classes for local planner  exceptions  and goal checker. This extracts the interface parts from the nav2_dwb_controller/dwb_core package.  * Local planner (dwb) is now a plugin to nav2_core  and other planners can be now added as plugins to this interface.  * Created ```nav2_controller```  which is the action interface for the local controllers. Local controller of choice can be defined by using a parameter. This gets rid of the nav2_dwb_controller/dwb_controller package. The executable is called ```controller_server```  * Changed from ```nav_2d_msgs``` to use 3D msgs from ```geometry_msgs```    ---    ## Future work that may be required in bullet points  * More testing with interface functionality  and other functions/classes that can be made part of the interface. E.g. GoalChecker and ProgressChecker plugins
ros-planning/navigation2,1052,2019-08-21T23:02:35Z,2019-09-18T19:56:00Z,False,none,66952090dc83231872273188b232b246c61fc1ac,104,15,f71b6c7e16e7d2eaf7408cd24b9a78ade457219c 30363cbda2f601bf3b306e3bca587d2960479a21 bdbde4684917a1fbdb338746a497ded27b1aa438 db07d4a438149a7219b4e673713bcc671c29b2cd 2b73e09e61d32d3909d4867d660118cd05743c47 35c9568cc7bfc116137a2af93b4188d4b18f15bc 62f452e6d411e92aec11cab961233fc2ab2fd7d9 1190c148e3e2f583735a7a45904d130baffaa1ed 6671fe10e99f018ac5c706a4ef0602eee1712573 bb3bfee1a71c245c3ebc4a0c832961d6eb76113e 208b4d587a6082d47ba0b3bf2225778479881a1e af2ca4efa29ac365ce110ee6a5a362f7edabbf9f a23e7d58f3c7524ef54ab0ed841e3d43ea629939 cc0e1d44bc3d519355cf96b871ed3c9605fefb8f c04f51e01324cd624fa4e881ed0ee67e93976096,documentation,Migrate docs to sphinx template on Github Pages,## Description of contribution in a few bullet points    * Restructure docs as a read-the-docs themed site and publish to github pages.    **NOTE:**    I'd start the review by going to https://ros-planning.github.io/navigation2/ and looking over the docs to get a feel for what this looks like.     If you aren't already familiar with Sphinx and Restructured Text  review the docs documentation at https://ros-planning.github.io/navigation2/contribute/doc_guidelines.html and https://ros-planning.github.io/navigation2/howtos/docs/index.html.    You can review the actual files changed  but most of it falls into the following categories:  1. Import of template from OTC-TCS team.  2. Conversion of existing markdown files to RST.  3. Moving files around.    I avoided making much in the way of content change in this PR.
ros-planning/navigation2,1388,2019-11-23T00:16:12Z,2019-12-05T19:19:44Z,True,2019-12-05T19:19:44Z,54df1fa413f15104adc0441246f5a6deb2293efa,9,9,dce13f805908dc96fd4828a8c171926112e6e692 a55cb3aa1a73514f36d73d4202051662b6a414e6 0edc6d4db6ac76a733ac3eee06174d07b988d738 9a1acf90186ca0b855e04278a1c7f5ea2a0a1e34 4920a17bc2c25c554e0ca70ad4ea5eb6a86de7fc d27ed70e0408c978f25abf5d06ec5616389ea111 8e4c38b8936345795ce5ec62d2d2ed7255b904cb 84270336909bf67ab3cee59e7ab92e99d4388cda abe8f10cc1e486a29f7d91966641753a893ecb59,,Be able to invoke a single recovery action at a time,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (fixes: #1206 ) |  | Primary OS tested on | (Ubuntu  18.04) |  | Robotic platform tested on | (gazebo simulation) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    - Addressed #1206 by adding the round-robin node that Mike introduced.  - Round Robin is a custom control type node that can have many children.  If the child returns RUNNING  it will tick the same child until it returns SUCCESS or FAILURE.  If the child returns either SUCCESS or FAILURE the node will tick its next child. Once the node reaches the last child  it will restart ticking from the first child.    - Fixed a bug in the planner server. If there is no path  it should throw an exception.  - Note: the new tree is not the default tree.      ---
ros-planning/navigation2,1372,2019-11-19T19:45:29Z,2019-12-05T23:51:43Z,False,none,fc6dc8219761c68c22ce2bac49a46e0c5dbb1ffd,1,1,1d6a05782be02b30176acb37addf529aa4b13963,,Disable voxel layer,    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | workaround for #1363 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Gazebo TB3 |    ---    ## Description of contribution in a few bullet points    * Disables the voxel layer as a workaround for #1363 so we can do an Eloquent release.
ros-planning/navigation2,1418,2019-12-05T21:00:41Z,2019-12-06T18:16:56Z,True,2019-12-06T18:16:56Z,073b00759ab9885603f305da9ddee634bc2e0204,1,1,a7f39f764f1788374222be1f14b422a13d486964,CI,Fix docs_publish error if nothing to commit ,## Description of contribution in a few bullet points    * This fixes the doc_publish step in CI. It is currently failing if there are no updates to publish. The failure is harmless  but gives us another red X in CI.  * This PR makes the docs_publish step check whether there are actual changes before making the commit. if none  then it just returns.
ros-planning/navigation2,1303,2019-10-25T20:23:48Z,2019-12-06T21:37:03Z,True,2019-12-06T21:37:03Z,859843ff9b4b9d81beece1f52e17cf2a90330a49,11,15,85ec223455a8ef4038e6c108f9dc6782f57feb3d 9eb0151f7a8eedd181c2b93cbc774497397aa088 e6f6119366e1abbfb0984c48d26e106454c5b89f 3bead3b06c0d7f5d27d655f3bdf6bb12b484efe8 afc55d8026a8bccd8ba156a84030e9f424cd2abf 79a97d9c934c52371453d0cded85273f1fc98a51 203be30ceddbaab65eccf9e29540c9fa3e5b446f 802402380892d07e31939d893a13764f1b7a3d1f a1384d7e4b63f7368ddec02f57d1116ef087af76 c39e6e523724bf4480088dd7e0b6d3d254b54dbc 81e67f3b432e871a2c859309486e2eddf34f2743 9d04d078a406f681d6f3c4f14b93bacce20d304a 9824627978fee7fa12a23933c27cb0c8bda74b5c add1ffbd83c113a19fa6d142b1296a90ee1d3d6e 1f52a51f40c0b21b0d866b6597386bd83e79583c,,Add LoadMap service to map_server,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #239  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of turtlebot |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->  Added a "LoadMap" service  which accepts a filename and loads the file into the server  Still To Do:    - [x] Return fail codes (marked as TODO in code)    - [x] Create a unit test    - [x] Update documentation    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->
ros-planning/navigation2,1423,2019-12-06T22:31:16Z,2019-12-06T22:34:16Z,False,none,142867a4f6ece8ae6c4e6ac627d1914ed10eb65b,4,1,2abf5fe82f082f3a2bd5a94eed1c0258d221d6f7,,Fixing minor issues on eloquent devel branch ,  ## Basic Info    ## Description of contribution in a few bullet points    * Testing the eloquent-devel branch shows a few minor issues:    - rosdeps in the base docker images are out of date. They don't reflect the new behavior tree release. I added a rosdep update call in the dockerfiles to address this.    - There's a missing dependency in the nav2_system_tests package.xml    - There is a linter failure in nav2_util.    These fixes need to be forward ported to master as well.
ros-planning/navigation2,1425,2019-12-06T22:51:24Z,2019-12-07T00:51:29Z,True,2019-12-07T00:51:29Z,a3eebcee0bb33509ac005808e53dc5d1cb36a6e8,3,2,500fb808d30929dce932a8a97fb0e9876959f662 16ff4a13569c605e0e3efc2f38b7cdc91a32b084,,Dependency test related fixes needed for eloquent release ,## Description of contribution in a few bullet points    * We need to update the docker builds that are used to test the release branch. They don't have up-to-date rosdep information in them  resulting in a failure to install the behavior tree package. I added a call to rosdep update into the build sequence  and that fixes the problem.    * The test found a missing dependency in the nav2_system_tests package. I've added that dependency as well.    This will need to be merged to eloquent in order to release.
ros-planning/navigation2,1419,2019-12-06T01:23:13Z,2019-12-11T23:00:12Z,True,2019-12-11T23:00:12Z,aa764eb9a24e8b1f4b979871c76721afdc81f442,3,2,941a9d01aeb9491e8281d00a727b91afedc3922b 11a00d7ed0cb804e495278ea28f399ce4db31c9d,,fixes changes for nav2 systems test models and maps,- Changed the empty_room.yaml a file. It was a symbolic link before.  - Directory and model name changes for tb3 with depth camera.   - Increased the depth camera fps from 1 to 15
ros-planning/navigation2,1438,2019-12-13T21:24:25Z,2020-01-11T07:11:30Z,True,2020-01-11T07:11:30Z,ba6f171332648a909a25d1790cd2a7927727b885,7,10,51b9d6cfbc550c08d097411e7f825cea5d8ddd11 5ca0a69646779bc6fb4e1e6d7898e3e829ef5a65 08c41cb60574ec498e3413e2f31e1d6d6fb9aa1a e3ee2da2d5a274b52d32fcdf7e270567ca1093d0 ede21a80470a7126a1a1c1de1e94477ef683aea1 6f9db1a05f2791ab91d8ffcdc5722617ddff64d2 6a16cfde3c50078bb1f2bcda75b6288986ad8b53 32a457a38a5ee3b768fe405a0e688907ddef10fd 80b78f755846d20eaed9934f03f5b27d5aa39dfd b62e7432f7fad957bb032da9f77eac78b1be97cd,,including install forgotten costmap 2d cloud publisher and removing lifecycle nodes from debug instruments,Somehow we missed the install rule for the cloud publisher.    How were folks visualizing the voxel layer cloud to know how it works? (serious question)    There's also no reason for the marker or cloud publisher to be lifecycle  they're just quick scripts taking a voxelgrid message and converting types for rviz visualization (or maybe we should make an rviz plugin that does that for you in the application?).     Closer to fully describe parameters in param file  especially ones that are really important to have correct. Included TB3 URDF needed for depth processing. Turtlebot ws no longer required if we just have this.
ros-planning/navigation2,1468,2020-01-15T01:10:10Z,2020-01-31T23:29:33Z,True,2020-01-31T23:29:32Z,a3e03443a2b70c1aeab60e92df51cc767876ce3b,34,10,6c4bd8913a6a7e705b336a64b578ec958b95a4d6 79c52b151b9c1a53f21d8414f25698669824693c 8fc3f59edef3aa37d527f4c4be973e322c0661bb 7eba1acadc9df5b27a871544034ec3b1b42abc15 ad57c40d47842ccf29d4ce3986ea07e2db490c6d b6a161d1a938d4912c9ac0e3cfce0e0c2c0d446a 647c0273323e209a1d232b4466880f98bf2afa85 948605a1a2d85301865a017f4a128fe842a00fe9 56953636bfdac37946cfaa5c8808616f1757f45e 9d25fdc1c52e148e351c05c552878644d5c87a43,,namespacing plugins for servers,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1314  |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * Namespace the plugins for controllers and planner plugins.
ros-planning/navigation2,1507,2020-02-07T05:15:36Z,2020-02-07T05:34:17Z,True,2020-02-07T05:34:17Z,8793b3a806b51f21bc88526e0896e332bffc3e7d,35,2,f1267b86c0b3da18149ff9f6be673a8aa2c3b97a 2fabd6956ea4b98f88dca345cf8e51251a476b82,,adding bringup to system tests package xml,Intermediate step trying to resolve #1506
ros-planning/navigation2,1510,2020-02-07T20:59:04Z,2020-02-07T21:04:44Z,True,2020-02-07T21:04:44Z,51943aa3e1f6928674201f3efb3017c7bc68293e,1,1,6c7140ec88f08579ad46246aa029f37a377f467d,,Remove OpenSplice test jobs,As support for OpenSplice has been discontinued from ROS Foxy onwards.  https://github.com/ros2/rmw_implementation/pull/79
ros-planning/navigation2,1509,2020-02-07T06:05:53Z,2020-02-10T17:45:59Z,True,2020-02-10T17:45:58Z,7e284a3f02a1b889cadfb6ab402a8278337cf040,108,20,b1773f538875f5b3ec8e262fbd8239610b8087eb 68dbb8359ba9a02817c5e6f293e0788c3541727d 58466d8e38118ebed73f1e733d758603adc428a2 8775d6f1f4e93d6a6a5a3bfaec6ac3841f0b7daf a98e8e1baeb4c1a1c866ba14ee6198a95833487a 54cf4db2ffc99fcf2b93f81c3a1d2a7ad5d00d2c 0aae38221e08937796ab29bf5b4cb53f32398894 c4c6c521a9dfac2460c9fa68a4af57ba3061b279 7f24c525daa13ec2be625974b37a986829b38583 8d416b577bacefe1cf99d4b748953489021e7919 9ff0ab5c74096ba6d84daf66ad8509357658273a e8da2c56af029fb2aa0e0c39ab4b8caba4dfadab ac6421ea45031f164df276b516e6504db9c3d884 c74ec138807184386eedfda1162c7ada55c2b9be 8330b3f2ba4980c5684150be80545039cf5bd20b e3c2ff1939fe2566d7a0ce8516bca502f69c9a05 6090cafffdf695758b5be75c56848931380c11fe 8a872e7724d8ba0455053dc12eb0fe0ea8cc43be a73c20e114a739bc5fafe9ea8786e007789501f6 058183973abca6d6b9db80b6ec1af27ca78a629d,,Fixing system tests in CI,#1475 #1341 Working through fixing the CI tests for system tests. This is going to probably be a long task but need to see how the workers react to changes.     - [x] recoveries with 0% failure rate  - [x] action tests with 0% failure rate (but now reduced to ~25% and on a deterministic place in the last test). Failures are from https://github.com/ros2/rclcpp/issues/861  outside our scope as far as this PR is concerned.  - [x] system tests: planning  - [x] system tests: localization  - [x] system tests: bt nav with planners  - [x] system tests: bt nav with dynamic obj  - [x] system tests: multirobbot  - [x] system tests: updown  - [x] system tests: waypoint follower  - [x] crazy new linting for foxy  - [x] get CI to work with now functioning test suite    - [ ] CI working with planner system tests    All tests have a >90% success rate  except where mentioned above and an upstream documented issue. Per #1508  multirobot tests are too flaky for CI and it can be shown to work locally. I'm going to comment it out  while working  to speed up CI and increase liability as this is not a core feature.
ros-planning/navigation2,1501,2020-02-06T18:31:39Z,2020-02-11T18:29:03Z,True,2020-02-11T18:29:03Z,f3a138124ae3d24a52c0963d971f29993a6cebf3,28,5,ae0694f97ffbeb42faa58ad8b9b6e4f15d2f8398 890371a4963022142318af5d4f601440a0ce7acd f2170be344f4b7f875632fcf5210381cff3f41c4 da40a853c72a1e28905c798ba811064aa597560a 7f0572eb9302d7e1844a0cdf31d2590d75702807,,Update dwb_controller as per robot_navigation stack ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #229 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Turtlebot3 |    ---    ## Description of contribution in a few bullet points  * Ported most of the changes from the robot_navigation repo.  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ---    ## Future work that may be required in bullet points  * I haven't ported some changes which includes [input_params](https://github.com/locusrobotics/robot_navigation/pull/15/files#diff-a7386ed917198fe34cc4d7dd79b44d1a) and some minor changes.  * I am planning to complete this work shortly.  * Need to know if anyone wants me to port [input_params](https://github.com/locusrobotics/robot_navigation/pull/15/files#diff-a7386ed917198fe34cc4d7dd79b44d1a) which I think is redundant. But it is just my thoughts.  <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->
ros-planning/navigation2,1543,2020-02-17T22:23:33Z,2020-02-17T22:37:50Z,True,2020-02-17T22:37:49Z,56c384b74797557fa6c4c4122e8738d32bbc63ed,3,2,bc474f7d786029d5dc06cf5451518906213dfbd8 9af6624eb282c0d833464a22d371058ff8fa9e05,,Remove nav2_system_tests from code coverage report since they are itselves tests,
ros-planning/navigation2,1569,2020-02-27T01:25:43Z,2020-02-27T02:17:05Z,False,none,5d8c1b5101b0a9f303905d917b70aa7e29042ead,7,3,5a7fa31602bbbc2a80ce12b974e3db0d0c017ef2 00b32e04b6e2ce600f6abba798edc8a7ad3d4f76 4b0a53a6a2e0e9d2ef28a61d4672482fabdd9b81,, dwb_core Never shortcut trajectory scoring,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of turtlebot waffle |    ---    ## Description of contribution in a few bullet points    * Removed short cut of trajectory scoring from `dwb_core` because it often leads to worse overall trajectories being chosen    ## Description of documentation updates required from your changes    * Removed documentation of parameter that optionally disabled short cut taking    ---    ## Future work that may be required in bullet points    * an ABI compatible patch to Eloquent could be done by always passing `-1` for `best_score` to `scoreTrajectory()`        ## Long description  When evaluating trajectories  dwb will stop running critics as soon as  the trajectory's score is better than the best trajectory seen so far.  It looks like this often leads to worse trajectories being chosen as the  overall best.    Consider 3 trajectories and 2 critics:    1. t1 is scored by both critics and gets scores [0.5  0.0] for a total  score of 0.5  1. t2 is scored by the first critic and gets a score of 0.6. Since  it's better than the best so far  the scoring gets cut short. If it  hadn't been cut short  t2's scores would have been [0.6  0.5] for a  total of 1.1  2. t3 is scored by both critics for scores [0.4  0.4] for a total of  0.8. t3 is chosen as the best trajectory even though it's total score of  0.8 is smaller than what t2's would have been if all critics had been  run on it.
ros-planning/navigation2,1573,2020-03-02T19:24:29Z,2020-03-02T20:54:51Z,True,2020-03-02T20:54:51Z,d6f63d3e487a9e6c6c80bfacb0a59f3f4678eb43,8,9,bc474f7d786029d5dc06cf5451518906213dfbd8 3b67aebbbbef2b0c4216a821cab5fc78437a1e4d 8072627d16135c37414fc99c07dd379410910681 1c91af64c4d41dde78f82a1b094bdb29c3fde856 a21bbc52db93fd8e44909b7aec520ff4d525800c 2fc57173b437ec18153f457c8582f76becfc5f79 ae4d7bccd7de879d7ef9caf44511e784f34ab06e 14527c26060206c7c5315a910e5b56f441dac408 d0bc66157db6b9b24241cb2e58df5ab4e2667693,,Is transform available BT condition node plugin,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1563  |  ---    ## Description of contribution in a few bullet points    * Added a TF transformation conditional lookup for the behavior tree  * This may be valuable to block navigation until after a given transform exists  * After it checks and succeeds once  will return success always to not add redundant calls.    ## Description of documentation updates required from your changes    * Adding to readme and added to website plugin list    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->
ros-planning/navigation2,1575,2020-03-02T20:51:41Z,2020-03-02T21:15:16Z,True,2020-03-02T21:15:16Z,ceb47226c496feae01429d7ab1fe3e373789e8a9,4,1,ee6f4ab9d18dc0744d0892762e78f1cd1db8600a,,RotateToGoal param name fixes,this fixes issue: https://github.com/ros-planning/navigation2/issues/1567    I changed these two params because they are shared with other parts of the system    `xy_goal_tolerance` is used by the `rotate_to_goal` critic and the `simple_goal_checker`    `trans_stopped_velocity` is used by the `rotate_to_goal` critic and the  `stopped_goal_checker` (I do not use this and did now know what it was before this PR).       The other two params  `slowing_factor` and `lookahead_time`  are exclusive to the `rotate_to_goal` critic  so I kept their names in that critics namespace (I don't use them and don't know what they do).  I updated the default param file in this repo to the correct names for these params.    I reordered some params in the yaml file so that only critic params are declared after the critics are listed. It's easier for me to read this way.
ros-planning/navigation2,1599,2020-03-18T14:24:55Z,2020-03-19T17:35:31Z,True,2020-03-19T17:35:31Z,951a2bbaf379dac66245aecb13755749da1d94fa,2,3,77a5faa2ec7ec7d0aed14ffd7f51eaf8a4112281 4b384b6dbf27515ec41a1435887eab94a913aa7e d5ad5fbe1b1c29fc6865201f0642389acd09136a,,Script,Fixes #1598     ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1598  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points  * I added `eloquent` as default value for `ROS2_DISTRO` variable which was set to `dashing` before.  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->
ros-planning/navigation2,1624,2020-04-03T19:09:35Z,2020-04-23T18:34:32Z,True,2020-04-23T18:34:32Z,b01810bcf5da97620afa53ec047f54f34c80c3e1,46,5,84cff7d8cf43443e23bc4852129791d665f6e5c7 8256121d9ddfece535c5f56a5d30bc5312b90275 89ece9672dc847161607acc658b63fe2bafb90a7 0db44c7227b1811f4781531d46d708fadc149051 85cba4295b22a70910adea4f791c0b23b8ef9ddb,,map_server refactor and cleanup,nav2_map_server global  * Add SaveMap service messages for "save_map" service  * Add object-independent logging for static methods  * Re-organize file names:     main.cpp -> map_server_main.cpp     map_saver_cli.cpp -> map_saver_main.cpp  * Fix tests    nav2_map_server/map_saver  * Add saveMapToFile() static method for calling it directly from    libmap_server_core without having an object.  * Add ability to save a map from custom topic ("-t" cli-option)  * New SaveParameters struct with map save parameters  * Add parameterless constructor for using map_saver with dynamically    updating parameters and subscribers  * Add setMapSubscription() method for creating a new map subscription  * Reset subscription in the end of mapCallback()  * Reorganize parameters verification code to new    checkSaveParameters() method  * Correct logging for incorrect input cases in checkSaveParameters()  * Add new_promise() method for resetting promise externally  * Rename try_write_map_to_file() to tryWriteMapToFile() and make it    to be static method  * Fix some comments and descriptions    nav2_map_server/map_saver_server  * New map_saver_server executable: continuously running server node  * Add MapSaverService LifecycleNode that provides map saving services  * Add "save_map" service for map saving from a topic  * New launch/map_saver_server.launch.py server launcher    nav2_map_server/map_server  * Move LoadParameters struct from protected to independent state  * Rename loadMapFromYaml() -> loadMapResponseFromYaml()  * Add loadMapFromYaml() static method loading map from YAML  * Make loadMapFromFile() method to be static for using in    libmap_server_core  * Add node prefix to "map" and "load_map" service names  * Fix crash: dereferencing nullptr in map_server running as a node    while handling of incorrect input map name  * Rename load_map_yaml() to loadMapYaml() and make it to be static    method  * Add setNodeTimeInMsg() method for correcting a node time in    OccupancyGrid messages generated in non-static methods  * Minor changes and renames to keep unified code style    nav2_util/map_loader  * Remove as duplicating of MapServer::loadMapFromFile()    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1010) |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Gazebo simulation of Turtlebot3 |    ---    ## Future work that may be required in bullet points  * Fix after review  * Cover these changes by testcases
ros-planning/navigation2,1657,2020-04-28T04:01:02Z,2020-04-29T23:32:53Z,True,2020-04-29T23:32:53Z,0e4a9bb632ecac1b480b0ea72697575c5d4cc1b9,78,1,22e1770e66a6e5e3cf9bc3b760d32f3274657a29,,remove docs from navigation2 repo,Removing the docs from this repo and moved all to https://github.com/ros-planning/navigation.ros.org    PR following to nuke the gh-pages branch and put a redirect to the new location.  https://github.com/ros-planning/navigation2/pull/1658    @ruffsl can you sanity check my circle CI removal?     https://github.com/ros-planning/navigation2/issues/1653
ros-planning/navigation2,1671,2020-05-01T04:51:47Z,2020-05-02T02:33:56Z,True,2020-05-02T02:33:56Z,e85802c5970de72366ee93b1abe2696544819229,2,8,035fa6f71b227b86139f338b3c1b8f928015a783 472b4dd9357c80fbf656f69ae888c606e655cafe 8dd42f2f39a415ff8c512146e325c9ed74e37f39 2b4018755be24d8b37880945052a7a0ddc47274c 895cf8d8d73aec509f3c609c2e0b4711c5e6f991 3400a917dcde98f3450863b4d62692884ffdd8eb b7f2ff22b1aee39855c963c153997a892f36497c 2c3a89f9d2645cbeb4924e151db99d4b014159d3,,Ignore codecov paths in tests,Ignoring the codecov results for the test directories. We should be measuring code coverage of production code  not redundant coverage of the tests themselves.
ros-planning/navigation2,1691,2020-05-05T18:04:03Z,2020-05-05T22:08:57Z,True,2020-05-05T22:08:57Z,0af05e375e27beefa3ed4612fc7c9f636c05770c,2,3,5ef44b1b52c4ba3c6ba4424370ed464313083648 0f2377251d182229f34cd08c78a25999dc258dd2 64d870da567525a007606dea8b7a1d0719302e44,,Add ignoring code cov any files named test_,To deal with code cov still picking up:  - https://codecov.io/gh/ros-planning/navigation2/tree/master/nav2_map_server  - https://codecov.io/gh/ros-planning/navigation2/tree/master/nav2_recoveries  - https://codecov.io/gh/ros-planning/navigation2/tree/master/nav2_util/test
ros-planning/navigation2,1644,2020-04-20T07:56:28Z,2020-05-07T23:24:20Z,False,none,d7d11ec64ad6b8faf5b4a65bca37ff7880768e55,8,3,0cec123eb2dc4330e24b5a4842e47cae191a9e87 15702a04b3cf5f83a3130707b29a9f552d357657 764913400ed69e87b22605527addcdaa3369af27,,Added preemption to recovery server,Signed-off-by: Aitor Miguel Blanco <aitormibl@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1622  |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | gazebo simulation of turtlebot |    ---    ## Description of contribution in a few bullet points  * I added the function to the behaviour tree action nodes so they can perform an action when goal is sent to the BtNavigator.  * I also included the functionality to allow preemption of goals on the recoveries server.  * Now when the navigation goal is preempted  the spin and wait recoveries stop.    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points  * The current implementation can stop the spin or wait recovery when there is a new navigation goal  however  their parent node is not notified on this update (the action will just return a success when done). This means that if the order or recovery actions is spin->wait  preempting the spin will not prevent the wait action from happening.  This could be fixed with a new control node able to stop the action sequence when a preemption happens.    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->
ros-planning/navigation2,1714,2020-05-09T19:29:11Z,2020-05-09T20:36:10Z,True,2020-05-09T20:36:10Z,50b044a863fa8b470bd862c72e1e5b30d672e840,9,1,e2edfad3662494bf48cf0159b21dab5a7368ef47,,update for BT cpp master,Per #1686
ros-planning/navigation2,1684,2020-05-05T05:56:16Z,2020-05-09T21:33:36Z,True,2020-05-09T21:33:36Z,dafcffa75ba7a1a5e1b1bdd86c80454ba11d2447,6,13,408a2c56fc4c5d94de5720e31862a2694ad27514 60da5f13daa6b71a28b4637c9d6e9444f38f869f 88f4856b28a5671567832ea46eb58005a3b84ca4 881dd700b7b14d93ba3c4bedcecbcffa3491736b 3311fd8a4a5cd4a851c769b02a2ed09b565fed6e e6934f2ec7f82c69b8c9d49739721d18b16af789 97db5de7a367670890a01776e3a0bb5fe6671c39 e3fc4e1e91936026d8d8616bc20b5d629fcf490f 65807823fc8697ff0af632d9abe501dbb4c55522 9964c342e74dd18bd8857a798e8b59c96533f40f 301eb5435f531289514e0e21cd32c661868ccfc5 44b19c22c4d73d7d297ab7bb8d73c02c6fa0c495 3b775b0ca20d042b50929c68667d46e7bea1ee1f,,Update CI for ROS2 Foxy,Fixes: https://github.com/ros-planning/navigation2/issues/1627
ros-planning/navigation2,1713,2020-05-09T13:55:10Z,2020-05-12T00:29:35Z,True,2020-05-12T00:29:35Z,433c6ac72685920c70f5b9cb84e349962239d48b,1,4,2b1bf8b2179e8be3a445d46cbeaa7056f3a49290 92c0781aab53e071c017d651ee2eadb21fe21366 8d40ae67908f185bb47c03c10c6f1f1b63251c21 d804dc06814efbb47dd394ce300f703bdaad0069,, WIP Checking line coverage in codecov,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  #1709 |  | Primary OS tested on |  |  | Robotic platform tested on |  |    ---    I am changing some options here to see if it makes any difference to current branch coverage.
ros-planning/navigation2,1704,2020-05-08T07:28:31Z,2020-05-13T20:37:39Z,True,2020-05-13T20:37:39Z,879a9379ee0a8931fc73315c4eee477ea902049a,40,3,9c07fb8ce6fda403fac6f8cdc616aadaa8b0b841 5d16bc5b520fea91a4032c96453ac79a7d369e5c 81805709fd32cc2619ae39c2fbd6c3facaf4f01f,, master Windows bring up,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1634  |  | Primary OS tested on | Windows |  | Robotic platform tested on | turtlebot on Gazebo Simulation |    ---    ## Description of contribution in a few bullet points    * Addressed the visibility control by CMake built-in feature - `WINDOWS_EXPORT_ALL_SYMBOLS`  which minimizes the maintainer effort to keep the visibility up-to-dated.  https://blog.kitware.com/create-dlls-on-windows-without-declspec-using-new-cmake-export-all-feature/    * Corrected the executable and libraries installation location for better portability support. https://index.ros.org/doc/ros2/Tutorials/Ament-CMake-Documentation/#building-a-library    * Cherry-pick AMCL Windows port: https://github.com/ros-planning/navigation/pull/849    * `ros_topic_logger.cpp`: Removed a extra `std::chrono::time_point` cast which is not portable for Windows.    * In favor of C++ standard data types for the cases using `uint` now.    * `FindGRAPHICSMAGICKCPP.cmake`: accommodated the [Vcpkg port](https://github.com/microsoft/vcpkg/tree/master/ports/graphicsmagick) and fixed typo.     * Provided `basename` and `dirname` implementation for Windows.    ## Description of documentation updates required from your changes    * None.    ---    ## Future work that may be required in bullet points    * None
ros-planning/navigation2,1712,2020-05-09T09:35:06Z,2020-05-13T21:18:13Z,True,2020-05-13T21:18:13Z,49963404e027d39c7b947d572d4e8b7907769dc2,14,6,20363e15bd2ecedd6cffefb990cb85d14c662e30 e815166df02402fcafc66135d05c3dfa3ba8280a 67fcea69caf6e3307a02b52a05cb8d4b89ec78d7 755e759281ea8398076066bd8a307ac0c402b137 1ce446ea398598b15cfc469a9d7dfe33e9adb1ee 7651dc2dc27009c8f3d88910c66dca8e3a80ae56,,Added goal updated condition node,Signed-off-by: Aitor Miguel Blanco <aitormibl@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1622 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | gazebo simulation of turtlebot |    ---    ## Description of contribution in a few bullet points    * Added new behaviour tree node that checks if the global navigation goal has changed. This is used to stop the recovery behaviours when a new navigation goal is recieved.  * The new node stores the current goal when it's ticked as IDLE (first tick) and returns success if the goal changes in the successive ticks. Otherwise it returns failure. The node is intended to be used with ReactiveFallback control nodes (the goal is checked each time  and all children are halted if it returns true)  like:     ![simplification](https://user-images.githubusercontent.com/14293015/81469800-6c364880-922a-11ea-8c64-4b393d65f43c.png)      * The behaviour trees have been updated accordingly  ending up like:    ![bt_rep_rec](https://user-images.githubusercontent.com/14293015/81469647-773ca900-9229-11ea-85ea-36e93fb05b44.png)  ![bt_round_robin](https://user-images.githubusercontent.com/14293015/81469649-7ad03000-9229-11ea-9590-3e87c03837f7.png)    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    * I have updated the readme  but I'm not sure if other updates are needed.  <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->        ---    ## Future work that may be required in bullet points    * It might be useful to add a decorator node that is equivalent to this. If we make some decorator nodes that can be nested  we can use them to trigger the replanning.    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->
ros-planning/navigation2,1728,2020-05-14T10:36:46Z,2020-05-14T17:09:39Z,True,2020-05-14T17:09:39Z,ee719c9f9098376742fbd60f66c7ef61df9ee19e,5,2,060f2cc21a8b3017c57adaf2796a1db5d9035874 a7262d3be8d6a88214225a7cf35d80103f450e97,,Fix uninitialized variable warnings and change default value,1. Fix minor build error for uninitialized temp_tf_tol in static_layer.cpp.  2. Follow [this ticket](https://github.com/ros-planning/navigation2/issues/1683). Change default GridBased.tolerance from 2.0 to 0.5 meters. People (like me) are used to 0 meter tolerance without knowing there is a new parameter set to 2.0 meters. If we keep using default 2.0 meters  users may wonder why navigation is always successful even the robot is stuck inside a 2x2 meter square area.
ros-planning/navigation2,1699,2020-05-06T21:35:24Z,2020-05-14T18:20:13Z,True,2020-05-14T18:20:13Z,2e665e44eedf0568ae84b9287bf765a3ca297f7a,19,9,87ddcf1dcbd6063e848b8ddd200ced50fcc7d618 670b54874b5501b094c988369bc77038dcd126d4 dc43b41ed31dffb5b8631f161a36e27f2e7bd944 27e05a26bbadc49f7daacfcc727d130bdece25ae 04153aa3658407fbae98ae0abe166792389903b3 3d52d3f9a4eed1b182e32bb94bd1a8ee7a1d9458 519a66252176f631e5937d358245aabd265a2cf1 1370d10390078ce1eb5e5fceb9d497b883b03b69 cb772f61ebea30e93635a353feaf6b03df9368d4,,Add DistanceController decorator node,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  #1692 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TurtleBot3 gazebo simulation |    ---    ## Description of contribution in a few bullet points    * Added DistanceController decorator node to replan after every N meters    ## Description of documentation updates required from your changes    * Add DistanceController in ```nav2_bt_navigator/README.md```
ros-planning/navigation2,1586,2020-03-07T02:06:00Z,2020-05-14T22:50:39Z,False,none,f982480cc327855d5a5f28ccca3bcf6b2c7ccbf6,24,4,c619545ac5e7502b16b40abaa58aae3f937ce5a9 d3eea8e8d1a064c094bd108c4e995b57644dea6b 2f55fa97346077aeb478828637eb72748cf8aead cda8ddb2d51f608fd9ac0273a9443074d35a20a7,for review,Feedback in navigation2 actions,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1339  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Gazebo |    ---    ## Description of contribution in a few bullet points    * Added feedback to long running actions.  * removed random crawl as it is still in nav2 experimental with the server    * NavigateToPose; pose  time spent on task  number of recoveries executed  distance remaining  * Follow path: Instantaneous speed  distance to goal in odom  * Spin and backup: distance so far gone  * Wait and compute path: none  as either has a while loop naturally conducive to feedback.     ## Description of documentation updates required from your changes    * **TODO** add to migration guide for Foxy    ---    ## Future work that may be required in bullet points    * **TODO** test each metric is properly computed and reset between runs.    This PR is also to gather reviews and feedback on other metrics you'd like to have included in the API.
ros-planning/navigation2,1747,2020-05-17T15:15:22Z,2020-05-18T21:39:39Z,True,2020-05-18T21:39:38Z,24dcf1ceefc0907213ace467ed0b3bb85740df20,1,1,7326fabbde9a96e293922f9a42554b79056d3879,,Enable Goal PathAlign DWB critics reduce forward_point_distance,Resolves ros-planning/navigation2#938    The forward_point_distance used in the GoalAlign and PathAlign critics projects the current pose forward a default 0.325 meters before scoring the trajectory. This can cause velocities that create sharp turns into obstacles to be chosen (reproducible with the Turtlebot3 simulation).    For TB3  which is small in size  0.325 meters is too far. Instead  enable GoalAlign and PathAlign critics in the DWB controller and shorten the critics' forward_point_distance (how far the current pose is project given the current orientation before scoring the trajectory) from the default 0.325 meters to 0.1 meters which improves stability when running with TB3.    Signed-off-by: Jack Pien <jack@jackpien.com>    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | 938 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 Simulation |    ---    ## Description of contribution in a few bullet points    * Enabled DWB GoalAlign critic by changing its scale factor from 0.0 to 24.0 in nav2_params.yaml  * Enabled DWB PathAlign critic by changing its scale factor from 0.0 to 32.0 in nav2_params.yaml  * Reduced the forward_point_distance from 0.325 (meters) to 0.1 (meters) in nav2_params.yaml to better tune for Turtlebot3's small size    ## Description of documentation updates required from your changes    * For the GoalAlign and PathAlign critics  describe the forward_point_distance parameters (which defaults to 0.325 if not set in the YAML).    ---    ## Future work that may be required in bullet points    * Further fine tune the various DWB related (ie FollowPath) nav2_params.yaml for Turtebot3  * Look into doubling the scale of the BaseObstacle critic to compensate for the enabling of the GoalAlign and PathAlign critics.  * With forward_point_distance set back to its 0.325 default value where TB3 runs into an obstacle and raises a "no valid trajectory found" exception  bag the /evaluations topic to better understand why we get into this situation.
ros-planning/navigation2,1750,2020-05-18T19:53:10Z,2020-05-18T21:35:18Z,True,2020-05-18T21:35:17Z,55edf58be9eaec3bb12a81e86a97f049e67a8daf,3,2,057fe3f88fbb9b95b65174aa47a65d39449cdae1 312cc1464877175678d1e87f286b178ef0588ba6,,Revert libgazebo11 workaround for CI,Fixes: https://github.com/ros-planning/navigation2/issues/1687
ros-planning/navigation2,1751,2020-05-18T23:34:14Z,2020-05-18T23:38:23Z,True,2020-05-18T23:38:23Z,5a35677e0c2b6c0c72dde74da88c43fc67606483,2,1,fa6b8ed31ef2a86384919ee7f4eb3fc247c89520,,Run rosdep update in builder,So we don't have to wait for the nightly parent image to update rosdep.  Related: https://github.com/ros-planning/navigation2/pull/1750#issuecomment-630482940
ros-planning/navigation2,1752,2020-05-19T00:01:23Z,2020-05-19T00:04:28Z,True,2020-05-19T00:04:28Z,f119f30ef7da3a657c736ac29a9b8245ad5ad793,2,1,def6222dc053a2c99bf3e802f8c720d03f727d55,,Don t pass rosdistro when using empty index,Context: https://github.com/osrf/docker_images/pull/399
ros-planning/navigation2,1742,2020-05-15T22:17:57Z,2020-05-19T23:25:37Z,True,2020-05-19T23:25:37Z,ca33b19bfb75dbdda5929a299ab2baa8ef76ed1a,11,10,b814a304ef0b0e3c1eaff6d3a1f8d7412f70525d 71eb9f444067c57bb2c839907743057f2984b7d4 ee2e902e393b19c7e5fe28ece0cc70e49926f299 9aafde139dffc3d69cfa6837145e0cca74f1ede7 152475f467c22a2d92bdb513c19cd68ccf5e42a5 1e51cc2e63b6875c186af173278d8ccde492df3a a90b35678e029d40b7e98237c3d537f6c395bd9d 772a3a79cc1f34fc7a14eb32e9bd5fda3d666d55 6bfa9c15a3b4cbf1d6f649604a6a63edcca3a795 5c373ac0555116f4b10feadc7b09f8279b620b25,,Parameterize frame IDs,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    Original PR:  #1729    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | closes  #1726 |  | Primary OS tested on | Ubuntu 18.04 |
ros-planning/navigation2,1760,2020-05-21T20:25:45Z,2020-05-21T20:55:03Z,True,2020-05-21T20:55:03Z,7ee17c337ba62d73b5793ab56430efd365783a61,1,1,5899ffa2bc71f01139c75cc10e6cae7154c17074,,Re enable nightly debug builds for codecov,Looks like codecov analytics from merged PRs alone do not update codecov status for the master branch. Re-enabling nightly debug builds to keep codecov status on master up-to-date.    ![image](https://user-images.githubusercontent.com/2293573/82602782-792a3480-9b66-11ea-83ad-37f6e5b162c5.png)    https://codecov.io/gh/ros-planning/navigation2
ros-planning/navigation2,1756,2020-05-21T00:36:00Z,2020-05-22T21:41:05Z,False,none,b8ae8dbb6423f065f880cf82776d8221ffa1f49e,4,1,d49b37fd490f7847395b67bc5d74bf1b9c46c86d,,add namespaced params sample,make sample launch file easy to use.
ros-planning/navigation2,1705,2020-05-08T16:38:56Z,2020-05-27T18:30:45Z,True,2020-05-27T18:30:45Z,ec7f550ced0bcba19dedc013a55c5ee5a02b76c9,15,9,cf39a5457d4d6696ae1955a4332b7db5f3a1dbaf da73f76a958e7ba54412e708bae0910f7c26c806 363f97403e444b7d7208d78ba7b0167a9945e50f da6f5b2fc9700ca7353672cd97ab3904ba160b05 24d39bae2174a8d134351770651a2971d9123a6e 19c8c4f092ccd4c8b6f8372b48be3c636eac533a e0d23051c9ce2991566f69695aae5ece15c65ced ce4b7dc7de333134539140ead7870960eff148d8 de0f7972dd5fa4714190ee49903f081f1ebed57a,merge,Add condition nodes for time and distance replanning,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | None |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TurtleBot3 gazebo simulation |    ---    ## Description of contribution in a few bullet points    * Added three new condition nodes:  1. **TimeExpired:** returns SUCCESS after every predefined time period  2. **DistanceTraveled:** returns SUCCESS after every N meters distance traveled by the robot    ## Description of documentation updates required from your changes    * Add new condition nodes to https://navigation.ros.org/plugins/index.html
ros-planning/navigation2,1774,2020-05-27T22:05:52Z,2020-05-28T02:52:37Z,True,2020-05-28T02:52:37Z,a9171d0233de1aac5467cb0cf89adc1de0e73dfb,8,5,ccf7617a09cebff4d7d00be4c2a62461d63bd7ae de671c55474e11f15d80d40d65ddb229ea2f9e8b 2d6db2ca32840b4463c9677ef724b2c923fe29ab ae13863feb72b2a6c6d9a3548d2d10107d41dfe6 04046230d11f4f174796490240d1bc3a8edec0f6,,adding backup tests,Adding test coverage for the backup recovery behavior. I have it back up in 2 phases: 10cm and then 20cm  both should succeed. Then a failure case of -2m to hit a wall.
ros-planning/navigation2,1768,2020-05-26T15:07:33Z,2020-06-02T19:37:42Z,True,2020-06-02T19:37:42Z,d2bfdf2de7ec74adf3d0a9ccf46d2f1f455de42f,5,3,3579850ec0c6a1959cc96f939e971bfebc7f4194 05d1cc663c6839c8c5def79d2405c55c29e30a0d b03d1d4304ce452650155dcd1bdb13be99415bd6,,Add SLAM Toolbox and map_saver_server into launch files,Adding new `nav2_bringup/bringup/launch/slam_launch.py` file running SLAM Toolbox  map_saver_server and requesting once a map through `/map_saver/save_map'` service call. This can be enabled via `slam` parameter  as follows:  ```  ros2 launch nav2_bringup tb3_simulation_launch.py slam:=True  ```  Default behavior when `slam` parameter is not specified did not changed.    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1630 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | Gazebo simulation of TB3 waffle |
ros-planning/navigation2,1784,2020-05-29T06:48:58Z,2020-06-12T18:22:35Z,True,2020-06-12T18:22:35Z,105dd15a2d90d776de6cb6f629e867fc3b4ec270,10,7,0144679438f7be50f381c4a2a95972cc3ceb4931 76bfa80d9395e5c1461474642214886aabe952c2 adce6a12343a366a4c9d4f069d1fd9d56c3347fa cbfacb40df9137e5b63adbf7799dadbfc610419a 48aa0e6182519126e9ad870ef6663d8e46757b4d b0db05e4685141f56d54f84197f46fccdb199260 8cdf0854c971b59c1cfa79c690e228f054f2b7ee,,Select behavior Tree in NavigateToPoseAction,Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1780  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of Tally |    ---    ## Description of contribution in a few bullet points    *  Changes in  NavigateToPose.action to include a field `string behavior_tree` with the ID of the BT to use. If it is void ("")  the use the first BT in params. This change solves backward compatibility.    * Use a list of BTs  in the similar way as plugins (the first could is the BT by default):    ```      bt_xml_filenames: ["navigate_w_replanning_and_recovery.xml"  "navigate_w_replanning_time.xml"]      bt_xml_ids:  ["default"  "time"]  ```    - In `bt_navigator`  tree_ is changed to `std::shared_ptr<BT::Tree>` to ensure a clean BT when it is changed. Measured BT recreating time. It is inexpensive.    - Remove `bt_xml_file` param in launchers  as it is selected in by params. Specifying this from two places (in `nav2_params.yaml` also) could be confusing.      ## Description of documentation updates required from your changes    * Description of `NavigateToPose.action`. Field behavior_tree in the request should be described  * Remove all references in launchers to select BT    ---    ## Future work that may be required in bullet points
ros-planning/navigation2,1744,2020-05-16T15:47:39Z,2020-06-12T20:01:15Z,True,2020-06-12T20:01:14Z,94615e7b412e3d947b888a6d799aa6e6f78a9031,21,22,c9c566305afb6bc2707ee7b9fbc27cfdaafa35be 1b100a7600cde88b5c514e19b4bbbbdbe1d24ce6 004dc6be148ff6136aa186508b025e93ee0c5724 8f439dc5bdec07efb71050f9b053f718498cffdd 779faf73c07a4299f5097da9a23270935e57201d 4a5e7a283d4d8fb5666b0fa6e001a623b85fe50d cec72c62bfca2b42e5e881a270a5c24543c70006 75e925cd5ce6ab99324f9fc7394d1d722689eb5d 28e9d31677c9b978851a6ed9a8ef76d306dc0cb9 f32581812128021992845f7631b1f75a8f634488 331d8a4f4a14bca1110e88cd00b66dd0455598a5 571d25e878e395a92c59cbf4ef014b514bbfa875 7e8e0d13630030364b279ce0d87bd9026a82f194 a55168cf0a7fc2b59c2809862d87fad46ace90d1 e354bd0597f1a8f80864f94067538f5dec26cba6 653b55773f4268a8df87b8739c8958f7e530c750 1385c60073fbf3af3de68ab34e2c361db583be0d f00ec8940f233cfbbf1cc72d4a785e94b6154abd 6ff9a705dcc1a0c4f6d9d2415677ff815f0f11a6 00f4710729af30c7db61352691d87cb36364e4da 64596b2aed2bb748bc3f84bf2641526514bfcb21 66daff6821369a76ab12d27217bdcd21828a26e8,,Add SpeedController nodes to adjust replanning rate according to speed,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1740 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Gazebo simulation of TurtleBot3 |    ---    ## Description of contribution in a few bullet points    * Added ```SpeedController``` decorator and condition nodes  * Updated default BTs to use ```SpeedController``` instead of ```RateController```    ## Description of documentation updates required from your changes    * Update [navigation.ros.org](https://navigation.ros.org/)
ros-planning/navigation2,1806,2020-06-16T21:27:55Z,2020-06-16T22:48:06Z,True,2020-06-16T22:48:06Z,dd0d9fd9b8415e0bdfaf5d7f373967a65b779900,2,2,e41079aec66d19f6a20e275a4b7990b3a60cedf4 a613fc5c128ec4d792e8f56b90e27bd699eeab4c,,Replace eloquent with foxy in the install scripts,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on |  |  | Robotic platform tested on |  |    ---    ## Description of contribution in a few bullet points  * Removed eloquent and added foxy in the install scripts as foxy is released.  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->
ros-planning/navigation2,1801,2020-06-11T17:27:22Z,2020-06-19T23:23:09Z,True,2020-06-19T23:23:09Z,0fa309a2f17d2689045187b4f144505a981e5e53,4,1,dd7babd67920cce480ec9930dbed91f43eeffbea,,Warn if computing plan took over the specified amount of time by the ,# Basic Info    | Info |  |  | ------ | ----------- |  | Ticket(s) this addresses   | #200 |  | Primary OS tested on | Ubuntu 20.04 |    ---    I wonder if the [SteadyTime](https://design.ros2.org/articles/clock_and_time.html) would be better than the ROSTime here.    Maybe  we should rather monitoring frequency than duration?
ros-planning/navigation2,1816,2020-06-20T18:57:35Z,2020-06-24T18:10:41Z,True,2020-06-24T18:10:41Z,df8a4456d107a08eb085850f6d4c1699b89dbd60,1,4,cd12ad6bdc9939abc34426ae1d68dadb3c11e099 de2d483902943e082cfbe21f4bb9b8a6e7bf224c 4b4f346cf07f2ff1940fdaa7c970611047341344 aff186c8ee3df69fcd6830086c809254599ad7d0,merge,Updated bt2img py to handle subtrees,This PR enables the behavior tree print script to also draw subtrees.     The way of calling the script didn't change.      But there is a change of how the root node is detected.    I now read the `main_tree_to_execute` tag to know which one is the root tree.    Also maybe consider using the _explicit_ form of writing BT xml's  that way one doesn't need to update the `node_names` array every time a new node comes into play.    So writing `<Action ID="FinishTaskNode" />` instead of `<FinishTaskNode />` leads to automatic detection of the node type.    ![demo_tree](https://user-images.githubusercontent.com/11796203/85209344-6b1f2d80-b337-11ea-90b0-31cdba8d1e29.png)    ```  <root main_tree_to_execute="Demo">      <BehaviorTree ID="Demo">          <SequenceStar>              <Condition ID="HasNavigationTask"/>              <SubTree ID="Navigation" />          </SequenceStar>          <SequenceStar>              <Condition ID="HasTransferTask"/>              <SubTree ID="Transfer" />          </SequenceStar>      </BehaviorTree>        <BehaviorTree ID="Navigation">          <SequenceStar>              <Decorator ID="Cancel" cancel="{cancel}">                  <Action ID="FollowPathNode" name="FollowPath"/>              </Decorator>          </SequenceStar>      </BehaviorTree>            <BehaviorTree ID="Transfer">          <SequenceStar>              <Decorator ID="Cancel" cancel="{cancel}">                  <Action ID="TransferNode" name="Transfer"/>              </Decorator>          </SequenceStar>      </BehaviorTree>  </root>  ```
ros-planning/navigation2,1835,2020-06-30T19:50:12Z,2020-06-30T23:27:29Z,True,2020-06-30T23:27:29Z,c33cc89d604232fdf87ff813fa24c76029b265a7,1,5,d87347e6a402ae8738db44a477b8cdd9f984ed37 486890a6781d08f7a17b55ae016152a2b52c95d1 5dc297ad6cd003a78f5438d34cba32f5bb88dad9 09d27bd1365330c8a1c89c0d96ac43cbc9084387 0910e4e688a95f54290c842e1177b5c64d6cb9f1,,attempt to resolve issues with mixins in CI,Removing the release / debug elements from the mixins list for CircleCI
ros-planning/navigation2,1827,2020-06-23T19:23:58Z,2020-07-01T22:59:20Z,True,2020-07-01T22:59:20Z,fbdace2325084c9f65c7bda8a95c4eba3ec244f1,3,8,e6c4df75404576ebc646d382a6780fbe0901db9a 8e446e77ad60055ce86403b1ac532efe81fb2bfa 1bae7d4c83dbfb20388f9c2a006e2e2d83b1694c 097bc8297d1333c1dc93574be5514743eb9226e8 ba1cf0fceca4234f768abc7066977c79d406f706 ae85d0378f8c9ef11b760538633556214d3fa1a9 c53550b603486b4f39681867253c5212de83c812 d03ce486e74995a925dbcbdbb065bb0358ade277,merge,Add slam toolbox as exec dep for nav2_bringup,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1827) |  | Primary OS tested on | Ubuntu 20.04 (docker) |  ---    ## Description of contribution in a few bullet points    Added exec depend to the package.xml for nav2 bringup to address issue #1827    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    Handle ceres solver dependency to the docker container
ros-planning/navigation2,1808,2020-06-18T14:03:27Z,2020-07-01T18:48:46Z,True,2020-07-01T18:48:46Z,f3b7be2397f585c53d4940b0fc516d8fe4738670,14,21,a5a89fbf81eb1916e8f81ae2c9ea6b86349bccda 3bcbd5d800e37c23255ba30ff3029b8c8c0ba925 91e9ff1f10630190396736afce44515904889944 9dcec0958085b67d93b3aa0ee8fa473b1ac8a8e4 4bbab8e255df56ee405456908b1d9ffc6a16e699 1b072d575dc8f69404ee2418a44bd1c0a34d198f 40a7c2fac5f3878aac06fec58e32150aa9d06299 9f216f9c11bb7eb647065f287d40570a6789b436 b02a82c19b503b219077c9bd36da90a6a137200f 48c5c50349a54bb24d2aa930e4af37258514cbc5 20ab23babe63766d244eb78ea21c8e892d56552f dee40172f664c96758a547228b62ce3b2aadab93 a95018f1ef2cf230f4a837301e63dd56f4beeeb6 b88482d458d2a47e244d7464b72cfc03bc96ab8c 1f56364caac541affc3ddd8e22f15e867f15ac38 e07c07708f4392fa814309497859a74ef207f232 4c78829a161f5c02c5cf869562315890e1aa1280 95823ca481217260560b1e1b31c35cc1fc95ccd5 359058f8ffde288dba20361175344ea6193a2b37 6e896ef555c211f43ec6ea98b1f3f65660288178 35f3ab2dadb77c642554095c8cd9d65661cb5446,foxy,Refactor parameter interface for plugins,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1791 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TurtleBot3 Gazebo Simulation |    ---    ## Description of contribution in a few bullet points    * Added utility function to read `plugin` parameter  * Remove use of 2 parameter lists for plugin names and types  * A plugin list is defined only by the names and plugin types need to be defined in `plugin` param under the plugin namespace    ## Description of documentation updates required from your changes    * Add `plugin` parameter and description everywhere where plugins are used
ros-planning/navigation2,1748,2020-05-17T17:08:30Z,2020-07-08T07:09:18Z,False,none,b89967ee6d688950f56371f931b0080dbec875c4,9,1,29845436fcae29f4e12cdfa7ec41fbb5c276d166,, WIP Following an object a certain distance,Signed-off-by: Francisco Martin Rico <fmrico@gmail.com>  ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1660  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of Tally |    ---  This is a **work in progress**. I don't pretend to be accepted as is. I want only to discuss this approach.    The goal of this work is following a dynamic pose to a certain distance:  * The goal pose can change during the execution of `navigate_to_pose` action.  * The robot stops when the goal is nearer than a configured distance  and then it faces the goal.    One use case could be following a person to ~1 meter in a house. We want to use it in RoboCup@Home.    I don't want to implement this as a new plugin for controller or planner. This work is independent of the algorithms used to create the plan and following it. To implement it I have:    * developed a new control node in nav2_behavior_tree that overwrites the goal received in the `navigate_to_pose` action for the one received in the `goal_update` topic.  * added two input ports to `FollowPath` for indicating that never returns from the action  and the distance to the object. The other option was to create another action node in BT  action  action client  action server...    ![BT_carrot](https://user-images.githubusercontent.com/3810011/82154598-4551c500-986f-11ea-84ca-f977509d6380.png)    This is the result (click for video):    [![](https://img.youtube.com/vi/t7helr1IY_8/0.jpg)](https://www.youtube.com/watch?v=t7helr1IY_8&feature=youtu.be "Click to play on You Tube")    ---    I don't know if this is the right place to discuss this  but the complete real use case I want to address is:  1. Make the robot navigate to the desired pose on the map.  2. Once there  make the robot follow a person (the dynamic goal pose  provided from outside Nav2)    The behavior trees used in the two steps in this application are (could be) different  but the BT to use is defined statically in the yaml param files. One option to solve this could be to select the BT to use in `NavigateToPose` action. Maybe `NavigateToPose` action could also include some options decided from behaviors  instead to be fixed in params.    Francisco
ros-planning/navigation2,1857,2020-07-07T14:00:51Z,2020-07-20T19:13:09Z,True,2020-07-20T19:13:09Z,d7494ec8c501522200089c54947232fe86c0ef94,24,9,d7979eeba2db0a18ff536ce67ad39c01261564a0 2d466a8ec745d5f57a9150cf536538c0358994bb 73197adcac0ae123de161010179dfe53b13d9868 e271cd8585b636077c128b92dec47188f639d3be 20ef7d5264a5d332762683def274ceb5567fa593 6558ec8132481c98aa84765c7fd6b955f0fe3d56 2dfc4b93fa4b1eb5656bb06bc1300c2aa9aa729f 9d93bae7f27ce6a80c0737744a44be2b30937ebb 30740cfdfb282058b97ed2b0eb766f607e6a983e,,Move dwb goal progress checker plugins to nav2_controller,Signed-off-by: Siddarth Gore <siddarth.gore@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1390  |  | Primary OS tested on | Ubuntu 20.04 (WSL) |  | Robotic platform tested on | colcon test |    ---
ros-planning/navigation2,1870,2020-07-14T05:10:18Z,2020-07-16T19:06:04Z,True,2020-07-16T19:06:04Z,0a9477e2577becd0d8292865f5847013224cbb6b,6,4,408bb0000d9a022f6b44fc07a459dd5b27d1ec10 d1a095666577a4d0878a02452bf4a9ec3f1e9aa9 cf0f44a0c776a97f553fd273c627e00f0b41ea83 c87dfa38a02c347a972734accf6651af24227df2,merge,Added parameters to configure amcl laser scan topic,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 simulation |    ---    ## Description of contribution in a few bullet points    Adds the ability to configure the amcl scan topic in the parameters yaml file like the topics of the rest of the ROS2 nav nodes.      ## Description of documentation updates required from your changes  Added in PR to the configuration docs of navigation.ros.org (https://github.com/ros-planning/navigation.ros.org/pull/45)
ros-planning/navigation2,1869,2020-07-14T02:24:52Z,2020-07-28T20:41:43Z,False,none,9403655490b3865818615e1de54799c1e2badcd3,18,15,c483e8888583bb2748e407604ee8dd9a2f40708c 36ed224e197e4ba4cba5c9121bbdd990bdc42fbf 983212386772e79b9490bfeee8de3c9d4750d32f ed9f12449b5cfeab6aaa32933f42a7654d514d64 21778b5c0b90ff83d79531d287a80e7addb6bc29 fcc7cd62f59fe457fd8ef3a64fc93b8f336727fa 227c30ad4c84e839a6aff9fc6cfcb95ceabb833e 1f017eeab13f906331e2a446ce15171473d93c1a ccacefb9b84c7b1d98d128bb9d2b933f24fcf305 c2020d16bd1f0d5c8afb295cf9b61fae38ad8033 78c6f73b577a3b8c611e90a578d451f1e297540b 19e1dcc03ab21ca942b6b0731e33a725446d060d 4640d22d0109e6b592b8f0817670f8db9c6afc91 c159968e3ab8e147417af5934e7fc7b494543908 2f95d54885b97904825a7903e88803f0b4600391,,prototype of lifecycle bond system,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1754 |  | Primary OS tested on | Ubuntu  |  | Robotic platform tested on | gazebo simulation |    ---    ## Description of contribution in a few bullet points    * Added bond support to the major lifecycle servers   * Kills all the nodes if one of the critical relevant nodes fails  then will wait for stimulus to restart up    * Parameterized to be able to disable  * If misconfigured (e.x. can't communicate to a non-existent server) will bring down everything for safety    ## Description of documentation updates required from your changes    * Add to migration guide   * Add capability docs to let people know this is happening and why    ---    ## Future work that may be required in bullet points    Before end of WIP:  - [x] test working basic (timeouts work and settable/disableable  will actually bring system down  can be brought back up  clean shutdown and startup  no false alarms  delayed/no connection on startup clean warn)  - [x] should keep the bond option or always?  - [x] If always (and if misconfigured) how does it handle never connecting on startup (or delayed connection)?  - [x] Make sure all forms of shutdown have this triggered to break the bond  - [x] option for duration before killing (which could be set inf to disable)
ros-planning/navigation2,1881,2020-07-20T09:36:41Z,2020-07-29T15:43:36Z,False,none,983727ab2766f6088edf3aebe69c9ebd3fd13752,12,12,c6d2fcfb0a126bf430bc8dd134e0ae4943263ffc 501159254e4a8deb87a24e25ca572cda259918d1 2a365cad176db97c68378a13921d2d0528dd38da 12b489c49cb783a11e835aa57b2f20b3f91a4d3e 82f570e8339093302ee4b4977ff2888fccfb9741 58d48c548df44578dee4ad4eef66bd4d87ffd927 4b9689d82f99d02cfeb883bea41b3da5b26f5be4 9bc314d8492753beb12a66e5eae3ee77c88a8416 92f3ade747d7ac3129f29a5a3b6fecbdef4418aa f8399841c4e70f47893d900512446600deb49928 0a9dc765c5a1307934d455997737ab1f30058994 7a45b33a2831d7f72b9b8879bd06788e5d8e4ba1,,Updated the specific releases versions instead of referring to ros2 ,The references in the `ros2_dependencies.repos` are updated to the specific versions that were used for that build.    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1863  |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | n/a |    ---    ## Description of contribution in a few bullet points    As suggested by the [comment](https://github.com/ros-planning/navigation2/issues/1863#issuecomment-660264308) from @SteveMacenski at   the dependencies.repos file is updated so that it contains the specific versions after they were released.    | Repo | Version |  |----|--------|  | BehaviorTree | 3.5.1 |  | angles | 1.12.3 |  | gazebo_ros_pkgs | eloquent |  | image_common | eloquent |  | vision_opencv | eloquent |    ## Description of documentation updates required from your changes    There are no updates needed for documentation. This PR is not for current development.
ros-planning/navigation2,1927,2020-08-08T03:07:46Z,2020-08-08T04:24:03Z,False,none,4869bdea33edb6adbe6d31f715f395e8216fa476,1,1,bed67b0fee25dd5c5e02e0a2b703949074ecd800,, test sprint generate report for nav2_system_tests included in coverage report,#1810     Right now its not included  I'm curious what it will say if it is included. Its technically test that's being covered  I'd like to know if that should be counting in our statistics.
ros-planning/navigation2,1859,2020-07-08T07:08:51Z,2020-07-23T19:46:17Z,True,2020-07-23T19:46:17Z,69fdfd6dc305d5a4ee66dc0c9a21803edfa465c5,15,11,fb176ed65a16a0447339c041d5865633d0286903 7b92667f851fcd7c76debb47f13239f5363ff483 dc46712bb8e4404f9783f443301c4d1a071dd743 6849484c5c264142f591cbb563c4463072b3975e f4685e0786608db939f8c7e32815639268556b02 7491a81bbb80470dcee52f901e79444c0b5e175a af9deec067e6518d9bd26543361bb0245cecd6f8 fae94801b6807fc1dee51c9f63df8281978a5da6 8e3e3e261b09654e9ad7b317ccc7d0534d105492 eaeb7b0c0a8a4960423f72ab748a30c6e6092c02 995bae054fb20a342a5fb223a24187b2c847eb8c,merge,Follow pose,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1660  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of Tally |    ---    ## Description of contribution in a few bullet points    This PR replaces #1748.    The goal of this work is following a dynamic pose to a certain distance:    - The goal pose can change during the execution of navigate_to_pose action.  - The robot stops when the goal is nearer than a configured distance  and then it faces the goal.    One use case could be following a person to ~1 meter in a house. We want to use it in RoboCup@Home.    I don't want to implement this as a new plugin for controller or planner. This work is independent of the algorithms used to create the plan and following it. To implement it I have:  - developed a decorator node for updating the goal pose from a subscribed topic.  - developed a decorator to modify path. The modified path makes reach the robot to a pose to the desired distance and faces real final goal.    This is an example of BT for achieving this functionality:    ```  <root main_tree_to_execute="MainTree">    <BehaviorTree ID="MainTree">      <PipelineSequence name="NavigateWithReplanning">        <RateController hz="1.0">          <UpdateGoal input_goal="{goal}" output_goal="{mod_goal}">            <ComputePathToPose goal="{mod_goal}" path="{path}" planner_id="GridBased"/>          </UpdateGoal>        </RateController>        <KeepRunningUntilFailure>          <TruncatePath distance="1.0" input_path="{path}" output_path="{mod_path}">            <FollowPath path="{mod_path}" controller_id="FollowPath"/>          </TruncatePath>        </KeepRunningUntilFailure>      </PipelineSequence>    </BehaviorTree>  </root>  ```  [![](https://img.youtube.com/vi/4vae3p73OUo/0.jpg)](https://www.youtube.com/watch?v=4vae3p73OUo&feature=youtu.be "Click to play on You Tube")      ## Description of documentation updates required from your changes    * I have still to document BT nodes.
ros-planning/navigation2,1284,2019-10-23T20:32:34Z,2019-10-24T20:14:07Z,True,2019-10-24T20:14:07Z,a03b3e401fe81b1dee7fb53057f0ab93da54fad6,1,3,2e583ea8d77f52d552b4aa862040be69aeb54ebf 4764e9c995c2c53f0675f90207c0f56019bf1733 07c52ead2b324ee8e17644799843080516a0bb4c,,Enable retest until passing with limit,Context: https://github.com/ros-planning/navigation2/issues/1271    I'm not sure what retry value would be preferred. I just copied what was used in:    https://github.com/ros-planning/navigation2/blob/67a92be87f8a00470313c232b1462d45379273e8/tools/run_test_suite.bash#L22
ros-planning/navigation2,1932,2020-08-11T18:54:37Z,2020-08-11T21:27:25Z,True,2020-08-11T21:27:25Z,671dde625ade1092130cea68a64eca7e97435033,168,45,28be30e993d621700723622fa4bf30e145f18dee 3913408bdb5cd8d8b456970e227ec10b4a19d9b1 36d0b25790dbe8f4dedabb6daa6c75557cd1d15f 9963518aab0f7063db046ce2774b6e084a08350d d99618c89f01b42bc30cb466f9e0c1530f88ba19 1be625430c5715d9f090f5b363f50c76d8dc4d4f 1a6824952be78e320a1f2e37672e3a3034611fd8 e458ad93002631304c8f52a3f94d12f0c55efbac ab98fe896acb0ac627c3b9a831d754ca64af4ad5 098e9c3fb63f6c7b8f6047eb8d7f4b9faa778e73 a0be179998d1c9760054f67c958f12dc943ba8ab 41e6bcef2c079497a9b6d4d9c2c8f9e1cbaf4ace f38b3c2b7b59369570aeff248e2c928ba53883ce 329c2046f87d2fb7245b1f32b1e3b8bbe00d05f6 c2bde4c250f001f3c7b48ab4271d940a613ac1b2 a5fab34a8ff60a36e405c548eb1ef077cf6926ed 71fda3166d321bb74324f8d6f7ba6088f427dd84 6a61ee6bc2b2a94f9a6d2579ed8e318d7fbc2a17 53a103207c1a2b307f14182de5b0dca16c75161b 45dd4f5ebecb6a67fa5553d39325c4fa0346fc52 8631c0a6d364536ee01702aa32ab4c6ba9616b92 02dff32a5baa6673ffc6949b26996c917c02b36f 68c7e14fd841f4d571235dec63b7b0bd44708194 1ebbad60a9ac3ea07d3ee5655b927c9ddae1c517 e1891d0f6df1890449df41368fc316dadc12a3ec 27abf03bc58a05b4af3cb427175be29f41c735e6 e4c2ab1f417e0a553c5203bbdc55a4280c38386c 33ecb85731ad806e0495904fd6905f16d1651c62 e90be199563b8f65910b7c2388844f10b2bb915e d57da0dcdb9143bc996f89e578e69dbd6eb4834c 0cf409a33cda4bb94773e2ddaec4e46b8646e447 e222944022d6f1a784fcb136d38a172e23a285e8 1a784d683b16cbae1ca9c233ff813619485e833c fc3b89a5c0c1c159f9f64ce883934289914c2e47 2a8d8cee7839dc8f28ab7f84adb7810000246cf7 9855a9b4d28110f5a5bc85160a86b19bbee25dc2 d60249543938fe7a67b2a689f477d1d8266bfbf7 29b3153471889493eeeb32255aee85301cfdee2c 053e3030e8c267bf04d15d29bf07d4fae2ba62dd 615cebdf75ad0c3cec18211d276088906f901d28 4346a3e6769775441952ebad33d7229739bfe7ef f86795e0cd7130af2dac193ec010e4a452e59ab7 8100ccb524a577de5f86c2f7da21a4bb0b4ff9e2 cbda8f3c7024c39523bfe7f5a994d3f9756e57bb 445cdce75de2e157518fe3cfbb190185655424e2,,Foxy sync 2 July 1 to August 7 ,Foxy cherry pick commits in range July 1 to August 7    Excluding:  - 4e1c18db7766d4a9fb5c8a497952b3743a0bb1b5  - ec2603960816a3b39204efb6d77ef5dff3d0a838  - 6f4a5582a568391b13a409e54b5c2d2ae0a565c4    with API or default behavior breaking changes (bond lifecycle  spin API change  observation buffer behavior     Major additions:  - Range layer  - Slam Toolbox rosdep keys  - Goal checker / progress checker in nav2_controller (default same)  - scan and map topics for AMCL and static layer (default same)  - Dynamic point following BT nodes  - A bunch of tests  - A bunch of new BT nodes (default same)  - Fix BT navigator crash on new BT  - Async resolution in updating static map    API breaks:  - How we load plugins  though all documentation to the effect this should have been in foxy    Doc needs:  - Update tutorials for "Galactic and newer" to "Foxy and newer"
ros-planning/navigation2,1939,2020-08-12T21:23:17Z,2020-08-12T21:27:41Z,False,none,4f4291cc239e1ef422ecb01b074efa9cc07d881b,169,46,1b0a7b160245daafae074c85e168a50a9d5bacbf c19199175ec81061fc4d13b7e76cdd8a52c8da45 ceac373de9b67af182afe618c8cd2f7386e1b20e de5efdd56f7199c3cbedb5b6a47482f1a7ffc377 d6e49730b4dd3277bf7a68826c989ce311e4fb66 84420bc0dce558287d8aa59587cdf8fbabd6f538 280468576625575020e4d6375bc7bde97fd8f1fb af6b3950664ea24b4867c5a49482a847c58cf65d b206e044d07f65964977e4c0eca6b6dc6015e0ba d2658c3fa9edaeabd569367c3776255bbc5095ec f697a3b2acdc42208183e70203b43ca18f82bad8 40c0cf89dd5e19e4ff67c196ee6e212bfa277973 ac6f994f86e41ac3786d6a2e40a44315eccc6ded 5f7bf97f8f477aaecc355e5f01ef550d629d4d03 5008ceb4edf99faf32a01784d113d13b26806e78 bdaeb5d3b7e92d1b7f3a427eb3ea909e38355d71 a6d081ca3cb77e7c2269d4f14b653cb4dd0fdee6 cba0737838f29bb0a53173101d0afdb606558af4 a28de8029418372022d340771d5b96de1887ce78 f37457ee680f458d3285c0cdfec6c1b8863f2fef 9c1d3fb971ed2fc1d7984b54c77df04b0901261c b3c12665990394d7b85538fc08b01033289fdeb0 c330aee20e1d1fbd844e26e495ee96aa681e8e26 de1b9183343fac2c68f18fa7dca2ba7dfcdde527 a88b5f1195d7320c955fcb4ee1cba8bfb3a95c4e f4d55e1de1b58b38b03f3dcbfc61366bdf7f58b3 b7f5e713c002580f3ec4a7b85bb8ce55a63cf16e 83a7bc53f8dc35a3e7a56bea7e89f164ef697c45 6674e03bac0ba4e6571d546a9b5eb8a563726543 ffc77d83385bd57bd24ae213875d71a2f2ec16bd ea9d77cd69f425cf7fa2014aea61a951f05510e2 7b58975d01abe58ec753f57c8b4cef2fb0553f19 6c5ca28b21a08558965cbca265d935e71b60872a ea67710d186f1bde5ffff606845355ccf03c200f 9d8bb26259d049742636e65c79841fd653ac66f7 a97bd9454573a670dcc9479d89745f9c62d0f46a 3fa8592067079cfabc08c9a39e4a058fae02ac87 9d43e8d9183d52ead805541c7e112f07eb9c64f2 67a0c2feb08bd4e6e749f78dafeb0cb198f371c1 4c62be229f93b0fabd545729ea103c86d54aca92 d1818959c03afd5167145d5d0baad0cbc20ce11f 06ef57fdaacf52904660eab8cf735ebd28cd6a88 356be78905b178cfd5b9cd58f679538841f3ff77 843f6c70ffbaad932e1eebe98401f02d8d6f0618 dbd1d1f2d01340e8aba30951ab4920ceacecd467 eab7895d437b67dd584e2c49851d140b2fbaef96,,Fixing multiple instances of waypoint follower node appearing resolves 1937,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1937|  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Sim |    ---    ## Description of contribution in a few bullet points    * Changed the way we define the name of the node  which as memory serves for client / secondary nodes has to be done a little bit of a funky way. I think there's some hacky solution in rclcpp for remapping the node names in the C++ code to launch that effects the entire process' nodes not just the object of that name.     ## Description of documentation updates required from your changes    * N/A     ---    ## Future work that may be required in bullet points    * N/A
ros-planning/navigation2,1934,2020-08-11T20:12:39Z,2020-08-11T20:48:48Z,True,2020-08-11T20:48:48Z,4c9b43f9922f42afdbca8d8fc982f3488d0e948f,1,9,12a6037a1e5eb13c8118498e379c98c5e7cd0996 1b1d7c4b05a0a7aa74f9c6b93c97fe82c7173d57 6786c6de491920b97766192eae0de4834a1ea203 c729e0325250f780343edcfba46acdab72a56539 d9e32a0759e691852101ec281d94beabb8f98564 baba3ad8abc849ad6ef0ebe944473c84e8d59487 94f5e06670d559c040423aef7698e433a3d31244 4d4ccb7a7cd7afcaf0cbc44db883ccbcedf2f736 7be62713bd897e19d7ff3ce58fba5280348d7aba,,Cleanup CircleCI config,Avoid duplicate colcon tests  and update/optimize CI config.  Context: https://github.com/ros-planning/navigation2/pull/1284#issuecomment-671636246
ros-planning/navigation2,1941,2020-08-12T21:30:25Z,2020-08-12T21:32:24Z,False,none,3298a8a00600d85d14e957ccab6615bb57636bdf,7,4,53a8771097056cf72e7772eb30457b404e072043 b0408001420b26b03b288d33e5ffb9d5783b7bbf 0cdf4f44c7a4171bfa4c6eb885d46c3c19f26a87 4afbd67135c88c5a22611ba178737215d93546ab,,Fixing multiple waypoint follower nodes on network resolves 1937,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1937|  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Sim |    ---    ## Description of contribution in a few bullet points    * Changed the way we define the name of the node  which as memory serves for client / secondary nodes has to be done a little bit of a funky way. I think there's some hacky solution in rclcpp for remapping the node names in the C++ code to launch that effects the entire process' nodes not just the object of that name.     ## Description of documentation updates required from your changes    * N/A     ---    ## Future work that may be required in bullet points    * N/A
ros-planning/navigation2,990,2019-07-30T05:55:48Z,2019-08-21T03:06:17Z,True,2019-08-21T03:06:17Z,5c0dfbe7a49cdc91a0db893ae5e1fb0e1bc84e6d,12,77,5f59f682ffeca74d5df9943e1e9a7cde775b4936 c2cc8faecda3896e6499f4b440f06d4d8fcb09ae f9b0682455230f9ce899ab1bd608cee676e2721a 0386f4435fe5855cf8ee288962dcc7766f8fe477 abd33800082a3940b9b888641fbed87998addc1d 53ba5d631099bed5e302baa32042d1ee76aa9829 103d3f28e4dce4da95764aa7aed9d990519025d6 45b35d39e49d10a6c6f8d125943d283f6e2d691a bfb5f65ec1af72311f4f4472a2d795800aecf7bd c8c00f1fea59ccd795b2713463325dac7aecabb2 bc747019fbf380a56d213c3a5b2520f30227e91d fdd13cac3bbb6305a95eeb6cc998f277972d134c 6e8b927be7d6750b904b9d3fa1f49990322e9f8b af78ecb7b857d9649d9ab96b0c1278399d91dd07 dc8b43eaa07b25dfcea2ea9a2dfa2960d6215140 60f60290a17037005ce436be7e940c2157ebbae5 1a0d9753341747c362a711d9f18e3ecbe605d34a c2b5c9653dd330a0b1cdfd41e282c55774f79589 cb67dd98f0115562272ac4a6635fc9893238b210 f1d5c22142839b6b2daed571ea03a8fe857bf381 17cf28a0c9d126eb6292a8ba8eaf928b02a05c82 e866ce96f0b8a24e4818b26b650ec7f44ef7bb1f ee98e993e769ef97eb5878c90fb1385b86a8be72 b4393117f9d348109ec673afd0bbed78930cec0f f5c000dc3c19e0ff8f83f30641f2598c147b47fe fc52350213bf30fb0db61b99926b652db490eb34 b54e7a1230d3187c3c49a97ab735458dc2c738c6 d54d1b5f0725eaa4e96cff2b072d67ac2c3e5ec4 8f6215459a83a786b8756f15d9e4406412195ec6 6d7f90cb579c0d24ef2a5e391836798f0cd352e8 1e7130798af60eabb9400b6f540d8cfe391321cd cad449d613671b019935d48d7dfb2f82a0b10fa3 92d966164eff2e0b6931270bd5c7d006daf67b5c 60491b1928df409e3fb613cdea24c53837a8cec4 d1fa0b2036e86272415adb325c7e3a88934a6686 7f5e02015f66600de50aaee37ae9b3b5a69f5717 27ea4cb745891e49213b5098de7dc3e880eab1f1 2eb191697783bb071de2c49f63dba800dd6fecc9 142d7c967c34f12fe1ed1f9a1a05c48371f9a0ce b89c1f3fc3cf06ab9e9ffd828d9decbdc92defb8 b4fea138025372269821c26f19c054f83977799c ac71fe5a4e75d8adef59d6fc7bcde9f6f99abb75 980063b1eafc8c2301d051574279de5373316242 a0fa810521752ecd833f80346c78c0e4fdaf0b7b 321e0e8f1f1be70b7c8bf64fdc167230ea62df93 d53be70027644b362c362d6a79ccdcabf5da30e3 e0fd2ebf88104d87dffe2fa80d0567ccf55c284e 1c6e4a85d1743c7551304c2367b0e7992e97c300 c6853560879e4109be4267ae078c9eeb281d6c0c 64d5ddd255d3adfffa0c1ee04a04ac0c1c961ae8 94f73430becb793ac8177c577317dbb4010347d8 d5379dc08708c6e4c5cca4ec55b592dcf94f1a02 a4c53dedef5fea17c4ffbc615d673d1ad84cdd29 b2e3d720809760fc18b90f0c3bf9c32fe26e513a af127127d3915ee526d49adc89dbe2897b743e59 0359bf76cb6a77cb2a30b5431ec0ca5a93430a6f 208e4e5147cf3a8ea4012bab7a6df985586edf68 01b367c6a7fbd3e8bdb37367dc73a15118e7875e fd21ee90d86802922418f53504bff951697eb10b 286a88157b0ad3f56b45e1368174b19d24e39ed9 970aee8fcf7cca59902b2541b74947aca45d808f 0ce96c96c43bb016341300bd64497c5cde6c7b97 2c9cd822b82338a07397c3279e6c499e14eccffc 099402f31abd6939b3285f1cb899c0c0be389bb3 a1345de8f28e2c4225f009450a903e9f55b54a7b cf8fa70e0ca22af4218f067d7995ddb8a49b470a 66892a6eed8bbf24f7bb3d004642d68d1ddf2047 6eef8e53b3dcb829be93f37346ac9251a04ddf9b aa65146f3beb1b52373d9e8c9a1243765eb442d2 d944605e90b898dff7986d2800c5144fc0b0a929 a177fe2a2790ef8753ad7517c68fbb047128351d f85c2bee6302025921493bb6ca25261f306dc9b2 a071cfdb94479f460932d9c5cc2a533be8c79909 98e62e451fd67f8a146e757a3674e9e0978db644 e03175ba9f0634cdcd59b07e9936c049e48641aa ca948f28b9aa5d331b114b12c68bd1a8900348c0 618e642f1e8177ddaebbd95b4eaaa65e9a98d2a9,,Extend CI Workflow to test multiple RMW,This PR extends the CircleCI workflow for testing multiple RMW implementations. To compensate for the added build time in generating messages  a combination of ccache and CircleCI caches are used to accelerate fresh PR jobs  including jobs across successive workflows. To compensate for the added test time  RMW implementations is tested across parallel jobs using the quicker release build.     ---    ## Motivation    In preparation for the security workshop at ROSCon  @mikaelarguedas and I have been working to demo SROS2 running on the Turtlebot3 to secure the entire ROS stack  including the navigation2. However  when using other Tier 1 supported RMW implementations to verify security functionality  we’ve been encountering a number of issues  including:    https://github.com/ros-planning/navigation2/issues/915  https://github.com/ros-planning/navigation2/issues/916    To help navigation team detect and debug these issues  I’d like to extend the current CI workflow to include support for testing multiple RMW implementations  as well as a number of other optimizations that may be helpful in keeping the CI tractable.    ## Changes    * DockerHub and Dockerfile    * Clarify underlay and overlay terminology and inconsistencies    * Parameterize the `FROM` image using build a `ARG`    * Add hooks for reusing Dockerfile for multiple tags    * Install and use ccache for CI optimization    * CircleCI config.yaml    * Clarify underlay and overlay terminology and inconsistencies    * Split RMW testing for release builds into parallel jobs    * Add nonce to cache keys to avoid collisions between parallel jobs and workflows    * Use CI caching to preserve ccache across jobs for both underlay and overlay    <!--  ### Before    ![image](https://user-images.githubusercontent.com/2293573/62171013-57637680-b2e2-11e9-9ceb-a3b233c7788a.png)  -->    ### After    ![image](https://user-images.githubusercontent.com/2293573/62171073-98f42180-b2e2-11e9-84f5-6c7db24d6be7.png)      ## Action Items    - [x] Update DockerHub automated build config  - [x] Change over image repo from ruffsl to rosplanning    ![image](https://user-images.githubusercontent.com/2293573/62169463-20d72d00-b2dd-11e9-96c7-a9e1783673fc.png)    | Source Type | Source | Docker Tag | Dockerfile location                | Build Context   | Autobuild |  |-------------|--------|------------|------------------------------------|-----------------|-----------|  | Branch      | master | master     | /.dockerhub/nightly/Dockerfile     | <leave_empty>   | True      |  | Branch      | master | master-rmw | /.dockerhub/nightly-rmw/Dockerfile | <leave_ empty > | True      |
ros-planning/navigation2,1956,2020-08-18T18:29:07Z,2020-08-18T19:42:37Z,True,2020-08-18T19:42:37Z,a1e07200dbb5ced654e71d1cf40bf8461ae66968,3,7,6d6ebb4edf26e656b8c507f1c611091358a10e0d b1a0ad2ba463ad0d9b3d32c7ee558be0d6d444c5 6440b9914761f86d23948fff7e38a8ea1fa80113 7ced903c9475a3b4873162e2773363f985fed693 eab926e6ae5a604a7082043c62c835a607c50e0c e5d7fa4643278e8c9b57c2fb6691bf32c16920fd 599d166c22d70c51a1690388ba42f172a82e7606,,Trigger Dockerhub from cron job rather than Autobuild,Currently  Autobuild is enabled for the navigation2's Dockerhub repo. This results in pushed commits to the default branch triggering rebuilds of the docker images used for CI. Autobuild also enables repository links to trigger rebuild whenever a upstream dependent image is updated on docker hub  i.e. `osrf/ros2:nightly` that rebuilds once a day.    Although  with more frequent PR merges  this build queue can build up  delaying fresh image builds. More problematic however is that updating docker images in the docker hub registry before a CI workflow has finished can disrupt jobs within; particularly the caching strategy between jobs in the same workflow that necessitates test jobs run from the same executor image that the build jobs before it use.    This PR opts for triggering dockerhub builds via a nightly cron job rather than commit events to the default branch. This will rate limit image rebuilds to once a day  while reducing the likelihood of interrupting any ongoing workflows.
ros-planning/navigation2,1953,2020-08-17T22:50:04Z,2020-08-18T01:14:34Z,True,2020-08-18T01:14:34Z,f07c1eed7bcab8927a693c46a88d54311e7a2307,1,2,f118b4f06bb474f490772522119a2bf8280621e2 451c0b1d79b9ba413fcbaa563d700e86b09baf2e,, WIP removing rviz plugins from test coverage since its not a production run time component,#1810     We exclude navigation system tests because they're not run-time tools use on someone's robot during an actual use. The rviz plugins are a similar analog  only used for entry level testing  not used when actually on someone's robot for use. We should consider if it makes sense to exclude this as well.    CC @naiveHobo - thoughts?
ros-planning/navigation2,1945,2020-08-14T16:55:46Z,2020-08-20T20:38:19Z,False,none,15e5538407bfc8b39a30498c9c27a92fee056edb,5,5,c2682b7f6c8865dbfa91ea3625a250086660f4a5 3c0f3b8eb2d12f6bb93a98732bf8561afcb05894 a56d4b1a425b8a737c361038c6ad183616519c9f a31029127d2820f98249419e1793744425087565 5248ce4ce552532b0146742ead25abdcfdacbbef,,Rename AMCL parameters for global frame ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1) |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---      ## Description of contribution in a few bullet points  - Update AMCL_node parameters to match other node parameters name for Frames (global  base  odom)  - Allows "Quote" or Unquote values to be use inside yaml config file.    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->
ros-planning/navigation2,1900,2020-07-31T19:45:28Z,2020-08-25T01:02:28Z,True,2020-08-25T01:02:28Z,f237751f557b2e921e08f96d4749bfe3f2b2b091,65,12,b56b78f7bc011098f2a780fbb6110eb71c554b48 cc56e2a273c7c6995aef0f463e6f113c09e0597e 08a598d1d292b0b0b3b50ee0efcd8160a00b38cd b990bc90ee1cd3d422948e8f09a26b1408e83dce bfdf4e9e0484d14dd28de431749e9121a62fc953 151bc6fd86279cd2b73c174493f5132cd6b13f9d 4e888b313abd0617dab49270e5b161e8a59260c5 5d23e33269d30e4b2c050568cd65a558cf6a510d aeae2cc3c09aa6367374479ff015613703fda05b 8942273b0840e08e730ff73552a4d1dc79586f49 0722a30bd46126f801c79c240d35bb1cb6055d55 45775b360a8bad5e1fb04cf7fb230a318159df4b,,Fix memory leak,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1860 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | Turtlebot3 Gazebo |    ---    ## Description of contribution in a few bullet points    * Fixes shared_ptr (created through `shared_from_this()` cyclic dependencies in major servers which causes a memory leak on killing the system when the node is in any lifecycle state other than `unconfigured`.  * All server were tested for memory leaks using valgrind (report below)    - Run the server using `ros2 run --prefix 'valgrind --leak-check=full'`    - In a separate terminal  manually make the `configure` lifecycle transition using `ros2 lifecycle set /server_name configure`    - After configure transition is successful  kill the server using ctrl + c    **planner_server:**    ```  Before:  LEAK SUMMARY:     definitely lost: 875 bytes in 41 blocks     indirectly lost: 4 587 bytes in 63 blocks       possibly lost: 887 563 bytes in 1 385 blocks     still reachable: 8 052 031 bytes in 21 690 blocks                        of which reachable via heuristic:                          multipleinheritance: 20 552 bytes in 80 blocks          suppressed: 0 bytes in 0 blocks    After:  LEAK SUMMARY:     definitely lost: 795 bytes in 38 blocks     indirectly lost: 4 571 bytes in 65 blocks       possibly lost: 0 bytes in 0 blocks     still reachable: 91 972 bytes in 205 blocks          suppressed: 0 bytes in 0 blocks  ```    **recovery_server:**    ```  Before:  LEAK SUMMARY:     definitely lost: 1 032 bytes in 36 blocks     indirectly lost: 3 677 bytes in 48 blocks       possibly lost: 308 929 bytes in 728 blocks     still reachable: 5 022 993 bytes in 11 043 blocks                        of which reachable via heuristic:                          multipleinheritance: 10 392 bytes in 39 blocks          suppressed: 0 bytes in 0 blocks    After:  LEAK SUMMARY:     definitely lost: 744 bytes in 24 blocks     indirectly lost: 2 621 bytes in 36 blocks       possibly lost: 0 bytes in 0 blocks     still reachable: 53 562 bytes in 185 blocks          suppressed: 0 bytes in 0 blocks  ```    **controller_server:**    ```  Before:  LEAK SUMMARY:     definitely lost: 1 595 bytes in 76 blocks     indirectly lost: 11 429 bytes in 173 blocks       possibly lost: 1 189 300 bytes in 2 196 blocks     still reachable: 9 467 852 bytes in 25 774 blocks                        of which reachable via heuristic:                          multipleinheritance: 25 880 bytes in 98 blocks          suppressed: 0 bytes in 0 blocks    After:  LEAK SUMMARY:     definitely lost: 995 bytes in 51 blocks     indirectly lost: 9 453 bytes in 150 blocks       possibly lost: 0 bytes in 0 blocks     still reachable: 106 448 bytes in 251 blocks          suppressed: 0 bytes in 0 blocks  ```    **costmap_2d:**    ```  Before:  LEAK SUMMARY:     definitely lost: 2 328 bytes in 33 blocks     indirectly lost: 450 004 bytes in 711 blocks       possibly lost: 118 613 bytes in 267 blocks     still reachable: 5 258 764 bytes in 13 553 blocks                        of which reachable via heuristic:                          multipleinheritance: 5 800 bytes in 28 blocks          suppressed: 0 bytes in 0 blocks    After:  LEAK SUMMARY:     definitely lost: 824 bytes in 28 blocks     indirectly lost: 3 429 bytes in 50 blocks       possibly lost: 0 bytes in 0 blocks     still reachable: 56 522 bytes in 187 blocks          suppressed: 0 bytes in 0 blocks  ```    ## Future work that may be required in bullet points    If the changes with the recovery server are approved  I can make similar changes for all servers which use pluginlib.    - [x] Recovery Server  - [x] Planner Server  - [x] Controller Server  - [x] Costmap 2d
ros-planning/navigation2,1972,2020-09-02T18:11:17Z,2020-09-02T19:29:47Z,True,2020-09-02T19:29:47Z,26b975b78af4ac0b839a8b825f621a2a2e611ee1,1,1,4d4a63a70fb6d6b738b5f8e1902f5365fc6faaec,,Update Bond URL branch from merged PR for lifecycle support underlay repos ,
ros-planning/navigation2,1985,2020-09-13T21:27:06Z,2020-09-14T02:11:33Z,True,2020-09-14T02:11:33Z,79963a4267060e7b5b4730f3d96b757fe1aa4646,1,1,e542570c34752d1a5e8ff569c814d89d91856856,,Fixed typo in Dockerfile Ture True,Just a typo fix: Ture -> True
ros-planning/navigation2,1980,2020-09-04T18:24:27Z,2020-09-14T19:29:24Z,False,none,1902f899b4f0db98586e09c5af7c8b58af69e3b3,31,1,82cbd0a1efb416682382f059b7027f88cadf68ec,, foxy Enable System Tests on Windows,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | N/A |  | Primary OS tested on | Windows |  | Robotic platform tested on | Gazebo simulation |    ---    ## Description of contribution in a few bullet points    * Enable System Tests to be able to build and run on Windows.  * Most of the changes are related:    1. Normalize the test file path to use forward slash `/` since many of the Nav2 components are expecting this convention.    2. Add `python.exe` in front of any Python script execution. On Windows  the script is not an executable and one needs to prepend `python.exe` to run. Hope the convention is portable and won't disrupt the tests on Linux.    3. Use more portable `M_PI` macros.    4. Adding the missing dependency (angles) to  nav2_costmap_2d.    ## Description of documentation updates required from your changes    N/A    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->
ros-planning/navigation2,1996,2020-09-24T03:17:52Z,2020-09-24T03:26:25Z,False,none,c4cd2ff8a25fb2b8aaf1461ed4646157e301386a,4,1,6ca9299e088f8e842a4c4408aa790d59e7cf463d,,nav2_waypoint_follower Add an optional param to specify a sleep time ,Signed-off-by: jediofgever <fetulahatas1@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (https://github.com/ros-planning/navigation2/issues/1992) |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (Gazebo simulation of Turtlebot3) |    ---    ## Description of contribution in a few bullet points       * Added an additional/(optional) int parameter to `nav2_waypoint_follower`  in order to control behavior of robot in between waypoints. This int parameter species an amount of time in seconds to wait/sleep after reaching each waypoint. The parameter could be set to zero if a continuous execution(or as in original implementation) of waypoints is desired.         ## Description of documentation updates required from your changes       * Added new parameter  so need to add that to default configs and documentation page on doc         ---    ## Future work that may be required in bullet points     * A more advanced concept for controlling robot's behavior on arrival of waypoints  could be based on service/action as mentioned by @SteveMacenski in https://github.com/ros-planning/navigation2/issues/1992#issuecomment-696955758   However I might open another ticker for that later on.
ros-planning/navigation2,1995,2020-09-23T22:46:02Z,2020-09-23T23:57:09Z,True,2020-09-23T23:57:09Z,182d3b3ea433cbed68b4e19ac91acc33d4e331c6,8,11,7f17abeda95453d27ffd02d9052cd3bfa4742a6c 29020b8f03300b5e72fced57b4644a07d809736f e3730106930d64cf6a7b9d98cef7913af47f19ad 536813d88dde230950c5a965717b1dbaa8dfd6fa 7f733be9b2b3f47e2691ee0f2b40ee62cd573678 de77b11411298f41aeb89c85a9620340ff1b564e 0910c66621e9c5cccc6e4cd13db2689ffdcf20cc e70850ec7be49ecda2ddee3736003fb58955a767 69aed4a43a57c150a1d9a2c2b92791e86a076b18 502c23525974e11afc518bb636db9a6b3891c304 46aa4d879720eb58f5b784ea4976c2b037f3d7e1,,Update Dockerfiles,- Fixes typos  - Simplifies Dockerhub config  - Optimizes source build with more multi staging    - folding between install and build stages    - parallel testing of workspaces    This doesn't affect much of the current build time  given how front loaded the build dependencies are with most of ROS2  but will help with consecutive rebuilds/tests  or if our underlay dependencies grow.    * Source build before    * 39m54.422s w/ `--no-cache`  * Source build after    * 37m6.997s w/ `--no-cache`    ### TODO:  - [x]  Update Dockerfile path in automated build config on Dockerhub after merging.
ros-planning/navigation2,1916,2020-08-06T00:08:36Z,2020-08-06T01:13:44Z,True,2020-08-06T01:13:43Z,2496218836301f53616af06c9a79c34d8dc7dace,8,3,33ac9c8197ae298306857de2e52db552ef6e05c0 fb68998d0b149ec41514621c5f7e4cbb11b85d78 f80e24c271e1d481bf272bf3efb692659574755d,,adding waypoint follower failure test voxel layer integration tests etc,#1810
ros-planning/navigation2,1962,2020-08-20T15:52:08Z,2020-09-28T21:32:55Z,False,none,849e2e9e1767a3dbb58d3ce5687c162af910ae05,5,6,13cf4437749d4e0c842214a5f6e105b650f30b76 44a35221cad835a26b981eaef97700cd07512eca 8bfbdf3e6f2fe9c6b0e3ad13bf0a2cc4656b9083 76b86b9722ee420bb934f382bc7aa9b625888e41 2bc255e2d3927b9ba43553fb0ea461845412ff52 8d6e67001b3d1ab8642f339069bb208219a9606e,,Update Parameters and Value type consistency between packages inside Navigation 2,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (#1945 on Foxy Devel) |  | Primary OS tested on | (Ubuntu 20.04) |  | Robotic platform tested on | (Others) |    ---    ## Description of contribution in a few bullet points    *Update parameters name in amcl to match other packages in navigation. As well as  how you can initialize its value in config files.  *Now you can use both "quote" and unquote values for frames in config file like other packages.    ## Description of documentation updates required from your changes    * This is ABI braking because of the parameters name changes.   * Update to navigation.ros.org is needed.   ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->
ros-planning/navigation2,1882,2020-07-20T10:43:42Z,2020-09-29T15:43:31Z,True,2020-09-29T15:43:31Z,4c8334f93bdebab775cf56c0d7df8eb71bc1b91e,39,32,5e02773ced8fcce3c1d21cc9dde4d7c344851d47 fcde94fa70b3c138458ea0658dd1ebcc800c2b9d fc2ed2674c972bcc0407e4d7b62d4a1e8c10b348 685115803a4e50ab3ce32c6593e1816237ecf768 e184945fda32b5a3a4bc40170f73b98fda535c80 c68136405bfcceba656a1d8927ec8113d3114ec2 9c234761468b6d0df8b077622fc19770cca77b4e b355574b455dabdf5ac97041cd8f797b6cee709d 9328b59f626fcd1c36c25a8424f45c95ebd502fa 938a93e1f2306679268d0b72d9e2b5f3265b475d fb5fe13c36b55902ec067ab14f5c29e19ece029c c711166a3fd0b9819051d7889a6dd61d33aca06c 879e7147db0ecb01b5c5df18e79e56f50014b930 6cc1130da58d0c905602ed1d58b41a1bfe54f121 4668c98f09f09c1ef942ef71f71eda1b464faed4 7bf7645623fcd2b691c8036e73d75b37c979edcc eee3635ee0934798b5d3a97c0bfe066829658aa1 7e1ecf1e45e38c55d120a9dcaca0bf7a1f5dd330 12ed8fc834794ece189357ffaf8a1b0040660f84 04169b3497f6252c039c248a175820b678a5cb30 610e11827aed126769f453486e0e0f44713afb1b 690b50b1fd44151c27fa4db0a7b5af7fe23efbba 1dd6face331efda27655b219c740263f93828e8a 1a317ff15dc3a87b912383a35c3f144c040b4847 af5214d74295b261b8a8fa490b476fa874d3b28c a55ce9337ba232e7881a6f8c38871773ec023359 d04e05be66d71c9115db2d71abc6517dfe6cae32 da0fcda67dc24a87a4311f9d93c28ff4fafccc53 49d9292f01eefe4bd0afe493d480ea1a1e367676 87fa61b52af12d6bb606f671951e6dd3b130e1fd 1e3ed29aeefecbb8756afcb092218bab741c14c6 19b3e114db484fad38a5e6e839a4c1f9bdbee303,,Costmap Filters,Codemap Filters feature PR for keep-out zones  speed-limit areas and preferred lanes use-cases.    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1263  #1522 |  | Primary OS tested on | Ubuntu 20.04 with ROS2 Foxy onboard |  | Robotic platform tested on | TB3 Gazebo simulation |
ros-planning/navigation2,2008,2020-10-01T20:43:32Z,2020-10-01T20:46:01Z,False,none,none,374,56,bc474f7d786029d5dc06cf5451518906213dfbd8 3b67aebbbbef2b0c4216a821cab5fc78437a1e4d 8072627d16135c37414fc99c07dd379410910681 1c91af64c4d41dde78f82a1b094bdb29c3fde856 a21bbc52db93fd8e44909b7aec520ff4d525800c 962e2e9b2d810e07f301fd70673a5dd2e650d2a3 d2e2afbaef01c1649e10dc18d2363d3af35d3410 8468db7abf32ff2685f110a807dc8299f49332c4 c6cd44d78162b6ff5587c09350d9517a8ef18f66 b0830c312adb276f5f654638b6c7d9d3b882bf4a aa322579400e87b27e1ff7ca05a4e71c4d97c211 1cc420bc4e14cd385a5d30da6ce400c07f349aa8 16cfc8f4d8870232dbe114be94f20e33bc15efc2 56ee4b37d8e65f4d6203ce132dd6963ce23e9d62 12833435586c572b6b2241a4dee02e8f08d2c8c9 85bf58165c38b91f802cdb421dadfe3146460df6 a99619720a566dbb79ab520ff525dc8a7bf2ee4b d4e36c17210ede22c6cdfb45b12752787a341871 a75ffede04aed3dd4ec6dfd3c2de98517b26ad33 d4672b1e79861daf47e1371109a0fff958b6d5ba c8a1989455dd0bea69089209dbc06f6959482841 c1046bf95b8fe8bad6e264056eb30500d11185b5 4dc2ef5fd540686d6e4ba156c4f8177a1baa0439 3fd6418615fde23b897d2a681e0351d5587d4c13 f7da3b57127420761c1cf2f9de687bb6c6fce663 e6ac436916ef05c8a98e63b7d10b50d11d24c0b4 a441be28ed02a581700777bc81bd0c1bc7686890 6ee82e95c85ba764d71e8f14e025b7506c191edf c47450c5bfcf38bb4a66e46c62794e430ce1ed75 979d7c1b51012f175d33f25822c1d0db6ea0c514 76c566e12375d74a16b03ae63e7ffcf06995893b 5955fc39fdc7e9e84d4f93400692f670f06d354a c01118298d1ce56ac501f232e1de10558e72d12d fd6570caf5afbe808d18014fd81bda125a836804 c2cc4d94b4f2741307d587b7c1ad01e4214d94a0 40045de647bd9341cd332ab6575bc6f60be984df 0cdaf0ef686b98e2a86d8ee837d6556bac9b401f 47f710d4a97768b4588781900a425c11e9058866 6339ac43e2017076263186a05d61d14cdf1fec62 6141b2d6f5745d52d4894eff693473bf3a2f414d 4e60a9577be5ed91de9f26b6b88cdf9afdc8b32b a18d68a23ce9ab9564b06a002d0b13ca5514b008 a0cdcc026613ececc2a0fce0609814e79d2390d4 1480ea920c2f6df27decffb53e1d1d944ffb0268 7804d37f60b49f6a39a196d20a5484bc041e4be4 7cee84b7c5e59aa05d3919c3c23d48971b94c7da de0d4b7d0d0cdfc7d040f7b8e61d8582715fdcf0 dd2495513b04a1ea24dba2188c5e1b15264ea1fb d417a94e3425f9599d98cdae92e7754da9f9fe0a adbee3559b8fe30561df38302228bbda00974c55 27487c21746a18095c8d795a4b7988edbc572d0e e807455712dd5d672c7f41e900ab43a8488dca76 f3695fead57a47b67fe7fcd634aa43d36f23f75d 4c2107b96da10863f6eb062fbaba74f1e43cafbb 40011d2d95fa49a7e37933c9ad05072a05513a9b c2a9b1e4d6154391d68b18feb03909f7ab6069e4,, WIP Nav2 smac planner,Adding Hybrid-A*  2D A*  and templated search libraries / plugins.     To merge:  - [ ] https://github.com/SteveMacenski/navigation2/pull/43 this in branch  - [ ] Documentation in readme  parameter guides  descriptions of algorithms and implementations  etc  - [ ] Doxgyen cleanup  linting  etc  - [ ] Complete upsampler / smoothers and tune defaults  - [ ] Provide smoothing server  - [ ] metrics / video
ros-planning/navigation2,2007,2020-10-01T20:06:45Z,2020-10-02T03:45:32Z,True,2020-10-02T03:45:32Z,64871a7283a08eb08d7365c6279d0b330155f7f6,3,4,d6d51ca7aea17c078fa021f7fd1bf2593a2af074 ac78b84f231f7dbcac718f8dd4ed1a45bc543f09 294bb193b76cb89923b9460d68b83552e321f341 55781ef431ccd7c411885021f1b0a799b00b5a90,,Fix finding Codecov config for CI,The codecove orb was running from the wrong working directory to find the `codecov.yml` config file  i.e. the root of the overlay workspace instead of the root of the navigation2 git repo. This just swaps out the orb with the command it generates and adds the needed `-R` root dir argument to specify the path to the navigation2 git repo. It also cleans up the root of the project dir by moving the config file into the CI dot folder  given the codecov bash script can find it there anyhow:    https://github.com/codecov/codecov-bash/blob/9d9a1b61c04e8aea9ebb8c200d1fbc399eb6cc99/codecov#L963-L968    Fixs: https://github.com/ros-planning/navigation2/issues/2006
ros-planning/navigation2,1993,2020-09-23T05:15:14Z,2020-10-06T01:41:32Z,False,none,14989597a8ad1066d5265ca3680b3abc59cdb394,183,6,53a8a7bccfe0ae9243a5ad364199825b2344d765 1500a5dba5ab01756779199f3c007a4822ae777b b59d7afbeae9a4f204191dce2ff9a0823e019fd5 08e4eac5323b23676b73fd49a70a157b80b98840 4ad6f4dc2887dbdaf3d5aac557f351b74539af59 3369ca65db2e8190355e44b115edb20a07d9f21b,,nav2_waypoint_follower Add an optional param to specify a sleep time ,Signed-off-by: jediofgever <fetulahatas1@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (https://github.com/ros-planning/navigation2/issues/1992) |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (Gazebo simulation of Turtlebot3) |    ---    ## Description of contribution in a few bullet points       * Added an additional/(optional) int parameter to `nav2_waypoint_follower`  in order to control behavior of robot in between waypoints. This int parameter species an amount of time in seconds to wait/sleep after reaching each waypoint. The parameter could be set to zero if a continuous execution(or as in original implementation) of waypoints is desired.         ## Description of documentation updates required from your changes       * Added new parameter  so need to add that to default configs and documentation page on doc         ---    ## Future work that may be required in bullet points     * A more advanced concept for controlling robot's behavior on arrival of waypoints  could be based on service/action as mentioned by @SteveMacenski in https://github.com/ros-planning/navigation2/issues/1992#issuecomment-696955758   However I might open another ticker for that later on.
ros-planning/navigation2,2018,2020-10-06T16:35:49Z,2020-10-06T16:46:23Z,True,2020-10-06T16:46:23Z,c4d4e28a3f22019257dd6ac785ba9e31fee39349,2,1,8a70b3be4ea2a44c7c92d073240de04549397607,,Updating instructions to build from source ros2 Eloquent,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2013 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->   - Updating instructions to build from source under ROS2 - eloquent  - Addition of a "quick test" after building from source  ---
ros-planning/navigation2,2023,2020-10-06T20:10:50Z,2020-10-07T19:59:19Z,True,2020-10-07T19:59:18Z,fd117e821b5bef012d0610bbafc9e7f8a6ba7043,1,3,7b3d95b28fcf6575eef7a7882cb09ca9389d15a0 32a92456d85e6b78b47d7210486dc315e68d13c9 8c4ff921e712a85f4922bf97034dccaf4cab2a20,,Patch codecov,Looks like the `-R` root flag is implicitly the root of the repo  and the rest of the codecov pipeline has other assumptions that the script is executed within that same directory.     Fixes: https://github.com/ros-planning/navigation2/issues/2019
ros-planning/navigation2,2015,2020-10-06T01:36:40Z,2020-10-08T00:26:15Z,True,2020-10-08T00:26:15Z,eff208ef5aa1b26356bda8f5fa8f304c7884327c,11,6,737646139bc69007d34124322554d8477c55578f 1ba2ffa3f3e158b36094cc448e7b1592898c994e 7b2204fbf834881842bc452ef518cba7eb51281f ab104f5923d0e80d39899d4b16e2d23afc3ca47a 2367eb4a6ddc0ff898e7c879c9d559eb02104121 a4768cdc0d453c2ba94d3e6a9a2845c08032cc93,merge,Successor PR for 1993 Introduces A plugin interface to define behaviours at waypoint arrivals when using nav2_waypoint_follower,Signed-off-by: jediofgever <fetulahatas1@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->  Successor PR for https://github.com/ros-planning/navigation2/pull/1993    https://github.com/ros-planning/navigation2/pull/1993 was mistakenly targeted to distro(`foxy-devel`) branch and it became difficult to track the changes and merge the new code into `main`  This PR includes reviewed and modified changes through discussions in https://github.com/ros-planning/navigation2/pull/1993    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (https://github.com/ros-planning/navigation2/issues/1992) |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (Gazebo simulation of Turtlebot3) |    ---    ## Description of contribution in a few bullet points       * Added a plugin interface to `nav2_waypoint_follower`  with aim of executing a task on arrival of waypoints.   * Added a plugin that was inherited from introduced interface  the plugin simply lets robot to wait for a specified amount of time after arriving at waypoint.   * Users will be able to inherit from the base plugin interface and define their own specific tasks to be executed on arrival of waypoints.        ## Description of documentation updates required from your changes       * Added new plugin so updated `docs` and `nav2_params.yaml`   * Opened a new PR at [navigation.ros.org](https://github.com/ros-planning/navigation.ros.org)  in order to update website to include documentation and onformation related to the introduced plugin       ---    ## Future work that may be required in bullet points     * A  future work could be writing a tutorial on how to add a plugin inherited from the plugin interface that has been introduced by this PR
ros-planning/navigation2,2021,2020-10-06T19:17:47Z,2020-10-09T23:32:46Z,True,2020-10-09T23:32:46Z,d3fc28af28df764a153c85434f8b30270e963622,54,24,d9a96ab63f5cd51b486ca83ebc24117000e5a784 7e700b463855e65666e750eedb2acddfba621136 75cfbcbe0815dfdb1983f43c9daf9136dd8cdf8e 894945210976926c0973d0467ea98b36b4fca23e 0796d15d5ae4a593c1989195bdf1c3067f881920 bce9ef18ffe5b557364d25c78c2bccb0cb35cd2d e59c016eeffb00e5f31732ba8694ce1f242e899f a1f2cde0b219cf4221fb0390c8362a3df8ca0f4d 1f6ab64fde2cfa4085978822c9cf14e1813cec1d f7197a88d5395237f63d0c28823ac43550aca8a5 a04546fe06f77783591206c12d6bc48689eeef9b 9c8e88cfe83d252c54067c792616d4731b1d7dd1 b66914eeb1543950c5e3bf32e5181b4107c041ea c71e3db31fd8f6f2d53be698611f8ccd04ada1a2 867503c78836f72b3721bb0b1dc2d18aa7e30359 5810e863675c53d6003e3f6ff426f2b5204440fe d2379635c2cdbe918f664516329da52857f57cc2 bd82d922cd3b2bb9db0156047fd5e7bb7c90350c cf9c3b33c0efb4f5df588e086a552ac6cde6d690 cce3e9c1a2596625d047fa8ddf14b33d6c0aa8aa bc47d1f432dcd077862e8dd27c1db18148adcbbe 385df8d1ad18acde67990905a923c5b0ab7abde0 c648191a5face5578e051b3338ac2d34caefa9b0 47730af749a95f0d9868b91d7df6f28e3c1bb019,,Smac Hybrid A planner,WIP  the original branch is so old that there's literally 300+ merge conflicts so moving over files to a new branch to avoid that since I don't think there were many changes to non-SMAC items.     https://github.com/ros-planning/navigation.ros.org/pull/92    TODO  - [x] cherry pick analytic expansions merge commit https://github.com/SteveMacenski/navigation2/pull/43#pullrequestreview-503487411  - [x] Test non-floored motion increments https://github.com/SteveMacenski/navigation2/issues/56  - [x] tests passing after analytic expansions merge   - [x] add gifs / pictures to readme and configuration guide page  - [x] metrics for readme -- test on larger maps https://github.com/SteveMacenski/navigation2/issues/27    Additional performance optimizations described in https://github.com/ros-planning/navigation2/issues/2014
ros-planning/navigation2,2025,2020-10-06T23:54:05Z,2020-10-07T17:42:05Z,True,2020-10-07T17:42:04Z,13c878b912ef677d16f4e73801240f7b0c6000b5,1,1,5d3c7e33d2a739acd5eb4ac7e5e4253aa643c96c,,Include underlay source folder in rosdep path,As OMPL isn't yet registering properly with the ament index for ros2  and searching all of << parameters.underlay >>/install will stall rosdep  when searching entire $ROS_WS/install folder    Related: https://github.com/ros-planning/navigation2/pull/2021#issuecomment-704604732
ros-planning/navigation2,2034,2020-10-12T19:29:03Z,2020-10-12T20:46:36Z,True,2020-10-12T20:46:36Z,a71a5f23b881b34d6ddd8aeff04b9cbd06faa0fa,2,3,7485f2bc41437531209f1a0ebc7650d99b85e1af 80795a85d63214d91a7db7f03b7f604de14ebc99 7f56797057a68fc22dda6f39cf47fc20b74be36c,, WIP fixing CI changing gazebo base to my fork for testing,This temporarily resolves issues while gazebo ros plugins are being fixed.    Also fixes issues introduced by https://github.com/ros2/geometry2/pull/325
ros-planning/navigation2,2032,2020-10-11T16:18:03Z,2020-10-13T15:28:53Z,True,2020-10-13T15:28:53Z,7bed20d065c8917080bcfecbb8f695ed6771381c,15,10,aae2d2281f927bfe17e818e087fb25cee64aa385 be38a7a91811e27742ca4be01dbef16436a461fe a71a5f23b881b34d6ddd8aeff04b9cbd06faa0fa 3ec1454aed227ca82f22eb90fa1e44187787e975 a13623922bc93ec8f12cdd40d2a817ea54998aaf 53d8fd43adc10e4046deb1fffeb18e43af4aff2a 9262f7cd6645bbbfb41a9c0f3ac8a17d5f1b413d 3fe8babce41bcb7b3a0532c29ebe71af15cb53b5 f56662c26eb91d74c04c610f277218a08b7b0b64 adcd0456add38ce5ed1f0367e886e7403484d79e,,Added test for nav2_dwb_controller dwb_plugins LimitedAccelGenerator,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Primary OS tested on | Ubuntu |    ---    ## Description of contribution in a few bullet points  * I added a test with an (invalid) value of the controller_frequency parameter of 0.0    The expected behavior is that the LimitedAccelGenerator prints an error message and the frequency should be set to the default frequency of 20Hz. This should set the test coverage to 100% for the limited_accel_generator.cpp file.
ros-planning/navigation2,2037,2020-10-12T23:56:48Z,2020-10-13T20:28:44Z,True,2020-10-13T20:28:44Z,e5b01c53210898903ab5683ef32614e537402110,1,1,be55051150da17bda83a0e7dc3842b9da38eb90c,merge,Reverting to ros simulation from stevemacenski after patch merged,Fixes build in CI for ros-simulation again
ros-planning/navigation2,2030,2020-10-10T11:01:45Z,2020-10-14T18:54:51Z,True,2020-10-14T18:54:51Z,e1e1be4880a703c9fba44bb0ed68f4463d31eb95,14,4,f1319e35251d8f04ab2b5d356cc575105f5e80b7 907920341ab1a5d727e3ddd244caaf5b5e2d5e48 a4ded14b857a29f471bbf7bea1541dbe89f880d8 8d12009621566b955c0bd1ec0be14fe93154c3c8,,Run time system test for keepout_filter,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1263  #1882 |  | Primary OS tested on | Ubuntu 20.04 with Foxy onboard |  | Robotic platform tested on | Gazebo simulation of TB3 |    ---    ## Description of contribution in a few bullet points    * Added run-time full stack navigation2 test for verification of keepout zones filter enabled in local and global costmaps.  * The test is simply adding one keepout zone placed on the path from point A to point B  * The test is continuously checking current robot position (`/amcl_pose`) and global path plan (`/plan`) each time when they have been updated. Both of them should never intersect / fall into keepout zone.  * The test is made as a basis of `nav2_system_tests/src/system` test. All files were initially copied from this directory into `nav2_system_tests/src/costmap_filters`. Then for readability  all Keepout-related changes in the python-code were made in a separate bcc7fd6310b04edfb91e01e839c35a578cca2339 commit.  * Removed old system test as unnecessary.
ros-planning/navigation2,2062,2020-10-28T19:18:08Z,2020-10-28T19:26:29Z,True,2020-10-28T19:26:29Z,3ac28606f0d8f9f12d46a74b616b81a382724142,1,2,f02a169e2bb9a9d79ba9fbd34336dc273c7e116a 7d0910b3879f102a26c0c5c72991962d7d69331c,,Updated incorrect BehaviorTree CPP tag to API compatible 3 5 3,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2061  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | NA |    ---    ## Description of contribution in a few bullet points    * Fixed underlying BehaviorTree.CPP tag    ## Description of documentation updates required from your changes    * None
ros-planning/navigation2,2041,2020-10-14T01:31:34Z,2020-10-30T07:10:10Z,True,2020-10-30T07:10:10Z,626ce47cbdbcd705d47a7e45221a55bd00716f28,7,8,9451abe9b016c225fa1ac6e1cb986d91a2914c0c 43c0e86aa50a388f9840e2fa5af4c984870fbf99 57da3ae64b3da9add239b8539366d5b5e1609ff4 c4c92f7a0ea73beba249e3fc601903fa5ff8a335 8992cbdb9e27deba5d80e97b8ebb8e9922ba61ed db8ccd28d40e1f4f1130355ba0c2c3f3d44e930b 4cadb904629b713dc393bd8a08dfdc057aa4fac2 511e0645bb0920bd3c2fb0433688bbfdb3c56b95,,nav2_way_point_follower introduce photo at waypoint arrivals plugin,Signed-off-by: jediofgever <fetulahatas1@gmail.com>        ---    ## Basic Info    | Ticket(s) this addresses   |(https://github.com/ros-planning/navigation.ros.org/issues/89) and/or (https://github.com/ros-planning/navigation2_tutorials/issues/12) |  | Primary OS tested on | (Ubuntu 20.04) |  | Robotic platform tested on | (Custom Gazebo Simulated diff-drive Robot) |    ---    ## Description of contribution in a few bullet points      * Addded plugin that inherits from [waypoint_task_executor](https://github.com/ros-planning/navigation2/blob/main/nav2_core/include/nav2_core/waypoint_task_executor.hpp)   which takes images at waypoint arrivals and saves the images to specified directory.   * Plugin parameters are given as ;   ```yaml      photo_at_waypoint:        plugin: "nav2_waypoint_follower::PhotoAtWaypoint"        enabled: True        camera_image_topic_name: "/camera/color/image_raw"        save_images_dir: "/home/username/"        image_format: "png"  ```  `camera_image_topic_name` should be a valid topic published by your camera  `save_images_dir` should be your local path where you would like to store the images that the plugin will take for you at waypoint arrivals.      ## Description of documentation updates required from your changes    * Added relevant parameters to [param_list.md](https://github.com/ros-planning/navigation2/blob/main/doc/parameters/param_list.md) and [nav2_params.yaml](https://github.com/ros-planning/navigation2/blob/main/nav2_bringup/bringup/params/nav2_params.yaml)    ---    ## Future work that may be required in bullet points    * write a post to https://github.com/ros-planning/navigation.ros.org/tree/master/plugin_tutorials that explains code and structure of the plugin briefly.  * https://github.com/ros-planning/navigation2/pull/2041#discussion_r504934115
ros-planning/navigation2,2071,2020-11-04T20:12:24Z,2020-11-04T23:25:24Z,True,2020-11-04T23:25:24Z,603150bcf52a48847772558f30601c5b30cf0797,54,6,681ccfa73a1c33c3ec387cbd46290ed90bc2cd87 97cabfe3462221611d66c0dc288bc544541529a8 b757430004c37bc2305fb99a0c1b68aed2cd0814 3118850bffe8b275b8d7db5fbf68865cc184b01d fba668319688e169642986366ec4dbb18079e210 34c8c17fc0175c715e05444c8e8237309ad71d86,,Foxy sync smac planner,Merging smac_planner into foxy-devel.    Cherry picking:  * [`f237751`](https://github.com/ros-planning/navigation2/commit/f237751f557b2e921e08f96d4749bfe3f2b2b091) Fix memory leak  * [`d3fc28af`](https://github.com/ros-planning/navigation2/commit/d3fc28af28df764a153c85434f8b30270e963622) Smac/Hybrid-A* planner  * [`3ec1454a`](https://github.com/ros-planning/navigation2/commit/3ec1454aed227ca82f22eb90fa1e44187787e975) Adding additional SmacPlanner tests  * [`a1362392`](https://github.com/ros-planning/navigation2/commit/a13623922bc93ec8f12cdd40d2a817ea54998aaf) adding additional constants and smoothers tests
ros-planning/navigation2,2076,2020-11-05T18:55:04Z,2020-11-05T23:17:41Z,True,2020-11-05T23:17:41Z,053d0c8cc96553f951d21be843f86099dba627d5,16,18,96e4ef76097e61cfc4f142b993bfa69246f62511 379d466b925f33f617056368502ab8c0982f3c02 94fc19078355fa7c5d2a702c60bba897410c03a5 dbb941e4940d2c01506099159465002487871c51 ac261a8fef07246330a209e65ebff02b58b6c9d7 d4183bccfd4c8159e84757ce03ed9d6929749f15 9b4528a4540cc18cca0d95cf837f3ece5296ea0d 39f6cdc800eaf6619e69b8994b7b599d05afe002 6c445af6a0c3d0ee5724aad1880fc213445da3cc d27b365fb29f393326b522c4b8bb9e5557a86dcf 8473902daf3a64e6d2a6f825d9f5ea571cdb1082 bd5c42e39bdb723247d11c8938cdf1e27e419d3d 9630a3d9ec67e81b31366dad051fb5cb0270a4b5 3bf7f16bf219e4acdacd32ee286ee04b7123459f 4cea8fc5a40aa2037e0af15c3b838a5f585d0256 f6436985de4e451fdb3c0a1767f9b8eee3282bf8 cb38ef5221f411ef08c13b265a82d2c572f39f06 12b34bed469d32217401270eecb9ceba007079ae,, WIP Fix CI build issues,Fixing deprecation warning on bondcore / gazebo ros pkgs
ros-planning/navigation2,2084,2020-11-10T17:25:54Z,2020-11-10T18:48:12Z,True,2020-11-10T18:48:11Z,13e01d2d6bcd230bd5eb069d109eee2bf2c39fe5,3,1,d3dd7ce870a3767397443e467e5397b810f6279f,,Fix Map Saver and testing,Fix for #2077:  1. Protect Map Saver's resource by mutex  2. Remove unnecessary map republisher for `transient local` messages in `test_map_saver_node`  3. Increase map saving timeout from 1sec -> to 5sec. Sometimes it also causes rare test fails  **plus**  4. This is not related to current issue  but added forgotten reset of save_map_service_ in `MapSaver::on_cleanup()` routine.
ros-planning/navigation2,1942,2020-08-13T07:43:44Z,2020-08-13T18:58:27Z,True,2020-08-13T18:58:27Z,b40c3a6f739e2a8920cd4abcc8f320768aa576c9,13,19,b1cd60d1f30876821a18ebea72a2453260877641 481b6d96a99aea26b5f355f851a59888abc1392a f0561d49e759d3069e6045578ead2062b8291be0 4e1bbced730a36ad0e739f1f13e163f9adf945b5 3554e822deffe5424c19bdb2622fa0b86d4b7eeb 4d0ad615c9b16aefac253c041ca51aec9a6df74e 66e7c00451c7798d184b73baa94da8b8fc662424 a36b903ace734a1b566ea9d1d97c3988eaf59c27 e92fafef9e9a16e00c1272918d62e35a0f25b651 866e99bb29f091e3a6c2e39a74a953252e5a58bb 106fadfe928b5c442fdd9d8fc4d4052f0fc2644d df3db0e949253b66a2e7bbdc51e767811d663ce0 aa4c7ba2a02d3cc0c58664a5d75bedba94e9ad67 99d2534ca0ebdeb665b17f57ffdef970324e1231 ab6bcc84bdf2f78a0b65087969a6f89c4a9154c7 b6b439b5b6a1636c1e18460b373f42a039996336 86f9b66e56ff63e86f64bf7dc7f3746ae39e3fe4 a6066dbb75ce8d118c5c0d3436b800b9cb8cc2ed 085bc4a5987cd6541ee71f91a4bcfb03167e1d45,,Update Dockerfiles and CI,Spinning out non-dumenten related CI changes from https://github.com/ros-planning/navigation2/pull/1731 into own seperate PR.    * Use build kit for persistent caching across docker builds  * Clean up dummy files for better scripting  * Simple ergonomic improvements and file clarity
ros-planning/navigation2,2101,2020-11-24T13:36:38Z,2020-11-24T19:29:47Z,True,2020-11-24T19:29:47Z,0285c5f0818d12a74ab553382037ad044bba9ff0,3,1,15a0c639fb6d51a92a6f9742cee020acc59ef22b,,Keepout Filter cleanup,Clean-up of Keepout Filter developed together with PR #2074.    This includes:  * Make logging messages to be more clear: explicitly point on `KeepoutFilter`  like made in `StaticLayer`  * Use `logger_` and `clock_` new paradigm  mentioned in https://github.com/ros-planning/navigation2/pull/2074/files#r528936661  * Various clean-ups and improvements (PR #2074 stuff which is related to Keepout Filter)
ros-planning/navigation2,2098,2020-11-20T23:59:15Z,2020-11-27T20:05:54Z,False,none,974911110b01ea47cd5b2ffa5519a62466f1791f,3,1,f800783d13551c664feaf9a0ad5555114f4c921b,,Supporting multiple goal checkers in controller_server,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    Supporting multiple goal checkers in controller_server and switch between them dynamically.  Motivation; at the current moment there isnt (AFAIK) any mechanism to update dynamically the goal checker or the goal checker parameters at runtime.    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | no associated ticket |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (gazebo simulation turtlebot waffle) |    ---    ## Description of contribution in a few bullet points    * This is a basic functionality to support multiple goal checkers in the controller_server (in the same way it is supported multiple controllers )    * This initial proposal uses a controller_server parameter to store the "current_goal_checker" (alternatively it could be in the FollowPath action request like it is the controller_id).    * It is provided with a "nav_params.yaml configuration" with a second "goal checker" to show how it is used. But that could be removed final pull request.    ## Description of documentation updates required from your changes    No documentation change should be required at (least in the c++ code)  - "documentation chunks" were copied from "multiple controller" support  for example "findGoalCheckerId"  ---    ## Future work that may be required in bullet points    * if the "parameter approach" is not convenient it could be replaced by an additional field in the FollowAction request
ros-planning/navigation2,2106,2020-11-25T16:16:31Z,2020-12-07T18:08:08Z,True,2020-12-07T18:08:07Z,116a7ca5c209974f84084f1014399e0c3c6420bc,13,2,73765b548574aac94bafbe90107be4fbf4916013 c990867fce4935cc5683e2e12e8efd8d8a356a51,,Standardize time units per REP 103,Addressing #2096.    Is "migration guide updates" referring to https://navigation.ros.org/migration/Foxy.html?
ros-planning/navigation2,2115,2020-12-07T23:40:26Z,2020-12-09T00:52:32Z,True,2020-12-09T00:52:32Z,d9971e0f6b7560acf351f1267f2551082fb33b89,1,1,d3a101cae7de56e448222e150d53b6bf08dcd21e,,Revert bond core to ros2 from my fork after merging fix,
ros-planning/navigation2,1736,2020-05-14T21:59:10Z,2020-05-15T19:57:50Z,True,2020-05-15T19:57:50Z,fc762f659d98ce4ca2ebc5d87e6fc556742ffc9a,34,7,30fb75512af27ccbdf0c91f2aeeed87476479ea0 50a86e43e9f803540a528463c083059912fc676d fd49020936131dfa9801c024b72c5feddbf29376 b2298b6aa6c3ab5d81c2e654689fbf650f007549 408c0cdd81220fceaafb297fcf7dac1b2c01b62b af13c75bc820d9f487cb6b98825db3363ca28559 965a713fd72bc8ca5a8ad584eae03b7b1fdbcd21,,Add feedback in navigation2 actions,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    Building up on  #1586     | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1339 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TurtleBot3 gazebo simulation |    ---    ## Description of contribution in a few bullet points    * Added feedback to long running actions.  * Removed random crawl as it is still in nav2 experimental with the server  * NavigateToPose; pose  time spent on task  number of recoveries executed  distance remaining  * Follow path: Instantaneous speed  distance to goal in odom  * Spin and backup: distance so far gone  * Wait: time left  * compute path: none  as either has a while loop naturally conducive to feedback.      ## Description of documentation updates required from your changes    * **TODO** add to migration guide for Foxy    ---    ## Future work that may be required in bullet points    * **TODO** test each metric is properly computed and reset between runs
ros-planning/navigation2,1722,2020-05-11T20:39:26Z,2020-05-12T22:25:02Z,False,none,2aee129e185c181c4a900f2d49b39bdc59cdfab0,29,5,69238165c31ec29ff44250c32a384446aeadc275 2299eee5df6085860eab3dd731bf2339530c16e4 07127812a7077d4f7f9de8c9fc800953e416d301 9d41acbd2fd8ad2a76c367e01e48ea53c8ea6fd7 c31359bc889eafcd83e3a6a45f66fccdec53befb,,Move recovery plugins to nav2_default_recoveries package,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1708 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TurtleBot3 gazebo simulation |    ---    ## Description of contribution in a few bullet points    * Added ```nav2_default_recoveries``` package  * Move ```Spin```  ```BackUp```  and ```Wait``` recovery plugins to default recoveries package
ros-planning/navigation2,1738,2020-05-15T11:54:34Z,2020-06-18T17:01:17Z,False,none,2a12468088c413bcb8f3dfd534c72ee99a8e0ab0,11,4,beaeb488a27c7a4507e9e4d64337928ef96d63b1 23dfb40c4eadcc9a43a8071ca90e64ac88d69ce7 8560a0c2b6775a3b60b83e8afe381a5087380de0 10f070da36b7e2808830854f66fe041ab53bd5b9,,Un block costmap activate transition and check for initial transform at root,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Original PR   | #1195 |  | Primary OS tested on | Ubuntu 18.04 |  | Robotic platform tested on | TurtleBot3 gazebo simulation |    ---    ## Description of contribution in a few bullet points    Quoting @bpwilcox:  > This PR moves the transform check to the map update thread in the costmap  so that the on_activate lifecycle transition is unblocked. Part of my goal here is to remove external dependencies from the lifecycle transition of the node. When the pose is eventually provided  the thread will proceed to updating the costmap.    * Add ```TransformAvailable``` condition node as the entry point for BTs to make sure navigation starts only after initial pose is provided
ros-planning/navigation2,2074,2020-11-05T15:53:05Z,2020-12-15T21:22:31Z,True,2020-12-15T21:22:30Z,6a0c92cad7fb8bb1e3e8500742bc293cddbedc36,35,10,a8d04c28973a7903e8d994a004d76a724a054138 f0c16f8d473a00454edbdd66019f287e7cef0f86 bb9a09a3a320f2531cf0215e7dd67feb189b311f 0de43530cf878175f0420caffb71e8d430ef79dd c4584cd1226c18ac363d69b89d0e91737ab05063 a18462c5fd0f3c608f18a6cdb204adbfb705b6bf 128b9e39f79264a80561ee09e458cc185c6ff5b4 943d052053af12f4f5cf1fdb15715b0e7b0911de 2223741f3753bc368f1e5774a8a8f0c6d66a15d6 30fbc1f11796099472bc69a3cb2db3ea8263f686,,Speed Filter,This is implementation of speed limiting filter for slow zones with maximum speed restriction  requested in #1263    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1263 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | Gazebo simulation of TB3 + internal testcases |    ---    ## Description of contribution in a few bullet points    * Implemented new `CostmapFilter`: Speed limiting filter  * New speed limiting message: `nav2_msgs/msg/SpeedLimit.msg`  * Added support of speed limiting topic in DWB kinematics (handled by two parameters: `use_speed_limit` - switch for new feature and `speed_limit_topic` - topic name)  * Covered new functionality by testcases:  1. `nav2_costmap_2d/test/unit/speed_filter_test.cpp`: Unit test for `SpeedFilter` class  2. `nav2_dwb_controller/dwb_plugins/test/speed_limit_test.cpp`: Test for new functionality in DWB plugins  3. `nav2_system_tests/src/costmap_filters/test_speed_launch.py`: Full-stack run-time test for speed filter verification in environment close to real. The test is running in two configurations: speed filter enabled for local or global costmaps.  * Small fixups and code clean-up in costmap filters  * Updated `param_list.md` with new parameters. The rest of changes in documentation will be made at https://github.com/ros-planning/navigation.ros.org    ## Description of documentation updates required from your changes  Documentation update PR for https://github.com/ros-planning/navigation.ros.org repository will be made later  after current PR design will be fixed.
ros-planning/navigation2,1986,2020-09-14T19:30:19Z,2020-12-16T03:19:59Z,False,none,cefe3c63b7e8bcac91dac7c70f139374fdd11628,31,1,82cbd0a1efb416682382f059b7027f88cadf68ec,, main Enable System Tests on Windows ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | N/A |  | Primary OS tested on | Windows |  | Robotic platform tested on | Gazebo simulation |    ---    ## Description of contribution in a few bullet points    * Enable System Tests to be able to build and run on Windows.  * Most of the changes are related:    1. Normalize the test file path to use forward slash `/` since many of the Nav2 components are expecting this convention.    2. Add `python.exe` in front of any Python script execution. On Windows  the script is not an executable and one needs to prepend `python.exe` to run. Hope the convention is portable and won't disrupt the tests on Linux.    3. Use more portable `M_PI` macros.    4. Adding the missing dependency (angles) to  nav2_costmap_2d.    ## Description of documentation updates required from your changes    N/A    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->
ros-planning/navigation2,2135,2020-12-23T02:31:08Z,2020-12-23T02:32:20Z,False,none,none,247,23,016df2945cf9f9960c0e0416746ef504c8bcf8af 162f2e7250c60182b7ffe3fd7c298c7dc229ca1c 756265fea08df0323861d720ec7f8bf10e3ed986 e480753ddeb7e843405a1122a152abff5ecdef9f 05517fb13f476707709f4e838b6c7f29e97654d9 9cbda503593d91081ad255fcf2d06e09c9d9f760 ec6ae7cf4e7a804f51776d8877ad65bdfc94f2d5 bd0fe8bf238c69bc41ea29680a7a37bd3fb60022 7fb4ad59408281358428c04b66b9c0a7845f7e0f 3aab0745426f6a5a4feeee615c90bc6eeecaab66 9735adffd236a0afedd4a0ab61a8a7b0f0edfb8c 7e41f13e5ed7d40c1ab99f359714d24c5deccd4b 277582ee17d94a1b09d55981259e859710199510 2ba8f44fe485afff8a07554169e6bdf5cfc6886a 648ecaeaf128d497c778f3a4591f9a8805c64713 090ddc73676578368466ca01567812ee911e5762 2edfb83152f71e771b683c6f834ed1c69b62fbe4 1024593e61b60fc8e19e21671ad810797f01195e cc1a7f4858498d195969d1242a4eecae83ade98a a642460e107dd07a6da90caab37454dc947de466 8fe5dee535410c55b0549ab22710a22a045fb532 97652a1f2a21276598cc265025e04ad60aea5903 942ea483863e3268023cb0cd504c93632fcbf155,,Dashing devel,
ros-planning/navigation2,2142,2021-01-04T09:08:43Z,2021-01-04T17:14:49Z,True,2021-01-04T17:14:49Z,08f869f722f78b74bab9fa3f1905c78d3d3aa430,3,1,0e7f343294fa20fee5305dea4833d5fb4a93ed69,,Replace dashing tags to eloquent for building scripts,Build scripts for Eloquent branch has 'dashing' as ROS2_DISTRO  instead of 'eloquent'.
ros-planning/navigation2,2144,2021-01-05T01:57:59Z,2021-01-05T01:58:16Z,False,none,none,231,9,342816556b89294ccc3266e0b08c57dc603e3570 aa9394a6b57a23ede7add9cbba901ba1a21a26da 671dde625ade1092130cea68a64eca7e97435033 db2f917bd5a1bdacf7acc5436f49434be0d02ad5 fa1a64ad4d47a3793d22ce7da3f7238c92294af7 603150bcf52a48847772558f30601c5b30cf0797 96b47139d3c10f3847c66fe6bf130152dfd1a038 0ed83f084d105f3eae667e0b7a28431939a07c96 0e6c44a3e8780fb22183613e25b25973b5806e86,,Foxy devel cloi,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1) |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->
ros-planning/navigation2,1928,2020-08-08T07:58:40Z,2021-01-22T19:00:08Z,False,none,ec5cffa4fda1fd1f8019599b57694a5e834b6422,35,8,a3e95fc159b1e2fd66b413b5f5c7ff3691ce7819 35557b431b4c6623c95cc3db14574ce4a47eaf02 a5d2f772d488ac3ba81b39a5afbf1c323521fb55 6e1251b7ef0ae6bd16388b79c10f8d0e0c82797a ef7736093a0e8f61650d1153e2f50e241ea40a76 ad017ca7a482753c37a5fddf8a39fc25ad8f3ee8 7cb909cf65dc413f464fd01a43368253e760e6e1 c6add8e72d26076f2acaf7028f85470a86aaffa7,,Add BT based implementation of waypoint_follower,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | related to https://github.com/ros-planning/navigation2/issues/1651 (another implementation of #803) |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | None |    ---    ## Description of contribution in a few bullet points    * Add BT based implementation of waypoint_follower (Action server of FollowWaypoints)    * Customizable recovery behavior will be available for FollowWaypoints (As in the case of NavigateToPose)    * This is also an example of NavigateToPose BT-node    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    * Update README.md (Build Status)  * Update navigation.ros.org    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    - Decide how to deal with the existing waypoint_follower    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    ## the goals of this contribution and the scope of it    * Provide customizable version of waypoint_follower (Action server of FollowWaypoints) named nav2_bt_waypoint_follower  and replace nav2_waypoint_follower with nav2_bt_waypoint_follower.  * Provide an example of NavigateToPose BT-node
ros-planning/navigation2,2126,2020-12-16T00:02:36Z,2021-01-22T18:56:35Z,True,2021-01-22T18:56:35Z,13f518ac0a021f65d2dc6c0dfac95f3a13467b46,27,21,096ee33b0c82d73ce81a70ceb0fda7cf8addb20a 2aa9f81838f24ae8067772080688d42bdcb726cf c8f31b92ac7ad59d658de522af81ba55671e42ff 0e697b26baa55c400a8ff4fb6605e4dab6d429bf 4011e15af5f3da5c7cc1a61cec8c51fad1581459 bbf332fa85654eab4424f50a6878e8e9769fea69 703f9304842b7121f892397445bab2851c239d69 a9f465a50f7ca66219940c051b719f497031e6c1 584502429e97a5ba39bb1de0a60c46c46c2d96b0 42b9fb2bf97f82673104a45d98c57f3b35dbf1b8 34ad359b5934f294fe7b610533dec0ea5f883178 a735fca265799ce7f4c9e3587eeb0cdf42d0586f e8e358306cce90aa93eb14d2ae7a8cdbeb34d6b9 aa5d92c4cc9aeeda7cf686c8cad681a09d01ec3f 27627167c91d0097e7eb9b245d8b129f71592873 c034f9b668aa0d1e5fe391f41dd6b8c41184e8b2 7464cb02a0659d8d92b0c9d0e73dd96c4fbfc89a 867600f9d0c4c5c13b5d1a1aa77c727d989fe4f5 3cfa8193555bb7708d789091b8c4515250075466 eb0fdc2e98e49b3bf6167443f73b36d8048e73be c24f12838a4a21a41fbb2c8fe17a44402054516c,,Adding parameter for minimum range for raycasting to clear obstacles,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  #1809  |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | Gazebo simulation of waffle (tb3_simulation_launch file in nav2_bringup package) |    ---    ## Description of contribution in a few bullet points  * Added minimum range parameter from which raycasting begins to clear obstacles (raytrace_min_range)  * Renamed the raytrace_range parameter to raytrace_max_range as it specifies the maximum range for raycasting.    ## Description of documentation updates required from your changes  * Added new parameter and modified one  so need to add them to the default configs and documentation pages  * Raycasting to clear obstacles can now start from a minimum range  so will have to change documentation to reflect this    ---    ## Future work that may be required in bullet points
ros-planning/navigation2,2169,2021-02-03T23:14:14Z,2021-02-04T17:20:51Z,True,2021-02-04T17:20:51Z,6d5e65a98b6034538021ee7f348dec0372308040,26,1,a34544f54466b7b81e9fa14ef16ad03af0b104f2,,changing all non changing references from navigation2 to Nav2,https://github.com/ros-planning/navigation2/issues/2088
ros-planning/navigation2,2170,2021-02-04T20:06:18Z,2021-02-05T19:44:51Z,True,2021-02-05T19:44:51Z,d5b3032ba072bba147465b2b1dd7a28e288a4f40,18,4,b3eb135f16afe766a864fe8fc36ef41452690fa6 3f871e44c024ec4e22f1eee47e5692d702a0b116 44e726c4fbedbaf574316fc3ec8dcb3c0a50440a a61b24cd1e2cf6481698ac5238a9f56db261923a,,attempt at bringing up CI 2158 ,Performing context updates on parameters  probably (?) causing `Original error: parameter 'GridBased.use_astar' has invalid type: expected [bool] got [string]`.     Updating warning that occasionally crashes test on rclpy QoS updates    Adding some context in service publisher timeouts    Future:  - Switch to cyclone in CI?  - debug gazebo crashes  - rcl lifecycle / rcl rmw crash debugging with eprosima  - gazebo gzserver rather than the .so file call
ros-planning/navigation2,1898,2020-07-30T22:05:35Z,2020-12-16T03:20:51Z,False,none,71561c4f056cd7eab83f9f736fa1060458e13e69,67,25,35258e6f82b7d92de0f829b292921196e002737a 3af1a34426feb5f9cac3fb8f056fbbef85f46e16 695bcb52d0c8988a1792eda535c3f24d95fccdf1 dbc0425dc62ebdf5d3f44a2a4b73de1a273a7a67 dcc2e6e9c2217ce52f7496dcbe74c633549bda67 600a825d328ef756a4ad3da34e50eff0d88b0a1c 6d9cc949d1f68d47e11b43598ed775d2880bb601 815b89bc563397ff67edd592e9d7729f4a4bb2c3 65216c5048483079a578d1d34cb6708e6aaec3fb 7d1b5f50ebdd847f9475cf4e172de2b3307724e6 82a53435a72efc5a33dd16bbb9d0fa475235491f d7c5ced90268acd8c3cd8b35876ac3081412c03e eed3a2ccdf1595be36e88890c33582c2b5c33b35 816d26d25ef828d70bd78683c6aa59aa61c5a860 8719439a88bccc05ac9380579e8508500d03520f bf1465cb4a55540ca7442a25b5b4d20a09d32ba2 864c2e0dd3210da179a7cb92335616857b63423b ca5d2cdc3ce9a5bf06f958602072bf543ec66fd8 1b9a97cbdf484485a4673c1a89d86c6fba35c269 4314cf359b6ceb01616d22e619a5bb1551af80e9 4cfb6c0528e4fb6fb50caf3bb2d3c0cb21339451 37b1de7f9e69c71d66646dda1dd7829769d22efe a55f4749edf6076bc29ddf9173f6c40962df1fd6 34e3f67f98eafb17915fdff215aa9c40f73f2cd4 775b8e11208e14298e058e5a54f1c37cfd098d8d,, WIP Nav2 3D Map server support,nav2 map server for 3D #1787    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1787 |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | N/A |
ros-planning/navigation2,2172,2021-02-06T00:43:49Z,2021-02-09T22:19:12Z,True,2021-02-09T22:19:12Z,d3bf4ff895e47d79be2cab12bac0c1a45027c93f,1,1,84b88fe7ea658098542a9c53822216b33b8197ac,,CI resolution Part 3,#2158     Trying to see if changing the default RMW will fix the issue. I'm seeing failures in the action server now with goals failing which makes me think now this is just a performance regression that is overloading our CI container limits
ros-planning/navigation2,1871,2020-07-14T07:00:36Z,2020-07-16T22:00:50Z,True,2020-07-16T22:00:50Z,9f1d8a123dac4cc7407650fbf0b906560b7b2ed2,3,4,b49d40b01664e2634e376c7e3e5c59e795935c32 831f884dda1aa87dc79375caf1ee8c4fba6475b1 04272fb987e7cf0bee222c4838b1239f2b29bc53 f2a8165c50e8c5c88c7cdaf46015da560c96a9b9,merge,Added transient local subscription qos profile parameter to map saver,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1864 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | TB3 simulation |    ---    ## Description of contribution in a few bullet points    Added parameter to map saver that configures it to subscribe to the /map topic as transient local.
ros-planning/navigation2,2205,2021-02-25T23:34:16Z,2021-02-25T23:44:47Z,False,none,dbc6e46402f8b3e4cde8aaffbabd5cc23e897033,1,4,2d96e4c4dcb3026e3d9f343bbeb1026dfc524e19 fa521f63bd1835484e0a4026c84469620e7259f9 846798beabc46633c05a6966c14c6c6fb3bcd384 ae672fe748136213fccfc20e241cef7cc0cfdad6,,Fix back_up action name mismatch between BT node and BT action ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |Turtlebot simulation |    ---    ## Description of contribution in a few bullet points  This fixes an issue in Foxy where if the "back up" action is used in a behavior tree  the BT node will fail to initialize.    ## Description of documentation updates required from your changes    None  ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->
ros-planning/navigation2,2206,2021-02-26T01:30:51Z,2021-02-26T01:33:20Z,True,2021-02-26T01:33:20Z,52abee596117441311ce8fcb625fc2504e345ea2,1,1,622d6e9962ed9a5f41f23eaa7883f85d757bf1f6,,Fix back up action behavior tree node name issue,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | Turtlebot3 simulation |    ---    ## Description of contribution in a few bullet points    Fix an issue where using the "back up" action in the behavior tree caused the bt_navigator node to not initialize.    ## Description of documentation updates required from your changes    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->
ros-planning/navigation2,2215,2021-03-03T16:23:44Z,2021-03-03T18:27:51Z,True,2021-03-03T18:27:51Z,41996f409fcd7b005cf779e0376273cee3de6d76,3,2,0d4cda60a64c27b284fb1b9f1858554bf1f2ad2c da8ae4de13480fddff659fa31df19f6d9027bb39,,Optional transient map saver,## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/pull/1871|  | Primary OS tested on | Ubuntu 20.04 |    ---    ## Description of contribution in a few bullet points    * Same changes as https://github.com/ros-planning/navigation2/pull/1871 but keeping default foxy behavior unless `map_subscribe_transient_local` is set to `true`  * To save the map you have to set the parameter to True via `ros2 run nav2_map_server map_saver_cli -f ~/map --ros-args -p map_subscribe_transient_local:=True`
ros-planning/navigation2,2219,2021-03-05T00:38:04Z,2021-03-05T02:43:52Z,True,2021-03-05T02:43:52Z,936b163bcd25377012ba123082b78afd0b82f4ee,14,3,bcc5b1e90b7c1588df793f251812537195051b12 7e42c9fba62bc85d6cbac72da17b824d8e1de57b ec0ebe4e2d139a1eebdaaf6251e12611497bc8d3,,CI Fixes Part 4,Working on CI flakiness  in particular around the costmap filter tests right now #2158
ros-planning/navigation2,2236,2021-03-11T22:34:43Z,2021-03-11T23:28:59Z,True,2021-03-11T23:28:59Z,27db9a49019907cb5e0d75b2fc5ebfe04071159e,10,1,de9ac209dbf7bf95a02f0e6a2d643f82959bcbdd,,new behavior tree node for triggering just once,Per https://github.com/ros-planning/navigation2/issues/2197    Requires  - testing DONE  - migration guide  nav2 plugins list  and param guide updates DONE
ros-planning/navigation2,2249,2021-03-16T16:55:39Z,2021-03-23T20:44:23Z,True,2021-03-23T20:44:23Z,ae09b37e09efce9d674bd515b5d9db771e51ca51,12,8,7eee852cda12a883fb58e88a5cd8ec640712b941 ff28145581aff2063b50e8520ca7f1386afc7f1d 8374ed1ea6f31f8ecba3693eb63a0816dd09fd6d f27d6dd227b5e4e35e9079c5fd2f71e35d5d403b ef318500b1b9ec596b0abe7fc54ebb09b008a4a8 b170e25ca15410e8936b3beddfc335f4216c71fd 3f8abebf21fca0eba75e5a3f2d5656c56ccc0f46 059a939d3904f08cfb99e06123ec674f4a12eab7,,Planner selector,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    PR of the planner selector to be integrated in navigation2 main branch. With this BTNode we use a subscriber to enable the ability of selecting the current planner for the navigation.      | Info |  |  | ------ | ----------- |  | Ticket(s) this addresses   | [147](https://github.com/ros-planning/navigation.ros.org/issues/147)|  | Primary OS tested on | (Ubuntu 20.04) |  | Robotic platform tested on | (ROS Rolling and Gazebo simulation turtlebot waffle) |    ---    ## Description of contribution in a few bullet points    Deeper discussion in issue 147  but the main features are:  * reading from topics to select the planner  * support for default planner (as static input port)  * support to setting the name of the topic to support multiple planner selectors.    ## Description of documentation updates required from your changes    Documentation is planned to be added after the first revision of the PR.    ---    ## Future work that may be required in bullet points    * rclcpp::spin_some vs callback_groups    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page
ros-planning/navigation2,2266,2021-03-23T23:06:51Z,2021-03-23T23:51:04Z,True,2021-03-23T23:51:04Z,ed43bed86253961f2723bb38389e51cabf6e7ebf,12,1,834416819f880412cb062f0ef30ff8d30fcc20d7,,Controller selector,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    PR of the controller selector to be integrated in navigation2 main branch. With this BTNode we use a subscriber to enable the ability of selecting the current controller for the navigation.      | Info |  |  | ------ | ----------- |  | Ticket(s) this addresses   | [147](https://github.com/ros-planning/navigation.ros.org/issues/147)|  | Primary OS tested on | (Ubuntu 20.04) |  | Robotic platform tested on | (ROS Rolling and Gazebo simulation turtlebot waffle) |    ---    ## Description of contribution in a few bullet points    Deeper discussion in issue 147  but the main features are:  * reading from topics to select the controller  * support for default controller (as static input port)  * support to setting the name of the topic to support multiple controller selectors.    ## Description of documentation updates required from your changes    Documentation is planned to be added after the first revision of the PR.    ---    ## Future work that may be required in bullet points    * rclcpp::spin_some vs callback_groups    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page
ros-planning/navigation2,2108,2020-11-27T20:28:19Z,2021-03-25T19:16:10Z,False,none,fc43193bbc45063c0a01c40f6bf97bc055037ba0,3,1,7f74e12361b04674d9ffe4ce84eb24edacf1d6bd,,supporting multiple goal checkers,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    Supporting multiple goal checkers in controller_server and switch between them dynamically.  Motivation; at the current moment there isnt (AFAIK) any mechanism to update dynamically the goal checker or the goal checker parameters at runtime.    This pull request for main is a correction of the same pull request made for foxy previously (https://github.com/ros-planning/navigation2/pull/2098)    | Info |  |  | ------ | ----------- |  | Ticket(s) this addresses   | no associated ticket |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (gazebo simulation turtlebot waffle) |    ---    ## Description of contribution in a few bullet points    * This is a basic functionality to support multiple goal checkers in the controller_server (in the same way it is supported multiple controllers )    * This initial proposal uses a controller_server parameter to store the "current_goal_checker" (alternatively it could be in the FollowPath action request like it is the controller_id).    * It is provided with a "nav_params.yaml configuration" with a second "goal checker" to show how it is used. But that could be removed final pull request.    ## Description of documentation updates required from your changes    No documentation change should be required at (least in the c++ code)  - "documentation chunks" were copied from "multiple controller" support  for example "findGoalCheckerId"  ---    ## Future work that may be required in bullet points    * if the "parameter approach" is not convenient it could be replaced by an additional field in the FollowAction request
ros-planning/navigation2,2258,2021-03-19T03:21:50Z,2021-03-26T00:09:56Z,True,2021-03-26T00:09:56Z,e13459441dd4895450b2f2073f73bf340823fcfe,4,24,30d3f95516ec167a4e9e2e45383bb8eada2cbe1f 59f525b0a59e6214a2a67015f000797386333cee 60e568cdb839747b54ede7f72df0441bbc9d305f 5c3ad37e43c05a0b6d3fd8a146b3696d4d13f800 3988d793dfb959e2fcd5f1cc0026eb960f5c8d2a 14f78079a70a1b5063baaf7c0a53564a9840fc1c afdff6143a83377720190cfbc38ada40b4a3e78f 23c6ebdc52893f9540d5c53b90de4d4b54ee372e 8d3f5431bbdb96550288fef5c3ecdd0b3ca9920c d6e1031c1876895aec9c08043e5e799fd905580d 6817c38899a8ad44427dbe03ffd9cfe91ca10eae 1b87504e234c9507b4b53be7bd8f3590e9532b16 458fb40a33c91d4ca9d47a73cff84d7e36a0a0d9 0dd0294c38b595d856a4c63e7ef5a5018f9d935b eac01a4dc465e032de77fcd0a6b44bdfb5d5303e 317e77ebc81c97214d64d27ec9c65a0d3b64c73d 610f3e7099a44c224a47a39ded8a3692351ba60b ab6917d3eadf541fbaed5c0dffee7d1d1641154e df7ffcbcbf7c2046b528674635ef19439c79a661 4c904d5173512cb48f103302e2e57cbcae0acaaa 333d5ad5fd9035907d422827df87c9e91843374c 55ca677096e3bafda1c16f3ed4da9b5cb2c72298 f504522a86590dfdf3410dfe6d4c570e0495d80c d177919bbfb9b416604a002271da7399e51ed5d4,,Reduce RAM usage in CI,Looks like CI debug builds are failing due to memory resource exhaustion.      ```  --- stderr: nav2_navfn_planner  c++: fatal error: Killed signal terminated program cc1plus  compilation terminated.  make[2]: *** [CMakeFiles/nav2_navfn_planner.dir/build.make:63: CMakeFiles/nav2_navfn_planner.dir/src/navfn_planner.cpp.o] Error 1  make[1]: *** [CMakeFiles/Makefile2:78: CMakeFiles/nav2_navfn_planner.dir/all] Error 2  make: *** [Makefile:141: all] Error 2  ---  Failed   <<< nav2_navfn_planner [2min 34s  exited with code 2]  ```  > https://app.circleci.com/pipelines/github/ros-planning/navigation2/4915/workflows/83d36fb8-002d-4b0b-b945-5b1e85258ff1/jobs/18184/parallel-runs/0/steps/0-117    Perhaps the increased doxygen coverage is pushing things over the the edge?    This PR includes these mitigations:  - switch ccache from the ramdisk to tmp directory
ros-planning/navigation2,2274,2021-03-29T03:45:57Z,2021-03-31T06:49:04Z,True,2021-03-31T06:49:04Z,6096221d513a2d66ffdf96adcb87b39ca20c2ddd,1,1,11a9438ffc0ae8d1f6803a9dc1281a05fdfa6ca0,,Enable rmw_connextdds for nightly CI,To again have a third RMW to triage CI failures    https://github.com/ros2/rmw_connextdds
ros-planning/navigation2,2263,2021-03-22T16:10:52Z,2021-03-31T20:40:26Z,True,2021-03-31T20:40:26Z,aeccbe7a931b2820930eeb7cbd6f62af2c6f5c9f,16,11,1655a5488bd44f016953bb39a16991592bf297dd e50a00697502557214cca58338f3dc938bf626a0 a3cca1ef2d91dd44b242b4324f8e528b2c033496 0e99ecc4d4a8b8265e482c26509f3ab84281736d ccb27e17c8afeb3ddd3887a9c765a180376f98ab bd3759ace52d07e81cf01e86f17077d657e7624c da008d112900cb12b22b5357d565ff4cf9658153 afac49ae63c39998dbe99a8e2f3a949c08a23ed6 dd2ac1603100e97c49b43082822200cb50aae1eb bf02d598312a4d09ec52547b143cad3eb7b67b85 9b4e8e2ca24ad4affe2e62c3b044f3e1724f35cf,,Replaced sensor_msgs PointCloud to sensor_msgs PointCloud2 ,  ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #1967 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on |  gazebo simulation of Turtlebot3 Waffle |    ---    ## Description of contribution in a few bullet points    * Replaced PointCloud Msg and publishers with PointCloud2  * Changed a rclcpp publisher created from lifecycle node to lifecycle publisher  * Modified the `base_obstacle_test.cpp` to remove PointCloud as arg to `addCriticVisualization    ## Description of documentation updates required from your changes    * Change the documentation of `addCriticVisualization(...)` under `TrajectoryCritic`  `BaseObstacleCritic` and `MapGridCritic`    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page
ros-planning/navigation2,2287,2021-04-02T23:54:43Z,2021-04-03T02:59:38Z,True,2021-04-03T02:59:38Z,b097667f416a4b69c9e7e7987baaf88583e738f1,2,1,51b3f5aa4f098d5f24654eb12b9b46007219c3b9,merge,corrected backup plugin name for multirobot params,Fairly trivial change - the multi-robot param files included in nav2_bringup used an invalid plugin name for nav2_recoveries/BackUp.     The .yaml file used "back_up" where "backup" should have been used. This resulted in a Fatal Error when a multi-robot simulation is run with the recoveries_server. Removing the underscore fixes the issue.
ros-planning/navigation2,2288,2021-04-02T23:57:35Z,2021-04-03T00:01:59Z,True,2021-04-03T00:01:59Z,9831d83f5dfce01d5842c867a0540dede4dcabf9,2,1,d849bda128600b4aa811f7c29f632cb65dc04aef,,corrected backup plugin name for multirobot params,Same as ros-planning/navigation2#2287  but for foxy branch.     Fairly trivial change - the multi-robot param files included in nav2_bringup used an invalid plugin name for nav2_recoveries/BackUp.     The .yaml file used "back_up" where "backup" should have been used. This resulted in a Fatal Error when a multi-robot simulation is run with the recoveries_server. Removing the underscore fixes the issue.
ros-planning/navigation2,2290,2021-04-05T22:35:16Z,2021-04-05T22:42:51Z,False,none,none,248,34,342816556b89294ccc3266e0b08c57dc603e3570 aa9394a6b57a23ede7add9cbba901ba1a21a26da 671dde625ade1092130cea68a64eca7e97435033 db2f917bd5a1bdacf7acc5436f49434be0d02ad5 fa1a64ad4d47a3793d22ce7da3f7238c92294af7 603150bcf52a48847772558f30601c5b30cf0797 96b47139d3c10f3847c66fe6bf130152dfd1a038 0ed83f084d105f3eae667e0b7a28431939a07c96 3d166b748bd704eca05ef671b0b2ca99968a8c73 77c1b742e959dda02acf6830c2a814f2278bb4a4 63b9510ddf16abe2b6cc0f21c4d4824ed4e99331 af8a857699c6f9f64cfccb7d98b60230ddc3ee94 52abee596117441311ce8fcb625fc2504e345ea2 64bf1463fe9fc92f99f8722624a4920d578b661f 41996f409fcd7b005cf779e0376273cee3de6d76 3befe9aa1c2546f2178c7ced6fe55fc3ba56642a 9831d83f5dfce01d5842c867a0540dede4dcabf9 8f2046f6768181aea89ef535b63f2f1a646e8a45 2fb8d865bc08bc32dd1113bfbe72a5a841bf632a d0d68f6dbfe8bb67baa91adf800371e762bcaff3 b6fc2bf166be746d298a0fdfb809aaf3321f95c9 f78f660a03ee21ce684e5f9fda897521b5c3a21a 21ceb6905caf9effe01ee8fc8be627b20b0ffd72 9aec3b2f875c291d0acdde315b9ba2dbb90fc1c5 52166186299dd92e97e6b4a5e5d2c0d64004873e cef8b3628696c27232d589afd76d6bc7c453c806 92214b34632a7396fb9c4b0271549e109b17f50c a110f602049ae0d0073aa2c0ea45ed5c25655835 1432d448d5c23a4635e783f543ab899cbb2c1045 b3777138f510232c9305f86fabda27c1094a6c8d 7ab0f496aa32111026fc2ea1f90942c1cd4fdfe7 2504e03b7e48f39f74c00e2390d51a599c99be89 e0e5508e058fe8ae89f8bc10814cd0f40e3abda3 ff15e23da0e7d39e7380ebc68aef1f783d050908,,Foxy Sync 5,New sync to foxy:  - Groot monitoring  - New Regulated pure pursuit controller  - various bug fixes and small features like parameterizations
ros-planning/navigation2,2271,2021-03-26T19:15:48Z,2021-04-06T01:04:19Z,True,2021-04-06T01:04:19Z,c6294d534b2f5e4179237aa8ac88e1339c3c62d4,78,37,cbc62d5920c31e55145cd9633d5ff9df8790659a 0ac09e03b0a39e8f47034e3bada26d8cb1e28e34 37b6f47db9ce629d5b411ac833baec0dcc5da309 64389c5588147ff9742717beed6ff9c2344288cc 3638ebe9cde2dbd48980d03d6d60aa961e2e19db 1be643983f3e7b14b662f7cdac710421704d50ac 8b4311c412ec20bd819f2c6f1f3a308a0532291c 32285232f2989b1eb2b8b126cfffa350cffbf479 5036c592be4e07e84cb6dcc789bb7e04abeb08cb 6c99c375bbafa5a99ee71edab6c4744601e4d0f6 55c67ada0a7a15f3354ff13edbf0636df17a4d29 1f9c27292d08211edc3ec57a69f9b348c787cd56 8af72bf09b27b709a9ea74ac8fb3c02401284202 46d2d3a6d175067bc71e659a02765f7b05b2b5bd 805510c33ec4c60a378a92f73c8606a3f70346de 8f92be3918e03d645aaa60745234fb41ab7a4c47 2ce4229f3be1927b5bf8d749f375ff096479b8c9 9b30aea875ab876c598076d9ff74e9df4bef7f72 ef4ecddb5949029c53cb46cd2b86223c534681a2 f3f2caf4feb3bf230718ff9308c184730df0ed5e ed675440775f9df4d5580cbf97d25e97eed54913 c31f3791404c205464d5f0c12ae620e9a384096d 0cdf6c08f55c0fbd6c3258e2320774aa458ba335 b327ac84c20451b191ccec9612e9b351ec74caae 39ccd457653406bf31f0d59e8084f125ed72f04b 9fa45add0bc4c509569acbc20cb7bee43d9c43e9 b1f13177ebe96d62f49456b3f5cb1955339d5047 4907d04d6101312df610c48e96fa325b6bdea8ee c474f695076e8e0a79fd70de645b3f5ce156e4a6 85f8ecbe8a7ea1e9e911c78a123df1a384708924 9f64df15181782504dae5c039e2b0a5910e8177a ffb218f2ef1db000152c89f87881626a32009325 9ec67b7416f7d4f2a147e85f1edb8a0ec615fa50 2e7cf04c4173ff07c2593e145bb7921fadf86cff fce76d16821b53c52917da3b34e725b5327d048f be77d113ffd8c6ece0204e13ab7168f7c6e3cb5b 61bddbbaa273c98787efeaee640c49c6f84a96f3,,Navigate through poses action ability,Creates:  - new navigate through poses navigator  - abstract out this logic to allow for expansion (but not plugins)  - create a new onComplete callback in the bt action server to populate results meaningfully or indicate completion  - make sure only 1 navigator at a time can be processed with a muxer handled for plugins automatically  - nav through poses cull pts passed so don't replan through old areas via the `RemovePassedGoals` BT node when met a tolerance metric  - fixed an issue allowing a failure in processing the simple action server from making the BT navigator lock up and think its still processing indefinitely.  - added completion callback option to the simple action server in case it terminates on its own from un-handled exceptions thrown  - Inserted all BT nodes into the plugins libs list and in the groot xml  - Set defaults individually for both navigators + updated parameter / launch files accordingly   - Rename behavior trees to be more descriptive    Questions:  - Seperate into 2 servers or keep in 1 server?    TODO  - [x] Testing: system tests  - [x] config page for new bt navigator params (or moved ones for specific navigators: path_blackboard_id  goals_blackboard_id  goal_blackboard_id  default_nav_through_poses_bt_xml  default_nav_to_pose_bt_xml)  - [x] Testing: unit tests for new BT nodes: compute path through poses  navigate through poses  remove passed goals  - [x] Website: plugins list  migration guide  config guide https://github.com/ros-planning/navigation.ros.org/pull/155  - [x] Website: Create nav BT XML list on website with explanations of the basics of what they are https://github.com/ros-planning/navigation.ros.org/pull/155    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists    Related PRs to resolve against as merging  - [x] https://github.com/ros-planning/navigation2/pull/2261  - [x] https://github.com/ros-planning/navigation2/pull/2246  - [x] https://github.com/ros-planning/navigation2/pull/2269 ComputePathThroughPoses different update port / goal checkers
ros-planning/navigation2,2295,2021-04-06T01:51:29Z,2021-04-07T21:47:51Z,True,2021-04-07T21:47:51Z,0ade9225278b89e9bf1fe5b56b970518b670fd8d,7,1,f17e3fab6eca64eaf5816a344ca489dcf6b1e3fd,,audited and removed unnecessarily complex launch configurations,https://github.com/ros-planning/navigation2/issues/2270
ros-planning/navigation2,2264,2021-03-23T15:56:59Z,2021-04-02T18:50:26Z,True,2021-04-02T18:50:26Z,30b405c58e6d53ba8c96381416bc4679d35a1483,3,6,3a07e307cbd77e8d9b27bfa7eec50eed599c9b2f 8e53a2a3e26324b92b6744cd3f540a6d7907c86d 28cfe5e5df986cb49aa66bbe9be9df2020a73abe 2eb7288f2a5dff248f2c6e8901228b75b53fd8c1 9a65af88992753e9ded7f14d954ac050ebf7e6d8 219a7b4c8d0cabe9cca9251ad2fcfd81f04b0f19,, Draft nav2_controller Add controller_patience param,| Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/2262 |  | Primary OS tested on | Ubuntu|  | Robotic platform tested on | Wyca Elodie Sim |    ---    ## Description of contribution in a few bullet points    This is a draft PR to support the discussion from here https://github.com/ros-planning/navigation2/issues/2262  Adds a `controller_patience` which makes the controller retry when for `computeVelocityCommands` throws an exception for the desired amount of second before failing. When equals to 0.0 the functionality is disabled. When equals to -1.0 the patience is infinite (the nav2_controller "FollowPath" action will likely fails thanks to the ProgressChecker though).    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists    Edit: I meant ProgressChecker instead of GoalChecker
ros-planning/navigation2,2308,2021-04-13T12:32:46Z,2021-04-21T22:53:33Z,True,2021-04-21T22:53:33Z,b41491a5adf81cfa9839a741f8a01de556978984,12,5,2115e26849105fde9322879bb4a25790234f95d1 7a099449a7a4f3930ace3d3bc64b3bfa5c16b9d7 a9f92d8711e0bd50fe1bd3b54f2c9304c3f87b01 9dcb09dc3bfb0be090cf996fd7297f0b32f24836 9c1c7d319f8940e1953990e7606cbf66463651d6,, WIP Fix for wings artifacts adding new filters entity to separately update costmaps,This fixes remaining "wings" artifacts from #2051 issue.  Wings artifacts appeared on the boundary window edges when costmap filters (e.g. `keepout_filter`) are being applied _after_ `inflation_layer`. The result of filter work at the `LayeredCostmap::updateMap()` stage is being merged into resulting costmap and on next `updateMap()` iterations treated as normal obstacles and finally being inflated inside boundary window which is causing "wings".  This can lead to such effects as shown in the picture below:  ![no_fix_2d](https://user-images.githubusercontent.com/60094858/114550652-1b657600-9c6b-11eb-94a4-4b68e7011a12.png)    The proposed fix separates plugins and filters  applying plugins on `plugins_costmap_` and filters over the plugins  to usual `costmap_`. After fix applied  the resulting costmap looks like expected:  ![fixd](https://user-images.githubusercontent.com/60094858/114550888-6089a800-9c6b-11eb-9fbd-ce31acd8c32f.png)      ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2051 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | Gazebo simulation of TB3 in a [AWS](https://github.com/aws-robotics/aws-robomaker-small-warehouse-world) world |    ---    ## Description of contribution in a few bullet points    * Added new `filters` entity  the same as `plugins` but separated from them.  * Separeted costmaps updating mechanism for plugins and filters in order to allow filters to be applied over the plugins.  * Remain costmaps updating mechanism to be untouched when there are no filters enabled.  * Added auxilary `Costmap2D::copyWindow()` method.    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists
ros-planning/navigation2,2291,2021-04-05T22:42:37Z,2021-04-05T23:11:11Z,True,2021-04-05T23:11:11Z,5c9cb96e0c887a6a51506342b8fc50d2ab34643c,41,18,c475e9e935cfe79510e3ebd38ab5a9c784261cd6 bc7df6e9b99eda6a9cdea331b2e543ba6a480ede 8ad16c2068fd9233206594ad0e6d3419a3cf871f 698617684469a6bd7a9d71b5c135e895463ee227 e79f9bc406b0511ed04542ff4fc15a6c0601e8b2 cb75bcd57f55d9e2c3c5da35db177e75935bc4cd a79e30a665cabaee03a19e74eeda4004454a5a5b 2fd9e31168858d74368df9f04d0849a4a15c80e6 2992bda6f43228d02ed4e5fc6ad3f069e9d82c21 c7df021da09471e3d43c25afa50be74af72468a5 0745f390ecf13e7c378c2907ebd8c9b36424c4d1 162424e4f3855733e6a9bddd9481a41cb781ebad 27551cc1faea9665f7f5d2b373b8ebdb18ec07fe 07b1641f5c0c968b56fc5402f211dfdc12dd6f6a af15c31c39412015f3777f3a64fac3e81f06cdf4 ca0b0ed6d0ac4fd4b51cd6e7b113886bfb7302fa 1850365af27d2c7945355e97fefcbe78fcac1eda ff1cd498c458b665b4ea53a1877aefa717b66ab8,,foxy Sync 5 1,New sync to foxy:        Groot monitoring      New Regulated pure pursuit controller      various bug fixes and small features like parameterizations
ros-planning/navigation2,2330,2021-05-03T22:54:32Z,2021-05-06T01:42:37Z,True,2021-05-06T01:42:36Z,25fe2448f5d8badf7f021165cc85caf231dc20d7,2,1,7e19eb29cca336c1d5aa024cde111c6fd43b5e1c,merge,Validate codecov script against checksums ,After the recent Codecov security incident[1] I've been reviewing  codecov usage across ROS repositories.    This repository is fetching the codecov bash uploader without performing  the recommended validation step.    The validation step does not appear to have been widely explained or  publicised and even the official codecov GitHub action was not  validating the script until the recent security incident.    I have made an attempt to validate the bash uploader here.    [1]: https://about.codecov.io/security-update/
ros-planning/navigation2,2335,2021-05-10T19:52:34Z,2021-05-10T22:48:53Z,True,2021-05-10T22:48:53Z,d51c1fd15e6f0a5e9cb2f437fcc0e0e5612d2363,2,1,8afc0eedfd864324017f3ce20d403244ebe8132c,,Fix script error in codecov validation ,`local` in bash can only be used within a function context.    Fixes the regression reported in https://github.com/ros-planning/navigation2/pull/2330#issuecomment-837032101
ros-planning/navigation2,2269,2021-03-24T20:15:25Z,2021-05-12T23:41:43Z,True,2021-05-12T23:41:43Z,a5ee54a33ec6988521f370e61799632a2021b3d1,23,18,2cd9a90014cea10f1e35fc0e42ca32cc9bebe5cd 04266b7a6745010c34f440807a309bf9dce422fa 5fa446ba8ba45c70ba7dbbec00aa843fa6f97a96 98ce38a61b606fe62b115e2bb33eaa2009c3034d b232fe47bf6ee75d5fbe89a596d6f6e72ff697a0 efe310eb314b9add32c94b24189bc093aef5fc74 b2f1d330392c9ca6fa087523bd0e957615ac9d19 2c2de48410f17fef7f60aa1c4015ed285cbef02b e4df153abbd20f91a90ca82ad75c1825a817ad86 2d0c7f265f07a7ae62c4915aecd8f51808407d08 267dfb0bbb8f5725b950af07004e7519fd3cb6fc 89333dfa7095bf2243648663a7c06ac8cb03d17f d6392923d1ad6243cf0fdd446ea6f18988cd6f5c 2da096a17cb5ffbabe25c8cfe012688d2ec7ff7a 48ec59a8b34e515cec17ad6fa251544186b0dedf 6814f7512dcea23c1ed8816c644106f7a48b1662 16cc1432779007ebcbdc4458c3f2d2eda5281ff9 d54a6b4a8ec639ce475f8037f40d266a2cce3a04,merge,Goal Checker selector,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    Support for multiple Goal Checkers in the nav2_controller node. The goal checkers can be selected from the nav-BT based on a topic subscription. This PR follow the same approach that two previous PRs (planner_selector and controller_selector).   However  the changes in this PR are deeper because several core components are affected:   - nav2_controller::Controller    - FollowPathAction  - FollowPath.action.     The most of this code was already tested in some old (incomplete) PR last November: https://github.com/ros-planning/navigation2/pull/2108. The main difference with that attempt lie in "the input" for the controller server was the parameter server (as in ros1 - dynamic_reconfigure). The presented solution  instead  uses the FollowPath.action message (goal_checker_id field) to select the current goal_checker and there is a GoalSelector BTAction node that interacts with the "external ROS network"  keeping the "communication" with the controller_server  action server "private" in the context of navigation.    | Info |  |  | ------ | ----------- |  | Ticket(s) this addresses   | [147](https://github.com/ros-planning/navigation.ros.org/issues/147)|  | Primary OS tested on | (Ubuntu 20.04) |  | Robotic platform tested on | (ROS2 nightly and Gazebo simulation turtlebot waffle) |    ---    ## Description of contribution in a few bullet points    Deeper discussion in issue 147  but the main features are:  * reading from topics to select the goal checker  * support for default controller (as static input port)  * support to setting the name of the topic to support multiple controller selectors.    **Requirements**    - goal checker selector node  - the follow path should have an input port for goal checker to use  - follow path action server should have a goal checker ID field  - controller server should use that field to use a specific goal checker on a specific request  the same way we do for controller plugins  - controller server should have a map of goal checker plugins    ## Description of documentation updates required from your changes    Documentation is planned to be added after the first revision of the PR.    ---    ## Future work that may be required in bullet points    * rclcpp::spin_some vs callback_groups    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page
ros-planning/navigation2,2320,2021-04-22T18:53:25Z,2021-05-13T19:46:46Z,True,2021-05-13T19:46:45Z,8947c9fdca621624fddc49ff40af9d3f29693e81,24,13,8c048b0b66bac7c2c30de15940f1366d73258d92 497be42fc6bc2b6a277a77e790b9d6390cc44445 e711c65789f3f62e358d22a64a655177e78a4701 5084f5617ae65c4973ced077f536263124d78d4e e3701f60f7fafdc113e039c78a13d0cf24bb22a8 142fa676a04ff68055749330557a121ccb8fcd25 d09074a7ce4a09057a455a857e517ec3b8f67278 6ec19b65777df45e71c2b9ae9253173c1b6f8fed f83612d28ce0db76436cf711071129eb17099c8f 07054d088acbd1e65fe45b5c5eefd9f668a11141 9f0e85f312770a63eeac5b37fc4b8745c38187d3 ade30aa6321a925bbf4e0782bbc7c592499ed431 ec80f363967f8bbb1c60645cd4b031c18f54d468,merge,Use incremental timeouts in spin_until_future_calls during BT execution to handle large server timeouts,Signed-off-by: Sarthak Mittal <sarthakmittal2608@gmail.com>    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2280 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | TurtleBot3 Gazebo simulation |    ---    ## Description of contribution in a few bullet points    * `BtServiceNode` and `BtActionNode` use incremental timeout values in all `rclcpp::spin_until_future_complete` calls while waiting for the server to response to a request when the specified server timeout exceeds the BT execution loop rate. This ensures that `rclcpp::spin_until_future_complete` don't slow down BT execution if the server timeout has to be increased for whatever reason.  * Expose `bt_loop_timeout` and `default_server_timeout` as node parameters.    ## Description of documentation updates required from your changes    * Add `bt_loop_timeout` and `default_server_timeout` to navigation.ros.org    ---    ## Future work that may be required in bullet points      #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists
ros-planning/navigation2,2339,2021-05-14T20:32:20Z,2021-05-17T21:47:06Z,True,2021-05-17T21:47:06Z,1ab08ce555bea9304e291682ce6b6d141dc2fb14,5,3,e2ece21b183aaeffc8d76129ee72f661ca8a8f80 d92e818f925b0ac7ca4879fd917c33cd631fb671 7061539e939647f4368830e0a7fc6ab4710ee05a,,Move CI from ROS2 master to Rolling,Related: #2337
ros-planning/navigation2,2344,2021-05-17T22:24:37Z,2021-05-17T22:36:23Z,True,2021-05-17T22:36:23Z,2ee5ca2970adb77110dcd8a677e151d77d7bd0fe,2,2,74c8ae95bd5f2664709ee86f13fd980d37768765 3124ed990ae3b336bb0254eb374ec6f34145a859,,Rebuild CI images when there are dependency updates,Change daily job for CI so it only triggers Docker Hub to rebuild CI image tags when there are dependencies to upgrade  specifically apt upgrades for installed ros2 packages. This helps preserve CI caches for longer  while ensuring the CI image remains up-to-date.    This is because an image timestamp is used in computing the cache key    https://github.com/ros-planning/navigation2/blob/1ab08ce555bea9304e291682ce6b6d141dc2fb14/.circleci/config.yml#L204-L206    The timestamp of this file is modified when building the image here:    https://github.com/ros-planning/navigation2/blob/1ab08ce555bea9304e291682ce6b6d141dc2fb14/Dockerfile#L101-L103    The above is done so CI caches are invalidated when CI images are updated  as new images could include API/ABI breaks from updated dependencies.
ros-planning/navigation2,2343,2021-05-17T20:48:57Z,2021-05-18T02:49:10Z,True,2021-05-18T02:49:10Z,2fcc2c2178ae3f269d87eb83de6acbb3a381d7cd,4,35,f8757d19097186abbf48acc81df616ae424ee179 ed9c5eacf23687a98bce3f94972a1ad8255435fa b09e826df90feda646c3f243fab4a71f4326da08 747b368c6f4f3f221c553a8eb0cd1d7222c4953e 82d3fce6f9fae8d4d929b6128da30692970f82b6 80b82b3563a25e2e9e166d9a6bcad56faddafe3a cb2cf49f94e2dcfcd2fc143e217357d26878dc66 b63213380929adb3cd7ab267460a7bb842094a1d 8feff77195faee462420c9ba04f9e59c8f6f425f 752be82b5df377e100a689d717bc3c671b59b42d d02117a00cbc26fb2fe05e15a2a1ff4524f339ea 6c04150b0575e086f99eac3e6543ca7f0ba67683 f586b169abd75122bafaf47cf7ea401c8d27be21 ad82deef1f2187c8e12a66d9eb75585f1350100c 81ff2fcacff5356c30242b195f149c4d5f4b5647 344dfc7c0d70356231194abe2b701af139b35c33 7fb5551420375ab48dc9336d17a1df8cd3da3c6e 5fa6964c45cbe5aceec9b476b45074906b4402e1 69cd6e58326881bdb9d36582b0e2dd203b1d17db 86490e10ab37e70cdb5f8b2a44ce097cd9ee16ad 3edb258478f3eae2cbbdc26655f8902eef5e7530 40177f46cdf802169b28c33a5b4ae912030d4a26 455c2894760278bbaefb5e8d8acc14bbfba66cb9 e6aa1560d01fab2a81f3359b1c09dee08b7fbefb c97433de632323aac961b2badceaf45f03b79000 b06e379946be327cf978865c5e40730320fb5f99 44f043ed678aea266da7d4b41fe0ac2be8c64c08 3189be8e2e328fcfc5f85bc0a5d31679376a4c74 34c1136f2ea27eb5e8422a25edc90e52d57ab175 10ef1c5631b7d4b0a157c133dba26f0da8cae718 a1e225ff99d3f1925aca46f6131828b880618d17 9456412bb42802af9bb3facb230794540abfbbb4 8594ea352e120b363e4a6522b86743382a65643a 54fb36daa8efa238d0dbe295c80493659d245a1f 03ef465df19ca154b04c62bcd6eca913e7f61b95,,Update CI to use colcon cache,This updates the CI to make use of colcon cache  a colcon extension that enables the caching of an entire workspace by tracking the state of package source files. This essentially allows the CI to focus on building and testing only packages that have been modified. For more info on colcon cache: https://github.com/ruffsl/colcon-cache/pull/12 .     Changes in this PR to incorporate colcon cache include:    * Add cache key from main branch as a fallback cache to restore from    * now that invalid packages can be detected and rebuilt on demand with colcon cache   * Cache only the build  install  log folders  not the entire workspace directory    * as not to include or restore the deterministic checksum files  * Hash underlay repos into checksum  rather than active workspace    * so that source file changes don't result in missed active workspace cache restore    * so that source file changes can still bust overlay workspace cache restore  * clean up built and test logic in bash using env    * to clarify which and how packages are being selected  * Add `cache_test` parameter    * to bypass caching of tests for nightly jobs    * so nighy jobs always retest every package  * Don't clean or ignore .git folders from cloned or copied source repos    * so colcon cache can use revision control in package to track source changes        Pending on: https://github.com/ros-planning/navigation2/pull/2339
ros-planning/navigation2,2342,2021-05-17T09:59:00Z,2021-05-17T21:50:41Z,False,none,24c18695823da8b32cdd1b0b1d393e13bff88913,5,3,bf0f115b8402354340a3cfb5ece5f5fe7d6d3eb7 0db21f31beb893767413294656b396c417a27dc6 7d8afb26be3fc460f8c04a80805547d1d96b5db1,,Rolling ci with repos,https://github.com/ros-planning/navigation2/pull/2339 without removing unreleased packages from repos.
ros-planning/navigation2,2314,2021-04-16T22:35:45Z,2021-04-28T20:48:28Z,False,none,5f2d8dffc07256ebc97b283d0b0f885b2552a0c2,2,3,defa0bd110faa2b931d70f50107c26ef0440155b 13d5181626e237f6e014833b1abb6cbfe331454a 9091588cd983c682cd144648a775e4e0bba74091,,Update ompl in underlay,And revert old workaround in CI now that ompl/ompl#753 is fixed.
ros-planning/navigation2,2353,2021-05-20T05:30:35Z,2021-05-22T02:50:12Z,True,2021-05-22T02:50:12Z,577b401788272c3d19019adfd732370e8feac1ed,2,4,63ee28fee778f848b4a4ed04a91cf406d33e09bf 71e2fae48b0f73ce3488a212ad9145ce771f0b35 f2fc2369078cb1b80eef9b499c164ec4dfbac5d4 8a4cdafccb038634a4410a64affe8d5210ce02ab,,Adjust CI to enable cache sharing with forked PRs,So for a recent PR https://github.com/ros-planning/navigation2/pull/2349 after merging https://github.com/ros-planning/navigation2/pull/2343   I noticed that it's cache restore step was not finding the matching cache key provide by the main branch:    ## Prior existing cache stored by main branch CI job    ```  Creating cache archive...  Uploading cache archive...  Stored Cache to overlay_ws-v1-arch1-linux-amd64-6_85-main-<no value>-C8DP7DcUx71NZcYchPyQBH0ElDOZYfM4Uez8CyHmtNE=-1621429706    * /opt/overlay_ws/build    * /opt/overlay_ws/install    * /opt/overlay_ws/log  https://app.circleci.com/pipelines/github/ros-planning/navigation2/5359/workflows/9c999dde-f6c0-4007-b8a3-87d6e091638f/jobs/19741/parallel-runs/0/steps/0-118  ```    ## Later failed cache restore from forked PR CI job  ```  No cache is found for key: overlay_ws-v1-arch1-linux-amd64-6_85-pull/2349-2349-C8DP7DcUx71NZcYchPyQBH0ElDOZYfM4Uez8CyHmtNE=  No cache is found for key: overlay_ws-v1-arch1-linux-amd64-6_85-main-<no value>-C8DP7DcUx71NZcYchPyQBH0ElDOZYfM4Uez8CyHmtNE=  https://app.circleci.com/pipelines/github/ros-planning/navigation2/5354/workflows/97ef33a5-4b3d-4cce-bbf8-2598807fbf27/jobs/19728/parallel-runs/0/steps/0-116  ```    This was because CircleCI does not share caches with forked repos  unless sharing of environment variables is enabled:    > enabling the sharing of environment variables will enable cache sharing between the original repo and all forked builds.  > https://circleci.com/docs/2.0/oss/#caching    We can simply enable sharing of environment variables in the repo's circleci settings  but we currently have two secret tokens stored in the repo's circleci environment. The codecov token and the DockerHub build trigger token. Turns out codecov token should be unnecessary for public repos when using major CI's like CircleCI or GH actions  so we could delete that variable from the current CircleCI environment.    > note that this is a public repo  so a token shouldn't be necessary  > https://github.com/codecov/codecov-circleci-orb/issues/12  > https://about.codecov.io/blog/tokenless-uploads-for-github-actions/    As for the DockerHub build trigger token  given GH actions has a slightly more nuance control for protecting repo secrets:    > Note: With the exception of GITHUB_TOKEN  secrets are not passed to the runner when a workflow is triggered from a forked repository.  > https://docs.github.com/en/actions/reference/encrypted-secrets#using-encrypted-secrets-in-a-workflow    I've ported the cron job config from https://github.com/ros-planning/navigation2/pull/2344 into a GH action workflow so we can move the DockerHub secret into GH actions. This also has the added benefit of allowing the use of GH action event triggers to rebuild the CI image if any of the `package.xml` or `.repos` files are changed  given they're subsequently used to pre-install depencies in the CI image.
ros-planning/navigation2,2360,2021-05-23T04:12:05Z,2021-05-23T04:20:10Z,True,2021-05-23T04:20:10Z,3c35bb2c29f74cf61765b00bb4d6b7330e71946f,1,2,0e667565f594a2fa699cc40910c33f8253b6ba64 f14cc5c119bebd0d5fdd75f7820175b1731ebe16,,Fix dockerhub action,Fixes dockerhub action from https://github.com/ros-planning/navigation2/pull/2353
ros-planning/navigation2,1958,2020-08-19T01:43:04Z,2020-12-09T02:53:18Z,True,2020-12-09T02:53:18Z,199ef58f04bce9da4fcf8800630d171665349015,11,47,4e02d25c83606d38d3bef71122d59a04a8453d8d 1d64cd35e7bec6fc9ce590716833e57d99181304 8ac97cbf2291665dbaff3baa09c513768a758bac bbdcc72011d60a769cdfac6c72dd47393eea0621 837c257ec62e746643a05d5aa30388eb3b779755 b297828f3012369aa9431dfb6f7ecdc3a5591159 a941a33496f2d8fdda9a9f60d1dfc5c27f7b30cf 822d0c8040141d9451bdfd19af53228ef926e14b 1f7cb77507e1c39b0954c70a31216e49caf82388 f17810df57471b461057f8be5d3c383fd16665bb 79e475091771d6b2ae8ae39dc58f4425a8391afc 20e79fae3045233c8d534a0d51c9be0bd978464c c9e75082161cf0fce25f7512fe50b9a4a1d80e2b 7d86c3f26781faca78933f83cf29dffbe034d26a b5fcbf6adceda80b2e9909e8e26015e3e1b4deb3 c408caf5cc1192b32a4166206d016f8ec04681ba 86946b9213c23f215a978719adaa4e39a4cf1767 b18d2446e951809855fb95e22bba495b19be3173 ba11e364d27aea3d2de0819920fdac7fbce9cfa9 85791c74195209c48a5fc1ea1b350b28237cd6b5 68c273f72c95e1b114cce8454743b1670f0b5d5c b6666eb2eadfab5183bfdd900eaf4ee2e09d3abf 570a98f6553b7f5be20d99e3eef8719ef65d1f91 6e17e5b4e2579c64c2a966b4096e155b027ff966 5c8ca631829a8a456f98a8c2f608f3762fb50c7d 7b2b071a5a929d1d72fff8ae7356c72c954ad32a 7ea5163dd94c0beffe44d4e516b3763164dd5d78 06c4858f71fe4c2701949616a82e3f881590a400 851aa01e15b7e3418b8b477e43e89e249006f9c4 3fb4b7a9b7dd913230691543552c98115d81433f dd5effdd5f3f7023cf2f9093d1f638ef6764e246 40876b2906548d2709d217e2e12d3258ee79fff1 af3569ee97b0c0fb3ba79e0c9ca994d1a3f2fc66 d5b9918ec154d17722a116535690e3e48baa4542 261cb03e75a92712390a2a874cca8524bef40533 21b8537cc1af75602d6b0e54502e2d9726d4b2e6 266208f631d19ec1edf5724bc70917ab60c272c0 eaf2244f81080f027d1d8fadefc16a3edc137c32 556b5480bb3c9eac1b6543d89cc0cbbd4b3e1ffb d47643231a6793bc12bf1f91e6434c60d6615029 9df325840cb1b867c3c975f39d9f7e0b94cd884e 8ffcde26aaf2e4fee904a90cc349a0537ad33115 ca70acad2bf1a69d40f83f44462aef11bd0b8d0c 201bd0fa50ce2cc04bdceb0309caf0c17a54de76 00ff00435f7740b3462829fdd290f47da453c7e8 1901dd8503b05af017f0a223831a20fd2ed3d836 8318930682f9280b0d1a740537d805228ed688b2,,Add groot monitoring behavior tree visualization,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ![Gif is loading..](https://media.giphy.com/media/W1l8gAwrq56WArgPQN/giphy.gif)  [click for bigger gif](https://gifyu.com/image/cFdR)  ---    ## Basic Info    | Info |   |  | ------ | ----------- |  | Ticket(s) this addresses   | #1700 #1725 ...? |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | gazebo simulation of turtlebot |    ---    ## Description of contribution in a few bullet points      * Groot monitor support for behavior trees with custom nodes  * Reorganizing behavior_tree_engine    ## Detailed Steps    - [x] Added ZMQ Publisher for BT::Tree in run (moved later)  but worked (video in Slack)  - [x] Found bug (in nav2) why Groot crashes with current BT::Tree (manifest from BT::factory was not attached - see first commit)  -- This was already "fixed" / available in BT.CPP V3  but not used in nav2/behavior_tree_engine  - [x] switching / adding / using BT.CPP V3 implementation directly of creatingTreefrom[Text|File]  - [x] Added new parameter `bt_activate_groot_monitoring`  - [x] Added ZMQ_Publisher as unique_ptr protected member variable of `behavior_tree_engine`  - [x] Using parameter and resetting ZMQ_publisher  - [x] Moving ZMQ Publisher: Tree is already monitorable before it is running - after Pose estimation in RVIZ  -- Fixes only partial displaying Status of current Tree  - [x] ZMQ Publisher gets deconstructed when new tree is loaded from XML or lifecycle: on_cleanup()  - [x] Add CI Testing    ## Description of documentation updates required from your changes    - [x] Add new parameter to documentation / YAML  - [ ] Add Groot monitoring tutorial (incl. gifs)  - [x] Add Gif to PR... Way too much time wasted here compressing..  - [x] Add all corresponding tickets    ---    ## Future work that may be required in bullet points    - [x] Test Groot working with switching XMLs  -- searching an easy way to test this (is their a small tool for crafting action calls like in ROS1 availible?)  - [x] Fixing Groot crashing when lifecycle is resetted  -- currently my way to test behavior of a new ZMQ Publisher  -- Pose reached -> Cancel -> Reset -> Groot disconnecting -> StartUp -> NavigateToPose -> Groot Connecting = works  -- Pose reached -> Cancel -> Reset -> Groot disconnecting -> StartUp -> Groot Connecting = crashes  - [x] Adding Parameter ZMQ Publisher Ports  - [x] Adding Parameter ZMQ Max Msg per Second  - [x] Add loading BT directly from XML via BT::Factory functions - catch corresponding Errors    ---  ## Disclaimer    I believe that all open check boxes should be full filled before closing this PR. Maybe merging some parts of it in between as Groot already works nicely with only one BT
ros-planning/navigation2,2370,2021-05-26T21:18:10Z,2021-05-26T22:28:19Z,True,2021-05-26T22:28:19Z,782991eb9e245af9c1a26b83955bf4dc3aecf4c6,1,1,2a7603182e3632032a7380cfd5a5bbc3c73e509a,,Trigger via env rather than on failure,To avoid notification noise from failed CI status when apt and ros packages change.
ros-planning/navigation2,2371,2021-05-28T02:08:35Z,2021-05-28T02:09:43Z,True,2021-05-28T02:09:43Z,ccbf662ea15c5bd06c4293defb58249633fd6e1e,1,1,49114df9478309f9cbc6692a5ad6fc9f57dbe17d,,Initialize environment for when no trigger is tripped,To avoid this:  https://github.com/ros-planning/navigation2/runs/2682686099
ros-planning/navigation2,2348,2021-05-18T22:29:44Z,2021-06-02T01:44:25Z,True,2021-06-02T01:44:25Z,b63b11f8a638faf389d6b99911d95899abe1580b,7,9,0fd566826a4c5751eb0053e7019296705520e163 7d5d16d7de298da1f1ed6cb32d12b58c73eab41d cf6bcf8ca3498d051303a2e99f460057128cbbef 6e3d066fd135453f7459131cad0f5b69386d9a17 fdcb03356fa8b17aafbd0f6eae711b242bdcbc0c 87ca23b6f271f48a756d1d07f1afe204e4d75e86 8d6a5e250561f653d58bbe3ae921cdbfa7bf5544 c024e8fae5765d45760c922cda358b21e203908a a605fe2658e4ad2f7cbb2a5e4bbf3ee284136749,,Reduce CI Docker images and revert to nightly build,With improved CI caching with colcon cache  like PRs using the main branch to seed workspace changes instead of only the docker image  we could reduce the size and number of docker images used for CI. This abbreviated the CI image by deferring the overlay build to CI  and instead just building and installing overlay dependencies within the builder stage in the Dockerfile. This reduces the CI image sizes considerably:    ```  REPOSITORY                  TAG             IMAGE ID       CREATED          SIZE  rosplanning/navigation2     main.builder    b596d3403956   19 seconds ago   3.91GB    rosplanning/navigation2     main.release    71903333d838   16 hours ago     4.71GB  rosplanning/navigation2     main.debug      80b43ad2f88b   17 hours ago     11.1GB  ```    We'll wait to see how https://github.com/ros-planning/navigation2/pull/2343 holds up before merging this to switch to using a single CI image for both debug and release jobs.
ros-planning/navigation2,2394,2021-06-07T21:59:03Z,2021-06-07T21:59:39Z,True,2021-06-07T21:59:39Z,f23d915608a94039ff91008014730971a8795c15,1,1,b4bfa2fca4b1ac5f65d1b11e3680f6da93f2f7fe,,Update image tag name for CI action,Missing from https://github.com/ros-planning/navigation2/pull/2348
ros-planning/navigation2,2390,2021-06-05T13:35:56Z,2021-06-08T00:36:11Z,False,none,b7d45856294997d49eb3657015fa0358623e2f05,1,1,e470f30444e377c4c4a09a8086819fadcda419c5,,Update trigger_dockerhub yaml,Use correct docker images tag.
ros-planning/navigation2,2391,2021-06-06T23:45:50Z,2021-06-08T17:19:23Z,True,2021-06-08T17:19:23Z,2c9b2c915962980f8a612d4a83d630da11e35875,3,2,101fe9caddf0e81032cd63c966eeece9382b2be1 dbc8153498f562961106f8876f5e88756b1e4ba7,,Use fastcov to speed up coverage for CI,Make use of `fastcov` to speed up CI:  https://github.com/RPGillespie6/fastcov
ros-planning/navigation2,2399,2021-06-09T07:27:45Z,2021-06-09T15:53:17Z,True,2021-06-09T15:53:17Z,8372aa644a2c3a79d3a9f382db3aaa8b0a9e101d,3,10,9e1cecc564dd55952b4980457519024c1ee3256f 89c03cdea6c3073ff2b8cc104137cabc6389f014 d250152a5b4308c388c09e0a536894ef3dfd6c9c 0ffd8e8e7c1176d6701d1c1869be2ec1b27172ec 620eb22e4c783bacf1f5439fb855ec40fb928735 fec50aaf41668690f1caef84bef6aa347110853d d508c715c23a54799511d1c52a8e723f7ff330cb bc09cdae98fc3c1972c1921b44eabed9faa84922 ec0957eff7cdbed71e2a09a9165f26c06c42be19 cf1632fc0af61b163e5a84226c68f123d566d34e,,Clean install and test result bases for stale packages,Use the colcon clean extension to clean out stale build artifacts or test results for packages that are to be rebuilt or retested  preventing them from persisting in the cache cycle and accounting for when source files or tests are deleted or renamed.
ros-planning/navigation2,2401,2021-06-09T18:57:19Z,2021-06-09T19:03:38Z,True,2021-06-09T19:03:38Z,d2cf200bc0b7c32aeddbdcd110e7a153b1f476ac,2,3,bd2cad4070e61c1103a1e68f83cc3e0913c8f0b4 00830c1116bd10f9fbb9603f51021f1f179aa93e 6289e764ef12b604fb59e237af47acf68988a2ab,,Cache ccache folder in CI workspace,Fixes issue with restoring ccache  introduced in https://github.com/ros-planning/navigation2/pull/2343 . This does so by setting the `CCACHE_DIR` to be inside the workspace (i.e. current working directory). This also has the benefit that each workspace now caches it's own ccache directory  and simplifies the number of specific steps.
ros-planning/navigation2,2402,2021-06-09T22:43:46Z,2021-06-09T22:44:58Z,True,2021-06-09T22:44:57Z,4486a5cfed62f325185e34420094f447d7e5d6a7,1,7,e48bf1a8f9ab6921120a123e94d3de88d921ae62 1c72a341dd278a18d74270ece4b8f219cb3515ab fa51d97608fdecfc1a33ff1e3a6d533012d044d5 1bd83cc9ab3e72fff0b2d75c161205a8e671dbc1 a5f23e5ca8e84790159fa9481c6ae8ba0ec72e65 a00fc6e43046fe73a1147733104bbec6f48f58cd 8593459bb531325711bbc534413ed63d6690e9bc,,Update lockfile formating,Update lockfile format to cleanly list versioned package dependencies for each workspace in a readable table format  and fix up environment so that rosdep correctly resolves apt installed dependencies.
ros-planning/navigation2,2403,2021-06-10T01:11:16Z,2021-06-10T01:11:41Z,True,2021-06-10T01:11:40Z,40f4c38103f4329694c53d9b4864cb6580c380d4,1,1,3c46d0bba31259744e21f87cecc3494c826714b6,,Set ccache envs to use absolute paths,as ccache doesn't seem to work otherwise with relative paths.  Related: https://github.com/ros-planning/navigation2/pull/2401
ros-planning/navigation2,2392,2021-06-07T02:22:28Z,2021-06-08T20:51:47Z,True,2021-06-08T20:51:47Z,083f3214c5f62010aa4a83496263561459ceef65,4,5,ddeb668e5b1b401ce618668a320f9daa54fdc5a7 c22e087a077567e325ed3a8bc08fbf46f0cab089 968d23c1dcbe8caea8851be5acbc7d58ac276e53 7a2188f570897181526739f9a447cc65404205d7 0dae26f5963ef0b9e67aa725bb0f04a0a5a787ae,,Revert CI image to build from osrf ros2 testing,Reverts parts of: https://github.com/ros-planning/navigation2/pull/2348  Depends on: https://github.com/osrf/docker_images/pull/542
ros-planning/navigation2,2419,2021-06-20T21:08:45Z,2021-06-23T06:23:34Z,True,2021-06-23T06:23:34Z,f201b4f8d07bdbbf14d49dd05025d9c6632039a5,2,10,9764008af2bbc4c9622b0f78c20029972779a0e0 5265b2c11925f948b9e407564edad070edeae7e3 26a29383d1e36189d7f72ff6fdda3e31452d8781 08c60ad30e38f5d33f902e6fbce0fec5057a1bf9 81d002b12097a32fb401a6ea6ee4a42718c99b95 20f28949904ef965c8b5b011f3e387037adc93ce 46ef47b9e40e48320436d0a16b91cf94b76f8bb3 d9cce81650000e09429d22a1d4ff845421cc23d2 ca20f90889d22a1d1bc3d87b45d53e88c9a068e5 5543fd5032fc7966e04518073774d1f7b5cf2480,,Fix code coverage,This mainly fixes the include filter to only look for the package name in the paths reported  as using package source paths can exclude coverage for files from other packages  such as header files reported using under workspace's install path.
ros-planning/navigation2,2405,2021-06-14T00:54:47Z,2021-07-19T22:49:37Z,True,2021-07-19T22:49:37Z,21a44bcb559682f67289ac72571206597c00855b,11,31,962627f5643b647db394d77c8a920013a02a3019 d747b979890bf8a56843e2acb496db8bb07b1151 b9f2d76312a85bd5c8a2bb886b291b0535d0934b 32891afc276338ebacf6ecf9ab2a550acba10b86 841e67b9322980719c6e882f216c8fd1da9088d0 d64a44052a8c1311f381a5d7031ee02e227e31ae 63e20cb8a28c37c878780c080933e7897c5805ef 82b4a8466c120905e38b11a62bdf88e49f88c11e a826eb267490068d5a0303d4e3596cdf5127119e 5d89cd671d0b552adc101563940cac0f62a7587b 51ba2151953de82f8f612b8c7273b8c2483ab232 38f746b643ff0420d2384a0970e16773fecff768 6b97653e160a50ad6a47604338c8faecdf348224 36b40ccc45031d8b49e72a4cf666468cff8e2d14 6ffb2a205fa08619ab400c0dd2d113e1c3e5ce64 7fbe1455481b889f066d1b08e13bc7da9dc97983 7a19b540e2662a267e4ec4dd318b2069867619fa c67d947b6173e2cbe88b87eab2c352c3a71efae9 ba3edf7a1787f2836b8dd5ad6c2c14d82eaf9104 bea733054a4370d25a930f752ffd64c3c65f6acb 85ba4506fd628914dc3dacedd40ae86699a962b5 01b6373a5f848268872dd6d4979ebbf3479a4681 d8c51f1f7773f4372af4f4847425da9010149b1d 6581fa96224bcd2b27a337a3d78c716bbcc6a186 e803a90995d0525b1af8144072f3c55f90ec1791 039ca7f0cf4a29e4be026ca3306dfb8480aae2c7 fbddd72e30de000be229179d5a96b9538372df23 4ec61bf340bf8136e32f0d10a4aa5adc3ce2c280 d96b21f597aab5ed1b95dc59d3417bb4b536cd18 bfaa6b164a9fd13f807fc19af9c18756b9352bd5 da42e3edf57864263ffb0b376ef22fb95faa35fa,, Refactor actions to rebuild CI image from CI,With the recent announcement of Docker Hub deprecating free access to autobuild  we can migrate our builds to GitHub.    * https://www.docker.com/blog/changes-to-docker-hub-autobuilds/  * https://news.ycombinator.com/item?id=27434009    This PR refactors the github action we used to trigger rebuilds of the CI image using Docker Hub's autobuild service  and instead builds the CI image directly from the github action and then pushes it to the public registry. This has the added benefit of allowing us to build our CI image using buildkit  giving access to more advanced build options and better caching strategies.    Used actions:    * https://github.com/marketplace/actions/docker-setup-buildx  * https://github.com/marketplace/actions/docker-login  * https://github.com/marketplace/actions/build-and-push-docker-images    This also tags built images with an additional timestamp  allowing more reproducible builds and version tracking. This same tagging approach will be applied to the upstream testing image  allowing us to use dependabot to track when our CI's parent image updates and automatically open PRs to bump the version tag we build `FROM`.    https://github.com/osrf/docker_images/pull/546    Example run:    https://github.com/ruffsl/navigation2/actions/runs/934144502
ros-planning/navigation2,2466,2021-07-20T19:28:49Z,2021-07-23T17:09:45Z,True,2021-07-23T17:09:44Z,5c61644651c4eab882b042e073d0f5964f03a501,12,5,6e22013812c0dbeb21f34e910ce6a7ab864d8fe4 0a8c5a7b1ec7fc6ad0b1adb5be78578659499898 7621941ae6bce4cb591345de22853f4c7b0649ec 420b4562f0173b171a767948ebc3e3b3fb8bcacc bc52118d15181993fd6f65d19b5aa701b46fd859,,Python string format,  ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/pull/2411#issuecomment-863561181 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | None |    ---    ## Description of contribution in a few bullet points  As per @SteveMacenski's request: https://github.com/ros-planning/navigation2/pull/2411#issuecomment-863561181    ---    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists
ros-planning/navigation2,2471,2021-07-23T00:10:35Z,2021-07-26T20:57:30Z,True,2021-07-26T20:57:30Z,35469b670119caab86765deeffd96b808760b37e,5,4,20f8277096042563b729f45a30c643437b21de44 809540ef32580401e95655b09b13a9533615de2c dc6bb761fa99dba86b7628f8e5a9c244d5fb6bc0 fb838f09a202827f99b0ea7accb4b1054f0bd90e,,fix nav2 params and launch file to publish Local and global costmaps in multi robots example,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2446 |  | Primary OS tested on | (Ubuntu 20.04) |  | Robotic platform tested on | Foxy Gazebo multi-robot simulation) |    ---    ## Description of contribution in a few bullet points  add libgazebo_ros_init.so in launch file and change groot ports in nav2_params so the costmaps are published and navigation starts for both robots.  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists
ros-planning/navigation2,2496,2021-08-10T10:37:43Z,2021-08-10T10:52:09Z,False,none,fba15bb4219f8b70a93e7e7f08cf9eb2979557de,625,303,7be62713bd897e19d7ff3ce58fba5280348d7aba 4c9b43f9922f42afdbca8d8fc982f3488d0e948f 045224beff7e89101ae9b7d286f36006ebf0ba1e 53a8771097056cf72e7772eb30457b404e072043 b0408001420b26b03b288d33e5ffb9d5783b7bbf 0cdf4f44c7a4171bfa4c6eb885d46c3c19f26a87 606ca7abb40f04eae924a07fd27fa2caf1f94f5c b40c3a6f739e2a8920cd4abcc8f320768aa576c9 c9441b14a9b8272cb970af80d9224f4c7309724a d616e496bbcc4318338cfc2d9bf4630632983b50 ed8ddafb3b30557767b7eafce5fae76e99c2795f f07c1eed7bcab8927a693c46a88d54311e7a2307 a1e07200dbb5ced654e71d1cf40bf8461ae66968 69bed34f922e9972fbc80833d67770eb7f7cc9ae 2e0697c64c265f31bd4ef6c5ed43374841242077 b6b17e2979c5478c4050adc36bd1c85d161b61cb d191e0a41148ef87597711d5bab18dda98fa7c0c 10598d562958432f5767b5bb624079e3b9b719fe f237751f557b2e921e08f96d4749bfe3f2b2b091 98e994fa6912e87cf547a15cbe0f26fd67a3f01a ef8cfad646fc2d52a06152cbbb1b88b70765af5b 0a2dfbe2886d6c615512fd2ff2c81caa5391263a 26b975b78af4ac0b839a8b825f621a2a2e611ee1 a35953222f282b413261495570c1201ec40b7358 91d0a831c074a5df147c71ed02215e9c6c0c9762 d2c53de8b1f4aa223d25568f5c25b993ed620faf 79963a4267060e7b5b4730f3d96b757fe1aa4646 b8e9fba422d6e024767d1a5b668703625454fdcb b181a398e185d3047b1d78abaea7cf537bba8e0d 182d3b3ea433cbed68b4e19ac91acc33d4e331c6 369e62df464f6863f213180877c8e808257d0677 970f5b529d43d9940f75599f5f3c4fd90f7751de 4c8334f93bdebab775cf56c0d7df8eb71bc1b91e 506384f2bcf32978428278f65567bfaf429d6d63 a30816f2939e441f2054df0f40775adb76b57997 9baf4675dff475d453f684e0c0cae2da02893b43 64871a7283a08eb08d7365c6279d0b330155f7f6 63aa0addb4ab0fd875b79b2bb6d05cf32a09355d dcc1d4dafba6f6c7588cb5f7f6ca918b2a6c48ef 8f971aac77e7c0da0b7fdccc10f77ce150e02f08 13c878b912ef677d16f4e73801240f7b0c6000b5 fd117e821b5bef012d0610bbafc9e7f8a6ba7043 0c848d78d6f7a74a33e5fbca63d4aff5dc6353fa eff208ef5aa1b26356bda8f5fa8f304c7884327c d3fc28af28df764a153c85434f8b30270e963622 f37ae148fe6731bbf0e4ba67358bfae9df12ffa4 e49cb5ad6bfcb60f9d1b5a2dc7594b0ce99e61ae f6f9c28e8dbeeb7cd224137ef0e15d3f2b666b7f be38a7a91811e27742ca4be01dbef16436a461fe a71a5f23b881b34d6ddd8aeff04b9cbd06faa0fa 3ec1454aed227ca82f22eb90fa1e44187787e975 a13623922bc93ec8f12cdd40d2a817ea54998aaf 7bed20d065c8917080bcfecbb8f695ed6771381c e5b01c53210898903ab5683ef32614e537402110 3393c0adb19e66e2bf2d655fd3dba5f698e1193c e1e1be4880a703c9fba44bb0ed68f4463d31eb95 bf22f34cc805d29361934b57b1791e9fb10a47a6 cd336405d572d9ff9db791f9129fb46d9cbfcf65 626ce47cbdbcd705d47a7e45221a55bd00716f28 053d0c8cc96553f951d21be843f86099dba627d5 a005947e5c8777591e95731611549f37195dd1ca 4c4d38f5209925e87e6143c690e5a021d6ca0f9b 73afaf3f36f2cbdf4a20c5e0c1e9dfbdd512b8cc 4dfa91c84a47fb0f6890c04c69d42b12ee492b07 884d1448ea76b420f44da85d557758990d629ce6 8ba925cb8dd7bbd60eded9bb5e58883fb4a0aec3 13e01d2d6bcd230bd5eb069d109eee2bf2c39fe5 fc85c2600e8dbe6b441788e8ee4197efeee684fa 850295c0ec7b73d62efb136fc36b8a6e45a8b97c f86e44cedee5b6851e1aa09b20b09554d205b64a e6bc3cdafde9d3edb80bd3cfe44d73fc92e9a914 2d31a8d3346d3a9ba6ab99a94d208bdf5879b413 f6bbc5c81e21324f66c663194e93f3f0d2109dee 0285c5f0818d12a74ab553382037ad044bba9ff0 d02f0dd1fcee1009d96a6ade050b201f53bea59b 11b25a51981eb53db6a6a3601729ae85238d9241 e77560d87ac816ff72663c36055ce35c1a45c942 116a7ca5c209974f84084f1014399e0c3c6420bc d9971e0f6b7560acf351f1267f2551082fb33b89 199ef58f04bce9da4fcf8800630d171665349015 8bd158af79b942f4053206674a33b403e6c144e4 0f322ae3e4b80fc43373b6996cfe9252b3dd0df7 89241bdf96441e2609952238d9a688cbe20c1d32 6a0c92cad7fb8bb1e3e8500742bc293cddbedc36 e7432f17d72210b2aed71bae084c2fcda30ed888 2efdad8eb838d28ab9f3c24fc4aa5136b0ae9bdc 8d6cd2878bae389d932982e759acb760f3291f63 61710875ed1d73e807b7cd1a9e577d995f2e4ead 567f8c85b77e4b569c1b76b36c4275a57847a86c 13f518ac0a021f65d2dc6c0dfac95f3a13467b46 9387332078e010abd98cc8977424179bd55d721d cfa284334f4e76760354aae485b4b7d2c57a5c97 b3b7d00547b3b1f4a59050797656374f1257e1e3 c50b8b9e29b49175ec4c0f038bf9d3dbddfa05de 378d53435856f4b3377fc5031b7118e4554410e5 6d5e65a98b6034538021ee7f348dec0372308040 d5b3032ba072bba147465b2b1dd7a28e288a4f40 d3bf4ff895e47d79be2cab12bac0c1a45027c93f 6093b4f059d90df561e15b0062650ce60cc298cc 0dc24782b0804ea766300784fb76528ed5b9c6b6 8dcfe04845cac04a58dd8199411189ebc164427f 79fcb779090791cc92ca770574bc91bb261d4091 4e52bad8d7b8add98291472c114ea0ec054bcd1b 08f52cfd48f636443d337af486759a61bb3f5f4f 565c294ae6529dd8f21c1a690813f304fbd1759b 4ffc701b6333af41bea20ba39b0ac2fde7ba3257 740afd5a7ab004f5922e7822db41fa1c61e155ed 51ad0f19d09333416c63e1f624294cded7f872d3 ff81dafaa23f4dbf89f4f2cdc44eb8ecb9b651a1 7e0c83b4a5985b20189baa3f84d20f47fc40cc6e 8899b66ea1bdc306c36b4488c29f8fa849dfe67a 992deb0ff740e60189234455ac8c372fcaf2759c 2d88d14b1dd9f678e9b95dd50c5db774667cd62e 4dbb29245db181df12e562832d3bccb151402545 a5a77722bc9a926cc27c386f192f1256a9c697eb 936b163bcd25377012ba123082b78afd0b82f4ee f522f631a9b8939fd07a0de58ebc76d2371e9c1e 087d1374acf0ac216e8f5924e1f4f3d48941264d 50c2ecc151eba8d25c3af06bac7308898845b37a c112ffd95380b64db26af7c996a7ac953bb3f8af c054cddd1b134cbf97892cbecc624153ceaa503b ac66de27a3da9d19deefa3af0b7d8c3cf00eaaf8 febb5fe838bfa3633246a17fa0ce2d8a8d330084 24f0bc6e47d4a0e76d46bc99bc9fb3371707c18b a9aa44923b901b4ce736c34f1e2a4092b816fea4 47d7d7d366574430644656b2fadb791b29402f4f 0382175dba1ccddd02f7cb336cff5092dbfff4b6 a31fcf224f58f45321d6105cf834632717d401ea 27db9a49019907cb5e0d75b2fc5ebfe04071159e afd0d8421e3d902169d2920873c91ebdd7305e26 ed8f78ea65625e7a5035a85a8e92a18720abc483 b654b0966d2d7646120590d137a9c11c9b9d8241 b91f1ccc3188a9192b0783cdd816bb44badb5ff6 e25da923d2a878e05f610931fa8b0ac5d591fb1b cfb07ce54c56b69b385d8d51259926e527082c84 e2a7fde616540151481b850ed511a2307357e0b3 3cfe6760060e2c47c0bd1080b544f4abcee96e24 d8bd3c5ea8d196ad7f0bace1edaeaa8e55f06944 6c46c2e69af096e59b65c61b139b0da3bb7d8088 3bf1f7a93d740c54b4c7ef7fc6dd914175bf46be 8c087f3c44721c871a0f4267e904e2376f243e07 c7a1df2e26c02b076029c62d76d010c0bf59ee26 c337ac22e6af2b81f7b515a201a0e553084887e3 ae09b37e09efce9d674bd515b5d9db771e51ca51 ed43bed86253961f2723bb38389e51cabf6e7ebf e13459441dd4895450b2f2073f73bf340823fcfe 332304bc1614623592c027a292998cdca1bca0fb 6096221d513a2d66ffdf96adcb87b39ca20c2ddd ed6a8de7a4eacab053bb5bba9c7ef6f05db443d7 aeccbe7a931b2820930eeb7cbd6f62af2c6f5c9f 53c2d6003db1fba52ba08af3ad730f588a599308 44081fea0332148807c2c948962e7fe43532ba6b daf1161eb80ea71d546a83143ca3c4167f8e9fa9 4615bc06f1a191d2de9fdc0d02eb61720ae115ae 1821ac3bd6fc1ce3bbf3cb3935bb432fde9fec71 30b405c58e6d53ba8c96381416bc4679d35a1483 b097667f416a4b69c9e7e7987baaf88583e738f1 81e1c7d0722af03e9aa4f82eeac5b0f0bcd6fbf7 50de7dba36d6cdb95bdc69d05c43a8bdd14ea527 c6294d534b2f5e4179237aa8ac88e1339c3c62d4 9ace8ae12bb3f91cb49db1f0b90ce1e29a0769ae 8a7a4f261ccfa5db68d5add2fa493b32bacc6f33 f929dbda930b32dd36e30de57d5167d97515817d aaf25612a9238e62db12b1ae3951993c2585da83 0ade9225278b89e9bf1fe5b56b970518b670fd8d d537cb186dd61a9491c0b1c7865f1e4e6891ca45 f28951048dc67f1e8a7b1b7cf450195e53a80ee6 4066ab943f397e2db68cc6851680d4748c771ffe b41491a5adf81cfa9839a741f8a01de556978984 1f723818269e8efda6ee1c51ffd70b585a76fb6b dc77d1fc05dd16fa9f3d3f20dbeb40beabf9cb6a 1a207fc26be9b6696afcad174b57549744f2dafe fcbf60f8535501884b056631ca865f954c57fc84 a6974ad24c45f4a62655fc273340a7c47ab22e4e 25fe2448f5d8badf7f021165cc85caf231dc20d7 d51c1fd15e6f0a5e9cb2f437fcc0e0e5612d2363 a5ee54a33ec6988521f370e61799632a2021b3d1 8947c9fdca621624fddc49ff40af9d3f29693e81 a2e0f553bb25723fa747847f09ce5d1e94cec1d7 1ab08ce555bea9304e291682ce6b6d141dc2fb14 2ee5ca2970adb77110dcd8a677e151d77d7bd0fe 2fcc2c2178ae3f269d87eb83de6acbb3a381d7cd c88f45ac60a56bfed2c8e170fa89d42d43352c2a 5e5d8be5dd962ee2729b7601eab19351b4957ca6 cb90912074bacb250c2554b7897517ea776e3231 ac531a251610ca4e9b080da939e252a556425b64 d92edebd11a5d4d85115d952f9dad77bd9df455b e7f58bcaed79f09144c5481325b2a064322e2825 b008d916474713167efb7bf7ad18f1baf43f912d 4277d00d52e391de7c0e7c52658bba7b00447563 d65cef7c5ed00f6444a05097e84a3520223c8369 577b401788272c3d19019adfd732370e8feac1ed 3c35bb2c29f74cf61765b00bb4d6b7330e71946f 3d66437b63bed81f2de78cc0c711091a10a35815 2a5fdcb42cfbde0a125e996e4d8e0fc8305961a1 22407b7522b4b07cc65a0c3ab865aa4dc7c34282 713e47ff1aa3a7509ada1eb50b97267141484541 fa39500bbc1815d9110ca3c82fb6e2a149931c5a 782991eb9e245af9c1a26b83955bf4dc3aecf4c6 26953c3a551685ccfd795796d645dc86a6def41a ccbf662ea15c5bd06c4293defb58249633fd6e1e c2bc55021e1907483e62ffbb981323feff44b05a c009b040cb1d24bfcfd05df92876fe9553f435d5 237c08d6106e4b268e64262890aad00c1e2e5577 b63b11f8a638faf389d6b99911d95899abe1580b f23d915608a94039ff91008014730971a8795c15 980f8ecf1805f272cab9bd156e593e59c3690d07 2c9b2c915962980f8a612d4a83d630da11e35875 44004638244da7833956fa0becff91452403e39c 083f3214c5f62010aa4a83496263561459ceef65 8372aa644a2c3a79d3a9f382db3aaa8b0a9e101d d2cf200bc0b7c32aeddbdcd110e7a153b1f476ac 4486a5cfed62f325185e34420094f447d7e5d6a7 40f4c38103f4329694c53d9b4864cb6580c380d4 fa1d0917475b5f0810b7e83585c05a6908a73d9a 12fa59199291b27fa009da8214025d1ea862b091 8a6607b7891c5a9ae216e9126e996de194c603eb 30c97c831fda772228f6e0ba26f12a471d1cba84 eab8b4903e065561e9069163496c2962471210b1 cb5f90fd3fa21cf1b881822d9d31901e72808e7a f201b4f8d07bdbbf14d49dd05025d9c6632039a5 c616cf0e81f21d762fd0816a1af3f3b6e39d45d9 ddfed98937e1c41cb55b380272cb5d76a6871b6c 7fa550911986181c52bb9b715f67879d705e8bbb 29c1af087afffb80ddc4ec172015fee2c8a37166 80f4ef8301cdae798c08ea911d7452ce4f44cb4c 54911a701933f4613aef3f8f9cb62ac18975d907 502b103be33a12942a79238f2f5250772e38dfd2 2af052cf716f6caf0eb55cbaa540e3848040318d 5a7027536068183602f10b419bd711fafdad6784 3913e878b0595e6cb49e449af6d9faa79fe2c9f5 21a44bcb559682f67289ac72571206597c00855b 5ec3ab4e43b7e345fbc62d36e780b27cbf740aa1 0764e5af5b23ea7a08629876792a8da1465ef261 c417e2fd267e1dfa880b7ff9d37aaaa7b5eab9ca 60626171172eeea317ba800c82618755c61c20f3 fd6fd613485da2dbe0e9086cddf644729474d713 a800b89bd55f20784c013a5f160ba56271be7e84 5c61644651c4eab882b042e073d0f5964f03a501 61670a121d1a2d3343ad1a8ba3580fd9efd5563b 035641300b3cd61c4041a6969b0221b5529b4eb5 084f1475499804a105020bbd33cc306ced1056d1 35469b670119caab86765deeffd96b808760b37e 92151ad6c307542903f11c854bdef0b173b6f3df 2035819e0d69fb2e5aea80dd06f668911dca9048 e96450db3a425d8eb54737dffc09eef0bb1e1391 3bba684a9ab14d2db19e869e2ce48c717310de6f 792893a5b56256cff8e9d4fb581e71d23892b5d6 7adf691d54d248418f19318abbfd50bcbf637494 5481f67c12dc8738d18f03cb2839facea99626b0,,Fix 2493 by removing the unused joint to camera_rgb_frame ,It looks like `camera_rgb_link` is now `camera_link` e3ee2da2d5a274b52d32fcdf7e270567ca1093d0    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2493 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | none  Gazebo 11.5 |    ## Description of contribution in a few bullet points  Fix the `waffle.model` file    ## Description of documentation updates required from your changes  None    ## Future work that may be required in bullet points  None    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists
ros-planning/navigation2,2500,2021-08-11T03:21:30Z,2021-08-11T03:21:49Z,True,2021-08-11T03:21:49Z,821e035849470b1bb593c9780ce491572a190e6c,1,1,a5c17562967f34fb502807fd51a7a3ade9f7566e,,Use regex anchors when checking for updates,to fix conner cases like this:    https://github.com/ros-planning/navigation2/runs/3277796714?check_suite_focus=true    https://stackoverflow.com/a/4709921
ros-planning/navigation2,2532,2021-08-24T23:45:00Z,2021-08-24T23:49:11Z,True,2021-08-24T23:49:11Z,ced2479e97445249c9383afe11486e96eb26fa60,2,1,687ccfea5d539002cf0d7f0c215887ef8b5f1e66,,remove old build tools,none
ros-planning/navigation2,2553,2021-09-07T16:16:10Z,2021-09-14T19:25:44Z,False,none,d56ea6711cfa5a9d1bb0d596d20b8df9d465fafa,17,6,d0fe5a5ee2b9e032f7c54381a61696cebe8e683f 102216fb29c9dc06b32f530098571bd2e7ffabf0 efb70d1a533d6e3b499bd252844ee40c37c53bd8 73f9c859922641e339b6996013839a6046c90fc4 fafdf3acbc9c4546c6350dcc76f697ad8b78ad34 75122230c3176af00e8416bed51cdce6f86227f8,,Refactor amcl code for motion model modularization,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | add tickets here #2552 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | turtlebot3 |    ---    ## Description of contribution in a few bullet points  The amcl source code has been slightly modified and a plugin package for motion model has been created.  Used pluginlib and created a amcl_plugins package consisting of different motion models.  Added this as a plugin in amcl_code.cpp and changed Cmakelists.txt and motion_model.hpp to make it more flexible to add new models.  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes  The parameter robot_model_type is to be now taken according to the motion_model_type as changed in nav2_params.yaml file.  Extra parameters related to kinematics of the bot is taken  so that wider variety of models can be added as a function in the plugin and tested with the amcl code.  <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists
ros-planning/navigation2,2561,2021-09-14T23:01:38Z,2021-09-15T18:59:25Z,True,2021-09-15T18:59:25Z,3ac88193c0b52c7e6e71bbf9de8818979f5996c9,113,37,053448773a51e131372894176bf8012150615113 c1b506eb7f98a943b490beca673b3123d030c38f 6151f13287577751cd889a7e2b00b7e5e32e060e 5618b02d697c311a3dc77e8e065dfbf2aa9cbb7f c9af5573fdb824c87789b7de921e9528b157a0f0 5ab93869efe390b187d4d32913588214c5d8bd24 65f8d74aeb50d8af94ec3058ea69738811be5e90 f1163165dca53b40e88f99e2dc5e0f0b19ac0ef3 d028caa20474f9215f0d080d4b46cc16a493730d 27c285b5364d30728710c5bd7849ec7233e7c170 da4f972fc07230bcdc534c6611d6c25f2720b6c2 07489130831bf4b99f6136a308515d04cf45cece 826b0d0e8bb56f64d92900e26b7f513c8de5c28b ea90f46fe44595e58614a078718b2ab898632b77 b33e382ed75598546466124a9fc857263f29b083 e326d3f6d01a77ae299955e36e091c0e60bb975c 8316fa2abf0a390f5e516c61598a823fa15682fd 2acd470e139e2dbd3466c3957892531defcf56bb 5c5fc7749d24c756417ad5fd4fd4bef6df95fc16 05e60294cf55a457b528b991b897ef5ac2280680 cbfe97ec1c095a7d986504d055e324f09571c28d 9dab8beb519e9e84601218321c2e95b3e92debde 58f59bfd5ba137109617a7d7e2b18171a3b629bc 9e342e4f0579a1c3c7fcffe1958f6a3a4a8a5ba5 168a92df09e8518a4abae23876a8a9726f0625a1 88b98e79ae720c82966d52d7ebf6f9b3d30b426c bb3789b8c584b893a0c71b1eb1d02a054137c325 ec95d2d066f28087b35b8ca8b35f1a6314d953a9 b6194b23a5937993be948cb6239445ef25268db4 d9983a5443ed70139c695c3a6e173e5e6ce1798b 8088162e7da4d87998206c8c56a511e89a1c65da 6ce94628d05a75bd747400dd32015690a5422a72 f4b65b0e84242606bc75cb0dce861ceba219c8ff 87dfb3c0418e47caec3b3ef37a22c7fc764d6969 b3331a89c3e87f48204e99d41ba46950e24e5685 0e595801c62db92e215d216e8a57c5b54760628e 2eb6e0fd3bcca87da7d49351623ab125e682a192,,Galactic sync 4 Sept 15 ,Among others:  - Semantic checks of various package's parameters  - Dynamic parameters for many algorithms  - New nav2 simple commander package  - Fix voxel grid regression introduced from min range parameters  - RPP fix on out of bounds costmap checks  - Update on message filters timeout to prevent high CPU useage in task servers
ros-planning/navigation2,2548,2021-09-07T00:29:10Z,2021-10-11T21:12:57Z,False,none,b8fc24304796153a816148d10c6d87dfa44be14e,17,3,0383c54e6815d5d96e5da2b7b0413f61bb39bb0b be997c92003d2ff1b0557e5fdcd937d43070e79b 1085a379e34f4a7834e6c168492584a7bb90d7d7,,added skeleton for is valid path,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (add tickets here #1) |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points  Added service to planner server and a client to a new conditional BT node to determine if the global path is no longer feasible.     ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists
ros-planning/navigation2,2602,2021-10-13T22:44:27Z,2021-10-14T18:02:19Z,True,2021-10-14T18:02:19Z,637e29064526ffb2fcf2a42c35544d4e19e08ff8,1,2,0a020b4d19e45aae918da1d2777aaaaf1580c477 a11a1f2deee5c4ecf8455aae8dad886455004c87,backport-galactic@backport-foxy,Create mergify yml,Testing automated backporting mergify
ros-planning/navigation2,2604,2021-10-14T18:04:14Z,2021-10-14T18:04:50Z,True,2021-10-14T18:04:50Z,5d23326589c20ba32059ac6ed987304910040dc4,1,1,a938ace96d8ab854e9d569acb52836775613b1a2,,Create mergify yml backport 2602 ,This is an automatic backport of pull request #2602 done by [Mergify](https://mergify.io).   ---   <details> <summary>Mergify commands and options</summary>  <br />  More conditions and actions can be found in the [documentation](https://docs.mergify.io/).  You can also trigger Mergify actions by commenting on this pull request:  - `@Mergifyio refresh` will re-evaluate the rules - `@Mergifyio rebase` will rebase this PR on its base branch - `@Mergifyio update` will merge the base branch into this PR - `@Mergifyio backport <destination>` will backport this PR on `<destination>` branch  Additionally  on Mergify [dashboard](https://dashboard.mergify.io/) you can:  - look at your merge queues - generate the Mergify configuration with the config editor.  Finally  you can contact us on https://mergify.io/ </details>
ros-planning/navigation2,2608,2021-10-15T01:11:12Z,2021-10-15T01:17:18Z,True,2021-10-15T01:17:18Z,d46086a8238e1d135e6c25ac633f429de1087422,1,1,ce75959acba0779b7319ea56418dc5f3eb3921bd,,Delete head branch automatically on PR merge,https://github.com/ros-planning/navigation2/issues/2593
ros-planning/navigation2,2612,2021-10-15T20:08:44Z,2021-10-15T20:21:56Z,True,2021-10-15T20:21:56Z,6994fb83a32687dca44fec9a61f006b017fd8264,1,5,d2c232386a597feabd55f553c5a48812cddaef6f b34a470505baa0fed6d2c94bb6d00afead1fa2fc 8d55e7831c4e996e5d591eb1cd8f43df42c73540 163eef2ff4f52b6cc240b01c84f4f1ace194312d ab75e6f754317043fe0de02a67fc3f3c36d84eff,backport-galactic,Update mergify yml,Adding in new automations to help with maintenance  https://github.com/ros-planning/navigation2/issues/2593
ros-planning/navigation2,2615,2021-10-15T20:28:32Z,2021-10-15T20:37:24Z,False,none,bd4043e172d58992298062cc22eb5e8497aabd9b,1,1,ba34e227f3651d852ebe673d0d1d057e75e1a4db,conflicts,Update mergify yml backport 2612 ,This is an automatic backport of pull request #2612 done by [Mergify](https://mergify.io). Cherry-pick of 6994fb83a32687dca44fec9a61f006b017fd8264 has failed: ``` On branch mergify/bp/galactic/pr-2612 Your branch is up to date with 'origin/galactic'.  You are currently cherry-picking commit 6994fb83.   (fix conflicts and run "git cherry-pick --continue")   (use "git cherry-pick --skip" to skip this patch)   (use "git cherry-pick --abort" to cancel the cherry-pick operation)  Unmerged paths:   (use "git add <file>..." to mark resolution)  both modified:   .github/mergify.yml  no changes added to commit (use "git add" and/or "git commit -a") ```   To fix up this pull request  you can check it out locally. See documentation: https://docs.github.com/en/github/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/checking-out-pull-requests-locally  ---   <details> <summary>Mergify commands and options</summary>  <br />  More conditions and actions can be found in the [documentation](https://docs.mergify.io/).  You can also trigger Mergify actions by commenting on this pull request:  - `@Mergifyio refresh` will re-evaluate the rules - `@Mergifyio rebase` will rebase this PR on its base branch - `@Mergifyio update` will merge the base branch into this PR - `@Mergifyio backport <destination>` will backport this PR on `<destination>` branch  Additionally  on Mergify [dashboard](https://dashboard.mergify.io/) you can:  - look at your merge queues - generate the Mergify configuration with the config editor.  Finally  you can contact us on https://mergify.io/ </details>
ros-planning/navigation2,2616,2021-10-15T20:57:17Z,2021-10-15T20:59:28Z,True,2021-10-15T20:59:28Z,dc8aecee9bfc9693db0f4e920cbd79bb89c8855c,1,1,22328d4fa8ac92b88fd556cdfd621d153f407d27,,Mergify fix backport default branch exceptions for power users and attempted fix for checklist,none
ros-planning/navigation2,2620,2021-10-15T21:09:29Z,2021-10-15T21:13:57Z,True,2021-10-15T21:13:57Z,d2f56feb39531e137285670675b0e97ffe508ecd,1,2,987d622bc939553a011c61373d3a99d96c7510f9 36dffe63ef333d8f0a82db8ca6a653322a9856f2,,Update mergify yml for Foxy backports and maintainer exceptions,none
ros-planning/navigation2,2630,2021-10-19T23:28:49Z,2021-10-19T23:30:10Z,True,2021-10-19T23:30:10Z,451160eb7065b1ffc9a56da93b791e68e3490401,1,1,95c50bb64eefb8effeb47dd75e162566156672df,,Updating mergify rules for capitalization of usernames,    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists
ros-planning/navigation2,2627,2021-10-19T22:35:35Z,2021-10-19T23:33:24Z,True,2021-10-19T23:33:23Z,b3df8cae23fc00b59d326494f92a956837f1818b,7,2,1adb56dd66f1f711e25653af077988637d12ba9e 59f8b28c8b6cdbb090b9c7af659c408dcdf84793,,adding groot separation by BT type continuation on 2409 ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | https://github.com/ros-planning/navigation2/issues/2406 |  | Primary OS tested on | (Ubuntu  MacOS  Windows) |  | Robotic platform tested on | (Steve's Robot  gazebo simulation of Tally  hardware turtlebot) |    ---    ## Description of contribution in a few bullet points    * Adding separate zMQ ports for 2 BTs for independent use  * Adding params into the BT to set these for use in the individual navigators  * Continuation of https://github.com/ros-planning/navigation2/pull/2409    ## Description of documentation updates required from your changes    * Adding docs on the change in param IDs     ---      #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists
ros-planning/navigation2,2409,2021-06-16T10:26:35Z,2021-10-19T22:35:42Z,False,none,f600dd547a4d6ff3012fa48ea9bfa44cc12094b9,5,1,0e617b3e848e26f620c609c35b8e247df8550911,,Set groot monitoring parameters individually for bt_navigator s pose ,Set groot monitoring parameters individually for bt_navigator's pose and poses navigators    <!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  #2406  #2408 |  | Primary OS tested on | Ubuntu 20.04 (docker container) |  | Robotic platform tested on | gazebo simulation |    ---    ## Description of contribution in a few bullet points   * Groot monitoring now set up for poses and pose bt_navigator action nodes separately   * Interface added to allow setting of relevant parameters  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes  * Added six new parameters  so need to add that to default configs and documentation page    <!--  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points   * Regression tests could be added    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists
ros-planning/navigation2,2527,2021-08-21T14:25:31Z,2021-08-25T06:37:22Z,True,2021-08-25T06:37:21Z,9ff2dc5261501f999e5ca6d02a230d778c2d6bfc,22,19,2d65ca7405d892fe041b6d0c77511b2ee4ddf6da 19024c242c12ea4212956f11a57503aec5e3ff69 8a8ac8eab18b55e345ff17843801c8fc22ab0aa4 954942cff05b3c19b73b4ff35f918b0bfe6744c8 6a64a6b3f29c783dfc3063f531309b8f28520c74 d7bfe62dee7d0b7cbd4d3ea9da08be3a6928a6af dbd795d3c070b3d50b35e4b0c06685b1a40815f1 556bdf5fcba711256a2e4f9c73b7c18039c280a8 38966cb1b950cd5f65fab3799b63f4336ebf771e b41e554e398689a992ef0ce9e0457849a595c16d d2c4fdfb2c071eeee9efc5c2855272401e028169 0bc68fde83631ec333191ed60cbc1c37dcbd5990 00b4cb6d9f856c19ce1d70357516a3c2c8f76903 449e5acae3e19652447f337dabd8378d44fc288a 2ffd46b0868084d1b1ff31080b3ad1b7821c6a3f ee31eefe73dee44c1d530c759f47da75f4b170f6 f0be72495403df9521953e6df6a48b62068ddac2 375133990445d715dbd1a3468ad4b5d5747ef1b5 f0453269895766f933c5df162d12aca9727f48af,,nav2_bringup reorder,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on |  gazebo simulation of turtlebot |    ---    ## Description of contribution in a few bullet points  This is follow  up PR to PR<https://github.com/ros-planning/navigation2/pull/2473>.   It reorder the nav2_bringup directory since Nav2_gazebo_spawner  pkg in it was deleted <https://github.com/ros-planning/navigation2/pull/2473#discussion_r691751336>  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists
ros-planning/navigation2,2473,2021-07-23T12:26:47Z,2021-08-19T03:28:50Z,True,2021-08-19T03:28:50Z,ad916033f04ca39d929431495bf495d03f232e9b,21,19,119572b1e47da733a136a4636765677f219ece73 10db79aa2661e64a46f1035a76fdfa95a4aac007 4bfdf49606e502f14f38714932930642248af133 dd0e416de4dd3fff7b3b59904155bf745ebfa9b2 78918937885e6e7a46a4dc300e60b375c36caec5 f03a8bdaca80c6409af99291c86e90b0fd95469f fe0f58d0e9313eef14d66e11586a263ac29a1bf9 8b73e395ab4d34af8a6cf652f73788bca0b710bd c77d47b7a480bb1c7d36b2f0ebd8a9a0d566281f efda3ae256b144bad42504f2616d434ce084ad03 bb9d611870dbaca5c94d2364486e845cde3edfa7 21cb28abf342b77295778c4ac6f09fca4f256914 60000f588fb82bd9f0d214f220d57b93ab8ad8e7 064ba94d1b15022fab46aaa5ba5a4a6cf275dd96 3eeed3889ac8e9209baa840da4ffe77bfedc2d42 c47e00fcaab86a2a6d31bb8bbe7efdee6050f94e b89629558d698a3d3692e94ae873b254fbd5bd3e 7a12115295f2afb1c3558dca584804726dc37315 7d93055c6923d39cb9ea09f4509f0f3ebdfdd9f6,,Spawn turtlebot3 separately,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | (#2389) |  | Primary OS tested on | (Ubuntu 20.04 ROS 2 galactic  )  |  | Robotic platform tested on | (gazebo simulation of turtlebot) |    ---    ## Description of contribution in a few bullet points      separated gazebo robot model file from  gazebo world file and spawn tb3 using  nav2 gazebo spawner.      ## Description of documentation updates required from your changes    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists
ros-planning/navigation2,2642,2021-10-22T14:48:13Z,2021-11-11T19:23:38Z,True,2021-11-11T19:23:38Z,9bbc0a9efaf61a86a7d917ab1eb292e0b29ba82c,19,47,029e7a1835f621040d5cb6f51cebecb88281813e 00510838bee9a35ccd56b25a60f6bf03eb6fdc54 633df2f9dd36366496299397ca598b0a187483ea efa3446f4ea11b110d084b6677ee1f9257bfe192 2658d7d476f6f2d0c4adb9ffa7bd87cd8373f67f e49608f0502e57227c5e1f0226e118367e3589f9 6d705525401ef9cd3df500040e9b5ab36f443d8e 31029da95297ac21c57b13f31eb4df8300b38a8b 6270c9f72731d9899a0533f0bbbcdf7a0ec909a1 0331487f221dd8fd704b2a39e9b2a3fafbc63c76 3605bce6e120893840023a86d25b128e9bfebe1e 06b315339629b54835f7bb2a51be240737761db0 95039d8a55a39c844d4ff92b829a611f6dea544e 44b1f1c56284d8744f43fe8fecc3bec9895044c2 b1e2d4ff7400cc794342cd21441d75a4902319bc 219e48207f03606827ca647d26a0f2d6c699c136 de050eb8846597013b0acd233ab94f7581607c4f c897217f5bf21d336825ffdb909b2f9c9ac772b8 c2cc827f6bd4d9fc2f234e179cc5e9b9a2dd6488 8bbc48cd9b3439ca5dfe1fd95afc08c4f25a72e5 cdd9015d5055e14ad17b923316d98766f73987b5 8ee87862b4fa4eb05ba4fcefa982213111cd5e9b 720b71bf21fa9d4a91c1c6fb9765316f3cd1f534 3018554cfd8f6c007f2501c9b0e38c25c542c98c 316cfd269345208153cf959802cdea155122de63 b1f9585c6bdaf8f586d5551f282abfb8df24f017 3ad0984951b258fb7bde86128b300198dc69e6b8 e6e18f9dcf3df2b4b69486ec61b96c52e6a4c8dd 50604317378c4e8e11ffb1275d48beb441c4c13c 209c2fec488c211465ddb2dbf9c392ec058c9c44 da7333b9532e1adba9e0e54e976f75eb49d3f401 571b67a547804783b073bad050f3d4633ac313b4 86589efed5e43cc2ffc989efa9b2c22e88cdb26a 1e5e6508078a32215de314a3bdafa11fbdd20c27 6d161702e325dd85eb56d48d88d779ec4f1547a3 5e839ac8e898d671f402ac15ce7e6f27d5d5d734 5c71f3d4347498a3de57c300929ba48ffe3b8558 2de6a0635169f496a877a1b8bdab5a1bacb042d5 15412f20680e0d548e4052f881b45d2898168da1 5deec0cfd1b2e638548bb596965f4763965a3379 d861b533d0feaf1a19e346e10778bb71a2ade9c7 dc9bd2cc75399e513492a4dde9678ac2ca09e72a 2a5b35b9e0eb2da3840630c0922de5dd83d5614c 12e5cfa183dd807910bc0e6a51ef7ce334a90f8b 71d1f83a75a3ab625f467c1c2d5a3d93877b313d 5cdbafbc2b589722c2e29efe2064f00eb0a6c3b5 eea8da69bc4e5365c993d9b01c9d22124b6b140b,,Refactored amcl code for modularization of motion models main branch ,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | add tickets here #2552 |  | Primary OS tested on | Ubuntu 20.04 |  | Robotic platform tested on | turtlebot3 |    ---    ## Description of contribution in a few bullet points  - The amcl source code has been slightly modified and a plugin package for motion model has been created.    - Pluginlib is used to make the differential and omni model as plugins.Major files changed are related to the motion_model folder.    - This functionality will enable a developer to test his/her own custom motion model by just creating it as a plugin and adding the name in the nav2_params.yaml file.  -  Code is tested on the ros2 foxy branch.  <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    - The parameter robot_model_type in nav2_params.yaml file is to be taken as the fully-qualified type of the plugin class.For example - robot_model_type: "nav2_amcl::DifferentialMotionModel" if the name of the custom motion model class is "DifferentialMotionModel" and the namespace is "nav2_amcl".    - To test any custom motion model  just add the motion_model.hpp file to the source code of the motion model implemented as a plugin.    <!--  * Added new parameter  so need to add that to default configs and documentation page  * I added some capabilities  need to document them  -->    ---  #### I would also like to acknowledge [@naveenmoto](https://github.com/naveenmoto) and [@mbharatheesha](https://github.com/mbharatheesha) for their valuable suggestions which helped me to understand the nav2_amcl package and make the necessary code refactoring.    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists
ros-planning/navigation2,1894,2020-07-29T00:14:33Z,2020-07-30T23:19:21Z,True,2020-07-30T23:19:20Z,ec2603960816a3b39204efb6d77ef5dff3d0a838,25,24,c483e8888583bb2748e407604ee8dd9a2f40708c 36ed224e197e4ba4cba5c9121bbdd990bdc42fbf 983212386772e79b9490bfeee8de3c9d4750d32f ed9f12449b5cfeab6aaa32933f42a7654d514d64 21778b5c0b90ff83d79531d287a80e7addb6bc29 fcc7cd62f59fe457fd8ef3a64fc93b8f336727fa 227c30ad4c84e839a6aff9fc6cfcb95ceabb833e 1f017eeab13f906331e2a446ce15171473d93c1a ccacefb9b84c7b1d98d128bb9d2b933f24fcf305 c2020d16bd1f0d5c8afb295cf9b61fae38ad8033 78c6f73b577a3b8c611e90a578d451f1e297540b 19e1dcc03ab21ca942b6b0731e33a725446d060d 4640d22d0109e6b592b8f0817670f8db9c6afc91 c159968e3ab8e147417af5934e7fc7b494543908 2f95d54885b97904825a7903e88803f0b4600391 9164130089ec68ef436697574e417dd92329edc1 4c45eb0204cc1b80eec4e2aea09e6aa31bdd3c77 f853e0e36ea92efafba4f219929d604034e3cae6 854c5e6a607d2396ab718f6b332f260a28d8278b 133f09ca74c6e46222700936bd158ca8d7d136c3 db42454f3059f10788f86cc849e89c7fb3fe936c 4f327b9c8c5aae239d4a3f6430b2c1f61ec618bd 0e8a9801ac83cdadec470f66461a2bb7cd916376 13c885fac3977b93b1120cd8c234460597fd5768,,Bond support fixing various action server issues,Adding heartbeat support for servers so if they crash or fail  the lifecycle manager will kill the system.    #1869 replacement    Tested:  - Goes down when a server crashes  - Goes down when a server breaks the bond  - Up stably >> 1 hour without timeouts on network  - Clean exiting   - Up - down - up again testing (minus #1893 which was around before this)  - Parameter setting works  - heartbeat disable option playing well    Completed:  - Test coverage  - Documentation updates to navigation website    Relies on https://github.com/ros/bond_core/pull/67 being merged but updated the ros2_depedencies.repos file to use my fork + branch that this PR represents
ros-planning/navigation2,2679,2021-11-17T03:22:34Z,2021-11-17T03:24:57Z,False,none,87ee778410d481899102ddb596d59f6563dd1b5e,2,1,88b9edd4f6377a3e60960fa9e9c5b94de6f3c88a,, Fix Multirobot demo add waypoint follower section to params,---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   |  |  | Primary OS tested on | Ubuntu) |  | Robotic platform tested on | gazebo simulation of tb3 |    ---    ## Description of contribution in a few bullet points  Fixes #2678     * Fixed example of multirobot in simulation      ## Description of documentation updates required from your changes  NA    ---    ## Future work that may be required in bullet points  NA    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists
ros-planning/navigation2,2691,2021-11-18T19:59:36Z,2021-11-18T20:00:54Z,True,2021-11-18T20:00:54Z,d4e166ec38239ddd25aa79562f620ec2e2b0894d,1,1,2af9f24d1be6b42fc770a53e54e5991dd90aa50e,,Updating regex for mergify,none
ros-planning/navigation2,2569,2021-09-23T07:51:02Z,2021-11-18T20:23:59Z,True,2021-11-18T20:23:59Z,7befc4975d3df4e252677a7a2b7c1d6c783fbd20,36,22,30a1bc7862343e855314386a2deb1382400aa245 0ebeffd9486575d4420625340157c913a9b2471b 4b30b93040b0492d99b253bf00e72d9d77315c5f ab08c88178baf10644a76a11b71e5cfd8d235b91 e26601ffce0591be5c77b215aea01d81e78377b3 b60a6a9d12c923e4c3c5644623b418126e63cbc0 0a6d4f707b7a4e027cfed8aaaf522b62d3322803 45c8dc7df5ea2fbae3b12db2e8332bdb398b5237 4e4bf966de5dfd13ab29b2eb493d8682a7764153 215552469c3ba5e0eb386801d99c1eebbaf9e716 8a45a26e207d0997f610d1a082aa292a88ae3727 e51ffff453447e13969f38608c09da98b2a27eaf 647c8bfa97ff8c1ef045e24724a1a505849f114b 3412f5e5f5f54ea4c02ae00f27815acd872b344f 95671807b22a089ca1d76e88ff2e48a504230339 89566455712f07f03b667331b228e2553cea7975 6261768bb95ff8f47bbd5941cef0dea75756efb2 a97e2d58d59bbc87f13955d0cb83324f68847093 d1df4c78b2409b91c082570a9112c35cbec1cbc4 f67f81dbaaef8d7f345f9390fb3c9411d30a34bb cd98b0a85bcd21b104138cee7cdfb91ed2cff930 3158bfe70bd91f354a9a4e24b44d915f759e4c16,,Smoother server,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Smoother server for path smoothing pluginization |  | ------ | ----------- |  | Ticket(s) this addresses   | #2498 |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (gazebo simulation) |    ---    ## Description of contribution in a few bullet points    * Smoother server added with functionality of loading nav2_core::Smoother plugins  feeding input path  costmap and robot footprint into them and collision-checking the resulting path  * Added updateCostmap parameter into CostmapTopicCollisionChecker isCollisionFree and scorePose methods to improve performance (costmap is needed to be updated only for the first checked pose)  * Added SmoothPath.action and SmoothPath bt plugin  * Also fixed typos in ComputePathToPose.action and ComputePathThroughPoses.action comments (use_start true/false functionality was inverted)  * Also added getHeader() method into CostmapSubscriber (actually not needed by smoother but it cannot do anything weird so keeping it there)    ## Description of documentation updates required from your changes    * new table on navigation plugins for smoothers  * migration guide mentioning it  * docs on new BT node  * configuration guide page on smoother server  * New paragraph on navigation concepts page explaining smoothing  * Ideally  a tutorial about how to write a smoother plugin like we have for the planners/controllers/costmap plugins  but that can be made into a separate ticket for another time    ---    ## Future work that may be required in bullet points    * merging Ceres cost-aware smoother plugin  * implementing current Smac planner smoother as a smoother plugin    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists
ros-planning/navigation2,2696,2021-11-19T22:17:04Z,2021-11-20T02:07:41Z,True,2021-11-20T02:07:41Z,c15ccbf86d52a19b9ce80b095f39090ffd9f4afc,12,5,a5806604cf55a90807618082fbb7a82e1313e207 f3c2b28e5a5f2cf4d06f78107e11beb06a358e0b fc58434d1e9db9ff3f298e998971da92ee1b7324 e42aaca8227d22fa3a482c2a00b39e5de381fe93 e78b4ffebcbea03e7d8a758d13733c28996b8e66,,removing live groot monitoring from Nav2,There have been near-endless tickets of issues regarding live groot monitoring  so we'll be removing it from Nav2 since it really hasn't worked out well since we introduced it.     It was a great feature idea but never quite panned out  especially after we introduced multiple navigator types in the BT Navigator server. The issue we run into primarily is that Zero-MQ prevents users from producing multiple logger types in the same process. Since BT nav has multiple servers  the swapping between them for viewing has never had a clean hand off causing folks to file tickets or have nasty logs appear or ZMQ crashes in the background. The BT.CPP client for this doesn't allow us to have a clean shutdown process so we're left with hoping that ZMQ properly handles the situation  which it rarely does. Further  Groot only supports visualizing one type of tree at a time so for applications often switching between navigator types  its not possible to use a single groot client  causing great frustration.    So  what I propose here is to remove live monitoring of the BT from Nav2. **We can still use Groot to modify  visualize  and generally work with behavior trees**  the only thing being removed is to live view the executing behavior tree as Nav2 is currently executing it (it used to light up the boxes of the current nodes). This was of dubious value anyhow  since the tree ticks so fast its difficult to visualize and get meaningful insights into things as the system is moving _so_ quickly.      Ex. tickets    - https://github.com/ros-planning/navigation2/issues/2406  - https://github.com/ros-planning/navigation2/issues/2674
ros-planning/navigation2,2706,2021-11-25T01:36:10Z,2021-11-25T03:48:29Z,True,2021-11-25T03:48:28Z,9cc4192edd02f9810873d3af1cad7829223875a3,1,1,52faa354ea3cea4a07c33e853b4e26ff752f70a7,,Version bump up colcon extensions,Update to use latest fixes  including: https://github.com/ruffsl/colcon-cache/pull/26
ros-planning/navigation2,2708,2021-11-25T12:44:05Z,2021-11-25T12:44:14Z,False,none,none,257,28,342816556b89294ccc3266e0b08c57dc603e3570 aa9394a6b57a23ede7add9cbba901ba1a21a26da 671dde625ade1092130cea68a64eca7e97435033 db2f917bd5a1bdacf7acc5436f49434be0d02ad5 fa1a64ad4d47a3793d22ce7da3f7238c92294af7 603150bcf52a48847772558f30601c5b30cf0797 96b47139d3c10f3847c66fe6bf130152dfd1a038 0ed83f084d105f3eae667e0b7a28431939a07c96 3d166b748bd704eca05ef671b0b2ca99968a8c73 77c1b742e959dda02acf6830c2a814f2278bb4a4 63b9510ddf16abe2b6cc0f21c4d4824ed4e99331 af8a857699c6f9f64cfccb7d98b60230ddc3ee94 52abee596117441311ce8fcb625fc2504e345ea2 64bf1463fe9fc92f99f8722624a4920d578b661f 41996f409fcd7b005cf779e0376273cee3de6d76 3befe9aa1c2546f2178c7ced6fe55fc3ba56642a 9831d83f5dfce01d5842c867a0540dede4dcabf9 5c9cb96e0c887a6a51506342b8fc50d2ab34643c fcdc1d83fadc6ea19589f464486a27c6a70820e7 a947ab5656e46ae3aa1afdf95e1706a16e478974 2590238de036513c96c6fd2c76884c7599b72a01 7bc07141bf127754cc79c5211813de8d4cca7602 9e7c0e12a9525bfc9ff838dbc4fe1bd0816a04ab 19189e73fe136bdf05b6a22d90a2143b3a55d1cd 9ca4bb59bfc2814af9a18da9e6fc73a3b675475e c37bff061e864d13db1ade250901a2cdedd44010 666b185294e6b3fc31e8a5f1e81a464e421235bc ea17417e63fc037f5004c7ee74758feb66b38af8,,Reload Tree on Trigger and more ,Missclick (oops  sorry)
ros-planning/navigation2,2687,2021-11-18T10:07:08Z,2021-11-29T18:25:06Z,True,2021-11-29T18:25:06Z,fee433ff76b1fe2997043bec16b81568fbead49e,27,17,a3cf1f0fd055a209fc980cf47aaf670d6b15680a 4e99c11341ee1836ba4b7aad1ef320f3f0896ac3 1f70963256ec6b92cee0f4e505ce7384ac03fbf8 ed6602f4048a34401f69dc8d4cccb39eaa23e346 c7b8bbd4cfd8eca5de1deec07a52331f10ba5bb5 cf10abebfee60fb5cf09df6836b24594b68c083c d0263f9463f912e2a3736d7661b6dbbd93fd9012 df7741e1386d4338a1d05c3ea94433b28f108efe 85b0d5319759f157f11154177b6598ad59b11dd6 d627f83abb37c9dbf97851877dd836380e857624 435245be5fd761497e4a613016cfb3b94ee38352 50ee1f43c8f55820012fcc391dcfc1b5efca1c69 6390058b7995ba70768a5332ab1d001a45249b4d 3e406ef73fe372974fab9cbf28dae7f7ff9eeb1a 794bd3705f5279f68a2fd5dcfdb947d3fb60c03c 9920bfc52263836dd4b4d4ce476816f4e2f29440 03771325a10c92fe8a6e295519033251c731cf5c,,CostmapTopicCollisionChecker tf stamp fix,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2658 |  | Primary OS tested on | (Ubuntu) |  | Robotic platform tested on | (RTV Caster  gazebo simulation of RTV Caster) |    ---    ## Description of contribution in a few bullet points    * Fixed footprint stamp rewriting by Costmap2DROS  * Added header retrieval to FootprintSubscriber  * Moved footprint "unorienting" from CostmapTopicCollisionChecker to Footprint subscriber and made it use footprint stamp for tf lookup  * Removed footprint_timeout from FootprintSubscriber  * Updated FootprintSubscriber API and added doxygen description to getFootprintRaw and getFootprintInRobotFrame methods    <!--  * I added this neat new feature  * Also fixed a typo in a parameter name in nav2_costmap_2d  -->    ## Description of documentation updates required from your changes    * Removed `global_frame` parameter from smoother server  so need to remove that from default configs and documentation page    ---    ## Future work that may be required in bullet points    * Check for other places where tf lookup has possibly been used improperly    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [x] Check that any new parameters added are updated in navigation.ros.org  - [x] Check that any significant change is added to the migration guide  - [x] Check that any new functions have Doxygen added  - [x] Check that any new features have test coverage  - [x] Check that any new plugins is added to the plugins page  - [x] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists
ros-planning/navigation2,2715,2021-11-30T04:22:36Z,2021-12-01T00:33:53Z,True,2021-12-01T00:33:53Z,bdcccd88157fdb97b6902354422d61bd3e30d3bb,1,8,c6ba9828ffab5a6de3d997cb85fcf797510df964 75703f1b31a8615a59b999a34c1f16462905db65 03ea830da4356f69eae36bee58c51f0d619a7d19 2b4424f6ca9556d5955193712164860e7a1e346a f4584d10a1a15bde72d1fdbf8f3ed15f49883d8d 3fbba58a448a3fbe4a25c2c1a4f2ed22f57766f2 825d5e2f57dedb6203c5f7155c4148a6d9c3642c 7c9ed2aa94b6c5c9abdf7ec4ffda5bff95d1cf23,,Clean gcda files for invalidated package tests,"Each time you run the program  the execution counts are summed into any existing .gcda files  so be sure to remove any old files if you do not want their contents to be included."  https://llvm.org/docs/CommandGuide/llvm-cov.html    Example:    <details>    ```      libgcov profiling error:/opt/overlay_ws/build/nav2_util/test/CMakeFiles/test_node_utils.dir/test_node_utils.cpp.gcda:overwriting an existing profile data with a different timestamp      libgcov profiling error:/opt/overlay_ws/build/nav2_util/src/CMakeFiles/nav2_util_core.dir/odometry_utils.cpp.gcda:overwriting an existing profile data with a different timestamp      libgcov profiling error:/opt/overlay_ws/build/nav2_util/src/CMakeFiles/nav2_util_core.dir/node_thread.cpp.gcda:overwriting an existing profile data with a different timestamp      libgcov profiling error:/opt/overlay_ws/build/nav2_util/src/CMakeFiles/nav2_util_core.dir/robot_utils.cpp.gcda:overwriting an existing profile data with a different timestamp      libgcov profiling error:/opt/overlay_ws/build/nav2_util/src/CMakeFiles/nav2_util_core.dir/lifecycle_node.cpp.gcda:overwriting an existing profile data with a different timestamp      libgcov profiling error:/opt/overlay_ws/build/nav2_util/src/CMakeFiles/nav2_util_core.dir/lifecycle_utils.cpp.gcda:overwriting an existing profile data with a different timestamp      libgcov profiling error:/opt/overlay_ws/build/nav2_util/src/CMakeFiles/nav2_util_core.dir/string_utils.cpp.gcda:overwriting an existing profile data with a different timestamp      libgcov profiling error:/opt/overlay_ws/build/nav2_util/src/CMakeFiles/nav2_util_core.dir/lifecycle_service_client.cpp.gcda:overwriting an existing profile data with a different timestamp      libgcov profiling error:/opt/overlay_ws/build/nav2_util/src/CMakeFiles/nav2_util_core.dir/node_utils.cpp.gcda:overwriting an existing profile data with a different timestamp      libgcov profiling error:/opt/overlay_ws/build/nav2_util/src/CMakeFiles/nav2_util_core.dir/costmap.cpp.gcda:overwriting an existing profile data with a different timestamp  ```    https://app.circleci.com/pipelines/github/ros-planning/navigation2/6480/workflows/e9f7aefe-808c-4465-bebb-d63c7136dade/jobs/23842
ros-planning/navigation2,2579,2021-10-04T08:21:59Z,2021-12-01T01:45:58Z,False,none,a2543795515f03e36e54e29c272efa5b536ea0bc,8,2,e172e360871dff03adbce26e3beeb2105a999c84 305611118c3ba7aa5d1e28c756b16b72448e0ce4,,Shim controller,<!-- Please fill out the following pull request template for non-trivial changes to help us process your PR faster and more efficiently.-->    ---    ## Basic Info    | Info | Please fill out this column |  | ------ | ----------- |  | Ticket(s) this addresses   | #2064 |  | Primary OS tested on | Ubuntu |  | Robotic platform tested on | gazebo simulation of turtlebot3 |    ---    ## Description of contribution in a few bullet points    * I added shim controller plugin    ## Description of documentation updates required from your changes    * I added parameters  need to document them in Configuration Guide section  * Also I added tutorial in General Tutorials    ---    ## Future work that may be required in bullet points    <!--  * I think there might be some optimizations to be made from STL vector  * I see alot of redundancy in this package  we might want to add a function `bool XYZ()` to reduce clutter  * I tested on a differential drive robot  but there might be issues turning near corners on an omnidirectional platform  -->    #### For Maintainers: <!-- DO NOT EDIT OR REMOVE -->  - [ ] Check that any new parameters added are updated in navigation.ros.org  - [ ] Check that any significant change is added to the migration guide  - [ ] Check that any new functions have Doxygen added  - [ ] Check that any new features have test coverage  - [ ] Check that any new plugins is added to the plugins page  - [ ] If BT Node  Additionally: add to BT's XML index of nodes for groot  BT package's readme table  and BT library lists
ros-planning/navigation2,2735,2021-12-13T23:38:57Z,2021-12-14T02:05:08Z,True,2021-12-14T02:05:08Z,43a1a1fbe018a2ea8b4743437ceeb241a37b3540,12,3,bad0e4bc72d598df392cfc2789df8a598b9cdb3b f9bb2924908a80bf609531016adc3e689f371637 e0ea772aa0f6aeb8d30c8d85ad0939f60aff6d65,,increase general test coverage,none
ros-planning/navigation2,2737,2021-12-15T03:33:28Z,2021-12-15T03:34:00Z,True,2021-12-15T03:34:00Z,19dcf73385df10f3c08f9529ee7151a6138eb807,2,2,8a522cf80389556d1a60bd779c3ef9f3f1e627d4 682afc93b482a9e5b6377574d6b01698184292e2,,Apt upgrade with new pkgs,using --with-new-pkgs flag.    This ensures all packages in CI image are updated  preventing the Update CI Image workflow from needlessly retriggering and rebuilding the images due packages otherwise having been kept back.    https://unix.stackexchange.com/a/241062/213124
