Project,PNumber,CreatedAt,ClosedAt,isMerged,MergedAt,MergedCommit,nFiles,nCommits,Commits,Labels,Title,Body
cleanflight/cleanflight,13,2014-05-20T01:53:55Z,2014-05-20T08:55:29Z,TRUE,2014-05-20T08:55:29Z,b12c2a71fc48776fa5b0382848019e6c49064171,1,1,c245dc18681151a9918454f1a155c33d06bc45bf,,Update Makefile,ARCH_FLAGS was never set to cortex-m4   cf line 63
cleanflight/cleanflight,130,2014-10-23T12:20:54Z,2014-10-23T12:34:06Z,TRUE,2014-10-23T12:34:06Z,a9d853040f8d5be58d4796e3f0a668d7ae50fb01,1,1,091941cd829142d3e4c8c8b080c494f401db9e94,,Makefile improvement,- root must be assigned when declared - use := - add autodependecy generation - minor fixes
cleanflight/cleanflight,160,2014-11-07T14:42:52Z,2014-11-11T21:30:10Z,TRUE,2014-11-11T21:30:10Z,ab5a7dfecdbfbee77bc3ce59377ad1b0cf05d789,17,5,aa7f5c4a1e66fb838f4ffb95ef1e41038765e1cc cd88c561a6e618a1385e8186e9472b44804481e2 98c0d0b5dd97d4a87d6a587f92b68c93032fa5fe 3b20b74c0017fbc210a3091bf7ff4fbe42abfdf7 3ee60ef85757d898ffad436ca67dc94f740fe5e0,,New timer implementation,This is first part of new softserial code. Main timer code is changed  changes to rest of code are kept to minimum.  This code does build fine  but is only lightly tested on real hardware.  Maybe new branch should be created to test it before merging into master
cleanflight/cleanflight,175,2014-11-19T16:09:34Z,2014-11-21T23:21:08Z,TRUE,2014-11-21T23:21:08Z,b410ee8a5908e7021713802c6fc89191642983da,4,1,4157cf5315527d20dc179aaf5adee6465739744a,,Fix double constatns,some constants were double  M_PI was sometimes inherided as double  added -Wdouble-promotion to makefile warnings  Saves some flash space
cleanflight/cleanflight,7,2014-04-22T11:50:48Z,2014-05-24T23:33:26Z,TRUE,2014-05-24T23:33:26Z,2783e1f6859b4865298c49b02d1c97b4e3200d67,7,1,b14b058fa0219988b5504aa3be6e45a6b75a8bca,,add msp telemetry,auto send msp telemetry when armed
cleanflight/cleanflight,224,2014-12-15T21:32:25Z,2014-12-23T12:08:23Z,TRUE,2014-12-23T12:08:23Z,ea09db62c69d4232a60e42573079d050494baec6,6,4,509f73853dcf2672413f0b861dd6d4c92fa393f6 67cce3b9a0f0f358112bca953d25c72a950519a5 981adf51d940eb3b72104d1b0f8790bbf2206486 19bfabbce46fff076b9f1777a8eaee018fa79770,,Added initial version of JRPropo XBUS Mode B support,Hi there! I am using JRPropo (http://www.jrpropo.co.jp/english/propo/XG14/) transmitter for some of my models. I have been waiting for XBUS (mode B) support for cleanflight (and other firmwares) but I finally came to the conclusion that I would have to add it myself...so here it is. Initial tests working nicely on my system with 12 channels. Would be glad if more people could help with testing.  Tested with these cli-settings (on a NAZE32 rev 4) using a serial cable from rx to flightcontroller: set serialrx_provider=5 set serial_port_2_scenario=3 feature RX_SERIAL  NOTE: This is actually multiple protocols that uses this standard. Known under the UDI  Jeti  Multiplex and SRXL protocols. Hence with more help/test multiple new brands of tx/rx systems can be supported. I know there are some small differences between these dialects of the protocol (sync byte/id etc) and hence I named it "xbus" as this is the one I have tested.  More info can be found here: http://www.rcgroups.com/forums/showthread.php?t=2018101  Best regards Stefan Grufman
cleanflight/cleanflight,223,2014-12-15T17:19:21Z,2014-12-23T12:25:44Z,TRUE,2014-12-23T12:25:44Z,4559c40951645c78afe0b5b75a5afe9c6a637dd8,1,3,f356830781c7e630f033b582b35ae28464d91c74 e41ea5bec567884e7566368e63bd73b39267ae77 334300922e7e4868ef0907325a024b187cd621fc,,travis Add inital support for travis ci org,- Initial support for travis-ci.org - Example build: https://travis-ci.org/kylemanna/cleanflight - Hope is to later add unit tests and builds for more then just NAZE - Recommend setting up travis-ci.org for cleanflight and then merging this.  Should trigger a fresh build on the merge then.
cleanflight/cleanflight,271,2014-12-28T11:46:49Z,2014-12-28T23:03:28Z,TRUE,2014-12-28T23:03:28Z,4cbdafa10180cfa2fd4bdb8aedaffb6e659fc04a,2,1,2b90f675b2e9d3d07b50dee8dbe1fc3a1235b203,,Support ALIENWIIF1 as an separate target,This will allow to build an HEX file independently to the NAZE target  An ALIENWIIF3 may also come in the future based on STM32F303. Both likely will share the same default settings. This is why I donâ€™t use ALIENWII32 as target name yet.
cleanflight/cleanflight,227,2014-12-18T06:03:18Z,2015-01-06T21:56:49Z,TRUE,2015-01-06T21:56:49Z,93cd737b4cebe18d5b2603b486bdce45978c88c7,21,30,8c41772584397f1baafd6ebedd3f216ca515652c e492aa6a3961dded50ffa44a96718ab66e3c660d 5cc3ad3da78f8f644b2d761eefffa47387ccb38b e47a82add8710d588848306b43a3bfc210af5853 ce5d64f653eabd663ee8d29ea8ca3991bd0ae0f0 172256c91e6614bb2e84f2efc7aec06e2d744f1a 5aa8e61c6ede5daf70d8c0a9b2534bbb80837c02 c85a172370aea46ebe15643d541fed5a83535215 0ed47d5e6df18ee14f20bdc1110fcce6e6d9a482 8226922d46ca2ca7231886e67dbd9b919f3c5996 cdb3cc0dd3ed39b24122914f3f08583f289f7540 54ead59791aa656f0ae13845d1776ebf6a2f1b05 50c81aa00e808902e64a92f70b59aee7dd6dec0d 9b9474250ee9cb079c1a4528e1766612093e1908 1b1a285b4a7d4ac553486b0175b95c12d786b431 2889f5904ee5dc6d94d38bd234bae3ea07337d8b 80082660ce7ae5d9beab8764882e6aa3e65c7a61 dfd8e5b2b046d4d2446bcf0375916f79b3c726a9 5a51ca8d62d06201d9d15d39fe7f5e4e6fdb9764 ff9dad067c83990be71e60cab44212a2af410e97 d195880bb84ba8b78cb93f993ec1e55f3c4a5715 421ac3d0f7c8713d9e248309f6b5ddd4b728e2e0 321fc717abf3c105665593e4cc387d241acb0ad1 fcda0db1279893a2c620e5c93f99a154b8cbd0ad 6d3ad4a2de298dcb9257d7f1d5bfc602bedde646 566bd561dc8ff178314a1b3fb0774aef569c8526 8435989dc1e9d26d85d1eef2a240639119fbf22d 3ef83389e9053b93d2a57d867de74e140185c2b1 6c2ce5038cb2e152c97a6e21d9902744d6ec6b44 a0f3ee6315d25890b13d27a58f8b8c1d4264927f,,Add blackbox flight data recorder feature,This adds a "BLACKBOX" feature which can be enabled to send flight data values over a 115200 baud serial port to be logged by an external logger (like an OpenLog to a MicroSDHC card).  I've only included "#define BLACKBOX" in target.h for the Naze32 and Naze32Pro targets  because I have no idea what the compatibility will be like for other targets (but they'll hopefully work fine).  You can try out the Blackbox feature without having an OpenLog. Set the Blackbox to use the same serial port as your USB connection  and tether your craft to your computer by USB. Then you just have to log your USB serial port to a file  and there's your flight log!
cleanflight/cleanflight,403,2015-01-22T06:00:07Z,2015-01-22T08:44:38Z,TRUE,2015-01-22T08:44:38Z,77c41b4b7f1f27b424aa15ac4054925ef367248b,7,8,c4dbe66249cad495c84430f2b3f0ae3490dd7ccd add0b517ededf4705430207cb1eda14a2a21ea5f 3e6e8f44c208773b846767ab84793e1e9e1b6160 6711c56dc51fc5b727e55fed67fc9edd12a7f6d5 fcdc0af2183ba737da7c85476f95c9b1db086a8f d1a1cc3f1305f1602ca7571855d8866a66a59a5b d6b08f22c1c966c78402f018f6284d2d6560f515 80b78fd808bb706c790bdcffadb4c5318e266dfd,,Flight imu test maths,Review this request first: #402  then only compare new changes onto that one  or ask me to rebase :)  Fixed the flight_imu_test after including maths.h from it :)
cleanflight/cleanflight,405,2015-01-22T06:08:09Z,2015-01-22T08:44:38Z,TRUE,2015-01-22T08:44:38Z,c4901e5807e2eb705b637bd05b3cd359cc80f903,12,11,c4dbe66249cad495c84430f2b3f0ae3490dd7ccd add0b517ededf4705430207cb1eda14a2a21ea5f 3e6e8f44c208773b846767ab84793e1e9e1b6160 6711c56dc51fc5b727e55fed67fc9edd12a7f6d5 fcdc0af2183ba737da7c85476f95c9b1db086a8f d1a1cc3f1305f1602ca7571855d8866a66a59a5b d6b08f22c1c966c78402f018f6284d2d6560f515 80b78fd808bb706c790bdcffadb4c5318e266dfd ab8b5efe2cbe8e2c0fbe81da4e19146e37ff4231 919a8796e7ee0fdfbfe1452473d9c34689c58fca 29c56309576379a116528d8f92f42188243e216b,,Move math to math module,Review this request first: #404  then only compare new changes onto that one  or ask me to rebase :)  Moved vector code from imu into maths.h
cleanflight/cleanflight,406,2015-01-22T06:18:43Z,2015-01-22T08:44:36Z,TRUE,2015-01-22T08:44:36Z,88ecb4a831d708eb902bf3f5969a723a0f875c4f,12,12,c4dbe66249cad495c84430f2b3f0ae3490dd7ccd add0b517ededf4705430207cb1eda14a2a21ea5f 3e6e8f44c208773b846767ab84793e1e9e1b6160 6711c56dc51fc5b727e55fed67fc9edd12a7f6d5 fcdc0af2183ba737da7c85476f95c9b1db086a8f d1a1cc3f1305f1602ca7571855d8866a66a59a5b d6b08f22c1c966c78402f018f6284d2d6560f515 80b78fd808bb706c790bdcffadb4c5318e266dfd ab8b5efe2cbe8e2c0fbe81da4e19146e37ff4231 919a8796e7ee0fdfbfe1452473d9c34689c58fca 29c56309576379a116528d8f92f42188243e216b 616c40a827c73fbaf46b929309f67cdf0e39a83c,,Throttle correction comment,Review this request first: #405  then only compare new changes onto that one  or ask me to rebase :)  Added clarifying comment to the throttle correction function in imu.h.
cleanflight/cleanflight,404,2015-01-22T06:02:35Z,2015-01-22T08:44:38Z,TRUE,2015-01-22T08:44:38Z,f06e278fbc1c785aec049ac6d3fe7ebbbe418919,10,10,c4dbe66249cad495c84430f2b3f0ae3490dd7ccd add0b517ededf4705430207cb1eda14a2a21ea5f 3e6e8f44c208773b846767ab84793e1e9e1b6160 6711c56dc51fc5b727e55fed67fc9edd12a7f6d5 fcdc0af2183ba737da7c85476f95c9b1db086a8f d1a1cc3f1305f1602ca7571855d8866a66a59a5b d6b08f22c1c966c78402f018f6284d2d6560f515 80b78fd808bb706c790bdcffadb4c5318e266dfd ab8b5efe2cbe8e2c0fbe81da4e19146e37ff4231 919a8796e7ee0fdfbfe1452473d9c34689c58fca,,Imu naming,Review this request first: #403 Sw  then only compare new changes onto that one  or ask me to rebase :)  Switched to the naming scheme verb-thing for imu methods  like initIMU  calculateIMU etc  and also changed to IMU all caps instead of it being different everywhere.
cleanflight/cleanflight,416,2015-01-24T00:16:54Z,2015-01-24T00:17:58Z,FALSE,none,616c6468901b0daed3e2261e18c661e7d0f1ccad,19,10,8d38bb0f3aa08abae0ea3c20deaa489632f2dc87 6573c8a2b692630ff6abfdc5f35aa81b8ede4533 af26c9854aed518d4fc0b6c8b726d5e9de550f63 50cca9feb5551e2901826c156e655255b6dcde15 51cec2e1cabf124f3e85cdee3cb882539b46662e 69a4d12a27a5f5a3e5837addab5f9414f5aed2f0 002a33dce638423b6f3b216098bc7ad58d0ecf60 d716e1462b015c299fad851d9f2f200c924d922e fd8bc1de0ae4b670351292ec5165eda65311f7c9 9a68457e62995d989f60fe3b8ee9eb5fb5cce56f,,Running unit tests in travis,This is a work in progress  it is kind of hacky but works  which is better than what we have now.  Please look through it and comment  lets discuss before we merge anything in :)
cleanflight/cleanflight,417,2015-01-24T00:59:29Z,2015-01-25T00:37:14Z,TRUE,2015-01-25T00:37:14Z,d5a0435cc5dd47a073dfba81c3b13efbc2bf729c,3,6,861f5b672550d91129f5db8acad3c4a08bc6e66b 377f9dfc83b2707e4727980a894f4046dab99e09 9a9cb0dbaae18974614a163bbfe9ad11df9d12a7 3c4fcf918c1465f676b338ae200f1653760f036f 7fd639025296c5509a090ba6f2b766f9ff4b06c1 e58825288bc8a5e4bc6f9944cf232d6c148f8f82,,Running unit tests in travis,Slightly hacky  but tell me what you think :)
cleanflight/cleanflight,418,2015-01-24T06:09:04Z,2015-01-25T00:25:48Z,TRUE,2015-01-25T00:25:48Z,ef72536a24e2ea2bbc398646e82ae56bb01e9b03,17,5,be03ed95fa7b1f3d2274fb202039d2399d32c566 cfa4e19acd197e2c339fb65895f7aba12d359aa7 53c0a09b0879a6e77842cc11ee6de8d8171be37c 33481c86d7a87eaf84795d46a19ddea72d5c430c 9b00f952cd06e6f1169f4ba439cf9dbad595e900,,Added maths test,Conflicts:     src/test/Makefile
cleanflight/cleanflight,375,2015-01-18T00:43:10Z,2015-01-26T14:34:59Z,TRUE,2015-01-26T14:34:59Z,61dfab163fb1c42fba9afb71da172334e6c41ada,7,5,999f0ce002995aef00f24696415e89ba68815d48 a37c6ee9eebe0702ef2d87cb6447c5e565d53371 a81fad9cc2bdd148cf6a8377b3bb5bfafde87222 6868999d636def7428845cc671746d3a7c248224 496d706097e693fedc331890eb74cde1921505ff,,Virtual Current Sensor Support,This adds support for a virtual current sensor as per #346 which estimates current draw based on throttle position (and armed status). It uses the existing current_meter_offset and current_meter_scale settings along with a new setting  current_meter_type which currently has possible values of 0 = none  1 = adc  2 = virtual. Documentation is included in the pull request.  Another problem I ran into while testing is issue #297 which was causing problems with the ADC readings. I have corrected this issue in pwm_mapping.c. Additionally I have ammended a line in main.c which will allow PWM to use the current sensor ADC pin if current_meter_type= 0 or 2 (i.e. none or virtual).
cleanflight/cleanflight,515,2015-02-16T10:43:37Z,2015-02-22T21:50:21Z,TRUE,2015-02-22T21:50:21Z,53510bcef25aa4a9b9fbdae029e78c194dbd6470,20,21,3eb28f16eaa5d4f4a085bcb87f334ba85d3ace84 2e14faeef6caf05fd8de603d4fbb45e765b31e6a f9e22a046105d1ffd5df1e9c6356fa1bd2efc18e 5a57dda66587821dbef0ae1c1ba74bef15aab2c7 388842755874c07bf4a305906f693892858794a2 3c74ac2c913ec7493f8259a24374fec39a98d306 ebff1bdcd7bb8e3e26323144cafef9486d114d3b f7d227a208d8373149f49d951b515c55f8874da8 5651e65a0b70f7624cebbd5d3a1f9f54ece232e8 80ea5e441977471de42dbbb68ef889d44ea586f9 3b8e05fb46d612a75b6f5b7ca332563044be12f9 6423ac7db140041f174a185985246a642ae4e610 acd4745a4edd18d95ac65893a508b0a004811a4d d6911e8b86d204edddb795524d19b522368e3d95 892f1698d951e4459f224057df423cf5948b0554 d628bc6dcd54b1171ab970f1c4f8ebbb2299e9ba 5f29eed017d6111a2eb156c321f8bb7cf45c232e f21f5d51b43c0c778934c2966186dd2c290a9684 a67c1ef443a1f89c252874c4904eae519e610fb9 e636d8b94547a778ac03a5469c9dc413a2151d75 f6c9f7cc4aa900b2ca9b22f51eaa531f82fb5667,,Add ability for Blackbox to record to an onboard dataflash chip,This allows the Blackbox to record to the Full Naze32's onboard 2MB flash chip rather than recording to an OpenLog serial logger.  A new option "blackbox_device" is added to choose which device (serial or flash) to record to.  New MSP commands are added for erasing the flash and downloading its contents.  New CLI commands are added: "flash_info" for identifying what flash chip is being used and its geometry  "flash_erase" for clearing the chip  and "flash_read" and "flash_write" for inspecting its contents. flash_read and flash_write are probably only useful for debugging  so should I remove those two? Or would they be helpful?
cleanflight/cleanflight,543,2015-02-23T20:43:10Z,2015-02-26T21:06:24Z,TRUE,2015-02-26T21:06:24Z,218c72c09de48f8f3d0f941ced67683e84a88ae5,8,3,ff288468297a013423319492a43b2146432e78e9 aae91411200acd61477cb5452b6fd401f6d1cd59 451d3d7ba2e5381def6ff684471b4a3fbd8e2c68,,Save around 300 bytes of flash by improving Blackbox field name storage,Also adds a bit more Blackbox code documentation
cleanflight/cleanflight,294,2015-01-03T01:37:32Z,2015-02-22T16:21:44Z,TRUE,2015-02-22T16:21:44Z,53f264383dc41536f27c325885d36a73ff42799e,11,30,a9020d7b51b7dd5e4ce18f32477906ea5f69c7c0 ceb4690befcd4e344343953208cb5cb893b17df5 cf40e3231a91a994a35c27c2aa5ac273e0b598f5 c5b822ecf1d2d5567600721f241bd04b8c955aee 3eee9eb079e34bbb2ec8c0e95fd9d146d2e8fc42 a3cc92347b0074303b6a889f7eac71a33191325e 0043fb4b12deab78ddebda5e5bec5e2f3355e266 4bcedab3e9053b7d1bb6f1f5b718b3f5183d651e 654c614380ebb0fcc245a82999fe0c193a96af76 ad7ec4b915d0773f9fdf716ab90fc8d8c1919b3e 20ab61479e62648ef88dd7940f275f804318a179 64a78f82f87559050821fe83a6f879ff62280e40 d019fa181d0ace79555fe254a84854a063a85ac4 596da65a87959fd14531dbc19781a21606052f36 fc218ebebcaf048aef3228fe0082ac0671b28dcc 11a9725605e660b5766d4e2ed7866fb8e9f4c25d de7fa3f31a7f9591617d6ae55e8d1c14fdbefabd dc3271255c9e1e25705886c261a0db9d2163cf13 06ce23951b062d67f94587f1e048280f7ae24f21 c853f20d751cac54e6496901275fdb62a016ae27 fd71e1ee931d7d683fe141a0332a605d4d35eb89 6abd6297df78103f1d5f833633c9000401efd8e6 9d5a8e8e86f031f9eff4831dbb31be5a8d49e156 62147736b2e31e3c4c45789eb8547adfa49a342d a81d686a84875492e84ad907eff46fc5c35e6610 09862aed786d391e076b9cb974e3544e52b29b56 f5afb74126d84998c05ff3d140556ccde7331c91 4f0af41e79da92b149fd6e3c4d9f45d53515fd47 ec946ea7d581290d4e4bc0c168aa257729a2bb18 302701772c170372ac369492f70c85558e770fd5,,Low pass filtering for servos,Hi   My Tricopter needed some filtering on the servo to dampen some resonance in the tail.  It seems like it is a common feature that is present in other flight software  e.g. KK2.  I'll be creating a separate pull request which includes a documentation update for this and some other items.
cleanflight/cleanflight,559,2015-02-27T12:06:32Z,2015-02-27T13:00:43Z,TRUE,2015-02-27T13:00:42Z,a086e71f0278bf4f8fd59505c0917d3045c03d1a,5,4,57fcde05a3205a942c2c6b1d3f75e6ac8838eca8 af68517ddad20c7721247fb63b8b65ba1398daa0 a60cdf157aeb3fc8dead3340c91800eabccae80f b2e46ea5f4436a0130da00d831dc742d20a31335,,Add blackbox dataflash support for CC3D,Also fixes bug that failed to initialise SPI2 on all targets.
cleanflight/cleanflight,564,2015-02-27T22:56:37Z,2015-03-03T10:55:36Z,TRUE,2015-03-03T10:55:36Z,50cc8d966e99ad6d7dd7784ca6203958bea3bc3d,1,3,0ac1e8bd110598c48c31c86663a668133514964d 12851f78d09dc63a4a0ef0dd5f8cfa88de44fb91 b740c0225967088a0412475b2107c093bdab887d,,Use 4 8 series GCC compiler for Travis build tests,Since 4.9 is known to create broken CC3D and Sparky builds
cleanflight/cleanflight,447,2015-01-29T14:56:23Z,2015-03-09T21:23:57Z,TRUE,2015-03-09T21:23:57Z,3540962be746f997b6dcf5bd375b8b890e22b1b1,26,17,e56f46a7561625449ae47599c132a75090ddf044 6b0fea5952da024c1417e60cfb03cbcbabee73f4 d3324a9f0dbf7856edee8f4d68edc0941522639e 5129403c83269b06b4339019d316a5e59d3279bd f9f40fb98fa499a557e3b0acf27326e3fc0858b3 fd355caca6b5118102af7bf676cc15620dba03c9 7c263254b2cfaeeae4e2e99f55b682209e60cd89 7c62ec975534326b2b8cec4be76fc2d671eb27fd 7875b97aae9689b9dce72373f817245d472cc766 9dd7faeefafb999555ec404e212c5293dc4c4a59 6b37b960481a9c20150802d5abea19d0961463e2 1ecbdf3daeef4b73941a0e0fb05bc20ab909c902 f1ac4f8461b389a2e04e8a4ac557c7257a2d73a6 a67d2f8a9e30c54a6a1c38e307d5547471ebfd28 a96a12bd479f2b3403a7772dd841fd2df54c6c12 3abcbace72645de22140de8e1e5661cc70dcd488 737fbe02ed716e1c292b803a1fead8efbe27079f,,Port changes,Here are some improvement that accumulated in my 'local' branch. The changes are mostly stylistic  code functionality should not be modified  except: - i2c interrupts are disabled sooner on error - fixed typo in serial_uart_stm32f30x.c - some conditional compilation is added - 4096 is used instead of 4095 in ADC scaling
cleanflight/cleanflight,519,2015-02-17T19:04:58Z,2015-02-20T13:39:09Z,TRUE,2015-02-20T13:39:09Z,5699387ac9bf876665c0f8104eb16c5b1faaacbd,2,2,59198905c0151a07732555319ebfce04d8524c16 dc87b4bb000796ef14ece2030c157bf156a4229f,,Safety docs,Add safety documentation immediately after the introduction section. Comes from #498.
cleanflight/cleanflight,698,2015-03-31T16:51:25Z,2015-04-01T16:13:29Z,TRUE,2015-04-01T16:13:29Z,a990d61ae4d446e38ec0705029b9c54ddc29e2ef,5,16,af7097688f5ced99dc174b296756dd05f2dd61da b8d4b6a3876622e211916cdaab4123f1d1270234 26fa22c19fd1aca4c1918c09e8c21afa1f8db7ce 483c62a5852c91099b286a69a669f1a13584eac4 7899d3c38e39982485914292b07b996038e73288 ad1c73b381113a62866b3f3917b0c10943e8f333 f124eb692c13d3272415a9e6a35195d4637a672d 50fcb3b235710f40e922a4038b941912db5be81a 96a8004934f21c887c943936135dcce0a02b7d06 e7c418771a33bc1012ab054ca50eee864867f98a 35f3306efdc950ce0735c77fad3d07fc5eecab80 f46013effeb6f50339502bf1539c54fe63c8d253 4771d0bb831b36328264816c72cd88f6340d9fc7 ddcd1cf6f7342ef7757ebca587de754d997456a3 9dc7b9a42dc3c16ce45eaa8fabb1a1ad744668a7 5435030229fc076d3eb63c356576f9ec70d00436,,Support for build artifact upload to a remote server,see docs/development/Travis.md
cleanflight/cleanflight,513,2015-02-14T22:52:33Z,2015-04-19T00:32:48Z,FALSE,none,24cbdf58fa780f9229d5e8cba9fcbf6191fd2c71,3,3,6db518b274f8c9c3219da915624c33a34ab40397 4e0fd10c1fed70f02a73adbe0dff2302f91ea2e1 035f31137e00e4def692f7e554f69df31eadb486,,Added new drivers for MS5607 barometer,This change adds drivers for the MS5607 barometer. It is a direct copy of the MS5611 driver  with the only differences being changes to the scaling factors and the second order factors used when calculating temperature compensated pressure due to the lower resolution of the MS5607 vs the MS5611.  With regards to the original MS5611 driver files  I noticed that it seems as though the second order factors specified in the datasheet for the MS5611 were not used in the temperature calculation. I'm not sure if there was a reason for leaving these out or if they were just overlooked. I have included these second order factors in the new MS5607 driver files here.  This only adds the driver files for the MS5607 barometer. It doesn't include changes that would be required to select this driver over the default MS5611 drivers. From a quick glance at the initialization code it looks like it defaults to detecting the MS5611 first  and if that fails it tries to detect the BMP085 barometer. More logic would have to be added to discriminate between the MS5611 and the MS5607 if automatic detection is wanted. I wasn't sure how this should be handled so that is why I only included the driver files here.  This relates to Issue #512
cleanflight/cleanflight,669,2015-03-25T04:59:59Z,2015-04-04T21:59:57Z,FALSE,none,5c3e6bb658cf63a4f0f6b233965bd3ee3999ba5d,44,19,03917439b3d156408d65251d5904dd81e97c8573 796a817f691558faa5f7674a989f3cdda6d50588 d5102733d874c0a8ffc8df1ff4b0300e01a15aa7 90efb5f4d997c3d9b24f760ed3f367a803a07391 76abaac6245a13d9e0f628f6ca7cf795811109bf f36e1c168a336a9e0e07c4afdaa47045a6a98153 bf994bd227e85e36ddd4cfa08314515a248922b5 0662a3dacf854d00abb1f2ae0e8a6492ab4f7780 290c52a455409395e38b76ebdc76db7de8278cd9 3bc2c3b70e0c967c4df9a61ceae82533864a6140 76a1b891073fd9e15b23dcd949e09d3dcfec4609 02bf3e577b6473c7f3c8ea52503ec4c493c315c7 65583234967c7c90ddcec7faf384c445a101fb47 e45dc2553da0f65fc861fa6353d7c38d2f557f35 0104c7e568ae74661612048d522047718e31c629 115571c8a632d7c2bfd6f307550689e3709eae5b 0c3b013a4d02c5b0ad6a78ef2ee9570cabd8578c 3012e6db4369a64ea960e70e8d4e12833fe708d3 977e179ba67eba858031ad274b9490bdd2068cba,,Port of refactored beeper code,Ported beeper code from upstream and made some improvements (issue #648).  See "beeper.h" for list of beeper tones.  The 'queueConfirmationBeep()' function can be called to beep out the specified number of short tones. There are still instances of 'blinkLedAndSoundBeeper()' in the code -- these are tricky to replace because they synchronize LED blinks with beeps.  There are also still instances of BEEP_ON and BEEP_OFF -- might be better to have a new function like 'beeperOnOffState()' in "beeper.c".  There are now arm and disarm tones.  While the copter is armed and not flying  the beeper chirps to warn the operator.  If the arm/disarm is via the control stick  holding the stick in the disarm position will make the disarm tone repeat.  This can be used as a lost-model locator. These changes should address issue #317 ("Beep to sound on arm/disarm").  There is now a special arming tone used if a GPS fix has been attained  and there's a "ready" tone sounded after a GPS fix has been attained (only happens once).  The tone sounded via the TX-AUX-switch will count out the number of satellites (if GPS fix).  I did some "bench" testing of these tones  but I don't have a GPS on my copter.  I don't have a blackbox logger setup  so I can't test how the blackbox-arm beep works with the new beeper code.  Seems like it should be OK  but someone should test it.  Other indicator beeps (like up/down adjustments and rate profile changes via transmitter switch) should operate same as before.    The critical-battery tone is now more of a longer beep  which I'd say is an improvement.  --ET
cleanflight/cleanflight,663,2015-03-23T10:30:59Z,2015-04-22T21:53:44Z,TRUE,2015-04-22T21:53:44Z,00036952eb1ecd77b90ca418607c92295d06bf67,2,1,89131ecd4a13304bc0d5d5e9faeb4f0c84b85530,,Added a how to setup everything walkthrough guide as a README file,The guide explains the basic setup steps a CF noob should follow  linking to individual docs. The rest of the docs (the advanced ones) are listed and linked at the bottom.  I know more work needs to be done  but I'm still a CF noob so I will refrain until I have some xp. Others can chip in.  The TODO list in the beginning should be incorporated elsewhere I guess  but I don't know how the project todos are managed/stored.
cleanflight/cleanflight,881,2015-05-12T10:28:09Z,2015-05-14T18:54:53Z,TRUE,2015-05-14T18:54:53Z,79e5d26453b436b6c3df070bf598772aaad78745,1,1,3b95ae49e90cf2a087413b52bc194f6caf62ad4d,,Patch Gimli to fix underscores_inside_words in PDF manuals,Previously the words in the centre of a underscores_inside_words compound would be wrapped in &lt;em&gt; tags and the underscores would be removed  this fixes that by tweaking the Markdown dialect.  Fixes #860
cleanflight/cleanflight,964,2015-05-29T05:23:52Z,2015-05-29T10:13:41Z,TRUE,2015-05-29T10:13:41Z,5c28e232f59f3355918f1660718d215cd9ba60a4,6,2,31f933ac21a49f0668c84965e082cb7a09606607 c9349ce83b2258834154abaf7bf46048e3b96823,,various optimise RAM and flash usage,This patch moves more constant data out of RAM and into flash  and re-works the MSP serialisers to save code space.  Saves about 180 bytes of flash and ~300 bytes of RAM.
cleanflight/cleanflight,984,2015-06-03T12:49:37Z,2015-06-03T13:55:04Z,FALSE,none,8f8de36c13eac8c7360135c0e17b8fe580dbf660,14,1,3694ac5f5bd4317f5bf15f82a3599fe2ce0c80b9,,Implemented use of UART4 and 5 in STM32F103V devices,Enabled hardware UARTs 4 and 5 Should be useable in all STM32F103 high-density devices (F103R/V/Z) Also added correct startup_xxx.S contents for HD devices (was for MD before) Tested on STM32F103VET6 (like on ebay.com/itm/301433302819) Tested using SBUS or GPS on USART/UART ports 2  3  4 & 5
cleanflight/cleanflight,993,2015-06-04T20:46:30Z,2015-06-10T10:36:55Z,TRUE,2015-06-10T10:36:55Z,fd03e660f1106a928b01adb5be5572b461f98da2,17,3,5c6760fd827555ac33941db9535203f146220325 c1d1ef0ac9fa27708a65ad7c031deba1dbdfbcb0 920cac52532c7ae7a923577afafec6f79045771f,,various tidy up various things found when building with a C compiler,I had a hack with building Cleanflight with G++.  This patch set fixes bugs like missing includes and duplicate definitions that were found on the way.  Feel free to skip the designated initialiser changes.
cleanflight/cleanflight,928,2015-05-20T13:26:28Z,2015-06-10T14:50:09Z,FALSE,none,85b81003fea895d20ea556b1ccf495e2e4578eff,8,3,375b792b94d01e1e208631e3e3b4f650fe983cde 960de738812da74324c467752f255d3a8c48909e 2d3e5d75dd23ec52ffedacb6689ff2d62c3b3721,,IO Estimated servo angles,as in issue #925 we want in min and max the PWM value for a full 180Â°  and then minLimit and maxLimit are the physical limit (in degree) of movement.  Note: the limit use as 0Â° the center point of the servo
cleanflight/cleanflight,986,2015-06-03T16:20:53Z,2015-06-22T12:59:50Z,FALSE,none,9cf02d6fbe4bbc943025d3d868e9dc91250ef2ed,14,1,cee88f1abe17b404d04fa7bf93ca55ad42cd78f2,,Implemented use of UART4 and 5 in STM32F103V devices,Enabled hardware UARTs 4 and 5 Should be useable in all STM32F103 high-density devices (F103R/V/Z) Also added correct startup_xxx.S contents for HD devices (was for MD before) Tested on STM32F103VET6 (like on ebay.com/itm/301433302819) Tested using SBUS and GPS on USART/UART ports 2  3  4 & 5
cleanflight/cleanflight,1041,2015-06-22T06:50:21Z,2015-06-25T01:08:53Z,TRUE,2015-06-25T01:08:53Z,c55cada9b8fdb720eca46d0dc8ef071341c4828e,8,1,b26efd6256d2cbe5fba98346db9929c5dd78f3f4,,ld split the common linker commands out into a shared file,Done to make it easier to add new sections (like a parameter registry section) in the future.  Signed-off-by: Michael Hope mlhx@google.com
cleanflight/cleanflight,1067,2015-06-29T11:46:24Z,2015-06-29T12:14:41Z,FALSE,none,dda49402fb430014acd58edc1ae2069cddb0fe39,1,2,70a13a01ee6f511cabd8ffb38b58544f8fc5a326 31e65817a8e0f99ac45ec2e4993c8a592a4af7e1,,more robust ci server curl integration,- cleaned up curl parameter handling - added a maximum of 10 retries for publishing builds to the CI server - limited retries to 2 minutes of total time - do not show the build as broken if curl eventually fails to upload the build artifacts.
cleanflight/cleanflight,1070,2015-06-30T06:16:25Z,2015-07-01T11:21:08Z,TRUE,2015-07-01T11:21:08Z,c8e61cc9c3fb205bfaddfac6d304b2e264f5bc32,1,2,ebc0f53b5910260530fc1d5a1761621531d532a0 e569a71c606e7427800870c55339194c5524a395,,usb mark register accesses as volatile,Fixes the LTO build with GCC 4.9.  Tested on the STM32F3DISCOVERY.  I assume the compiler was doing cross function optimisation  saw that the same non-volatile address was read twice  and dropped the second read.  Fixes #763.  Signed-off-by: Michael Hope mlhx@google.com
cleanflight/cleanflight,1069,2015-06-29T13:51:46Z,2015-07-09T22:42:57Z,TRUE,2015-07-09T22:42:57Z,f4e09e43b1663fbda0ece0b24c0cc1a3cd01aeab,3,5,ba146d99d820d784a39b4ef29c996a509ce3da60 4062bd4145ee061080ad0d6bebc35f4b4a7365ed c4141d5f3c94029080888b0aa80b396787d701cb 9c58764dd5d10e147bef36fab1713101079fc523 2340bdaadbff4677c438bd73472014ab8218b74c,,Travis CI Updates retry failed HTTP requests Updated GCC to 4 9 2015q2,- cleaned up curl parameter handling - added a maximum of 10 retries for publishing builds to the CI server and fetching toolchains - limited retries to 2 minutes of total time - do not show the build as broken if curl eventually fails to upload the build artifacts. - updated GCC 4.8 -> 4.9
cleanflight/cleanflight,1073,2015-06-30T16:35:58Z,2015-07-10T00:31:08Z,TRUE,2015-07-10T00:31:08Z,8eb0542ee4afaad0b2029b9c0b151c95717e9e81,5,1,f0aec2e31df5860dbf7e90f34f667ad93cb28b6b,,Unit tests for BMP085,Tests the pressure and temperature calculations. Uses the data that can be found in the bmp085 datasheet. Also tests when oversampling is set to 3 and at extremes of temperature (-20 and 55 degC).
cleanflight/cleanflight,1142,2015-07-19T14:17:27Z,2015-07-30T19:25:27Z,TRUE,2015-07-30T19:25:27Z,8d4ef4524b67ef4325ad902cba3e0fe8dd625b29,1,1,f792ffa2e651e6060ccdb8691db11ed688f13dbb,,build add a target for flashing via st flash,This makes developing against Discovery boards easier.
cleanflight/cleanflight,1145,2015-07-19T19:53:21Z,2015-07-30T19:24:16Z,TRUE,2015-07-30T19:24:15Z,5eddc92f431e4b64f7b9fdcfecd2e83cd1cc21ec,1,1,d9789001829dff58ef4506e16afcd2cb8031f367,,Add a simple TOC to the front of the PDF manual,I think the PDF version of the manual would benefit from a table of contents. Fortunately this can be auto generated by passing wkhtmltopdf options to gimli.
cleanflight/cleanflight,760,2015-04-12T11:17:56Z,2015-08-03T20:29:07Z,FALSE,none,83260c61558b0682dc67ade3e9e720cba5fe2f36,1,2,9000e4392b6004629065ba4a187259ef0ab56c04 c50b5c7c0447fbba60198373fdbf7b5ebbf2a37c,Question,Change linker settings,add -flto -ffat-lto-objects  to pass build in win64
cleanflight/cleanflight,994,2015-06-04T21:16:45Z,2015-08-04T02:12:20Z,FALSE,none,da9f19277c476b84360ee34121adc55a8302b932,11,9,41f269d8d9032cebe43b76e06e5d5f38b93d5c6a 065a12108b9c8c03a9babb541796e530cc8b3f39 16e8407176defdbc04a19529873942fc35630104 33c2114031aa61592f61c300e84b057ff64f3248 85e6fa2e6446fe64f3d74a6ee9c3b7d53c699b0d 2c0df6dcbf265829d3679c7436ae64bee8f8a58e 36830f25c247d5100f0e8ef4368d98df41236578 79a6f8f7fd7c42f760f581b234646d3a50d4e350 d92f73ca546437f0693e9f069a9f437b1088c51c,,Lpf vbatt,-Fixed build issue I had with TCs -Added 2 new Vbatt TCs
cleanflight/cleanflight,1001,2015-06-09T07:20:26Z,2015-06-10T01:41:52Z,FALSE,none,none,63,4,237f4f92046ca7d8bc31ad7c294f65fbae6d2144 73654fc6da86e85c5cb5b0a6f20256ddfee78c89 ca694276b81095fb41a92df1ea48030c2f75099a 2bc8589025ba66cbd03a2a31ae6866a39fb0722c,,Cleaning main c,This is the pull request corresponding to issue : https://github.com/cleanflight/cleanflight/issues/957  I corrected 60 header files that was missing include and now they can be added in any order. I added also the inits that was not in the headers. Splitted main.c that was really too big in 3 files : - main.c to handle main() - main_initialisation that contains init() (the code is strictly the same) - main_faulthandler that contains HardFault_Handler()  I flew with the modifications on flip32 noticing no difference.
cleanflight/cleanflight,1188,2015-08-06T04:31:22Z,2015-08-20T20:39:57Z,FALSE,none,01139b5d6925f34f8a5174ce637a9639a97dc2f7,19,9,109678d17dfc8761145b4ff579a3da46addbead2 dbe860623e7b2f465724d19fd7e1fcf94e7f7aa5 31cd7edcba7e29fb3523855445bb06b90974aca3 37a237087778f787bb083282ef45c49347d6c5af f8f8366417823a43bdb40fe53c1b905536cd6fdf 732f5427decd66c3668b372731a24f4eae8b3e80 6a2c1d05bdeb5b332f815d9e650b1d820a8e8a02 fffd5ff7c17703a93a3f5a6b3a561b5a903d79f5 9933e4ac094cf9c9886b4b49d2f4e71cc7f86155,,COLIBRI RACE Support pull request,Please let me know if there has any problem
cleanflight/cleanflight,1222,2015-08-17T13:07:11Z,2015-08-20T17:28:38Z,TRUE,2015-08-20T17:28:38Z,cb75179309a0de6501e90513c79e35cb4e2aceb8,1,1,f85bd89947e99829f0f5fcb5aee8b96a27939887,Enhancement,Promote make test to a top level folder feature,Developers will find it easier  and many expect  to run the test suite from the top level folder.  This simple feature adds `make test` in the root folder of cleanflight. Associated changes also ensure `make clean` from the root folder cleans up after itself.  Thus removing a `cd` command from the iterative process of refactoring.
cleanflight/cleanflight,1231,2015-08-19T13:12:44Z,2015-08-20T17:26:16Z,TRUE,2015-08-20T17:26:16Z,316ada4c8cf8fae5e73be9468cf73d64f6186036,1,1,e7d4f7da7f58e1467c51a03a72b02eab07296854,,Remove duplicated mfpu fpv4 sp d16 under cortex m4 based targets,Simple clean up of duplicated ARCH_FLAGS for certain targets.
cleanflight/cleanflight,1243,2015-08-22T04:28:40Z,2015-09-09T23:43:02Z,TRUE,2015-09-09T23:43:02Z,e775d0c2d2cc1c7c547c1a82c66cb9fb1ad9038d,1,1,cf8a6f8f8be7835186d49631c097ba060e79b075,,Add command make cppcheck and friend,[Cppcheck](http://cppcheck.sourceforge.net/) is a static analysis tool for C/C++ code.  This PR adds a new command `make cppcheck` to Cleanflight.  There is an associated utility function `make cppcheck-result.xml`  which could be consumed by tools such as Jenkins.  Note: cppcheck run in this manner over Cleanflight is not fast  due to the combinatorial complexity of the many macro defines which must be examined. A slightly faster  but incomplete  run can be conducted by omitting `--force` in the arguments to cppcheck.  cppcheck has identified some code issues  which will be addressed in subsequent PRs.
cleanflight/cleanflight,1064,2015-06-28T15:23:46Z,2015-07-10T00:31:08Z,TRUE,2015-07-10T00:31:08Z,0ff5d2df28d9be612b090f16fe3f97ea597a824e,1,6,266d0d67263346a67bdc959aeb9c845145b0cafa 31f13e3d9c7ee3389a2515746bc241fb145a3c2e b8a9df2aa447c36ccc7f58666d695f9341fe6a88 cf8d0cf572db7460c5a0122f77a1e67efc679a0a 6b35964c34d90b4d2e9cedbc6eecfa96da3acc5d b88864d52d1895ae4a6c0d2c8226ba8f4a7ccd87,,tests refactor the Makefile to make tests easier to add and write,These patches re-work the tests Makefile to: - Do incremental builds instead of rebuilding every time - Build cleanflight into a static library  so you don't have to list the dependencies - Use the compiler to automatically update the dependencies - Switch to generic rules everywhere - Use a wildcard to gather up the tests.  I did this as I'm looking at adding unit tests for #1049 and didn't want to list the dependencies by hand.
cleanflight/cleanflight,1206,2015-08-14T04:55:04Z,2015-09-10T01:41:18Z,TRUE,2015-09-10T01:41:18Z,0a047ba302fb01986653e66d18476c9a25c4507a,5,8,a163613cf8dd51dd3ed67a5da2cf354abcc1ccd3 92c3d1ac1d1576f6575dcdbf9ebb5bbc47377903 6620be17683f6fd0ddc6639f635a7b2d1a4540be a03c0a4bdf384cbda943e96082f5f2066a6ec630 53a1d7bcd76113566c4b1b5801741361cd606e67 3878a7ea2ca25721125b4e07a4360ff4189163ab f239eb3f35148fa2451760f411163546da0787fe 241d30a68613782d33dd0fb1b9d22a98b811dcbb,,Created Unit Tests for sensorsAlign addresses issue 8,The unit test includes a simple independent implementation of a vector rotation. Each of the following sensor_align_e types are tested: - CW0_DEG - CW90_DEG - CW180_DEG - CW270_DEG - CW0_DEG_FLIP - CW90_DEG_FLIP - CW180_DEG_FLIP - CW270_DEG_FLIP  For each sensor_align_e type  three unit vectors and a random vector are tested. - {1  0  0} - {0  1  0} - {0  0  1} - {R  R  R} (where R is a random number)  The vector under test is rotated by using the functions defined in the test file and is also rotated using the sensorsAlign() function. The outputs of both are compared for equality. The outputs match for all test conditions.
cleanflight/cleanflight,1311,2015-09-16T04:04:43Z,2015-09-28T01:11:06Z,FALSE,none,8f02c976e53d2428181fd0132b6ea1ed0b3c06ce,1,1,2bd4000e20641bb6a72a54a0140e8d09e4e45da1,,build_all_targets sh before pushing to ensure a breakage free push,an easy way to make sure i didn't break any targets before pushing
cleanflight/cleanflight,1221,2015-08-17T12:47:54Z,2015-09-30T14:29:04Z,TRUE,2015-09-30T14:29:03Z,99d2ba60d1bdfcc737dd41de3316e265520074a7,1,1,210d6bcd119c92afb7a22b9e208ae47b726579b5,,Add new Makefile feature try make help,Use a one line Make fu to provide a more descriptive `make help`.  This approach adds to the existing output  by scanning through the Makefile for "## " and then printing the remaining text. Not necessary to print all options  however key ones deserve time in the spotlight.  ``` $ make help  Makefile for the cleanflight firmware  Usage:         make [TARGET=<target>] [OPTIONS="<options>"]  Valid TARGET values are: NAZE NAZE32PRO OLIMEXINO STM32F3DISCOVERY CHEBUZZF3 CC3D CJMCU EUSTM32F103RC SPRACINGF3 PORT103R SPARKY ALIENWIIF1 ALIENWIIF3  all         : default task; compile C code  build firmware clean       : clean up all temporary / machine-generated files flash       : flash firmware (.hex) onto flight controller st-flash    : flash firmware (.bin) onto flight controller unbrick     : unbrick flight controller cppcheck    : run static analysis on C source code help        : print this help message and exit test        : run the cleanflight test suite ```  It is also good practice to at least have a `make all`  even if a shim.  Note: There may be better descriptions for `flash`  `st-flash` and `unbrick`.
cleanflight/cleanflight,975,2015-06-01T16:55:33Z,2015-10-06T18:02:02Z,FALSE,none,95301919771b705ac6e08701289a9b325f3ac1ee,13,9,d2fcfc09067689d0b60a13b07b7ffcb39eb41e06 f267c527fd16d4b57599dfe072dc8f1c5507ff01 c90428feca5ba42f597eb638532e7508498ff40c 0e42a2d670df01ddc73bbfa9fd871d845a8cd4fc a070cdb5b93833dc8e9d673153ab4f31bd502bf9 a588768269b66ac6891a1a62fcc26b61e7a54ee5 ee240a53e4d0e881d9934db21f23e6edd2b20d00 2fcd597f207f2b16dbdc5a86581284f4709d082f 1c01f8d17933a158dfea58b1b2233c6245a954ea,,I have added new BMP280 barometer support in cleanflight,It builds
cleanflight/cleanflight,1316,2015-09-17T07:05:35Z,2015-10-06T18:02:29Z,FALSE,none,74e570ee44c9872ba3a60adf06b944a15baf78d5,15,4,6887fc146162eb6ffb84cca13876b009d548c5c0 099f09d60c4071c1ff65e8d1b37ae40abbb5960a 5f1dc8dac164d522ba17d52e83cf125d3e8b5c0d be88aadd59c22e33eb94ab851fc5786818ca1fc0,,BMP280 barometer support with unittests,This uses as a starting point the code from #975 (which is squashed into a single commit).  I have added unit tests to check the computation of the pressure and temperature against the reference values in the data sheet [1]  fixing a casting bug along the way.  The last commit switches from the floating point to the fixed point algorithm for computing the temperature and pressure. Since we end up rounding to the nearest 0.01 C and 1 Pa  this is perfectly sufficient  letting us save the extra calculation (see data sheet section 3.11.1). I'm not sure if this is the best course of action  I'd be willing to drop this commit.  [1] http://ae-bst.resource.bosch.com/media/products/dokumente/bmp280/BST-BMP280-DS001-11.pdf  Closes #975
cleanflight/cleanflight,1159,2015-07-23T08:30:13Z,2015-08-23T06:30:53Z,FALSE,none,22cf43eeb7d690b199d7e2a10dc36a35a1a15b4e,12,3,b85e77b20ab5b460f6ac57fe92a5b401a33f9029 937c35954b1f7d222be4b7cb4f6c46a2601cfbd5 b11b05737dbf433cf258b7f94298175785c1751b,,serial 1wire passthrough for ESCs with the BlHeli bootloader,## This pull has been superseded. Please see the new pull request for usage details: https://github.com/cleanflight/cleanflight/issues/1246 ### Old: ### IO - Program BL Heli flashed ESCs via configurator https://github.com/cleanflight/cleanflight/issues/216  Allow configuration of ESCs with the **BlHeli bootloader** via the 1wire (passthrough) interface. #### This will NOT work with ESCs that have a bootloader other than BlHeli. E.g. ESCs with the simonk bootloader will not work. ### Usage  The user experience is currently not ideal  as you'll need to start the CF configurator  go to the CLI  enter `1wire <esc index>` e.g. `1wire 1` to program the first esc. Disconnect  open the BlHeli configurator  pick the USB passthrough tool  click connect  click read  then update the settings. Power off the board and repeat. Still  it sure beats disassembling your quad to re-configure your ESCs.  Note  you'll need a UART/USB adapter on the CC3D.  Full directions are here: https://github.com/nathantsoi/cleanflight/blob/serial1wire/docs/1wire.md#1-wire-passthrough-esc-programming  Note  both updating settings and flashing (updating) BlHeli via this interface is tested and working. ### Status  I've tested the following binaries (for the boards I own). If folks could request support for/test other boards  that would be great. Send a schematic if you have one so I can map the GPIO pins  my email is my commits or on [my github profile page](https://github.com/nathantsoi). ### Binaries  NAZE: https://www.dropbox.com/s/1a88bf2jrt68ohe/cleanflight_NAZE-serial1wire-d91cb08c5e495bd892941d7af59443c3.hex?dl=1  CC3D bin (display disabled): https://www.dropbox.com/s/vx4ji4fsuw4e9yl/cleanflight_CC3D-serial1wire-8d3473a99aade980ef0380ff34d24edc.bin?dl=1 ### TODO  It sounds like @4712 plans to implement integration w/in the BlHeli suite  so all the ESCs could be configured w/in BlHeli suite w/o switching back and forth between the CF configurator. It will also be possible to switch ESCs without rebooting the flight controller.  Ps. to any developers out there  I'd love a code review on this. @samguns?
cleanflight/cleanflight,1024,2015-06-17T23:59:21Z,2015-06-21T21:34:27Z,FALSE,none,c38aeb79be26e70b2d816edd3533ee1ceebc76ae,7,1,52b8972f43d09ffb8e7bf548f6ad1c03bde5f94d,,Experimental Butterworth Filter for Dterm,Hi guys   In my search for good Dterm filtering I would like to test this one as well.  So far my results seem great on integer based pid controllers. If someone can help get it right in luxfloat it would be great. Perhaps there should be seperate floating point function for it.  ![butterworth](https://cloud.githubusercontent.com/assets/10757508/8221204/b2112a74-155b-11e5-855c-27717b6fda7c.jpg)  Implemented in: PID0-PID4  On luxfloat I just did a quick implementation and don't trust it now  but on PID0 1 3 4 works fine.  I didn't do anything on harakiri as that one has it's own filter.  To enable: set dterm_filtering = 1 set gyro_lpf = 188 (256 doesn't really work actually on naze32 boards)  Test hex/binary:
cleanflight/cleanflight,1406,2015-10-17T05:48:10Z,2015-10-17T12:42:15Z,FALSE,none,7e383827acf550228e5b9a138193cafb4e827420,3,2,534d881535d820512eb6779fd54bf3503e77f9f1 bd2693da83f9e604191dd10a287d1daf130267e2,,Fix ADC for F3,EXTERNAL1_ADC_GPIO always configured  regardless of the adc_params. Still needs rework logic wise in main but I think actually getting current working for everyone with F3 is more urgent.
cleanflight/cleanflight,1405,2015-10-17T04:20:39Z,2015-10-17T12:42:23Z,FALSE,none,1e017f5dd6500ca7a08f4a62ec0c63d4669e1b5b,2,1,534d881535d820512eb6779fd54bf3503e77f9f1,,Fixing failed gyro detection for SPI 6500 currently completely broken,SPI MPU6500 is nested below the USE_GYRO_MPU6500 in: https://github.com/cleanflight/cleanflight/blob/master/src/main/sensors/initialisation.c#L254-L269
cleanflight/cleanflight,1408,2015-10-17T12:33:38Z,2015-10-19T22:02:22Z,TRUE,2015-10-19T22:02:22Z,fac564733485d150db7b71c570fc78b81bc98449,2,1,f70958b6d3cadc96f7834f2aea0ef5928b87cb81,,COLIBRI RACE gryoDetection fix,gyroDetection will always fail currently.
cleanflight/cleanflight,1426,2015-10-22T21:41:43Z,2015-10-30T01:11:11Z,TRUE,2015-10-30T01:11:11Z,9d0e74b5df3d9e2c61a57d9634444dcc1ff50ef3,1,1,6f22677150649cc3cf861a57afbbb6e0a413704e,,Update build_docs sh with New Docs,Replaced Autotune with Gtune Added Boards: ColibriRace Paris Air Hero 32 RMDO SPRacingF3
cleanflight/cleanflight,1454,2015-10-31T10:33:25Z,2015-11-01T10:15:29Z,TRUE,2015-11-01T10:15:29Z,e76953cc2238b14c63f2dfb5ebb62d9e1a358609,2,1,c84e735d3d51c66d442d01a0505bb65ac9a16e0a,,Added Vagrantfile,I had some problems setting up a Cleanflight compatible Toolchain  as I'm already using gcc 5 and don't want to downgrade.  An quick solution is virtualizing the whole Toolchain  which is made very easy by tools like [Vagrant](https://www.vagrantup.com).  Using this `Vagrantfile`  the following is enough to get started with Cleanflight Development:  ``` vagrant up vagrant ssh cd /vagrant make -j8 TARGET=CC3D ```  The most recent Ubuntu Trusty 64bit Image is used and the installation happens according to the `docs/development/Building in Ubuntu.md` document.
cleanflight/cleanflight,1246,2015-08-23T06:29:29Z,2015-10-30T00:50:47Z,TRUE,2015-10-30T00:50:47Z,bdb4d755d8521f1d90b0bdfab58578f34c03f5ad,15,8,67f74121d6205d3c0a45aa47e80eb32caa1c9b1c 6d66aecf6dc097bb80490075b2de23382f47e580 3b6cc67f60e984f4d5b78e9a1f930a5db9fc31a9 f3bbcb807b55bbf602d2cf3ee66e9673f2caefd2 de6b4e2d7327478aa33b23df3f2561eaf3460b27 f43a4186f5dc0a0b8e50772c4e1df238214d3264 e466ed261819538046cb0fe2e78c0f823edbe5b1 f796f937918e85638910a772d77b9e345e82cda8,Enhancement,serial 1wire passthrough for blheli 14 0 0 3 2,@4712 put lots of hard work into this and I'd love to see it merged in soon. It looks like the next version of BLHeliSuite will supports the MSP interface (beta below) and I've tested it on my NAZE and CC3D. More testing/other hardware would be great.  All Binaries are here (latest master as of 9/30/2015 + this pull request):  https://www.dropbox.com/sh/4el0i13obglt5ot/AABStBuLr4hBXL414EfqCRSWa?dl=0  Per @4712's instructions below  download the BLHeliSuite.exe 1.4.1.0.3.1 and replace it with the existing BLHeliSuite.exe in the BLHeliSuite 1.4.1.0.3 folder.  http://www.mediafire.com/download/5yd45y0e2st4mry/BLHeliSuite141031.7z  Walkthrough: http://youtu.be/rf_HTdQfQhE  supersedes: https://github.com/cleanflight/cleanflight/pull/1159  completes: https://github.com/cleanflight/cleanflight/issues/216
cleanflight/cleanflight,1518,2015-11-24T23:31:36Z,2015-11-28T13:23:06Z,TRUE,2015-11-28T13:23:06Z,e257c91899c85585de09dca1ab9f371676319bf5,12,7,dcf990677da922da3aece40e67616117fddec4d4 230cc3c90e08b42c731cd652a708b91f9fade80f 3e95ecbba9cad52e11e6c62a330d3277ac99e7da 83d3d00163ab42039c99b86ee90459485e0f8274 a097e4912f8f731e9b9f958e4e62c52feb53c823 cda717dbe4c011dddca75c4207a2f25956fc8cb3 849797a03576d209746a6d8195a8b8c8c6b4a084,,Sonarcleanup replaced Sonar magic numbers with defines First cut of sonar test code,Corrected spelling in comments. Minor improvements to comments."
cleanflight/cleanflight,1411,2015-10-18T11:55:08Z,2015-12-14T00:08:47Z,TRUE,2015-12-14T00:08:47Z,06b76b9429b6169bca96b968d9ca69cf3781f46d,22,1,069994bd92aa55e09ef2ea3f1599376ee95e8771,,Quaternion based Mahony s DCM IMU initial implementation by S Madgwick,This PR is for merging quaternion-based IMU from my navigation-rewrite. It is flight tested on CC3D and NAZE and it gives better attitude estimation and a more locked-in feeling in ANGLE and HORIZON modes.
cleanflight/cleanflight,1010,2015-06-10T20:56:45Z,2015-12-14T19:38:49Z,TRUE,2015-12-14T19:38:49Z,60c9dfc0aa48cf504fa04545775404c9e7b46145,7,3,25ae2559a9d1a3799a6d524225b686060d97b1b2 3f563fa60ad2345555bd0917cb65ebbb513cbd9a 855be68589ef72209da453babae498e356dc6030,Enhancement,inital light telemetry LTM implementation,Initial implementation of LTM. (Garden) bench tested with mwp. Lightweight telemetry with useful selection of data and good refresh rates (5 / 10 Hz at 2400 baud).  Addresses https://github.com/cleanflight/cleanflight/issues/36
cleanflight/cleanflight,1541,2015-12-03T23:04:39Z,2015-12-14T20:58:23Z,FALSE,none,b8b53b490044b090984a5e0ee9e03c1a70a0f25e,3,1,fdd317f5bda7250d5f3dd722850fa07f1ff0d335,,Reinstatement of OPBL support for CC3D,Code fits if AUTOTUNE and BLACKBOX are ommitted (SONAR and DISPLAY now fit).
cleanflight/cleanflight,1318,2015-09-18T08:50:17Z,2015-11-17T12:24:56Z,FALSE,none,558f991798281d2889d881b9e27d00b524351e57,24,1,faee6ce45197d3a63236cca55fe80a50a509a658,,Loop synced to Gyro Implementation see 1186,See #1186 for discussions  Remove double MPU_RA_PWR_MGMT_1  Looptime to Gyro refresh rate  disable 2khz when acc used for F3  Gyro sync code improvement  doc change  MPU6500 INT_STATUS support // MPU3500 dummy handling  Enable full 1khz sampling on F1 boards (no acc mode)  Add MPU3050 INT_STATUS  F1 target decreased max refresh  Configurable optione (sync_gyro_to_loop)  correction watchdog  correct filter  Coding style and cleanup code  Cli.md  Bump EEPROM version  MPU6050 MPU DATA READY Pin instead of i2c
cleanflight/cleanflight,1071,2015-06-30T09:12:55Z,2015-11-14T23:33:27Z,TRUE,2015-11-14T23:33:27Z,27285106419db54728cfd19882e464abad5d1caa,9,1,ce2ea79637aebf8ff125cf4a0b9bc258effbda39,,Improve soft filtering function for reuse,Filter function can now also be used with different timers instead of only cycletime See https://github.com/cleanflight/cleanflight/pull/1028  @digitalentity This is what you need
cleanflight/cleanflight,1581,2015-12-15T02:06:30Z,2015-12-16T16:25:39Z,TRUE,2015-12-16T16:25:39Z,b65acb58851f4876311e0373cae512a685c2afb6,6,1,934ba62e441e3bc54db214f8a9ca1dbaf5833616,,Improve sonar compatibility with new IMU,New IMU is able to provide true tilt angle  this PR uses it for sonar calculations.
cleanflight/cleanflight,1600,2015-12-19T12:57:32Z,2015-12-26T09:56:24Z,FALSE,none,ba3f7dc33558e5b985f45d9da7f0f4dd0c80a007,30,15,af21c3ee30ceb2d1b3f9c5d52eace3fac344523e 10109cd5e3818c7fd41ec1d490e969721ffbcaa8 37c9b177d744571140fe0be63088d7ff50c4af63 f300edc53f502ae0808e0bcae9acba002398f040 c412439a5a069a3d2beca56db58cd0e9f4718538 17aa0ee5a37938f38354c9ed8f63106d58eb45d2 f06a6495d32b3683a0e8b38c375278dd07089398 960af16e8b5b3d351b0bcfe1096adbcfed23dd23 d47f31294e80173df7e7583366efc35b2bbe6a91 c6ea97973d6ce2d532817bfa73349cdfaa3d1530 e2b49cdf3e0e5c78cf33d7b4d42695003bfd579a 492261fb08d8c9ac9769bd0d56b02d853feada45 5770b1c048110bbdc3c69a0afb98ded315d09443 66878d780a6e1c1c6899e5c78d7e51f223c52761 a98531eb5a85344e95d274d5634ec3e6a22ae835,,First cut of PID testcode,Currently very basic and only tests the Luxfloat PID controller. But it is a start.
cleanflight/cleanflight,1631,2015-12-28T00:15:05Z,2015-12-29T09:31:41Z,TRUE,2015-12-29T09:31:41Z,5a533e80f9084bae6c60be05ace10c2955f4fcca,1,1,2354d004d68cb94ba8c1db4b4fe570dc67a8e94d,,Makefile goals corrected,Makefile goals corrected  "all" now a bit more meaningfull (i.e. all filetypes  bin and hex) and working. There was some questions and complaints about Makefile "all" goal on RCG  I had a fix for this on the betaflight fork plus a few other things  refactoring  CC3D variants etc. This PR only handles the make goal issue.
cleanflight/cleanflight,1624,2015-12-26T12:38:57Z,2015-12-29T20:20:48Z,FALSE,none,3a49058442448f26471a96af0f885b3c8139acbb,4,6,07498b923611354851887d05a8327792abb3f418 5e12911fa2bc77efdc6dadb8defb378150b004b1 5f3dd14af5aabed91c5870723a2c783d608c120a c8c77a3c444ba3947e19de2fa7ab6a7eaca2e6a8 1c9dd9bc6236a0222dbbb384a51815c4d2bccf7a 58a567d5a75af23662305abe72d73e3d9fd9c2ee,,Test code for PIDs,Tests `pidLuxFloat` and `pidMultiWiiRewrite` with minimal intrusion into `pid.c`. Tests: - basic operation of PID for roll pitch and yaw axes - that contraints to PID values are applied to avoid very large values of `ITerm` and `DTerm` when `rateError` is very large  Additionally  for `pidLuxFloat`  tests: - `ITerm` accumulates over multiple calls of  `pid_controller` (ie itegration is acually occuring) - `DTerm` becomes zero after repeated to `pid_controller` with same `rateError` (ie differential is zero when `rateError` is constant) - Errors of numeric integration used in `pidLuxFloat` are checked against actual integral (ie using calculus) where `rateError` is a linear function of time.
cleanflight/cleanflight,1653,2016-01-03T10:27:54Z,2016-01-03T14:41:11Z,TRUE,2016-01-03T14:41:11Z,83bfd57c8d7cf8c365edd03a50030bfcc300f350,5,7,07498b923611354851887d05a8327792abb3f418 5e12911fa2bc77efdc6dadb8defb378150b004b1 5f3dd14af5aabed91c5870723a2c783d608c120a c8c77a3c444ba3947e19de2fa7ab6a7eaca2e6a8 1c9dd9bc6236a0222dbbb384a51815c4d2bccf7a 58a567d5a75af23662305abe72d73e3d9fd9c2ee 17370f5cb0635e825e0baba1f3bdf803f34698ac,,Test code for PIDs,Tests `pidLuxFloat` and `pidMultiWiiRewrite` with minimal intrusion into `pid.c`. Tests: - basic operation of PID for roll  pitch  and yaw axes - that contraints to PID values are applied to avoid very large values of `ITerm` and `DTerm` when `rateError` is very large  Additionally  for `pidLuxFloat`  tests: - `ITerm` accumulates over multiple calls of  `pid_controller` (ie itegration is acually occuring) - `DTerm` becomes zero after repeated to `pid_controller` with same `rateError` (ie differential is zero when `rateError` is constant) - Errors of numeric integration used in `pidLuxFloat` are checked against actual integral (ie using calculus) where `rateError` is a linear function of time.
cleanflight/cleanflight,1648,2016-01-03T06:26:32Z,2016-01-09T09:46:45Z,FALSE,none,d04d449f518736a2e706740e11af6ba535d038ff,4,2,ec94385166bf2e50e907c5400b4f5d7f826abb69 95e95f07258dbb1b76843d0d842bbedae928ce71,,serial_msp test code,Test code for the _Multiwii Serial Protocol_ (MSP)  `serial_msp.c`  Processes some simple _MSP_ commands (`MSP_API_VERSION`  `MSP_FC_VARIANT`  `MSP_FC_VERSION`  `MSP_PID_CONTROLLER`) and checks they are written out correctly.  Round trips the `MSP_PID` command: writes out typical PID data using `MSP_PID`and reads it back in again using `MSP_SET_PID` and checks that the read data is the same as the writtend date. Does this for both integer and floating point PID.  For minimal intrusion  the test code duplicates some of the MSP command `#defines`  the `mspState_e` `enum` and the  `mspPort_t` structure. These should probably be moved out of `msp_serial.c` into a header file.
cleanflight/cleanflight,1622,2015-12-23T10:33:55Z,2016-01-08T13:35:31Z,TRUE,2016-01-08T13:35:31Z,a96f710ae8f350f77ec17fe899b9ec975c171cfd,53,29,57efb91d59667990c69527fe3506b3d4e1d12ae1 1ed60afb8db0d9f37a1b7f198b95bcfc7ccc6262 934ba62e441e3bc54db214f8a9ca1dbaf5833616 1f71fcf8567d5bdc5e389332001b3e3f67ab8059 995f40c2f44bd0bf1aab881bc927ef60d8ef4714 48cacbbd28ef546418e8f01275a030148909ac30 4a392ad5e536590dc02b98a04f4f48e3a12517ba fe91ba938264b89ed0b224451f422d7391c2eb15 38686133c972a556ac86c19415978a756e6be042 81a90dcb42db93833c57e0173dd4903a6eea45ba 56102f52c4152a69722b1e365ff0bfce4561dac5 b380bb79bea06a9033341ac190bf8415dbba7af5 e7a180816bcb80e315862c265202b5f0f96f78ff 14ade88ca9e2875b256a21248fc08ab50ac469b4 98458b623df019f7f43ffe090d718b8d2b13986c 6926c2057f9aca555a435fc46259d472c8afa7ce 9e1a69e230215c760719acbe19a678904ab5cffa 55e986e3388ef0e9e98f37bc3a4f5f063f4157f3 dfe8b5640b39ee61464a84843579470a0fabed5d e9e05773af5b18e4c6c1fdc9ab126fe83a4d53ca cd609c5019a2c4e496146ff5f28fafeb4900ffe0 25f7511e6b2a2b74c16bf611c980090882b1f6b4 534b79236f5d90c31def29c4f6cc5fe7b993598f c1407a7bcb0d59095594cbe52b12f4eb3dc7da4b 10a96b0dfc61cb3e954f2f156dd0eec631fac297 79144e96897c5cd96d16980851c96f0a6c401e50 a3ec0ccb2692970aaf6ea24b2fffb74b3654a75e e968e3c3e32445e71bb48c06a169158fb287d7d8 3ed586b75f2be3515a769f1ad36d250b35e9686e,,Updated RMDO documentation,Updated RMRC Dodo documentation
cleanflight/cleanflight,1173,2015-08-01T18:30:10Z,2016-01-11T13:51:12Z,FALSE,none,92673c3b3b0ab46017b43f4b8557f5a8366913de,8,3,c35d9f9ef564363fb31c09d5e20a3ad74755ed4f c8a467a27954cbcf3e0435f2b615affe346e3e0b db9e305f8e01f158be01426c6a8d6bf1ec74167f,,Sync looptime to gyro interrupt,gyro interrupt at lpf 42hz fires every 1000us  with this change the loop is executed as soon as a gyro read is available.  this should benefit soft filters as well.  currently it is settable on a profile using cli set sync_looptime=1  tested on naze32 loop time is at 2000us with accelerometer and 1000us when acc_hardware=1  should be 1000us for f3 processors as well.  future additions would be to calculate gyro soft filters in the interrupt so if gyro_lpf is set to 256 the soft filters are evaluated every 125us.
cleanflight/cleanflight,1163,2015-07-25T17:12:52Z,2016-01-11T13:53:41Z,FALSE,none,1c785ebe06b5b1641dd71cafaf9aa757190dfb3c,8,1,c683b348259a828b3c681d66ad5c531e1855e5c9,,MultiFlite nano brushed FC target,Adds support for new board type [MFBC]  Broken out of original pull request [1/3]
cleanflight/cleanflight,950,2015-05-25T13:00:35Z,2016-01-11T14:04:08Z,FALSE,none,df65aab86b3464d742637df392df11dedce0c704,12,9,cc1fc6bc1a8486e3384543cbb62e0cede5e371c9 b0778d08733e0f3ef10b4deb132c57e69741c3ef 12e63ecebe4e26f0ab138b772d8cbfdfb410f93e 4e78a4a62153e65aac59c4aafe082bf2176656b1 cedee20c558b332f5c015250b226701b7afd6ab0 fbb831a80d510b05c06847367218fbfbdb898722 e63982827f7cf2547029b6c23ad6bff9c5423ecd 5f769d71f195502c20eb6c78aa2f159bb09496a5 0ff53e69590587be1bf6f9ad94a48fb89e39eb52,,FEATURE added pt1 element for the derivative term,added a lowpass filter (pt1 element) for the derivative term.
cleanflight/cleanflight,1441,2015-10-27T15:05:41Z,2015-10-30T01:10:22Z,TRUE,2015-10-30T01:10:22Z,339779a403995fa6ba0d82211b11b614de2f981d,3,1,2af8a120c6b1fa6e3d057a4427ca3c4decd70856,,fix unused parameter warning in StdPeriph_Driver,Remove annoying warnings. # pragma is used to minimize modification to StdPeriph_Driver source code - produced diff should be easy to handle
cleanflight/cleanflight,1526,2015-11-29T14:20:07Z,2016-01-11T19:51:13Z,FALSE,none,510e4ca3cc3b149b98e063743fe4b609c8957c10,8,4,39d77facbaed608b525cc885b39f82b5305ccff0 a75ed35c48904554e7a9dc751e10c4904b1cd27f ad7972464c022d7f5cdfffa440c56b62fdf54df0 87eb93384e852c7f3ec07e449a11eb099746de59,,Initial cut of test code for calculateEstimatedAltitude in altitudehold c,Initial rudimentary test of altitude integrator.  Also added some facility for whiteboxing.
cleanflight/cleanflight,1673,2016-01-12T10:09:22Z,2016-01-12T12:19:02Z,FALSE,none,90ecc1854a7766e55b4938df31ba3b06239b9142,6,4,ed1722509e33b5234b97e1e2891912efcf15cf2b f041fdd878c6fe3c8e216bb476764e0c98f31fcb 136b6d2aee9660d338592588f847b27bf4a7cfce 09e20bc20c470e92d0c79033cde618f2f1764ec4,,Fix usage of macros w side effects,Checking usage of MIN/MAX/ABS macros and making sure that no double evaluation of macro arguments is happening.  Since MIN/MAX/ABS macros are evaluating arguments several times  it may lead to unwanted side-effects. Fortunately I was able to find only the code below  which is just a minor inefficiency.
cleanflight/cleanflight,1663,2016-01-09T10:07:19Z,2016-01-11T11:33:48Z,TRUE,2016-01-11T11:33:48Z,d7ed116b1e94de7f023adbf8f1ace24edf23906e,5,4,43189c331053a36790dd2e56c93b20dfc6905fab 38c0d7aefe7dec95fe4f4426ccd9e6dba4f67aba 89b5044b11fabc467825f6994c9941007119e93e e8cd9ab0bc56b801ec1398ac7f249c7619978c0c,,Serial msp unittest,Continuation of https://github.com/cleanflight/cleanflight/pull/1648 after deleting and recreating serial_msp_unittest branch.  I've moved the the MSP command `#defines`  the `mspState_e enum` and the `mspPort_t` structure into the `msp_serial.h` header file.  Note that I haven't prefixed the MSP command `#defines` with `TEST_` - I don't think that is the correct approach and think your comment was probably because the intent of the tests wasn't fully clear.  The tests are there to test the actual MSP commands  not a private copy of those commands. If the test used its own `TEST_ #defines` it wouldn't  for example  catch if someone inadvertantly changed the value of one the MSP commands.  Ideally there would be a test for each command (and every new MSP command introduced should be accompanied by a test). We are nowhere near there yet  but this is a start. I do hope to add tests for more of the commands over time.  Sorry about deleting and recreating the branch and so inadvertantly closing the original pull requests. Since nothing had been merged this seemed the quickest approach.
cleanflight/cleanflight,1678,2016-01-14T06:10:18Z,2016-01-14T07:27:45Z,FALSE,none,d0790b9c47df8ba727dfa5921b0ce87ce283038d,1,1,a23e3da73794a4979aff2f4d30f6cad0b2ab8092,,Added script to dump cleanflight CLI config,Hey there.  I wrote a little bash script to make it easier / quicker to dump the CLI config from cleanflight and derivatives. I think it might be of use to others. Let me know if you want to include it in the cleanflight repo.  Cheers   Michael Keller
cleanflight/cleanflight,1498,2015-11-17T12:26:06Z,2015-12-22T08:40:09Z,TRUE,2015-12-22T08:40:09Z,6ff307b0be51135c1e528004a5171a3da68ef6dd,25,1,10a96b0dfc61cb3e954f2f156dd0eec631fac297,,Gyro Sync feature Loop synced to Gyro,Long story short: Rework from https://github.com/cleanflight/cleanflight/pull/1318  Remove double MPU_RA_PWR_MGMT_1  Looptime to Gyro refresh rate  disable 2khz when acc used for F3  Gyro sync code improvement  doc change  MPU6500 INT_STATUS support // MPU3500 dummy handling  Enable full 1khz sampling on F1 boards (no acc mode)  Add MPU3050 INT_STATUS  F1 target decreased max refresh  Configurable optione (sync_gyro_to_loop)  correction watchdog  correct filter  Coding style and cleanup code  Cli.md  Bump EEPROM version  MPU6050 MPU DATA READY Pin instead of i2c  Add more targets and corrections  correction to CC3D  ident  MPU6500 correction  INT_ENABLE MPU6500  add interrupt mpu6500  MPU6500 corrections from rebase  MPU6500 correct  Final fix to compile // ready for testing and review  MPU6000 / MPU3050 Corrections  Add CC3D extiConfig  add mpu6500  Fix intStatus position  fix returns  Add COLIBRI_RACE MPU INT  Change CLI name to gyro_sync  This is shorter typing and speaks for itself  Fix MotoLab After rebase  Add motolab  Full gyro Sync rework  Idents etc  Doc update
cleanflight/cleanflight,1504,2015-11-19T12:29:28Z,2016-01-11T09:23:38Z,TRUE,2016-01-11T09:23:38Z,315aadb8f627eccb1edb15d211f8a63d7f8a94fd,17,1,cb941a7041a7ddcb70e6a3f1859399dd25a6c5b8,,Cooperative task scheduler,A very simple task scheduler to improve latency/jitter.
cleanflight/cleanflight,1724,2016-01-26T08:46:20Z,2016-01-28T10:41:08Z,TRUE,2016-01-28T10:41:08Z,af436f0d9ebbe290436353fa138652fb7dde5bcc,1,1,0dc0b52e1c2e140b855e3618f3c1aca8c25d435c,,Add support for TARGET as makefile goal,Recursively invoke `make` with TARGET set correctly. It is possible to specify multiple targets on make command line. Special goal `all_targets` will make all known TARGETs. TARGET-specific goals are passed correctly.  ``` make SPARKY NAZE make all_targets binary test make all_targets clean ```
cleanflight/cleanflight,1775,2016-02-06T05:52:16Z,2016-02-06T17:17:11Z,TRUE,2016-02-06T17:17:11Z,1ec0a08d486d29092bcab7e4da1fc2c1238ee2e7,11,3,6698afaf5ab28c1e35dc7a9170dc0059f5fe3aa2 48fdf4bb8961fc0ed96ed27a1b4b52bfb515135b 8c957b3f0beed7d0558c69f751f2dc36d37073c1,,Lux Commit,In place of #1774
cleanflight/cleanflight,1563,2015-12-12T20:25:33Z,2015-12-17T22:30:21Z,FALSE,none,64940be36fba3838fa16551888c2d952dc5d7591,7,3,799191f5f27b430e091c9ac3380ba55d0192baae 7815bbcc3432e269a559f60b851ab898e27cdfdc fac0255981d76dd2b94ff9689b1b55f8d5aa487a,,adding Jeti EX Bus Receiver,Add the Jeti EX Bus receiver. The telemetry is not supported now  only the channels are processed.
cleanflight/cleanflight,1806,2016-02-09T23:34:11Z,2016-02-18T15:33:19Z,TRUE,2016-02-18T15:33:19Z,31dfcc0694df56010fa8b3ea281170eb26ba5257,12,1,583b8c5ceacb70ff24867b91a604479aaa322672,,Cleanup lowpass c replace by pt1,This will cleanup some code. I think pt1 is enough for vbat and servo  @ledvinap  What do you think?
cleanflight/cleanflight,1834,2016-02-16T18:25:45Z,2016-02-18T15:50:14Z,TRUE,2016-02-18T15:50:14Z,5b1a8a7d822c15669d496492e94f6f94bfd774df,3,1,9581d4f94c99170ac2e34203667199181ecc8bdb,Cleanup,Removed code in resetConf that zeroed already zero items Added test code to check,Removed code that set values to zero when they had already been zeroed by `memset`. Each item removed has a line of test code that checks that it has indeed been zeroed by `resetConf`.  Saves differing amounts of ROM depending on build `#defines` for build target. About 50 bytes for CC3D. 184 bytes for ALIENWIIF1.  Fixes issue https://github.com/cleanflight/cleanflight/issues/1825
cleanflight/cleanflight,1687,2016-01-16T18:21:58Z,2016-02-06T16:06:48Z,TRUE,2016-02-06T16:06:48Z,253c622851e405ca7f0bd56083940df5bf2e22eb,6,3,e7712697664226711f8f3fb47ac139d153bc31df 6b3e9d0cbf955130078ff89a8ab9ff703efdfed7 cea5ede1c7338904e2ac15e3598f775aeb0353d9,,Initial submission of scheduler unittest,Just one very basic test at the moment: enable one task  call the scheduler and check the task has run and has had its properties updated.  But I've done the yak shaving. I plan to add further tests in the near future.  By the way  I love this new scheduler!
cleanflight/cleanflight,1326,2015-09-19T17:40:55Z,2015-10-06T17:23:35Z,TRUE,2015-10-06T17:23:35Z,aaf440a45720019bbdb3cce699b163971dab9481,36,10,b46d56a5bd691ee435bae53a1d78123c5fe6923e da46d9f1d215101ae89640653e4381d821128097 0361d161fb3bd60b170678a0da319b00b3e52e09 678c0413cbdb3d5653a547e1003d35d928c8cde3 85ba1eb0bdfb6174318e41c1cf6f82075c26f32b 501c83f85199f9207a547b0e951723e66eacf429 6fb500f58033f04a2685bb753ac81d9376ecc30c 06ceac06146452b3c041e65056c48aae73e82ad2 aac13914f9e631c5ff56caa637d29a333480c5d2 07d985ba5c9e54a31bdf18171bfdd3282166e73c,,Naze32 Revision 6 support,This is still work-in-progress.  There is the MPU cleanup in here; there is much old  unused and duplicate code still to delete.
cleanflight/cleanflight,1575,2015-12-14T19:10:35Z,2015-12-14T19:39:04Z,TRUE,2015-12-14T19:39:04Z,0ec7c3df362eae566c7d4d2e508b0a99ed9b5925,6,1,1e098bf1990feab5dc4987526a9557b6e54fc28c,,Delete MSP telemetry PR for 1106,Saves ~350 bytes of code space on F1 targets and reduces ram usage. MSP telemetry was not used by many people.    MSP is not considered a good telemetry protocol - it is bandwidth heavy when compared to LTM  Mavlink  etc.
cleanflight/cleanflight,1857,2016-02-20T15:31:52Z,2016-02-25T15:27:17Z,TRUE,2016-02-25T15:27:17Z,05a0322dad93f4431165bda71ed3fadbb753a36a,1,3,a277537ec413cadaf497ced3c3f2b45c9a5b5c6a 3295b244335a8b53256ec0d59d7a9d6d80f9c953 afee5a6412db52a5ce6ddb66ee3fd3491859cfd2,Documentation@Cleanup,Fix Makefile make help feature,Some simple typo and string clean-ups to the `make help` feature.  Output now prints cleanly as:  ``` $ make help  Makefile for the cleanflight firmware  Usage:         make [goal] [TARGET=<target>] [OPTIONS="<options>"]  Valid TARGET values are: ALIENWIIF1 ALIENWIIF3 CC3D CHEBUZZF3 CJMCU COLIBRI_RACE LUX_RACE EUSTM32F103RC MOTOLAB NAZE NAZE32PRO OLIMEXINO PORT103R RMDO SPARKY SPRACINGF3 SPRACINGF3MINI STM32F3DISCOVERY   Default make goal: hex         : Make filetype hex only Optional make goals: all         : Make all filetypes  binary and hex binary      : Make binary filetype hex         : Make hex filetype all_targets : Make all TARGETs clean       : clean up all temporary / machine-generated files flash       : flash firmware (.hex) onto flight controller st-flash    : flash firmware (.bin) onto flight controller unbrick     : unbrick flight controller cppcheck    : run static analysis on C source code help        : print this help message and exit test        : run the cleanflight test suite ```
cleanflight/cleanflight,1904,2016-02-29T16:56:35Z,2016-03-01T07:27:33Z,FALSE,none,57295807084736b131ac61344c4c5387bd22f0ad,2,2,320a2be587c3f87c3d48b38fce7eefa343aafb3d 24c07ca3d7ff7d0e0eda3a774ab8c7fa0f0503e2,,Add external bmp180 to spf3,For those who want to convert an acro to deluxe.  This fixes #1903
cleanflight/cleanflight,1912,2016-03-01T15:43:05Z,2016-03-01T18:12:10Z,FALSE,none,823eec07184344dfec80da864d91a2905b79b7bc,275,130,86d96f99d46636d9918f359e6457831a6d3ef75a 6412912fd61c167652e5fe777852130f112332b1 3b6cea15bdcbc860840da2c6bc0d9c3a1a3cf376 8600e1241e2c279ef978bb403f42828da02a4e7d a1c3b34c678c666ef409bf4e9760137d67b9f7ac 3f8e9763511e94c488592b57771df29630662522 c14b5c6afe81a05468188a82cc2be8c3f052594a 96f8c29416488986137190b597914ab90b01c063 1e690606457060be4dc3d33b05037855ff86f13d e896fc54e76c2efcb7914c5df41b244136db4a2d 80e5a1b5ec835623a9b72021040786e00e159c48 6c55dcdcc7282a093fe5fb9cd01bde46acb834b8 4373677867e60ba7156eb0ed854085a8b3b0d1e2 271d10f48d8a8d43c0c629e4492fe03032050d0d 3b3be67807f979e3de60cdd3049c9fd21d8870f9 811f986068280b9d625677ad2219908cbb0902fe 2b1199889e1adfb424bc8ca69a78326350b32748 2ce0532acc92d53c0fa4f64000f53195b7807a6f 493d5a26736990b18753977a595c6980589fc883 155cf8ba4bfa17fd12c575d4f1f3a217a34b340b 84f3fc6b59d58422e1a2a3b9a94bc5d8681c6941 f8a49d9f85a78744352f7797fcaa8dad327c7aea ce0bef523b5188347328b7338480c781b38dff62 13b1ba22c499f3eb2a7534d718e3b06fa025c24e 16b2ce80b0af8fd55719b450da03addfbed730db 1b00c05ffedba7ede52479f9a60146035b2e5a00 79469201e0cc3c13e6569df69c23344152c274de 5065a65c43dccfec105fc2747c92b84df4fd9faf d91ea06315d42e7aa1db03d136fd7ef09babba8f 56d9eccbdb8cf8deec24e4374823c9f4bb303299 723ce15592e98550fa17a9d6401439ca768c8fa0 0261c30b6c6ece1d18bf292fa1395aea189af3b6 8e7110055f0bafbbbe6a097468d8f50f0c19fbd1 11e67431c30d1241922076305b92966941dbf32f 84ec44bca2c2c3c4869fe708f50582430b38d3ff 0dd8fb318449d19abd49bfa1316fb549c3c0e2e6 a3a32a9ca55fb5e94c6b32d53a9b7d97e661f33f 57ee7e96f32e8e2869e8e57e2d99fcc5c662ccb3 3e180b7211643465a4cfdece23f050ec39033190 32a0d5bc64d218196961d0ee8b3dee113cfa6113 57c23c8d92a57b27a6121a2f4122bb7c4ecd5499 0e4661398ec5056af3c14726b573df802a215104 1c15fd7ddb59483c3106a1c9f83d523285e9b763 15aec7b0776ac81e7325ccd99ab14cbc5e3d90a7 9d0a9d2c43c3466da9d7d20577c09291e2b4c852 d5e5833b32dfccaa000764c7ca9708c7dc132eb8 86ab1a8bc23045407a5bdd88820e0e70677e7ecf e0d6921fbefeb254fd7f5f8e0bc5b58ac9078d79 eb0606469a904347235efe035c7bb4b7f90a074f 0255614d92a0ebc8df893ff7c1ca674f8cf19b97 0b41aa7c379c91e2d7b7ffbc88cd71c1f2793238 c34005195b753f284eded4bd45f40cb7d1a0016e 147a6486ababfc4416e636014ad0cbbd04234bdb ef7f1efd6b0ae54df79a167ac332e980fe83052a 9eca8801a9ebdb9b49584682fd126211919f3a69 ef37b4244ccfe447fce2013afdaf53ca160b19f5 3ff6dfc425fc789e5d4392e22f5ba5f672f611fe d5b51ff663722f320cc2e508d489c1877a27bd87 1dbd134185fc18e9137d4d30ca926c577ea03ef7 a1a59a0d592a9006512e6c83070e13de48e117c4 1969f25c9bbfb14c84aa933f0dfe2c141ade18f8 85efc975c0be6a6e0a94ea3a8cc5fd31dd986a2b 87d78839ff8eadd78d95072500865fe63b5080c0 307d6539bde40ed64f4dfa10141a2c0393975503 f59b82a6002d94adc1af4ee4fa91b0e0d003eb9e f4c211bfc49488dc8d23b6bebf26698c41929a07 4e2bdfcad988da9e2d32b2a622fcfd4ce6dec34e 4da1df5e1d7696c86eccd3eb6b0d84c20d3c2f64 5c24204e0e68e0933f92e2136c154071eb23197d 28e5dd8bc9ed70732a5a20cfa3a1bcf2b887f109 6aa6f82d5fe6d0cd84be23a160130a9024f3b10a ef66683643b9d72bcc8e5ae08bbbc6a54c2eb651 f2f22dbdd12c27e95fedf7f7bb985171d8fca436 17f5786be33b85e7badebd4f44457ae7a18585b0 20f532d2785fc2ed4f2bcee4da4a09b0c45864e8 84bf52f5a697bbcce677671f91834eec4e456bf3 51766b947b1070020153d366ae00ca966560df1f 7d7a8712b481ea9496db32f0eb731aea72059f3d 3687fb451535ef189776a5a7dd8fc5ff667f5b1a f15a543db3ad494beebbbde455c9acc715a3639c 6ed7a695f48d71bb4f16e7f0f31962cc84806616 d960714a512822af7325346726db4fea29f892cf e876b42c960f81618848e28ec2e328cba159e9b3 18a94d7dcb4ee6e911020bd87b4ea6b7abc38b53 d8a4b7a86fb2d84d7df7a4bfaf62c1d254d79295 0825fb5c3daa487e36cca07f2661bb2f46899778 91618d8f4ba9fbd60bf78f4755df11509f70ca66 1276f830507bd8ad364b5daaae69a4451c4d73b8 dc8c959483f90fa2152b6a3c8777d00f84d143c6 9d80eb8a5ada84471e97b40d78806c2adf3cc3fe 9f7e9cf558b86b8335320357da0463c4acedf182 d64a3ac7a6fe1c73b6efc344f92422085be58d18 427b46bf4761b3a5718697fbe7048bec4a414d53 4108fe53e8b4c97043f050e6d01687fe549e1934 7a7c94a70555d8d1b4548405d4204a9c9ec26c1f c4af093c79e03049fbea959ce5f9280e262323b4 3227d169db7c8e787502d170494d68457528dbe4 47cbdaeb314c302ae755d386c4acb604d56c15f1 e9ec4d3e81ca2e4ee897d06f6acd6a821f19a32b 4c77e439c18ca5136ae859394c76f7c7afe7aa77 df634c84008ffd660d351072a43dc3bc4b967889 7f010af3634259452f3efffc1eb21ae8042ec137 b629c5720b240c755311c2215fc45896ad4d5562 5bd225334979a401ddee6cc68a5b87e049008da2 bc0cd88278978007a7a45cb5d116588293b625a5 af13dd94d3b35ea1359f46f57cf810cee9e646e3 c713638dc0ac9b23c87b3a11372858e41e74fd01 e9c5348079943ad3180e9374e757442320d6e767 31eda267d5918a16d535f94b7a55c51cdbb7ea37 e47806492d13033ee71a637c280e047417a2aeb2 1efd97ecbcf1fa2582c61be89722c6df71b7e32f dd84a0d386dcc8ed564c47ca332006a505cc07b2 0f73f456e89204cd5ebe66c2f543734a6c945bd0 37786a6b95e13250ef0d6f733a42ba4c30f92c5f f7effd91be234986d985704c6c3fb9ee603098ae d794a3f8a8e3ef633624f3d64046325a86521a6f 266217be51336910223280a1ca1eadd0904a1c2f 9405d41e8da485cff4a607896b704992459a10ab 4cf504917f116584bd96a48df69d2dac5e65b6c1 bb90da95aafd7390b72d814591e47faaa40958a3 bda3d0da6bcf8c26452e29d5ac3e30efc8682f93 7b1e16e1931ad0545529c7cf8c22ec05c2eae914 22aea18b92d90e7c9ce1c906d9f41e027adaf2b2 46750de7f9d7fb44733efb7d6fda68149d2dadcb 0953bf00a49f077f94ebd942bd224bb7123610dd 71fe5bdf247a8700ac255dc1c10534d40ea7091b 4e6be6f5ca41f224e8adb77782fad28167ec38dc 7c8e45069013d9923f382466741f4a3bc3296ab4 172c181b6cf5c1c42d0304603ab7705ef405728c b9192b42670ecef9d02d046a9088b42a56a9a6c4,,STM32F4 support for numerous boards,You will find most of the necessary adds which makes support for the following STM32F4 based boards :   REVO & TBS COLIBRI (which is used on TBS Gemini Hex6 gear).  This has been proven to be working in real situation.
cleanflight/cleanflight,1918,2016-03-02T22:37:14Z,2016-03-15T21:05:15Z,TRUE,2016-03-15T21:05:15Z,c5747dcf5b1704d5ad040cedac9e041c5b0f7abc,3,1,5d12456887bd713da71e2709fd62cde3e3d92a92,,Fix pwm mapping on NAZE,drivers/pwm_mapping.c - fix I2C remap - enum was used in #if  test was always true due to C preprocessor rules  pwm-mapping.h - fix broken code refactoring. Code generated before this fix was correct.  Add `-Wundef` to Makefile to prevent this kind of errors in future
cleanflight/cleanflight,1982,2016-03-25T13:24:31Z,2016-03-25T19:30:12Z,FALSE,none,none,9,8,d96123d8f78309018542c834f4ade11716ec8b55 92ed8b29aded0190b5ea8a7c325e3ec9c78ff1b5 34db21e7de02c11d713fb405970b13423b556b5d de529b49f817df580eae06c157e67d2d9d1b40fa aa15c5248954eefda5006661fc5a5e05f914a4f0 35cd2df7e6f1d012d01dad8467eff49a07b02952 878927012530c6eb793373469fbc7245885c7ed9 c0b8e517b2b2e67cbd334910d509bdd81edcb595,,V1 12 1,Hi  if we enable rx-msp input  sonar no receive any data and we can not use alt-hold.  Board : naze32 sonar : srf04 -> Motor 5 and 6 Msp : usart1 or 2 baro : MS5611 -> I2C  thx  Ahrovan
cleanflight/cleanflight,1981,2016-03-25T13:23:19Z,2016-03-31T09:32:42Z,TRUE,2016-03-31T09:32:42Z,4937493ee00649b309b35141d2db75b14cb88b71,65,2,ece1b0fb60f5ec74bcabafe1340728a65e9e4949 29cce9e1cd42df7f36aa82896aee362cfdd29711,,Config structure registration improved,- use `__pg_registry_start` and  `__pg_registry_end` to find registered   config structures - hide config registration into macro - use inserted gnu ld section on unittests
cleanflight/cleanflight,963,2015-05-29T05:10:05Z,2016-04-01T19:39:04Z,FALSE,none,c6a8353618b8e0e7c42100b949f3aa6cc2782ae8,13,7,889ed7c04ebd1d4fa50abca7f6f10650d52dc013 6fc3926cd891184c6b6069ba1706a7087fe42404 8f64023a7a48a28d4ef3b7b56eefc08859d9ef4c fba894f25c129c1551ee6a35e164d52e5acd23a5 fa6e8b61cf0430c971eb17e5461103de3e83fb88 83b381c521a79856b66946346a116f8c03562445 1ba33983032b3ac9b906a91365b230e729cb4440,,msp auto generate MSP messages,This is is proof of concept.  If you're happy with it then I'll convert the rest of the MSP messages in a follow up pull request.  Convert the hand written message encoders in serial_msp into ROS msg format message definitions  then generate encoders from them.  The advantage is that the messages definitions are now in a machine readable format  so potentially the Baseflight Configurator could use the same and automatically get support for decoding new messages.  I plan to use this for a C++ decoder on a smart display/logger that understands the MSP protocol.  The problem is you need to install a tool before building.  This could be minimised by checking in the generated files  then the tool would only be needed when adding or modifying messages.
cleanflight/cleanflight,2009,2016-04-04T07:25:35Z,2016-04-04T12:26:44Z,TRUE,2016-04-04T12:26:44Z,0c42ed17eecb685efc80102f1deee6c32d17bc21,8,3,663fab4bb14a0a2f80c668b946bef294a4df1e03 18d08ea1bee0ffd9332a7d99a5dcc28972a0b858 bbac077d1f1349d902764c69452e37a9d8875f73,Cleanup,Moved each PID controller into its own source file,Moved each PID controller into its own source file  for better clarity and as a precursor to further unit tests.
cleanflight/cleanflight,2003,2016-04-02T15:24:55Z,2016-04-06T01:31:02Z,FALSE,none,3cfb4fe2f15bc537435af7459ff89a946f047955,32,2,47348dd696ab7938043f35e6a21ee2d25fb05a18 5cd4097ff516ece75d958b4cf2fc17920fc93efd,Enhancement@Critical,4way interface,Should be tested using compiled hex files from [here ](https://github.com/4712/cleanflight/releases/tag/v1.12.0-4way-interface). It only works with BLHelisSuiteBeta14.4.0.5 or later. Automatically detects SimonK and BLHeli bootloader. Superseds the 1-wire-pass-through solutions (consumes around 3.5kb more flash).
cleanflight/cleanflight,1996,2016-04-01T01:02:14Z,2016-04-06T22:40:53Z,FALSE,none,ee8b5478e68c75b80fad5f6b68c9c3afb0961f1e,25,1,47348dd696ab7938043f35e6a21ee2d25fb05a18,Enhancement@Critical,1 wire pass through vcp,also changed uart 1wire-pass-through to avoid need of FC reboot after exit.
cleanflight/cleanflight,2019,2016-04-06T22:25:43Z,2016-04-16T16:31:16Z,TRUE,2016-04-16T16:31:16Z,d82697f32d2d86b690b06dfbaeffb5f263ef6ff3,25,3,d7bc69f0800972c3d5b1310914c6307572c4c992 3da3d0d803e63040d99f1ba501a4110fe8f259f9 4060bed68e4ee52a33aa8293f2c7c43103c12c9f,Cleanup,cleanup for 4way Interface for ESC configuration and flashing SK and BL bootloaders and USB VCP support,cleanup for pr  [4way Interface for ESC configuration and flashing - SK and BL bootloaders and USB VCP support.](https://github.com/cleanflight/cleanflight/pull/2012)
cleanflight/cleanflight,1914,2016-03-01T18:46:08Z,2016-04-17T22:47:48Z,TRUE,2016-04-17T22:47:48Z,0b78f519d52afea9ac271302b0446619909de45a,3,2,052aca2609223c1a64aa6ab733ab46c13f1d8045 0b78f519d52afea9ac271302b0446619909de45a,BUG,Fix issue 1837 alt hold jump when enabling,Fix issue #1837: avoid mixing up rcData and rcCommand when calculating Alt Hold throttle value. This often causes a slight jump or drop when Alt Mode is activated.
cleanflight/cleanflight,2012,2016-04-06T01:27:42Z,2016-04-20T19:09:41Z,TRUE,2016-04-20T19:09:41Z,63a875ef3690421482d89ad78bf6f04b802ecbd6,30,11,47348dd696ab7938043f35e6a21ee2d25fb05a18 5cd4097ff516ece75d958b4cf2fc17920fc93efd 9965998ae3ea86aaf50959febd83cdb61cab950b d7bc69f0800972c3d5b1310914c6307572c4c992 a0b14cc4b487d23600d88b155a49c6cdbe74ad14 fb6c43336c9c0136dd3416ae6a0008b31a297722 3da3d0d803e63040d99f1ba501a4110fe8f259f9 4060bed68e4ee52a33aa8293f2c7c43103c12c9f d82697f32d2d86b690b06dfbaeffb5f263ef6ff3 3954dc702463d4e0be56611366974cedad7cab4c 4da986d6d6309784e989923123d6e729b6c8f511,Critical,4way Interface for ESC configuration and flashing SK and BL bootloaders and USB VCP support,This PR supersedes #2003.  This PR exists so that other cleanflight developers can contribute to cleaning this code up so it can be merged into master.  I tested very breifly using an SPRacingF3Mini using BLHeliSuite 14.4.0.5 from here:  https://www.mediafire.com/folder/dx6kfaasyo24l/BLHeliSuite  I was able to read esc setup  change parameters  flash and verify firmware and control motor outputs via VCP USB.  TODO: - cleanup large amounts of code and logic duplication. - include files including other files (a no-no in cleanflight right now). - fix code style `preferCamelCase` for new code `not_underscores`  `x = y` not `x=y`  etc - delete unneeded code. - move some of the code from serial_msp  if possible.  QUESTIONS: a) do we need the old 1WIRE code if we now have the 4way interface code?  POSSIBLE ANSWERS:  a.1) no  delete it.  then there will be less to cleanup.
cleanflight/cleanflight,2070,2016-04-21T12:45:35Z,2016-04-22T23:37:28Z,TRUE,2016-04-22T23:37:28Z,587fa9422bb5e4591cd3cefea07426027e7549ca,6,3,9b3494775ece7c1650f0e08c7487c078fa49dc4a 078e6bad7ff7c101668b855c4a67cbf1b68f67a7 25348db15a8e3ebda5250a09bd30bbc9d7d84329,,Adding IRCFUSION Target for Vortex 250 Pro,Hi Dominic  Can you pull the target for the vortex 250.  Thanks in advance!
cleanflight/cleanflight,2043,2016-04-14T16:11:50Z,2016-04-23T08:45:34Z,FALSE,none,d316b66cce4ca441492e92e902e1a3b0d10ab2c1,12,15,b00ff5133c181fbc64fe07ce0c79dfd77d265b8f 72fc12243c08836396a7c24796697c431e9d5989 27f98cfc781e7c65a2eda2060fa8d5a9efb31d09 1f3346153554918969f7f2846caa0c2fe023b01e 817dd7b4f0dda2f3c93e82ad7e2d2cb93f3198b3 af6e6b9721c1238b7f2aeb2e3176ad551ab5c2b6 5a53525466041769bc93ae6765da5d29b48b6c85 1d85ecc35f834b914522ab8ec17319fda673a0bd 86732e9bb35012ca3ccb5ef2d21a7016784cd3df ba7ffe7d9a0e921387b3de3291863cd837b59a2b 1c9c67048bc08926bcb4bb8470e3907e9ffc219d eb586a43bf05549de652c3979fdf18449cbb7e14 4b23ec3f886deb2656bd88743cbb53f01aa5842a a5124e6498613d259a7d595e51bf698ec394946d 6e0d9f0dd5a944aa6618cc47113f6ec96675d7c8,,For discussion split serial_msp c into serial part and protocol part,This PR splits `serial_msp.c` into a much smaller `serial_msp.c` which only includes the serial specific items and `msp_protocol.c` which contains all the actual MSP protocol  with its dependencies on serial removed.  The primary motivation for this is to make it much easier to write tests for the MSP protocol  but a secondary motivation is to allow MSP to be implemented over another carrier  in particular I2C. This would allow future OSD other devices to connect via I2C and help solve the lack of serial ports problem.  [Note this PR is for discussion only  not yet ready to be merged.]
cleanflight/cleanflight,1831,2016-02-16T04:14:58Z,2016-05-02T20:29:31Z,FALSE,none,f19484409b4c2ac6847b629ac23fef20cea74369,2,1,9e3eab210731739677e86747284b4995ca53c66e,,Add MPU6000 code to MOTOLAB target,Adds support for Cyclone board  which uses MPU6000.
cleanflight/cleanflight,1693,2016-01-17T17:43:32Z,2016-05-06T18:07:48Z,TRUE,2016-05-06T18:07:48Z,99fcb2eff517387a92584d5befd94d64915cee00,3,4,2784db617da76a27e05a4cd598a649c11d99b39e 080f17bfc927c786240513427cba3fcb3cc2071a 06d19a41dc13a8c44f8c2b55940ec5e279fdaffb 486a31ddb1efa58f4ca26a0acaf5b4b1b7c223ef,Task,Updates for Junit xml unit test results and test coverage,Updates in Makefiles for Junit xml unit test results and test coverage instrumentation (gcov). Also some help texts. Junit xml results are on it's own make target "junittest"  keeping the old target "test" the same as before.  gcov instrumentation is however hardcoded  not an option. Should not affect compatibilty with other build- or test-scripts. No postprocessing or report generation of test coverage data is included as it might require installation of reporting tools like "gcovr" ( https://github.com/gcovr/gcovr/tree/dev ). Postprocessing is instead done as a separate job step outside the Makefiles.  Usage:  ``` make clean make junittest /home/andho/projects/coverage/gcovr/scripts/gcovr obj/test --root=src/main -x > coverage.xml ```
cleanflight/cleanflight,2062,2016-04-18T16:29:49Z,2016-05-06T18:18:04Z,FALSE,none,00471ccce0a9e976db8c19c8f434274c8c967f9e,24,12,6f96a561574956814631528d18cdb10aa208df77 dc0aa7057a9203e24bcd453e1bdbcacefae01c62 9a9b407553e15becd65bb5bd47812d6dba60642f 8f516198feb951ef264a60e4198eafad3bdce65a ea8095b4b556319776f299ebb0ee954f3a3ff927 6a8223831104f499f3609eb65811fb4aede821fd b5cc63154bd3738075b7c2e6969f892794014e74 1a4ece6728d0e4130a4b20c2df36a153d2fd3a26 46879d343261372e3909ba44b3279bda555f9941 6118e3278f998e4b07cb7a1c48715e7a983b2ae0 8b015b815e62c8529a111cbd3805c5a7798a2ebf 74db4316eaf46fe33c5a7aca4ead464f9036cf7f,,Msp mem interface,Sketch of MSP improvement.  It is unfinished (and does not compile now)  I'll force-push changes.  I would appreciate any comments.  @hydra : Is there a chance to get this merged eventually?
cleanflight/cleanflight,806,2015-04-23T05:48:48Z,2016-05-06T10:31:02Z,TRUE,2016-05-06T10:31:02Z,b6639caf2d12e4326d77993f8298d0789bd1a126,297,2,c206a8f601d0d190e625c1e2f156b8aa58c148e1 ea18faa309e7be62d7da8ebae61534f4760dccc1,Enhancement,Added minimal MAVLink telemetry,This PR implements a subset of MAVLink protocol and can provide interoperability with MAVLink based OSD (i.e. unmodified minimOSD) and antenna trackers built for ArduCopter  APM or PX4 boards.
cleanflight/cleanflight,2121,2016-05-09T22:11:25Z,2016-05-09T22:16:09Z,FALSE,none,none,34,23,d96123d8f78309018542c834f4ade11716ec8b55 92ed8b29aded0190b5ea8a7c325e3ec9c78ff1b5 34db21e7de02c11d713fb405970b13423b556b5d de529b49f817df580eae06c157e67d2d9d1b40fa aa15c5248954eefda5006661fc5a5e05f914a4f0 35cd2df7e6f1d012d01dad8467eff49a07b02952 878927012530c6eb793373469fbc7245885c7ed9 c0b8e517b2b2e67cbd334910d509bdd81edcb595 feda19de64fb5f459afc6e17cad7af542a75f105 e8e4b52e1a80745959b920ecaacb143e785a4352 7c6924c9bd3109cb8d3838ba1cf978b2db32b12c e1b930d42c452abcc0b892920cee4c66851cd098 697784c4ae621f53d5bd7f73878abb131058eef8 afd590baa152bc5b061bcd190b1fb1c4e2220964 a037ad6b542ef8a520845bb1b93f7e65f05d6237 c0bc036986c106b64908e76a53bab2b8f9c6fd81 8704717975b6d1c97fe6cffabe39d8b846488a63 d0c90cf05eefbbb7363172636333c7139050e3e8 8c797d8bb562260baf1b0c94ca21f65fc43fea39 4ccaa2d14961bae1a04d660a482f5ee3c6365804 09b31e0b87f47bcb2784738bf4955f1aea8971ca 6b16fd615de66850f3c0fc2751e4db8c868f158b 169667ba7b39f0763796f885c98cd6cfb6b6ca72,,Spektrum serial receiver changes,Follow up on pull request #1985   Some additions and changes done to current Spektrum rx serial implementation. In short. -scaling change to have serial and ppm input travel matching if SPEKTRUM_PROPER_SCALING is defined. Otherwise  scaling remains as before -If bound as internal receiver  system data (resolution) is automatically read from the rx and set if not already correct -though currently not implemented elsewhere  frame losses are now read from rx and stored in "frameLoss" variable.
cleanflight/cleanflight,2075,2016-04-23T11:36:11Z,2016-05-10T09:59:19Z,TRUE,2016-05-10T09:59:19Z,c5c67e0c18bb6f84a71a7c475cb4a01c4a1f81b7,24,13,6f96a561574956814631528d18cdb10aa208df77 dc0aa7057a9203e24bcd453e1bdbcacefae01c62 9a9b407553e15becd65bb5bd47812d6dba60642f 8f516198feb951ef264a60e4198eafad3bdce65a ea8095b4b556319776f299ebb0ee954f3a3ff927 6a8223831104f499f3609eb65811fb4aede821fd b5cc63154bd3738075b7c2e6969f892794014e74 1a4ece6728d0e4130a4b20c2df36a153d2fd3a26 46879d343261372e3909ba44b3279bda555f9941 6118e3278f998e4b07cb7a1c48715e7a983b2ae0 8b015b815e62c8529a111cbd3805c5a7798a2ebf 74db4316eaf46fe33c5a7aca4ead464f9036cf7f 707b1e06b0f2b201eebb37a97204e91bbe5e2551,,Msp mem interface,Separate MSP command processing from serial port and serial framing - add streamBuf abstraction - use `mspPacket_t` to handle packet processing - `serial_msp.c` code handles MSP framing on input and output - activeBoxIds is handled as bitmask  permanent IDs and boxNames are returned in boxId_e order  4WAY-IF MSP entry is not implemented yet
cleanflight/cleanflight,2123,2016-05-10T09:16:19Z,2016-05-10T10:08:02Z,FALSE,none,cbf93080a095029b860f84e2697edd868ba08fa2,16,2,d613880568dc8ecbf32eee18ced38e13a5bd3003 7d3fc0304f553c0fbb4f4137ad4594efcc095131,,Split mixer c into mixer c and servos c,This splits `mixer.c` into two files `mixer.c` and `servos.c`.  `mixer.c` contains a large number of `#ifdef USE_SERVOS` which makes it difficult to read  understand and maintain. This PR splits all the servo code into a separate file  making everything much clearer.
cleanflight/cleanflight,2099,2016-05-02T20:33:25Z,2016-05-10T12:02:28Z,TRUE,2016-05-10T12:02:28Z,ed90f1922702346d259921068014614d89bef7cf,2,1,9e3eab210731739677e86747284b4995ca53c66e,,Add MPU6000 code to MOTOLAB target,Required for new boards.
cleanflight/cleanflight,2125,2016-05-10T10:57:59Z,2016-05-10T14:49:22Z,TRUE,2016-05-10T14:49:22Z,613a10f2a5d2efaf94f6ad3b463db102b4f75f84,16,1,97d2c555af76a652489637a4d6193f0e696d01d7,Cleanup,Split mixer c into mixer c and servos c,This splits `mixer.c` into two files `mixer.c` and `servos.c`.  `mixer.c` contained a large number of `#ifdef USE_SERVOS` which made it difficult to understand and maintain. This PR fixes that.
cleanflight/cleanflight,1028,2015-06-18T22:15:42Z,2015-06-29T15:00:49Z,TRUE,2015-06-29T15:00:49Z,673ea534dc9b56b2a23f98a721e4263444857072,11,1,10f2d3575968f3023f6240b5faa9face9eb42947,,Selective Software Filtering Gyro Dterm Pterm,It is finalization on my previous PR's. This time code is better to understand and reuse on all PID controllers. Also the main_cut_hz has been renamed to dterm_cut_hz  which is more suitable. Nobody knows what main_cut_hz is. There is no impact at all on PID controller 0-4 by default. Harakiri PID controller already had a hardcoded filter of 12  but that one is now disabled by default to keep the same variable in all PID controllers. Ability to separately control filters should make tuning much easier. I recommend to disable MPU60xx filtering when trying these profile based filters.  new introduced filters: dterm_cut_hz pterm_cut_hz gyro_cut_hz acc_cut_hz <<< removed due to already heavily filtering. Doesn't seem an improvement at all  https://github.com/cleanflight/cleanflight/pull/1016 https://github.com/cleanflight/cleanflight/pull/1007  For those who can't compile for testing:  NAZE32: https://dl.dropboxusercontent.com/u/31537757/cleanflight/cleanflight_NAZE.hex  SPRACINGF3: https://dl.dropboxusercontent.com/u/31537757/cleanflight/cleanflight_SPRACINGF3.hex  CC3D: https://dl.dropboxusercontent.com/u/31537757/cleanflight/cleanflight_CC3D.bin
cleanflight/cleanflight,2016,2016-04-06T19:07:22Z,2016-04-16T16:56:41Z,TRUE,2016-04-16T16:56:41Z,a6c3f3609fc326a92ad6205bd06fb9bebe294280,25,29,028a2a2146bba8c037833d77e3d9386d30e8d89b dc6f737c625802de25139a9e0f11099a5a15af07 f1b4e216ea6ee996d48fba095320681e2a4c7c30 89f44d9477b4066e6f70bcdcbbec9086adc8d13a ac2b33bd7e30c81344f07c3287e000bfcb7d2ea3 457457b3a615e31cf8cffd0d5c3cd3a530218f4c b7b680ce687efb027ecbbe1957c58eebbd0b604a 273ac3867d62f3c4701b741dda6f14b747c71300 f426c2e192bd511e93dcf13cc2c901a21fc79a55 83cec9eecf24190d01db968636981b066b72a93e b93c1199102a33be4f397c57cd1a078933a050c9 06396796d694f6ad12603420a5b2e416266c957c 4ebc627483cbe25eac8e4047be04fd55c1abb72a 082f66ea759812e6b923f68478af9a12b719243b aece3f5d7177bac0ed92ad2351b2b1b225daedb1 d7d07c1c5c91766a29a8590d818b50fbc2d0d76c 8e644005bbdb9d9c843f05491809f88cc50da074 586b432f0f94e1a17fa5235cddf8b27f7efca064 636971c8057aada39d50994434e11bc077649839 d65ef6ad672ea9388e378cd0dd98b3858dee59eb 599027d39b4fc7b57a7d513bafd841e14fedbd69 f454c36b7e0b414fb33b79aade92fb5e6d719a7f c9bdb60f0ccc054db3211c3eb585be38f525cfaa ca057b1998475b516c0a5adb9635c7cd6d0007fa 094f4027aa1b794f342e9fb4f68125b2faabeea7 918c951ff5711246fb3dd255baff17d3da1dcb0d 0ab4678179360203894034fafe8e2c232d0a22d2 67f8e3b0b4c14ac777ad69aaac8364ebd8b2e3db a6c3f3609fc326a92ad6205bd06fb9bebe294280,Critical@Cleanup,For discussion refactored LuxFloat to use P8 I8 D8 and give same output as MwRewrite,`pidLuxFloat` is refactored to use `P8[]`  `I8[]` and `D8[]` etc  coefficients rather than `P_f[]`  `I_f[]`  `D_f[]` etc.  `PTerm`  `ITerm`  and `DTerm` output is scaled to produce the same output as `pidMultiWiiRewrite`.  Test code is written to check equivalence. (Although if this refactor finds favour I will write more test code.)  This means the same bank of PIDs is used for `pidLuxFloat` and `pidMultiWiiRewrite` and users should be able to swap between `pidLuxFloat` and `pidMultiWiiRewrite` without retuning.  Because `P_f[]`  `I_F[]` etc no longer used simplification of `serial_msp.c`  `serial_cli.c` and `rc_adjustments.c` is possible.  `pidLuxFloat` uses floating point calculations based around the value of `dT`. `pidMultiWiiRewrite` does integer calculations based around the value of `targetLoopTime`  the conversion factors between these two values are defined in `pid_luxfloat.c` as;  ``` // constants to scale pidLuxFloat so output is same as pidMultiWiiRewrite static const float luxPTermScale = 1.0f / 128; static const float luxITermScale = (1000000.0f / (0x1000000)); static const float luxDTermScale = 3 * (0.000001f * (float)0xFFFF) / 1028; // the 3 is because mwrewrite sums 3 deltas rather than taking moving average static const float luxGyroScale = 16.4f / 4.0f; // the 16.4 is needed because mwrewrite does not scale according to the gyro model ```
cleanflight/cleanflight,2120,2016-05-09T16:14:37Z,2016-05-29T23:20:23Z,TRUE,2016-05-29T23:20:23Z,192f6264fcab1fe29cac6da10c56f9256c3f17b9,1,1,3f86b26b0821e89b4c675d2e1add4e2240119840,,USB VCP gcc 5 3 fix,looks like gcc bug - gcc generates half-word access in _SetEPTxAddr / _SetEPRxAddr macro. Using `addr & ~ 3` fixes this and VCP works fine  Code works when optimization level is decreased for `Virtual_Com_Port_Reset`  here is invalid code for reference:  ```     .loc 4 493 0     ldr r3  [r7]    @ D.5186  MEM[(volatile unsigned int *)1073765456B(BTABLE)] SetEPRxAddr     uxtah   r3  r2  r3  @ D.5188  tmp245  D.5186     lsls    r3  r3  #1  @ D.5189  D.5188      mov r9  #64 @ tmp249      ldrh    r2  [r3]    @  *_219     strh    r9  [r3]    @ movhi @ tmp249  *_219     ldrh    r2  [r3  #2]    @  *_219     strh    r4  [r3  #2]    @ movhi @ tmp217  *_219 .LVL58: .LBE93: .LBE98: .LBB99: .LBB100:     .loc 4 481 0     ldr r3  [r7]    @ D.5186  MEM[(volatile unsigned int *)1073765456B(BTABLE)] SetEPTxAddr     uxth    r3  r3  @ D.5187  D.5186     add r3  r3  #536870912  @ D.5188  D.5187      add r3  r3  #12288  @ D.5188  D.5188      lsls    r3  r3  #1  @ D.5189  D.5188  .LBE100: .LBE99:     .loc 1 139 0     mov r0  r4  @  tmp217 .LBB102: .LBB101:     .loc 4 481 0     ldrh    r2  [r3]    @  *_207     movs    r2  #128    @ tmp261      strh    r2  [r3]    @ movhi @ tmp261  *_207     ldrh    r2  [r3  #2]    @  *_207     strh    r4  [r3  #2]    @ movhi @ tmp217  *_207 ```
cleanflight/cleanflight,2139,2016-05-15T16:34:16Z,2016-05-30T14:52:30Z,TRUE,2016-05-30T14:52:30Z,19320bdaae09c1beb3a64165f658fdf44c1f4bdf,16,7,bed88f2f7c32b38511e2fe71f458f2caf089cc0f 51210830e041c02c69bba7cbdcafbdfe9003e641 f84aa005b4271319a8e6e58e76097b130652be1e 078a22099c0f3ba63b372b35176426a46d8b4509 90c685318d9453c0192da4bb254c78d4b42b6668 daf71a9c0a844ab7967044a3d476e4ec74081319 19320bdaae09c1beb3a64165f658fdf44c1f4bdf,Cleanup,Cleanup leds,Cleanup of ledstrip code. The changes mostly do not affect old behavior  only code is improved. Over 500 bytes of FLASH saved:  ```  116984    1072   13452  131508   201b4 ./obj/main/cleanflight_SPARKY_new.elf  117536    1072   13452  132060   203dc ./obj/main/cleanflight_SPARKY_orig.elf ```
cleanflight/cleanflight,2109,2016-05-07T10:53:13Z,2016-06-01T15:52:01Z,TRUE,2016-06-01T15:52:01Z,4003c461db31e2acf47df663602a6acbb0d061b0,1,2,00baf2a3bf95251cc6ed7bd3ab8df7282514aff0 4003c461db31e2acf47df663602a6acbb0d061b0,Cleanup,Makefile cleanup Improved handling of different TARGETS removed duplication,@hydra  you probably want to take this now. A small step in improving the maintainability of the `Makefile`.
cleanflight/cleanflight,2151,2016-05-17T20:46:33Z,2016-06-01T15:12:53Z,TRUE,2016-06-01T15:12:53Z,1975182e099396e90b207f9f70a0c809262ecdce,3,2,59e09a72ced90bc54052adee62ca859cc20e51da 63c00c3fbb5f9100d2cc9e5077ab095ad911eec6,,Fail Travis build when PR contains warnings,Makefile will pass -Werror to gcc when building Travis Pull request. Branches are build normally.  This PR should fail now - there are warnings in master
cleanflight/cleanflight,2194,2016-06-01T19:10:03Z,2016-06-05T02:13:03Z,TRUE,2016-06-05T02:13:03Z,472914e4c8a1a2720d1dcd06dd2da17fead50c0b,3,3,a540f917d040a9a13a9323d48d2da9f8ecd4146a 1f50f91bc363038aff1f1a6425a9be09e401ee9f 49aa8af0c727bfa338d43f512fa218ba6dd9cc87,,Fix submakefile inheriting CC etc,This should help with make test failing. But something more elegant will be nice ...
cleanflight/cleanflight,1995,2016-03-31T23:32:31Z,2016-04-01T12:57:51Z,TRUE,2016-04-01T12:57:51Z,2682ebf164ef76ccd93c941b5c54ca4313536986,2,3,5e4a7d31446d03adc94fe7b3d97c7c1cde96ccb4 3fbe310988d9c411625fd54672d70b0ef2ffcad6 f75c7ce9d920799b505f4a121f5058f04f543097,Critical@Cleanup,Fix parameter groups tests under running on OSX,Needs a bit of tidying  but it works.
cleanflight/cleanflight,1538,2015-12-02T12:46:27Z,2016-06-23T16:52:27Z,FALSE,none,565e6c6e7fede8dd16c8ec9521a92779b280a79b,139,31,c0690399c193d044f6fe2e7e9b3557c51f2a1344 889cf13e22ffc7785acb3667e81f54fe04cfa06b 8126787ac528e6af58b8a40f71daa05f09f42d38 42dd4d67d3e1bc81d98ec024209cebb6e1d94e7e 29c82c8f108b89cbf4cdd550d59d78cce243b51f ac071c08246bbe583c052ff518680224e25f847a 42640be78396265d9de45ce16f1f187ff11ed874 440784b76b997c70b029ad72c7cd17c6b17b9dac 60a410c2cd6ab164e7dce1001359fbefe47a89bb 7b3ecd859da39f2f3a45fe46d0a4076578fc1155 511f42664f8d5810ecac9a05856179dc4b8b486e 34908e86738094f73229784f1fe1726d55d4d50f 818dc3eca461b77b7fbe836341bf9c69e820545e 9dd6ec82de162d21444ca2483f09b7a5ab4654c9 cbe26318a5caf11bbda1abec769a4be9fd1b33e4 a9dd9224f22b30f9a45c5392200c651dd8d18ae0 ff7dd8a7cc12ce52f86f29b3f3912fabfd5e18fb e29728b28b5ff99bda593a2e4eb1c5a50865bdde 8dea1a1793043a2d14f0316b6e0a93c697c8d63a 9621d50df2b74555a5b7887d1b4eb7757d42d864 9da6102a01a567eda8548f6810e3a89cbd6e91fe b0ee509723a3a52f065e4876373d7db71e7aceb2 13b8206369b69433fea1d47d5de95e583e963472 2663374cc6c6c2b0484d618c7f455da8bcb00bcd 82e60fa21b5430f0bcec905c9d9b3d3c8b25f0b1 4e20f51a485f5822fd0e853e1e1a68753e76738a 4d9e11af01875dd01200eadc25e1b95caaac91e8 56bb73e7b009f5ec920c360add4d706e5fa24deb 0fd9c0245306beb9674ddbce848758eca212dcf5 bd154b140543dea6554218b7896cd31ff391c766 89c303c6c91e2ec480147a1a7f0d23dca8c7ea73,Enhancement,adding support for Multiplex SRXL V2,Multiplex introduced a new protocol with identifier "A2" as an indicator for Version 2 protocol of the SRXL. it can now contain 16 Channels instead of 12. Previous working recievers with identifier "A1" are not affected on this change. Tested with Mutliplex RX-4/9 FLEXX receiver. Thanks to Steffen Graap for the code.  Maybe a short comment helps to understand what SRXL is. In fact JR's XBus mode B is SRXL which is used by a couple of manufacurers. It makes more sense to use the name SRXL because thats the standard defined by srxl.org. But a rename is a lot of work and confuses users but definately make sense in along term period.
cleanflight/cleanflight,2251,2016-06-23T11:13:14Z,2016-07-02T17:36:45Z,TRUE,2016-07-02T17:36:45Z,ece684fab13674bada617464d8444abbf71bd4aa,1,2,1b1f6b010170b023d02a62f3a76a59364c8138d2 945e660346d6f3847a56c690de0c4d114dbacae9,,Fixing vagrant provisioning error,Provisioning succeeds with this change. #2250
cleanflight/cleanflight,2226,2016-06-12T14:27:53Z,2016-07-06T18:05:54Z,TRUE,2016-07-06T18:05:54Z,44395886883b29ba89aaf4472c4d571416216e90,184,41,ecc70776067f7db2aef13efd8b78897908835aa1 f6ac2dd7ee9c951001eb0271de884d9c23e5b2ad 03b7662a324a9f85226f50bd86c7f836d50f46ec 846b595853030e40aa3838dd9be32c220137e4d1 94464384f9da6f74ad595c83c032278f9c2efd9a 5dc260df03b77e833a240401ac6f7cb63c84ced3 612256c9ab1c214f1934b7ed2eb6cc9c94d64430 33eb68e15224e63156cbba458eac86d17a7b0587 62f1bfa708867c8f326ca3fc369ba63c563e4a2c 29a612fa37fcd84460cd978746cc9bda0dd44fbf bf99ff8b6662dfef510beaa6625f5ac2f1590bef 591cea3e30d6d2a0fdf70392c93e80baaaaba5a7 fbf9fac56400f3c221b81886bb0f1ee669c3afec 85317c269b99f9066b7ecab54cd2c1b51b7e48ba f1522a2e0bb678c96e900a41d39ef503dc176596 629d43f3856dc57a202d4828114f1b42ffdfa167 25f4be7377088d38339cee6e479de1d2eb4a3ab4 7cace88162db1e9cfcdd66ac9c62476bb837333e ad6590a09851defae3b3f8a73e98915f894f1afc b96db8d42c50450d237d8451b707dca07f1c762e 46b4b3cac9aed66274b6e85b175c8d6078febcd9 8e1ee70d36daadde40c117282a8c7eeae4290c71 9f7df32a3850518f1a04410756c32467de6283b7 79b20ab3368a84d51bddf273b70d9ba28f6626e7 4a35e50b4b1f357596f92be2cc197fc7bd1beaa9 d8f45e278cb694dc97bccfaddf1ed89fcdda684b 34508a3ab304238cd99b24fa0bdd09f53868c084 bc2de9479581f9b092c8403634a0e3ecfcc1cb29 5b4460dc5694e54ca7dbc385a37f24ef5489e264 1538c65c38ae7b53b699ff0562e03d15f280f615 4af5fc459e9ec4b2fe55df068c2cb6762dc3ed95 94a295bef8b9b543bd02a9c0619fc07e5adbbf7c d353446c406204f6f8d26375c840af90698cb765 16e79bbedb3933e06a37d67134142167d6451b0b 13b8d3cbbefc1264271f267550d26e6dbd23e698 376e37ea2b2db068c7ea31442a49edf6c0325325 ffa48450f63e6e168f423b4a36dfe7110aad6a10 f7a316eb9d2b053ad9387c4a2eda4f3a5281ec96 5ae57b8dfc245a7fe0859b9a2c2704cdea36b39b eeb0754effdf38eef052511f5dc2f1beb41fc5f2 c59b28fd9632e15d609f2ddcaa09c76277d58cef,Enhancement,First cut of OSD support,This PR is the first cut of the OSD support for standalone OSD boards.  It includes:  1) low level driver support for max7456 chip (including cleanflight font and font upload code) 2) support for F1 and F3 CPUs. 3) simple MSP client for communication with an attached FC. 4) code reorganization. 5) high level osd code and osd code for a text-based layout. 6) status indicator updates. 7) additional MSP commands for OSD configuration. 8) some ADC changes (development OSD boards monitor battery  12v and 5v sources). 9) some hacks  and some far from ideal code. (remember  it's the first cut  the approach is: 'get it working  then get it working well')  There is _much_ more planned for OSD support  but this PR serves as a good starting point for discussion and review before merging to master.  Additional OSD features will follow.  Current features:  1) Configuration  status and flashing via Cleanflight configurator. 2) Fixed layout 3) Cleanflight logo on power up :smile: 4) Battery display. 5) Current meter and usage display. 6) display of FC state (acro/horizon/angle/baro/mag/rssi/vbat/motors) 7) PAL and NTSC support. 8) Camera disconnection state. 9) FC disconnection state. 10) Automatic font download.  This is basic OSD as-is.  Next up is code review and on-screen configuration menus.
cleanflight/cleanflight,2305,2016-07-16T23:35:35Z,2016-07-17T00:11:27Z,FALSE,none,279d1d6a19a822d894155b7bbd36863a7bfdd1ce,1,1,f090b1d955750846c7b97ec9cacecec94801e907,Cleanup,Added driver adc o to rx unit tests Build failed,Added missing driver/adc.o to the rx unittests. Jenkins build failed  in RED. This PR fixes that. http://andwho.sytes.net:8080/job/Hydra_CleanFlight/202/
cleanflight/cleanflight,2253,2016-06-23T17:00:38Z,2016-07-21T14:56:33Z,TRUE,2016-07-21T14:56:32Z,4ed334cae829bcffb76c53f824d7f199923d3ac1,9,7,1fc8eadaf4e12b0f8541840ebae53b0f5214ea99 40831e1eefda478314dadb663d1cad007d87681b 7a17dfc47c0ffbb4ffc38fad817075049d142ae5 10b50a79d427c23446cba09eb0ef5510d55d161c fe2e827a7401e5a1c4a2dbd41ae0d80621134a81 bb1b9f0757b29fcd7b7be84618dcf2976aa7188d dc543165f3b8b1a6a322f97bf690bdfc5532a3a1,Enhancement,adding support for Multiplex SRXL V2,Reopened Pull Request #1538  (i had to delete the branch so it has closed)  SRXL implementation to a seperate file   â€¦ improved code within ISR CRC code outsourced docs updated  please also merge the configurator pull request
cleanflight/cleanflight,1984,2016-03-25T16:26:47Z,2016-08-10T19:38:33Z,TRUE,2016-08-10T19:38:33Z,d57612ad7dfb764e79bd73e7539fd92b5bea6cd1,55,11,1bf57376d0a3d40761b0f6bd215fe6730220164f efb1aaf4fe6b0ef4e9213afebe162e59a6f93b27 454ad9c8543ba5786232f9ac56463e74fde69d29 209cb939adffb08ef072d2bf286dbf1cd9b1e4f9 f0ce424c8d84bbbf422a3b63259e555a8724945a 84d85766ef5b78f5db88497b6e3eaf7502c9a730 e3e68f6572071abc93be0e1a214435571c8d0676 4a11c66ca724b891b2acd1406c35b565ee0962f4 fda025873b7cd968715fa2b591f19e167ca4dc4e 36e993662e3f4bf14cbb81511d6ac5dc64b6a5e0 d57612ad7dfb764e79bd73e7539fd92b5bea6cd1,Enhancement@Critical@Cleanup,Feature exti 2,rebased #1421  to avoid force-push for now.
cleanflight/cleanflight,1421,2015-10-21T17:28:36Z,2016-08-19T00:50:54Z,FALSE,none,894b281c0a5dda76a839a12ecb05e6e6e4d6ff85,44,5,8645e0132d79cc10d1d619b6baf395e51364b9d9 a7146799401852090fc8c885f7936deed2822c4e 9152530582068a48042b82f4458a615c6f354a31 fd3cf1055bd4a1412832f8d89893958bab81a35c d87304d71cc4a48df6502c60a50a12c39c5c0fcb,Cleanup,IO and EXTI driver,PR for review  please do not merge yet.  Only EXTI handlers are converted  rest of IO is using old code
cleanflight/cleanflight,2083,2016-04-25T09:31:31Z,2016-08-19T04:46:52Z,FALSE,none,03cc833c024cdf7ff565f3c665f97c7e776a5cfa,6,4,a2425972ba1521f21df4633fa6495ead4fc940c3 f851dba5651a9ba6450c222c49f3602ef134153e c77a6aea40311234468729658b72fd877e917598 13d996e8efd2db39fa1d577659777943aa55fde7,,Add barometer fbm320,This is my attempt to add support for barometer FBM320. It is as precision as MS5611  but less expensive. I have tested on CC3D  and it performed well.
cleanflight/cleanflight,1700,2016-01-19T04:58:03Z,2016-08-19T00:53:28Z,FALSE,none,c8e3eab8a25155910f722b5c48c9752bce7e8396,2,1,5130ccb3b7e10ffa7f63017bfbcf560048bd162d,Enhancement,more baros for spracing derivatives,an alternative to https://github.com/cleanflight/cleanflight/pull/1691
cleanflight/cleanflight,2148,2016-05-17T11:54:00Z,2016-08-24T17:14:13Z,FALSE,none,5f6d4788114aa3090b49688928c44c4944b79c40,10,8,b5ab896ed7b4e841ea39dc44593e6c2260fad6ab 877252d5646183c8b452ab5b3c38da075065ed3d 3915554bdaab2d1a35af11d095fedf91814d378f 31666515249ae6c85928746670e391a939890c2d 4c689919c80b5fe97eacc613ccff349efb72382c 92575ae8f97279b9c51effeb8cf0f9886747e458 e3f6ac96a392d388a96c457a5bd7afcb88ef5ba3 32dc153abe2e0b79f77f864c9ac215026d473ec7,Enhancement,Let users define flash chip specs,This small PR should eliminate support requests for different flash chips.
cleanflight/cleanflight,2352,2016-08-15T01:06:29Z,2016-08-26T01:10:37Z,TRUE,2016-08-26T01:10:37Z,93166267300904a850226d6c05c9e76e595d57cd,2,4,5decbaa44d6018b53a6b502d4b0348389c50e4d6 2982438f29e97da7b5974e15bf13ef742ce01011 3172fa20f71a89ccfbabd040f74ad65ce176d8ce 9a21941c5c9a4c66522e23ceac73624dd71a0fd6,,Enable ccache,however  see this if you use cygwin  https://github.com/betaflight/betaflight/issues/774  (basically  cygwin + ccache = fail)
cleanflight/cleanflight,2396,2016-09-11T21:44:15Z,2016-09-12T20:05:18Z,TRUE,2016-09-12T20:05:18Z,30c11a66b96a270cfa8fd97a30f574284e16d8f3,69,14,eb71a5318a1979558070864ea1a29546246da3dd 09821b8aa3064b5f7bea7c2d45f81faf3753dd40 8a97431051290dad090909e55a48fd7acbc2744f 3c3e0abbfe432d590eb0572070d14783dd909eef 62646021f2bc27f8404ba9ac620f5eb0f8f75a89 35bd11ee85d5a5172f099d3c35c6524e64cccce1 c0d51ab5e02ad48be1375c75b81bf11812368a08 8554617dbc003be04eb0612ecb5b7d6631d5e63b b3bf80eab8472fbaddd5c39bffa4cdd760943b2c 3859c509e05515b533550517ec2cb9d05a87cf18 a23616a92cb7b62612f526f71929e2290ac762a9 9ce020b4ef9b868ae5838322911a0e35fffbdff6 123e0e7796fc846db5303ac35546637fbb6cfebc d2136534aafe8492d8f266f1f07dfa9d08872244,Critical@Cleanup,First cut of refactored battery voltage curent sensor code for 2221,This is the PR  for #2221.  Features: - fixes quite a few dependency issues. - removes some hacks in the OSD 12V/5V code. - allows virtual and adc current meters at the same time. - completely seperates voltage and monitoring from the concept of a   battery.  Not all voltages are from a battery. - removes some battery/voltage/current configuration from MSP_BF_CONFIG   and MSP_MISC - allows each voltage meter and each current meter to be independantly   configured. - allows a single battery to be configured. - moves MSP server configuration into it's own PG (to fix the FIXME with   regards to multiWiiCurrentMeter code).  The tests WILL fail  they will be updated ASAP - I ran out of time tonight.
cleanflight/cleanflight,2440,2016-10-08T20:05:28Z,2016-10-12T20:24:47Z,TRUE,2016-10-12T20:24:47Z,30ddd2528110a2a0e31a8f552972b52e60702689,2,2,6e6f3a76f60e841339a203ba77244f691402a634 06fa260a4f2eb9a6cd13e51966fb5205f9611aa6,,Add HMC5883 compass support to RMDO target,Tested this on RMRC Dodo board with HolyBro M8N GPS (HMC5983L part on I2C).
cleanflight/cleanflight,2416,2016-09-19T17:48:59Z,2016-10-12T20:14:20Z,TRUE,2016-10-12T20:14:20Z,ea40600b4967caa707d1e89384dfd00701679ca0,71,73,ef0d5419d44d04ce0e95cb8c41a6ce5b6068c1fc 80a57e75bdf485653f7edd8f7aa07b5150113a16 699d4a4bfb74f79df0f2b97809f6eed5ef8155dc 2a7a768c1510195772e23e8951c625f362e04c71 51b506a205c2fd42fac683a50b69ee5cf78d2dc6 435fc00d8296541346ad0454ce5f30b98d09aaae 8f73dacfd993b2c3764a32902d2005bd6df47c26 0175c219da89240e102133dd18ca9f7e612dbe80 a4dbf82134ce1b2953afdbfeb7df108a11b7ca79 4af351649e4dea48ccb50b64c56cb25b2810b20d 425128f42b18f0c07d2cb080e26e6fe5f6829f83 533c3a5ae481f5d843f490e2df67d8add7e01e02 4112f5759808619abf3b270780ca959757fdfa40 2095a5ea24f78493603deb24801200325a01c814 663a63207e685d5f2c94518838d1f82c6a062e71 7f183310f589582c9d500064335d32cf8e7633ad ec160f097e0bd4fcfc9da44aa7940a1726bfd047 5fde8d0917597612e7134ba3abd31640d6f343a6 235afcb4ffcc9ca094fa33ea8b5aa620abdb06aa 45c4c14371397126e19711741839eefedcd2b58a ec6a4afb0b52ea82583657d60a43facb8ea8afa1 0b101bb6ef521fe18eaacdfa4c3830f18ea102fa bd1714dda55c915b663405f275c81a0d2561abb9 554c2b1c54897e4731443c9c1b18a53f01474ad5 28d7fac6c521bc0ec95af7b826c780f07ad399bd c432aee9caa673409ebdbd7feec1e726529b1e44 e3211c57f49f88fe1eecb0224d646318d325f7e0 c15af7f148f6aef6bdbacdb8bbab5e8ba2868abf 927c8332d18c0662dcbf64bb979705276eee97b5 52ee245ba3503295af8b184823e1b1882f259f16 1e1c489256a1e6a18ded28ffdfc7a0a061fe9d7a 3a849948412b6938d76e257a386719ae9a718442 d87ff09dd72b7397d607d69dfad15f50482da044 da167e44078daa8193dea6a16675bc1801fd1287 60ee5fdafda9986851b3ab2ccfdefd80cdce6e21 e962f8fbfdbb4a3d8d6e9d8e3e8c3d3fb64cd0d6 57080b5a04836146dbf5c7142ccf04f67d044971 9f70a0ff26c9d8bd85a9da95ca9c736dc5c4ab62 a8b4697b7099859a925d44db3266c55ca10a31ef 79fc7907b369ca702ab9063f1ef39870ab5ae6c1 aebefabd7f54fa68ba6d741ccfa8cc491eb97f00 3bb51912dcf6712e7fb8bc30b68625c0a2dcbb12 5cdd315bc3dc1313d6b3d1a55068a3b190cad385 7801181ff920d4b02d90648a78762dc6c63de4d2 6755dcbd3035b2d4ccdc6a0fe56b1cd82695cff5 0647f7772ae4dd2879107bcf9896d160473fa973 7c10551f5f5a41ecf50696f32b6a64ee3a9f6f56 04d61ad1d30e1d4a71dfad32bb413835a24473de d6a0008f37b1c2d67f79b36f5e66fb9af17cf0f2 b3352de256e34b8113cfac49288beee12768ad0b 1a02606fcb11ec97574a9c3ee9c35f0287ecc443 568cce11c15fd89c5390ac3d97bfd3e77e8e8158 22ff299c9805f044b6b30ecad0cee47004d23c8a 9e314abb189f57fd15d76d3752531852f510161b 9e8d7cc47cba8be9a79be37c660e9503056314fe da8f0253920336fc3c710df73c349cae5aa24ec0 375e9e8ac7018f3033105f6a0391f9c1319260a3 35c3dc0e9c94cc80116f9ee02a306a0c3504194b 10d0f08428028bf0e116b66c24d5f820f332f401 660776fc7ad21ae69f285aa1ea82649fb0d0371b 7544eb16570745bd5e4408653f9853a3570ef749 61e5fbd40386abc02b63b17fe1c33b748e838ca7 387d99119256433dc70fbe30e8c7be800a1f3872 23b39198c49ca4df51c073afe582d5dae3f069e5 c75865814d4c6f6709ede008fe196feaa8cb2eeb a2a290cfcd06913152291fd2a03e73eb363bf2e9 5b09fe605be3aa753c11198e659eea32cc47caa8 2b9dcad0b2b355ed3f12a10e99aa5086a9177480 783d5f5a2704b4dd50d0c7168278907a0a744240 62b4c607a3ebc6f6b90c169a2ab740055826e061 30da478216a490889a6700e1de21af7050a3d3e0 47fbe0fe49c28fd46b5065027d51f9ee2f4df7be cfa24d8f0dab6c1e9861c888cddb3caaead7b47d,,Merge some betaflight changes into CF,Work-in-progress.  Status: - fixes bug with mag valid readings being overwritten when MPU9250 mag has no new data. - ~~there's an issue with the notch filter  some floating point error is occuring and the notch filter d1/d2 values end up as NaN.~~ - compiles  arms  sensor readings look ok. - ~~unit tests currently broken.~~ - lots of untested changes. - WARNING: various defaults changed too (lux float  gyro settings  etc).  Update:  - Flight tested LUX on a brushed version of an SPRacingF3EVO  acro and horizon tested.  No flight issues.  Update: - The issue with d1/d2 ending up as NaN is because there is no check for infinity in the biquad filter  AFAICT this occurs when the `gyro_notch_hz` is set lower than `gyro_notch_cutoff`.  This is probably a bug in betaflight too.  Update: - Unit tests updated and fixed. - Changes pushed after a code review  ~~No flight testing has been done on the updated code.~~  Update: - Unrelated changed from this PR cherry-picked and merged to master. - Test flown again.  I'm not fantastically happy with the state of the PR  but since I got this far I thought I'd share it.  I started out porting the notch filter code over but in order to really use it we need to split up the tasks due to the changes with targetPidLooptime and targetGyroLooptime.  I should also note that in looking at the Betaflight codebase and this I found a whole bunch of cruft lever over from various changes in betaflight.  Outdated comments  unused extern's  unused methods - nothing major though.  If I get time I'll push some commits to a PR for betaflight but my focus is here right now.  There is a new branch with the corresponding work-in-progress configurator changes here:  https://github.com/cleanflight/cleanflight-configurator/tree/betaflight-merges-1
cleanflight/cleanflight,1732,2016-01-28T12:12:11Z,2016-10-13T23:33:23Z,FALSE,none,5a248ca4d9239c86a6f158d0cf04c2005715c76e,5,7,ec64e2431ece68b7db830ff518cb5b9b524d0bc2 9f55969fc94f172803bf9944388c35f12d924041 589e2d1e3a39ced4f36fc930ba9069af7c64779c 9eaaef7d34ac0134e7e20881c5e49bd4ea4ba8c1 888ff12e2f522d89ebf7ebf03d0f6f92b1595a1f 12083e153d0c4b2f9a8f41fd4cd99d983bf9033c 71a015d3dc45a4aa15770476beedd9e4e2a60643,,Added target EUSTM32F103VE,Added target EUSTM32F103VE. Tested on STM32F103VET6 Development Board  Full build log:  sevens:cleanflight seven$ make %% startup_stm32f10x_hd_gcc.S %% accgyro_adxl345.c %% accgyro_bma280.c %% accgyro_l3g4200d.c %% accgyro_mma845x.c %% accgyro_mpu.c %% accgyro_mpu3050.c %% accgyro_mpu6050.c %% accgyro_spi_mpu6000.c %% accgyro_spi_mpu6500.c %% adc.c %% adc_stm32f10x.c %% barometer_bmp085.c %% barometer_ms5611.c %% bus_i2c_stm32f10x.c %% bus_spi.c %% compass_ak8975.c %% compass_hmc5883l.c %% display_ug2864hsweg01.c %% flash_m25p16.c %% gpio_stm32f10x.c %% inverter.c %% light_led_stm32f10x.c %% light_ws2811strip.c %% light_ws2811strip_stm32f10x.c %% pwm_mapping.c %% pwm_output.c %% pwm_rx.c %% serial_softserial.c %% serial_uart.c %% serial_uart_stm32f10x.c %% sonar_hcsr04.c %% sound_beeper_stm32f10x.c %% system_stm32f10x.c %% timer.c %% timer_stm32f10x.c %% flashfs.c %% gtune.c %% navigation.c %% gps_conversion.c %% colorconversion.c %% gps.c %% ledstrip.c %% display.c %% telemetry.c %% frsky.c %% hott.c %% smartport.c %% ltm.c %% sonar.c %% barometer.c %% blackbox.c %% blackbox_io.c %% build_config.c %% debug.c %% version.c %% config.c %% runtime_config.c %% maths.c %% printf.c %% typeconversion.c %% encoding.c %% filter.c %% scheduler.c %% scheduler_tasks.c %% main.c %% mw.c %% altitudehold.c %% failsafe.c %% pid.c %% imu.c %% mixer.c %% lowpass.c %% bus_i2c_soft.c %% serial.c %% sound_beeper.c %% system.c %% gyro_sync.c %% beeper.c %% rc_controls.c %% rc_curves.c %% serial.c %% serial_1wire.c %% serial_cli.c %% serial_msp.c %% statusindicator.c %% rx.c %% pwm.c %% msp.c %% sbus.c %% sumd.c %% sumh.c %% spektrum.c %% xbus.c %% ibus.c %% acceleration.c %% battery.c %% boardalignment.c %% compass.c %% gyro.c %% initialisation.c %% core_cm3.c %% system_stm32f10x.c %% misc.c %% stm32f10x_adc.c %% stm32f10x_bkp.c %% stm32f10x_dac.c %% stm32f10x_dbgmcu.c %% stm32f10x_dma.c %% stm32f10x_exti.c %% stm32f10x_flash.c %% stm32f10x_fsmc.c %% stm32f10x_gpio.c %% stm32f10x_i2c.c %% stm32f10x_iwdg.c %% stm32f10x_pwr.c %% stm32f10x_rcc.c %% stm32f10x_rtc.c %% stm32f10x_sdio.c %% stm32f10x_spi.c %% stm32f10x_tim.c %% stm32f10x_usart.c %% stm32f10x_wwdg.c arm-none-eabi-gcc -o obj/main/cleanflight_EUSTM32F103VE.elf obj/main/EUSTM32F103VE/startup_stm32f10x_hd_gcc.o obj/main/EUSTM32F103VE/drivers/accgyro_adxl345.o obj/main/EUSTM32F103VE/drivers/accgyro_bma280.o obj/main/EUSTM32F103VE/drivers/accgyro_l3g4200d.o obj/main/EUSTM32F103VE/drivers/accgyro_mma845x.o obj/main/EUSTM32F103VE/drivers/accgyro_mpu.o obj/main/EUSTM32F103VE/drivers/accgyro_mpu3050.o obj/main/EUSTM32F103VE/drivers/accgyro_mpu6050.o obj/main/EUSTM32F103VE/drivers/accgyro_spi_mpu6000.o obj/main/EUSTM32F103VE/drivers/accgyro_spi_mpu6500.o obj/main/EUSTM32F103VE/drivers/adc.o obj/main/EUSTM32F103VE/drivers/adc_stm32f10x.o obj/main/EUSTM32F103VE/drivers/barometer_bmp085.o obj/main/EUSTM32F103VE/drivers/barometer_ms5611.o obj/main/EUSTM32F103VE/drivers/bus_i2c_stm32f10x.o obj/main/EUSTM32F103VE/drivers/bus_spi.o obj/main/EUSTM32F103VE/drivers/compass_ak8975.o obj/main/EUSTM32F103VE/drivers/compass_hmc5883l.o obj/main/EUSTM32F103VE/drivers/display_ug2864hsweg01.o obj/main/EUSTM32F103VE/drivers/flash_m25p16.o obj/main/EUSTM32F103VE/drivers/gpio_stm32f10x.o obj/main/EUSTM32F103VE/drivers/inverter.o obj/main/EUSTM32F103VE/drivers/light_led_stm32f10x.o obj/main/EUSTM32F103VE/drivers/light_ws2811strip.o obj/main/EUSTM32F103VE/drivers/light_ws2811strip_stm32f10x.o obj/main/EUSTM32F103VE/drivers/pwm_mapping.o obj/main/EUSTM32F103VE/drivers/pwm_output.o obj/main/EUSTM32F103VE/drivers/pwm_rx.o obj/main/EUSTM32F103VE/drivers/serial_softserial.o obj/main/EUSTM32F103VE/drivers/serial_uart.o obj/main/EUSTM32F103VE/drivers/serial_uart_stm32f10x.o obj/main/EUSTM32F103VE/drivers/sonar_hcsr04.o obj/main/EUSTM32F103VE/drivers/sound_beeper_stm32f10x.o obj/main/EUSTM32F103VE/drivers/system_stm32f10x.o obj/main/EUSTM32F103VE/drivers/timer.o obj/main/EUSTM32F103VE/drivers/timer_stm32f10x.o obj/main/EUSTM32F103VE/io/flashfs.o obj/main/EUSTM32F103VE/flight/gtune.o obj/main/EUSTM32F103VE/flight/navigation.o obj/main/EUSTM32F103VE/flight/gps_conversion.o obj/main/EUSTM32F103VE/common/colorconversion.o obj/main/EUSTM32F103VE/io/gps.o obj/main/EUSTM32F103VE/io/ledstrip.o obj/main/EUSTM32F103VE/io/display.o obj/main/EUSTM32F103VE/telemetry/telemetry.o obj/main/EUSTM32F103VE/telemetry/frsky.o obj/main/EUSTM32F103VE/telemetry/hott.o obj/main/EUSTM32F103VE/telemetry/smartport.o obj/main/EUSTM32F103VE/telemetry/ltm.o obj/main/EUSTM32F103VE/sensors/sonar.o obj/main/EUSTM32F103VE/sensors/barometer.o obj/main/EUSTM32F103VE/blackbox/blackbox.o obj/main/EUSTM32F103VE/blackbox/blackbox_io.o obj/main/EUSTM32F103VE/build_config.o obj/main/EUSTM32F103VE/debug.o obj/main/EUSTM32F103VE/version.o obj/main/EUSTM32F103VE/config/config.o obj/main/EUSTM32F103VE/config/runtime_config.o obj/main/EUSTM32F103VE/common/maths.o obj/main/EUSTM32F103VE/common/printf.o obj/main/EUSTM32F103VE/common/typeconversion.o obj/main/EUSTM32F103VE/common/encoding.o obj/main/EUSTM32F103VE/common/filter.o obj/main/EUSTM32F103VE/scheduler.o obj/main/EUSTM32F103VE/scheduler_tasks.o obj/main/EUSTM32F103VE/main.o obj/main/EUSTM32F103VE/mw.o obj/main/EUSTM32F103VE/flight/altitudehold.o obj/main/EUSTM32F103VE/flight/failsafe.o obj/main/EUSTM32F103VE/flight/pid.o obj/main/EUSTM32F103VE/flight/imu.o obj/main/EUSTM32F103VE/flight/mixer.o obj/main/EUSTM32F103VE/flight/lowpass.o obj/main/EUSTM32F103VE/drivers/bus_i2c_soft.o obj/main/EUSTM32F103VE/drivers/serial.o obj/main/EUSTM32F103VE/drivers/sound_beeper.o obj/main/EUSTM32F103VE/drivers/system.o obj/main/EUSTM32F103VE/drivers/gyro_sync.o obj/main/EUSTM32F103VE/io/beeper.o obj/main/EUSTM32F103VE/io/rc_controls.o obj/main/EUSTM32F103VE/io/rc_curves.o obj/main/EUSTM32F103VE/io/serial.o obj/main/EUSTM32F103VE/io/serial_1wire.o obj/main/EUSTM32F103VE/io/serial_cli.o obj/main/EUSTM32F103VE/io/serial_msp.o obj/main/EUSTM32F103VE/io/statusindicator.o obj/main/EUSTM32F103VE/rx/rx.o obj/main/EUSTM32F103VE/rx/pwm.o obj/main/EUSTM32F103VE/rx/msp.o obj/main/EUSTM32F103VE/rx/sbus.o obj/main/EUSTM32F103VE/rx/sumd.o obj/main/EUSTM32F103VE/rx/sumh.o obj/main/EUSTM32F103VE/rx/spektrum.o obj/main/EUSTM32F103VE/rx/xbus.o obj/main/EUSTM32F103VE/rx/ibus.o obj/main/EUSTM32F103VE/sensors/acceleration.o obj/main/EUSTM32F103VE/sensors/battery.o obj/main/EUSTM32F103VE/sensors/boardalignment.o obj/main/EUSTM32F103VE/sensors/compass.o obj/main/EUSTM32F103VE/sensors/gyro.o obj/main/EUSTM32F103VE/sensors/initialisation.o obj/main/EUSTM32F103VE/core_cm3.o obj/main/EUSTM32F103VE/system_stm32f10x.o obj/main/EUSTM32F103VE/misc.o obj/main/EUSTM32F103VE/stm32f10x_adc.o obj/main/EUSTM32F103VE/stm32f10x_bkp.o obj/main/EUSTM32F103VE/stm32f10x_dac.o obj/main/EUSTM32F103VE/stm32f10x_dbgmcu.o obj/main/EUSTM32F103VE/stm32f10x_dma.o obj/main/EUSTM32F103VE/stm32f10x_exti.o obj/main/EUSTM32F103VE/stm32f10x_flash.o obj/main/EUSTM32F103VE/stm32f10x_fsmc.o obj/main/EUSTM32F103VE/stm32f10x_gpio.o obj/main/EUSTM32F103VE/stm32f10x_i2c.o obj/main/EUSTM32F103VE/stm32f10x_iwdg.o obj/main/EUSTM32F103VE/stm32f10x_pwr.o obj/main/EUSTM32F103VE/stm32f10x_rcc.o obj/main/EUSTM32F103VE/stm32f10x_rtc.o obj/main/EUSTM32F103VE/stm32f10x_sdio.o obj/main/EUSTM32F103VE/stm32f10x_spi.o obj/main/EUSTM32F103VE/stm32f10x_tim.o obj/main/EUSTM32F103VE/stm32f10x_usart.o obj/main/EUSTM32F103VE/stm32f10x_wwdg.o -lm -nostartfiles --specs=nano.specs -lc -lnosys -mthumb -mcpu=cortex-m3 -flto -fuse-linker-plugin -Os -ggdb3 -DDEBUG -static -Wl -gc-sections -Map ./obj/main/cleanflight_EUSTM32F103VE.map -Wl -L./src/main/target -Wl --cref -T./src/main/target/stm32_flash_f103_512k.ld arm-none-eabi-size ./obj/main/cleanflight_EUSTM32F103VE.elf    text    data     bss     dec     hex filename  115356    1124   13672  130152   1fc68 ./obj/main/cleanflight_EUSTM32F103VE.elf arm-none-eabi-objcopy -O ihex --set-start 0x8000000 obj/main/cleanflight_EUSTM32F103VE.elf obj/cleanflight_EUSTM32F103VE.hex
cleanflight/cleanflight,2362,2016-08-21T00:09:10Z,2016-08-24T16:58:22Z,TRUE,2016-08-24T16:58:22Z,61beeee0bf42f607bae1709337860c5a28cb5ddd,2,1,25dcd98c23637b50c86ad9688d48a49eb9983b9d,Enhancement@Experimental,Add softserial to SP Racing F3 EVO via ESC outputs 5 8,Provided as-is for those that want to test. ## TODO - [ ] Documentation - [ ] Testing
cleanflight/cleanflight,2460,2016-10-19T12:01:39Z,2016-10-19T17:56:58Z,TRUE,2016-10-19T17:56:58Z,50fc967de054584ad3ba39e51d22fe064539395d,4,2,01cf66de651f7bfb7a8e9ed90cf7a630ba48d6d3 f11b615d971a27bba5c5d792ab7a048d2c33551c,,Fix NVIC_PRIORITY_SUB to return correct bits,Fixes #2457 @asbird found this bug  thanks.
cleanflight/cleanflight,1723,2016-01-25T21:57:16Z,2016-10-13T23:24:32Z,FALSE,none,526dbc507833a180ed8a029f18d4aa3c13b55313,8,5,8a5c75cd7c7dcc8f235fd887f7b0de8f576b89f3 7ea08cfda46e2f3d1b9d6c70fd902570e1eea1fc 5f6c1b16286d15122cb1d67edf1f7029792c10a0 84e27a58926fb76ae29988dd24ac39d2071607ce 256bfc890d2154755ef8ccecc14e25b5cd41f6fe,,Add Ibus telemetry,Hey Guys   I've added ibus telemetry support and i've tested it on an STMF3DISCOVERY and a NAZE32 clone  both speaking to an FS-IA6B rx with FS-I6 tx.  Can i get some others to also test please. Here's a naze image (cleanflight master / 1.12): [cleanflight_NAZE.zip](https://github.com/cleanflight/cleanflight/files/104026/cleanflight_NAZE.zip)  Please test without props  don't fly this one just yet. I don't want any crashed quads on my conscience! :-) Once i've got a few test feedbacks i'll push a flyable version.  Can you please report the temperature reported on your boards please. Ibus has an offset for the temp field which i've slid along to zero  however neither of my boards produce a gyro temperature and i don't have a baro fitted. I'd like to know if there are scaling issues with reported temps.  Cheers
cleanflight/cleanflight,2509,2016-11-23T20:42:22Z,2016-11-27T20:48:14Z,TRUE,2016-11-27T20:48:14Z,c9930c8a02a382f8a60d75ee8f194b95e0915318,2,2,ab60dd708d66fd10a08429c0de019b4d0206db31 f40501af564de797e5a8837aee20fd0602d29eef,,Fixed fake_travis_build sh removing the legacy targets that have bee,â€¦n removed by Hydra.
cleanflight/cleanflight,2515,2016-11-27T15:24:29Z,2016-11-29T07:10:53Z,TRUE,2016-11-29T07:10:53Z,913cfa50f1e2b76f7675978832b010af49d412ca,4,4,821186479a06a507a590a9079c0cbb447739903c 642be85cc2de72a63cd81246da08a224ba338be3 3bc5dcc70faa27efebda30c0a6b6f4aaa288fd75 b9f6d9c7cfff422ebbc5519d9d7f8e71cbfc6929,,OSD Fix RSSI rendering by reverting the previous RSSI rendering change,RSSI is always zero while using the Cleanflight OSD due to [a recent change](https://github.com/cleanflight/cleanflight/commit/058e9dabad8738121d8c0b2e64764e19d8541988) in the RSSI rendering calculations  which converts any incoming RSSI from the FC to zero.    This reverts the "fix"  reverting to the prior behaviour of simply converting the RSSI which is in the range of 0 to 1000 to a range of 0 to 100.    See https://github.com/cleanflight/cleanflight/issues/2514
cleanflight/cleanflight,2486,2016-11-07T21:17:15Z,2017-02-05T12:37:05Z,TRUE,2017-02-05T12:37:05Z,0ba43eec1fdb5215177bbecbbc4edef3c469c774,2,1,d4cc93ed59305ec68833ec805db0d8dc5d7abe59,,added unit tests for ibus serial rx,Comments and questions:    - I'd expect that runtime configuration was not initialized unless there was a serial port to run but the implementation states otherwise (ibus.c:62)      - ibusInit: is it ok to have undefined channel values after init? (ibus.h:75)     - ibusFrameStatus should return rxFrameState_t not uint8_t
cleanflight/cleanflight,177,2014-11-19T17:15:37Z,2017-02-25T16:55:33Z,FALSE,none,b5a66a265d8be2a6d8fd9aab2c5425c117b686d3,30,22,a8ac605584cd69641a59225bf276eeca62abf5be 7b86ada38141c7b8eb3e78ee7f8e16c513c0c0b6 1ad26dd07dd4d70329ccaf5be9f40f4fdb26f628 4392fc53fbff69504f603767394936f2d9fb186b 08f44e2de0d90ac9cefaf4c6c3cace213deba065 0892c603671f819fc62b1b97effd070c710a1508 69f06bd0df3028622e06c3751015e8ad54f6c9ec fdaeb63200cf10b97b0ef49fef920083ccfbeb33 9e3936fc43c016ba7cd83735fd5c809343a8b69b e39a00af0f24e6798e8defd9ab05c9e529b9403d 3fed62fe675fe2ea0c4b61178c197b531ca3c760 a7b700a94768fb85b10323361115d9feff3aa058 8fa1d2cd9771e04ecd5097054fb2745f6895ee34 a6dbb7c315ae28d2881faf41716635825f57edd3 177ee125170aee90874e6adffb284f1a7fe28bb2 8bbd1de9aa31346aec663835be9250160ca685e2 f648a2c43ba3f6a33126ab916d02edf3f979be18 6ff11800a6a87df434b1919d3d590ba82fa038c2 9c63ab58c59fa99b20c43cc8e566fe5d2f7f0830 b859f0954bffaf9481e892b616322ce162216caf 4e932726bcfc868664b2c57eb1b90f1f8a2df698 3a5ff4c9501351ddcdcf60bc63e644846fbbc2cc,Blocked,Feature softserial,Preview of softserial code is here  This pull request is only for reference  do not merge it. I'll rewrite history in my branch.
cleanflight/cleanflight,886,2015-05-12T16:51:23Z,2017-02-25T16:55:33Z,FALSE,none,d38dbdf13eedde60e4fca1f1bdc26751cf71edf1,14,3,704265be64e54aa18b3a6eb287e325cc46d531b0 661fc91c6b25ffc346e7efa5175c7c0896a4a3b6 8947c07724ee6b0be25db2c6f98e2ce5dd3ac51c,,IO implement USB serial buffering,Allow larger USB serial packets  buffer USB streams  USB endpoints are hardcoded  rest of code is modeled after USART.  Tested on sparky  no packet errors and no looptim spikes. This code should not be called inflight (no USB)  so it should be quite safe to merge
cleanflight/cleanflight,979,2015-06-02T06:24:14Z,2017-02-25T16:55:33Z,FALSE,none,9d5c7fc138c9e1afff46997296b7c078e736d645,2,1,f293540dc47e347d5221a992cd4a8af87955547a,Enhancement,Add vagrant file for seamless development environment,In other projects  I have found having a working vagrant file and a script to pull down the correct packages for development makes things so much easier for potential devs. It makes the time from thinking about a bug fix to committing a bug fix very short no matter what platform you are on.
cleanflight/cleanflight,1151,2015-07-21T19:32:46Z,2017-02-25T16:55:34Z,FALSE,none,acd4d12ad3af22c8b1cf1427997a73c4e34c082b,11,4,6008ebfcc5a52f567c231a7f1a8aebad1dd63dde da7b6f8d44d39bb1441aee15073194202b2de70a 7604bdbe49fc24d3d55d6e51d0a04c3f78cb97c0 1f76483b917e65fe4092615d5b99524a099bd154,,serial implement a buffered writer to batch up USB data,This greatly speeds up the USB VCP communications by allowing sending one 20 byte frame instead of 20 one byte frames.  It also makes the CLI much faster.
cleanflight/cleanflight,1275,2015-08-30T14:12:56Z,2017-02-25T16:55:34Z,FALSE,none,2c477a37fbd17cbb7b3434ba8cb2549e3649c483,9,9,4fdad1ef7a8bd3ff7dabd4051361c0f0def2041a 0f5fdd4df7a79b4411ee4ab68bec65a4b2446af7 a859074605b6e5f89eb9cedbccdb6b0fbce51031 eaef3ab0e11b21227a37033b70d5f28fb0f479e1 005248ae9ce851809edfcb0f4f645ed4588560b7 a687592d9ce6b59085d43da76c4c44bc579f6603 90f1212ae43710e49891886ec4de55d77ff906eb 930fb8f1ba480a1bc646128a26f93931d07073e3 67daa93acfa22b0053e166398a730711ded2a7e8,,Lidarlite pwm input functionnality,I wrote a modification to add the Lidar Lite V2 (not tested on V1 but should work) on pwm input of the sonar. You just plug the device like this : ![lidar_lite_pwm_wiring2](https://cloud.githubusercontent.com/assets/7744477/9567595/766bef26-4f31-11e5-9dca-04fcedff0d70.png)  The sofware automaticaly detects that the sensor is Lidar and not HCSR04. No need to add features. Maybe the name of driver (sonar_hcsr04.*) should be renamed to reflect that.
cleanflight/cleanflight,1328,2015-09-20T00:40:32Z,2017-02-25T16:55:34Z,FALSE,none,87b92026e11c6c928e5d83ccf5399030b0c4ed6c,9,2,e62ee1de5af88791383d20b4cd8b6f2582bf6b46 32d9212bd513e4402fa722e24d62141d326f334a,Enhancement@Low priority,Added support for MS5607 barometer,This change adds support for the MS5607 barometer. I have modified and renamed the existing MS5611 drivers to work with both the MS5611 and the MS5607. Both barometers are essentially the same with the only differences being the scaling factors and the second order factors used when calculating temperature compensated pressure due to the lower resolution of the MS5607 vs the MS5611.  I see that with the recent commit 26f89b7  the barometer type is not configurable. I have added the MS5607 as yet another configurable barometer type. I added another parameter to the ms56xxDetect() function to tell it which barometer calculation function pointer to use  assuming barometer detection was successful.  This relates to Issue #512
cleanflight/cleanflight,1356,2015-09-29T19:55:56Z,2017-02-25T16:55:34Z,FALSE,none,943fff5a0f3ea44c07a7264c085650d49a00af0c,73,1,0a6c38553a2e1e6023fd22186ec64d19a62cc637,Cleanup,Remove all tab characters and trailing whitespace from c and h files under src,Removes whitespace at the end of lines in affected files.  http://www.emacswiki.org/pics/static/TabsSpacesBoth.png
cleanflight/cleanflight,1654,2016-01-03T19:28:44Z,2017-02-25T16:55:36Z,FALSE,none,ebc2efb0e42d99388d2dfd3d6e8f9047d72eaea5,20,16,51b62c4f6a9dce93a0f3f4a8f912bece95e2e08e 52eded0821414daf25a91b292e315b2e9874d3a7 52cf80c48b4fa0a3bce7ef91ab800905056fb85f e8db6cb732e61325f4d2b97fe6d223ccca6ef06f a992386b24c082ce472eee1ce479c87452c79f81 23bcaeab49938922f06bff77d34b53b1a0a7f1a7 cffb34fac6d6e43c9dc71a5827a5fc6af5f998fa 69bf69317b28f1ea08c5bddda217d3a52f13d8f1 47b7e639e229758366e8638e5405b88b733414e7 3ad4338d9c9f7a5ca03bf51422371a3da4403f9b 71e674a77c1ae1ad119a1771d80687243698c3e8 655fe0347e3772280783b5146accabe0d2cff947 2770050c99c75778ecf87d1a2715fbbebd67dba4 4a1ccc7b185b10cf3802c8453c6d5b0139489e03 45cc973e3e6c5770d1eee7a2ddfda2de64fd7701 9b62aa0c1e573762e55388a429a49449dbcd6202,Enhancement,Configuring data with TX and oled menus,This is a new rebased version of PR #792 (pages/menus are mostly identical) allowing configuration of Cleanflight data using TX sticks associated to Oled display when board is disarmed.  For targets with limited available flash memory (< 128 KB) one only access to one main page from which the whole CLI parameters can be checked and modified. For others  more detailed pages/menus are available with specific themes.  Using the TX sticks is as follows :      - enter the edition mode :   `THRO_LO + YAW_CE + PIT_LO  +ROL_HI`     - exit the edition mode :     `THRO_LO + YAW_CE + PIT_LO + ROL_LO`     - increment data/line :        `THRO_LO + YAW_CE + PIT_HI + ROL_CE`     - decrement data/line :       `THRO_LO + YAW_CE + PIT_LO + ROL_CE`     - next page  :                      `THRO_LO + YAW_CE + PIT_CE + ROL_HI`     - previous page :                `THRO_LO + YAW_CE + PIT_CE + ROL_LO`     - select/set :                       `THRO_LO + YAW_HI + PIT_HI + ROL_CE`  ATM this is not available for CMJCU (not included in Makefile) nor CC3D (insufficient room in flash memory).  Thanks for your comments.
cleanflight/cleanflight,1691,2016-01-17T07:29:33Z,2017-02-25T16:55:36Z,FALSE,none,3aefb04a117997698eff66118531fab5f955b65d,4,3,5d1abc868a751d486022825e002fb6a03831572d e17e75566ff519f08b89d8ec84beb2abb0ca3444 caf28e89dbbc01e8b1dacdbe27479e532a3a986e,,Beerotorf3,new f3 flight controller w/ an onboard osd.  it will be amazing when this is working as well cleanflight#1439
cleanflight/cleanflight,1787,2016-02-08T08:58:10Z,2017-02-25T16:55:36Z,FALSE,none,fc6e7d4c79a2cc8d96a2d8fdde09a87b99a04a82,15,4,167829a5d3bd1a348d96ef12af94ed449c8c0834 d4ed3c80bd2e5a1d33f4d3c6d6cb1fbd4a71f670 f2c5ecb52e6aa2a33cb382d26c2ffda6c8f3447f cb2d7cfaad63fa1e37733049d71ee066a346492c,Enhancement,Implemented support for SRF10 sonar rangefinder,This adds support for the SRF10 sonar rangefinder.   The SRF10 has some advantages over the HCSR04. It is smaller and lighter  32x15x10mm  weight 5g  vs 42x20x15mm  weight 15g for the HCSR04. Its quoted range is 6 meters  compared with 4meters quoted for the HCSR04.  The SRF10 is 5V I2C bus based which may or may not be advantageous  depending on the flight controller used. It can connect directly to FCs with 5V I2C bus connectors (e.g. CC3D  SciSky)  but requires logic level converters for FCs that have 3.3V I2C buses.  The SRF10 is  however  more expensive than the HCSR04.  The implementation works by replacing the direct calls to the HCSR04 device driver functions by indirect calls via function pointers. This means it is now straightforward to add support for further ranging devices. In particular support for the PulsedLight LIDAR-Lite laser rangefinder should be straightforward to support (I have an implementation in the works).  This PR addresses issue https://github.com/cleanflight/cleanflight/issues/1555  According to http://www.robot-electronics.co.uk/htm/arduino_examples.htm#SRF02 %20SRF08 %20SRF10 %20SRF235  "The SRF02  SRF08  SRF10 and SRF235 all use the same I2C interface. The basic ranging commands are the same..."  So the code should also work for the SRF02  SRF08 and SRF235 (I haven't tested any of these).
cleanflight/cleanflight,1948,2016-03-13T00:48:03Z,2017-02-25T16:55:37Z,FALSE,none,1582aaf69873e804b31fb43741f35ead0148880f,16,2,d0ab727bd52a55261be2ce25d15ffa22c7a8e7d6 f81478c4f983e2374f97d98e01080337ae36d673,Enhancement@Blocked,Bit banged SPI based RTC6705 VTX support,Add support for VTX control.  For micro builds where every gram is a premier  or builds with concealed VTX  controlling the VTX from FC may be a good idea. This PR provides support for RTC6705 based VTX with SPI signal accessibility.  FX758-2 is an example of such VTX  and TX5823 could be used with a minor mod.  The SPI interface is driven with bit-banging SPI using any three unused GPIO ports.  Native/hardware SPI may be supported in the future.  The entire bit-banged VTX control is enabled by specifying a feature **VTXBB**. In addition to the **VTXBB** feature  three GPIO ports for SPI signals must be specified with three CLI variables **vtxbb_ss_pcode**  **vtxbb_sck_pcode** and **vtxbb_mosi_pcode**  in 'port code' or 'pcode'.  A port code is a 3 digit number  with 100's place digit specifying GPIO group (GPIOA = 100  GPIOB = 200  ... GPIOF = 600)  and lower two digits specifying pin number in decimal.  Port code examples are: PA2 = 102  PB11 = 211  PC13 = 313 and PF5 = 605.  CLI variables **vtx_mode**  **vtx_band**  **vtx_chan** and **vtx_freq** control a frequency which the VTX module will transmit on.  When vtx_mode = 0  the frequency is determined by vtx_band and vtx_chan according to the pre-defined table. When vtx_mode = 1  the frequency is determined directly by vtx_freq. (This scheme is partially compatible with multiFlite and SINGULARITY FC.)  The frequency is set only once upon initialization by init() in this PR.  Currently tested with NAZE and SPRACINGF3.
cleanflight/cleanflight,2417,2016-09-20T20:53:38Z,2017-02-25T16:55:37Z,FALSE,none,46a4f1302cced7b5e66acf81e77caf58858ab6b0,5,9,23ef19a9c1687b33e35877b4172a3e505b4ce6dd 9c46647c61b7465f0000352fbd8052fd104144f0 8b2531d518e22788766892068a0eb60031b537b6 6077ac8fd463892dc7f486b4853136b2a42a14fd 45e981f98236f641d0cd14b9787b48e53d35cd6b 58ff1579d4e056478cea2044623342c23ffeef20 3bc7847ab641cb7187e8b700b7f542e9921f5d1a 7f1e5ed6ed4f2b81899bffe2a291a49ab30b09e3 69447fed7e38acf94685c9bbddb8919bdded0dae,,Use Huffman compression for blackbox data transfer,This includes an implementation of Huffman using a pre-computed Huffman table.  See issue https://github.com/betaflight/betaflight/issues/1156 - ""Suggestion: Use compression to speed up on-board flash blackbox transfer for discussion" and PR https://github.com/betaflight/betaflight/issues/1198  Initial implementation in Cleanflight because it has a working test harness.
cleanflight/cleanflight,2504,2016-11-18T12:08:17Z,2017-02-25T16:55:38Z,FALSE,none,e886f15dfbf431a605acc2e09172e775418474d3,3,3,661eb506c71d30c0d686f2e7f147f46cf1032ea4 108551f39783aa695523512c192e4c62dc8e30da bb363aefd8dbc84a6c36a800f4d148311502ab1f,,smartport added MSP SPORT bridge,This new feature allows for using the MSP interface over smart port  for example from a LUA script.  Please note that it has not been tested with cleanflight  only with betaflight. I need to shrink the naze target first  so that I can test it on my devel board.    This PR is related to issue #2474.
cleanflight/cleanflight,2204,2016-06-02T23:06:54Z,2017-02-25T16:55:37Z,FALSE,none,72b9a9d06391a04f4c876ea7394fe18acdc2c152,8,17,b5935e8d1736b88ffcf38936ec48805dcdf90ca5 b60d0666dcb89d340d456e2d5c8d18adaeb94960 98893e548ec6912eeb0c51ea1cf2a5e9b1dcff53 16f5777f3e5bf31948d6f124212ae8c40328a07f 444d79de2ac800dcf0529949c4f170131b6d9f45 13050fea0b719211a52039d66a6ed36ee029b2c5 1a52ae3ee331fb18a32ee59e83c0e0b392a2ea1c a06fbad0ed044a4db0a69dcc6570c6196e92016d d12154ee36418eca13bc8ba094fd7946a2a3fb79 a3b01627c9367c5ba90eae65d6c810cf5d0438d6 65b976288f7e816c3094b3e1cfa4d451d7bf79c1 4bd8386cfb12df7cfd3a2ddff27bfcbfd3c0d446 efbd4a7b3aa69120ba58da396c2da16f3063592f cae3f2f93de8530aad3cb6a4c69425f358927e08 1dea9fdf438b2a4a42c9fc9e8d1d492658e66c7b 471bfe901f09d6f15bb46e140fc5c9f7b06f6dc2 e181ecc89d54726ecb463ed41a72f5d4c67b1ee9,,Added initial CMake support for the unit tests,Tested by diffing <unittest>_result.xml files vs the Makefile on Ubuntu 14.04 LTS (CMake version 2.8.12.2)  Partial support working on Windows 7 + Cygwin + GCC 5.3.0 - Missing memcpy for ledstrip_unittest - Some failed test for PIDUnittest  Not tested for: shell uname -s "Darwin" (uses different linker flags for some tests)
cleanflight/cleanflight,1709,2016-01-21T21:04:47Z,2017-02-25T16:55:36Z,FALSE,none,e7a3bc8f9c0c3662db4dda124f03b4395236fe6d,13,50,58bc6e29aefa0d36d9e76f9f9a61c4596f6711a3 d40fcdde162d0fbb94d9e4dba3440945680fc917 2c95b4c400146ad5b5881add9ef4f33b37c8bad2 8c04571dd0abf60461222bd2500f52c13c57c813 97d6e25d7b688659bd25eb720691d4ee5b49857b 45564153ea415892287da87439843b33761a9962 02f3276911d0470acf4c962fcefd9a173f88e0d9 60ce35625866ad18084c0496b48e85e1982d0853 beaabe93aa18ed99b3de6798fa973daf14bcb0d0 10136c8d7e4886b7da0c9c28a38f8068bd5d2b32 9b5f95a0b314af56d3549808983d12cde79b8fc2 2b97f31f0c7ffc1d12f4507b8ea1b80d851db186 e99b4e47567bf9ab647d0f0e26b8fd5afcc9cbc2 12beec6ddd281f64c0ae20a07ef0ee6050beb2a8 40ae715304f0de903cf51fc6b6f0401d990c92f5 271f61f8680ceb8db6eac029b3e2783c92bd3a2b 13c49202fad250adf7afdfde90db48ae5e187a56 ba80b2219b6f33982b00628e92999b1922823aea 3fe63435dd53495a9cbbcec1391216f8b1f1eb37 b9e93d8788814e4de0dae5abb2cde39d1dec7fd7 6e96ea492f931829329697d472029ab04ad5c677 a0aee227527ed554fef2db8f110ae9d0dea42817 b41cb913f45bad771127b16d9e4d0e1faf33b810 8a52dae7d932a37acde6799280393967e96cb5b1 84be44e8a452515d68c3a1486006f5bbd688597d 8b11902761b4f9a653a509650d27eeea46a88b84 73b1ddd825cf9e14d71b4721ff59b7beafae2efe 43c8e14ec7fd447ef5aa4942caaa9380ae72ba15 d6a84e47c7eff55b82917882b097ff89e7769293 12de86b0651029fba1f08050e55740359e469afe 0a15f5a2b3d213377d8b24bf7eddfbad632b9455 1a1c2d3b96476c07c83ba3e14c0fa6fbbb40295b 2825e4bdefa429e92506f7ff61baaebdcb0354d3 e6c67cf4a9e15b12c18942d331ff1a37cb48a982 5975eddc94f42d12a2faa7d01be49c2a86424511 b2f1f17eb3e2096448689234737357badee5ebe0 7d30ccb2589a62b1dda7dedbf7d9796da1d272e8 bd5f5ed143a159a7f3396f52e4fae2ae3b37682b 585eb8ef2ba55adefe331b6365a4d7b45dd9b249 46fff99891772eb30646c2b2290a2b601786a62a 0a5a9ec5dd4a439645f29112ce65401eaff227d9 e4da2e3c5ec7d456d84e8a36a56c18ca3f8f632a 9d32c7f603177e57795a325fd9d9ef4f85605492 fba8c547d0d38a5a48747e86c542bad4eef027e3 cee49f413a12cbad1178aa0ed81c544d5fa56223 eeb305dc7dd6c176a0a177b2055b0c22b7b289c8 cf36542243bda2c28cf489cf2aa98e728d422713 d322d64529936678adabea8f217b0f0e0d8640ea 8ce3dc95303798c0b360665a1ef2263305d9c23b 93234c0a78a30409bc669d9c81c25118f0beb61b,,adding Jeti Ex Bus Receiver with telemetry capatilities,This is the implementation for the Jeti EX Bus Receiver. The Ex Telemetry is also supported.
cleanflight/cleanflight,2014,2016-04-06T12:06:00Z,2017-02-25T16:55:37Z,FALSE,none,9591dcdfe9a50113705efef5f6f2c3cc6986d515,23,18,51b62c4f6a9dce93a0f3f4a8f912bece95e2e08e 52eded0821414daf25a91b292e315b2e9874d3a7 52cf80c48b4fa0a3bce7ef91ab800905056fb85f e8db6cb732e61325f4d2b97fe6d223ccca6ef06f a992386b24c082ce472eee1ce479c87452c79f81 23bcaeab49938922f06bff77d34b53b1a0a7f1a7 cffb34fac6d6e43c9dc71a5827a5fc6af5f998fa 69bf69317b28f1ea08c5bddda217d3a52f13d8f1 47b7e639e229758366e8638e5405b88b733414e7 3ad4338d9c9f7a5ca03bf51422371a3da4403f9b 71e674a77c1ae1ad119a1771d80687243698c3e8 655fe0347e3772280783b5146accabe0d2cff947 2770050c99c75778ecf87d1a2715fbbebd67dba4 4a1ccc7b185b10cf3802c8453c6d5b0139489e03 45cc973e3e6c5770d1eee7a2ddfda2de64fd7701 9b62aa0c1e573762e55388a429a49449dbcd6202 1d2312ea01ba68df2c55c8ffee7ba0634962507b ea29a64204c65caa49b3f577b42f0ce24e7be451,Enhancement,Configuration menus,The goal of this PR is menu system that works on an OSD (via MSP) and via a directly attached OLED screen both using sticks to navigate the menu system.  What we are looking for here is the first cut of a system that works  that can be extended upon in future. we do not need everything immediately - i.e. no 'kitchen sink' approach.  Later  support for telemetry systems that support HoTT  OpenTX and can be added.  PR's already exist with some code which we can bring into this as required.  The menu system must be intuitive and must work for Mode 1 and Mode 2 users.  This PR continues where PR #1654 left off.  It is in need of quite a bit of work and is not yet fit for merging to master.  It also has somewhat questionable implementation approach - it's heavyweight.  and I personally found it un-intuitive and frustrating.  See my experience here:  https://github.com/cleanflight/cleanflight/pull/1654#issuecomment-206320017  The code here was only brielfly tested on an SPRacingF3Mini.  Not all menus were entered  not all settings were changed.  How to proceed:  a) Delete any broken or hard-to-implement code for now - we can add it back later. b) Extract variables and methods from the serial_cli.c/h so they are reusable by both the cli and the menu system. c) Make the navigation intuitive and obvious. d) It needs to have as little logic as possible for the values that are configurable - similar to how cliGet/cliSet work currently. e) Possibly extend cliGet/cliSet to use arrays and then using the same logic here will likely cut down on cli commands and menu code for things like configuring servos  failsafe settings  etc in future.  I also want tests for the menu system too.  It will be much easier to develop this way.  The menu system is text only so writing assertions should be easy enough.  high level tests: - send msp command 'get menu' returns a text menu with things in the right place. - send msp command 'button `X` pressed' followed by another 'get menu' did the right thing.  low level tests: - buildMenu() builds writes an appropriate menu via a buffer that can be checked. - tests for stick and/or button navigation that mock out the system time would also be good.
cleanflight/cleanflight,2487,2016-11-08T08:00:42Z,2017-02-05T12:24:55Z,TRUE,2017-02-05T12:24:55Z,c35de0d85a7f60f7fffd67be13fe9d32b545564e,3,2,3880f0093707e8409bcc80f4ca97ae3e71673455 11a9913159b29d97776bbc621eccc35d2f8e0377,,Lcov coverage report,Merged some stuff from https://github.com/mkschreder/ninjaflight after reading the issue https://github.com/cleanflight/cleanflight/issues/2476    This pull request adds coverage reports as a list in the build output if lcov tool is installed     It also publishes data to the server at https://coveralls.io which is free for open source projects.  (Example page from my account: https://coveralls.io/jobs/19911189)    Credits are due to @mkschreder    Stuff to do by the maintainer when merging:   - Create account at coveralls.io and enable the cleanflight repository (it takes like five seconds)   - Update the link for the status gadget in the end of README.md (https://github.com/unitware/cleanflight/blob/lcov-coverage-report/README.md)
cleanflight/cleanflight,2415,2016-09-19T16:43:54Z,2016-10-20T14:56:53Z,TRUE,2016-10-20T14:56:52Z,5f346e857fe83f15c9512572dd02dc8349418447,32,36,2e226166e9a4f9d07af0e2b7612e2876718589ca 9ee4e3eb080b824da7af945055215ca783d4b675 c3d53e04e9aad03e06a7397039da83364d3f3bd6 dad3d82bf7b7b161adb6f002a7a367fc3189fb48 13f48e4756e9741ea1f08a65a95a1549d1f170e0 3f27f7489b2f9f91462f64b95f90b61b87dcd3b5 acad0b853f123dc68161cdeead254f665af38aed a22c890be03de3661d10ff85f259a61cef7805c2 559361f0c6a353af2f1db234722ae236716bcb7c 21d19e2980761684b2a61a3ef98c9bc8fea32f20 7cd419aa055ea2d1fe4afd6c1290e96627fb1d39 d7379e2131d26c46e8489d4310b20cace4c29af8 e46d4d525998f8e91c4a9287795e6601a69f4ab1 fab9ac326eda4f7fedeb96a08b7fda699457429c de449e2fd42b7398583a0123e0824e39e6375d92 804188bbcb8870b8ae9fdf063341af2a6e9f0746 5915319087905427797af444ea644edbd217e9a5 ceac188b4129007992ffe0915886142a1c09fce7 777004ba5c9f881026de129dbda8422b841d3a74 d9f8295ed6b206ee39a5eb4d182567359c7cba82 caa4c5be11e08b005ba1332f45e4cad6682cb534 c855083e4162ff38e512a7227550a970057d3be6 3b8e07ef79fbf13204d4cd014a0d7cb3583c73f7 9d75d149faa715af3560ff4e09313c836ad2b866 3f2085f526af5150c8cbfd184335ff4e6cbbfca1 90ad3fbe425ab1b6a9a48c05eb9dcb89528439da da0235db85dd016a59295203617415a956f03421 d2b7fe92263e4ce86584c79f7ea012b40fa3dc25 c33568bbdb407b3a5abb8fa77f21ba45406b30e0 6376343ced0d6075bfed36094fdd6c9e57b20914 6ee296b88500f76d6e237d57f4ae8d9a4dc111d6 4f0ac442378a910790da9950bc76bfdae568b151 0b16a5ece850ce5e7f576a5f84129df37f341517 4a108d2b97d8c39df8e797eb75c833f98b472a73 9cb4cf917159be70d3d6015b54f8c309b26291c2 def22c884aba5c173af32dc6b91f3f3fd589ca1e,Enhancement@Requires testing,FlySky Ibus telemetry support,This is an enhanced version of @CraigJPerry pull request https://github.com/cleanflight/cleanflight/pull/1723 dealing with issue https://github.com/cleanflight/cleanflight/issues/1125  My contributions: - Rebased to current master - Unit tests - Discards characters that were echoed back on tx creating a loop. - Documentation - Possible support for daisy chained i-bus sensors (experimental due to lack of hardware) - Configurable Vbatt/Cell-voltage to make it easier to use the tranciever voltage restriction to 10 Volts. - Build time define TELEMETRY_IBUS to include code or not  I have tested the code in my quad but not flown much with it since I have barely set up my PID:s. I'd really like someone more experienced in flying to take a test run to see if stability or other things have been affected.  Credits to @CraigJPerry et.al.  Update:  @ledvinap has given lots of good review comments which are implemented except for the frame detection.  @cj1324 has done some bench testing with different receivers  added to documentation.
cleanflight/cleanflight,1496,2015-11-15T18:29:46Z,2017-02-25T16:55:35Z,FALSE,none,47e73ba42379c43a86561dfd92169fcbe8cdc45f,62,46,1856ee1675b22bf5523e30161b0d0204afe8cdc7 f6a79a1d29acb0890d7a041d87716915ed518ff9 63f3b6e7eba03b2739a04f33d88a5326d9f72126 ea8d1b3e15128bcf0fed43cba7feb8edea90000a 829e20cf3af38ed2958b98e2ad8a45d3160a803f a7f4d830a72717511e1767c0a13a6b54544de371 2428c017ccfbd1dc54ec895f863fff853c3220f3 33b5bbdb98f8d81be78878f9cb657aa31810c2a9 45fb775001f12ba102958197b0f8125758bc7de6 82958d602bbcf59d6e32e098336a258cb91b7b5e 3b5e157177ef405a8d86ddca8352badf9d1116e3 13736be325627d398ab66f195861af28e999c5c5 d2a92682b60a68092709afe25d6ec200654a3784 f98cc5ee103afbc8cfac0de66250f202814742f9 63c67636a5339ae56852b2681a38787ae2d2d0bf e6a44ce029e0e543b79fb5968a0a1018a60426a6 ba176b98bd6def5cffeaec4c96214ca6a36d4af0 3ab1f2b27605c9b3618bdb70aee839868b0a0595 51a6140c898220fa62b2f7b92f5c33881eac8c88 a46b73864fca963caa598ad3e4c33c128d665921 25da5e2e82be376dec6689cd1c6d2f180527fe32 91e2d4243c2103db880070efe85865be2221f386 b1fc6be49f56488ba8ad38653f6ed261f8a03eb8 44edd980a36590a986cf539e858056fc3a997762 ae7e0ed714e531c5f041824629800112ee607881 4dfabb9abf71b17cc4b65be3af64f98e2db6ee88 a544c9710347bd6fa15ff11897bf95335680e385 361dd5505df8781a660d454ccc08cf561de6e230 c7a42b7cfb5f06d26578ebcaefa91b0f91ad921c aa9db18b017b799bccd1fb8f6eabea55197d1e44 f13b6754de071ab7580ef3d5502b90bb4be5f0a1 ad43dfb62c76ea176c5415f0d30bb2088e81dbe5 d696f4685582531b7f247fc6338a9bc802a80093 e92a7f74a1a5a9d61399c593ef0db383a325a2d4 cc571770c5d956911712ff23dd948bf7da8b7968 10129768bcb21ebd7d76e9281bb0d0b54b7d9cfa d8c1521c12e28f83f652cf28a3e8011915c80932 07a97bc6829d0eff37e7cf1af9d6c81ad6f62fa0 4a1294fb2ca7a816189f6e712e7aa18f8a082f52 3ccf8b875343c49db7e63e17caf5178714e3e857 0e617d293aa2ac26904989dbafca093fe67a62db 96416df5349279368b80c5970a8a0ccd8fc532eb 8ffc69322c6439644b55baa3fd95f7129a7d77bb 09cc84cf02ab95f686de8a027f24f975ff32e5b3 92d7183ebbb339cde612467f4bf539f5c558ff7b 1e3b8384fa505774dd05e2be083ecbb945a99edf,Experimental,Building Cleanflight to run on PC with X Plane simulator,I'm writing support for running Cleanflight on PC with X-Plane simulator.  This would allow verify new code behavior on PC  like new PID controllers  waypoints and other stuff which requires in-flight testing.  Currently i was able to compile base Cleanflight sources for PC with minimal modifications. I've created simple GUI with LED and Display emulation.  I've implemented simple bidirectional interface with X-Plane.  Currently supported (simulated): -ACC sensor -GYR sensor -GPS -motors -EEPROM -Serial ports (redirect to real/virtual) -PPM input (from WINAPI joystick) -ADC  Requirements for building: - Windows OS (joystick support currently via WINAPI) - Qt Creator + Qt Framework (MinGW)  To build  just open "x_plane/x_plane.pro" file with Qt Creator and run it.  I'll upload detailed instructions later  if there any interest in this.
cleanflight/cleanflight,2641,2017-03-06T09:26:24Z,2017-03-06T12:33:59Z,TRUE,2017-03-06T12:33:59Z,d778ae93a60eebe6cc1553bab5249beb2ed428b0,838,52,df1409afeeeb25863cbdafb132633f446467e503 11dba62499d39d138832cb2c3441bce10da13f40 b29e7b66cb2c3688ee9e9a6281258759577890ae 12a8171ed7beab353f282224b1a6f2c178913a1e ee2430f4a325458cbdb46d0f40146f3d8386246e 31eac018724e84b277e4ccb243a6f9f699147b36 f98b52664a54c4b11fce3b675e58aed05f0207be ba3ac1222051b939b524d7e0440d3a690cd1e7ad c4a9e2d35165783c1ee297678f5a8a3012ee344c 85b002bb73f3e55e7dea30e23672eb34a1297132 0f811b66bc572151441fd841469c8c47b0e30145 499e74efa47bacf35a0e143e4afb09801ae38ec7 7440c6c7a11da41eb6f487e6038aee415d4d3f18 9b62a4e38f42d09e9fd6091373406c61acfdaae3 de7e72df14b3a4c2ca1c6843e9e553b1e3b84b4c 40ac07652696e7e88cbf82e452926659602a0a93 68ec1d3ebfea3623389250631a24eef92924c1e1 e3f9ce2578cc7f735d5317c2127f071f00d7e19c c1a02c714bbed592705d7b41e91a882d75f7a693 f984838d27a0c705420dccb4b8b344080173a459 c71ef27104e0b69fc9252de54179b6ddb0c67942 8ab4e1eccf949876a9dc2fbab3b3458b91c590ff 67ac6dfefaab128e1edd7dd818e9af724160a066 f7b731da7b3a9d60b751217acd09a8fed80f2bc7 792941606fc153cd9ad2fe9c8010bb3043a7f1e3 8cf700f7f418cb28e2d9dfceb573cd0c84ff4ebb e99af524b0690acd155450d97c97a261cf202d51 d3ac73a0a08d80f9179853c0d0a072c85080a901 fe955155e45cfd5660c9aa220d454d2e2c165854 a33ab561bacf40444eacf5fba910dd77f6aca4f0 eff8775205529f3fefc852615c11eee049fa3abd 634b43eb9c775804254fde116e19e578793f245c 16309b1a2c8dbb204985684e34e9dc99dd228f0e 98e76146e87a77a9d499ce38f10dbdabb486e92e 75e34ce0c6ff0959f36f6695e75d7af47b7e20c3 e625dcd3abae38360f86055ea39b1b5dc780f085 18145c9d4772b5eb09a564d478bc288635ae1526 3a29906704230c29ba2046325cae4f2e31a51596 401b3e69198f3f08c0684b9a013ada09d0f2d77f 5e0c35e2e749b5fac38c3e24c21e65f9d0265d51 805fa5545bc27f54dd651e4329b042d726599244 1611ab9421cac92e520d151f97eb63765ac28a3d 1c971ff8b28e1bd2dedd7d469facd73c58c36a9a 6c457d52847fe0511f069ffc57374138533a721e c3cf2a9450a5e2f3076c26281185a6c1e7cb0526 45ceef787b4ec7e60256a3f0656a014f5b9a33c9 f445d27fd6af2d65fec08e38d1d00931a1080ba2 ef32cf3235b996520c06c04f838a67c433cdbf9b ada2de3a2befb6cfe789ab3e2ec1307698480257 b8d6fb29df2c15471733d534911f63c4cf7b031a 13ddcdb9cf06398b34ed3135128cecf461c5b6fd dfad9c491f650fcba5d552b8a861ce7b75ae1f43,,Merge betaflight master changes,Merge commit also resolves the F4 transponder conflicts.
cleanflight/cleanflight,2645,2017-03-09T15:20:48Z,2017-03-10T00:24:07Z,FALSE,none,6183f7372b58915b17875e84463fb7d13e04efd4,48,7,f1ce19167fff4b222f29c3367c5923c47a97d219 2acdbecae3e639aa0e5a222c7cb12ff1efbffb46 728b596e1b6a0f4f37fe68c54b3ca5d502a2e645 b7f48dc5ff2c1e4548e88b91f712c1a1dd7fcb3c d48398d15c7e0a31c31aef497ee64294166b5af9 1964362dce2794c43c0e55354937166904802fda 9b6bb823b9bf91f48fdfc2100d4392a5b6f07ecc,,change camera settings from betaflight osd,Is it possible to make a feuture that we will connect the osd cable from our camera to a uart port  and change the settings of the camera using Taranis or betaflight osd  without having to take apart each time our quads to connect the osd cable and change the settings of our cameras
cleanflight/cleanflight,2580,2017-01-17T20:04:26Z,2017-04-01T17:07:20Z,TRUE,2017-04-01T17:07:20Z,9f7f2f2d0896c1ad1fc17a1faf42dfb48b544102,15,4,0c199bb2c06d57aabf757f15e3332d795583f52f b9af241e751e258921fde77697e089f7308e0569 9a240a1f3b1601184fae971217f3b3dcf4c51155 5d24bd3cc5946c2e32b9401d7684f0b55cd040a4,,Support for next lap timer,Hi     We added aRCiTime IR lap timer support protocol. Adaptation of the configurator is in another pull request. Unfortunately  our video as well as webpages are only in Czech  but soon translation into English will be available. We added basic subtitles to the video. ARCitimer has been tested in several races and it worked perfectly.     We're arranging other competitions/races in which the aRCItimer will be tested.    https://www.youtube.com/watch?v=PbFRyhuG-E0&t=6s  https://www.youtube.com/watch?v=lQUbsCUiIeM
cleanflight/cleanflight,2648,2017-03-12T14:46:07Z,2017-03-19T02:06:53Z,TRUE,2017-03-19T02:06:53Z,55fbdebb2a8f805c37268b07a9f1687f7b37d798,80,25,07cf80608583987c8e736ccd8475fa089f21e212 546a5a9a254151de45d2ba526d1af8b843fb555f 5e0d4ec53ca4c2522b492db9fb0241ccd8a3cd95 dcd2437cbddebb5ccacc8b83ed0582b4bdedb6c5 1cb6cf7dfe503d7195fc743a0f49915298fd4d24 65589c677d15acdba8be917fbe951363406c2e83 4bb7a1f12b87cd1b5d3b3f027fdb15603dd3e0b3 b9030d77f5f882a229720e10d0715db5e3e9aa1b 1b9cf22ba58a10bee79250eab653db97dbbd2f49 156ef818d54e2ed46a8b61e090520458ba55a9c6 69af57efa25f6c6d783c7634c120761eba655b39 b5c35843d2e4c9f1b31ff5aa570a7f5cccc93db8 870e6fad50d310c01375e86feadc212f745f8221 b5b1527c7793718a6a9eac1b116e1005d683d97d 687cf8f256e30f198c46f54299607d5bed6d7a30 7fbd6ffe5ad7862d48d435834d4d8c3e1ed38395 697069963f1fa4b6de66d23e3e48d12239062671 d9cb13477f6df7b82911289df744455ca91f12d4 8e222f83f42abe007ef612f57a4a41e93a5f8c0b 42002c934b22a2d9f24d952f0018a8e9f907666d a51bf341dc4130107cb37b28c2e0517cb18cb97b 70e53f794a2dd18c4f034117d9019479131fd0f0 79439caf05cdab6f8cf5c638f5d6346914a0ce15 765b5a0ea11ad506353ca286ec353c2cf894f1dc f3e092d51cffbcae7612780bd9b07c7d1c0d5323,,Battery Voltage Current cleanup,Port some CF v1.x cleanups from #2221 to CF v2.x    The goals of this PR are:  - [x] Separate the concerns of battery from voltage  - [x] Separate the concerns of battery from current.  - [x] Separate the concerns of alarms from specific voltage and current meters.  - [x] Update the MSP code to allow configuration of a single battery (e.g min/max cell voltage)  - [x] Update the MSP code to allow configuration of any kind of voltage meter  - [x] Update the MSP code to allow configuration of any kind of current meter  - [x] Update the MSP code to expose any number of voltage meters  - [x] Update the MSP code to expose any number of current meters    all this is especially relevant now that the follow types of sensors are available:    FC built in voltage sensors (one or more)  FC built in current sensors (generally only one)  Telemetry / RX voltage sensors that can be read by the FC (one or more)  Telemetry / RX current sensors that can be read by the FC (generally only one)  ESC based voltage sensors (one per esc)  ESC based current sensors (one per esc)  external sensors that measure per-cell and total voltages (generally only one).  other remote sensors that have voltage  current and RSSI inputs - e.g. PCBs with an MCU with I2C/CAN/UART connection such as MinimOSD  SPRacingF3OSD.    As a side note there has long been the desire to have per-cell metering done by the FC.    Key points:  1. each type of SENSOR has different configuration requirements (some  none  etc).  2. some types of SENSORS have identical configuration requirements to others (e.g. ADC current and Virtual current) - but this should not necessarily mean the configuration is shared as once is it shared it's hard to separate concerns.  3. battery concerns should not be mixed with sensor concerns.  e.g. values for cell detection (min/max cell voltage) have nothing to do with a VOLTAGE SENSOR.  values for battery capacity have nothing to do with a CURRENT SENSOR.  4. meters can have multiple outputs  based on one or more sensors.  e.g.  current METER calculates AMPERAGE and mAH drawn from a single current SENSOR.  5. Meters use sensors - they are closely related but have separate concerns.    outstanding tasks  - [x] cli configuration of virtual current sensor configuration  - [x] fix tests  builds  - [x] rewrite git history  - [x] check PR changes for FIXMEs.  - [x] complete and test MSP changes.
cleanflight/cleanflight,983,2015-06-03T11:38:53Z,2015-12-14T23:45:31Z,TRUE,2015-12-14T23:45:31Z,086ef9fe9c5f8096889afa47868646f8d50085d5,5,2,c46a5e478bb2cd5acdd7d42b396776625539a466 04a83dad1bac03dd8801f6bcbb72fb34c7435a48,,Implemented support for FlySky i Bus serial receiver,This is per #780  Code mostly ported over from baseflight.  Until configurator support for this is added  to activate iBus receiver one need to execude in cli the following: `set serialrx_provider = 7`
cleanflight/cleanflight,2704,2017-04-08T14:13:06Z,2017-04-09T12:42:33Z,TRUE,2017-04-09T12:42:33Z,13f12b7053e022d52aeccc3656509b146c241e18,27,10,ee791407ac1f09ec967799d432b3233f69f77d4f 10a5cfaf5c62f2416d0b454aa9162129117f99dc 90e37a08d61abb7c3244181ab7f207b39d39a2c5 1a9701da3585374948389d850afc390e5bcbc108 c418693d267f10007e653b78f985e505ebe3e52e 57bdef318b7472ee6772e0231a688fcb83b2dbb4 45bba86af12ec16b225520d87af53245309dfaaa c3c0c818e354c1ae2a0009d7008355d4d6aeda26 5660564196121b7fb7b0b78a2608818c616c61d3 a2ec6fb7b9efbd1e787efc970eba00944701d074,,SPRACINGF3OSD for CF V2 0 0 via OSD SLAVE,This PR adds support for the SPRACINGF3OSD board  it allows an FC to generate an OSD screen which is then transferred to the OSD board via USART1/ Serial connection (through stacking pins).    The OSD elements are configured using the FC.  The OSD video mode and font are configured using the OSD.    Enter the OSD configuration menu using Throttle Mid  Yaw Left  Roll Center  Pitch High.    To use:  * Flash new firmware to SPRACINGF3EVO/SPRACINGF4EVO (build from this branch or see download links below).  * Flash new firmware to SPRACINGF3OSD (build from this branch or see download links below).  * Enable OSD feature of SPRACINGF3EVO/SPRACINGF4EVO (NOT the SPRACINGF3OSD).  * Ensure MSP is enabled on UART1 on board boards.  * Upload the font via the font manager on the OSD board using the new configurator  see link below.    https://github.com/cleanflight/cleanflight-configurator/archive/update-for-api-1.33.0.zip    Video demonstration here:    https://www.youtube.com/watch?v=WHRSnqnBQNs
cleanflight/cleanflight,2710,2017-04-09T17:18:48Z,2017-04-11T08:19:05Z,TRUE,2017-04-11T08:19:05Z,401f029991f119c07726fa8d57f7fe74c97dc86e,41,7,5cbc9839bf40610b076ffb984cee9d50d7926d66 1bac1fd1667068ecf3c281bf9c6e9565bc31db6f 98b94dec4bde40bcc279ff9ec0bafde972a04bae 82bf027569d4abb64bda2d899d769145251d6db0 9a12cfb0f6cdcf97dc09bb834117eaeb169c7e33 e1e4312f1271ae24626ac1170187871c9ba862d1 3197a1f649d0c3ac7a48b6f14e487f5bd8ba5a91,,CF BF OSD Slave build system,First cut of allow building of the OSD SLAVE board without all the flight controller code.    Likely the dependencies can be further improved.  This is a minimal-impact solution while there are a lot of other Betaflight PRs still pending.
cleanflight/cleanflight,2744,2017-04-19T20:37:18Z,2017-04-20T21:55:40Z,TRUE,2017-04-20T21:55:40Z,020e06d867fe01fe0aad1e31247609687fc04a01,5,12,b6617005f4961e2a208fa028a764ae43e190822b 46bca35ae4e5ad610d04b34b0bcf78a7fb85cbfc 8c3869dbb75eace4b49ca74f7e6f406fe181fb30 6f5a2421e6fece19546fb14623d6a010104dabba 3f49247546b6e2503121b3d20bddbd83d4f5d31f d623e0b862d859b7908d9443dd02213cde310a88 265302225424bd6e0e7d3baf8680d8f2e93dacb2 065499007e978c77038b3b4148c6791903df43cf c5aeb001e80b8c82930a77f84879127f6334af10 eaa25c780d6024b37c79346f42d9e50f39ce655a 1a597630ad4e31bed55857239f21cd7e8c023bd4 c8845007cba8c4679e434fbd8b73cfec6329ce53,,CLI Cleanup 1,- [x] Extract CLI settings table so that they can be used by other parts of the system (e.g. CMS)  - [x] Remove CLI backup `switch` code and variables.  This was always a pain because you actually had to remember to add any new PG to the CLI code rather than it being automatic.  - [x] Adjust and fix size/speed/normal optimizations.    SPRACINGF3NEO:  BEFORE  ```     text    data     bss     dec     hex filename   249606    6580   32992  289178   4699a ./obj/main/cleanflight_SPRACINGF3NEO.elf  ```  AFTER  ```     text    data     bss     dec     hex filename   243952    6584   32988  283524   45384 ./obj/main/cleanflight_SPRACINGF3NEO.elf  ```    249606 - 243952 = 5654 bytes!    NAZE32:  BEFORE:  ```region `FLASH' overflowed by 748 bytes```    AFTER:  ```     text    data     bss     dec     hex filename   127256    1616   18376  147200   23f00 ./obj/main/cleanflight_NAZE.elf  ```    126*1024 = 129024 + 748 = 129772 - 127256 = 2516 bytes!
cleanflight/cleanflight,2721,2017-04-14T20:27:34Z,2017-04-17T16:06:49Z,TRUE,2017-04-17T16:06:49Z,a1a8af51875f6c02aceb2c47a7289aed4707dd64,49,23,a7c133e8edc33b1287750faede22f90422cd05f7 617976468d78a27d6f0fa62f9e05267c93348ca6 209e379e1a0e98431a114e2f1d44c813591cca84 7c469683d14a622c6fb797d7520c8cd0f95b4119 26bf7135a3166863bd55ea440b20957a0f99c0f9 93af4270e4cfb05e3791de70b1d0fdf630677277 87423181a0c226677c16c17dd07eebca23fa1bfc 9df200982e00c98e495923cc2aaa18932e258897 3880291dc5f494955c7cfd71bf2a5f9e1be57766 9664763699db7455d6d9f4e8b94c06559b513f89 dbd48a3f89879ef12fe4a27ff0b6c8fb42732992 2e572ed8fd52f0261a765cde3b054dac98f3ef78 abce1e3633321bc07b0adea4f1fb4dacfcd976d4 c910079d492492188b009610bc7b20d6b365af20 359e1ed87b154709daecd87ba957d9bf23b5e435 f84d9dc4e810ffb0ce3327eb63b554bf64627b66 97719d6daf41421e3e0a5145578dd5e7c7351b05 7eb6616e8654faf0e02a12cafbec75e21e960cdf 0e73898afdda6057fc3be994f682a94dd157fdb8 0b163382493cdc89b3517aa2e2ff62313dfd82be 88d8f8d170ccf514e85a5200b70ea3e81b635fbd f84475afefadaf67b57eb3bda45e31add6143a64 a1a8af51875f6c02aceb2c47a7289aed4707dd64,Critical,CF BF Cleanup VTX api for RTC6705 via SPI and SoftSPI,- [x] Delete VTX feature.  - [x] Allow OSD to show RTX6705/SmartAudio/Tramp settings.  - [x] Allow Sticks to change channel/band for RTX6705/SmartAudio/Tramp  - [x] Allow OSD CMS menu to change RTX6705 settings.  - [x] Support RTC6705 with and without POWER enable/disable pin.  - [x] Delete 'vtx_mode' and 'vtx_mhz' settings. (use band/channel always  reduces code size and makes all features work all the time)  - [x] Update RTC6705 via soft spi to use VTX API.  - [x] Move existing VTX CMS code into vtx_rtc6705.c (as per tramp/smartaudio)  - [x] Review comments from https://github.com/betaflight/betaflight/pull/1912  - [x] Port NEO VTX Button code from CF v1.x - Continue with main-loop blocking implementation for now  this can change later.  Of note is that the VTX  api does not support cycling around channel/band/power so the implementation will/may change a little.  - [x] ~~Port VTX on/off via AUX channel from CF v1.x~~  - [x] Support optional onboard VTX modules.  The SPRacingF3EVO and SPRacingF4EVO have VTX connections but do not always have an actual VTX module attached.  In these cases Tramp and SmartAudio must be also available.    Marked as CRITICAL as there are many users of SPRacingF3NEO boards that need this.    Note:  This PR does NOT attempt to address or otherwise change the behavior of the RF power on the RTC6705  see https://github.com/betaflight/betaflight/pull/2705
cleanflight/cleanflight,2661,2017-03-19T10:19:23Z,2017-03-19T11:34:02Z,FALSE,none,none,89,42,0a37cf1b433432a4b1d25be7a4276862876bda21 92f0f7ff69aacf510a562f2b5c5525590c4b1053 aead39c2796109859a1efc7ec09e8f0e923b83be f509582e6d91bf3d16f9cad2ea4aaff244e74704 45252b5f8489267855ee5c8fb9db0ee13dd4d5d0 d91987c2870f558cd844c2f3af480ad715152db6 e1ac5b82df522bed19a9358979e8d9f5912352fc c8888ad6bdffc65d01cc6ba3d631aee32c950d81 c40c507f1b0ee9459dff336899ea72ebe57bcaf0 636c194aea5aa10778c29689d3ca828c8d883661 4c517a56eac2ef5de4aa6c0142133803f5531782 e37944ba7bf66acdc7a6529be7fad01c920c3cae 3c885349c618ab56e4b5b552b65fc965243a998b 4af589f9fd537c924bd207fec44b80311709ca6f ae58a07f2aad7d06e4d017b89c7628fea6ea39e9 b46e0fe46dc8a6200007403e9808244e4afbc85e 067d3c0ac2645af283f0277c78d0d2183b0156bd c6d114813405cb3f8e2587bc53660a412032c827 15241b1955bfbd4139e918907b75a866be488d3e 089042e13651e212da5708285c35e5a4dbcdff80 f3e740c5989a4ad2741c30abd607bafc5f0634b7 dbd819c85a24edcb72229a40f5bafbed46220361 249c707bebbdf39f04438fd29f10b8169410e39a b0c49caa3d9da0df9d56ae70d751e4ba15882730 2f99749003385122121d479980e91fb218561fef 1cd42278232c2bb0b10e3a6ceb8b2d8d6a0db98f c59e7312c246aa2b3544ec1d909e1d7ca2079569 382ef9de68354be5efe0137f32b5c933957b4eeb d331ceff0b865a7736476515957a2630a037d8fb c0c6450e613219d7c200b12ff76b7246bc90b014 8145dfba0caf91a2b14f054dad22a9392c5a82c2 85b05d3483cb223e513b56a1fd9deaa46cc6621b 9482a126779b9f5e1c1302ecff0c31dc782e75be 01732f45238ad4cdfcda283ea2414cdb994911ea 486b5a1b9aedbfdef61b3e204c6f012423bbf234 709cd9f8df5d6ddd84ddb2c1b0df6cc6a5fd4433 8e6c7fb9e3091ca6af2d81b926c19e337a1aa451 abb6eb5b54b23c7bf5731ba6fa931987a86a838e 4554019c52f5d5a8f203be093457383a627d0473 31dc531ca0dab558545eb457957287ea723c8a5b b473ebf0d02d0efdbcbd7797f0b49be9855912b5 bc0a0a0eda82aec1d68833a3796e8fe7b26a7aef,Invalid,Battery cleanup,from CF https://github.com/cleanflight/cleanflight/pull/2648
cleanflight/cleanflight,1107,2015-07-10T05:20:22Z,2015-12-30T11:47:42Z,TRUE,2015-12-30T11:47:42Z,a8eb29e7381cc3d835e85016c520b08629e0eeb4,9,1,0d74912c02c586568230d2f7a633cfc6676aed92,,Added fast acos atan2 functions Added unittests for fast trigonometry,This is a continuation of #1092.  Now cleanflight does not use any libm trigonometry functions. atan2f is ported over from  here: http://www.dspguru.com/dsp/tricks/fixed-point-atan2-with-self-normalization (also available here https://gist.github.com/volkansalma/2972237). acosf is taken from Handbook of Mathematical Functions by M. Abramowitz and I.A. Stegun (reference implementation available here http://http.developer.nvidia.com/Cg/acos.html)  Code footprint is 1480 byte smaller:  master branch @ 52fe86e66db4e5f3d51422782b781d2b65db0182    text    data     bss     dec     hex filename  119732     364   12860  132956   2075c ./obj/main/cleanflight_CC3D.elf  fast-trig-improvements @ f3b571179dd639b1a047bad2e8b2f03f991db5a1    text    data     bss     dec     hex filename  118252     364   12856  131472   20190 ./obj/main/cleanflight_CC3D.elf  looptime=800 is now possible in rate mode and PIDC1 on CC3D
cleanflight/cleanflight,2814,2017-05-25T08:48:53Z,2017-05-29T02:54:11Z,FALSE,none,none,146,109,8750b1400b9da200062a2c2b8c5515f95e60d940 65844f68914eaf5a911badc75299bac70d71ccf7 959f981ac47260f2762a53e3c08e838d21fb21b4 cb056562061947fc084dd3ad326d8695cf5d4c97 3b353ae948717dcbae2d10758b5f730b6fd8c66f 2b1308a5562e56c979122ea0159c8c90b0955c63 81cfb631cc29631037f87ee9cdcc4736049f6442 a987285ef77adecab84a4cc7e89f57eb1c20c24f b6e60455933e6bf6ed0f9eb5fc168bac7e73a4e3 a3dea9d72dbbb113dc5bbd5e509d9debe46cd4ac 2947a0fe91149705380cd6e43fee0af8da2f4ac7 e50ae31e8386a2a536b0a9d239747548b80adb58 0cf5161ec4d98ddb20eac9d65b0de3d5a57237f5 01912dc0ba253579ab634f39567a85a0d81ef062 65fdd805e350cb4391af49a66a600cee321660ca 4ee7a330d6f8531da405dd92868f8ccf2f32992b f2cab20e95218b0d6dcc5ee11298b000163da63c 681b5e79b654098e9203055120c99ab706b75675 0d13736e2fc6594e115fc63a4cb4b63b760d2090 5678b5ec273801e522b1b71cf3b0150d6f3a06d7 aec33b8a7df52a25e642bc448bfc7ebc2f72ea95 ca31c1ce8947878a4458b61199fdd87ef2b04f69 f55077673d0963b237ee1bee13322f0b4f9431ac d9909b91d3cf359405cd52c2023f814b8ebcc695 cf8b65e4eaacfcdecc2829fd1756059d4e4113d1 0d136b6f9c8def86e939ca2fc706ccc780acdebc 76a9a9f3fbe771df2dbde7ac784275618111572f e8ce7b4e58cd15395019d3ff39367f81e4bf12db 75089ea24c6d5aa104e1f90dc2bca51c7f469a2d fc199e900e981e67e2a4acdaaa68407bc9f9656a 6cf0a06fcb826f239c60759aa6c4e7cdd24aa027 02516b6aae4e1d66fe0c42ab15c6e05cebce5159 77f2e6673be68404839e189c078eebd8a501d446 6b8fd33173c30f9f1b65cc73cc2a3e3f5e646ad2 faf1c2f11213612b19f7fd7c9e7502484e8e62d9 c7f8e4d7a41044880b030633b471ea07ba88fef0 cd5307188e76a5bbc2ab87ebd8ba899fdf6fa5bd a2453d1980142eff1250a413800cb2ed62adcb46 d2b2b8b8bb7c330a83851424459feb9aa38df174 b2b4699b00c29a0f482692183698f77594ae4bab 968d2c222795fa411d3035331013e9db7f354c22 647b8b786fa5b8fd2cb326c1e3abb5f049cbbcb3 6e596cb252b292bf7220459486f1ea8ec08afe67 4c063b58755d90980f2a738b4b6efb562965bd69 26b1cd42372acd7c097afc83401deb94c6ff3ba1 58212464c53b84d6e560e9e7c250fff56649be05 f9bd5c2218d4ddc9c93bcc8c947fd9963b0a2ef7 b678ca08a1f9349d7c3ded544d8d74915bb7c60c 6854a773e246e5b6b74a3edd94c55016444b72d4 875f4a4ee6dd38470f004343d82791f5f2f40dd2 30eb699d10e5901dfc0fb4d14e9f49460d677b9c 592f1c23ca8761d9e1f0370ad81485c16d6c34c0 2463d5164e2dd079d8175c84ea8d21d691e7d55b 5b17de742419b58f37a1dbdcd7e5a6e8dd2a15d7 ca60aac034124fbdd4f214972f0a41e6f2ef4a58 9de89cd4641e2a2e3768bdbe6e1f73ee2ed3ce39 d8c4953bb5c26809a841d5684ebecccd18912c62 a8c8a413aa92a44f06dd304a080d55bffe6649bf 099bd97f0a9f524db0aca51a645de58803062518 6645d439491011d9eaf095e3866069f0fd466af7 b8e35bbf3a69e5384ea49ce08da9f9945779800a 8b35949e9a75b96f00d1e59bbf36b5f52bddecfe 3026260ca2c168a792545433b6d36da44bfdc353 90c4815801b44e6d1e98554198308fbd18b34055 212298b780f004cac165c23a673e296f3713d12a e5ef8cdb6ab7efb519525172c90d64a79972e8f5 123f927409ced799afc40c37e39c520871602208 a452b21a5959f3ed76e3e8bd6f7f8fcc20fc5e22 a5f57b64dc1269e620f86fde4907de49c963675e 75483def670d517cfd1d13eeacf82e1d4edd1dd5 9e547d4d9fddfb406ad0efc328f3682f6d7f08da aaa72f2d680d5be63489ef7e2ae49edada2932d4 1262317715ff51d69f0335281e5b28e21be053fb 1c1cebc4486da00b7074faf0ae830d1919b25a3f f784148f2eea43118845bbc3b705825ba2d7f1d1 defd35cc6167238e38b54e1d6b991a6d35abf88e a3a65e1c67d72d729209a543e1432b34ecb2009a 00bd8d91d5b871b5fa9abe6adba66291d68bd844 77907b5c1d79fcdd3291b92a02011514af2c7e3b b069e011fe621d412260688f7d8e147120f6fd27 f15c329be3d3ced92ed45ab75121de571adc37c9 d2ea278274e7694b75606868d04667dd67b7c9ed 6165ef6f9c9e2b824cc0d2fb13ec4663e111f578 f48d92e4752e005f2d01403b61f76e2fff8a4503 5d646717fe232d6cecd178bcce559291049676e3 45a8248f620545b25f0664a0e78894dd082e04e6 dbdbd8724a3d5c804c5e3d3ed5cad60d90bd5785 919f0caa6b9c01672eedeb86e01fcc48cf3ea32c 9c409037131fa368ad2833ee4300ae5ac9c00593 d83f0ddf5e86fe152b361d00de95cf2f2fa049a8 8438697955d6972a14944a4dea860bafc880dcf8 a1c2f79dcdfa4a20faabbc9095826de715535708 f6c224bc158112fe9981dcbc39f73df7d4f8346a 8a5a0a05437a7457da7e31573ace3ca378ec78c3 3170a88d1dded6c7ca17b014725617099c20bffe 468217c7e8ef8cbd15f7cc128195384905c8ffa1 41d8455b5336f7141e63c6c670b48ba0f9366c12 e6b49247f082399e5a30dae80017ed17e3e28988 5f4a72ad5bcd4a0d4171dd9ba84740a732561d4f 562ffbdbc4a3e634b56dd8f9cc717a6848facfea 29917db6f271a06cbde5ce0c8428bfbc4db60040 f4e4e45aa297ceb3d35af67c8077b0c17e13d205 32b4693a5012de5e44c13987372c50c9a088c791 4e8a4a29b515f1551f8140fe1595126844511c26 7cf5a0e6846c7847408c1788079c78a436fe8dcf fc08691d384fd5111e419604eeedc55ca75fe51d 329c149fbb5ed1c05be7ad65e61b9fa2bdea6112 df83cb3f38c0c4521570908151a981000b10f831 4cc5b9bb6944eeca04c9c91bd3df33776fd8ffa5,,Changed Throttle LED Strip functionality,Throttle Overlay for LED strip fades color (all HSV) smoothly from chosen color to next user defined color
cleanflight/cleanflight,2843,2017-06-05T08:08:54Z,2017-06-06T19:37:11Z,FALSE,none,994ded992eb2ca2d2383b8b078d036ebddae824d,51,26,fdfe9e8af355ee70edecabe206536ad95fc69b6e 6c5997ef9f2969094ee4a8794bbb33fc2bfa2c7b 2d45189fe251bc78ecebd659b1bebd8b11aa5985 4dca2d3ddc7507190a6309394e670620303e8485 e3b3b6881ca9874a594873d15b4e5803b7ed26f9 e016eac457fa2d40537dc4989a1a8272ca1dde7f fb6254aa1f0afe7ed95d0c4529d6680c5c49734a 08b401737b17c6b43b37f6213bb4cb59f6a92cba 6a39d35c3746080148613ed9ee7dda886298129a 39d6b31036c74a4770a631e27a5efcacf5daf465 5e553ea35d001e9b96473117d6f6461a8e8d449b f6c5726d351cd5773a397a06d1bcc9dc093f9611 eac5cec261eb3faf77c65229049c92861d0ed66c 926c5e4184c22946d9faa2494a261a999b340b61 46feda16cd554132b449c8cfa7017be7b4b27d75 91e91018082300d7d3f104cef49ee6199d5f6b88 70eef18497b60f694c4d0534266fd89bf43c9c40 da042a2331fc4b097e41cfcd32717d8d41cd21f9 671d45370953b586c750340ec2fb77f64ed11620 a72f98e4f3f97bbcf72ac969a15533f9e7d49295 15a786d7f194849944317283b924e28367a6e4d1 1ed61a25eac86219089790e6369856fd861f34eb 64c3df565bd324c4f68576180702a19f0dfc81ef b6c9d93e2552602def10e71cb047f1d1c547e91c c5c459c7abb6facede0ab08e59e6a3173cf1b984 81a0fcaddd05115e6f1922af53171dfa33458be3,,enable BOXHEADADJ when HEADFREEE is active to enable correction of gyro drift,enable BOXHEADADJ when HEADFREEE active to enable correction of gyro drift
cleanflight/cleanflight,2845,2017-06-06T20:26:16Z,2017-06-06T20:39:34Z,TRUE,2017-06-06T20:39:34Z,e5d7ff4ab23f6c1e6098199ab3200e5e1ec2b064,48,27,fdfe9e8af355ee70edecabe206536ad95fc69b6e 6c5997ef9f2969094ee4a8794bbb33fc2bfa2c7b 2d45189fe251bc78ecebd659b1bebd8b11aa5985 4dca2d3ddc7507190a6309394e670620303e8485 e3b3b6881ca9874a594873d15b4e5803b7ed26f9 e016eac457fa2d40537dc4989a1a8272ca1dde7f fb6254aa1f0afe7ed95d0c4529d6680c5c49734a 08b401737b17c6b43b37f6213bb4cb59f6a92cba 6a39d35c3746080148613ed9ee7dda886298129a 39d6b31036c74a4770a631e27a5efcacf5daf465 5e553ea35d001e9b96473117d6f6461a8e8d449b f6c5726d351cd5773a397a06d1bcc9dc093f9611 eac5cec261eb3faf77c65229049c92861d0ed66c 926c5e4184c22946d9faa2494a261a999b340b61 46feda16cd554132b449c8cfa7017be7b4b27d75 91e91018082300d7d3f104cef49ee6199d5f6b88 70eef18497b60f694c4d0534266fd89bf43c9c40 da042a2331fc4b097e41cfcd32717d8d41cd21f9 671d45370953b586c750340ec2fb77f64ed11620 a72f98e4f3f97bbcf72ac969a15533f9e7d49295 15a786d7f194849944317283b924e28367a6e4d1 1ed61a25eac86219089790e6369856fd861f34eb 64c3df565bd324c4f68576180702a19f0dfc81ef b6c9d93e2552602def10e71cb047f1d1c547e91c c5c459c7abb6facede0ab08e59e6a3173cf1b984 81a0fcaddd05115e6f1922af53171dfa33458be3 a3ac2b6781bce6eb9178e98fa6c7e40ef01506ca,,merge recent BF changes,includes fixes to the SPRACINGF4NEO targets that were broken in BF.    missing semicolon  missing `#define TARGET_CONFIG` etc.  https://github.com/betaflight/betaflight/blob/master/src/main/target/SPRACINGF4NEO/config.c#L33
cleanflight/cleanflight,2835,2017-06-03T14:21:15Z,2017-06-03T18:22:50Z,TRUE,2017-06-03T18:22:49Z,f9ab894f7051171465182cd8596a126d0b49dd2b,9,4,d4f73a8f648aa3584764a0d17ae816c837a82d36 e59d7530a9a631ac731bd98c05f5af3f1c1e87c2 860ee02ef1a9a9d381aa84297a0974e69a35f849 c8ab54c17937e89030c9ac86900b7606d3a0dda4,,SPRACINGF4NEO Initial target support,binary for testing:    [cleanflight_2.1.0_SPRACINGF4NEO-20170603-1847.zip](https://github.com/cleanflight/cleanflight/files/1049768/cleanflight_2.1.0_SPRACINGF4NEO-20170603-1847.zip)
cleanflight/cleanflight,2837,2017-06-03T14:22:59Z,2017-06-03T18:10:46Z,TRUE,2017-06-03T18:10:46Z,2cc80b12294b0799c1fc49721b48c6c2935fc89d,1,2,ea9d1f99356676a7b2cded02db1ee6b1aa00f986 d46b09b2a5d29862c7ed6e295c9e672c82d244cb,,CF BF Always size optimize some non speed critical files,This goes some way to addressing #2808 and certainly allows the new SPRACINGF4NEO target to have all the features enabled now.  See https://github.com/cleanflight/cleanflight/pull/2835
cleanflight/cleanflight,2771,2017-04-29T19:54:46Z,2017-05-02T21:15:07Z,TRUE,2017-05-02T21:15:07Z,482ce3b4881b0a0cbcb0cfb0215d671335abd8b5,1,1,3f1380f096e4af480dcef1a463f9cf9408a0c6f1,,CF BF Add VARIANT define to all variant targets,Adding VARIANT allows better flexibility in the target specific files.    It has always irked me that code for variants appears above official targets.  With this define we can fix this situation and hopefully improve the readability of the target files.  Especially ones were there are significant differences.
cleanflight/cleanflight,2856,2017-06-09T10:39:38Z,2017-06-17T10:37:14Z,TRUE,2017-06-17T10:37:14Z,23b662d39c77c2000867f6607abe0759b875c8b5,32,10,315e4b800b5dc6cb1e04488daca30689c3a7f5a9 da96d2b27c18523c08678de398cba17688c91d9f f196661c404d68189aa7d7447a054dd71ccaa40a 7652c11a986cb9b65cb5518b3c87f64b2882d8a0 ff74b8373f82a6ba21ba45fae72c67784774545e c8b9fcbe32dee23357498a01397f5a2150868183 ee72c165375af20df3f84e01886e2d2a5130a3e6 cc4f267adf0f1a89e35e6e7e796384747a268c78 8494d5fdb132d49909fd9b1a4467335502fc19e3 06996e91057111f5274d30c0b3c78948c89bacbf,Requires testing,array based box masks,MSP and blackbox still need support for larger masks
cleanflight/cleanflight,2875,2017-06-27T04:20:17Z,2017-06-27T06:36:57Z,FALSE,none,none,181,98,b4d2388103b5f62676faafd4286f2359c269fbd7 2a12b809a0d937c5b9cf1803c7210952138ae7bb 774cae215cb47732aabbb6543d0d1abc15bd4f79 c7f62e47a6a306846c1ec15174707ed379b5d4f9 3d2fe5e8de060208a328025a7972b9f38ac2bf46 daa0afcd39e1ac2bead93f58fc2f3104e78175ac 1bc421133e9818e7b617f6d7442e9af4b1855951 2d799e65c0b6bb702afcc207c542702126f95dbe bc547321cb487296a8858b40bea197b1648bf332 0752a301b5156f4a44930a7817efed2db26af5d1 7ad44e37123512426a9984d44cdb4d7c16b70cd2 a5b428ae4ff24244cc531b4d34796bc99fe73c90 f17c46038bcfa82d999cd76af5e6695ca98d17cc f37847bdda19ba898bd019115cb6af3b4decbb8e 7c14c49701305c19c59a94bd8638730dccdbf9f1 71958b67323aa973b13db0a0331e8c16623ab0d1 41668fa702e9935a822caa8d1f407c3d3a6635d8 dc69c038869975df5aefc7ffc1f6c98edb48eae2 b0c970a48cc74dfd54ae5c38f7ff06c6dc7e7efc 7155a3e6a59236d8e26bbdb535b2fc8c47046c99 3cfcf8a4b3b552a556ee226bb162f311a2aa68bb f65249e137032cb20f686383b7eaa765842ff5cf 47e91874f526948c28e531879c9666ae93f2be83 64d92963e167a7029f36a735043833034eb5f42b 57e85ea0616835c7807835448838e698df11c99c db006b1585e8f0273911be8bafe101c632db3a43 a10e1d05ed33202a2cf7d0e26b2d125919282cae 75511249d8e330c37332f4f6fe41982c4c4cf173 0227b7fb28e30cc706702f6a33d549b508be816c d93218f21c9be923c9d6ccc5e583aa4ee9c4b317 f380c3d774da8eed2098854fb9e022120b10c4fd a907f4b9a8607cc7dd16b067191f433ed10f7502 9a4e93fa601b6ad585636f5151b28f1597eb67aa a01a48337d052b4d7c7280b466c4da1c6abc242f 98b301f1e8131f8bf7f96995ce7cb22d8432359c 9a8ece36e47063671bbd66e51fff975dd0df2282 72f5a7940be6afc85a903b6b95aee6fe2104bfb6 c5054f9e9ddafc6aa34c83f4d021849b0ba28cdf b21877438e24fe67cfc7b49ba65025836f9727e8 3575ff4515753886b7dcd045dcfdabf63ff2b411 7b762e640c5347c8d0b2fb14d0c8539388ded421 1fe839331e110c7b11a758ab41062a8e03ba633a 8e2ebcf026897f20d9eb887a886e90f643aaff6e 4451ae5fe95d151ce9bf83b9ec3e294a7b20c914 e2caf8831fb1493fac28b1fa1a2ed78ad36a9238 d51d66f8f1488e6adc1904002f0267b32892bb5f 74f34d463db71828475ee27a1628656038d13a58 42fa95c2d01c86b846b46b948a295c6a358063a8 1a082d5c7e38afa5dc3932e3d141c9c655823b97 682d4d40142c24d3391e8fe76fe3c747af0b665f 559079ff312dafcc727be5ee5ee00e8f5ff465ea 76869eb3dd38f2e2e2a5aa106ed1117901b6312b 939dedb043550a995c6e04421d14d3a2a6f37d4f 1cda1b44ab1cdbf92383b0068b0de997431c8028 8a03089569c4f2299489fc2f70bcd8f59bd14e58 7d2c27821328d1e45144edf690bba84f0e4aa594 a2718a91cd198d8e3ee447890891886f5145e6d2 0a17e416dabab3615423c19aef4abefec9621253 5ba8d39ad8170b798123c8936787d20f42ac88a0 858d910d07784706618bab9b0f66db352302275b d4bd8a366d94b894e6b2455d355c2b81286bc292 cb8c20107ed42244c7a59aa64f10f9bfb0f57c84 bed5f0a58b6edfd6584903e2a1498d2eec391e85 19ebc38e0df59e2d1555935f596be3de3448c8f5 53eb07c56a3efc7772bf3bc91d0d3dcb5545262f 2b2894a96f49e625b5730aceffafa8ef10296bc6 5845f96c1e7940eae2bda76fe61bac28623a607b 88495cf7f9903771496693b9c4a8d4aefaac125f 32fa109a64ee4463938fe1d41df86714a0e5ede7 0492925ff692c250bc7a54ecb4f802b2d1f3ce02 8ab13665bbb32d2349b1d212a496abe80bee6116 e05f00e1ffca7429b6e2e077f1c50c78477ee945 9c2e1ddf468550b83695ad90e9b3f290abebacfc 20260aa8e2af32ca23a53cf0c9b43f22bba1c33e 691260f38d7917434db737c41c8d5e2685aab744 cca6d1ad6a480d1ec38ced3f087bd46ce4da1ee2 10605e00b9df04121bcd3fa54ffa3d7f178cf74a e88db3cb1a6a744fa1570ff9b1c77b50c6b08e58 81d00db1b10a96cc483c05810bf8e5cf50480f7b 3a84e81827fe32e29f0c2d8105e3e4f365868bd4 facac4c3e6acd9154a0ec37e6ac8c676be29b10d 58fdace43cd701a61947142f8e769d4301bbc1e4 4bacbdcc915c80b67a1ea81b541df64b958c349e 289e054693cf80ed53557b313166460242e056d0 779823fb7957efefb2fd8a317c22f8d5503768ef 7396e2665d1ec7063547c9883eab1af7c788dc51 39f46f5ac74745c708b6048c80c8b4a23ee55d38 b77b866c2d154c079af8a6397df87cd1d87b0482 b47df12759c8ad54505061b2d1b4def35f490f09 7bd05b21483d6419dca3f77442a9b3326d4cf72c 62b4f8e3ac55eb296e3fd621e7e2e2dac0e1e695 d714624b7b3bf62bcee6bfdf28ed6e4a8e712bdb bf250c2c275020aa32ab3c6172a0ec0945ce4756 ccb30565f1e6313d7ca76d8a3639741a21c01f35 c96973ea49218eecefb6bffa58cd3cdb588e4cfc 582af3d515acd7acf90746282ab317e50c701939 4113f9be011d8a7f5a2803fdae2d53d9b8bb5c08 b052c60fd0444ce956f628482ab054fd19984e0d,,Add betaflight_3 1 7_MATEKF405 hex to BF repository,This firmware works normal on our MatekF405 FC.   Could you pls add it to BF repository  so that users can download it in GUI conveniently.  The hex file is here now. http://www.mateksys.com/Downloads/FW/betaflight_3.1.7_MATEKF405.hex  Thanks
cleanflight/cleanflight,2852,2017-06-08T11:34:08Z,2017-06-22T18:31:17Z,TRUE,2017-06-22T18:31:17Z,6dc8e830d27fa9c4af63c69f06de30f01fd502cd,13,1,60ef26bc77757ce7022ad98696249ee2d0265218,,Add runcam split support,Hi  I would like to add the add-runcma-split-support branch to the trunk of the cleanflight  which is to support our RunCam Split( a new fpv camera) can work with the flight control supported by cleanflight. Through this branch  the user can control our camera through the switch of the remote control  such as  start / stop recording  or turn on / off the camera's wifi etc.  If there are any questions  please feel free to contact us  our mail address is hello@runcam.com.
cleanflight/cleanflight,2917,2017-08-09T16:17:15Z,2017-08-15T17:01:37Z,FALSE,none,ffa1e149ee2c0d77acf157b56e607e61b25271e3,82,93,ad334113e2dbfae04dca5d3923ce87fbd519c4b4 28fb930c1f6c7686b3e00daf2c03dc8778e0aeb3 9053a28de3b90cecec80d1e734459b2a64bfb995 21820a8d4b85d7994369152584719ba85ae0e051 f974c7fdc06e73c5a49744fae0f11fc63eace8be a0d77a20503af3b9f64f73d215b5f605f382a2f4 11f1de5612bc5e7c704906a6ba98e608961b9682 0ccacfdc0ebe9a5bb8bd0be6f5d5427dd62a2d41 ac30e7071bcf898ee90cd2b3eb032e0e3323dbce 8b4ab25efa99ceb20a9b1dbb16a3270ad38f1b8c 3a0045dfb9fff5dc1e3395772a4854ff6bf83f21 f875f92292fbe4c78319512ba65d20ce8e5ebe3a 6be8dfa6bbc64e74333b841921e4b4b890abf20c 582b30baebd1a9734ab54c778599dbe7b819fc6f fbd712a2558ca67373f2afa5238f954c757e2651 df277c446501d0e6e64be1f89bdd281f5da3bb1e 5b03dab2b54505c2bb2f2f46a42b25022c820050 43531e9a425682e5e630d221b6ada05321a08d9c ac03d2983b6146f88eb37011b4efd2a85d3eb90d 49215407900ae9418d2d66d68eac414f5591eef4 72ace4566ed7475521e8f44825ac29f35d554e9e f614038c3b34802f0e3113f7d5fc17021322d6f3 00ccce06b7a03ea1caf74d548be5d2eb1faaec7f 265dd7bdc5ef8ccd6d6db9f7c6dedcdedb0f37e4 3f926ddd9da48e38c192719e909ac4844e34ba1b 981df1d544e6aab36eb86dd4f99d7e44ffef6de2 a59d09e65ebaf0786b3cb17fd9bda2f6d6da4590 ab31cc2667828d99d5bb27fe8cdb2af9c21f0413 b6f3f9e2113d2f45c73ab0e428493d97521d4da9 380399208650990bb16ce42647159a86b4d1cda3 dbdd3be4a58cbda035539c43657663284e7e649a 9529fe5ea8078a4af36dbf3039f0277fbaf15d9c 58eb248b05f125d2f4f2d891b6ff85d6e57ffe27 52ac712c5cc326b44e8b09c382f9799afdf207cc b3f90254d8a1972a1362302a9485866f70a22398 b3b15852446e5c8332a5c70ad27b0f3f98775d0a de07790d758e32d4444ad559ca25d8367c985733 ac2026be6f84bb4c8010984ae1f9652948b87f7a 29406342688ede71f435076375073da87b677659 3f86178dc4c73ce54a1b8562470dea695f9faa4f 25e92703958ee0f03c55d3d5b19aacffec262571 017d11b8b4c43d62e680354ca1c1b0d9082ee48e b5f5421442b3004f3fbe86ebd22cab0f92c7ddbc f8cc45a64f9848d46e7ec9562e13eb1709cdddd4 ef7f89d097b6058a699478fbdeb71aab78091e59 f203133364ac8c66772dc1915ccfecffa1424f09 c238e6f22c512967186b6b20900c95276fce460d a1855e4cc1b4747bcd9af42e67e2854aeb845d63 30114bc57ede6c0c20f921146ca2f8685a30e3a4 00dc889199c69d74e0b4986e159f17101b0c5576 79c819ba90886430808abead89db591962e29c45 caa3be052f9e7e7b7083ffe8ada7bb8f33b60c99 f11e00de216b0546d208daad4dafacf36fc39ee7 e608cd360cfdee13a35ef139321f2d8b6c23c99b 0d45bbd5fba2da1349a805750425386d1558aaf8 e560c67e09a46481c05dc37174bcfa39025ca740 a0f48f74c1707262ae82d8da13c12c6a3c02132a 57e4c7895f37ac3ba24f072713cf355307e33a7d 7580b25d800616146dbceda1e5de7d272f1c9cb5 202b8205518f5ca341d80ab0be5f50c0c5a40395 cf040713da5d9f2fbfb2a9aa642f002ea177ed2f fa4927c312d7eaaa2f5086ec6104291619ae22d8 f00b8857997be375e832144155e6186253ddf703 e7de536bb60723c429cd87a09a1417b8fb920a45 92fe0392a42961fa840363e6664867213f19861b 4ba8669cc38984bc7a326b4c0cdc724c20187f0a f283d2460ae03e2b56393b77b2ca56b72fbdba53 945870089fb81a06d4db88b7cb9ba19d62f89b37 fd51cda9eb17d23a69e45fbc45a764cc2deb0168 0c0483d0205df37d341184adf5da2f98c8ffeb1a 679258932d25e352353fb2d73153c818b9e80d69 ad2268b243071b326169f4d2ef2fba53a9a76f0e c5f488ed07332272393f8fca3d2ef401b2841f36 7ddf0dbb6578cd33d45a27b6101024425f87b378 ad540d8ad8e11bddfc7866772633b743bf0da427 2b79e28c0440fa0acef14855ff38c85325848848 1e87024d82e02928355841ab9725c14395907e15 891d569d2083ff4245194761f58c92f6f3d5ab6d 1e9b553392a2559109501fddca4a31f5952e783d 5d258d11f2369cdecba5df2692b84888deacd88e 8995dcec0e343518dd25de58df6bcec3c2e850fe 30733940676919d243a6dcb73c4b83618e5b211f 9e56b4d0e853f99974674a40210ad6df2d5af7fd e5d147ec18a7436a0d8794b50f3ba6e365e17e53 af28216100df5f5e42886db3e72ddc2ebc060416 f6d550f079176e9407069256e81c2c6678cd68cc 64125d043324df020c42875f011b66d06c0ece22 dee3ff605140359ef9f48d7bdb2005c951dcc7e6 387b52a1aeba1d0e76b050512adb7849db95244e f59ab871540d54981c2290c904e8141ca5d83a34 f24d40b773c6a0e2f855845f64c69dc6cb218343 43a927b759f85e41e3367251741b4a7b0222e466 53920103d84034600cabcbf8241da2b87aa61fb1,Invalid,Runcam split accessing OSD to change settings,Ive setup the switches and modes to change the splits settings from my taranis but one switch only lets me go back and the other lets me scroll. Can you make it so that flipping back switch on and off quick selects and if you leave it on it goes back?    This way I can change settings in the OSD.
cleanflight/cleanflight,2926,2017-08-18T15:14:28Z,2017-08-19T14:07:16Z,FALSE,none,d0ef4ad0b6c941af517c33e564d799c437df32c7,77,29,8c3da2ba1412a9f96ea6de3ec2a8c4c86d5fb90a 8dd4a584c10b7fd9e8acbf85e648293bbb8a5a77 067f20d34b835434537837f671c056d2e3312574 27b146e274579d656339a7dd80e6a078369a1d13 ab232e882899be8b7387f9e191613b6decf295b7 6eadd51e55dc757887b5545f77f2074a6ef77bd0 0854953cf0b0894f7cc027b6c06336702325cdf5 f6def20102e13f71aa1b9f1ef68444f50febb43f ed3bb61f3fe58a9a10cdd8e1df2949ce68c8f4d0 b64ab340a7237fcfffda81dcb65d6d3e6043c52d 9a3b05b21d95385b630fdc689897563b27a1846b 39df85cd742cb3fe177615bea9125504d284d7ad 5beab319f3aae968ecef0ec3a60dcc129a8dd83b 42c636c2a191aee852ccdaf5852d9a03d68c74ea 927cc189e215ba00cf31fb0a2b2d6b6a0fce4db5 eb41c1c4b36c7d74de80791da06e5cfd35d18f58 a1eaa48d0e7ddf6172b31fb5b95594a383d613f9 a371ee66c73caadd0bbc80b533501bbe9c485658 f16ffb609217df4424aafb4f5fb0bcb072d0bf56 d9b3be0cf7e94700384a09f310dd049efea91f7a 7fb179aa3d11b4a933d94bf2834f3c76750a5514 091b6bc912d613a8c496a59c3e444bd178ac2e5c 4b01e11edca6e0f21883aa749ade8e6004f6bb26 61cb7c501ca2a28b7d539e01ed7f73ef1fec9970 aef34a0a534246cc9f44a33d8c7231f20d14db03 7a1e9b40326ddcd263b977aac9c057247d1b6664 b5f96800c7c85a33bbbe060a5b9dad9b057da819 028a75fd58f4a80fa9cdb2471789274df6c0ac94 bad2b7a949de665deb0d1e870da9460220f5ea52,,Add quick start up for initial setup,I've seen this done to both RF and on the Immersion quads. It would be a great feature for allowing new quads in the air in less time.    Possible features:  Board orientation detection(tilt the quad in 2 or 3 axis)  Motor order/ motor assignment  motor reversing(Dshot?)  Rxrange setup along with channel reversing  Uart setup+serial rx setup  quick setup for modes/arming    I think this would not be bad to implement and could help with some new user errors and just speed up the process quicker.
cleanflight/cleanflight,2927,2017-08-21T12:26:07Z,2017-08-21T13:25:16Z,FALSE,none,6841e7d9bb9c8b3792b7eec5f92638ef1dd22fa9,99,35,8c3da2ba1412a9f96ea6de3ec2a8c4c86d5fb90a 8dd4a584c10b7fd9e8acbf85e648293bbb8a5a77 067f20d34b835434537837f671c056d2e3312574 27b146e274579d656339a7dd80e6a078369a1d13 ab232e882899be8b7387f9e191613b6decf295b7 6eadd51e55dc757887b5545f77f2074a6ef77bd0 0854953cf0b0894f7cc027b6c06336702325cdf5 f6def20102e13f71aa1b9f1ef68444f50febb43f ed3bb61f3fe58a9a10cdd8e1df2949ce68c8f4d0 b64ab340a7237fcfffda81dcb65d6d3e6043c52d 9a3b05b21d95385b630fdc689897563b27a1846b 39df85cd742cb3fe177615bea9125504d284d7ad 5beab319f3aae968ecef0ec3a60dcc129a8dd83b 42c636c2a191aee852ccdaf5852d9a03d68c74ea 927cc189e215ba00cf31fb0a2b2d6b6a0fce4db5 eb41c1c4b36c7d74de80791da06e5cfd35d18f58 a1eaa48d0e7ddf6172b31fb5b95594a383d613f9 a371ee66c73caadd0bbc80b533501bbe9c485658 f16ffb609217df4424aafb4f5fb0bcb072d0bf56 d9b3be0cf7e94700384a09f310dd049efea91f7a 7fb179aa3d11b4a933d94bf2834f3c76750a5514 091b6bc912d613a8c496a59c3e444bd178ac2e5c 4b01e11edca6e0f21883aa749ade8e6004f6bb26 61cb7c501ca2a28b7d539e01ed7f73ef1fec9970 aef34a0a534246cc9f44a33d8c7231f20d14db03 7a1e9b40326ddcd263b977aac9c057247d1b6664 b5f96800c7c85a33bbbe060a5b9dad9b057da819 028a75fd58f4a80fa9cdb2471789274df6c0ac94 20f7c77089147c78d1713cb23533b57efa0f1a6e bad2b7a949de665deb0d1e870da9460220f5ea52 bd84749e92497756f92a8936bbc52bbc01b3a34d a4ba8b3db829fcc868b107cace9e3b643d315c5a 54f2c041c18f4f38bddbbcbbb30e14960cb90ca3 c7fce5d9cb4e76f48a1ea6826a8b5d9be72abde6 cda31ef88a4c85b1fa5e88ff3407a32c105b8d34,,More TPA adjustments,Would it be possible to implement custom TPA adjustment curves similar to kiss or raceflight?
cleanflight/cleanflight,2928,2017-08-22T17:07:55Z,2017-08-23T02:34:12Z,FALSE,none,none,104,51,be0f51235cc4fdf294a123fa054a39cb6bc19703 8c3da2ba1412a9f96ea6de3ec2a8c4c86d5fb90a 8dd4a584c10b7fd9e8acbf85e648293bbb8a5a77 067f20d34b835434537837f671c056d2e3312574 27b146e274579d656339a7dd80e6a078369a1d13 ab232e882899be8b7387f9e191613b6decf295b7 6eadd51e55dc757887b5545f77f2074a6ef77bd0 0854953cf0b0894f7cc027b6c06336702325cdf5 f6def20102e13f71aa1b9f1ef68444f50febb43f ed3bb61f3fe58a9a10cdd8e1df2949ce68c8f4d0 b64ab340a7237fcfffda81dcb65d6d3e6043c52d 9a3b05b21d95385b630fdc689897563b27a1846b 39df85cd742cb3fe177615bea9125504d284d7ad 5beab319f3aae968ecef0ec3a60dcc129a8dd83b 42c636c2a191aee852ccdaf5852d9a03d68c74ea 927cc189e215ba00cf31fb0a2b2d6b6a0fce4db5 eb41c1c4b36c7d74de80791da06e5cfd35d18f58 a1eaa48d0e7ddf6172b31fb5b95594a383d613f9 a371ee66c73caadd0bbc80b533501bbe9c485658 f16ffb609217df4424aafb4f5fb0bcb072d0bf56 d9b3be0cf7e94700384a09f310dd049efea91f7a 7fb179aa3d11b4a933d94bf2834f3c76750a5514 091b6bc912d613a8c496a59c3e444bd178ac2e5c 4b01e11edca6e0f21883aa749ade8e6004f6bb26 61cb7c501ca2a28b7d539e01ed7f73ef1fec9970 aef34a0a534246cc9f44a33d8c7231f20d14db03 7a1e9b40326ddcd263b977aac9c057247d1b6664 b5f96800c7c85a33bbbe060a5b9dad9b057da819 028a75fd58f4a80fa9cdb2471789274df6c0ac94 20f7c77089147c78d1713cb23533b57efa0f1a6e bad2b7a949de665deb0d1e870da9460220f5ea52 bd84749e92497756f92a8936bbc52bbc01b3a34d a4ba8b3db829fcc868b107cace9e3b643d315c5a 67a44c4636e73410b6418dba66fed649b0e8e470 54f2c041c18f4f38bddbbcbbb30e14960cb90ca3 c7fce5d9cb4e76f48a1ea6826a8b5d9be72abde6 6936601415559288e836df7e6382bd4d2ae101c7 cda31ef88a4c85b1fa5e88ff3407a32c105b8d34 ee329328feba56be6a763a9b5b732581a6893d45 466063d5b0f45b39a7d65cb04501311564f1817a 01873d3f81ecff1b5a62bab450064f0e757cf3c1 8e1cbff42bdb06ddd762ea17ecef6c526aa6bc43 dfffc3e7af6cccf5a49fd84143e7b36d86f5f04b ee03865e5639fb50ebdd1676dda0e17cadb5d9a6 326db13f2cf0dcd3d82c612215fedef317f82f0e 4924cad2505471ecbcd5530e471b56f0c3185e35 f987496ad0aaa57d1a2b6f725da796eed5b0902d be1a56decb357b610cdb8138fecae958f47fa30a 91f2dbfccbc14f18a9f4518ca827df5e35785643 02aa65c9952dc62dcb9008d529af4ac6201d94f5 7a66260713e11aea0dc87a8a61d6ff44c77f66d6,,Jeti Telemetry for ESC like kiss or BlHeli 32,could we have esc telemetry sent over the EX bus and complete the jeti telemetry completed like GPS.    the work so fare to get exbus telemetry works great  just esc to be added please
cleanflight/cleanflight,2923,2017-08-16T14:58:29Z,2017-08-17T11:47:16Z,FALSE,none,9953de8b5b9925b87ca4f67101104bded1da92c8,78,36,35e1aab02bee6cf40d2fdf5a8a9666a994b03dfd 30fc55ba09119a19bbb879ae61ca7964e92bd5e6 490146859cf9c41b30186aaa4d1124160a370a61 1cdbb38ac8788414688db8d66099ddfceab936a5 96d28a3f135e845a9f5465f58a33940760e90d43 87b0746b74c7cef42a9509bb97bb100eab1c5127 8e1ebe8b728106c48ce3feede76efd56dae00c34 f3ab5a78770d5938faded54384c2e32eee4a0370 391d9afe9427d04e9c39b3837447b804468c65bd a74979ff72d7ab86faf463c509591f5c2e080ce9 55b18a4efdf11617eac1f6d8a1d8fa879bd06b19 8686e9521cf9db23dcc8c8581759a259fb85407d 8fd0b8ba4b36782d830e92e2b85d8f02448f56a0 c0961d7f4c4f6c3f6a5b242cd61abb7abfb0d43c 14221747e296f1a6018b8226874c695ff46e6926 5502257e0294c3603a01771a6c47e7a9bdd98d26 d2b31c1770f611dfb7baebafc97d5bb0ff35f979 e058fe697cc7359ae6e3d7d758c0a76475c03225 7619700165c19c1974dc7816ab63d3f9adf859df 209d0b4d7759e42d222fc235e83d65254e4f8da0 677b34f6be577bd7c25c06d539b4c02ae4cfe9ba 36db92bcb370dac97311bbc1e513c8ea0c87fd08 1374c0deb6b094e23c417b4192c5b8fa88aa18bd 8ee9a18f92623cb843f3f0d0332eba9327ee9a7e c4643c3d22cb4fb4f81bcdfa243f29e5dcf2c3fc 8c3da2ba1412a9f96ea6de3ec2a8c4c86d5fb90a e4975d735d90d7a273a3494d7a302dc058d33ec8 786343e2b2bcc2bb059debd3f38e866aa5dcc382 8dd4a584c10b7fd9e8acbf85e648293bbb8a5a77 5981273cc48b938e60b26f8ae306df7fb57a2ed6 067f20d34b835434537837f671c056d2e3312574 27b146e274579d656339a7dd80e6a078369a1d13 ab232e882899be8b7387f9e191613b6decf295b7 6eadd51e55dc757887b5545f77f2074a6ef77bd0 f6def20102e13f71aa1b9f1ef68444f50febb43f ed3bb61f3fe58a9a10cdd8e1df2949ce68c8f4d0,,Fix 3D Mode 3696,Added two missing lines of code to 3.2.0-RC3 [mixer.c].  Addresses a problem with 3D mode not being able to control the motor throttle output. Throttle would immediately go to full reverse throttle during positive to negative transition.      [mixer.zip](https://github.com/cleanflight/cleanflight/files/1228560/mixer.zip)
cleanflight/cleanflight,2932,2017-08-29T04:42:03Z,2017-08-30T07:55:05Z,FALSE,none,none,17,15,93c7d672a929cc0fc2b9b5c02ea32198ef2ade4e 229d76a4fc4c8dc0450548d9a538bdcb15313b36 bd472cdd610d8e25a938fa0d40f6e0402a36f35f 0ed43b789cc574823487154381d2eadbd92a2f17 a62b30319f9f0759e9e0a16ddc9e133ed4a957c4 211ffbfa8244dabfaef39a6dc372ea8519b99f77 5c0646359691c90069f57dc39a1eece726df221d 4328b138e34f473ca407c3aa8e15f573f73777ac d9b8841b435524507afcd99ebbfd7f5e304a5d72 bd7b8fc0957d55049a4b1e138bbb111ea1e30ea8 1d18f942c28c54d99dc6a45d257fb9d211fea3df fb50757afee980389e2b0818d674b28b51c87ca8 905ca83fda7638e048e19584b1ecff922deb4aac 89ccc3e9674c80774a811c7eb9aa3cc342db9342 ffb6de99353ebaf7b608807e327b8e997c3f02fb,Invalid,Support for DMSS receivers,Any chance we can get support for binding to JR DMSS receivers?
cleanflight/cleanflight,2935,2017-09-03T07:00:29Z,2017-09-03T19:13:33Z,FALSE,none,none,55,54,821ffc9b441cf59fce33c4b6089ff870b6b1f243 d32abc69f8af57f3ab3253cbd953165730f52cd4 a74a5222bac119856fe51fac9231a6b61fc1008e 04d08cb033b836beed3378871ebfdf0637a45e98 e4e16af5ef79bdf1310df51b36a9235b1f3af010 58ae4d494a15c591ada0cc71a0a3abed7fcbdecd f7c66869e8b379c2b3c5a353a4009b348de6c912 eadaff0bdd3b34790a5f4d4ac81eb81e6794534c 1eee37221802ff6aa850b74e5d45f5965cd03440 bfa0bf8a53914d9bd9f40e917a1314b9f3ff0645 877c82bc3ff2e87a2d7ebaa00d596d9d7741121c c2b7be1039f02b16118194b5e34a3ec362f87071 5cbe75a60386a21b3897a082e0713dee53f98d76 652d9adba8add2aa33412965dc4169c38ba8caf7 ec4ce2bbd66366d805f7bab1a4291acb65fd811d 4e68bc5895659b70fe616f44ebe8c1555f3553e4 0c7126a9feb18ea3a560af5f8224142e9a37308a 5715bda90622e21c2076509f2c125c977e693416 b5ddae4672a61d4ea25296f47396bc7814baf81f 6ab6ec377c103a9ef65a038576cb9ba74bb4878a 6eb843fa04a9e39a4c68c2384c0fae70f63885ad 9bf338346bb9edaee054550e77870745a062d39c e6bbce53e6e5f9a10d34e69e68928abe5e6c4f96 3c2f62a6a9bfade841246a73a1d6e8c46b8de44b 407566cbd12a081a1a1790ce0b12e554ee512e2a 604b661a62f49d174cf4f37f13d123a227594a94 42d42dd7a69ed40d73e62b2cc515b840ace54df7 cafb8aeb02673dca5fe130800e7dc9c00d0fbdff e3a921b7625f17842e294d9f505aef86040137a5 6d073dfe64697568ae5b38cec2b1800a562db03c f2a937ef5bb4f6ddb45200a5ec04d0628064d944 e59ab3c7254dd972d9f3a4867be6cfcfdb21ddd8 3f037da16f693917dbc6abd4c28a4dbd068bc97d 8030a57d908b19f8e93e96bfff8c2c6a6cf536b2 7740a65e8a346a65c964c421712bdb897bca7209 47ff91df617ca369f1660298cbd153bd404946e1 ff5a4708e24c7a26a6d4e53a57797b689d32939d 23226be98046d5baaa2d8734e7e3728939c8f8e3 dc11071f7fca02f6f8ce028d07db59e48f43f8cd e1e338c15da65db754a6274f81847521c71e7251 36133164e2004adbeeb04db05eb6b472b2520abc afec0258c778f8e64a03910df77a0f19b349cf77 28d67027552ff9506a41130903a82aa0629c851c e90c0b01d15616c2f050dbfd5e52886cdda9c4ea b4459b721e627460aff9df584c996ad99080f8ab 12583dc0d78a42995466c4b700f404458f9ecca6 b622e8b0fe5aee596ff894376ed5b7b0f3026810 6d69b053e313ff4e7c1a2894d48d35475222730a 7616c68909879afa217edac4ff31e9c70a5868b4 a11108a6ff3565094f7bffd632047a6847aa8633 0485d5ece72d57706d48125b79f60d55abc24d7e 20b91c417826f8fe2933a37f3c02d97114f16410 297adaec2830b41213ee26826d37ed66d64696e2 d8c974a786e37cc43ac3911d8aa51e2cbb0cf218,,Ignore,ignore - need to learn how to drive the pull process first.
cleanflight/cleanflight,2937,2017-09-07T17:40:30Z,2017-09-09T13:09:11Z,FALSE,none,none,89,103,821ffc9b441cf59fce33c4b6089ff870b6b1f243 d32abc69f8af57f3ab3253cbd953165730f52cd4 a74a5222bac119856fe51fac9231a6b61fc1008e 04d08cb033b836beed3378871ebfdf0637a45e98 e4e16af5ef79bdf1310df51b36a9235b1f3af010 58ae4d494a15c591ada0cc71a0a3abed7fcbdecd f7c66869e8b379c2b3c5a353a4009b348de6c912 eadaff0bdd3b34790a5f4d4ac81eb81e6794534c 1eee37221802ff6aa850b74e5d45f5965cd03440 bfa0bf8a53914d9bd9f40e917a1314b9f3ff0645 877c82bc3ff2e87a2d7ebaa00d596d9d7741121c c2b7be1039f02b16118194b5e34a3ec362f87071 5cbe75a60386a21b3897a082e0713dee53f98d76 4715fde21d82dd3eb030577cfb554cb769d26be4 652d9adba8add2aa33412965dc4169c38ba8caf7 ec4ce2bbd66366d805f7bab1a4291acb65fd811d 4e68bc5895659b70fe616f44ebe8c1555f3553e4 0c7126a9feb18ea3a560af5f8224142e9a37308a 5715bda90622e21c2076509f2c125c977e693416 b5ddae4672a61d4ea25296f47396bc7814baf81f 6ab6ec377c103a9ef65a038576cb9ba74bb4878a 6eb843fa04a9e39a4c68c2384c0fae70f63885ad 9bf338346bb9edaee054550e77870745a062d39c e6bbce53e6e5f9a10d34e69e68928abe5e6c4f96 3c2f62a6a9bfade841246a73a1d6e8c46b8de44b 407566cbd12a081a1a1790ce0b12e554ee512e2a 604b661a62f49d174cf4f37f13d123a227594a94 42d42dd7a69ed40d73e62b2cc515b840ace54df7 cafb8aeb02673dca5fe130800e7dc9c00d0fbdff e3a921b7625f17842e294d9f505aef86040137a5 6d073dfe64697568ae5b38cec2b1800a562db03c f2a937ef5bb4f6ddb45200a5ec04d0628064d944 e59ab3c7254dd972d9f3a4867be6cfcfdb21ddd8 3f037da16f693917dbc6abd4c28a4dbd068bc97d 8030a57d908b19f8e93e96bfff8c2c6a6cf536b2 7740a65e8a346a65c964c421712bdb897bca7209 47ff91df617ca369f1660298cbd153bd404946e1 ff5a4708e24c7a26a6d4e53a57797b689d32939d 23226be98046d5baaa2d8734e7e3728939c8f8e3 dc11071f7fca02f6f8ce028d07db59e48f43f8cd e1e338c15da65db754a6274f81847521c71e7251 36133164e2004adbeeb04db05eb6b472b2520abc afec0258c778f8e64a03910df77a0f19b349cf77 28d67027552ff9506a41130903a82aa0629c851c e90c0b01d15616c2f050dbfd5e52886cdda9c4ea b4459b721e627460aff9df584c996ad99080f8ab 12583dc0d78a42995466c4b700f404458f9ecca6 b622e8b0fe5aee596ff894376ed5b7b0f3026810 6d69b053e313ff4e7c1a2894d48d35475222730a 5fef94b51bf313a514d6f5e97888b24f7163d533 7616c68909879afa217edac4ff31e9c70a5868b4 a11108a6ff3565094f7bffd632047a6847aa8633 0485d5ece72d57706d48125b79f60d55abc24d7e 20b91c417826f8fe2933a37f3c02d97114f16410 297adaec2830b41213ee26826d37ed66d64696e2 d8c974a786e37cc43ac3911d8aa51e2cbb0cf218 76207372a446e1af928c744d8866e5b6569249de 1d3a2f253ec836278ed977277a873d70eb1b2306 4b2e3c6ddafb05ddad64457442bec2f92188f6fb 4948415560e1be57e92ad78adcb823e840c7a1b5 420ed2d0a3edbf9388615ce8a54409edc3e0dc1d ad7da28b1dbe009a9396971cba08b6ba439d86ce 913d3a9461e9c5029da83e0f614909191cf4a7d5 8c1bc17f0767c2a7484edf407dcbb290d1e2886b 723b71a4d0be34fa87da632c8f7855986b090317 c9b06c5bfe08104411d7c4a08a29dba5a6e62409 49afecdcb203fed9f4153c157ed3a2e583b36a8f 2cb427c700f8856de8afaa4825916f9a919b5a30 ba4587e949f4977eaa1146695d2adaa393c3e6b3 fd37566bc59829f752834cc2ce39be96dfbf2d05 b295a159b0d1dfc158d5cba642f3a2148ed3b12e 13308883b2152518db72ed43330c0cdaec66f62e f8c9b57fd6f7c923a03ab85e9ae596d91be4bcf2 68756ddd66d2d0456f60f446ddeb767cc1524a8f c4220a0c54154e47ab533847dfb64a35b9fef8fe c97c8998b178d15c146576b107dbc50658d23b2f 2f674972e367fcc9e15a49714e6e945aeb95de50 534b447b6fa83a1c5d99ae0d89ec617fcb10b542 d4fb9d5bdc2cd3ab2e5d5737eabee77421b5218e b382c01cc0da30ccb34cba72bb9c0cb103ad914b 28a488b3d2a9117705bb1547a900f5f7ffef4c92 cbaad53c462fcfe20e83e792d8e8b7c264fe79ee b1f26666615cac0d3b4483467ca86b14809a6533 ba2567122c58579b3510d52a668ecec65e677395 8c0dd6bc065a54ec68827b35561ca7ef8264bf98 f5d2f534b4a9a940d2fe6dadaa3136b099fe9f1f d8987abac16ee4dde2b722e67ee563c203e98042 4c25778c13e8604547029be71c6909ef8bd0eb6b 067f61f8348689cf0fc0a7f75a96693ead87ae1d 81c1153533e75c90d8260d11b403cee50a23ed6d 2b72d938cd29a7537a8c814f221668153c5c220c a2b24692da1be95f2f6b1d3cd368bd4e1dd7ae20 fb04fb1216d3474d516de3d3c927874a21f49737 00414b29b6a964505703f75b1bfe8a8680abf90e dc7436efadacdeb1d070ada11e0118ecea0dd3ae 759788fe2da5c4d030ef0d53a9627a0372e1a9df fb0a21ea2aa4ade18ddbf77e595c3ac7a4670160 f4aed740c1d5e111a8c42d6d5b04181fee21b77c 247a88be50846c184bf53d3ed33d48d3698e7b21 cd23e77031b33377f1f35c0144ccf220f3f2b5d2 c1a99817f42172794c576efd402641a628c99272 38574871d1a8415b7f841d5dec9dc44ca6d94206 f4ff7b9c91c75625f9a11d8a1d27d54282b38a4f,,CL F4 target Motor stop causes throttle to not respond above idle,On 3.2 RC 4 CL F4 board.  I set up the quad with the minimum amount of stuff to make it flyable.  Airmode on a switch and with motor stop on.  No throttle.  Motors will spin when armed and airmode turned on  but no higher than idle.  Turned motor stop off.  Still no throttle.  Reflashed and set up the minimum with airmode as a feature and motor stop off.  Throttle works!  Made the rest of the changes I normally make.  Throttle not working again.  Reflashed   set up the minimum required  airmode as a feature and motor stop off   throttle works again.  Made the changes I normally make one at a time and checked if throttle worked after each one and it stayed working with every change.  Very strange.  It seems that making more than one change at a time somehow made the throttle stop working.  While making them one at a time kept the throttle working.  All works as normal on 3.17
cleanflight/cleanflight,2947,2017-09-25T07:03:15Z,2017-10-02T22:56:47Z,FALSE,none,8fd611ea3912fd1dd14f948e12b274f3419a9384,21,4,987766c1230d90d4ea52a6d20caf106a11d508b0 161de6ba624e8909b16ca49d10d0624fdd105bcd 6e1e6c850f3f5fbb63f176860c414557494cae20 7f9dd773af6c7299f24bff18747560b57a6d6a68,,Add SetFreqByMHzMsp support,This builds on PR #2941  adding support for setting the VTX frequency in MHz via MSP for TBS-SmartAudio and IRC-Tramp video transmitters.    I've posted a modified 'betaflight-tx-lua-scripts' that utilize this new functionality  here:  https://github.com/ethomas997/betaflight-tx-lua-scripts/tree/etVtxFreqEditable    --ET
cleanflight/cleanflight,2930,2017-08-28T09:06:11Z,2017-10-02T23:10:36Z,FALSE,none,89727703ca1e93ae03ebb5eebdf04ca7d32670e5,15,1,5500c91265372c8e09a110986fd8c7a6d58e59ba,,Implement vtx_ settings for SmartAudio and Tramp,This takes the 'vtx_' settings that @hydra created (vtx_band / vtx_channel / vtx_power) for RTC6705 and also implements them for TBS-SmartAudio and IRC-Tramp video transmitters.  At startup the settings are applied to the transmitter.  If the video setup is modified via the CMS OSD menu or via MSP (Taranis/OpenTX smartport)  the settings are updated.    One nice thing the settings can provide is a way to configure a frequency (via USB / CLI) while the video transmitter is not powered up.  Afer a save and power cycle  the system will startup at the new frequency.    The 'vtx_rtc6705' code is mostly unchanged (I don't have an SPRacing NEO board to test with); I've tested with TBS-SmartAudio and IRC-TrampHV transmitters.  For 'vtx_band' the values are:  1=A  2=B  3=E  4=F(Airwaves/Fatshark)  5=Raceband.    What I want to do next is a 'vtx_freq' setting for the option of setting the frequency in MHz.  If 'vtx_band' is zero then 'vtx_freq' would configure the frequency.  Currently the CMS OSD menu on SmartAudio can configure a "user" frequency in MHz  in which case 'vtx_band' is set to zero (and the band/channel are not applied to the vtx at startup).    The other thing I want is to get is frequency setting in MHz supported in MSP (vtxCommon) so it can be set that way via Taranis/OpenTX smartport.    I can do a version of this over on Betaflight at well.  Does it need to be merged there first?    --ET
cleanflight/cleanflight,2936,2017-09-03T09:17:47Z,2017-10-02T23:11:02Z,FALSE,none,fd5d73c62cd5c4197181c35cc456683dd00baf88,17,2,5500c91265372c8e09a110986fd8c7a6d58e59ba 10f22df73cf03fbd83ea9dfa90944e62fc9ff8a1,,Add vtx_freq setting for SmartAudio and Tramp,This builds on PR #2930  adding a 'vtx_freq' setting for TBS-SmartAudio and IRC-Tramp video transmitters ((I don't have an RTC6705 / SPRacing NEO board to test with.)  If vtx_band=0 and vtx_freq!=0 then the 'vtx_freq' value (in MHz) will be configured on the transmitter at startup.  If both are zero then the settings will be ignored.  If vtx_band!=0 and a video transmitter is connected then 'vtx_freq' will be set to the current frequency value (in MHz) at startup.    --ET
cleanflight/cleanflight,2941,2017-09-11T04:46:19Z,2017-10-02T23:11:36Z,FALSE,none,4c6a1f34d7ff51be6842c9399b550041e3678849,18,3,6b545fefa7e6f9dc6ca1baf39d35c00677ec41e4 29f55aacc2b5d5e1f8b5e152418481858037f4b0 81a146684e5b1fdf5151fff7bf9eae61581646a6,,SmartAudio CMS fixes and improvements,This builds on PR #2930 and #2936  implementing some fixes and improvements to the SmartAudio part of the CMS OSD menus:    CMS set of USER frequency would fail if frequency was same as previous USER frequency    CMS would set vtx freq immediately when going from USER to CHAN freq mode    (should wait until SET performed)    After changing CHAN/USER freq mode but before SET  the CMS status line    would show wrong band-channel / U-F display    (needed new 'saCmsFselModeNew' variable)    CMS will now update when saDevice settings change    (if race opmodel via CMS and then user freq set via CLI "set vtx_freq"        freq is set but CMS would report race opmodel and old band/channel)    Modified SA CMS to use 'saSetPitFreq()' function    Moved 'saCmsUpdate()' declaration to 'cms_menu_vtx_smartaudio.h'    --ET
cleanflight/cleanflight,2959,2017-10-10T10:00:53Z,2017-10-10T10:01:22Z,FALSE,none,none,76,51,05a8141139187940c2fc7031442d2c06f0193f93 48281c17c9ca019ff91bc55dda68a00d6e111424 9556c5b811ea3e8c237843e0eed5d1544f23cd14 170e2f5c07b558ec67768fb49790569e5c305e23 e04bd913adc874ec018a279ad74b2d487e946b30 4354307097d83c5665cf305054fd02c396d9a412 30a75675d293800c30dedf9a098b3de614ffac76 eb57c114fb9a2c3aec89d5a9902ab40eca3c424e 05fb653a8e7afbddb58dbc5a01d430355b6060e7 932caac42bd5d8eb4dcfa6b40593e0560397146c 4742ca04e0330e00455ff7bd6f087cd93ca060be 25b2521bd255114b12491e5011ef64c79dcf8968 98d85969cef6c46c2a1d5002fc2fde88174026cb 06838d4912d5cbffa44ac3c03634e0ce728cae79 59ec9b9e34d29d138532deb4fecd2992e13ede4e 99f02ffdd05b1083cfba8bfd8db517818d1f7d47 36d0d7bc8f3f05fbe776d749f60d471d04653f62 262890896e7fb9860f418f555989f3105d72de04 f087730035b0342f27094199fd1ec074e9586635 f14574a2227d43efee7e6dd38c1e3a284ee1c660 0e57580a76b3a65b9c94c16dc9b5be9e9f968850 e05fd7511e1da5a32cf46eb03f2e52d02235015a fb0ee94ba1384a2734b9670758bebb234de1c700 ca44ac38e35ddcab9ac2a72aa7e52dd1acdd17ed 352d05254f865a8a8efa096b5c8e3a18ef5b331c 46df742d3ce02ec9e8f49738b0f8223ff550710a 48f30872c51deb63122e02466c39ee1b49f689d0 99c856280a3514f0bc9639986a33edbc700b737b 30432a3d095db40ef43b643e6cb9d678bd80eaba 624e9b64b533a64112d0caf9ad93eb62edc8b35c af081a6d868366a83891ea67c44a649dd90a77ae 802cd5690ea544c21efa44d02f35036fef1b1376 cabbabbfeccb3317ba5e56746c015d84fac43417 14920c6948e8d0986116467dc8f40927dddb5e53 a11b5f0865ea415772e543f3ba284a2ebf2c7d4a 610053b299544929a923f20683f0340e8b2f8bfe 63f073bdb8b68a47231e5008c91174413091a0dd df42270c36341a36614414a2e7ee53690d86cca3 74c8fefd63fa4c3b4fd76d572d60abd33bde6183 43ce8edfccbc542401e5f62acf257f32015b5ece 6e025aeba666e8cab5e3d14f6e37bb4d7b191098 a983f4b3254d7a71a3213a93631b4e1de287e0d4 582e180e5feae9d066fb179b0bd1f2bd725df51e 4fd948cb24fdebe31e7b6e26375c8f6c322522da 0f468ae39a8f3832b02a8af1fb65b4f503337d81 e7bee0500521d75dfa57efe9801534df7014ccfe 631bc08208f0c8ad6a2c703f49ea7d8760702d49 0b9c6fa702edcdeae4fcaa8796282cccea1b1aa8 e760f73edc17e8a99d7a88bf3ead35e2843b06bf 8efdd3bc571fd879ba02326b47c68d3ab8ce5f16 a4040caebdd9914c6bf097c621e6b6fd34a46a52,,HOTT telemetry fix,attached is the modified hott.c file for Graupner HOTT Telemetry  [hott.txt](https://github.com/cleanflight/cleanflight/files/1371415/hott.txt)
cleanflight/cleanflight,2962,2017-10-13T19:59:53Z,2017-10-13T22:42:42Z,FALSE,none,none,121,108,4f8cc206da118dcc1ebdc7e0bfbd3990f50ee834 533734a58d17025b9f20d9296693fa253030dbca 6c8b0f3adf5942c069fa6797b83b28ee0256b7c2 05a8141139187940c2fc7031442d2c06f0193f93 4a0c89baf722135accf152712278db8ef7fc51c0 ab5c71b84f869a84fbe97bb60e1484a489157f1c 48281c17c9ca019ff91bc55dda68a00d6e111424 62862c338848b249e574aab1311ea91106eba384 7146c40ca85110b2b0c9a328ff682bb16d99ce0c 2b2d6e067612ee021e801394399d869e93e51672 9556c5b811ea3e8c237843e0eed5d1544f23cd14 170e2f5c07b558ec67768fb49790569e5c305e23 e04bd913adc874ec018a279ad74b2d487e946b30 4354307097d83c5665cf305054fd02c396d9a412 30a75675d293800c30dedf9a098b3de614ffac76 eb57c114fb9a2c3aec89d5a9902ab40eca3c424e 05fb653a8e7afbddb58dbc5a01d430355b6060e7 a24ed5915cd4ca438e38cfeb4450fb4f6e3f4265 e7f2047143e21ed1dd413590ba3cfedaa8fde5b0 9916c56853fa49b9deb39fb034fc7092293ee181 db355234375cd496ad6b02c4ac20636c9cbb61e5 932caac42bd5d8eb4dcfa6b40593e0560397146c 4742ca04e0330e00455ff7bd6f087cd93ca060be 25b2521bd255114b12491e5011ef64c79dcf8968 98d85969cef6c46c2a1d5002fc2fde88174026cb 9dde7d4192571d9044bdd5780dbd0ef42d7074da 06838d4912d5cbffa44ac3c03634e0ce728cae79 59ec9b9e34d29d138532deb4fecd2992e13ede4e 99f02ffdd05b1083cfba8bfd8db517818d1f7d47 36d0d7bc8f3f05fbe776d749f60d471d04653f62 262890896e7fb9860f418f555989f3105d72de04 f087730035b0342f27094199fd1ec074e9586635 31e4f8ab4fabf45198832e731cc90f524aab0732 f14574a2227d43efee7e6dd38c1e3a284ee1c660 0e57580a76b3a65b9c94c16dc9b5be9e9f968850 e05fd7511e1da5a32cf46eb03f2e52d02235015a fb0ee94ba1384a2734b9670758bebb234de1c700 ca44ac38e35ddcab9ac2a72aa7e52dd1acdd17ed 352d05254f865a8a8efa096b5c8e3a18ef5b331c 46df742d3ce02ec9e8f49738b0f8223ff550710a 48f30872c51deb63122e02466c39ee1b49f689d0 99c856280a3514f0bc9639986a33edbc700b737b 30432a3d095db40ef43b643e6cb9d678bd80eaba 624e9b64b533a64112d0caf9ad93eb62edc8b35c af081a6d868366a83891ea67c44a649dd90a77ae 802cd5690ea544c21efa44d02f35036fef1b1376 cabbabbfeccb3317ba5e56746c015d84fac43417 14920c6948e8d0986116467dc8f40927dddb5e53 a11b5f0865ea415772e543f3ba284a2ebf2c7d4a 610053b299544929a923f20683f0340e8b2f8bfe 63f073bdb8b68a47231e5008c91174413091a0dd df42270c36341a36614414a2e7ee53690d86cca3 74c8fefd63fa4c3b4fd76d572d60abd33bde6183 43ce8edfccbc542401e5f62acf257f32015b5ece 6e025aeba666e8cab5e3d14f6e37bb4d7b191098 a983f4b3254d7a71a3213a93631b4e1de287e0d4 582e180e5feae9d066fb179b0bd1f2bd725df51e 4fd948cb24fdebe31e7b6e26375c8f6c322522da 0f468ae39a8f3832b02a8af1fb65b4f503337d81 e7bee0500521d75dfa57efe9801534df7014ccfe 631bc08208f0c8ad6a2c703f49ea7d8760702d49 0b9c6fa702edcdeae4fcaa8796282cccea1b1aa8 e760f73edc17e8a99d7a88bf3ead35e2843b06bf 9597333a2b24788e3bf67f2e0fad59765c2d66db 8efdd3bc571fd879ba02326b47c68d3ab8ce5f16 a4040caebdd9914c6bf097c621e6b6fd34a46a52 c4a48d76f71143a7270ce79f26e49d2a87231705 3aeef39b5acc917ad678af0dd80bb95b83d8bb06 1e1fda000494c75ea9566d1008f09f9b40c37424 6191e9af98d1e768c6a5e8bc6d6d870ddac0e4e4 be98d0ab8abaaf4c4e319537ee3dd752da36786e 6171eec2e2ec2366aee8d081027952c4df41d849 31f57dc15eb5c2e1d693249168eaa37fc6abc03f 3e94abe81f2eafa020bd87d6ad0ac9ae3ca35aa2 5692fc6688be76ad751d19a8f723674fa559f994 e1926b8468a86bcf6f891fa13420c7ab31db9e8a 98a2642ecab84a85b15f072d991ad71832dfdc2b e1c6458ee65b6348d5204a925ef2d0250be7811f cdb5bc1a26249512a663900d4c7ef37936f4ebf5 a7deb8b899995a7cca6a8bf8d2b83e79f232c83e 39c02c083e17c123cdfa0ab996dc11b98a0cba98 7a59c4440b68f97dba8b678037a5512b03186397 c62dcf4db894538d439fd0fd3ac66226a416df7a 7d671cc9985fbb8442425a733f321a12f1915ee8 edea16f17ea17de47634aaaaf00ee8adcfea63a3 511ced76a9e687ff9ea14bdc3f0b670d675ee24e ecec6615e7459cc544e26590ea79aaf7231bb420 68388b0631309fa8156ae8605c98e05fc13f4b27 4e325d9290b9060237f633e6fbfa784526fc7d62 d1a197f99e02787c756fe8a133de20c5d0e20ce6 aeb9399722dc38e42e142bb45bf458f2f192a1cb 374dd3f327f6f2443fa7353084b2bde67acd4bc9 805854dac2838cb4bc9f717e1d88148a9f3afd39 a4bfac04fccb0e5b3139461b5c3ad933b1451be3 8d0b6cfb4082b2a462ccaade7f283357d780e9f5 26437fb26688388faab38b251242a4fe0b991813 d97e0cb5a1290918064646ac836ff24b62678a38 8a250117dd490396ddf44e4a040d6586b729e48a 21622ed6035279b2f84a8bf777e4f892696950ca ed29295d7a2cceccc574e6c4e0c39493fe3d37af 512f2c22e0f68bf4c7ea072f94dbbd9d7702c593 be16caa05a8607bc2ebab4063da3d3489d47a64a f52e4c23afccf62aa11137ab31ec2a7ecf43547a 25a216994d136dbf82eba357527b8910f99d52a7 bf230e175ec9214daa6f49c599570c1414703505 09cbe88a38c6bbbfc213bcdb0fd6a602c28fedcf c1763bc0cbaf911313f85509c8b71efa2125c4f7 45596fc20b25cdcb03f9a22fd9f89fad8cd65902,,option to set maximum throttle for recover anti turtle mode,sometimes we push the stick too much making the copter to recover way to much  = roll 360  so it will be nice if we may limit the maximum throttle of anti-turtle.
cleanflight/cleanflight,2982,2017-11-19T18:00:47Z,2017-11-19T18:02:57Z,FALSE,none,none,403,203,65420f0af80a1c9d526742113113a6eaf30fd67b 7549f9ed687a11b17233656a4864fd9aa28a2e8c 06728f360a051d9f8c49c7ac3dbe351563f41643 37608a05852bfe3766df92f7cded37191f9b8944 70e19317c6ea15a6c9b6de92a3be273d42597db5 2592f406c917c6b4ad28ba81888cf2111b9083d7 bb4f5736159ab7d3989c9ebc6aaad6c66c90f82b 8a471deddc65ae64ce11484e0bb4045644ad66b6 21f2433653ee48f4331fa23e1b2d8c4f206cda80 1aa8f7a46370528ec66eec8f072ad58bb4087e42 1b451cf192e46a7a691c0afc7807c3e4629a9746 6621ed9818bd8047edf341b81a891977886ed786 d449238c1b8dd963e136f277bd81eb3de3e9ac5f 8f3f350dabc6a72a1477fd2106ef71dcf4899502 fb3bc456e5fa1c3c92552359488d61321fe3b6d0 90f396349ef499660251c07b44d03840b7661a03 d597a9aea79733acdf6ca0e669bf2d0c043a76a0 dd492d1ba0d70eac649ebab015ff4cdf4709cd16 741ba570367c1823001a2006fb48b4da454ee68a 4c17ec8c2293e980ec9e9bf4d2fa19cff79a77ff 576d378b3e5a116bb2776bae0fdb1cb573fa6997 a75e71d0125f2ac03794886e86bcf6348f6a8312 800fc570d38a6b41a9e9a00718dbcf8939fc79cd 6f4bd2ac06d699bf9f582855da039dc2bb175b20 ee19138a3d1487a1cbb982a4ccd2edad4572e0eb b7c17151c1b3c9dabfd3452f893c49ec022ed356 d5fdb1a498644cfc79d5444ac675138968a77231 c9e96a6d7f7a827d5f7a31fe311e7fb0a383e7dd 88badf4643aa06ba4659577dc5024cd98058a64b 69d6c452916ef7011c1a3b7da09a0a3df3669c54 df6b2dc1bee7f637e278253a27d8c74d54f2c873 f8469ae40e0995276f49357155e57028d8e4e3c2 7269e97499a112aa97beb63f790e47968aacd6a6 c74814e0ce1edc55cd5efeda668f6697712673ab 62aff67535b3979e75a5b198c01f2d86a68e31c6 0d1479fdde99e8cf2875b46f57450ad143e215b8 478ebd5d64a19ff1fee9fa7355766c125d326541 196a049ad0264ab3b2bc806d592602109ed16460 62c5711ce774bc3a35ea52bc0900984bd2328249 a8d34dabb02188734c1f7109e7e752bbf748d69e d12263e08f4550e95ecf3b221969b71df58aa541 10557b81ee87c58e3bf4c9d8744b14a4b78a008e 9322f3f5d8f3ea78ba377ece02b7f23dd69d1200 24acffb4726fa5e7e739a1a199f595ddf1957483 7643e1cff0855460de933b443a5c03d96a511e2a 1ff9c27314c79a57dfc519f51f7e0359316cc007 bee86890c7b9f1c1fad3ba22d17781cabf904f60 12cdf0954a97e3a26765f73e559654f3430f2036 24a282a9a335c17ed828d76929dd7481dfc9ec0d e843c21fd06e2d7d22d30ea022a7bf0a75b11a48 591a0487dd5d08b7a6aed091d2101fd5420a3dbd c497b44b8397fdc7eb4a10808bcf541594049dc1 f7f925b2ccef8ced10fb2dbcdbe9153f8d08db56 75f999551945d86ded50344b6cd92d92ad509bc5 845b869f0cad876898a447fa7591f9618b014b0e 751a3307cb8709b988d0b96f2524a542dfb6a052 70ba36ca0ed566d9542b786b6da000cc2bd5c517 bbb8b6f6e1d064741e75a7493e52879392aa9f18 e9727b5313d8cf56151430c1bb7190eff5bdd2ca a9c3e1a7a73e39609f94d7f610c3403ccb558f61 116280f7e10c500b62a09bf3671e96c692673e7a 2a1b09f3ae954d96c5eadb7bcbbf19d1e315c8b6 7ddf1e856d61c6b8030dd20a09034fee74b8b6fd 10119d8d67bd32fcc7ca3988806310d9457988f6 800e44906d1cae4550ec0129f11944c7c1a1463e 71b060d7b4632bb2f2d0f48376e3c140dde3c1b7 7a6c4c0ebf1174e77b25565a32b4f450a9c9fea5 a9b4f621a9b49e12f7329ba2db745b1188091552 f4bb2f92bfe06948ab3d0aba0fe66fc86b3714d3 8945c96d92fc6d690093842893c45d5453435437 cd2fc5254dd5b0a29e0e013c58fe1adf1a67780e b78d8ad83e5b5239f214b07e3a33b566a74f66e2 884e58d0f586d21f9b2dd66b4b005ed1ab679229 e1a177a99829260e329698ff1a3ca82733109a92 7a57468c8cfb41a6af657ab0a90d5967a2caaa82 3873463fcf37dea0d6f381946e5f6be07f434a5d 037313f995fd5b876d7786baed4251d109c37e37 1877e2e0760de5c158373b4bb6fd20795157dc9d 9a5cefbfa3abb8f65d8da050dff82e9c107439cf 03b1f5f54cc35406d4ee9d6460705a9b684cca63 6f46ba74bd810eb4bd67bbc63b27c2ce4b34ba06 f87e768ce677063e0bb07aea279d945d76087c88 c866870df428bcbdbc6abc3c8daa10802e2cc91d e4b7b0f74b355b6ce14da12f6679d6ab38f4db79 94d6ab3f563ff3102d016880c72eeec5638d9866 97e9e9eed4dad75091228b494acaad2c6a0bbc2e cb154f8a246200341111b7bd29cf9756a89c9c4a 09d5a21daa024265a93f489369a488b997ea1541 8962f0af4041e4a30af475be69b34f12835fe236 d9caabefa11fd5025fba3ea036acc42de504da10 da507a971622ce72339d26ae538885f42e4d4f30 eadcf426501e20144a795cc333260ad093825f3d 0315005445828969535e472365dfafca83c792fc c97fbd04b8de5a073d241ffa70ac1ea08bff7f35 1b279d71394b19d7358dc8e4bb316aba06e63a4c f8c47f6751e63fc52bcdc05beb62a5c125872168 2bc0d5bc934e96784b71988fc32e5109423d6929 9a9884e4afe7f0535721cf157f21bab7cb82747e 243e8390a2047d4b239fb49501461cd34421173c 39727ce38438e41dd599fd5482f778ba42d8b711 3c12367c8409853ad041b9bea3a6c18ac178a991 e974f093555ddb5cece0094a314bbf839c539c7b b90f7bd88ef02a3c9d1fd974d7d50fb467d7eb66 364afcbf25e4ec7ec3632dd274e71c2efff542e9 224c69e0540b91cec25e669eee39a1285bb3dd50 cf29e0cec7feb76c3076d25efb7dbdbfbd36317a 9e48fb5f11d25f499753a73269bd35b2c388e7d8 a03b586eb89b38075309e0195d579d3622da2c95 9c77db811ba9469049d616d95296d36e3d4c97a6 8b334e5674f3a53ac2cd359d7ab2eb037d901dbb c1265dd0a55d7746f1f441cc05d621690022a16f 60bce27e66b846ba8cefda4247ed7641417dbb3d 228aec625355751cfe437b8a00090f43e20bbe7a 5f64bcfa09ec54cd3561ad135f03408e5f9b7bd0 3b765683970c60473c4640535d822fa6ae5d8e4a fd79424f0759c0c3e3b6aa86685f64dc26b0cdc7 0c8450633617fe79664b0f05c79aa65477c522a7 ed68e57d48da080a6a40509c9852e6fb8a22646f 1b6805b54262563459e115fafa6ce62f30bee0d6 01a78ef77f6b3b66ba13e72276ee85a36d5d7d93 b03781c9bb3004735bc2c8ac11e1575ea699c4f9 498042db472287ca2ffc426838cd90d886b4e95c a6529f2ea7b693042aa92965ba3c6d906c107d92 85a6389cb68938e29c7dfc3c197b3e43964a6589 968efb86bfe1f55ee05ceb5fd83826014e06c509 16c4cfed3cc7ff6d0336ff131badbc6ccb669d98 c539e6d62a787b082f674f9792991192b8b58a13 f13c3e28fc6367545593d1623abe9ba0a2a722e6 9a11263cc00c45f6e92704153b684bd4ad164782 c6b88e5d04a9385150d022dffc2ac15364af04db 2b497f58f7bb211d4a5010a857499983f29aa40c 41806636d60eb626372175f6f4987f3408c5c4a6 fc288174489a20aa67c4fe73e64d45d434d2d244 ba0d05a384f36ba10dea23d063ecd1a20cd5f124 1c5c7476c14f1c5fdcff262252c6fe9231916f8e 96c339cf4892cf3dc45aeef499b21b62b3fc0311 d35ff2f611f04af610398862ba9847b0bdcbb2d7 4e0c16855fa093cabf2ef04822c50d448a8428e8 c14da43e8e76d1c78bcab165bf9b803d75fcf7e8 391588958e4b8921acc48a2e13873e5d702ee066 f35ec19b1558beebc791ee6e945d0209246b9a41 0491eae52e8b7361f0e4ea553bddd88187a40849 a3256de079abcea75860c9735e0f3f61995619ba 12c052c103c7f7a3475e0a5b0cc7de2cc53c98b7 e3ee9a558877388a5fc90d14a024deb424603184 56ed140e330b6677d1cc7b30768cc1b86da88ecd 4d127d63278d6958cf3f2dae3fd50adae065cb67 84269be8a27f09be0ca45d85de78e3dd582d33c6 fbbe82591e20329b7878fd85b45bddc61679757b ff93445822cab2f5b1218dde6ece89e5009ffad0 d96f9ed2b7ee60c9591f13514adcec0ca4900b67 f5e25eb9b450080139c6acd5bb8efec87d872ed7 8044d08fb3540d05014be1830177ca61a0617222 d2199b999afade4875eb9725b3cefaad1b1cd948 8e0f32009c19e113ee91ca7e125099206db28f83 0e6040035059e96a0dc5babcb1bd695e18c2de2f e5e5846a74aa562deb76643967b6428fbeb7070b ab13abf98547cb9e4ba6585a7681277081e3720c 4819e7b8fa8801c0b78e61c6c4eaf2fd714a89e4 5e63724f7d56ce04ad1b823967a1858333816d45 03d1409fd273a6b68066e16848b46bd1466b2292 82969907742027c1c294101d5325218196277c44 9f2ade2506b537fc6f8ced822c96681a729601f6 fb7f0e1904eb7ac4a8203d8d1a28fe053ce8092b 877ac16b6051016ad132c24705440332ce596b0b 214ee1293378971416c9fd17c78b005a50de61bf bcbcd0b8ee75e958307b94602103cfe0cd2ac18e 36a0b476d3ae58fdcf5efc26a096d4451a00834d c431939552ab9e51296fdad9a7c7f478b874214a 07b47337dbc998f1b6eaaf154ad743b7c6d3890c 971abbd9f64c2e9504ec33c9c27246fdccc55ca2 eef170573d532830cea46053ae05a6f21560e0bf 0e1f0e89e756809b0d3a633397395469a8927ce7 2e8e515263ef455cf55a9ab614c44b60421bb66d 664f69ce8a3058597ac33d6c5b633b9fe6c80caf d32b1c341d193c60528cf68b1dd8163bb8b6fdf3 0331c1f2f675d7e08a611dcd93b9cb7e7ab216e9 9c9f02f550515c0cc9f32c7a27ad5a07a7736598 30045990da4947a16b8c7f34c9fafbc7afda0022 8bdb54728e069fb2a80ee314d52914e09bd413d3 440ed4f1c2630ea76b017240e31dfe440de028a4 ee92d1ede21027bda19f3dd2ffb93cc73ac3a683 75632daf6b9a570705590792851b30d0bc9ee32c 36957d60753deb1c434b2d6c7d0471e938ff8949 26b873dad90e44c9523696d30a8f23e13875ef3c f9de9ae1097cb456f51d9f7d142c9519207a14de 60a8f3a5b9644c9c7398d7ac1320f57cc81f2001 1ae797f12ff0bdffae005e3a44cdd44cc8187b1c ade394b6f5c6f5211fa968e52c09c030033004f4 92e203b106cd184aafede53076b1bdc6bd342a8f 69ff72e2e9715a11338a715725c3baf646570c29 cfc87d1891abac54ec70402d0e8e10e49323baff ea127885acde8e0cb341801aa35843e03a885ac7 cc9f254a670f478e9946289535100fa76bb7cee5 537ad7e47c3c9a718226a50cd1f98f1272cfd648 5eefc768d1e29354762041f50380666a949703ab a9105e88c4be2bdeca1e5f66ae99f104004934e6 34b48badb918efc63daf4ef6bb0fb3e1ffb3d817 5d9e6485c49398bc56b52635097582ddebadbc34 f308e7ac385f1d89485bb136605a865d177f7e9b e7d2e84348512768d93e5ada827c485cc08d16f0 2bb561aa61e1883c43ca70d6f16aab9a0bab570c fc632c131b58b19c661dac9fb90e71f7f45e319a,,GPS altitude course instead of baro mag in OSD,Sorry  i misplaced this PR. Should be in betaflight...    This PR is for those who like to have altitude/course via GPS information in OSD without having baro and mag.    Features (osd.c):  - If baro and mag aren't actually used  but GPS is running  the OSD can display corresponding data from the GPS receiver.  - Absolute GPS altitude in [0.1m] instead of baro driven relative altitude.  - GPS heading from trajectory instead of mag direction in compass bar.  - Direction to home from GPS course over ground vs. home position.      Features (gps.c):    - Adding an optional Airborne 2G setting as a compromise between the 4G (fast  less stable) and 1G (slow  stable) for custom builds.  - Adding ublox command to disable BeidDou and enable European Galileo satellites. This works on ublox M8M and M8N receivers.  Note: Most of the chineese "M8N"s are faked M8Ms without flash memory which cannot be permanently configured to Galileo reception. So this reconfiguration has to be done on each power up.  Result: Up to 26(!) satellites on free field are used after 15+ minutes of operation (including short power losses on LiPo change).  - GPS altitude is delivered with 0.1m (the native receiver) resolution. Note: The actual precision and stability is much worse (but why to cut the information?).      To be reviewed:    - Does the scaling change of the GPS altitude harm the navigation? My experience is that the "GPS Hold" and "Return to Home" functions do not work properly anymore. Strange things happen if you activate them during flight (fast drifts  dive towards ground). So I think no one uses them anymore (or have switched to INAV).  - GPS PIDs have some influence but i couldn't find a working set - even without my changes.  - Does "enabling Galileo" harm old ublox 6 or 5 generation receivers? I don't think so as unknown commands are ignored by the receiver.
cleanflight/cleanflight,2987,2017-12-14T21:10:29Z,2017-12-15T22:57:36Z,FALSE,none,none,678,326,037313f995fd5b876d7786baed4251d109c37e37 1877e2e0760de5c158373b4bb6fd20795157dc9d 9a5cefbfa3abb8f65d8da050dff82e9c107439cf 03b1f5f54cc35406d4ee9d6460705a9b684cca63 6f46ba74bd810eb4bd67bbc63b27c2ce4b34ba06 f87e768ce677063e0bb07aea279d945d76087c88 c866870df428bcbdbc6abc3c8daa10802e2cc91d e4b7b0f74b355b6ce14da12f6679d6ab38f4db79 94d6ab3f563ff3102d016880c72eeec5638d9866 97e9e9eed4dad75091228b494acaad2c6a0bbc2e cb154f8a246200341111b7bd29cf9756a89c9c4a 09d5a21daa024265a93f489369a488b997ea1541 8962f0af4041e4a30af475be69b34f12835fe236 d9caabefa11fd5025fba3ea036acc42de504da10 da507a971622ce72339d26ae538885f42e4d4f30 eadcf426501e20144a795cc333260ad093825f3d 0315005445828969535e472365dfafca83c792fc c97fbd04b8de5a073d241ffa70ac1ea08bff7f35 1b279d71394b19d7358dc8e4bb316aba06e63a4c f8c47f6751e63fc52bcdc05beb62a5c125872168 2bc0d5bc934e96784b71988fc32e5109423d6929 9a9884e4afe7f0535721cf157f21bab7cb82747e 243e8390a2047d4b239fb49501461cd34421173c 39727ce38438e41dd599fd5482f778ba42d8b711 3c12367c8409853ad041b9bea3a6c18ac178a991 e974f093555ddb5cece0094a314bbf839c539c7b b90f7bd88ef02a3c9d1fd974d7d50fb467d7eb66 364afcbf25e4ec7ec3632dd274e71c2efff542e9 224c69e0540b91cec25e669eee39a1285bb3dd50 cf29e0cec7feb76c3076d25efb7dbdbfbd36317a 9e48fb5f11d25f499753a73269bd35b2c388e7d8 a03b586eb89b38075309e0195d579d3622da2c95 9c77db811ba9469049d616d95296d36e3d4c97a6 8b334e5674f3a53ac2cd359d7ab2eb037d901dbb c1265dd0a55d7746f1f441cc05d621690022a16f 60bce27e66b846ba8cefda4247ed7641417dbb3d 228aec625355751cfe437b8a00090f43e20bbe7a 5f64bcfa09ec54cd3561ad135f03408e5f9b7bd0 3b765683970c60473c4640535d822fa6ae5d8e4a fd79424f0759c0c3e3b6aa86685f64dc26b0cdc7 0c8450633617fe79664b0f05c79aa65477c522a7 ed68e57d48da080a6a40509c9852e6fb8a22646f 1b6805b54262563459e115fafa6ce62f30bee0d6 01a78ef77f6b3b66ba13e72276ee85a36d5d7d93 b03781c9bb3004735bc2c8ac11e1575ea699c4f9 498042db472287ca2ffc426838cd90d886b4e95c a6529f2ea7b693042aa92965ba3c6d906c107d92 85a6389cb68938e29c7dfc3c197b3e43964a6589 968efb86bfe1f55ee05ceb5fd83826014e06c509 16c4cfed3cc7ff6d0336ff131badbc6ccb669d98 c539e6d62a787b082f674f9792991192b8b58a13 f13c3e28fc6367545593d1623abe9ba0a2a722e6 9a11263cc00c45f6e92704153b684bd4ad164782 c6b88e5d04a9385150d022dffc2ac15364af04db 2b497f58f7bb211d4a5010a857499983f29aa40c 41806636d60eb626372175f6f4987f3408c5c4a6 fc288174489a20aa67c4fe73e64d45d434d2d244 ba0d05a384f36ba10dea23d063ecd1a20cd5f124 1c5c7476c14f1c5fdcff262252c6fe9231916f8e 96c339cf4892cf3dc45aeef499b21b62b3fc0311 d35ff2f611f04af610398862ba9847b0bdcbb2d7 4e0c16855fa093cabf2ef04822c50d448a8428e8 c14da43e8e76d1c78bcab165bf9b803d75fcf7e8 391588958e4b8921acc48a2e13873e5d702ee066 f35ec19b1558beebc791ee6e945d0209246b9a41 0491eae52e8b7361f0e4ea553bddd88187a40849 a3256de079abcea75860c9735e0f3f61995619ba 12c052c103c7f7a3475e0a5b0cc7de2cc53c98b7 e3ee9a558877388a5fc90d14a024deb424603184 56ed140e330b6677d1cc7b30768cc1b86da88ecd 4d127d63278d6958cf3f2dae3fd50adae065cb67 84269be8a27f09be0ca45d85de78e3dd582d33c6 fbbe82591e20329b7878fd85b45bddc61679757b ff93445822cab2f5b1218dde6ece89e5009ffad0 d96f9ed2b7ee60c9591f13514adcec0ca4900b67 f5e25eb9b450080139c6acd5bb8efec87d872ed7 8044d08fb3540d05014be1830177ca61a0617222 d2199b999afade4875eb9725b3cefaad1b1cd948 8e0f32009c19e113ee91ca7e125099206db28f83 0e6040035059e96a0dc5babcb1bd695e18c2de2f e5e5846a74aa562deb76643967b6428fbeb7070b ab13abf98547cb9e4ba6585a7681277081e3720c 4819e7b8fa8801c0b78e61c6c4eaf2fd714a89e4 5e63724f7d56ce04ad1b823967a1858333816d45 03d1409fd273a6b68066e16848b46bd1466b2292 82969907742027c1c294101d5325218196277c44 9f2ade2506b537fc6f8ced822c96681a729601f6 fb7f0e1904eb7ac4a8203d8d1a28fe053ce8092b 877ac16b6051016ad132c24705440332ce596b0b 214ee1293378971416c9fd17c78b005a50de61bf bcbcd0b8ee75e958307b94602103cfe0cd2ac18e 36a0b476d3ae58fdcf5efc26a096d4451a00834d c431939552ab9e51296fdad9a7c7f478b874214a 07b47337dbc998f1b6eaaf154ad743b7c6d3890c 971abbd9f64c2e9504ec33c9c27246fdccc55ca2 eef170573d532830cea46053ae05a6f21560e0bf 0e1f0e89e756809b0d3a633397395469a8927ce7 2e8e515263ef455cf55a9ab614c44b60421bb66d 664f69ce8a3058597ac33d6c5b633b9fe6c80caf d32b1c341d193c60528cf68b1dd8163bb8b6fdf3 0331c1f2f675d7e08a611dcd93b9cb7e7ab216e9 9c9f02f550515c0cc9f32c7a27ad5a07a7736598 30045990da4947a16b8c7f34c9fafbc7afda0022 8bdb54728e069fb2a80ee314d52914e09bd413d3 440ed4f1c2630ea76b017240e31dfe440de028a4 ee92d1ede21027bda19f3dd2ffb93cc73ac3a683 75632daf6b9a570705590792851b30d0bc9ee32c 36957d60753deb1c434b2d6c7d0471e938ff8949 26b873dad90e44c9523696d30a8f23e13875ef3c f9de9ae1097cb456f51d9f7d142c9519207a14de 60a8f3a5b9644c9c7398d7ac1320f57cc81f2001 1ae797f12ff0bdffae005e3a44cdd44cc8187b1c ade394b6f5c6f5211fa968e52c09c030033004f4 92e203b106cd184aafede53076b1bdc6bd342a8f 69ff72e2e9715a11338a715725c3baf646570c29 cfc87d1891abac54ec70402d0e8e10e49323baff ea127885acde8e0cb341801aa35843e03a885ac7 cc9f254a670f478e9946289535100fa76bb7cee5 537ad7e47c3c9a718226a50cd1f98f1272cfd648 5eefc768d1e29354762041f50380666a949703ab a9105e88c4be2bdeca1e5f66ae99f104004934e6 86373122a1ed708f90052cb28fbf81d3113447b1 34b48badb918efc63daf4ef6bb0fb3e1ffb3d817 5d9e6485c49398bc56b52635097582ddebadbc34 f308e7ac385f1d89485bb136605a865d177f7e9b e7d2e84348512768d93e5ada827c485cc08d16f0 2bb561aa61e1883c43ca70d6f16aab9a0bab570c fc632c131b58b19c661dac9fb90e71f7f45e319a 5924eb83cfa70ce100896c2a163214fb2b2d9dbf d22b01b5ecf7aa30868f2ba1d58bf92ab4c2dbf5 9564fab82303902f4a6050ee0c7341935c6a1ad9 417acc8f013950a64b28d58fa300190860ac956c cd15de9824a84d71585f7f71212c9d6292813c67 5c0bba565ad41c2e1b9ae3c03c4cddad6fee6835 6e54ce83a6646eba2bcba7e7537bd7754fa8b0ba 89702650e2281b2b2034f5efd47c41525c238140 b3a0d0e6cf142852e36f9b92965d04b5d440cde2 b7d9cbdeaa8867f9f57a5a09ec6c71c4f343b717 c6044f2ee77c0ff2f32062a9a973ea7cd68bb533 8a8466ab591202cd78d2216a6138b73c4bd10e1d dcdf7dd872497b8bd5633d673c3d7e625a64ce05 d4d342ef4a53c4e6f456ee96802a59af07dee45f 3d965ba64f748bd8e0bdab10e78bbfc1c85971a4 ecabd778f0ea1899e91db5aa901354ba687b07cf f35aa9702332e3a28ad2b8a50098bd81e278aa99 e0eccadc8a1084401e8b580062f558800e1e9852 b49f20fd8dd37a5fae7aee150ea8e75e44dfe48f 608d56160d927d70e6a931fc53b6836322887f9e fd7663ed07bfdf3f17f40fadf14eb965ca5ec6ab 0f90664e1c8d4b61f333652505a3ac0f13ac5809 647b6c9a68a2d78fa6726fa69e94f288e6418b65 be7c8e384e3ff3aec4f77e341f7d88f9778bb7b4 20d9359de9e74fafd1058782dd25ad296c3a41c6 0a34f0e774b47da42e26e3ba02d19af43e03504d f8b18a9a6944c2efd75e071a74093c5d3e00ae4d 5ada20087469a222bf0b2a2e263fd384ca4bbbc2 f527455d34aa8060e4e6bbdf4c3a156b1a6f7440 f26d461dd687331e1880740d17007c8758bdee97 aacb788a1bec94ef5ae18df18d1eef0213694fb7 ed04a1f24a4f186eff37562bfe5cea718905811a 91fff0a6dd74ba30147cd4350de91d951f406a03 cdcb139c78d38d4e8acd71fa3b209b7c5d9fadb1 4476921cac2084387b8afc8c8e229a93d4d0f70b cfca75204f723b9c44d93e81a80a8b46fa516f9a b6c3a9f19a2307762f4e01957484cae04c3361a6 8cb7abd15f424e82f192980fdbaeff0f71ec6adf 9e06c65fc16464a86614ac6c3aa2f63d0939eacb 8f4bb77758662f9050edb4c413603f2423a54976 4b412e9aecc7e486368599e69cb5b542ea798411 fd534037e4bfd1c74c7c733f7bfe2c11b8dd01de 381c24bd552d50c5a2000a4d5e5d129a56d299c9 04f00ea513a651b0ecd43bdca27688c7a20f9046 7f8f9067d0b2693cd832c37abda7423663b5a4e1 30f31525251fd08f69e61dad1ce454d630851de1 0a7d2412e1b4f657edaa7923a9b89feb43b50537 0d89fce800053122e43345d80906349a0aff2d87 b13e73c9bbdc81f134f33036ecdc4050944f1c10 772a73ff052a38e968ce5e6456ec3f64ffdc6c79 fe7cfbdc309602ead41c261177413b3a20f5ab1b dd57149e0220ad8240139e8c0680b938908ce153 6da0a2129287ee07a7172c79901a4d93e212700a d6a4b5d99cf1c2d7d40a9051634347f48770bd33 d3d5b107cc47537e0838a97db5b4be12ddd08a72 209be419cbe6f42c55d6ff4816b0334b43c5dcc4 d3a0e18a0cdc319f128ad344c7153add48e474d4 568b0ac764f06647a03a46a3ccda97327d9e3452 5fee45b7047385bf71217b75990d2ee29f26160b d3c0a4ae0a5a3f8585049393ace562580e952e74 22c672fa7d487cf7ec395ef1b1f1e2c1ece1fbff 6936ba6dabd896cdffd362aaa1ceba1c10229509 4d30971e2d2a85de637a058fc51c67ce4e40c4b9 a0c672ba69c953e09e3164ba9e0dbb25c0985d53 59f8ee0d1598868a7189cc961d33caa721216a1d d3a6b3730f93eb61c162829a9d0e46bd5dbc830d 4162112ddc9eb6018fbb066325d8ec64b624fac5 94d3549299dc49485fe448157682e6338d8c89c8 c0b1572175e2309e5fa2225c2403d48917500301 07855aaf12337a9992aaafb519ee6b985ba62ed7 7be1d09e500f94ca9c21cd11315afda2905f1fb1 1482439bbe32520bfed93946580a0f5699926aa2 96b8189e608d494787731187a63676f569518629 2614d708f669984f859ebf13d6d0f9b53278f7d8 f0cf65467b60f03e8243437bc868b155a4c6753e 4525a20ec96bb1f2e8d6a67418a083b6d29ae434 a72a46c6044006f7d1bbef0ddb207cdf5177081b 81e4be377378304fc94653bec949e3ea1dc656f8 39efc9ab1daaa67dc4784a5afb461c162b8aeb56 bfe9fdad390876ce0ca7dacc5e2d12b982c090f4 5a52643055ea23c262fae7c33c29d19763916d38 ce345a8446ef635d294b1177ac16998eee49f2ee 471484291c4e1ad1e18065b1218a7f67584a2854 ccb4f77ae260dee1cb3a1a6de160264024d2c6b7 d6d70d5a7493a46df763e799f794b78836641c05 9060ecb302a4350ac1b072278968f5480614a5f6 42cfc886dff163559f34516546252b33545dcbfe e178d2b956b9d655add6e251c7742fb570e422aa dd3a40f036692cbbaad3279187eb84a0a3c710fa d0a77bc9177b9858f5368aa98cc06221548f6b55 e1cba01f26db3dcb1dc447c378e1fe3d89a63ff5 756795721c6d93a64752df5abdfb795c531c8def c6672622b88e47c432ba462eac2cc0a53c30e3a8 bd1413839b49aa7a0679cdbf13a871187ca565f2 299f2565c07fad08e3fa78c705f4064d5893caa6 97a46aa0e92d3e5e6f7ca2cc62c4d7f1e4ef53f8 bfe416a9798f5c6f0be0f7255b0d9191770dc9d5 d666151188599e1e40862dfb928aa89cb5006b23 442906f23bb54e524676a2be86c6240994ce36e1 49ba30174b2c2b24ff3e78672fe3429686845342 6e5ad5d210e6a27197ec3cb5edb47a29adf20506 bb79830f03847af4c3f1407e7f416a1d890b0ac2 d68757c914ef7edd17917f54f8c16750edb26c5e c8bf35ec4d725d5f8f3bc3ac1c2c71bcf5314eeb db014752d7a593fafef3f630d34a70dd011564d0 b948936109ca57349819813f54ede88fd18334fa e9922218487f04300339266022528b667e9e9dfc e42d74926a398cbe23c23bac2bb5c7df0779e1e3 a91d2fdbc60805093f8b34948b357921edd48189 9a8a604f59af16b0f9b414f33055ddfda08a6413 3401197b9f02e1fecb3e378b17c37960e42a9a25 75c5bb98f21d80a48a2ac476e8426c0f97fb0c60 4f14ad0e50ad3184ee624e39f4114af3bf3ba73a 625f083a3fb7cbc4bf26b0492cfaef265aac3099 b9272ae325f58df123a7a04840822e58455ca53e f9feb03a93d73b8aec325e9b8b668062dbe11bf7 a4be564669e75ff24d377090d3e7051a174cd9b8 54f5df3ca08742e91da764c98803e53148b0495c eb4425face0665c840f1cf0c493b2cf27e1ba704 f49009beb85cb574231535e3147653cdf8650371 8d13b064c8fa97356423c2fbfe31508e5907e2ff a0f6d10b724870c77a9782adf71dd204e4663cc8,,Need help in creating Addon for FPV Lasertag on Planes Betaflight,Hi guys    thank you for developing betaflight. It's just awesome to use it with my racecopters.  As there are fixed wing models available in BF setup  I thought about adding a FC to a fixed wing for stabilization. During the last week  I've heard about "dogfights" with lasertag systems on rc planes in a video by FliteTest and thought about better solutions. In their edition  after being hit the motor shut off for some seconds. They used FPV  but without any information about the lasertag (ammo  live points etc) Nice would be if it could be integrated into a FC (to make it easier and save weight for extra controllers). Displaying hits  ammo left and live points in the OSD would be awesome.  Furthermore  you could switch off (after being hit) not only the motor but randomly any servo of the plane for some seconds and even integrate a safety switch to prevent crashes into the ground (to prevent endangering people nearby) but for that loosing live points.   Unfortunately  I haven't got enough programming skills (just some basic knowledge in Java and Arduino programming).   Could you please help me?   Thanks  moiakaefer
cleanflight/cleanflight,2991,2017-12-21T14:47:44Z,2017-12-21T15:18:49Z,FALSE,none,none,766,366,0c8450633617fe79664b0f05c79aa65477c522a7 ed68e57d48da080a6a40509c9852e6fb8a22646f 1b6805b54262563459e115fafa6ce62f30bee0d6 01a78ef77f6b3b66ba13e72276ee85a36d5d7d93 b03781c9bb3004735bc2c8ac11e1575ea699c4f9 498042db472287ca2ffc426838cd90d886b4e95c a6529f2ea7b693042aa92965ba3c6d906c107d92 85a6389cb68938e29c7dfc3c197b3e43964a6589 968efb86bfe1f55ee05ceb5fd83826014e06c509 16c4cfed3cc7ff6d0336ff131badbc6ccb669d98 c539e6d62a787b082f674f9792991192b8b58a13 f13c3e28fc6367545593d1623abe9ba0a2a722e6 9a11263cc00c45f6e92704153b684bd4ad164782 c6b88e5d04a9385150d022dffc2ac15364af04db 2b497f58f7bb211d4a5010a857499983f29aa40c 41806636d60eb626372175f6f4987f3408c5c4a6 fc288174489a20aa67c4fe73e64d45d434d2d244 ba0d05a384f36ba10dea23d063ecd1a20cd5f124 1c5c7476c14f1c5fdcff262252c6fe9231916f8e 96c339cf4892cf3dc45aeef499b21b62b3fc0311 d35ff2f611f04af610398862ba9847b0bdcbb2d7 4e0c16855fa093cabf2ef04822c50d448a8428e8 c14da43e8e76d1c78bcab165bf9b803d75fcf7e8 391588958e4b8921acc48a2e13873e5d702ee066 f35ec19b1558beebc791ee6e945d0209246b9a41 0491eae52e8b7361f0e4ea553bddd88187a40849 a3256de079abcea75860c9735e0f3f61995619ba 12c052c103c7f7a3475e0a5b0cc7de2cc53c98b7 e3ee9a558877388a5fc90d14a024deb424603184 56ed140e330b6677d1cc7b30768cc1b86da88ecd 4d127d63278d6958cf3f2dae3fd50adae065cb67 84269be8a27f09be0ca45d85de78e3dd582d33c6 fbbe82591e20329b7878fd85b45bddc61679757b ff93445822cab2f5b1218dde6ece89e5009ffad0 d96f9ed2b7ee60c9591f13514adcec0ca4900b67 f5e25eb9b450080139c6acd5bb8efec87d872ed7 8044d08fb3540d05014be1830177ca61a0617222 d2199b999afade4875eb9725b3cefaad1b1cd948 8e0f32009c19e113ee91ca7e125099206db28f83 0e6040035059e96a0dc5babcb1bd695e18c2de2f e5e5846a74aa562deb76643967b6428fbeb7070b ab13abf98547cb9e4ba6585a7681277081e3720c 4819e7b8fa8801c0b78e61c6c4eaf2fd714a89e4 5e63724f7d56ce04ad1b823967a1858333816d45 03d1409fd273a6b68066e16848b46bd1466b2292 82969907742027c1c294101d5325218196277c44 9f2ade2506b537fc6f8ced822c96681a729601f6 fb7f0e1904eb7ac4a8203d8d1a28fe053ce8092b 877ac16b6051016ad132c24705440332ce596b0b 214ee1293378971416c9fd17c78b005a50de61bf bcbcd0b8ee75e958307b94602103cfe0cd2ac18e 36a0b476d3ae58fdcf5efc26a096d4451a00834d c431939552ab9e51296fdad9a7c7f478b874214a 07b47337dbc998f1b6eaaf154ad743b7c6d3890c 971abbd9f64c2e9504ec33c9c27246fdccc55ca2 eef170573d532830cea46053ae05a6f21560e0bf 0e1f0e89e756809b0d3a633397395469a8927ce7 2e8e515263ef455cf55a9ab614c44b60421bb66d 664f69ce8a3058597ac33d6c5b633b9fe6c80caf d32b1c341d193c60528cf68b1dd8163bb8b6fdf3 0331c1f2f675d7e08a611dcd93b9cb7e7ab216e9 9c9f02f550515c0cc9f32c7a27ad5a07a7736598 30045990da4947a16b8c7f34c9fafbc7afda0022 8bdb54728e069fb2a80ee314d52914e09bd413d3 440ed4f1c2630ea76b017240e31dfe440de028a4 ee92d1ede21027bda19f3dd2ffb93cc73ac3a683 75632daf6b9a570705590792851b30d0bc9ee32c 36957d60753deb1c434b2d6c7d0471e938ff8949 26b873dad90e44c9523696d30a8f23e13875ef3c f9de9ae1097cb456f51d9f7d142c9519207a14de 60a8f3a5b9644c9c7398d7ac1320f57cc81f2001 1ae797f12ff0bdffae005e3a44cdd44cc8187b1c ade394b6f5c6f5211fa968e52c09c030033004f4 92e203b106cd184aafede53076b1bdc6bd342a8f 69ff72e2e9715a11338a715725c3baf646570c29 cfc87d1891abac54ec70402d0e8e10e49323baff ea127885acde8e0cb341801aa35843e03a885ac7 cc9f254a670f478e9946289535100fa76bb7cee5 537ad7e47c3c9a718226a50cd1f98f1272cfd648 5eefc768d1e29354762041f50380666a949703ab a9105e88c4be2bdeca1e5f66ae99f104004934e6 86373122a1ed708f90052cb28fbf81d3113447b1 34b48badb918efc63daf4ef6bb0fb3e1ffb3d817 5d9e6485c49398bc56b52635097582ddebadbc34 f308e7ac385f1d89485bb136605a865d177f7e9b e7d2e84348512768d93e5ada827c485cc08d16f0 2bb561aa61e1883c43ca70d6f16aab9a0bab570c fc632c131b58b19c661dac9fb90e71f7f45e319a 5924eb83cfa70ce100896c2a163214fb2b2d9dbf d22b01b5ecf7aa30868f2ba1d58bf92ab4c2dbf5 9564fab82303902f4a6050ee0c7341935c6a1ad9 417acc8f013950a64b28d58fa300190860ac956c cd15de9824a84d71585f7f71212c9d6292813c67 5c0bba565ad41c2e1b9ae3c03c4cddad6fee6835 6e54ce83a6646eba2bcba7e7537bd7754fa8b0ba 89702650e2281b2b2034f5efd47c41525c238140 b3a0d0e6cf142852e36f9b92965d04b5d440cde2 b7d9cbdeaa8867f9f57a5a09ec6c71c4f343b717 c6044f2ee77c0ff2f32062a9a973ea7cd68bb533 8a8466ab591202cd78d2216a6138b73c4bd10e1d dcdf7dd872497b8bd5633d673c3d7e625a64ce05 d4d342ef4a53c4e6f456ee96802a59af07dee45f 3d965ba64f748bd8e0bdab10e78bbfc1c85971a4 ecabd778f0ea1899e91db5aa901354ba687b07cf f35aa9702332e3a28ad2b8a50098bd81e278aa99 e0eccadc8a1084401e8b580062f558800e1e9852 b49f20fd8dd37a5fae7aee150ea8e75e44dfe48f 608d56160d927d70e6a931fc53b6836322887f9e fd7663ed07bfdf3f17f40fadf14eb965ca5ec6ab 0f90664e1c8d4b61f333652505a3ac0f13ac5809 647b6c9a68a2d78fa6726fa69e94f288e6418b65 be7c8e384e3ff3aec4f77e341f7d88f9778bb7b4 20d9359de9e74fafd1058782dd25ad296c3a41c6 0a34f0e774b47da42e26e3ba02d19af43e03504d f8b18a9a6944c2efd75e071a74093c5d3e00ae4d 5ada20087469a222bf0b2a2e263fd384ca4bbbc2 f527455d34aa8060e4e6bbdf4c3a156b1a6f7440 f26d461dd687331e1880740d17007c8758bdee97 aacb788a1bec94ef5ae18df18d1eef0213694fb7 ed04a1f24a4f186eff37562bfe5cea718905811a 91fff0a6dd74ba30147cd4350de91d951f406a03 cdcb139c78d38d4e8acd71fa3b209b7c5d9fadb1 4476921cac2084387b8afc8c8e229a93d4d0f70b cfca75204f723b9c44d93e81a80a8b46fa516f9a b6c3a9f19a2307762f4e01957484cae04c3361a6 8cb7abd15f424e82f192980fdbaeff0f71ec6adf 9e06c65fc16464a86614ac6c3aa2f63d0939eacb 8f4bb77758662f9050edb4c413603f2423a54976 4b412e9aecc7e486368599e69cb5b542ea798411 fd534037e4bfd1c74c7c733f7bfe2c11b8dd01de 381c24bd552d50c5a2000a4d5e5d129a56d299c9 04f00ea513a651b0ecd43bdca27688c7a20f9046 7f8f9067d0b2693cd832c37abda7423663b5a4e1 30f31525251fd08f69e61dad1ce454d630851de1 0a7d2412e1b4f657edaa7923a9b89feb43b50537 0d89fce800053122e43345d80906349a0aff2d87 b13e73c9bbdc81f134f33036ecdc4050944f1c10 772a73ff052a38e968ce5e6456ec3f64ffdc6c79 fe7cfbdc309602ead41c261177413b3a20f5ab1b dd57149e0220ad8240139e8c0680b938908ce153 6da0a2129287ee07a7172c79901a4d93e212700a d6a4b5d99cf1c2d7d40a9051634347f48770bd33 d3d5b107cc47537e0838a97db5b4be12ddd08a72 209be419cbe6f42c55d6ff4816b0334b43c5dcc4 d3a0e18a0cdc319f128ad344c7153add48e474d4 568b0ac764f06647a03a46a3ccda97327d9e3452 5fee45b7047385bf71217b75990d2ee29f26160b d3c0a4ae0a5a3f8585049393ace562580e952e74 22c672fa7d487cf7ec395ef1b1f1e2c1ece1fbff 6936ba6dabd896cdffd362aaa1ceba1c10229509 4d30971e2d2a85de637a058fc51c67ce4e40c4b9 a0c672ba69c953e09e3164ba9e0dbb25c0985d53 59f8ee0d1598868a7189cc961d33caa721216a1d d3a6b3730f93eb61c162829a9d0e46bd5dbc830d 4162112ddc9eb6018fbb066325d8ec64b624fac5 94d3549299dc49485fe448157682e6338d8c89c8 c0b1572175e2309e5fa2225c2403d48917500301 07855aaf12337a9992aaafb519ee6b985ba62ed7 7be1d09e500f94ca9c21cd11315afda2905f1fb1 1482439bbe32520bfed93946580a0f5699926aa2 96b8189e608d494787731187a63676f569518629 2614d708f669984f859ebf13d6d0f9b53278f7d8 f0cf65467b60f03e8243437bc868b155a4c6753e 4525a20ec96bb1f2e8d6a67418a083b6d29ae434 a72a46c6044006f7d1bbef0ddb207cdf5177081b 81e4be377378304fc94653bec949e3ea1dc656f8 39efc9ab1daaa67dc4784a5afb461c162b8aeb56 bfe9fdad390876ce0ca7dacc5e2d12b982c090f4 5a52643055ea23c262fae7c33c29d19763916d38 ce345a8446ef635d294b1177ac16998eee49f2ee 471484291c4e1ad1e18065b1218a7f67584a2854 ccb4f77ae260dee1cb3a1a6de160264024d2c6b7 d6d70d5a7493a46df763e799f794b78836641c05 9060ecb302a4350ac1b072278968f5480614a5f6 42cfc886dff163559f34516546252b33545dcbfe e178d2b956b9d655add6e251c7742fb570e422aa dd3a40f036692cbbaad3279187eb84a0a3c710fa d0a77bc9177b9858f5368aa98cc06221548f6b55 e1cba01f26db3dcb1dc447c378e1fe3d89a63ff5 756795721c6d93a64752df5abdfb795c531c8def c6672622b88e47c432ba462eac2cc0a53c30e3a8 bd1413839b49aa7a0679cdbf13a871187ca565f2 299f2565c07fad08e3fa78c705f4064d5893caa6 97a46aa0e92d3e5e6f7ca2cc62c4d7f1e4ef53f8 bfe416a9798f5c6f0be0f7255b0d9191770dc9d5 d666151188599e1e40862dfb928aa89cb5006b23 442906f23bb54e524676a2be86c6240994ce36e1 49ba30174b2c2b24ff3e78672fe3429686845342 6e5ad5d210e6a27197ec3cb5edb47a29adf20506 bb79830f03847af4c3f1407e7f416a1d890b0ac2 d68757c914ef7edd17917f54f8c16750edb26c5e c8bf35ec4d725d5f8f3bc3ac1c2c71bcf5314eeb db014752d7a593fafef3f630d34a70dd011564d0 b948936109ca57349819813f54ede88fd18334fa e9922218487f04300339266022528b667e9e9dfc e42d74926a398cbe23c23bac2bb5c7df0779e1e3 a91d2fdbc60805093f8b34948b357921edd48189 9a8a604f59af16b0f9b414f33055ddfda08a6413 3401197b9f02e1fecb3e378b17c37960e42a9a25 75c5bb98f21d80a48a2ac476e8426c0f97fb0c60 4f14ad0e50ad3184ee624e39f4114af3bf3ba73a 625f083a3fb7cbc4bf26b0492cfaef265aac3099 b9272ae325f58df123a7a04840822e58455ca53e f9feb03a93d73b8aec325e9b8b668062dbe11bf7 a4be564669e75ff24d377090d3e7051a174cd9b8 54f5df3ca08742e91da764c98803e53148b0495c eb4425face0665c840f1cf0c493b2cf27e1ba704 bcd5752a12f5c24bbe18db85944bca51eba08717 f49009beb85cb574231535e3147653cdf8650371 8d13b064c8fa97356423c2fbfe31508e5907e2ff a0f6d10b724870c77a9782adf71dd204e4663cc8 725f0dfa26fa71bee749fb47ceb9e1942bf78756 12640972a921944b954d90b47c951ab5cf60a6c8 2526b1ab80fa915b508b66a34445ad77877d0b4f cfc0dcf0361c9a95ca6cc00b8f5048d186b80098 5892cac45d9e799613bfd77912455b2fe0b5dfbc a33a82725e45d29d591ba1d48410f0adcbd90d73 59a6055cdf4ecf22669aa9622094260744ea854c 6f8b17d1d4a7e5b4f099f90bb862e26524cb7ae4 d4d5c50fe25f2f7c6cb78a489ed74be69a7c4884 7a7f1ceda5e88c47c4df349c84f99c79d38e06ab 0153b1d369f1bf9246aaea1e801e250197bc5228 de5b0d53ffff22037a1d96409aa88ffcf51423ce ed30e9f5c7ff77b44f30462c867efd5f88c12fa6 8b4bfc345db0ba178d8b2cd8d6f7b2eee540a918 81ebdb38b6dda49fa75326e5a21e9e674a23383d 5bfd5107abb23e115825d8b123708219c0c8d075 cbee16f6c3262f9786a97d04ef4887e38f69bc6c 82e289c1ebf554b4230939d613f44e144279c66b c3de899d47a7add5447c135e4a968b1c4fa5a344 b26ff88fd93e6f480da4af7f66da747d7d6495e8 379382036fb6c8fab6d89694e9c8d01df5ebccb9 ddf0246ecdbe6308f143c3d22fec91baf0f3ac86 b94533ead1a2810105eb1d6f7e75afad02091053 3b3ed72be8c7f64d0400c9ab2b6f6a394d2f837c 5048c741305276c2cd37b207a15e8cfb8feb9b2f ec0444b92a71f64070a1c1ad266d4ec896e5fd66 74672972ba46fd58e8e301e55424748ebc601204 23b31736b7abb849eef4c29673ec3fbd845216b3 3e2ade85651b1a0b4c2bbe5d243a08c9090497fc db8c7e047749b4942f06576109541f263fcc7086 b924ac0c9ceb772d4f544834a8700df126506f5c b489d0ba9de4be577320940cdb83a38ec916a9db 8a9fd29dd310c8a870c7518d182b93e3b649e08c 11c47c631b1c762c6478fde2bc53f09374f431be 03a4426fe1d2de16a0622da605a0ae517c268197 6ec0b55c95430bd7bf3d3c445e2dc9f87d24c8a4 d67e3e88a3799aa06b59207aedfc8f348f4e5359 2df7b820376fb32ac1562947fc6385aa23b627a6 6ed62b57617cbb7f51437b3dec04524b1006c29a,,Change OSD to show gps alt and less lat long precision in OSD,opened in error
cleanflight/cleanflight,1937,2016-03-08T19:09:24Z,2017-02-25T16:55:37Z,FALSE,none,50289f228c290914a674ec97a5184bfb0780f3a6,38,11,962105e44bf317e0517a8acb43592a039144f0ca 21979ffbb36e4bec57a1be9727fd150b312ddb2d b1826427135f17d11c882dcc75189f0c97305bc6 b5773b9f4e0076ea0b66329cdbba2eb553c9ecfd d57ae77a5f39b813b006f809e621b112bf92df42 f3a29004b898a05617e09239ea8f07ffc710a375 d3dbdcfca9c78aeb496d6b56a6ee13128bdf5e02 93f53846f5e074675d9cd784f5a949ced7dad476 65e292462e40dd058533b89ce0293d05eb1f88bb fd14a00e3417be756f39183e4f099069ec6430ca 6443cda8dcb2480031ca2e75e122e806686011b3,Enhancement,Support for Crazepony MINI flight controller and NRF24L01 transceiver,This PR addresses issue https://github.com/cleanflight/cleanflight/issues/1936 and issue https://github.com/cleanflight/cleanflight/issues/1935 .  This submission is a joint effort by @goebish and @martinbudden  @goebish provided 1. Crazepony MINI port of Cleanflight 2. NRF24L01 device driver 3. V202 transmitter protocol for NRF24L01 4. SPI implementation for CJMCU flight controller  @martinbudden provided: 1. Merge of code into latest version of Cleanflight 2. Some additional NRF24L01 device driver utility functions 3. SymaX  SymaX5C and Cheerson CX10 transmitter protocols for NFR24L01 4. Framework to allow setting of NRF24L01 transmitter protocol 5. Testcode  NRF24L01 receiver code and transmitter protocols are all under build `#define`s that can be set in the `target.h` file  so there is no ROM cost to other flight controllers.  The V202 transmitter protocol allows Cleanflight to be used withwith WLtoys V2x2 transmitters. These are cheaply available for under Â£20.  The SymaX and SymaX5C transmitter protocols allow Cleanflight to be used with Syma transmitters. These are cheaply available for under Â£20.  The CX10 transmitter protocol allows Cleanflight to be used with Cheerson CX10 transmitters.  With any of these protocols a Walker Devo transmitter with Deviationtx software and NRF24L01 modification could be used.  Note SPRACINGF3EVO target has been removed (temporarily) from `Makefile` since the SPRACINGF3EVO build is currently broken (see issue https://github.com/cleanflight/cleanflight/issues/1919).
cleanflight/cleanflight,3016,2018-02-19T15:49:15Z,2018-03-02T13:21:13Z,TRUE,2018-03-02T13:21:13Z,577ab435d1be61898c2d97ff5b08342271d6b426,40,1,d03ee10de5437f9d2aaad502cc041b81794111ec,,Add support for SPRacingF7DUAL,Adds SPRacingF7DUAL target including various F7 tweaks  dual gyro support.    Note: The code has been continually rebased since around May 2017 and as such the commits probably need squashing before the merge.
cleanflight/cleanflight,3036,2018-03-29T20:35:49Z,2018-03-30T20:03:56Z,TRUE,2018-03-30T20:03:56Z,53d9de0efe1f82dc4374721f905a9e74ec34c9e9,13,8,bca6d2008ef9c6d1b25b986a35abc160cc13d66f a4f4c42df7f0b77d009222420927a0a5c3ba87c2 9065195feeb18469fe6240674180695c06411fd6 564d96ca1e2b5baea609661771bb5f497f2b5ab1 de5bde88cbe5659c3b43749b326f9fe3859287fe 26b9db3c37248ccf0268f133af480bb8fc870306 83623f38e474d9524edd69c444ff87881316945e b5b4d519244d56e1a023e32db2a9818453e36ccc,,PID Audio feature,Allows you to HEAR the PID controller working by generating an audio signal using the DAC.
cleanflight/cleanflight,3037,2018-03-29T20:40:25Z,2018-03-29T23:05:53Z,TRUE,2018-03-29T23:05:53Z,1bd436abbd4987d085a4d6e10c5cdeaedf652c2b,2201,1,66441d85388ce7df27965e868172630280fa7f30,,CF BF Update DSP_Lib and STM32F7 Drivers CMSIS to CMSIS 5 3 0 5431,* CF/BF - Update DSP_Lib and STM32F7/Drivers/CMSIS to CMSIS 5.3.0.    CMSIS 5.3.0 - https://github.com/ARM-software/CMSIS_5/releases/tag/5.3.0    * relocate driver files from lib/main/CMSIS/CM* to lib/main/STM32xx  folders    * Move DSP folder inside CM5.    It came from the same source as the other files inside CM5    * Remove the CM5 folder and move the files in it one level up.
cleanflight/cleanflight,3039,2018-04-03T18:00:54Z,2018-04-03T19:36:44Z,TRUE,2018-04-03T19:36:44Z,2a4fb5d6eaa0b3268d701b2877060047bcfcaf9f,13,2,14de6f7fdd272ea382dddfcc989ad8b48b9f71f3 e966ef3ae8eeb89fb0870b992210a7f5f5952c79,,CF BF Add support for IR Transponder on STM32F7 boards,Tested on SPRacingF7DUAL with an iLAP receiver.    Note  most IO initialisation code ported from the ws281x hal led strip driver just like the original transponder driver for standard peripheral library was based on the ws281x code.
cleanflight/cleanflight,792,2015-04-18T10:37:48Z,2017-02-25T16:55:33Z,FALSE,none,eeab0dc19670c62b65415ae4032e90c3b140c374,21,4,b43f85fbabaf7d8664777d65a3dc4b9f5b990e3c 17c945db83b8540f3bdc2353b2481b1d38668ef6 fa3368217b8bad41e2a13d91f86e096e9e29a7e1 0e2165b51d48715b4e29b5a8623ecc4a4cee14e7,Enhancement,Configuration Allow configuration using on screen menus HoTT and OLED,Here is a proposal of an interactive procedure for setting Cleanflight parameters directly through your TX. This first approach only concerns the Graupner Hott system as based on their Hott Text-Mode protocol which allows a bi-directionnal dialog between the firmware (Cleanflight) and the transmitter.  As shown on the pictures below  this procedure includes two main pages from which one can access more specific pages containing informations and editable parameters as found in the Cleanflight-Configurator.  While there is no limit for this choice and presentation of data (other than memory space)  all CLI parameters are not in these pages. I selected only some of them for illustration and considering what should be easily changed on the field without needing a connection to the configurator.  As usual  the Inc/Dec  Prev/Next arrows and Set/Esc buttons of the TX are used for selecting and setting every current parameter to a new value directly applied to Cleanflight (and saved in EEPROM if desired).  At this point (with 2 Â« selection Â» and 13+ Â« parameters Â» pages)  I did my best to make the code as compact as possible but it takes about 12 Kb of flash memory. Always possible to change/remove some pages  reorganize the choice and presentation of parameters  find a cheapest structure for coding  other ideas..  IMHO it would be fine for other than Graupner users to enjoy this facility on their TX but such an adaptation requires an opened communication protocol and structure. What about OpenTX for Taranis users ?  I thank you for any comments and ideas. ![hott textmode p1](https://cloud.githubusercontent.com/assets/8274225/7215100/9571d86e-e5c7-11e4-8e9d-20020d94b1d6.jpg) ![hott textmode p2](https://cloud.githubusercontent.com/assets/8274225/7215106/a0c203c4-e5c7-11e4-94a2-4808fff858db.jpg)
cleanflight/cleanflight,2897,2017-07-18T08:43:31Z,2019-01-10T11:20:54Z,FALSE,none,103c36bd4690dde59af2647697828590fbe0625d,1,1,ce735bd95fcaa104ef76725a74b9a5e2d5b4702c,Experimental,Initial commit to build docs using markdown pdf,gimli and support tools seem to be unmaintained and don't work on latest OSX.
cleanflight/cleanflight,3100,2020-06-05T17:03:33Z,2020-06-05T18:18:05Z,TRUE,2020-06-05T18:18:05Z,956cc0c0581bd582f287cd3c9ccd62d1d7b33a97,1,1,b1c1ffcbf9b275e5150c0da8751d965dcb84229e,,Create variably named files as an additional make step,Some developers use external tools that require fixed filenames  e.g. `obj/some-file.bin`.    Recently the git commit revision  or `_norevision` is added to the filenames  so they become e.g. `obj/some-file_revision.bin`.  This means that the external tools either fail to find the files  or the tools must also be changed and passed the revision number as an argument  this is infeasible  impractical and sometimes impossible.    The reason that the git commit revision or `_norevision` was added to the filenames was so that users know what commit the firmware is built from  this is especially handy for testers and users giving early feedback of test builds.    This PR keeps both developers and users happy  since now when doing a normal build both sets of files are created.  e.g.  `obj/some-file.bin` and `obj/some-file_revision.bin`.    It *might* be an idea to move the files with the revision number into a `dist` or `release` folder  as the norm these days when packaging/releasing files.  This can be done as a separate PR if-required.
cleanflight/cleanflight,3099,2020-06-05T16:56:22Z,2020-06-05T18:17:40Z,TRUE,2020-06-05T18:17:40Z,6103cbf79d4f41f5394ced8a444cfcbb7685217d,1,1,9f610fc1642ca813f6be7ff9b2d3734443a47a47,,Fix SREC creation,Looks like it's been broken for a while now.
cleanflight/cleanflight,3107,2020-06-28T11:33:57Z,2020-07-01T13:43:56Z,TRUE,2020-07-01T13:43:56Z,79733d04eb048237cd5c4f7b99f9927bb2863db7,2,1,951ee2f5f8ddd2d34a5e2f392aafb3cc7d3bb731,,Provide a way for users to easily create custom target headers,To build a custom target:    * create YOUR_TARGET.mk file  empty.  * create YOUR_TARGET.h file  empty.  * in YOUR_TARGET.h file  add '#include "target.h"` as required.  * in YOUR_TARGET.h file  `#undef`/`#define` whatever you like.  * Compile with `make TARGET=YOUR_TARGET`.  * Flash the generated `obj\cleanflight_x.x.x_YOUR_TARGET.hex`  e.g.    ```  SPRACINGF3NEO_CUSTOM1.h  SPRACINGF3NEO_CUSTOM1.mk  make TARGET=SPRACINGF3NEO_CUSTOM1  ```    For a more complete example  see this commit:    https://github.com/hydra/cleanflight/commit/9b16fc0be9152a996fbbd6aa5600173b57f4c6e2    * Handy when the code compiles  but no longer fits in flash due to all the  different hardware support compiled in by default.  * Useful when you need custom binaries  but don't want your changes interfering with the base target files.
cleanflight/cleanflight,2554,2016-12-29T10:52:15Z,2017-02-25T16:55:38Z,FALSE,none,ca3206107de335893ee7fa5c336be5b13bedfe09,17,1,3ce419fe5e6a148c53744cf10efd3c6aa557d25f,,Combine ibus serial rx and telemetry,It's now possible to combine the serial rx and ibus telemetry on the sam fc uart on a single pin.    I'm combining the ibus ports of the FS-iA6B receiver with a diode and a resistor.    ```  +---------+  | FS-iA6B |  |         |  | Ser RX  |---|<---\       +------------+  |         |        |       | FC         |  | Sensor  |---[R]--*-------| SerialTX   |  +---------+                +------------+  ```    R = 10Kohm  Diode 1N4148 or similar.    ![2016-12-19 22 27 41](https://cloud.githubusercontent.com/assets/6065378/21365422/98982d5c-c6f5-11e6-9e36-3a51d7ca699b.jpg)    Both uart tx and rx channels are used so it's not possible to use the spare pin for rx of something else.    Discussion and how to connect here: https://github.com/cleanflight/cleanflight/issues/2545